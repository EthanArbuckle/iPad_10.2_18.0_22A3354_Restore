float sub_239872ACC(_DWORD *a1, uint64_t a2, float **a3, _BYTE **a4)
{
  float *v4;
  _BYTE *v5;
  unsigned int v6;
  _BYTE *v7;
  float *v8;
  unsigned int v9;
  unsigned int v10;
  float result;

  v4 = *a3;
  v5 = *a4;
  if (a1[8])
  {
    v6 = 0;
    do
    {
      v7 = v5;
      v8 = v4;
      if (a1[5])
      {
        v9 = 0;
        v8 = v4;
        v7 = v5;
        do
        {
          *v7 = (int)*v8;
          v7[1] = (int)v8[1];
          v7[2] = (int)v8[2];
          v8 += a1[6];
          v7 += a1[7];
          ++v9;
        }
        while (v9 < a1[5]);
      }
      *v7 = (int)*v8;
      v7[1] = (int)v8[1];
      v7[2] = (int)v8[2];
      v4 += a1[9];
      v5 += a1[10];
      ++v6;
    }
    while (v6 < a1[8]);
  }
  if (a1[5])
  {
    v10 = 0;
    do
    {
      *v5 = (int)*v4;
      v5[1] = (int)v4[1];
      v5[2] = (int)v4[2];
      v4 += a1[6];
      v5 += a1[7];
      ++v10;
    }
    while (v10 < a1[5]);
  }
  *v5 = (int)*v4;
  v5[1] = (int)v4[1];
  result = v4[2];
  v5[2] = (int)result;
  return result;
}

uint64_t sub_239872BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double ****v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (double ****)&v28;
    sub_239872EA0(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239872E3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239872EA0(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    sub_239873044(&v25, (float **)v32, a1, v13, v19);
  }
}

void sub_239873044(_DWORD *a1, float **a2, double *****a3, float *a4, float *a5)
{
  unsigned int v10;
  unsigned int v11;
  float *v12;
  float *v13;
  double ***v14;
  double v15;
  double **v16;
  double **v17;
  double v18;
  double v19;
  double v20;
  double ***v21;
  double **v22;
  double **v23;
  double v24;
  double v25;
  double v26;
  double ***v27;
  double **v28;
  double **v29;
  double v30;
  double v31;
  double v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  float *v36;
  float *v37;
  float *v38;

  if (a1[8])
  {
    v10 = 0;
    do
    {
      v37 = a5;
      v38 = a4;
      *a2 = a4;
      a2[2] = a5;
      if (a1[5])
      {
        v11 = 0;
        v12 = a5;
        v13 = a4;
        do
        {
          *a2 = v13;
          a2[2] = v12;
          v14 = **a3;
          v15 = *v13;
          v16 = *v14;
          v17 = v14[1];
          v18 = (v15 - **v16) * *v16[1];
          v19 = fmax(v18, 0.0);
          if (v18 <= 1.0)
            v20 = v19;
          else
            v20 = 1.0;
          *(_BYTE *)v12 = llround(**v17 + v20 * *v17[1]);
          v21 = **a3;
          v23 = *v21;
          v22 = v21[1];
          v24 = ((*a2)[1] - **v23) * *v23[1];
          v25 = fmax(v24, 0.0);
          if (v24 <= 1.0)
            v26 = v25;
          else
            v26 = 1.0;
          *((_BYTE *)a2[2] + 1) = llround(**v22 + v26 * *v22[1]);
          v27 = **a3;
          v29 = *v27;
          v28 = v27[1];
          v30 = ((*a2)[2] - **v29) * *v29[1];
          v31 = fmax(v30, 0.0);
          if (v30 <= 1.0)
            v32 = v31;
          else
            v32 = 1.0;
          *((_BYTE *)a2[2] + 2) = llround(**v28 + v32 * *v28[1]);
          v33 = a1[5];
          v13 = &v38[a1[6]];
          v12 = (float *)((char *)v37 + a1[7]);
          v37 = v12;
          v38 = v13;
          ++v11;
        }
        while (v11 < v33);
      }
      sub_23987329C((uint64_t)a1, a2, a3, &v38, &v37);
      a4 += a1[9];
      a5 = (float *)((char *)a5 + a1[10]);
      ++v10;
    }
    while (v10 < a1[8]);
  }
  v37 = a5;
  v38 = a4;
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v34 = 0;
    do
    {
      sub_23987329C((uint64_t)a1, a2, a3, &v38, &v37);
      v35 = a1[5];
      v36 = &v38[a1[6]];
      v37 = (float *)((char *)v37 + a1[7]);
      v38 = v36;
      ++v34;
    }
    while (v34 < v35);
  }
  sub_23987329C((uint64_t)a1, a2, a3, &v38, &v37);
}

double sub_23987329C(uint64_t a1, float **a2, double *****a3, float **a4, float **a5)
{
  float *v5;
  float *v6;
  double ***v7;
  double v8;
  double **v9;
  double **v10;
  double v11;
  double v12;
  double v13;
  char v14;
  double ***v15;
  double **v16;
  double **v17;
  double v18;
  double v19;
  double v20;
  double ***v21;
  double **v22;
  double **v23;
  double v24;
  double v25;
  double v26;
  double result;

  v5 = *a4;
  *a2 = *a4;
  v6 = *a5;
  v7 = **a3;
  v8 = *v5;
  v9 = *v7;
  v10 = v7[1];
  v11 = (v8 - **v9) * *v9[1];
  v12 = fmax(v11, 0.0);
  if (v11 <= 1.0)
    v13 = v12;
  else
    v13 = 1.0;
  v14 = llround(**v10 + v13 * *v10[1]);
  a2[2] = v6;
  *(_BYTE *)v6 = v14;
  v15 = **a3;
  v17 = *v15;
  v16 = v15[1];
  v18 = ((*a2)[1] - **v17) * *v17[1];
  v19 = fmax(v18, 0.0);
  if (v18 <= 1.0)
    v20 = v19;
  else
    v20 = 1.0;
  *((_BYTE *)a2[2] + 1) = llround(**v16 + v20 * *v16[1]);
  v21 = **a3;
  v23 = *v21;
  v22 = v21[1];
  v24 = ((*a2)[2] - **v23) * *v23[1];
  v25 = fmax(v24, 0.0);
  if (v24 <= 1.0)
    v26 = v25;
  else
    v26 = 1.0;
  result = **v22 + v26 * *v22[1];
  *((_BYTE *)a2[2] + 2) = llround(result);
  return result;
}

uint64_t sub_2398733B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1132396544;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_23987346C(a1, a2, (uint64_t)v8);
}

uint64_t sub_23987346C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_239873714(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398736B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239873714(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    sub_2398738B8(&v25, (uint64_t)v32, a1, v13, v19);
  }
}

void sub_2398738B8(_DWORD *a1, uint64_t a2, uint64_t **a3, float *a4, float *a5)
{
  int v10;
  int v11;
  float *v12;
  float *v13;
  _BYTE *v14;
  unsigned int v15;
  uint64_t v16;
  float v17;
  int v18;
  uint64_t v19;
  float v20;
  _BYTE *v21;
  uint64_t v22;
  float v23;
  unsigned int v24;
  unsigned int v25;
  float *v26;
  float *v27;
  float *v28;

  if (a1[8])
  {
    v10 = 0;
    while (1)
    {
      v27 = a5;
      v28 = a4;
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      if (a1[5])
        break;
LABEL_3:
      sub_239873AEC((uint64_t)a1, (float **)a2, a3, &v28, &v27);
      a4 += a1[9];
      a5 = (float *)((char *)a5 + a1[10]);
      if (++v10 >= a1[8])
        goto LABEL_24;
    }
    v11 = 0;
    v12 = a5;
    v13 = a4;
    while (1)
    {
      *(_QWORD *)a2 = v13;
      *(_QWORD *)(a2 + 16) = v12;
      v16 = **a3;
      v17 = *v13;
      if (*v13 >= **(float **)v16)
      {
        if (v17 <= **(float **)(v16 + 16))
          v18 = (int)v17;
        else
          LOBYTE(v18) = **(_BYTE **)(v16 + 24);
      }
      else
      {
        LOBYTE(v18) = **(_BYTE **)(v16 + 8);
      }
      *(_BYTE *)v12 = v18;
      v19 = **a3;
      v20 = *(float *)(*(_QWORD *)a2 + 4);
      if (v20 < **(float **)v19)
        break;
      if (v20 > **(float **)(v19 + 16))
      {
        v21 = *(_BYTE **)(v19 + 24);
        goto LABEL_18;
      }
      LODWORD(v21) = (int)v20;
LABEL_20:
      *(_BYTE *)(*(_QWORD *)(a2 + 16) + 1) = (_BYTE)v21;
      v22 = **a3;
      v23 = *(float *)(*(_QWORD *)a2 + 8);
      if (v23 < **(float **)v22)
      {
        v14 = *(_BYTE **)(v22 + 8);
      }
      else
      {
        if (v23 <= **(float **)(v22 + 16))
        {
          LODWORD(v14) = (int)v23;
          goto LABEL_8;
        }
        v14 = *(_BYTE **)(v22 + 24);
      }
      LOBYTE(v14) = *v14;
LABEL_8:
      *(_BYTE *)(*(_QWORD *)(a2 + 16) + 2) = (_BYTE)v14;
      v15 = a1[5];
      v13 = &v28[a1[6]];
      v12 = (float *)((char *)v27 + a1[7]);
      v27 = v12;
      v28 = v13;
      if (++v11 >= v15)
        goto LABEL_3;
    }
    v21 = *(_BYTE **)(v19 + 8);
LABEL_18:
    LOBYTE(v21) = *v21;
    goto LABEL_20;
  }
LABEL_24:
  v27 = a5;
  v28 = a4;
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  if (a1[5])
  {
    v24 = 0;
    do
    {
      sub_239873AEC((uint64_t)a1, (float **)a2, a3, &v28, &v27);
      v25 = a1[5];
      v26 = &v28[a1[6]];
      v27 = (float *)((char *)v27 + a1[7]);
      v28 = v26;
      ++v24;
    }
    while (v24 < v25);
  }
  sub_239873AEC((uint64_t)a1, (float **)a2, a3, &v28, &v27);
}

void sub_239873AEC(uint64_t a1, float **a2, uint64_t **a3, float **a4, float **a5)
{
  float *v5;
  float *v6;
  uint64_t v7;
  float v8;
  uint64_t v9;
  float v10;
  _BYTE *v11;
  float *v12;
  uint64_t v13;
  float v14;

  v5 = *a4;
  *a2 = *a4;
  v6 = *a5;
  a2[2] = *a5;
  v7 = **a3;
  v8 = *v5;
  if (*v5 >= **(float **)v7)
  {
    if (v8 <= **(float **)(v7 + 16))
      LODWORD(v7) = (int)v8;
    else
      LOBYTE(v7) = **(_BYTE **)(v7 + 24);
  }
  else
  {
    LOBYTE(v7) = **(_BYTE **)(v7 + 8);
  }
  *(_BYTE *)v6 = v7;
  v9 = **a3;
  v10 = (*a2)[1];
  if (v10 < **(float **)v9)
  {
    v11 = *(_BYTE **)(v9 + 8);
LABEL_10:
    LOBYTE(v11) = *v11;
    goto LABEL_12;
  }
  if (v10 > **(float **)(v9 + 16))
  {
    v11 = *(_BYTE **)(v9 + 24);
    goto LABEL_10;
  }
  LODWORD(v11) = (int)v10;
LABEL_12:
  *((_BYTE *)a2[2] + 1) = (_BYTE)v11;
  v12 = a2[2];
  v13 = **a3;
  v14 = (*a2)[2];
  if (v14 >= **(float **)v13)
  {
    if (v14 <= **(float **)(v13 + 16))
      *((_BYTE *)v12 + 2) = (int)v14;
    else
      *((_BYTE *)v12 + 2) = **(_BYTE **)(v13 + 24);
  }
  else
  {
    *((_BYTE *)v12 + 2) = **(_BYTE **)(v13 + 8);
  }
}

double sub_239873BF8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239872278(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEDB98;
  sub_239859828((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239873D0C(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239873CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239873CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239873D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEAAC8;
  sub_23985B93C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEB10[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2398302E4(a2, (uint64_t)(a4 + 1));
}

void sub_239873DF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239873E0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239873E20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BA08C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239873E34(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239873E7C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239873E44(uint64_t **a1, uint64_t a2)
{
  return sub_239874B1C(**a1, (*a1)[1], a2);
}

uint64_t sub_239873E54(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_239873FA8(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239873E7C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  double v6;
  int v7;
  double v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v9 = -65536;
    goto LABEL_14;
  }
  v5 = 1.0;
  a4.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = *(double *)(a3 + 24);
  if (v6 < 0.0)
    v6 = 0.0;
  v7 = (int)v6;
  v8 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v8 = *(double *)(a3 + 32);
  v9 = v7 | ((int)v8 << 16);
LABEL_14:
  v10 = (unsigned __int16)v9;
  v11 = HIWORD(v9);
  if (a4.n128_f32[0] == (float)v10 && v5 == (float)v11)
    return sub_239873FA8(a1, a2, (uint64_t)v16, a4);
  v20 = a4.n128_f32[0];
  v18 = (double)v10;
  v19 = 1.0 / (v5 - a4.n128_f32[0]);
  a4.n128_f64[0] = (double)v11 - (double)v10;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = v16;
  v14[1] = v15;
  return sub_239874520(a1, a2, (uint64_t)v14, a4);
}

uint64_t sub_239873FA8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239874250((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398741EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_239874250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2398743F4(&v26, (float **)v33, a1, v13, v19);
  }
  return result;
}

float sub_2398743F4(_DWORD *a1, float **a2, uint64_t a3, float *a4, float *a5)
{
  unsigned int v5;
  float v6;
  int v7;
  int v8;
  float *v9;
  float *v10;
  uint64_t v11;
  uint64_t v12;
  float v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  float v17;
  int v18;
  float result;

  if (a1[8])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = a1[5];
      v9 = a5;
      v10 = a4;
      if (v8)
      {
        v11 = 4 * a1[6];
        v12 = 2 * a1[7];
        v9 = a5;
        v10 = a4;
        do
        {
          v13 = v10[1];
          *(_WORD *)v9 = (int)*v10;
          *((_WORD *)v9 + 1) = (int)v13;
          *((_WORD *)v9 + 2) = (int)v10[2];
          v10 = (float *)((char *)v10 + v11);
          v9 = (float *)((char *)v9 + v12);
          --v8;
        }
        while (v8);
      }
      v6 = v10[1];
      v7 = (int)*v10;
      *a2 = v10;
      a2[2] = v9;
      *(_WORD *)v9 = v7;
      *((_WORD *)v9 + 1) = (int)v6;
      *((_WORD *)v9 + 2) = (int)v10[2];
      a4 += a1[9];
      a5 = (float *)((char *)a5 + 2 * a1[10]);
      ++v5;
    }
    while (v5 < a1[8]);
  }
  *a2 = a4;
  a2[2] = a5;
  v14 = a1[5];
  if (v14)
  {
    v15 = 4 * a1[6];
    v16 = 2 * a1[7];
    do
    {
      v17 = a4[1];
      *(_WORD *)a5 = (int)*a4;
      *((_WORD *)a5 + 1) = (int)v17;
      *((_WORD *)a5 + 2) = (int)a4[2];
      a4 = (float *)((char *)a4 + v15);
      a5 = (float *)((char *)a5 + v16);
      --v14;
    }
    while (v14);
  }
  *a2 = a4;
  a2[2] = a5;
  v18 = (int)a4[1];
  *(_WORD *)a5 = (int)*a4;
  *((_WORD *)a5 + 1) = v18;
  result = a4[2];
  *((_WORD *)a5 + 2) = (int)result;
  return result;
}

uint64_t sub_239874520(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2398747C8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239874764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398747C8(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2398749B0(&v27, (float **)v34, a1, v13, v19);
        v13 += v33;
        v19 = (float *)((char *)v19 + 2 * HIDWORD(v33));
      }
    }
    return sub_2398749B0(&v27, (float **)v34, a1, v13, v19);
  }
  return result;
}

double sub_2398749B0(_DWORD *a1, float **a2, double *****a3, float *a4, float *a5)
{
  int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  __int16 v20;
  double v21;
  __int16 v22;
  double v23;
  double v24;
  double v25;
  float v26;
  double v27;
  BOOL v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  if (v5)
  {
    v13 = 4 * a1[6];
    v14 = 2 * a1[7];
    do
    {
      v15 = v10 * (*a4 - v9);
      v16 = fmax(v15, 0.0);
      if (v15 <= 1.0)
        v17 = v16;
      else
        v17 = 1.0;
      v18 = v10 * (a4[1] - v9);
      v19 = fmax(v18, 0.0);
      v20 = llround(v11 + v12 * v17);
      if (v18 <= 1.0)
        v21 = v19;
      else
        v21 = 1.0;
      v22 = llround(v11 + v12 * v21);
      v23 = v10 * (a4[2] - v9);
      *(_WORD *)a5 = v20;
      v24 = fmax(v23, 0.0);
      if (v23 <= 1.0)
        v25 = v24;
      else
        v25 = 1.0;
      *((_WORD *)a5 + 1) = v22;
      *((_WORD *)a5 + 2) = llround(v11 + v12 * v25);
      a4 = (float *)((char *)a4 + v13);
      a5 = (float *)((char *)a5 + v14);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = a4[1];
  v27 = v10 * (*a4 - v9);
  v28 = v27 <= 1.0;
  v29 = fmax(v27, 0.0);
  if (!v28)
    v29 = 1.0;
  *(_WORD *)a5 = llround(v11 + v12 * v29);
  v30 = v10 * (v26 - v9);
  v31 = fmax(v30, 0.0);
  if (v30 <= 1.0)
    v32 = v31;
  else
    v32 = 1.0;
  *((_WORD *)a5 + 1) = llround(v11 + v12 * v32);
  v33 = v10 * (a4[2] - v9);
  v34 = fmax(v33, 0.0);
  if (v33 <= 1.0)
    v35 = v34;
  else
    v35 = 1.0;
  result = v11 + v12 * v35;
  *((_WORD *)a5 + 2) = llround(result);
  return result;
}

uint64_t sub_239874B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  __int16 v10;
  __int16 v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1199570688;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_239874BD4(a1, a2, (uint64_t)v8);
}

uint64_t sub_239874BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_239874E7C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239874E18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t **sub_239874E7C(uint64_t **result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t **v10;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_239875064(&v26, (float **)v33, v10, v13, v19);
        v13 += v32;
        v19 = (float *)((char *)v19 + 2 * HIDWORD(v32));
      }
    }
    return (uint64_t **)sub_239875064(&v26, (float **)v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_239875064(_DWORD *result, float **a2, uint64_t **a3, float *a4, float *a5)
{
  int v5;
  uint64_t v6;
  float v7;
  uint64_t v8;
  uint64_t v9;
  _WORD *v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  v6 = **a3;
  v7 = **(float **)v6;
  if (v5)
  {
    v8 = 4 * result[6];
    v9 = 2 * result[7];
    do
    {
      while (1)
      {
        v11 = *a4;
        if (*a4 < v7)
          break;
        if (v11 <= **(float **)(v6 + 16))
        {
          *(_WORD *)a5 = (int)v11;
          v12 = a4[1];
          if (v12 < v7)
            goto LABEL_14;
        }
        else
        {
          *(_WORD *)a5 = **(_WORD **)(v6 + 24);
          v12 = a4[1];
          if (v12 < v7)
            goto LABEL_14;
        }
LABEL_10:
        if (v12 <= **(float **)(v6 + 16))
        {
          *((_WORD *)a5 + 1) = (int)v12;
          v13 = a4[2];
          if (v13 >= v7)
            goto LABEL_17;
        }
        else
        {
          *((_WORD *)a5 + 1) = **(_WORD **)(v6 + 24);
          v13 = a4[2];
          if (v13 >= v7)
            goto LABEL_17;
        }
LABEL_3:
        v10 = *(_WORD **)(v6 + 8);
LABEL_4:
        *((_WORD *)a5 + 2) = *v10;
        a4 = (float *)((char *)a4 + v8);
        a5 = (float *)((char *)a5 + v9);
        if (!--v5)
          goto LABEL_20;
      }
      *(_WORD *)a5 = **(_WORD **)(v6 + 8);
      v12 = a4[1];
      if (v12 >= v7)
        goto LABEL_10;
LABEL_14:
      *((_WORD *)a5 + 1) = **(_WORD **)(v6 + 8);
      v13 = a4[2];
      if (v13 < v7)
        goto LABEL_3;
LABEL_17:
      if (v13 > **(float **)(v6 + 16))
      {
        v10 = *(_WORD **)(v6 + 24);
        goto LABEL_4;
      }
      *((_WORD *)a5 + 2) = (int)v13;
      a4 = (float *)((char *)a4 + v8);
      a5 = (float *)((char *)a5 + v9);
      --v5;
    }
    while (v5);
  }
LABEL_20:
  *a2 = a4;
  a2[2] = a5;
  v14 = *a4;
  if (*a4 >= v7)
  {
    if (v14 <= **(float **)(v6 + 16))
    {
      *(_WORD *)a5 = (int)v14;
      v15 = a4[1];
      if (v15 < v7)
        goto LABEL_29;
    }
    else
    {
      *(_WORD *)a5 = **(_WORD **)(v6 + 24);
      v15 = a4[1];
      if (v15 < v7)
        goto LABEL_29;
    }
  }
  else
  {
    *(_WORD *)a5 = **(_WORD **)(v6 + 8);
    v15 = a4[1];
    if (v15 < v7)
    {
LABEL_29:
      *((_WORD *)a5 + 1) = **(_WORD **)(v6 + 8);
      v16 = a4[2];
      if (v16 < v7)
        goto LABEL_30;
      goto LABEL_32;
    }
  }
  if (v15 <= **(float **)(v6 + 16))
  {
    *((_WORD *)a5 + 1) = (int)v15;
    v16 = a4[2];
    if (v16 < v7)
      goto LABEL_30;
  }
  else
  {
    *((_WORD *)a5 + 1) = **(_WORD **)(v6 + 24);
    v16 = a4[2];
    if (v16 < v7)
    {
LABEL_30:
      *((_WORD *)a5 + 2) = **(_WORD **)(v6 + 8);
      return result;
    }
  }
LABEL_32:
  if (v16 <= **(float **)(v6 + 16))
    *((_WORD *)a5 + 2) = (int)v16;
  else
    *((_WORD *)a5 + 2) = **(_WORD **)(v6 + 24);
  return result;
}

double sub_2398752A0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239872278(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEDD18;
  sub_23985BDE4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398753B4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23987537C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239875398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398753B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEABC0;
  sub_23985E784(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEB28[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239830F44(a2, (uint64_t)(a4 + 1));
}

void sub_2398754A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398754B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398754C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BACD4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398754DC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239875524(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398754EC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398762A8(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398754FC(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23987566C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239875524(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  float v5;
  double v6;
  unsigned __int16 v11;
  double v12;
  unsigned int v14;
  double v20;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    _Q0.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      _Q0.n128_u64[0] = *(_QWORD *)a3;
    _Q0.n128_f32[0] = _Q0.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v5 = 1.0;
  _Q0.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v6 = *(double *)(a3 + 24);
  _S2 = v6;
  __asm { FCVT            H2, S2 }
  v11 = LOWORD(_S2);
  v12 = 65504.0;
  if (*(double *)(a3 + 32) <= 65504.0)
    v12 = *(double *)(a3 + 32);
  _S2 = v12;
  __asm { FCVT            H2, S2 }
  v14 = v11 | (LOWORD(_S2) << 16);
LABEL_14:
  _H2 = v14;
  _S3 = HIWORD(v14);
  __asm
  {
    FCVT            S4, H2
    FCVT            S5, H3
  }
  if (_Q0.n128_f32[0] == _S4 && v5 == _S5)
    return sub_23987566C(a1, a2, (uint64_t)v25, _Q0);
  v29 = _Q0.n128_f32[0];
  v20 = 1.0 / (v5 - _Q0.n128_f32[0]);
  __asm { FCVT            D0, H2 }
  v27 = _Q0.n128_u64[0];
  v28 = v20;
  __asm { FCVT            D1, H3 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_239875BAC(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_23987566C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = sub_239875914((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398758B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 sub_239875914@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  _WORD *v30;
  int *v31;
  int *v32;
  _WORD *v33;
  int v34;
  __int16 result;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    _ZF = v3 == 0;
  else
    _ZF = 1;
  if (!_ZF && v4 != 0)
  {
    v9 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v13 = *(unsigned int *)(a3 + 48);
    v12 = *(unsigned int *)(a3 + 52);
    v14 = *(int **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(int **)(a2 + 24);
    }
    v20 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_WORD **)(a3 + 24);
    }
    v26 = v3 - 1;
    v27 = 2 * v13;
    v28 = 4 * v11;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          _S0 = *v14;
          __asm { FCVT            H0, S0 }
          *v20 = _S0;
          _S0 = v14[1];
          __asm { FCVT            H0, S0 }
          v20[1] = _S0;
          _S0 = v14[2];
          __asm { FCVT            H0, S0 }
          v20[2] = _S0;
          v20 += v12;
          v14 += v10;
          --v9;
        }
        while (v9);
      }
      else
      {
        v29 = 0;
        v30 = v20 + 2;
        v31 = v14 + 2;
        do
        {
          v32 = v31;
          v33 = v30;
          v34 = v3 - 1;
          do
          {
            _S0 = *(v32 - 2);
            __asm { FCVT            H0, S0 }
            *(v33 - 2) = _S0;
            _S0 = *(v32 - 1);
            __asm { FCVT            H0, S0 }
            *(v33 - 1) = _S0;
            _S0 = *v32;
            __asm { FCVT            H0, S0 }
            *v33 = _S0;
            v33 = (_WORD *)((char *)v33 + v27);
            v32 = (int *)((char *)v32 + v28);
            --v34;
          }
          while (v34);
          _S0 = *(v32 - 2);
          __asm { FCVT            H0, S0 }
          *(v33 - 2) = _S0;
          _S0 = *(v32 - 1);
          __asm { FCVT            H0, S0 }
          *(v33 - 1) = _S0;
          _S0 = *v32;
          __asm { FCVT            H0, S0 }
          *v33 = _S0;
          v14 += v10;
          v20 += v12;
          ++v29;
          v30 += v12;
          v31 += v10;
        }
        while (v29 != v9);
      }
    }
    if (v3 != 1)
    {
      do
      {
        _S0 = *v14;
        __asm { FCVT            H0, S0 }
        *v20 = _S0;
        _S0 = v14[1];
        __asm { FCVT            H0, S0 }
        v20[1] = _S0;
        _S0 = v14[2];
        __asm { FCVT            H0, S0 }
        v20[2] = _S0;
        v20 = (_WORD *)((char *)v20 + v27);
        v14 = (int *)((char *)v14 + v28);
        --v26;
      }
      while (v26);
    }
    _S0 = *v14;
    __asm { FCVT            H0, S0 }
    *v20 = _S0;
    _S0 = v14[1];
    __asm { FCVT            H0, S0 }
    v20[1] = _S0;
    _S0 = v14[2];
    __asm { FCVT            H0, S0 }
    v20[2] = result;
  }
  return result;
}

uint64_t sub_239875BAC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_239875E54(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239875DF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239875E54(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_23987603C(&v27, (float **)v34, a1, v13, v19);
        v13 += v33;
        v19 = (float *)((char *)v19 + 2 * HIDWORD(v33));
      }
    }
    *(_QWORD *)&result = sub_23987603C(&v27, (float **)v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_23987603C@<H0>(_DWORD *a1@<X0>, float **a2@<X1>, double *****a3@<X2>, float *a4@<X3>, float *a5@<X4>)
{
  unsigned int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double ***v17;
  double **v18;
  double **v19;
  double v20;
  double v21;
  double v22;
  double ***v24;
  double **v25;
  double **v26;
  double v27;
  double v28;
  double v29;
  double ***v31;
  double **v32;
  double **v33;
  double v34;
  double v35;
  double v36;
  double ***v38;
  double **v39;
  double **v40;
  double v41;
  double v42;
  double v43;
  double ***v45;
  double **v46;
  double **v47;
  double v48;
  double v49;
  double v50;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v6 = **a3;
      v8 = *v6;
      v7 = v6[1];
      v9 = (*a4 - **v8) * *v8[1];
      v10 = fmax(v9, 0.0);
      if (v9 <= 1.0)
        v11 = v10;
      else
        v11 = 1.0;
      _S2 = **v7 + v11 * *v7[1];
      __asm { FCVT            H2, S2 }
      *(_WORD *)a5 = LOWORD(_S2);
      v17 = **a3;
      v19 = *v17;
      v18 = v17[1];
      v20 = ((*a2)[1] - **v19) * *v19[1];
      v21 = fmax(v20, 0.0);
      if (v20 <= 1.0)
        v22 = v21;
      else
        v22 = 1.0;
      _S2 = **v18 + v22 * *v18[1];
      __asm { FCVT            H2, S2 }
      *((_WORD *)a2[2] + 1) = LOWORD(_S2);
      v24 = **a3;
      v26 = *v24;
      v25 = v24[1];
      v27 = ((*a2)[2] - **v26) * *v26[1];
      v28 = fmax(v27, 0.0);
      if (v27 <= 1.0)
        v29 = v28;
      else
        v29 = 1.0;
      _S2 = **v25 + v29 * *v25[1];
      __asm { FCVT            H2, S2 }
      *((_WORD *)a2[2] + 2) = LOWORD(_S2);
      a4 += a1[6];
      a5 = (float *)((char *)a5 + 2 * a1[7]);
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v31 = **a3;
  v33 = *v31;
  v32 = v31[1];
  v34 = (*a4 - **v33) * *v33[1];
  v35 = fmax(v34, 0.0);
  if (v34 <= 1.0)
    v36 = v35;
  else
    v36 = 1.0;
  _S0 = **v32 + v36 * *v32[1];
  __asm { FCVT            H0, S0 }
  *(_WORD *)a5 = LOWORD(_S0);
  v38 = **a3;
  v40 = *v38;
  v39 = v38[1];
  v41 = ((*a2)[1] - **v40) * *v40[1];
  v42 = fmax(v41, 0.0);
  if (v41 <= 1.0)
    v43 = v42;
  else
    v43 = 1.0;
  _S0 = **v39 + v43 * *v39[1];
  __asm { FCVT            H0, S0 }
  *((_WORD *)a2[2] + 1) = LOWORD(_S0);
  v45 = **a3;
  v47 = *v45;
  v46 = v45[1];
  v48 = ((*a2)[2] - **v47) * *v47[1];
  v49 = fmax(v48, 0.0);
  if (v48 <= 1.0)
    v50 = v49;
  else
    v50 = 1.0;
  _S0 = **v46 + v50 * *v46[1];
  __asm { FCVT            H0, S0 }
  *((_WORD *)a2[2] + 2) = result;
  return result;
}

uint64_t sub_2398762A8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  double v11;
  _QWORD v15[4];
  unsigned __int32 v16;
  int v17;
  __int16 v18;
  __int16 v19;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    _Q0.n128_u64[0] = *(_QWORD *)a3;
    if (!*(_BYTE *)(a3 + 8))
      _Q0.n128_f64[0] = -65504.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65504.0;
    if (_Q0.n128_f64[0] < -65504.0)
      _Q0.n128_f64[0] = -65504.0;
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    if (v4 <= 65504.0)
      v11 = v4;
    else
      v11 = 65504.0;
    _S1 = v11;
    v19 = _H0;
    __asm { FCVT            H1, S1 }
    v18 = LOWORD(_S1);
    __asm
    {
      FCVT            S2, H0
      FCVT            S0, H1
    }
    v16 = _Q0.n128_u32[0];
    v17 = _S2;
  }
  else
  {
    v19 = -1025;
    v18 = 31743;
    v17 = -947920896;
    v16 = 1199562752;
  }
  v15[0] = &v17;
  v15[1] = &v19;
  v15[2] = &v16;
  v15[3] = &v18;
  return sub_239876380(a1, a2, (uint64_t)v15, _Q0);
}

uint64_t sub_239876380(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_239876628(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398765C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239876628(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_239876810(&v27, (float **)v34, a1, v13, v19);
        v13 += v33;
        v19 = (float *)((char *)v19 + 2 * HIDWORD(v33));
      }
    }
    *(_QWORD *)&result = sub_239876810(&v27, (float **)v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_239876810@<H0>(_DWORD *a1@<X0>, float **a2@<X1>, uint64_t **a3@<X2>, float *a4@<X3>, float *a5@<X4>)
{
  int v5;
  __int16 *v6;
  uint64_t v8;
  uint64_t v15;
  __int16 *v17;
  uint64_t v19;
  uint64_t v21;
  uint64_t v24;
  __int16 *v26;
  float *v28;
  uint64_t v29;
  __int16 *v31;
  __int16 result;
  __int16 *v33;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    while (1)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      _S0 = *a4;
      if (*a4 >= **(float **)v8)
      {
        if (_S0 <= **(float **)(v8 + 16))
          __asm { FCVT            H0, S0 }
        else
          _H0 = **(_WORD **)(v8 + 24);
      }
      else
      {
        _H0 = **(_WORD **)(v8 + 8);
      }
      *(_WORD *)a5 = _H0;
      v15 = **a3;
      _S0 = (*a2)[1];
      if (_S0 < **(float **)v15)
        break;
      if (_S0 > **(float **)(v15 + 16))
      {
        v17 = *(__int16 **)(v15 + 24);
        goto LABEL_15;
      }
      __asm { FCVT            H0, S0 }
LABEL_17:
      *((_WORD *)a2[2] + 1) = _H0;
      v19 = **a3;
      _S0 = (*a2)[2];
      if (_S0 < **(float **)v19)
      {
        v6 = *(__int16 **)(v19 + 8);
      }
      else
      {
        if (_S0 <= **(float **)(v19 + 16))
        {
          __asm { FCVT            H0, S0 }
          goto LABEL_5;
        }
        v6 = *(__int16 **)(v19 + 24);
      }
      _H0 = *v6;
LABEL_5:
      *((_WORD *)a2[2] + 2) = _H0;
      a4 += a1[6];
      a5 = (float *)((char *)a5 + 2 * a1[7]);
      if (++v5 >= a1[5])
        goto LABEL_21;
    }
    v17 = *(__int16 **)(v15 + 8);
LABEL_15:
    _H0 = *v17;
    goto LABEL_17;
  }
LABEL_21:
  *a2 = a4;
  a2[2] = a5;
  v21 = **a3;
  _S0 = *a4;
  if (*a4 >= **(float **)v21)
  {
    if (_S0 <= **(float **)(v21 + 16))
      __asm { FCVT            H0, S0 }
    else
      _H0 = **(_WORD **)(v21 + 24);
  }
  else
  {
    _H0 = **(_WORD **)(v21 + 8);
  }
  *(_WORD *)a5 = _H0;
  v24 = **a3;
  _S0 = (*a2)[1];
  if (_S0 < **(float **)v24)
  {
    v26 = *(__int16 **)(v24 + 8);
LABEL_30:
    _H0 = *v26;
    goto LABEL_32;
  }
  if (_S0 > **(float **)(v24 + 16))
  {
    v26 = *(__int16 **)(v24 + 24);
    goto LABEL_30;
  }
  __asm { FCVT            H0, S0 }
LABEL_32:
  *((_WORD *)a2[2] + 1) = _H0;
  v28 = a2[2];
  v29 = **a3;
  _S0 = (*a2)[2];
  if (_S0 >= **(float **)v29)
  {
    if (_S0 <= **(float **)(v29 + 16))
    {
      __asm { FCVT            H0, S0 }
      *((_WORD *)v28 + 2) = result;
    }
    else
    {
      v33 = *(__int16 **)(v29 + 24);
      result = *v33;
      *((_WORD *)v28 + 2) = *v33;
    }
  }
  else
  {
    v31 = *(__int16 **)(v29 + 8);
    result = *v31;
    *((_WORD *)v28 + 2) = *v31;
  }
  return result;
}

double sub_239876A3C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239872278(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEDE98;
  sub_23985EC2C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239876B88(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_239831AFC((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239876B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239876B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239876B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239876B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_239876D2C(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239876CC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_239876D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v16 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_239876E84(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_239876E84(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E3CD4(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239876FEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_239877050@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239872278(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE538;
  sub_23987725C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239877164(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23987712C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239877148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239877164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEB478;
  sub_239877E48(a2, &v12);
  sub_2398778E8(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239836EF4(a2, (uint64_t)(a3 + 1));
}

void sub_239877220(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239877234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397C1844((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239877248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23987725C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_23987735C(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 2) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239827444(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_239877340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_23987735C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 20)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23987759C(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_23987753C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_23987759C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239877614();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239877614()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256934388);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256934388))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397B0F8C();
    sub_239877818((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_239877818((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256934370, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256934370, &dword_23940C000);
          __cxa_guard_release(&qword_256934388);
          return &stru_256934370;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256934370;
}

void sub_239877764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256934388);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256934388);
  _Unwind_Resume(a1);
}

void sub_239877818(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2398778AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398778E8(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_239877ABC(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239877A98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239877ABC(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_239807484(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_f32[0] = sub_239877C58((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_239877C34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_239877C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  int v20;
  float *v21;
  int v22;
  _DWORD *v23;
  _DWORD *v24;
  _DWORD *v25;
  _DWORD *v26;
  int v27;
  float result;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a2 + 48);
    v11 = *(unsigned int *)(a2 + 52);
    v12 = *(unsigned int *)(a3 + 24);
    v13 = *(unsigned int *)(a3 + 28);
    v14 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(float **)(a2 + 24);
    }
    v20 = v3 - 1;
    v21 = *(float **)a3;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          *v21 = *v14;
          v21[1] = v14[1];
          v21[2] = v14[2];
          v14 += v11;
          v21 += v13;
          --v9;
        }
        while (v9);
LABEL_27:
        *v21 = *v14;
        v21[1] = v14[1];
        result = v14[2];
        v21[2] = result;
        return result;
      }
      v22 = 0;
      v23 = v21 + 2;
      v24 = v14 + 2;
      do
      {
        v25 = v24;
        v26 = v23;
        v27 = v3 - 1;
        do
        {
          *(v26 - 2) = *(v25 - 2);
          *(v26 - 1) = *(v25 - 1);
          *v26 = *v25;
          v26 += v12;
          v25 += v10;
          --v27;
        }
        while (v27);
        *(v26 - 2) = *(v25 - 2);
        *(v26 - 1) = *(v25 - 1);
        *v26 = *v25;
        v14 += v11;
        v21 += v13;
        ++v22;
        v23 += v13;
        v24 += v11;
      }
      while (v22 != v9);
    }
    if (v3 != 1)
    {
      do
      {
        *v21 = *v14;
        v21[1] = v14[1];
        v21[2] = v14[2];
        v14 += v10;
        v21 += v12;
        --v20;
      }
      while (v20);
    }
    goto LABEL_27;
  }
  return result;
}

void sub_239877E48(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239877F50(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239877F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239877F50(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 20);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2398780A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

double sub_2398780B4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239872278(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250ADDC30;
  sub_239609B40((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398781C8(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239878190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398781AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398781C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AE50A8;
  sub_2397639D0(a2, &v12);
  sub_2398782C0(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_23970977C(a2, (uint64_t)(a3 + 1));
}

void sub_239878284(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239878298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23974F3D4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398782AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398782C0(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_239877ABC(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239878470(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239878494(uint64_t a1, int a2)
{
  sub_239878554(a2);
}

void sub_2398784C4(uint64_t a1, int a2)
{
  sub_23987D4E0(a2);
}

void sub_2398784F4(uint64_t a1, int a2)
{
  sub_2398821B0(a2);
}

void sub_239878524(uint64_t a1, int a2)
{
  sub_2398862C4(a2);
}

void sub_239878554(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_239878578@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23987865C(a1, a2);
}

double sub_239878584@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239878F00(a1, a2);
}

double sub_239878590@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239879E20(a1, a2);
}

double sub_23987859C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23987B110(a1, a2);
}

double sub_2398785A8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23987C3C4(a1, a2);
}

double sub_2398785B4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23987C940(a1, a2);
}

double sub_2398785C0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23987CD20(a1, a2);
}

double sub_2398785CC@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23987D100(a1, a2);
}

uint64_t sub_23987865C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398787A8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEBF48;
  sub_2397E4B58((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_239878A38(*(_QWORD *)a1, (uint64_t)&v11);
  *a2 = &off_250ADB778;
  sub_2397E5EF8((uint64_t)&v11, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_23987874C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239878770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987878C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398787A8(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 13;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398788E8((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397E5EF8((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398788AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398788D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398788E8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 13);
  *a2 = &off_250AEBF48;
  sub_2397E4B58((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_239878A00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239878A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239878A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_239878BDC(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239878B78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_239878BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_239878D34(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_239878D34(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397CB3C8(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239878E9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_239878F00@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398787A8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC370;
  sub_2397F1DD8((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239879014(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239878FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239878FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239879014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEAEA8;
  sub_2397F2F2C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEB40[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397F3198(a2, (uint64_t)(a4 + 1));
}

void sub_239879100(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239879114(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239879128(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BD058((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23987913C(uint64_t **a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  return sub_239879184(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7);
}

uint64_t sub_23987914C(uint64_t **a1, uint64_t a2)
{
  return sub_2398797FC(**a1, (*a1)[1], a2);
}

uint64_t sub_23987915C(uint64_t **a1)
{
  char v2;

  return sub_2398792AC(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_239879184(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  unsigned int v8;
  double v9;
  double v10;
  unsigned int v11;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;

  v8 = *(unsigned __int8 *)(a3 + 16);
  if (!*(_BYTE *)(a3 + 16))
  {
    v11 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    LOWORD(v15) = 0;
    v16 = 0xFFFF;
    if (v8)
      goto LABEL_17;
    goto LABEL_15;
  }
  v9 = *(double *)a3;
  a6 = 0.0;
  if (*(double *)a3 < 0.0)
    v9 = 0.0;
  v8 = (int)v9;
  v10 = 255.0;
  if (*(double *)(a3 + 8) <= 255.0)
    v10 = *(double *)(a3 + 8);
  v11 = (int)v10;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  a6 = 0.0;
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
  v16 = HIWORD(v15);
  if (v8 != (unsigned __int16)v15)
    goto LABEL_17;
LABEL_15:
  if (v16 == v11)
    return sub_2398792AC(a1, a2, (uint64_t)v20);
LABEL_17:
  v24 = (double)v8;
  v23 = 1.0 / ((double)v11 - (double)v8);
  v20[0] = &v24;
  v20[1] = &v23;
  v19[0] = &v22;
  v19[1] = &v21;
  v18[0] = v20;
  v18[1] = v19;
  return sub_239879554(a1, a2, (uint64_t)v18, (double)v16 - (double)(unsigned __int16)v15, (double)(unsigned __int16)v15, a6, a7, a8);
}

uint64_t sub_2398792AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397E88F0((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398794F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239879554(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double ****v34;

  v11 = *(_QWORD *)(a1 + 8);
  if (!v11)
    goto LABEL_17;
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  do
    v15 = __ldaxr(p_shared_owners);
  while (__stlxr(v15 - 1, p_shared_owners));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  v11 = *(_QWORD *)(a1 + 8);
  v16 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v16)
    goto LABEL_43;
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (v19)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v32 = 0;
    v20 = *(_QWORD *)(a2 + 8);
    if (!v20)
      goto LABEL_33;
LABEL_18:
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
    v20 = *(_QWORD *)(a2 + 8);
    v25 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v25)
      goto LABEL_29;
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
    do
      v28 = __ldaxr(v26);
    while (__stlxr(v28 - 1, v26));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v20 + 96))(&v31, v20, 1);
    v33 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
  std::__shared_weak_count::__release_weak(v16);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v11 + 96))(&v32, v11, 0);
  v20 = *(_QWORD *)(a2 + 8);
  if (v20)
    goto LABEL_18;
LABEL_33:
  v31 = 0;
  v33 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v34 = (double ****)&v33;
    sub_2397E8E14(&v34, a1, a2, a4, a5, a6, a7, a8);
  }
LABEL_37:
  v29 = v31;
  v31 = 0;
  if (v29)
    (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
  result = v32;
  v32 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239879798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398797FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  __int16 *v8;
  __int16 *v9;
  char *v10;
  __int16 *v11;
  char v12;
  char v13;
  __int16 v14;
  __int16 v15;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    if ((int)v6 <= 0xFF)
    {
      v15 = v5;
      v14 = (int)v6;
      v13 = v5;
      v12 = (int)v6;
      v8 = (__int16 *)&v13;
      v9 = &v15;
      v10 = &v12;
      v11 = &v14;
      return sub_2398798D0(a1, a2, (uint64_t)&v8);
    }
    v15 = v5;
    LOBYTE(v14) = v5;
  }
  else
  {
    v15 = 0;
    LOBYTE(v14) = 0;
  }
  v8 = &v14;
  v9 = &v15;
  return sub_239879B78(a1, a2, (uint64_t)&v8);
}

uint64_t sub_2398798D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_2397E9648(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239879B14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239879B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_2397E9CC4(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239879DBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239879E20@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398787A8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC5A8;
  sub_2397FD434((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239879F34(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239879EFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239879F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239879F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEAFA0;
  sub_2397FE5E8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEB58[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397FE854(a2, (uint64_t)(a4 + 1));
}

void sub_23987A020(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23987A034(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987A048(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BDCA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23987A05C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23987A16C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23987A06C(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_23987A800((uint64_t)v13, 2080373759, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = -65504.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 65504.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  else
    _Q0.n128_f64[0] = 65504.0;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_23987A800((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_23987A144(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23987A2B0(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23987A16C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  unsigned int v4;
  double v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  unint64_t v24;
  unint64_t v25;
  double v26;
  double v27;

  v4 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v5 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v5 = 0.0;
    v4 = (int)v5;
    _Q0.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = (int)_Q0.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = 255;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm
  {
    FCVT            S3, H0
    FCVT            S3, H1
  }
  _ZF = _ZF && _S3 == (float)v6;
  if (_ZF)
    return sub_23987A2B0(a1, a2, (uint64_t)v23, _Q0);
  v27 = (double)v4;
  __asm { FCVT            D0, H0 }
  v25 = _Q0.n128_u64[0];
  v26 = 1.0 / ((double)v6 - (double)v4);
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v24 = _Q0.n128_u64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_23987A558(a1, a2, (uint64_t)v21, _Q0);
}

uint64_t sub_23987A2B0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397EB274((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987A4F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987A558(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397EB8E4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987A79C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987A800(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  char *v23;
  __int16 *v24;
  char v25;
  char v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 255.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      LOBYTE(v27) = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_23987ABC0(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 255.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      LOBYTE(v27) = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_23987AE68(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_23987A2B0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = (__int16 *)&v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_23987A918(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_23987A918(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397EC274(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987AB5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987ABC0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397ECAA8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987AE04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987AE68(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397ED154(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987B0AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23987B110@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398787A8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC7E0;
  sub_2398069A4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23987B224(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23987B1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987B208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23987B224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB098;
  sub_239807AF8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEB70[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239807D64(a2, (uint64_t)(a4 + 1));
}

void sub_23987B310(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23987B324(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987B338(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BE878((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23987B34C(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_23987B44C(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_23987B35C(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  double v5;
  float v6;
  _QWORD v8[5];
  _QWORD v9[2];
  _QWORD v10[2];
  _QWORD v11[2];

  v3 = (*a1)[1];
  v11[0] = **a1;
  v11[1] = v3;
  v10[0] = v11[0];
  v10[1] = v3;
  v9[0] = v11[0];
  v9[1] = v3;
  v8[0] = v11;
  v8[1] = v10;
  v8[2] = v9;
  v8[3] = v11[0];
  v8[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = -3.40282347e38;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 3.40282347e38;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 <= 3.40282347e38)
      v5 = v4;
    else
      v5 = 3.40282347e38;
    v6 = v5;
    return sub_23987BACC((uint64_t)v8, a3, v6);
  }
  else
  {
    a3.n128_u32[0] = -8388609;
    return sub_23987BACC((uint64_t)v8, a3, 3.4028e38);
  }
}

uint64_t sub_23987B424(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23987B57C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23987B44C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  unsigned int v12;
  double v13;
  float v14;
  double v16;
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  unint64_t v22;
  double v23;
  uint64_t v24;
  double v25;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v11 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v11 = 0.0;
    v10 = (int)v11;
    a4.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v12 = (int)a4.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      a4.n128_u64[0] = 0xC7EFFFFFE0000000;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
      a4.n128_f32[0] = a4.n128_f64[0];
      v13 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v13 = *(double *)(a3 + 32);
      v14 = v13;
      if (a4.n128_f32[0] != (float)v10 || v14 != (float)v12)
        goto LABEL_15;
      return sub_23987B57C(a1, a2, (uint64_t)v21, a4);
    }
  }
  else
  {
    v12 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v14 = 1.0;
  a4.n128_u32[0] = 0;
  if ((float)v10 != 0.0 || 1.0 != (float)v12)
  {
LABEL_15:
    v25 = (double)v10;
    v23 = a4.n128_f32[0];
    v16 = v14;
    a4.n128_f64[0] = v16 - a4.n128_f32[0];
    v22 = a4.n128_u64[0];
    v21[0] = &v25;
    v21[1] = &v24;
    v20[0] = &v23;
    v20[1] = &v22;
    v19[0] = v21;
    v19[1] = v20;
    return sub_23987B824(a1, a2, (uint64_t)v19, a4, v16, 1.0 / ((double)v12 - (double)v10), 1.0, a8, a9, a10);
  }
  return sub_23987B57C(a1, a2, (uint64_t)v21, a4);
}

uint64_t sub_23987B57C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2397EE744((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987B7C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987B824(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double ****v36;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_43;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v36 = (double ****)&v35;
    a4.n128_f32[0] = sub_2397EED04(&v36, a1, a2, a4.n128_f32[0], a5, a6, a7, a8, a9, a10);
  }
LABEL_37:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987BA68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987BACC(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  char *v17;
  float *v18;
  char v19;
  char v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 255.0;
    v3 = a3 >= 255.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOBYTE(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_23987BE74(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1132396544;
      if (a3 <= 255.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOBYTE(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_23987C11C(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_23987B57C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_23987BBCC(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_23987BBCC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397EF464(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987BE10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987BE74(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397EFCB4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987C0B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987C11C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397F0328(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987C360(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23987C3C4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398787A8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3B18;
  sub_2397E61D4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23987C4D8(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23987C4A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987C4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23987C4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AE1878;
  sub_239763C3C(a2, &v11);
  sub_23987C5D0(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_23970AF38(a2, (uint64_t)(a3 + 1));
}

void sub_23987C594(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23987C5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239643A8C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23987C5BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23987C5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_23987C7A4(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23987C780(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987C7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397E5638((unsigned int *)&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_2397E5A94((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23987C91C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23987C940@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398787A8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0988;
  sub_2396214F4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23987CA54(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23987CA1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987CA38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23987CA54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AE1760;
  sub_239763EA8(a2, &v11);
  sub_23987CB4C(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_239709850(a2, (uint64_t)(a3 + 1));
}

void sub_23987CB10(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23987CB24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239643A24((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23987CB38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23987CB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_23987C7A4(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23987CCFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23987CD20@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398787A8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6538;
  sub_2397E44CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23987CE34(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23987CDFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987CE18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23987CE34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AE56F0;
  sub_239765EEC(a2, &v11);
  sub_23987CF2C(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_239766158(a2, (uint64_t)(a3 + 1));
}

void sub_23987CEF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23987CF04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239758F54((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23987CF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23987CF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_23987C7A4(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23987D0DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23987D100@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398787A8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3A00;
  sub_2397F0C3C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23987D214(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23987D1DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987D1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23987D214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AE5878;
  sub_23976622C(a2, &v11);
  sub_23987D30C(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_23970A418(a2, (uint64_t)(a3 + 1));
}

void sub_23987D2D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23987D2E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23975A724((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23987D2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23987D30C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_23987C7A4(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23987D4BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23987D4E0(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23987D504@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23987D5E8(a1, a2);
}

double sub_23987D510@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23987E4CC(a1, a2);
}

double sub_23987D51C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23987EAE0(a1, a2);
}

double sub_23987D528@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23987FDE0(a1, a2);
}

double sub_23987D534@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239881094(a1, a2);
}

double sub_23987D540@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239881610(a1, a2);
}

double sub_23987D54C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398819F0(a1, a2);
}

double sub_23987D558@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239881DD0(a1, a2);
}

uint64_t sub_23987D5E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_23987D824(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEBF48;
  sub_2397E4B58((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_23987D6FC(*(_QWORD *)a1, (uint64_t)&v11, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_23987D6C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987D6E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23987D6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEADB0;
  sub_2397E5C8C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEB88[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397E5EF8(a2, (uint64_t)(a4 + 1));
}

void sub_23987D7E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23987D7FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987D810(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BC484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23987D824(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 14;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_23987D964((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397F3198((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_23987D928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23987D950(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23987D964(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 14);
  *a2 = &off_250AEC370;
  sub_2397F1DD8((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_23987DA7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23987DAA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23987DAB4(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23987DAFC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23987DAC4(uint64_t **a1, uint64_t a2)
{
  return sub_23987E174(**a1, (*a1)[1], a2);
}

uint64_t sub_23987DAD4(uint64_t **a1)
{
  char v2;

  return sub_23987DC24(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_23987DAFC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  int v5;
  double v6;
  unsigned int v7;
  unsigned int v8;
  double v9;
  double v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (!*(_BYTE *)(a3 + 16))
  {
    v7 = -65536;
    v8 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    v11 = 255;
    v12 = HIWORD(v7);
    if (v8 != (unsigned __int16)v7)
      goto LABEL_17;
    goto LABEL_15;
  }
  v4 = *(double *)a3;
  if (*(double *)a3 < 0.0)
    v4 = 0.0;
  v5 = (int)v4;
  v6 = 65535.0;
  if (*(double *)(a3 + 8) <= 65535.0)
    v6 = *(double *)(a3 + 8);
  v7 = v5 | ((int)v6 << 16);
  v8 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v9 = *(double *)(a3 + 24);
  if (v9 < 0.0)
    v9 = 0.0;
  v8 = (int)v9;
  v10 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v10 = *(double *)(a3 + 32);
  v11 = (int)v10;
  v12 = HIWORD(v7);
  if (v8 != (unsigned __int16)v7)
    goto LABEL_17;
LABEL_15:
  if (v12 == v11)
    return sub_23987DC24(a1, a2, (uint64_t)v16);
LABEL_17:
  v20 = (double)(unsigned __int16)v7;
  v18 = (double)v8;
  v19 = 1.0 / ((double)v12 - v20);
  a4.n128_f64[0] = (double)v11 - (double)v8;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = v16;
  v14[1] = v15;
  return sub_23987DECC(a1, a2, (uint64_t)v14, a4);
}

uint64_t sub_23987DC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397F586C((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23987DE68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987DECC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397F5D8C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987E110(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987E174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  _QWORD v8[4];
  int v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    HIWORD(v9) = v5;
    LOWORD(v9) = (int)v6;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 255;
  }
  v8[0] = (char *)&v9 + 2;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_23987E224(a1, a2, (uint64_t)v8);
}

uint64_t sub_23987E224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int16 ***)&v28;
    sub_2397F6694(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23987E468(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23987E4CC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23987D824(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC370;
  sub_2397F1DD8((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23987E618(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2397F3198((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23987E5BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987E5E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987E5FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23987E618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_23987E7BC(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23987E758(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_23987E7BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_23987E914(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_23987E914(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397D5B2C(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23987EA7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_23987EAE0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23987D824(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC5A8;
  sub_2397FD434((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23987EBF4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23987EBBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987EBD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23987EBF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEAFA0;
  sub_2397FE5E8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEBA0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397FE854(a2, (uint64_t)(a4 + 1));
}

void sub_23987ECE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23987ECF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987ED08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BDCA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23987ED1C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23987EE2C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23987ED2C(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_23987F4CC((uint64_t)v13, 2080373759, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = -65504.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 65504.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  else
    _Q0.n128_f64[0] = 65504.0;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_23987F4CC((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_23987EE04(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23987EF7C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23987EE2C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  unsigned int v15;
  unsigned int v18;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    _Q0.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)_Q0.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  v15 = (unsigned __int16)v6;
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm { FCVT            S3, H0 }
  v18 = HIWORD(v6);
  __asm { FCVT            S3, H1 }
  _ZF = _ZF && _S3 == (float)v18;
  if (_ZF)
    return sub_23987EF7C(a1, a2, (uint64_t)v25, _Q0);
  v29 = (double)v15;
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  v28 = 1.0 / ((double)v18 - (double)v15);
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_23987F224(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_23987EF7C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397F7974((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987F1C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987F224(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397F7FE4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987F468(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987F4CC(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  __int16 *v23;
  __int16 *v24;
  __int16 v25;
  __int16 v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 65535.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      v27 = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_23987F890(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 65535.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      v27 = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_23987FB38(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_23987EF7C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = &v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_23987F5E8(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_23987F5E8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F8978(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987F82C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987F890(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F91AC(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987FAD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23987FB38(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F9858(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23987FD7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23987FDE0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23987D824(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC7E0;
  sub_2398069A4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23987FEF4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23987FEBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23987FED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23987FEF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB098;
  sub_239807AF8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEBB8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239807D64(a2, (uint64_t)(a4 + 1));
}

void sub_23987FFE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23987FFF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239880008(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BE878((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23988001C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23988011C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23988002C(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  double v5;
  float v6;
  _QWORD v8[5];
  _QWORD v9[2];
  _QWORD v10[2];
  _QWORD v11[2];

  v3 = (*a1)[1];
  v11[0] = **a1;
  v11[1] = v3;
  v10[0] = v11[0];
  v10[1] = v3;
  v9[0] = v11[0];
  v9[1] = v3;
  v8[0] = v11;
  v8[1] = v10;
  v8[2] = v9;
  v8[3] = v11[0];
  v8[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = -3.40282347e38;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 3.40282347e38;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 <= 3.40282347e38)
      v5 = v4;
    else
      v5 = 3.40282347e38;
    v6 = v5;
    return sub_239880798((uint64_t)v8, a3, v6);
  }
  else
  {
    a3.n128_u32[0] = -8388609;
    return sub_239880798((uint64_t)v8, a3, 3.4028e38);
  }
}

uint64_t sub_2398800F4(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_239880248(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23988011C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  float v8;
  unsigned int v9;
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  unint64_t v15;
  double v16;
  double v17;
  double v18;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    a4.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)a4.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v8 = 1.0;
    a4.n128_u32[0] = 0;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  a4.n128_u64[0] = 0xC7EFFFFFE0000000;
  if (*(double *)(a3 + 24) >= -3.40282347e38)
    a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
  a4.n128_f32[0] = a4.n128_f64[0];
  v7 = 3.40282347e38;
  if (*(double *)(a3 + 32) <= 3.40282347e38)
    v7 = *(double *)(a3 + 32);
  v8 = v7;
LABEL_14:
  v9 = HIWORD(v6);
  if (a4.n128_f32[0] == (float)(unsigned __int16)v6 && v8 == (float)v9)
    return sub_239880248(a1, a2, (uint64_t)v14, a4);
  v18 = (double)(unsigned __int16)v6;
  v16 = a4.n128_f32[0];
  v17 = 1.0 / ((double)v9 - v18);
  a4.n128_f64[0] = v8 - a4.n128_f32[0];
  v15 = a4.n128_u64[0];
  v14[0] = &v18;
  v14[1] = &v17;
  v13[0] = &v16;
  v13[1] = &v15;
  v12[0] = v14;
  v12[1] = v13;
  return sub_2398804F0(a1, a2, (uint64_t)v12, a4);
}

uint64_t sub_239880248(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397FA36C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23988048C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398804F0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (uint64_t ****)&v29;
    a4.n128_f64[0] = sub_2397FA8A4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239880734(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239880798(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  __int16 *v17;
  float *v18;
  __int16 v19;
  __int16 v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 65535.0;
    v3 = a3 >= 65535.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOWORD(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_239880B44(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1199570688;
      if (a3 <= 65535.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOWORD(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_239880DEC(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_239880248(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_23988089C(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_23988089C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FAF68(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239880AE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239880B44(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FB6E4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239880D88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239880DEC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FBD20(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239881030(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239881094@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23987D824(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC468;
  sub_2397F349C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398811A8(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239881170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23988118C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398811A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEB570;
  sub_2397F412C(a2, &v11);
  sub_2398812A0(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397F4398(a2, (uint64_t)(a3 + 1));
}

void sub_239881264(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239881278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397C356C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23988128C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398812A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_239881474(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239881450(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239881474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397F28B8(&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_2397F2D14((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398815EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239881610@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23987D824(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE62E0;
  sub_2397F4674((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239881724(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398816EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239881708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239881724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AE5350;
  sub_239764BF4(a2, &v11);
  sub_23988181C(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_239764E60(a2, (uint64_t)(a3 + 1));
}

void sub_2398817E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398817F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239754008((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239881808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23988181C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_239881474(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398819CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398819F0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23987D824(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC040;
  sub_2397E7D68((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239881B04(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239881ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239881AE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239881B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEB760;
  sub_2397EA060(a2, &v11);
  sub_239881BFC(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397EA2CC(a2, (uint64_t)(a3 + 1));
}

void sub_239881BC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239881BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397C6D68((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239881BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239881BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_239881474(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239881DAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239881DD0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23987D824(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6778;
  sub_2397FC2BC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239881EE4(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239881EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239881EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239881EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AE5A00;
  sub_239766F78(a2, &v11);
  sub_239881FDC(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397671E4(a2, (uint64_t)(a3 + 1));
}

void sub_239881FA0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239881FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23975BEF4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239881FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239881FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_239881474(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23988218C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2398821B0(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398821D4@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398822B8(a1, a2);
}

double sub_2398821E0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398831DC(a1, a2);
}

double sub_2398821EC@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239883E7C(a1, a2);
}

double sub_2398821F8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239884500(a1, a2);
}

double sub_239882204@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398851A8(a1, a2);
}

double sub_239882210@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239885724(a1, a2);
}

double sub_23988221C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239885B04(a1, a2);
}

double sub_239882228@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239885EE4(a1, a2);
}

uint64_t sub_2398822B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398824F4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEBF48;
  sub_2397E4B58((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398823CC(*(_QWORD *)a1, (uint64_t)&v11, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_239882394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398823B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398823CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEADB0;
  sub_2397E5C8C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEBD0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397E5EF8(a2, (uint64_t)(a4 + 1));
}

void sub_2398824B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398824CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398824E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BC484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398824F4(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 15;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_239882634((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397FE854((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398825F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239882620(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239882634(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 15);
  *a2 = &off_250AEC5A8;
  sub_2397FD434((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_23988274C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239882770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239882784(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398827CC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239882794(uint64_t **a1, uint64_t a2)
{
  return sub_239882E6C(**a1, (*a1)[1], a2);
}

uint64_t sub_2398827A4(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23988291C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398827CC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  unsigned int v12;
  double v13;
  double v14;
  unsigned int v15;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  double v24;
  double v25;
  double v26;
  unint64_t v27;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    v12 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = 255;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  v12 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v13 = *(double *)(a3 + 24);
  if (v13 < 0.0)
    v13 = 0.0;
  v12 = (int)v13;
  v14 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v14 = *(double *)(a3 + 32);
  v15 = (int)v14;
LABEL_14:
  __asm
  {
    FCVT            S3, H0
    FCVT            S2, H1
  }
  _ZF = _ZF && _S2 == (float)v15;
  if (_ZF)
    return sub_23988291C(a1, a2, (uint64_t)v23, _Q0);
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  v25 = (double)v12;
  v26 = 1.0 / (_D1 - _Q0.n128_f64[0]);
  _Q0.n128_f64[0] = (double)v15 - (double)v12;
  v24 = _Q0.n128_f64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_239882BC4(a1, a2, (uint64_t)v21, _Q0);
}

uint64_t sub_23988291C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239800914((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239882B60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239882BC4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_239800E98(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239882E08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239882E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  char v19;
  char v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 23544;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_239882F34(a1, a2, (uint64_t)v16);
}

uint64_t sub_239882F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_2398017B8(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239883178(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398831DC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398824F4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC370;
  sub_2397F1DD8((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398832F0(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398832B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398832D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398832F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEAEA8;
  sub_2397F2F2C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEBE8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397F3198(a2, (uint64_t)(a4 + 1));
}

void sub_2398833DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398833F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239883404(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BD058((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239883418(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239883460(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239883428(uint64_t **a1, uint64_t a2)
{
  return sub_239883B0C(**a1, (*a1)[1], a2);
}

uint64_t sub_239883438(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398835BC(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239883460(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v18;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  double v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = -65536;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
LABEL_14:
  v16 = (unsigned __int16)v15;
  __asm { FCVT            S2, H0 }
  v18 = HIWORD(v15);
  __asm { FCVT            S2, H1 }
  _ZF = _ZF && _S2 == (float)v18;
  if (_ZF)
    return sub_2398835BC(a1, a2, (uint64_t)v26, _Q0);
  __asm { FCVT            D0, H0 }
  v30 = _D0;
  __asm { FCVT            D1, H1 }
  v28 = (double)v16;
  v29 = 1.0 / (_D1 - _D0);
  v27 = (double)v18 - (double)v16;
  v26[0] = &v30;
  v26[1] = &v29;
  v25[0] = &v28;
  v25[1] = &v27;
  v24[0] = v26;
  v24[1] = v25;
  return sub_239883864(a1, a2, (uint64_t)v24);
}

uint64_t sub_2398835BC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_23980240C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239883800(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239883864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double ****v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (double ****)&v28;
    sub_23980295C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239883AA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239883B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  __int16 v19;
  __int16 v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 31744;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_239883BD4(a1, a2, (uint64_t)v16);
}

uint64_t sub_239883BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_239803184(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239883E18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239883E7C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398824F4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC5A8;
  sub_2397FD434((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239883FC8(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2397FE854((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239883F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239883F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239883FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239883FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v17, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v17 = 0;
LABEL_17:
  sub_239622218(a2, &v16);
  v13.n128_u64[0] = sub_23988416C(a1, a2);
  v14 = v16;
  v16 = 0;
  if (v14)
    (*(void (**)(uint64_t, float))(*(_QWORD *)v14 + 8))(v14, v13.n128_f32[0]);
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v13);
  return result;
}

void sub_239884108(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

__int16 sub_23988416C@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  __int16 *v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  __int16 v26;
  uint64_t v28;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 != *(_DWORD *)(a2 + 108) || v4 != v5)
  {
    v28 = (4 * *(_DWORD *)(a1 + 56));
    sub_239884334(a1, a2, &v28);
    return v7;
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
  v9 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(_QWORD *)(v3 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 128) && v16)
  {
    a1 = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
    v16 = *(_QWORD *)(a2 + 32);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v17 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v17 < 0xF || (unint64_t)(v16 - v9) < 0x20)
    {
      v20 = (_WORD *)v16;
      v21 = (__int16 *)v9;
    }
    else
    {
      v18 = v17 + 1;
      v19 = (v17 + 1) & 0xFFFFFFFFFFFFFFF0;
      v20 = (_WORD *)(v16 + 2 * v19);
      v21 = (__int16 *)(v9 + 2 * v19);
      v22 = (__int128 *)(v9 + 16);
      v23 = (_OWORD *)(v16 + 16);
      v24 = v19;
      do
      {
        v7 = *(v22 - 1);
        v25 = *v22;
        *(v23 - 1) = v7;
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 16;
      }
      while (v24);
      if (v18 == v19)
        return v7;
    }
    do
    {
      v26 = *v21++;
      LOWORD(v7) = v26;
      *v20++ = v26;
    }
    while (v21 != (__int16 *)(v9 + 2 * v8));
  }
  return v7;
}

uint64_t sub_239884334(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v19 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v19, v6, 0);
LABEL_17:
  sub_239622218(a2, &v18);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    v15.n128_f64[0] = sub_2397DDAD4(a3, a1, a2);
  v16 = v18;
  v18 = 0;
  if (v16)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v16 + 8))(v16, v15);
  result = v19;
  v19 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23988449C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_239884500@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398824F4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC7E0;
  sub_2398069A4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239884614(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398845DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398845F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239884614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB098;
  sub_239807AF8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEC00[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239807D64(a2, (uint64_t)(a4 + 1));
}

void sub_239884700(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239884714(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239884728(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BE878((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23988473C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239884784(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23988474C(uint64_t **a1, uint64_t a2)
{
  return sub_239884E38(**a1, (*a1)[1], a2);
}

uint64_t sub_23988475C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398848E8(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239884784(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  float v13;
  double v14;
  float v15;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  unint64_t v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v12 = -3.40282347e38;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        v12 = *(double *)(a3 + 24);
      v13 = v12;
      v14 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v14 = *(double *)(a3 + 32);
      v15 = v14;
      __asm
      {
        FCVT            S4, H0
        FCVT            S5, H1
      }
      if (v13 != _S4 || v15 != _S5)
        goto LABEL_15;
      return sub_2398848E8(a1, a2, (uint64_t)v26, _Q0);
    }
  }
  else
  {
    _Q0.n128_u32[0] = 1006632960;
    LOWORD(_S1) = 15360;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v15 = 1.0;
  v13 = 0.0;
  __asm
  {
    FCVT            S4, H0
    FCVT            S5, H1
  }
  if (_S4 != 0.0 || 1.0 != _S5)
  {
LABEL_15:
    __asm { FCVT            D0, H0 }
    v30 = _Q0.n128_u64[0];
    __asm { FCVT            D1, H1 }
    v28 = v13;
    v29 = 1.0 / (_D1 - _Q0.n128_f64[0]);
    _Q0.n128_f64[0] = v15 - v13;
    v27 = _Q0.n128_f64[0];
    v26[0] = &v30;
    v26[1] = &v29;
    v25[0] = &v28;
    v25[1] = &v27;
    v24[0] = v26;
    v24[1] = v25;
    return sub_239884B90(a1, a2, (uint64_t)v24, _Q0);
  }
  return sub_2398848E8(a1, a2, (uint64_t)v26, _Q0);
}

uint64_t sub_2398848E8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2398043FC((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239884B2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239884B90(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f32[0] = sub_2398049C4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239884DD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239884E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  double v6;
  _QWORD v15[4];
  __int16 v16;
  __int16 v17;
  float v18;
  int v19;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = -3.40282347e38;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 3.40282347e38;
    if (v3 < -3.40282347e38)
      v3 = -3.40282347e38;
    _S0 = v3;
    if (v4 <= 3.40282347e38)
      v6 = v4;
    else
      v6 = 3.40282347e38;
    _S1 = v6;
    v18 = _S1;
    v19 = LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    v17 = _H0;
    __asm { FCVT            H0, S1 }
  }
  else
  {
    v18 = 3.4028e38;
    v19 = -8388609;
    v17 = -1024;
    _H0 = 31744;
  }
  v16 = _H0;
  v15[0] = &v17;
  v15[1] = &v19;
  v15[2] = &v16;
  v15[3] = &v18;
  return sub_239884F00(a1, a2, (uint64_t)v15);
}

uint64_t sub_239884F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_2398050F0(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239885144(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398851A8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398824F4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC6A0;
  sub_2397FEB58((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398852BC(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239885284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398852A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398852BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEB668;
  sub_2397FF80C(a2, &v12);
  sub_2398853B4(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397FFA78(a2, (uint64_t)(a3 + 1));
}

void sub_239885378(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23988538C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397C41B4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398853A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398853B4(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_239885588(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239885564(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239885588(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        a3.n128_f64[0] = sub_2397FDF14(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_u64[0] = sub_2397FE3D8((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_239885700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239885724@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398824F4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0A08;
  sub_239627148((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239885838(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239885800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23988581C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239885838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AE54D8;
  sub_239764F34(a2, &v12);
  sub_239885930(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_23970B0E0(a2, (uint64_t)(a3 + 1));
}

void sub_2398858F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239885908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239755C98((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23988591C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239885930(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_239885588(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239885AE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239885B04@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398824F4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC150;
  sub_2397EA604((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239885C18(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239885BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239885BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239885C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEB858;
  sub_2397ED558(a2, &v12);
  sub_239885D10(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397ED7C4(a2, (uint64_t)(a3 + 1));
}

void sub_239885CD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239885CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397C79B0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239885CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239885D10(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_239885588(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239885EC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239885EE4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398824F4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE69A0;
  sub_239805808((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239885FF8(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239885FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239885FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239885FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AE5B88;
  sub_239767D98(a2, &v12);
  sub_2398860F0(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239768004(a2, (uint64_t)(a3 + 1));
}

void sub_2398860B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398860C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23975DB84((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398860DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398860F0(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_239885588(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398862A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2398862C4(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398862E8@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398863CC(a1, a2);
}

double sub_2398862F4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398872BC(a1, a2);
}

double sub_239886300@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239887F1C(a1, a2);
}

double sub_23988630C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239888BB8(a1, a2);
}

double sub_239886318@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398891CC(a1, a2);
}

double sub_239886324@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239889748(a1, a2);
}

double sub_239886330@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239889B28(a1, a2);
}

double sub_23988633C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239889F08(a1, a2);
}

uint64_t sub_2398863CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_239886608(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEBF48;
  sub_2397E4B58((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398864E0(*(_QWORD *)a1, (uint64_t)&v11, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398864A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398864C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398864E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEADB0;
  sub_2397E5C8C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEC18[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397E5EF8(a2, (uint64_t)(a4 + 1));
}

void sub_2398865CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398865E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398865F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BC484((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239886608(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 16;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_239886748((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_239807D64((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_23988670C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239886734(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239886748(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 16);
  *a2 = &off_250AEC7E0;
  sub_2398069A4((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_239886860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239886884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239886898(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398868E0(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398868A8(uint64_t **a1, uint64_t a2)
{
  return sub_239886F60(**a1, (*a1)[1], a2);
}

uint64_t sub_2398868B8(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_239886A10(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398868E0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  unsigned int v6;
  double v7;
  double v8;
  unsigned int v9;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  double v16;
  double v17;
  double v18;
  double v19;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v7 = *(double *)(a3 + 24);
      if (v7 < 0.0)
        v7 = 0.0;
      v6 = (int)v7;
      v8 = 255.0;
      if (*(double *)(a3 + 32) <= 255.0)
        v8 = *(double *)(a3 + 32);
      v9 = (int)v8;
      if (a4.n128_f32[0] != (float)v6 || v5 != (float)(int)v8)
        goto LABEL_15;
      return sub_239886A10(a1, a2, (uint64_t)v15, a4);
    }
  }
  else
  {
    v5 = 1.0;
    a4.n128_u32[0] = 0;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v9 = 255;
  if (a4.n128_f32[0] != (float)v6 || v5 != (float)0xFFu)
  {
LABEL_15:
    v19 = a4.n128_f32[0];
    v17 = (double)v6;
    v18 = 1.0 / (v5 - a4.n128_f32[0]);
    a4.n128_f64[0] = (double)v9 - (double)v6;
    v16 = a4.n128_f64[0];
    v15[0] = &v19;
    v15[1] = &v18;
    v14[0] = &v17;
    v14[1] = &v16;
    v13[0] = v15;
    v13[1] = v14;
    return sub_239886CB8(a1, a2, (uint64_t)v13, a4);
  }
  return sub_239886A10(a1, a2, (uint64_t)v15, a4);
}

uint64_t sub_239886A10(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239809D98((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239886C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239886CB8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_23980A2FC(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239886EFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239886F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1132396544;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_239887014(a1, a2, (uint64_t)v8);
}

uint64_t sub_239887014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_23980AC08(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239887258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398872BC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239886608(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC370;
  sub_2397F1DD8((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398873D0(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239887398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398873B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398873D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEAEA8;
  sub_2397F2F2C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEC30[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397F3198(a2, (uint64_t)(a4 + 1));
}

void sub_2398874BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398874D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398874E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BD058((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398874F8(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239887540(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239887508(uint64_t **a1, uint64_t a2)
{
  return sub_239887BBC(**a1, (*a1)[1], a2);
}

uint64_t sub_239887518(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23988766C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239887540(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  double v6;
  int v7;
  double v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v9 = -65536;
    goto LABEL_14;
  }
  v5 = 1.0;
  a4.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = *(double *)(a3 + 24);
  if (v6 < 0.0)
    v6 = 0.0;
  v7 = (int)v6;
  v8 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v8 = *(double *)(a3 + 32);
  v9 = v7 | ((int)v8 << 16);
LABEL_14:
  v10 = (unsigned __int16)v9;
  v11 = HIWORD(v9);
  if (a4.n128_f32[0] == (float)v10 && v5 == (float)v11)
    return sub_23988766C(a1, a2, (uint64_t)v16, a4);
  v20 = a4.n128_f32[0];
  v18 = (double)v10;
  v19 = 1.0 / (v5 - a4.n128_f32[0]);
  a4.n128_f64[0] = (double)v11 - (double)v10;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = v16;
  v14[1] = v15;
  return sub_239887914(a1, a2, (uint64_t)v14, a4);
}

uint64_t sub_23988766C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = (unint64_t)sub_23980B7CC((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398878B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239887914(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t **v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (uint64_t **)&v29;
    a4.n128_u64[0] = (unint64_t)sub_23980BCB4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239887B58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239887BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  __int16 v10;
  __int16 v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1199570688;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_239887C74(a1, a2, (uint64_t)v8);
}

uint64_t sub_239887C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_23980C440(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239887EB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239887F1C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239886608(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC5A8;
  sub_2397FD434((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239888030(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239887FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239888014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239888030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEAFA0;
  sub_2397FE5E8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEC48[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397FE854(a2, (uint64_t)(a4 + 1));
}

void sub_23988811C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239888130(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239888144(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BDCA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239888158(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398881A0(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239888168(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239888838(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239888178(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398882E8(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398881A0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  float v5;
  double v6;
  unsigned __int16 v11;
  double v12;
  unsigned int v14;
  double v20;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    _Q0.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      _Q0.n128_u64[0] = *(_QWORD *)a3;
    _Q0.n128_f32[0] = _Q0.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v5 = 1.0;
  _Q0.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v6 = *(double *)(a3 + 24);
  _S2 = v6;
  __asm { FCVT            H2, S2 }
  v11 = LOWORD(_S2);
  v12 = 65504.0;
  if (*(double *)(a3 + 32) <= 65504.0)
    v12 = *(double *)(a3 + 32);
  _S2 = v12;
  __asm { FCVT            H2, S2 }
  v14 = v11 | (LOWORD(_S2) << 16);
LABEL_14:
  _H2 = v14;
  _S3 = HIWORD(v14);
  __asm
  {
    FCVT            S4, H2
    FCVT            S5, H3
  }
  if (_Q0.n128_f32[0] == _S4 && v5 == _S5)
    return sub_2398882E8(a1, a2, (uint64_t)v25, _Q0);
  v29 = _Q0.n128_f32[0];
  v20 = 1.0 / (v5 - _Q0.n128_f32[0]);
  __asm { FCVT            D0, H2 }
  v27 = _Q0.n128_u64[0];
  v28 = v20;
  __asm { FCVT            D1, H3 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_239888590(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_2398882E8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_23980D054((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23988852C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239888590(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_23980D684(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398887D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239888838(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  double v11;
  _QWORD v15[4];
  unsigned __int32 v16;
  int v17;
  __int16 v18;
  __int16 v19;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    _Q0.n128_u64[0] = *(_QWORD *)a3;
    if (!*(_BYTE *)(a3 + 8))
      _Q0.n128_f64[0] = -65504.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65504.0;
    if (_Q0.n128_f64[0] < -65504.0)
      _Q0.n128_f64[0] = -65504.0;
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    if (v4 <= 65504.0)
      v11 = v4;
    else
      v11 = 65504.0;
    _S1 = v11;
    v19 = _H0;
    __asm { FCVT            H1, S1 }
    v18 = LOWORD(_S1);
    __asm
    {
      FCVT            S2, H0
      FCVT            S0, H1
    }
    v16 = _Q0.n128_u32[0];
    v17 = _S2;
  }
  else
  {
    v19 = -1025;
    v18 = 31743;
    v17 = -947920896;
    v16 = 1199562752;
  }
  v15[0] = &v17;
  v15[1] = &v19;
  v15[2] = &v16;
  v15[3] = &v18;
  return sub_239888910(a1, a2, (uint64_t)v15, _Q0);
}

uint64_t sub_239888910(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_23980DFC8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239888B54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239888BB8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239886608(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC7E0;
  sub_2398069A4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239888D04(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_239807D64((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239888CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239888CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239888CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239888D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_239888EA8(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239888E44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_239888EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_239889000(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_239889000(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E3CD4(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239889168(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2398891CC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239886608(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC8D8;
  sub_239808068((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398892E0(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398892A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398892C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398892E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AE1E48;
  sub_239808CE0(a2, &v12);
  sub_2398893D8(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239808F4C(a2, (uint64_t)(a3 + 1));
}

void sub_23988939C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398893B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239643FDC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398893C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398893D8(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_2398895AC(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239889588(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398895AC(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_239807484(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_f32[0] = sub_2398078E0((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_239889724(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239889748@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239886608(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE08B8;
  sub_23960A1CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23988985C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239889824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239889840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23988985C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AE1D50;
  sub_2397651A0(a2, &v12);
  sub_239889954(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_23970B1B4(a2, (uint64_t)(a3 + 1));
}

void sub_239889918(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23988992C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239643F74((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239889940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239889954(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_2398895AC(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239889B04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239889B28@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239886608(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC260;
  sub_2397EDAFC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239889C3C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239889C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239889C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239889C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEB950;
  sub_2397F06F4(a2, &v12);
  sub_239889D34(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397F0960(a2, (uint64_t)(a3 + 1));
}

void sub_239889CF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239889D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397C8588((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239889D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239889D34(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_2398895AC(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239889EE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239889F08@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239886608(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6BC8;
  sub_23980ED50((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23988A01C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239889FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23988A000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23988A01C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AE5D10;
  sub_239768BB8(a2, &v12);
  sub_23988A114(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239768E24(a2, (uint64_t)(a3 + 1));
}

void sub_23988A0D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23988A0EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23975F87C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23988A100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23988A114(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_2398895AC(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23988A2C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_23988A2E8(_QWORD *a1, unsigned int *a2)
{
  uint64_t v2;
  char **v3;
  const char *v4;
  uint64_t v5;

  v2 = *a2;
  if (v2 >= 0x29)
  {
    sub_239458500(a1, (uint64_t)"Invalid Format (", 16);
    a1 = (_QWORD *)std::ostream::operator<<();
    v4 = ")";
    v5 = 1;
  }
  else
  {
    v3 = &(&off_250AEEC60)[2 * v2];
    v4 = *v3;
    v5 = (uint64_t)v3[1];
  }
  return sub_239458500(a1, (uint64_t)v4, v5);
}

void sub_23988A34C(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  std::__shared_weak_count *v5;
  void *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  int v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::logic_error *exception;
  const std::string *v14;
  void *__p[2];
  std::__shared_weak_count *v16;
  __int128 v17;
  _BYTE v18[22];
  unsigned __int8 v19;

  sub_23988A4F0(a1, a2, a3, (uint64_t)__p);
  if (!v19)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v14 = (const std::string *)sub_23988A6BC((uint64_t)__p);
    std::logic_error::logic_error(exception, v14);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v6 = __p[1];
  v5 = v16;
  *(_QWORD *)a4 = &off_250ADB778;
  *(_QWORD *)(a4 + 8) = v6;
  *(_QWORD *)(a4 + 16) = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v9 = v19;
    *(_OWORD *)(a4 + 24) = v17;
    *(_OWORD *)(a4 + 40) = *(_OWORD *)v18;
    *(_QWORD *)(a4 + 54) = *(_QWORD *)&v18[14];
    if (!v9)
    {
      if (SHIBYTE(v16) < 0)
        operator delete(__p[0]);
      return;
    }
  }
  else
  {
    *(_OWORD *)(a4 + 24) = v17;
    *(_OWORD *)(a4 + 40) = *(_OWORD *)v18;
    *(_QWORD *)(a4 + 54) = *(_QWORD *)&v18[14];
  }
  nullsub_4((char *)&v17 + 8);
  v10 = v16;
  if (!v16)
    goto LABEL_13;
  v11 = (unint64_t *)&v16->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    j_nullsub_4_89(__p);
  }
  else
  {
LABEL_13:
    j_nullsub_4_89(__p);
  }
}

void sub_23988A4C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23988A6FC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23988A4D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  void *v10;

  __cxa_free_exception(v10);
  sub_23988A6FC((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_23988A4F0(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  std::string __p;
  __int128 v14;
  _BYTE v15[22];
  __int128 __dst;
  uint64_t v17;
  int v18;
  int v19;

  v18 = *(_DWORD *)(a1 + 48);
  v19 = a2;
  if ((sub_23989CF64(v18, a2) & 1) != 0)
  {
    *(_QWORD *)&__dst = &v19;
    *((_QWORD *)&__dst + 1) = a3;
    sub_23988AB2C((uint64_t)&__p, *(_DWORD *)(a1 + 48));
    *(_QWORD *)a4 = &off_250ADB778;
    *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p.__r_.__value_.__r.__words[1];
    *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = 0uLL;
    *(_OWORD *)(a4 + 24) = v14;
    *(_OWORD *)(a4 + 40) = *(_OWORD *)v15;
    *(_QWORD *)(a4 + 54) = *(_QWORD *)&v15[14];
    *(_BYTE *)(a4 + 64) = 1;
    nullsub_4((char *)&v14 + 8);
    v8 = (std::__shared_weak_count *)__p.__r_.__value_.__r.__words[2];
    if (__p.__r_.__value_.__r.__words[2])
    {
      v9 = (unint64_t *)(__p.__r_.__value_.__r.__words[2] + 8);
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    j_nullsub_4_89(&__p);
  }
  else
  {
    v11 = sub_23989D00C(v18, a2);
    sub_23988A78C("Cannot convert format ", (unsigned int *)&v18, " to ", (unsigned int *)&v19, ". (", v11, ")", &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_23941A7F8(&__dst, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      v12 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
      *(_OWORD *)a4 = __dst;
      *(_QWORD *)(a4 + 16) = v17;
      *(_BYTE *)(a4 + 64) = 0;
      if (v12 < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    else
    {
      *(std::string *)a4 = __p;
      *(_BYTE *)(a4 + 64) = 0;
    }
  }
}

void sub_23988A6A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23988A6BC(uint64_t result)
{
  _QWORD *exception;

  if (*(_BYTE *)(result + 64))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_250ADD7A8;
    __cxa_throw(exception, (struct type_info *)&unk_250ADD780, (void (*)(void *))std::exception::~exception);
  }
  return result;
}

uint64_t sub_23988A6FC(uint64_t a1)
{
  __n128 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  if (*(_BYTE *)(a1 + 64))
  {
    v2 = nullsub_4(a1 + 32);
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldaxr(p_shared_owners);
      while (__stlxr(v5 - 1, p_shared_owners));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v3->__on_zero_shared)(v3, v2);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    j_nullsub_4_89(a1);
    return a1;
  }
  if ((*(char *)(a1 + 23) & 0x80000000) == 0)
    return a1;
  operator delete(*(void **)a1);
  return a1;
}

void sub_23988A78C(const char *a1@<X0>, unsigned int *a2@<X1>, const char *a3@<X2>, unsigned int *a4@<X3>, const char *a5@<X4>, uint64_t a6@<X5>, const char *a7@<X6>, std::string *a8@<X8>)
{
  char *v15;
  size_t v16;
  size_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  size_t v23;
  size_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  size_t v30;
  int64x2_t v31;
  int8x16_t v32;
  size_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void *v40;
  char v41;
  char v42;
  void *v43;
  char *v44;
  unint64_t v45;
  void *__p[2];
  char v47;

  v43 = 0;
  v44 = 0;
  v45 = 0;
  v44 = sub_23973F928(&v43, a1);
  sub_23941A18C((uint64_t)__p, (uint64_t)&v43, a2);
  v15 = v44;
  if ((unint64_t)v44 >= v45)
  {
    v19 = sub_23988C120(&v43, a3);
    goto LABEL_12;
  }
  v16 = strlen(a3);
  if (v16 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v17 = v16;
  if (v16 >= 0x17)
  {
    v20 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v16 | 7) != 0x17)
      v20 = v16 | 7;
    v21 = v20 + 1;
    v18 = operator new(v20 + 1);
    *((_QWORD *)v15 + 1) = v17;
    *((_QWORD *)v15 + 2) = v21 | 0x8000000000000000;
    *(_QWORD *)v15 = v18;
  }
  else
  {
    v44[23] = v16;
    v18 = v15;
    if (!v16)
      goto LABEL_11;
  }
  memmove(v18, a3, v17);
LABEL_11:
  *((_BYTE *)v18 + v17) = 0;
  v19 = v15 + 24;
LABEL_12:
  v44 = v19;
  sub_23941A18C((uint64_t)&v42, (uint64_t)&v43, a4);
  v22 = v44;
  if ((unint64_t)v44 >= v45)
  {
    v26 = sub_2397290E8(&v43, a5);
    goto LABEL_23;
  }
  v23 = strlen(a5);
  if (v23 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v24 = v23;
  if (v23 >= 0x17)
  {
    v27 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v23 | 7) != 0x17)
      v27 = v23 | 7;
    v28 = v27 + 1;
    v25 = operator new(v27 + 1);
    *((_QWORD *)v22 + 1) = v24;
    *((_QWORD *)v22 + 2) = v28 | 0x8000000000000000;
    *(_QWORD *)v22 = v25;
  }
  else
  {
    v44[23] = v23;
    v25 = v22;
    if (!v23)
      goto LABEL_22;
  }
  memmove(v25, a5, v24);
LABEL_22:
  *((_BYTE *)v25 + v24) = 0;
  v26 = v22 + 24;
LABEL_23:
  v44 = v26;
  sub_23988C04C((uint64_t)&v41, (uint64_t)&v43, a6);
  v29 = v44;
  if ((unint64_t)v44 >= v45)
  {
    v35 = sub_239583C68(&v43, a7);
    goto LABEL_34;
  }
  v30 = strlen(a7);
  if (v30 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = v30;
  if (v30 >= 0x17)
  {
    v36 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v30 | 7) != 0x17)
      v36 = v30 | 7;
    v37 = v36 + 1;
    v34 = operator new(v36 + 1);
    *((_QWORD *)v29 + 1) = v33;
    *((_QWORD *)v29 + 2) = v37 | 0x8000000000000000;
    *(_QWORD *)v29 = v34;
  }
  else
  {
    v44[23] = v30;
    v34 = v29;
    if (!v30)
      goto LABEL_33;
  }
  memmove(v34, a7, v33);
LABEL_33:
  *((_BYTE *)v34 + v33) = 0;
  v35 = v29 + 24;
LABEL_34:
  v44 = v35;
  v47 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v43, (uint64_t)v35, (uint64_t)__p, a8, v31, v32);
  if (v47 < 0)
    operator delete(__p[0]);
  v38 = (char *)v43;
  if (v43)
  {
    v39 = v44;
    v40 = v43;
    if (v44 != v43)
    {
      do
      {
        if (*(v39 - 1) < 0)
          operator delete(*((void **)v39 - 3));
        v39 -= 24;
      }
      while (v39 != v38);
      v40 = v43;
    }
    v44 = v38;
    operator delete(v40);
  }
}

void sub_23988AA94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

void sub_23988AB2C(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23988AB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int **v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v9 = &off_250ADB350;
  sub_2394949FC(a4, (uint64_t)&v10);
  sub_2398ADAE8((uint64_t)&v9, **v4);
  v5 = v11;
  if (!v11)
    return nullsub_4(&v9);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (v7)
    return nullsub_4(&v9);
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  return nullsub_4(&v9);
}

void sub_23988B82C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23988C04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  unint64_t v6;
  __int128 v7;
  char *v8;
  int v9;
  void *__p[2];
  uint64_t v11;
  uint64_t v12;

  sub_239A43D24(&v12);
  v5 = (_QWORD *)sub_239A43E64(&v12);
  sub_23989D0B0(v5, a3);
  sub_239A43E70();
  sub_239A43DB8(&v12);
  v6 = *(_QWORD *)(a2 + 8);
  if (v6 >= *(_QWORD *)(a2 + 16))
  {
    v8 = sub_23941ACDC((void **)a2, (uint64_t)__p);
    v9 = SHIBYTE(v11);
    *(_QWORD *)(a2 + 8) = v8;
    if (v9 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v7 = *(_OWORD *)__p;
    *(_QWORD *)(v6 + 16) = v11;
    *(_OWORD *)v6 = v7;
    *(_QWORD *)(a2 + 8) = v6 + 24;
  }
}

void sub_23988C0F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_23988C120(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23988C338(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23988C34C(uint64_t a1, int a2)
{
  sub_23988C40C(a2);
}

void sub_23988C37C(uint64_t a1, int a2)
{
  sub_239890F20(a2);
}

void sub_23988C3AC(uint64_t a1, int a2)
{
  sub_239895754(a2);
}

void sub_23988C3DC(uint64_t a1, int a2)
{
  sub_2398993EC(a2);
}

void sub_23988C40C(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23988C430@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23988C504(a1, a2);
}

double sub_23988C43C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23988CD10(a1, a2);
}

double sub_23988C448@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23988D324(a1, a2);
}

double sub_23988C454@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23988E244(a1, a2);
}

double sub_23988C460@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23988F538(a1, a2);
}

double sub_23988C46C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398907EC(a1, a2);
}

uint64_t sub_23988C504@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_23988C710(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEDA18;
  sub_239858A98((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_23988C618(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_23988C5E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23988C5FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23988C618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEA9D0;
  sub_239864A20(a2, &v11);
  sub_23988C9A0(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_23982F700(a2, (uint64_t)(a3 + 1));
}

void sub_23988C6D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23988C6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397B94B8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23988C6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23988C710(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 17;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_23988C850((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_23970B00C((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_23988C814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23988C83C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23988C850(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 17);
  *a2 = &off_250AE38E8;
  sub_239861CB0((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_23988C968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23988C98C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23988C9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_23988CB74(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23988CB50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23988CB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397E5638((unsigned int *)&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_2398626AC((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23988CCEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23988CD10@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23988C710(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE38E8;
  sub_239861CB0((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23988CE5C(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_23970B00C((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23988CE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23988CE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23988CE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23988CE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_23988D000(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23988CF9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_23988D000(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v16 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_23988D158(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_23988D158(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397CB3C8(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23988D2C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_23988D324@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23988C710(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE238;
  sub_239869FBC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23988D438(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23988D400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23988D41C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23988D438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB288;
  sub_23986ABA8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEEF0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2398356DC(a2, (uint64_t)(a4 + 1));
}

void sub_23988D524(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23988D538(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23988D54C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C0024((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23988D560(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_23988D5A8(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_23988D570(uint64_t **a1, uint64_t a2)
{
  return sub_23988DC20(**a1, (*a1)[1], a2);
}

uint64_t sub_23988D580(uint64_t **a1)
{
  char v2;

  return sub_23988D6D0(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_23988D5A8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  double v14;
  int v15;
  double v16;
  unsigned int v17;
  unsigned int v18;
  _QWORD v20[2];
  _QWORD v21[2];
  _QWORD v22[2];
  double v23;
  double v24;
  double v25;
  double v26;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (!*(_BYTE *)(a3 + 16))
  {
    v13 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    LOWORD(v17) = 0;
    v18 = 0xFFFF;
    if (v10)
      goto LABEL_17;
    goto LABEL_15;
  }
  v11 = *(double *)a3;
  a6 = 0.0;
  if (*(double *)a3 < 0.0)
    v11 = 0.0;
  v10 = (int)v11;
  v12 = 255.0;
  if (*(double *)(a3 + 8) <= 255.0)
    v12 = *(double *)(a3 + 8);
  v13 = (int)v12;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v14 = *(double *)(a3 + 24);
  a6 = 0.0;
  if (v14 < 0.0)
    v14 = 0.0;
  v15 = (int)v14;
  v16 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v16 = *(double *)(a3 + 32);
  v17 = v15 | ((int)v16 << 16);
  v18 = HIWORD(v17);
  if (v10 != (unsigned __int16)v17)
    goto LABEL_17;
LABEL_15:
  if (v18 == v13)
    return sub_23988D6D0(a1, a2, (uint64_t)v22);
LABEL_17:
  v26 = (double)v10;
  v24 = (double)(unsigned __int16)v17;
  v25 = 1.0 / ((double)v13 - (double)v10);
  a4.n128_f64[0] = (double)v18 - v24;
  v23 = a4.n128_f64[0];
  v22[0] = &v26;
  v22[1] = &v25;
  v21[0] = &v24;
  v21[1] = &v23;
  v20[0] = v22;
  v20[1] = v21;
  return sub_23988D978(a1, a2, (uint64_t)v20, a4, v24, a6, a7, a8, a9, a10);
}

uint64_t sub_23988D6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_23985A2CC((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23988D914(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23988D978(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double ****v36;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_43;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v36 = (double ****)&v35;
    a4.n128_f64[0] = sub_23985A7C8(&v36, a1, a2, a4.n128_f64[0], a5, a6, a7, a8, a9, a10);
  }
LABEL_37:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23988DBBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23988DC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  __int16 *v8;
  __int16 *v9;
  char *v10;
  __int16 *v11;
  char v12;
  char v13;
  __int16 v14;
  __int16 v15;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    if ((int)v6 <= 0xFF)
    {
      v15 = v5;
      v14 = (int)v6;
      v13 = v5;
      v12 = (int)v6;
      v8 = (__int16 *)&v13;
      v9 = &v15;
      v10 = &v12;
      v11 = &v14;
      return sub_23988DCF4(a1, a2, (uint64_t)&v8);
    }
    v15 = v5;
    LOBYTE(v14) = v5;
  }
  else
  {
    v15 = 0;
    LOBYTE(v14) = 0;
  }
  v8 = &v14;
  v9 = &v15;
  return sub_23988DF9C(a1, a2, (uint64_t)&v8);
}

uint64_t sub_23988DCF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_23985AEA4(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23988DF38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23988DF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_23985B4B8(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23988E1E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23988E244@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23988C710(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE3B8;
  sub_239870D14((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23988E358(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23988E320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23988E33C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23988E358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB380;
  sub_2398718F8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEF08[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23983633C(a2, (uint64_t)(a4 + 1));
}

void sub_23988E444(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23988E458(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23988E46C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C0C6C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23988E480(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23988E594(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23988E490(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_23988EC28((uint64_t)v13, 1006632960, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 1.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_23988EC28((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_23988E56C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23988E6D8(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23988E594(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  unsigned int v4;
  double v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  double v27;

  v4 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v5 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v5 = 0.0;
    v4 = (int)v5;
    _Q0.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = (int)_Q0.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = 255;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm
  {
    FCVT            S3, H0
    FCVT            S3, H1
  }
  _ZF = _ZF && _S3 == (float)v6;
  if (_ZF)
    return sub_23988E6D8(a1, a2, (uint64_t)v23, _Q0);
  v27 = (double)v4;
  __asm { FCVT            D0, H0 }
  v25 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v24 = _Q0.n128_u64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_23988E980(a1, a2, (uint64_t)v21, _Q0, _D1, 1.0 / ((double)v6 - (double)v4));
}

uint64_t sub_23988E6D8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = sub_23985C96C(a4.n128_f32[0], (uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23988E91C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23988E980(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6)
{
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double ****v32;

  v9 = *(_QWORD *)(a1 + 8);
  if (!v9)
    goto LABEL_17;
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v9 = *(_QWORD *)(a1 + 8);
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v30 = 0;
    v18 = *(_QWORD *)(a2 + 8);
    if (!v18)
      goto LABEL_33;
LABEL_18:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(a2 + 8);
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v29, v18, 1);
    v31 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(&v30, v9, 0);
  v18 = *(_QWORD *)(a2 + 8);
  if (v18)
    goto LABEL_18;
LABEL_33:
  v29 = 0;
  v31 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v32 = (double ****)&v31;
    a4.n128_f64[0] = sub_23985CEDC(&v32, a1, a2, a4.n128_f64[0], a5, a6);
  }
LABEL_37:
  v27 = v29;
  v29 = 0;
  if (v27)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v27 + 8))(v27, a4);
  result = v30;
  v30 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23988EBC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23988EC28(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  char *v23;
  __int16 *v24;
  char v25;
  char v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 255.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      LOBYTE(v27) = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_23988EFE8(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 255.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      LOBYTE(v27) = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_23988F290(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_23988E6D8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = (__int16 *)&v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_23988ED40(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_23988ED40(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_23985D6F0(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23988EF84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23988EFE8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_23985DDC4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23988F22C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23988F290(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_23985E3F8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23988F4D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23988F538@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23988C710(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE538;
  sub_23987725C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23988F64C(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23988F614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23988F630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23988F64C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB478;
  sub_239877E48(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEF20[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239836EF4(a2, (uint64_t)(a4 + 1));
}

void sub_23988F738(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23988F74C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23988F760(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C1844((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23988F774(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_23988F874(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_23988F784(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  float v5;
  _QWORD v7[5];
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[2];

  v3 = (*a1)[1];
  v10[0] = **a1;
  v10[1] = v3;
  v9[0] = v10[0];
  v9[1] = v3;
  v8[0] = v10[0];
  v8[1] = v3;
  v7[0] = v10;
  v7[1] = v9;
  v7[2] = v8;
  v7[3] = v10[0];
  v7[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = 0.0;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 1.0;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    v5 = v4;
    return sub_23988FEF4((uint64_t)v7, a3, v5);
  }
  else
  {
    a3.n128_u32[0] = 0;
    return sub_23988FEF4((uint64_t)v7, a3, 1.0);
  }
}

uint64_t sub_23988F84C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23988F9A4(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23988F874(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  unsigned int v12;
  double v13;
  float v14;
  double v16;
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  unint64_t v22;
  double v23;
  uint64_t v24;
  double v25;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v11 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v11 = 0.0;
    v10 = (int)v11;
    a4.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v12 = (int)a4.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      a4.n128_u64[0] = 0xC7EFFFFFE0000000;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
      a4.n128_f32[0] = a4.n128_f64[0];
      v13 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v13 = *(double *)(a3 + 32);
      v14 = v13;
      if (a4.n128_f32[0] != (float)v10 || v14 != (float)v12)
        goto LABEL_15;
      return sub_23988F9A4(a1, a2, (uint64_t)v21, a4);
    }
  }
  else
  {
    v12 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v14 = 1.0;
  a4.n128_u32[0] = 0;
  if ((float)v10 != 0.0 || 1.0 != (float)v12)
  {
LABEL_15:
    v25 = (double)v10;
    v23 = a4.n128_f32[0];
    v16 = v14;
    a4.n128_f64[0] = v16 - a4.n128_f32[0];
    v22 = a4.n128_u64[0];
    v21[0] = &v25;
    v21[1] = &v24;
    v20[0] = &v23;
    v20[1] = &v22;
    v19[0] = v21;
    v19[1] = v20;
    return sub_23988FC4C(a1, a2, (uint64_t)v19, a4, v16, 1.0 / ((double)v12 - (double)v10), 1.0, a8, a9, a10);
  }
  return sub_23988F9A4(a1, a2, (uint64_t)v21, a4);
}

uint64_t sub_23988F9A4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4 = sub_23985F790(a4, (uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23988FBE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23988FC4C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double ****v36;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_43;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v36 = (double ****)&v35;
    a4.n128_f32[0] = sub_23985FCC4(&v36, a1, a2, a4.n128_f32[0], a5, a6, a7, a8, a9, a10);
  }
LABEL_37:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23988FE90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23988FEF4(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  char *v17;
  float *v18;
  char v19;
  char v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 255.0;
    v3 = a3 >= 255.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOBYTE(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_23989029C(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1132396544;
      if (a3 <= 255.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOBYTE(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_239890544(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_23988F9A4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_23988FFF4(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_23988FFF4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2398603CC(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239890238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23989029C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_239860AA0(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398904E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239890544(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2398612C0(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239890788(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398907EC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23988C710(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250ADBEA0;
  sub_239469644((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239890900(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398908C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398908E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239890900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250ADCAF8;
  sub_23949D79C(a2, &v11);
  sub_2398909F4(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_239709138(a2, (uint64_t)(a3 + 1));
}

void sub_2398909B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398909CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23949ABF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398909E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398909F4(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_239890C8C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239890C28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_239890C8C(_DWORD *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t)result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_239890E74(&v26, v33, v10, v13, v19);
        v13 = (__int16 *)((char *)v13 + v32);
        v19 += HIDWORD(v32);
      }
    }
    return sub_239890E74(&v26, v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_239890E74(_DWORD *result, _QWORD *a2, uint64_t a3, __int16 *a4, uint64_t a5)
{
  unsigned int v5;
  char v6;
  __int16 v7;
  char v8;
  __int16 v9;

  *a2 = a4;
  a2[2] = a5;
  if (result[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v6 = *((_BYTE *)a4 + 2);
      v7 = *a4;
      *(_BYTE *)(a5 + 2) = *a4;
      *(_BYTE *)(a2[2] + 1) = HIBYTE(v7);
      *(_BYTE *)a2[2] = v6;
      a4 = (__int16 *)((char *)a4 + result[6]);
      a5 += result[7];
      ++v5;
    }
    while (v5 < result[5]);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v8 = *((_BYTE *)a4 + 2);
  v9 = *a4;
  *(_BYTE *)(a5 + 2) = *a4;
  *(_BYTE *)(a2[2] + 1) = HIBYTE(v9);
  *(_BYTE *)a2[2] = v8;
  return result;
}

void sub_239890F20(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_239890F44@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239891018(a1, a2);
}

double sub_239890F50@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239891824(a1, a2);
}

double sub_239890F5C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239892478(a1, a2);
}

double sub_239890F68@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239892A8C(a1, a2);
}

double sub_239890F74@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239893D90(a1, a2);
}

double sub_239890F80@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239895044(a1, a2);
}

uint64_t sub_239891018@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_239891224(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEDB98;
  sub_239859828((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_23989112C(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398910F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239891110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23989112C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEAAC8;
  sub_23985B93C(a2, &v11);
  sub_2398914B4(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2398302E4(a2, (uint64_t)(a3 + 1));
}

void sub_2398911E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398911FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BA08C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239891210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239891224(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 18;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_239891364((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2398356DC((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_239891328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239891350(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239891364(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 18);
  *a2 = &off_250AEE238;
  sub_239869FBC((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_23989147C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398914A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398914B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_239891688(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239891664(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239891688(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397F28B8(&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_23986A9B8((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239891800(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239891824@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239891224(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE38E8;
  sub_239861CB0((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239891938(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239891900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989191C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239891938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB190;
  sub_23986287C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEF38[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970B00C(a2, (uint64_t)(a4 + 1));
}

void sub_239891A24(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239891A38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239891A4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BF450((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239891A60(uint64_t **a1, uint64_t a2)
{
  return sub_239891AA8(**a1, (*a1)[1], a2);
}

uint64_t sub_239891A70(uint64_t **a1, uint64_t a2)
{
  return sub_239892120(**a1, (*a1)[1], a2);
}

uint64_t sub_239891A80(uint64_t **a1)
{
  char v2;

  return sub_239891BD0(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_239891AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  int v4;
  double v5;
  unsigned int v6;
  unsigned int v7;
  double v8;
  double v9;
  unsigned int v10;
  unsigned int v11;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  double v16;
  double v17;
  double v18;
  double v19;

  if (!*(_BYTE *)(a3 + 16))
  {
    v6 = -65536;
    v7 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    v10 = 255;
    v11 = HIWORD(v6);
    if (v7 != (unsigned __int16)v6)
      goto LABEL_17;
    goto LABEL_15;
  }
  v3 = *(double *)a3;
  if (*(double *)a3 < 0.0)
    v3 = 0.0;
  v4 = (int)v3;
  v5 = 65535.0;
  if (*(double *)(a3 + 8) <= 65535.0)
    v5 = *(double *)(a3 + 8);
  v6 = v4 | ((int)v5 << 16);
  v7 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v8 = *(double *)(a3 + 24);
  if (v8 < 0.0)
    v8 = 0.0;
  v7 = (int)v8;
  v9 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v9 = *(double *)(a3 + 32);
  v10 = (int)v9;
  v11 = HIWORD(v6);
  if (v7 != (unsigned __int16)v6)
    goto LABEL_17;
LABEL_15:
  if (v11 == v10)
    return sub_239891BD0(a1, a2, (uint64_t)v15);
LABEL_17:
  v19 = (double)(unsigned __int16)v6;
  v17 = (double)v7;
  v18 = 1.0 / ((double)v11 - v19);
  v16 = (double)v10 - (double)v7;
  v15[0] = &v19;
  v15[1] = &v18;
  v14[0] = &v17;
  v14[1] = &v16;
  v13[0] = v15;
  v13[1] = v14;
  return sub_239891E78(a1, a2, (uint64_t)v13);
}

uint64_t sub_239891BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2398638A4((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239891E14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239891E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double ****v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (double ****)&v28;
    sub_239863D9C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398920BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239892120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  _QWORD v8[4];
  int v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    HIWORD(v9) = v5;
    LOWORD(v9) = (int)v6;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 255;
  }
  v8[0] = (char *)&v9 + 2;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_2398921D0(a1, a2, (uint64_t)v8);
}

uint64_t sub_2398921D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int16 ***)&v28;
    sub_23986460C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239892414(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239892478@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239891224(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE238;
  sub_239869FBC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398925C4(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2398356DC((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239892568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989258C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398925A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398925C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_239892768(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239892704(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_239892768(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v16 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2398928C0(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2398928C0(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397D5B2C(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239892A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_239892A8C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239891224(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE3B8;
  sub_239870D14((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239892BA0(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239892B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239892B84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239892BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB380;
  sub_2398718F8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEF50[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23983633C(a2, (uint64_t)(a4 + 1));
}

void sub_239892C8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239892CA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239892CB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C0C6C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239892CC8(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239892DDC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239892CD8(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_23989347C((uint64_t)v13, 1006632960, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 1.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_23989347C((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_239892DB4(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_239892F2C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239892DDC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  unsigned int v15;
  unsigned int v18;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    _Q0.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)_Q0.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  v15 = (unsigned __int16)v6;
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm { FCVT            S3, H0 }
  v18 = HIWORD(v6);
  __asm { FCVT            S3, H1 }
  _ZF = _ZF && _S3 == (float)v18;
  if (_ZF)
    return sub_239892F2C(a1, a2, (uint64_t)v25, _Q0);
  v29 = (double)v15;
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_2398931D4(a1, a2, (uint64_t)v23, _Q0, _D1, 1.0 / ((double)v18 - (double)v15));
}

uint64_t sub_239892F2C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = sub_2398659E4(a4.n128_f32[0], (uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239893170(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398931D4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6)
{
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double ****v32;

  v9 = *(_QWORD *)(a1 + 8);
  if (!v9)
    goto LABEL_17;
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v9 = *(_QWORD *)(a1 + 8);
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v30 = 0;
    v18 = *(_QWORD *)(a2 + 8);
    if (!v18)
      goto LABEL_33;
LABEL_18:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(a2 + 8);
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v29, v18, 1);
    v31 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(&v30, v9, 0);
  v18 = *(_QWORD *)(a2 + 8);
  if (v18)
    goto LABEL_18;
LABEL_33:
  v29 = 0;
  v31 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v32 = (double ****)&v31;
    a4.n128_f64[0] = sub_239865F60(&v32, a1, a2, a4.n128_f64[0], a5, a6);
  }
LABEL_37:
  v27 = v29;
  v29 = 0;
  if (v27)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v27 + 8))(v27, a4);
  result = v30;
  v30 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239893418(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23989347C(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  __int16 *v23;
  __int16 *v24;
  __int16 v25;
  __int16 v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 65535.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      v27 = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_239893840(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 65535.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      v27 = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_239893AE8(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_239892F2C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = &v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_239893598(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_239893598(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_239866778(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398937DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239893840(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_239866E4C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239893A84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239893AE8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_239867480(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239893D2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239893D90@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239891224(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE538;
  sub_23987725C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239893EA4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239893E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239893E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239893EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB478;
  sub_239877E48(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEF68[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239836EF4(a2, (uint64_t)(a4 + 1));
}

void sub_239893F90(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239893FA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239893FB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C1844((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239893FCC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398940CC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239893FDC(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  float v5;
  _QWORD v7[5];
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[2];

  v3 = (*a1)[1];
  v10[0] = **a1;
  v10[1] = v3;
  v9[0] = v10[0];
  v9[1] = v3;
  v8[0] = v10[0];
  v8[1] = v3;
  v7[0] = v10;
  v7[1] = v9;
  v7[2] = v8;
  v7[3] = v10[0];
  v7[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = 0.0;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 1.0;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    v5 = v4;
    return sub_239894748((uint64_t)v7, a3, v5);
  }
  else
  {
    a3.n128_u32[0] = 0;
    return sub_239894748((uint64_t)v7, a3, 1.0);
  }
}

uint64_t sub_2398940A4(uint64_t **a1, __n128 a2, float a3)
{
  char v4;

  return sub_2398941F8(**a1, (*a1)[1], (uint64_t)&v4, a2, a3);
}

uint64_t sub_2398940CC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  float v8;
  unsigned int v9;
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  unint64_t v15;
  double v16;
  double v17;
  double v18;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    a4.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)a4.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v8 = 1.0;
    a4.n128_u32[0] = 0;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  a4.n128_u64[0] = 0xC7EFFFFFE0000000;
  if (*(double *)(a3 + 24) >= -3.40282347e38)
    a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
  a4.n128_f32[0] = a4.n128_f64[0];
  v7 = 3.40282347e38;
  if (*(double *)(a3 + 32) <= 3.40282347e38)
    v7 = *(double *)(a3 + 32);
  v8 = v7;
LABEL_14:
  v9 = HIWORD(v6);
  if (a4.n128_f32[0] == (float)(unsigned __int16)v6 && v8 == (float)v9)
    return sub_2398941F8(a1, a2, (uint64_t)v14, a4, v8);
  v18 = (double)(unsigned __int16)v6;
  v16 = a4.n128_f32[0];
  v17 = 1.0 / ((double)v9 - v18);
  a4.n128_f64[0] = v8 - a4.n128_f32[0];
  v15 = a4.n128_u64[0];
  v14[0] = &v18;
  v14[1] = &v17;
  v13[0] = &v16;
  v13[1] = &v15;
  v12[0] = v14;
  v12[1] = v13;
  return sub_2398944A0(a1, a2, (uint64_t)v12, a4);
}

uint64_t sub_2398941F8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, float a5)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    goto LABEL_17;
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(p_shared_owners);
  while (__stxr(v11 + 1, p_shared_owners));
  do
    v12 = __ldaxr(p_shared_owners);
  while (__stlxr(v12 - 1, p_shared_owners));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  v8 = *(_QWORD *)(a1 + 8);
  v13 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v13)
    goto LABEL_43;
  v14 = (unint64_t *)&v13->__shared_owners_;
  do
    v15 = __ldxr(v14);
  while (__stxr(v15 + 1, v14));
  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (v16)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v29 = 0;
    v17 = *(_QWORD *)(a2 + 8);
    if (!v17)
      goto LABEL_33;
LABEL_18:
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
    v17 = *(_QWORD *)(a2 + 8);
    v22 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v22)
      goto LABEL_29;
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v17 + 96))(&v28, v17, 1);
    v30 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v8 + 96))(&v29, v8, 0);
  v17 = *(_QWORD *)(a2 + 8);
  if (v17)
    goto LABEL_18;
LABEL_33:
  v28 = 0;
  v30 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v31 = &v30;
    a4.n128_f32[0] = sub_239867F1C(a4.n128_f32[0], a5, (uint64_t)&v31, a1, a2);
  }
LABEL_37:
  v26 = v28;
  v28 = 0;
  if (v26)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v26 + 8))(v26, a4);
  result = v29;
  v29 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23989443C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398944A0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t **v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (uint64_t **)&v29;
    a4.n128_f32[0] = sub_239868448(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398946E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239894748(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  __int16 *v17;
  float *v18;
  __int16 v19;
  __int16 v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 65535.0;
    v3 = a3 >= 65535.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOWORD(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_239894AF4(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1199570688;
      if (a3 <= 65535.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOWORD(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_239894D9C(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_2398941F8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2, a3);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_23989484C(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_23989484C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_239868B34(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239894A90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239894AF4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_239869200(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239894D38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239894D9C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_23986992C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239894FE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239895044@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239891224(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6058;
  sub_23986B020((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239895158(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239895120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989513C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239895158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE4D98;
  sub_239763350(a2, &v11);
  sub_23989524C(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397635BC(a2, (uint64_t)(a3 + 1));
}

void sub_239895210(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239895224(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23974B4CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239895238(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23989524C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2398954E4(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239895480(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2398954E4(_DWORD *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t)result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_QWORD *)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2398956CC(&v26, v33, v10, v13, v19);
        v13 += 2 * v32;
        v19 += 2 * HIDWORD(v32);
      }
    }
    return sub_2398956CC(&v26, v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2398956CC(_DWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  __int16 v6;
  unint64_t v7;
  __int16 v8;
  unint64_t v9;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  if (v5)
  {
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v6 = *(_WORD *)(a4 + 4);
      HIDWORD(v7) = *(_DWORD *)a4;
      LODWORD(v7) = *(_DWORD *)a4;
      *(_DWORD *)(a5 + 2) = v7 >> 16;
      *(_WORD *)a5 = v6;
      a4 += 2 * result[6];
      a5 += 2 * result[7];
      --v5;
    }
    while (v5);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v8 = *(_WORD *)(a4 + 4);
  HIDWORD(v9) = *(_DWORD *)a4;
  LODWORD(v9) = *(_DWORD *)a4;
  *(_DWORD *)(a5 + 2) = v9 >> 16;
  *(_WORD *)a5 = v8;
  return result;
}

void sub_239895754(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_239895778@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23989584C(a1, a2);
}

double sub_239895784@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239896058(a1, a2);
}

double sub_239895790@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239896CEC(a1, a2);
}

double sub_23989579C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23989798C(a1, a2);
}

double sub_2398957A8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239898010(a1, a2);
}

double sub_2398957B4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239898CB8(a1, a2);
}

uint64_t sub_23989584C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_239895A58(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEDD18;
  sub_23985BDE4((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_239895960(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_239895928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239895944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239895960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEABC0;
  sub_23985E784(a2, &v12);
  sub_239895CE8(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239830F44(a2, (uint64_t)(a3 + 1));
}

void sub_239895A1C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239895A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BACD4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239895A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239895A58(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 19;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_239895B98((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_23983633C((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_239895B5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239895B84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239895B98(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 19);
  *a2 = &off_250AEE3B8;
  sub_239870D14((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_239895CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239895CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239895CE8(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_239895EBC(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239895E98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239895EBC(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        a3.n128_f64[0] = sub_2397FDF14(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_u64[0] = sub_239871710((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_239896034(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239896058@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239895A58(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE38E8;
  sub_239861CB0((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23989616C(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239896134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239896150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23989616C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB190;
  sub_23986287C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEF80[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970B00C(a2, (uint64_t)(a4 + 1));
}

void sub_239896258(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23989626C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239896280(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BF450((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239896294(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398962DC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398962A4(uint64_t **a1, uint64_t a2)
{
  return sub_23989697C(**a1, (*a1)[1], a2);
}

uint64_t sub_2398962B4(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23989642C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398962DC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  unsigned int v12;
  double v13;
  double v14;
  unsigned int v15;
  _QWORD v22[2];
  _QWORD v23[2];
  _QWORD v24[2];
  double v25;
  double v26;
  double v27;
  double v28;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    v12 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = 255;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  v12 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v13 = *(double *)(a3 + 24);
  if (v13 < 0.0)
    v13 = 0.0;
  v12 = (int)v13;
  v14 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v14 = *(double *)(a3 + 32);
  v15 = (int)v14;
LABEL_14:
  __asm
  {
    FCVT            S3, H0
    FCVT            S2, H1
  }
  _ZF = _ZF && _S2 == (float)v15;
  if (_ZF)
    return sub_23989642C(a1, a2, (uint64_t)v24, _Q0);
  __asm { FCVT            D0, H0 }
  v28 = _D0;
  __asm { FCVT            D1, H1 }
  v26 = (double)v12;
  v27 = 1.0 / (_D1 - _D0);
  v25 = (double)v15 - (double)v12;
  v24[0] = &v28;
  v24[1] = &v27;
  v23[0] = &v26;
  v23[1] = &v25;
  v22[0] = v24;
  v22[1] = v23;
  return sub_2398966D4(a1, a2, (uint64_t)v22);
}

uint64_t sub_23989642C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_23986C284((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239896670(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398966D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double ****v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (double ****)&v28;
    sub_23986C82C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239896918(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23989697C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  char v19;
  char v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 23544;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_239896A44(a1, a2, (uint64_t)v16);
}

uint64_t sub_239896A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_23986D0B4(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239896C88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239896CEC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239895A58(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE238;
  sub_239869FBC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239896E00(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239896DC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239896DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239896E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB288;
  sub_23986ABA8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEF98[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2398356DC(a2, (uint64_t)(a4 + 1));
}

void sub_239896EEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239896F00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239896F14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C0024((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239896F28(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239896F70(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239896F38(uint64_t **a1, uint64_t a2)
{
  return sub_23989761C(**a1, (*a1)[1], a2);
}

uint64_t sub_239896F48(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398970CC(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239896F70(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v18;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  double v26;
  double v27;
  double v28;
  unint64_t v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = -65536;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
LABEL_14:
  v16 = (unsigned __int16)v15;
  __asm { FCVT            S2, H0 }
  v18 = HIWORD(v15);
  __asm { FCVT            S2, H1 }
  _ZF = _ZF && _S2 == (float)v18;
  if (_ZF)
    return sub_2398970CC(a1, a2, (uint64_t)v25, _Q0);
  __asm { FCVT            D0, H0 }
  v29 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  v27 = (double)v16;
  v28 = 1.0 / (_D1 - _Q0.n128_f64[0]);
  _Q0.n128_f64[0] = (double)v18 - (double)v16;
  v26 = _Q0.n128_f64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_239897374(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_2398970CC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_23986DC6C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239897310(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239897374(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_23986E268(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398975B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23989761C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  __int16 v19;
  __int16 v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 31744;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_2398976E4(a1, a2, (uint64_t)v16);
}

uint64_t sub_2398976E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_23986E93C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239897928(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23989798C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239895A58(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE3B8;
  sub_239870D14((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239897AD8(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_23983633C((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239897A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239897AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239897ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239897AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v17, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v17 = 0;
LABEL_17:
  sub_239622218(a2, &v16);
  v13.n128_u64[0] = sub_239897C7C(a1, a2);
  v14 = v16;
  v16 = 0;
  if (v14)
    (*(void (**)(uint64_t, float))(*(_QWORD *)v14 + 8))(v14, v13.n128_f32[0]);
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v13);
  return result;
}

void sub_239897C18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

__int16 sub_239897C7C@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  __int16 *v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  __int16 v26;
  uint64_t v28;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 != *(_DWORD *)(a2 + 108) || v4 != v5)
  {
    v28 = (3 * *(_DWORD *)(a1 + 56));
    sub_239897E44(a1, a2, &v28);
    return v7;
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
  v9 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(_QWORD *)(v3 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 128) && v16)
  {
    a1 = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
    v16 = *(_QWORD *)(a2 + 32);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v17 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v17 < 0xF || (unint64_t)(v16 - v9) < 0x20)
    {
      v20 = (_WORD *)v16;
      v21 = (__int16 *)v9;
    }
    else
    {
      v18 = v17 + 1;
      v19 = (v17 + 1) & 0xFFFFFFFFFFFFFFF0;
      v20 = (_WORD *)(v16 + 2 * v19);
      v21 = (__int16 *)(v9 + 2 * v19);
      v22 = (__int128 *)(v9 + 16);
      v23 = (_OWORD *)(v16 + 16);
      v24 = v19;
      do
      {
        v7 = *(v22 - 1);
        v25 = *v22;
        *(v23 - 1) = v7;
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 16;
      }
      while (v24);
      if (v18 == v19)
        return v7;
    }
    do
    {
      v26 = *v21++;
      LOWORD(v7) = v26;
      *v20++ = v26;
    }
    while (v21 != (__int16 *)(v9 + 2 * v8));
  }
  return v7;
}

uint64_t sub_239897E44(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v19 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v19, v6, 0);
LABEL_17:
  sub_239622218(a2, &v18);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    v15.n128_f64[0] = sub_2397DDAD4(a3, a1, a2);
  v16 = v18;
  v18 = 0;
  if (v16)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v16 + 8))(v16, v15);
  result = v19;
  v19 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_239897FAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_239898010@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239895A58(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE538;
  sub_23987725C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239898124(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398980EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239898108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239898124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB478;
  sub_239877E48(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEFB0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239836EF4(a2, (uint64_t)(a4 + 1));
}

void sub_239898210(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239898224(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239898238(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C1844((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23989824C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239898294(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23989825C(uint64_t **a1, uint64_t a2)
{
  return sub_239898948(**a1, (*a1)[1], a2);
}

uint64_t sub_23989826C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398983F8(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239898294(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  float v13;
  double v14;
  float v15;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  unint64_t v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v12 = -3.40282347e38;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        v12 = *(double *)(a3 + 24);
      v13 = v12;
      v14 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v14 = *(double *)(a3 + 32);
      v15 = v14;
      __asm
      {
        FCVT            S4, H0
        FCVT            S5, H1
      }
      if (v13 != _S4 || v15 != _S5)
        goto LABEL_15;
      return sub_2398983F8(a1, a2, (uint64_t)v26, _Q0);
    }
  }
  else
  {
    _Q0.n128_u32[0] = 1006632960;
    LOWORD(_S1) = 15360;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v15 = 1.0;
  v13 = 0.0;
  __asm
  {
    FCVT            S4, H0
    FCVT            S5, H1
  }
  if (_S4 != 0.0 || 1.0 != _S5)
  {
LABEL_15:
    __asm { FCVT            D0, H0 }
    v30 = _Q0.n128_u64[0];
    __asm { FCVT            D1, H1 }
    v28 = v13;
    v29 = 1.0 / (_D1 - _Q0.n128_f64[0]);
    _Q0.n128_f64[0] = v15 - v13;
    v27 = _Q0.n128_f64[0];
    v26[0] = &v30;
    v26[1] = &v29;
    v25[0] = &v28;
    v25[1] = &v27;
    v24[0] = v26;
    v24[1] = v25;
    return sub_2398986A0(a1, a2, (uint64_t)v24, _Q0);
  }
  return sub_2398983F8(a1, a2, (uint64_t)v26, _Q0);
}

uint64_t sub_2398983F8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_23986FB3C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23989863C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398986A0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f32[0] = sub_23987007C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398988E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239898948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  _QWORD v14[4];
  __int16 v15;
  __int16 v16;
  float v17;
  float v18;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 1.0;
    if (v3 < -3.40282347e38)
      v3 = -3.40282347e38;
    _S0 = v3;
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    _S1 = v4;
    v17 = _S1;
    v18 = _S0;
    __asm { FCVT            H0, S0 }
    v16 = _H0;
    __asm { FCVT            H0, S1 }
  }
  else
  {
    v17 = 1.0;
    v18 = 0.0;
    _H0 = 15360;
    v16 = 0;
  }
  v15 = _H0;
  v14[0] = &v16;
  v14[1] = &v18;
  v14[2] = &v15;
  v14[3] = &v17;
  return sub_239898A10(a1, a2, (uint64_t)v14);
}

uint64_t sub_239898A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_239870750(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239898C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239898CB8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239895A58(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE09C8;
  sub_23962787C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239898DCC(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239898D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239898DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239898DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE4F20;
  sub_239763690(a2, &v12);
  sub_239898EC0(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397638FC(a2, (uint64_t)(a3 + 1));
}

void sub_239898E84(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239898E98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23974D3CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239898EAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239898EC0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_239899158(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398990F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239899158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_239899340(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += 2 * HIDWORD(v33);
      }
    }
    *(_QWORD *)&result = sub_239899340(&v27, v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_239899340@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, __int16 *a4@<X3>, uint64_t a5@<X4>)
{
  unsigned int v5;
  int v6;
  __int16 result;
  int v8;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
      v6 = *(_DWORD *)(a4 + 1);
      *(_WORD *)(a5 + 4) = *a4;
      *(_WORD *)(a2[2] + 2) = v6;
      *(_WORD *)a2[2] = HIWORD(v6);
      a4 += a1[6];
      a5 += 2 * a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
  }
  result = *a4;
  v8 = *(_DWORD *)(a4 + 1);
  *(_WORD *)(a5 + 4) = *a4;
  *(_WORD *)(a2[2] + 2) = v8;
  *(_WORD *)a2[2] = HIWORD(v8);
  return result;
}

void sub_2398993EC(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_239899410@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398994E4(a1, a2);
}

double sub_23989941C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239899CF0(a1, a2);
}

double sub_239899428@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23989A950(a1, a2);
}

double sub_239899434@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23989B5B0(a1, a2);
}

double sub_239899440@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23989C240(a1, a2);
}

double sub_23989944C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23989C854(a1, a2);
}

uint64_t sub_2398994E4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398996F0(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEDE98;
  sub_23985EC2C((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398995F8(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398995C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398995DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398995F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEACB8;
  sub_239861838(a2, &v12);
  sub_239899980(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239831AFC(a2, (uint64_t)(a3 + 1));
}

void sub_2398996B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398996C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BB8AC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398996DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398996F0(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 20;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_239899830((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_239836EF4((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398997F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23989981C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239899830(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 20);
  *a2 = &off_250AEE538;
  sub_23987725C((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_239899948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23989996C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239899980(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_239899B54(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239899B30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239899B54(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_239807484(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_f32[0] = sub_239877C58((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_239899CCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239899CF0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398996F0(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE38E8;
  sub_239861CB0((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239899E04(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239899DCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239899DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239899E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB190;
  sub_23986287C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEFC8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970B00C(a2, (uint64_t)(a4 + 1));
}

void sub_239899EF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239899F04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239899F18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BF450((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239899F2C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239899F74(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239899F3C(uint64_t **a1, uint64_t a2)
{
  return sub_23989A5F4(**a1, (*a1)[1], a2);
}

uint64_t sub_239899F4C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23989A0A4(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239899F74(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  unsigned int v6;
  double v7;
  double v8;
  unsigned int v9;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  double v16;
  double v17;
  double v18;
  double v19;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v7 = *(double *)(a3 + 24);
      if (v7 < 0.0)
        v7 = 0.0;
      v6 = (int)v7;
      v8 = 255.0;
      if (*(double *)(a3 + 32) <= 255.0)
        v8 = *(double *)(a3 + 32);
      v9 = (int)v8;
      if (a4.n128_f32[0] != (float)v6 || v5 != (float)(int)v8)
        goto LABEL_15;
      return sub_23989A0A4(a1, a2, (uint64_t)v15, a4);
    }
  }
  else
  {
    v5 = 1.0;
    a4.n128_u32[0] = 0;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v9 = 255;
  if (a4.n128_f32[0] != (float)v6 || v5 != (float)0xFFu)
  {
LABEL_15:
    v19 = a4.n128_f32[0];
    v17 = (double)v6;
    v18 = 1.0 / (v5 - a4.n128_f32[0]);
    v16 = (double)v9 - (double)v6;
    v15[0] = &v19;
    v15[1] = &v18;
    v14[0] = &v17;
    v14[1] = &v16;
    v13[0] = v15;
    v13[1] = v14;
    return sub_23989A34C(a1, a2, (uint64_t)v13);
  }
  return sub_23989A0A4(a1, a2, (uint64_t)v15, a4);
}

uint64_t sub_23989A0A4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239872928((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23989A2E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23989A34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double ****v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (double ****)&v28;
    sub_239872EA0(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23989A590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23989A5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1132396544;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_23989A6A8(a1, a2, (uint64_t)v8);
}

uint64_t sub_23989A6A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_239873714(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23989A8EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23989A950@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398996F0(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE238;
  sub_239869FBC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23989AA64(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23989AA2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989AA48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23989AA64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB288;
  sub_23986ABA8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEFE0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2398356DC(a2, (uint64_t)(a4 + 1));
}

void sub_23989AB50(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23989AB64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989AB78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C0024((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23989AB8C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23989ABD4(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23989AB9C(uint64_t **a1, uint64_t a2)
{
  return sub_23989B250(**a1, (*a1)[1], a2);
}

uint64_t sub_23989ABAC(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23989AD00(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23989ABD4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  double v6;
  int v7;
  double v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v9 = -65536;
    goto LABEL_14;
  }
  v5 = 1.0;
  a4.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = *(double *)(a3 + 24);
  if (v6 < 0.0)
    v6 = 0.0;
  v7 = (int)v6;
  v8 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v8 = *(double *)(a3 + 32);
  v9 = v7 | ((int)v8 << 16);
LABEL_14:
  v10 = (unsigned __int16)v9;
  v11 = HIWORD(v9);
  if (a4.n128_f32[0] == (float)v10 && v5 == (float)v11)
    return sub_23989AD00(a1, a2, (uint64_t)v16, a4);
  v20 = a4.n128_f32[0];
  v18 = (double)v10;
  v19 = 1.0 / (v5 - a4.n128_f32[0]);
  a4.n128_f64[0] = (double)v11 - (double)v10;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = v16;
  v14[1] = v15;
  return sub_23989AFA8(a1, a2, (uint64_t)v14, a4);
}

uint64_t sub_23989AD00(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239874250((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23989AF44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23989AFA8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2398747C8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23989B1EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23989B250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  __int16 v10;
  __int16 v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1199570688;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_23989B308(a1, a2, (uint64_t)v8);
}

uint64_t sub_23989B308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_239874E7C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23989B54C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23989B5B0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398996F0(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE3B8;
  sub_239870D14((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23989B6C4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23989B68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989B6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23989B6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB380;
  sub_2398718F8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEFF8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23983633C(a2, (uint64_t)(a4 + 1));
}

void sub_23989B7B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23989B7C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989B7D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C0C6C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23989B7EC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23989B834(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23989B7FC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23989BECC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23989B80C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23989B97C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23989B834(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  float v5;
  double v6;
  unsigned __int16 v11;
  double v12;
  unsigned int v14;
  double v20;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    _Q0.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      _Q0.n128_u64[0] = *(_QWORD *)a3;
    _Q0.n128_f32[0] = _Q0.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v5 = 1.0;
  _Q0.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v6 = *(double *)(a3 + 24);
  _S2 = v6;
  __asm { FCVT            H2, S2 }
  v11 = LOWORD(_S2);
  v12 = 65504.0;
  if (*(double *)(a3 + 32) <= 65504.0)
    v12 = *(double *)(a3 + 32);
  _S2 = v12;
  __asm { FCVT            H2, S2 }
  v14 = v11 | (LOWORD(_S2) << 16);
LABEL_14:
  _H2 = v14;
  _S3 = HIWORD(v14);
  __asm
  {
    FCVT            S4, H2
    FCVT            S5, H3
  }
  if (_Q0.n128_f32[0] == _S4 && v5 == _S5)
    return sub_23989B97C(a1, a2, (uint64_t)v25, _Q0);
  v29 = _Q0.n128_f32[0];
  v20 = 1.0 / (v5 - _Q0.n128_f32[0]);
  __asm { FCVT            D0, H2 }
  v27 = _Q0.n128_u64[0];
  v28 = v20;
  __asm { FCVT            D1, H3 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_23989BC24(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_23989B97C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = sub_239875914((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23989BBC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23989BC24(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_239875E54(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23989BE68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23989BECC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  _QWORD v14[4];
  unint64_t v15;
  __int16 v16;
  __int16 v17;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    _Q0.n128_u64[0] = *(_QWORD *)a3;
    if (!*(_BYTE *)(a3 + 8))
      _Q0.n128_f64[0] = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 1.0;
    if (_Q0.n128_f64[0] < -65504.0)
      _Q0.n128_f64[0] = -65504.0;
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    if (v4 > 65504.0)
      v4 = 65504.0;
    _S1 = v4;
    v17 = _H0;
    __asm { FCVT            H1, S1 }
    v16 = LOWORD(_S1);
    __asm
    {
      FCVT            S2, H0
      FCVT            S0, H1
    }
    v15 = __PAIR64__(_S2, _Q0.n128_u32[0]);
  }
  else
  {
    v17 = 0;
    v16 = 15360;
    v15 = 1065353216;
  }
  v14[0] = (char *)&v15 + 4;
  v14[1] = &v17;
  v14[2] = &v15;
  v14[3] = &v16;
  return sub_23989BF98(a1, a2, (uint64_t)v14, _Q0);
}

uint64_t sub_23989BF98(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_239876628(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23989C1DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23989C240@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398996F0(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE538;
  sub_23987725C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23989C38C(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_239836EF4((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23989C330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989C354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989C370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23989C38C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_23989C530(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23989C4CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_23989C530(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v16 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_23989C688(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_23989C688(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E3CD4(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23989C7F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_23989C854@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398996F0(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250ADDC30;
  sub_239609B40((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23989C968(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23989C930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989C94C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23989C968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE50A8;
  sub_2397639D0(a2, &v12);
  sub_23989CA5C(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_23970977C(a2, (uint64_t)(a3 + 1));
}

void sub_23989CA20(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23989CA34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23974F3D4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23989CA48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23989CA5C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_u64[0] = (unint64_t)sub_23989CCF4(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23989CC90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

int32x2_t sub_23989CCF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  int32x2_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  int32x2_t result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_QWORD *)(a2 + 24);
    }
    v19 = *(int32x2_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(int32x2_t **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_23989CEDC(&v27, v34, a1, v13, v19);
        v13 += 4 * v33;
        v19 = (int32x2_t *)((char *)v19 + 4 * HIDWORD(v33));
      }
    }
    return sub_23989CEDC(&v27, v34, a1, v13, v19);
  }
  return result;
}

int32x2_t sub_23989CEDC(_DWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, int32x2_t *a5)
{
  int v5;
  int32x2_t v6;
  int32x2_t v7;
  int32x2_t result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  if (v5)
  {
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
      v6 = *(int32x2_t *)(a4 + 4);
      a5[1].i32[0] = *(_DWORD *)a4;
      *a5 = vrev64_s32(v6);
      a4 += 4 * a1[6];
      a5 = (int32x2_t *)((char *)a5 + 4 * a1[7]);
      --v5;
    }
    while (v5);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
  }
  v7 = *(int32x2_t *)(a4 + 4);
  a5[1].i32[0] = *(_DWORD *)a4;
  result = vrev64_s32(v7);
  *a5 = result;
  return result;
}

uint64_t sub_23989CF64(int a1, int a2)
{
  unsigned __int8 v2;
  int v4;
  int v5;
  int v6;
  int v7;

  v2 = atomic_load((unsigned __int8 *)&qword_25693C7D0);
  if ((v2 & 1) == 0)
  {
    v4 = a1;
    v5 = a2;
    v6 = __cxa_guard_acquire(&qword_25693C7D0);
    a2 = v5;
    v7 = v6;
    a1 = v4;
    if (v7)
    {
      qword_25693C7D8 = (uint64_t)&unk_239EFC620;
      unk_25693C7E0 = xmmword_239EFC610;
      __cxa_guard_release(&qword_25693C7D0);
      a1 = v4;
      a2 = v5;
    }
  }
  return *(unsigned __int8 *)(qword_25693C7D8 + 12 * (dword_25693C7E8 * a2 + unk_25693C7EC * a1));
}

uint64_t sub_23989D00C(int a1, int a2)
{
  unsigned __int8 v2;
  int v4;
  int v5;
  int v6;
  int v7;

  v2 = atomic_load((unsigned __int8 *)&qword_25693C7D0);
  if ((v2 & 1) == 0)
  {
    v4 = a1;
    v5 = a2;
    v6 = __cxa_guard_acquire(&qword_25693C7D0);
    a2 = v5;
    v7 = v6;
    a1 = v4;
    if (v7)
    {
      qword_25693C7D8 = (uint64_t)&unk_239EFC620;
      unk_25693C7E0 = xmmword_239EFC610;
      __cxa_guard_release(&qword_25693C7D0);
      a1 = v4;
      a2 = v5;
    }
  }
  return qword_25693C7D8 + 12 * (dword_25693C7E8 * a2 + unk_25693C7EC * a1);
}

_QWORD *sub_23989D0B0(_QWORD *a1, uint64_t a2)
{
  unsigned int v4;
  BOOL v5;
  BOOL v7;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *result;
  _QWORD *v11;
  uint64_t *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t *v15;
  _QWORD *v16;
  int v17;
  const char *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD v21[3];
  std::string __p;

  v4 = *(_DWORD *)(a2 + 4);
  if (*(_BYTE *)a2)
    v5 = v4 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 1)
  {
    sub_239458500(a1, (uint64_t)"{convertible, ", 14);
    v12 = (uint64_t *)&(&off_250AEF020)[2 * *(int *)(a2 + 4)];
    v13 = sub_239458500(a1, *v12, v12[1]);
    sub_239458500(v13, (uint64_t)" conversion", 11);
    if (!*(_DWORD *)(a2 + 8))
      return sub_239458500(a1, (uint64_t)"}", 1);
    v14 = sub_239458500(a1, (uint64_t)", ", 2);
    v15 = (uint64_t *)&(&off_250AEF060)[2 * *(int *)(a2 + 8)];
    v16 = sub_239458500(v14, *v15, v15[1]);
    sub_239458500(v16, (uint64_t)" accuracy", 9);
    v17 = *(_DWORD *)(a2 + 8);
    if ((v17 & 0xFFFFFFFE) == 4)
    {
      v18 = " (lossful)";
      v19 = a1;
      v20 = 10;
    }
    else
    {
      if ((v17 - 1) > 2)
        return sub_239458500(a1, (uint64_t)"}", 1);
      v18 = " (lossless)";
      v19 = a1;
      v20 = 11;
    }
LABEL_34:
    sub_239458500(v19, (uint64_t)v18, v20);
    return sub_239458500(a1, (uint64_t)"}", 1);
  }
  if (*(_BYTE *)a2)
    v7 = 1;
  else
    v7 = v4 > 1;
  if (!v7)
  {
    sub_239458500(a1, (uint64_t)"{not convertible, ", 18);
    if (v4)
      v18 = "conversion not yet supported";
    else
      v18 = "formats unrelated";
    if (v4)
      v20 = 28;
    else
      v20 = 17;
    v19 = a1;
    goto LABEL_34;
  }
  v21[0] = a2;
  v21[1] = a2 + 4;
  v21[2] = a2 + 8;
  sub_23989D2BC((uint64_t)v21, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  result = sub_239458500(a1, (uint64_t)p_p, size);
  v11 = result;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    return v11;
  }
  return result;
}

void sub_23989D2A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23989D2BC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  int64x2_t v4;
  int8x16_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  void *v10;
  char v11;
  void *v12;
  char *v13;
  unint64_t v14;
  void *__p[2];
  char *v16;

  v12 = 0;
  v13 = 0;
  v14 = 0;
  v13 = sub_239583C68(&v12, "{");
  LOBYTE(__p[0]) = 1;
  __p[1] = &v12;
  v16 = &v11;
  sub_23989D40C(a1, (uint64_t)__p);
  v6 = v13;
  if ((unint64_t)v13 >= v14)
  {
    v7 = sub_239583C68(&v12, "}");
  }
  else
  {
    v13[23] = 1;
    *(_WORD *)v6 = 125;
    v7 = v6 + 24;
  }
  v13 = v7;
  HIBYTE(v16) = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v12, (uint64_t)v7, (uint64_t)__p, a2, v4, v5);
  if (SHIBYTE(v16) < 0)
    operator delete(__p[0]);
  v8 = (char *)v12;
  if (v12)
  {
    v9 = v13;
    v10 = v12;
    if (v13 != v12)
    {
      do
      {
        if (*(v9 - 1) < 0)
          operator delete(*((void **)v9 - 3));
        v9 -= 24;
      }
      while (v9 != v8);
      v10 = v12;
    }
    v13 = v8;
    operator delete(v10);
  }
}

void sub_23989D3D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_23941A260(&a11);
    _Unwind_Resume(a1);
  }
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

void sub_23989D40C(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  const char *v10;
  _BYTE *v11;
  size_t v12;
  int *v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  const char *v21;
  char v22;
  char v23;

  v4 = *(_BYTE **)a1;
  if (!*(_BYTE *)a2)
  {
    v5 = *(_QWORD *)(a2 + 8);
    v6 = *(_QWORD *)(v5 + 8);
    if (v6 >= *(_QWORD *)(v5 + 16))
    {
      v7 = sub_239583C68(*(void ***)(a2 + 8), ",");
    }
    else
    {
      *(_BYTE *)(v6 + 23) = 1;
      *(_WORD *)v6 = 44;
      v7 = (char *)(v6 + 24);
    }
    *(_QWORD *)(v5 + 8) = v7;
  }
  *(_BYTE *)a2 = 0;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *v4;
  if (*v4)
    v10 = "true";
  else
    v10 = "false";
  v21 = v10;
  v11 = *(_BYTE **)(v8 + 8);
  if ((unint64_t)v11 >= *(_QWORD *)(v8 + 16))
  {
    *(_QWORD *)(v8 + 8) = sub_23973FFAC((void **)v8, &v21);
    v13 = *(int **)(a1 + 8);
    if (*(_BYTE *)a2)
      goto LABEL_20;
    goto LABEL_16;
  }
  if (v9)
    v12 = 4;
  else
    v12 = 5;
  v11[23] = v12;
  memcpy(v11, v10, v12);
  v11[v12] = 0;
  *(_QWORD *)(v8 + 8) = v11 + 24;
  v13 = *(int **)(a1 + 8);
  if (!*(_BYTE *)a2)
  {
LABEL_16:
    v14 = *(_QWORD *)(a2 + 8);
    v15 = *(_QWORD *)(v14 + 8);
    if (v15 >= *(_QWORD *)(v14 + 16))
    {
      v16 = sub_239583C68(*(void ***)(a2 + 8), ",");
    }
    else
    {
      *(_BYTE *)(v15 + 23) = 1;
      *(_WORD *)v15 = 44;
      v16 = (char *)(v15 + 24);
    }
    *(_QWORD *)(v14 + 8) = v16;
  }
LABEL_20:
  *(_BYTE *)a2 = 0;
  sub_23989D5C0((uint64_t)&v22, *(_QWORD *)(a2 + 8), v13);
  v17 = *(int **)(a1 + 16);
  if (!*(_BYTE *)a2)
  {
    v18 = *(_QWORD *)(a2 + 8);
    v19 = *(_QWORD *)(v18 + 8);
    if (v19 >= *(_QWORD *)(v18 + 16))
    {
      v20 = sub_239583C68(*(void ***)(a2 + 8), ",");
    }
    else
    {
      *(_BYTE *)(v19 + 23) = 1;
      *(_WORD *)v19 = 44;
      v20 = (char *)(v19 + 24);
    }
    *(_QWORD *)(v18 + 8) = v20;
  }
  *(_BYTE *)a2 = 0;
  sub_23989D6A4((uint64_t)&v23, *(_QWORD *)(a2 + 8), v17);
}

void sub_23989D5C0(uint64_t a1, uint64_t a2, int *a3)
{
  _QWORD *v5;
  unint64_t v6;
  __int128 v7;
  char *v8;
  int v9;
  void *__p[2];
  uint64_t v11;
  uint64_t v12;

  sub_239A43D24(&v12);
  v5 = (_QWORD *)sub_239A43E64(&v12);
  sub_239458500(v5, (uint64_t)(&off_250AEF020)[2 * *a3], (uint64_t)(&off_250AEF020)[2 * *a3 + 1]);
  sub_239A43E70();
  sub_239A43DB8(&v12);
  v6 = *(_QWORD *)(a2 + 8);
  if (v6 >= *(_QWORD *)(a2 + 16))
  {
    v8 = sub_23941ACDC((void **)a2, (uint64_t)__p);
    v9 = SHIBYTE(v11);
    *(_QWORD *)(a2 + 8) = v8;
    if (v9 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v7 = *(_OWORD *)__p;
    *(_QWORD *)(v6 + 16) = v11;
    *(_OWORD *)v6 = v7;
    *(_QWORD *)(a2 + 8) = v6 + 24;
  }
}

void sub_23989D674(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_23989D6A4(uint64_t a1, uint64_t a2, int *a3)
{
  _QWORD *v5;
  unint64_t v6;
  __int128 v7;
  char *v8;
  int v9;
  void *__p[2];
  uint64_t v11;
  uint64_t v12;

  sub_239A43D24(&v12);
  v5 = (_QWORD *)sub_239A43E64(&v12);
  sub_239458500(v5, (uint64_t)(&off_250AEF060)[2 * *a3], (uint64_t)(&off_250AEF060)[2 * *a3 + 1]);
  sub_239A43E70();
  sub_239A43DB8(&v12);
  v6 = *(_QWORD *)(a2 + 8);
  if (v6 >= *(_QWORD *)(a2 + 16))
  {
    v8 = sub_23941ACDC((void **)a2, (uint64_t)__p);
    v9 = SHIBYTE(v11);
    *(_QWORD *)(a2 + 8) = v8;
    if (v9 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v7 = *(_OWORD *)__p;
    *(_QWORD *)(v6 + 16) = v11;
    *(_OWORD *)v6 = v7;
    *(_QWORD *)(a2 + 8) = v6 + 24;
  }
}

void sub_23989D758(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_23989D788(uint64_t a1, int a2)
{
  sub_23989D848(a2);
}

void sub_23989D7B8(uint64_t a1, int a2)
{
  sub_2398A20C8(a2);
}

void sub_23989D7E8(uint64_t a1, int a2)
{
  sub_2398A668C(a2);
}

void sub_23989D818(uint64_t a1, int a2)
{
  sub_2398AA090(a2);
}

void sub_23989D848(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23989D86C@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23989D940(a1, a2);
}

double sub_23989D878@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23989E14C(a1, a2);
}

double sub_23989D884@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23989E5EC(a1, a2);
}

double sub_23989D890@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23989EC00(a1, a2);
}

double sub_23989D89C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23989FB20(a1, a2);
}

double sub_23989D8A8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398A0E14(a1, a2);
}

uint64_t sub_23989D940@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_23989DB4C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEDA18;
  sub_239858A98((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_23989DA54(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_23989DA1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989DA38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23989DA54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEA9D0;
  sub_239864A20(a2, &v11);
  sub_23989DDDC(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_23982F700(a2, (uint64_t)(a3 + 1));
}

void sub_23989DB10(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23989DB24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397B94B8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23989DB38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23989DB4C(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 21;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_23989DC8C((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_239709138((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_23989DC50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23989DC78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23989DC8C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 21);
  *a2 = &off_250ADBEA0;
  sub_239469644((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_23989DDA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23989DDC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23989DDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_23989DFB0(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23989DF8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23989DFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397E5638((unsigned int *)&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_2398626AC((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23989E128(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23989E14C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23989DB4C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE38E8;
  sub_239861CB0((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23989E260(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23989E228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989E244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23989E260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AEB190;
  sub_23986287C(a2, &v11);
  sub_23989E354(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_23970B00C(a2, (uint64_t)(a3 + 1));
}

void sub_23989E318(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23989E32C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BF450((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23989E340(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23989E354(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_239890C8C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23989E588(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23989E5EC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23989DB4C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250ADBEA0;
  sub_239469644((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23989E738(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_239709138((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23989E6DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989E700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989E71C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23989E738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_23989E8DC(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23989E878(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_23989E8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v16 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_23989EA34(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_23989EA34(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397CB3C8(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23989EB9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_23989EC00@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23989DB4C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6058;
  sub_23986B020((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23989ED14(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23989ECDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989ECF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23989ED14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE4D98;
  sub_239763350(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF0C0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397635BC(a2, (uint64_t)(a4 + 1));
}

void sub_23989EE00(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23989EE14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989EE28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23974B4CC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23989EE3C(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_23989EE84(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_23989EE4C(uint64_t **a1, uint64_t a2)
{
  return sub_23989F4FC(**a1, (*a1)[1], a2);
}

uint64_t sub_23989EE5C(uint64_t **a1)
{
  char v2;

  return sub_23989EFAC(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_23989EE84(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  double v14;
  int v15;
  double v16;
  unsigned int v17;
  unsigned int v18;
  _QWORD v20[2];
  _QWORD v21[2];
  _QWORD v22[2];
  double v23;
  double v24;
  double v25;
  double v26;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (!*(_BYTE *)(a3 + 16))
  {
    v13 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    LOWORD(v17) = 0;
    v18 = 0xFFFF;
    if (v10)
      goto LABEL_17;
    goto LABEL_15;
  }
  v11 = *(double *)a3;
  a6 = 0.0;
  if (*(double *)a3 < 0.0)
    v11 = 0.0;
  v10 = (int)v11;
  v12 = 255.0;
  if (*(double *)(a3 + 8) <= 255.0)
    v12 = *(double *)(a3 + 8);
  v13 = (int)v12;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v14 = *(double *)(a3 + 24);
  a6 = 0.0;
  if (v14 < 0.0)
    v14 = 0.0;
  v15 = (int)v14;
  v16 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v16 = *(double *)(a3 + 32);
  v17 = v15 | ((int)v16 << 16);
  v18 = HIWORD(v17);
  if (v10 != (unsigned __int16)v17)
    goto LABEL_17;
LABEL_15:
  if (v18 == v13)
    return sub_23989EFAC(a1, a2, (uint64_t)v22);
LABEL_17:
  v26 = (double)v10;
  v24 = (double)(unsigned __int16)v17;
  v25 = 1.0 / ((double)v13 - (double)v10);
  a4.n128_f64[0] = (double)v18 - v24;
  v23 = a4.n128_f64[0];
  v22[0] = &v26;
  v22[1] = &v25;
  v21[0] = &v24;
  v21[1] = &v23;
  v20[0] = v22;
  v20[1] = v21;
  return sub_23989F254(a1, a2, (uint64_t)v20, a4, v24, a6, a7, a8, a9, a10);
}

uint64_t sub_23989EFAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_23985A2CC((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23989F1F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23989F254(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double ****v36;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_43;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v36 = (double ****)&v35;
    a4.n128_f64[0] = sub_23985A7C8(&v36, a1, a2, a4.n128_f64[0], a5, a6, a7, a8, a9, a10);
  }
LABEL_37:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23989F498(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23989F4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  __int16 *v8;
  __int16 *v9;
  char *v10;
  __int16 *v11;
  char v12;
  char v13;
  __int16 v14;
  __int16 v15;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    if ((int)v6 <= 0xFF)
    {
      v15 = v5;
      v14 = (int)v6;
      v13 = v5;
      v12 = (int)v6;
      v8 = (__int16 *)&v13;
      v9 = &v15;
      v10 = &v12;
      v11 = &v14;
      return sub_23989F5D0(a1, a2, (uint64_t)&v8);
    }
    v15 = v5;
    LOBYTE(v14) = v5;
  }
  else
  {
    v15 = 0;
    LOBYTE(v14) = 0;
  }
  v8 = &v14;
  v9 = &v15;
  return sub_23989F878(a1, a2, (uint64_t)&v8);
}

uint64_t sub_23989F5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_23985AEA4(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23989F814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23989F878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_23985B4B8(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23989FABC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23989FB20@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23989DB4C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE09C8;
  sub_23962787C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23989FC34(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23989FBFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989FC18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23989FC34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE4F20;
  sub_239763690(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF0D8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397638FC(a2, (uint64_t)(a4 + 1));
}

void sub_23989FD20(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23989FD34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23989FD48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23974D3CC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23989FD5C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23989FE70(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23989FD6C(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2398A0504((uint64_t)v13, 1006632960, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 1.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2398A0504((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_23989FE48(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23989FFB4(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23989FE70(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  unsigned int v4;
  double v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  double v27;

  v4 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v5 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v5 = 0.0;
    v4 = (int)v5;
    _Q0.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = (int)_Q0.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = 255;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm
  {
    FCVT            S3, H0
    FCVT            S3, H1
  }
  _ZF = _ZF && _S3 == (float)v6;
  if (_ZF)
    return sub_23989FFB4(a1, a2, (uint64_t)v23, _Q0);
  v27 = (double)v4;
  __asm { FCVT            D0, H0 }
  v25 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v24 = _Q0.n128_u64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_2398A025C(a1, a2, (uint64_t)v21, _Q0, _D1, 1.0 / ((double)v6 - (double)v4));
}

uint64_t sub_23989FFB4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = sub_23985C96C(a4.n128_f32[0], (uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A01F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A025C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6)
{
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double ****v32;

  v9 = *(_QWORD *)(a1 + 8);
  if (!v9)
    goto LABEL_17;
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v9 = *(_QWORD *)(a1 + 8);
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v30 = 0;
    v18 = *(_QWORD *)(a2 + 8);
    if (!v18)
      goto LABEL_33;
LABEL_18:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(a2 + 8);
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v29, v18, 1);
    v31 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(&v30, v9, 0);
  v18 = *(_QWORD *)(a2 + 8);
  if (v18)
    goto LABEL_18;
LABEL_33:
  v29 = 0;
  v31 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v32 = (double ****)&v31;
    a4.n128_f64[0] = sub_23985CEDC(&v32, a1, a2, a4.n128_f64[0], a5, a6);
  }
LABEL_37:
  v27 = v29;
  v29 = 0;
  if (v27)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v27 + 8))(v27, a4);
  result = v30;
  v30 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A04A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A0504(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  char *v23;
  __int16 *v24;
  char v25;
  char v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 255.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      LOBYTE(v27) = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2398A08C4(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 255.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      LOBYTE(v27) = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2398A0B6C(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_23989FFB4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = (__int16 *)&v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_2398A061C(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_2398A061C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_23985D6F0(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A0860(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A08C4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_23985DDC4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A0B08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A0B6C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_23985E3F8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A0DB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398A0E14@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23989DB4C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250ADDC30;
  sub_239609B40((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398A0F28(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398A0EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A0F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A0F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE50A8;
  sub_2397639D0(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF0F0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970977C(a2, (uint64_t)(a4 + 1));
}

void sub_2398A1014(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398A1028(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A103C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23974F3D4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A1050(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_2398A1150(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_2398A1060(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  float v5;
  _QWORD v7[5];
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[2];

  v3 = (*a1)[1];
  v10[0] = **a1;
  v10[1] = v3;
  v9[0] = v10[0];
  v9[1] = v3;
  v8[0] = v10[0];
  v8[1] = v3;
  v7[0] = v10;
  v7[1] = v9;
  v7[2] = v8;
  v7[3] = v10[0];
  v7[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = 0.0;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 1.0;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    v5 = v4;
    return sub_2398A17D0((uint64_t)v7, a3, v5);
  }
  else
  {
    a3.n128_u32[0] = 0;
    return sub_2398A17D0((uint64_t)v7, a3, 1.0);
  }
}

uint64_t sub_2398A1128(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398A1280(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398A1150(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  unsigned int v12;
  double v13;
  float v14;
  double v16;
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  unint64_t v22;
  double v23;
  uint64_t v24;
  double v25;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v11 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v11 = 0.0;
    v10 = (int)v11;
    a4.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v12 = (int)a4.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      a4.n128_u64[0] = 0xC7EFFFFFE0000000;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
      a4.n128_f32[0] = a4.n128_f64[0];
      v13 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v13 = *(double *)(a3 + 32);
      v14 = v13;
      if (a4.n128_f32[0] != (float)v10 || v14 != (float)v12)
        goto LABEL_15;
      return sub_2398A1280(a1, a2, (uint64_t)v21, a4);
    }
  }
  else
  {
    v12 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v14 = 1.0;
  a4.n128_u32[0] = 0;
  if ((float)v10 != 0.0 || 1.0 != (float)v12)
  {
LABEL_15:
    v25 = (double)v10;
    v23 = a4.n128_f32[0];
    v16 = v14;
    a4.n128_f64[0] = v16 - a4.n128_f32[0];
    v22 = a4.n128_u64[0];
    v21[0] = &v25;
    v21[1] = &v24;
    v20[0] = &v23;
    v20[1] = &v22;
    v19[0] = v21;
    v19[1] = v20;
    return sub_2398A1528(a1, a2, (uint64_t)v19, a4, v16, 1.0 / ((double)v12 - (double)v10), 1.0, a8, a9, a10);
  }
  return sub_2398A1280(a1, a2, (uint64_t)v21, a4);
}

uint64_t sub_2398A1280(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4 = sub_23985F790(a4, (uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A14C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A1528(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double ****v36;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_43;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v36 = (double ****)&v35;
    a4.n128_f32[0] = sub_23985FCC4(&v36, a1, a2, a4.n128_f32[0], a5, a6, a7, a8, a9, a10);
  }
LABEL_37:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A176C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A17D0(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  char *v17;
  float *v18;
  char v19;
  char v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 255.0;
    v3 = a3 >= 255.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOBYTE(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_2398A1B78(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1132396544;
      if (a3 <= 255.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOBYTE(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_2398A1E20(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_2398A1280(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_2398A18D0(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_2398A18D0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2398603CC(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A1B14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A1B78(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_239860AA0(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A1DBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A1E20(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2398612C0(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A2064(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2398A20C8(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398A20EC@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398A21C0(a1, a2);
}

double sub_2398A20F8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398A29CC(a1, a2);
}

double sub_2398A2104@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398A2E6C(a1, a2);
}

double sub_2398A2110@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398A3AC0(a1, a2);
}

double sub_2398A211C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398A40D4(a1, a2);
}

double sub_2398A2128@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398A53D8(a1, a2);
}

uint64_t sub_2398A21C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398A23CC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEDB98;
  sub_239859828((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398A22D4(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398A229C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A22B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A22D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEAAC8;
  sub_23985B93C(a2, &v11);
  sub_2398A265C(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2398302E4(a2, (uint64_t)(a3 + 1));
}

void sub_2398A2390(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398A23A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BA08C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398A23B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398A23CC(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 22;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398A250C((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397635BC((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398A24D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398A24F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398A250C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 22);
  *a2 = &off_250AE6058;
  sub_23986B020((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398A2624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398A2648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A265C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_2398A2830(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398A280C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A2830(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397F28B8(&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_23986A9B8((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398A29A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398A29CC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398A23CC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE238;
  sub_239869FBC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398A2AE0(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398A2AA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A2AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A2AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AEB288;
  sub_23986ABA8(a2, &v11);
  sub_2398A2BD4(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2398356DC(a2, (uint64_t)(a3 + 1));
}

void sub_2398A2B98(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398A2BAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C0024((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398A2BC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A2BD4(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2398954E4(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398A2E08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398A2E6C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398A23CC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250ADBEA0;
  sub_239469644((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398A2F80(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398A2F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A2F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A2F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250ADCAF8;
  sub_23949D79C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF108[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239709138(a2, (uint64_t)(a4 + 1));
}

void sub_2398A306C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398A3080(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A3094(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23949ABF8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A30A8(uint64_t **a1, uint64_t a2)
{
  return sub_2398A30F0(**a1, (*a1)[1], a2);
}

uint64_t sub_2398A30B8(uint64_t **a1, uint64_t a2)
{
  return sub_2398A3768(**a1, (*a1)[1], a2);
}

uint64_t sub_2398A30C8(uint64_t **a1)
{
  char v2;

  return sub_2398A3218(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_2398A30F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  int v4;
  double v5;
  unsigned int v6;
  unsigned int v7;
  double v8;
  double v9;
  unsigned int v10;
  unsigned int v11;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  double v16;
  double v17;
  double v18;
  double v19;

  if (!*(_BYTE *)(a3 + 16))
  {
    v6 = -65536;
    v7 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    v10 = 255;
    v11 = HIWORD(v6);
    if (v7 != (unsigned __int16)v6)
      goto LABEL_17;
    goto LABEL_15;
  }
  v3 = *(double *)a3;
  if (*(double *)a3 < 0.0)
    v3 = 0.0;
  v4 = (int)v3;
  v5 = 65535.0;
  if (*(double *)(a3 + 8) <= 65535.0)
    v5 = *(double *)(a3 + 8);
  v6 = v4 | ((int)v5 << 16);
  v7 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v8 = *(double *)(a3 + 24);
  if (v8 < 0.0)
    v8 = 0.0;
  v7 = (int)v8;
  v9 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v9 = *(double *)(a3 + 32);
  v10 = (int)v9;
  v11 = HIWORD(v6);
  if (v7 != (unsigned __int16)v6)
    goto LABEL_17;
LABEL_15:
  if (v11 == v10)
    return sub_2398A3218(a1, a2, (uint64_t)v15);
LABEL_17:
  v19 = (double)(unsigned __int16)v6;
  v17 = (double)v7;
  v18 = 1.0 / ((double)v11 - v19);
  v16 = (double)v10 - (double)v7;
  v15[0] = &v19;
  v15[1] = &v18;
  v14[0] = &v17;
  v14[1] = &v16;
  v13[0] = v15;
  v13[1] = v14;
  return sub_2398A34C0(a1, a2, (uint64_t)v13);
}

uint64_t sub_2398A3218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2398638A4((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398A345C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A34C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double ****v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (double ****)&v28;
    sub_239863D9C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398A3704(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A3768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  _QWORD v8[4];
  int v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    HIWORD(v9) = v5;
    LOWORD(v9) = (int)v6;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 255;
  }
  v8[0] = (char *)&v9 + 2;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_2398A3818(a1, a2, (uint64_t)v8);
}

uint64_t sub_2398A3818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int16 ***)&v28;
    sub_23986460C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398A3A5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398A3AC0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398A23CC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6058;
  sub_23986B020((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398A3C0C(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2397635BC((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398A3BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A3BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A3BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A3C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2398A3DB0(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398A3D4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2398A3DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v16 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2398A3F08(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2398A3F08(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397D5B2C(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398A4070(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2398A40D4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398A23CC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE09C8;
  sub_23962787C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398A41E8(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398A41B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A41CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A41E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE4F20;
  sub_239763690(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF120[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397638FC(a2, (uint64_t)(a4 + 1));
}

void sub_2398A42D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398A42E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A42FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23974D3CC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A4310(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398A4424(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398A4320(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2398A4AC4((uint64_t)v13, 1006632960, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 1.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2398A4AC4((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_2398A43FC(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398A4574(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398A4424(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  unsigned int v15;
  unsigned int v18;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    _Q0.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)_Q0.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  v15 = (unsigned __int16)v6;
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm { FCVT            S3, H0 }
  v18 = HIWORD(v6);
  __asm { FCVT            S3, H1 }
  _ZF = _ZF && _S3 == (float)v18;
  if (_ZF)
    return sub_2398A4574(a1, a2, (uint64_t)v25, _Q0);
  v29 = (double)v15;
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_2398A481C(a1, a2, (uint64_t)v23, _Q0, _D1, 1.0 / ((double)v18 - (double)v15));
}

uint64_t sub_2398A4574(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = sub_2398659E4(a4.n128_f32[0], (uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A47B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A481C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6)
{
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double ****v32;

  v9 = *(_QWORD *)(a1 + 8);
  if (!v9)
    goto LABEL_17;
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v9 = *(_QWORD *)(a1 + 8);
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v30 = 0;
    v18 = *(_QWORD *)(a2 + 8);
    if (!v18)
      goto LABEL_33;
LABEL_18:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(a2 + 8);
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v29, v18, 1);
    v31 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(&v30, v9, 0);
  v18 = *(_QWORD *)(a2 + 8);
  if (v18)
    goto LABEL_18;
LABEL_33:
  v29 = 0;
  v31 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v32 = (double ****)&v31;
    a4.n128_f64[0] = sub_239865F60(&v32, a1, a2, a4.n128_f64[0], a5, a6);
  }
LABEL_37:
  v27 = v29;
  v29 = 0;
  if (v27)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v27 + 8))(v27, a4);
  result = v30;
  v30 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A4A60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A4AC4(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  __int16 *v23;
  __int16 *v24;
  __int16 v25;
  __int16 v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 65535.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      v27 = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2398A4E88(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 65535.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      v27 = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2398A5130(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_2398A4574(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = &v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_2398A4BE0(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_2398A4BE0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_239866778(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A4E24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A4E88(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_239866E4C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A50CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A5130(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_239867480(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A5374(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398A53D8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398A23CC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250ADDC30;
  sub_239609B40((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398A54EC(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398A54B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A54D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A54EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE50A8;
  sub_2397639D0(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF138[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970977C(a2, (uint64_t)(a4 + 1));
}

void sub_2398A55D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398A55EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A5600(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23974F3D4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A5614(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398A5714(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398A5624(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  float v5;
  _QWORD v7[5];
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[2];

  v3 = (*a1)[1];
  v10[0] = **a1;
  v10[1] = v3;
  v9[0] = v10[0];
  v9[1] = v3;
  v8[0] = v10[0];
  v8[1] = v3;
  v7[0] = v10;
  v7[1] = v9;
  v7[2] = v8;
  v7[3] = v10[0];
  v7[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = 0.0;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 1.0;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    v5 = v4;
    return sub_2398A5D90((uint64_t)v7, a3, v5);
  }
  else
  {
    a3.n128_u32[0] = 0;
    return sub_2398A5D90((uint64_t)v7, a3, 1.0);
  }
}

uint64_t sub_2398A56EC(uint64_t **a1, __n128 a2, float a3)
{
  char v4;

  return sub_2398A5840(**a1, (*a1)[1], (uint64_t)&v4, a2, a3);
}

uint64_t sub_2398A5714(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  float v8;
  unsigned int v9;
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  unint64_t v15;
  double v16;
  double v17;
  double v18;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    a4.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)a4.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v8 = 1.0;
    a4.n128_u32[0] = 0;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  a4.n128_u64[0] = 0xC7EFFFFFE0000000;
  if (*(double *)(a3 + 24) >= -3.40282347e38)
    a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
  a4.n128_f32[0] = a4.n128_f64[0];
  v7 = 3.40282347e38;
  if (*(double *)(a3 + 32) <= 3.40282347e38)
    v7 = *(double *)(a3 + 32);
  v8 = v7;
LABEL_14:
  v9 = HIWORD(v6);
  if (a4.n128_f32[0] == (float)(unsigned __int16)v6 && v8 == (float)v9)
    return sub_2398A5840(a1, a2, (uint64_t)v14, a4, v8);
  v18 = (double)(unsigned __int16)v6;
  v16 = a4.n128_f32[0];
  v17 = 1.0 / ((double)v9 - v18);
  a4.n128_f64[0] = v8 - a4.n128_f32[0];
  v15 = a4.n128_u64[0];
  v14[0] = &v18;
  v14[1] = &v17;
  v13[0] = &v16;
  v13[1] = &v15;
  v12[0] = v14;
  v12[1] = v13;
  return sub_2398A5AE8(a1, a2, (uint64_t)v12, a4);
}

uint64_t sub_2398A5840(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, float a5)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    goto LABEL_17;
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(p_shared_owners);
  while (__stxr(v11 + 1, p_shared_owners));
  do
    v12 = __ldaxr(p_shared_owners);
  while (__stlxr(v12 - 1, p_shared_owners));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  v8 = *(_QWORD *)(a1 + 8);
  v13 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v13)
    goto LABEL_43;
  v14 = (unint64_t *)&v13->__shared_owners_;
  do
    v15 = __ldxr(v14);
  while (__stxr(v15 + 1, v14));
  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (v16)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v29 = 0;
    v17 = *(_QWORD *)(a2 + 8);
    if (!v17)
      goto LABEL_33;
LABEL_18:
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
    v17 = *(_QWORD *)(a2 + 8);
    v22 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v22)
      goto LABEL_29;
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v17 + 96))(&v28, v17, 1);
    v30 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v8 + 96))(&v29, v8, 0);
  v17 = *(_QWORD *)(a2 + 8);
  if (v17)
    goto LABEL_18;
LABEL_33:
  v28 = 0;
  v30 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v31 = &v30;
    a4.n128_f32[0] = sub_239867F1C(a4.n128_f32[0], a5, (uint64_t)&v31, a1, a2);
  }
LABEL_37:
  v26 = v28;
  v28 = 0;
  if (v26)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v26 + 8))(v26, a4);
  result = v29;
  v29 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A5A84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A5AE8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t **v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (uint64_t **)&v29;
    a4.n128_f32[0] = sub_239868448(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A5D2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A5D90(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  __int16 *v17;
  float *v18;
  __int16 v19;
  __int16 v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 65535.0;
    v3 = a3 >= 65535.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOWORD(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_2398A613C(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1199570688;
      if (a3 <= 65535.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOWORD(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_2398A63E4(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_2398A5840(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2, a3);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_2398A5E94(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_2398A5E94(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_239868B34(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A60D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A613C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_239869200(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A6380(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A63E4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_23986992C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A6628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2398A668C(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398A66B0@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398A6784(a1, a2);
}

double sub_2398A66BC@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398A6F90(a1, a2);
}

double sub_2398A66C8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398A7430(a1, a2);
}

double sub_2398A66D4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398A80C4(a1, a2);
}

double sub_2398A66E0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398A8D64(a1, a2);
}

double sub_2398A66EC@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398A93E8(a1, a2);
}

uint64_t sub_2398A6784@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398A6990(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEDD18;
  sub_23985BDE4((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398A6898(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398A6860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A687C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A6898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEABC0;
  sub_23985E784(a2, &v12);
  sub_2398A6C20(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239830F44(a2, (uint64_t)(a3 + 1));
}

void sub_2398A6954(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398A6968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BACD4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398A697C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398A6990(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 23;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398A6AD0((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397638FC((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398A6A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398A6ABC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398A6AD0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 23);
  *a2 = &off_250AE09C8;
  sub_23962787C((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398A6BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398A6C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A6C20(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_2398A6DF4(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398A6DD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A6DF4(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        a3.n128_f64[0] = sub_2397FDF14(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_u64[0] = sub_239871710((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2398A6F6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398A6F90@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398A6990(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE3B8;
  sub_239870D14((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398A70A4(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398A706C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A7088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A70A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AEB380;
  sub_2398718F8(a2, &v12);
  sub_2398A7198(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_23983633C(a2, (uint64_t)(a3 + 1));
}

void sub_2398A715C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398A7170(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C0C6C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398A7184(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A7198(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_239899158(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A73CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398A7430@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398A6990(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250ADBEA0;
  sub_239469644((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398A7544(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398A750C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A7528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A7544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250ADCAF8;
  sub_23949D79C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF150[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239709138(a2, (uint64_t)(a4 + 1));
}

void sub_2398A7630(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398A7644(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A7658(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23949ABF8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A766C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398A76B4(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398A767C(uint64_t **a1, uint64_t a2)
{
  return sub_2398A7D54(**a1, (*a1)[1], a2);
}

uint64_t sub_2398A768C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398A7804(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398A76B4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  unsigned int v12;
  double v13;
  double v14;
  unsigned int v15;
  _QWORD v22[2];
  _QWORD v23[2];
  _QWORD v24[2];
  double v25;
  double v26;
  double v27;
  double v28;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    v12 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = 255;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  v12 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v13 = *(double *)(a3 + 24);
  if (v13 < 0.0)
    v13 = 0.0;
  v12 = (int)v13;
  v14 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v14 = *(double *)(a3 + 32);
  v15 = (int)v14;
LABEL_14:
  __asm
  {
    FCVT            S3, H0
    FCVT            S2, H1
  }
  _ZF = _ZF && _S2 == (float)v15;
  if (_ZF)
    return sub_2398A7804(a1, a2, (uint64_t)v24, _Q0);
  __asm { FCVT            D0, H0 }
  v28 = _D0;
  __asm { FCVT            D1, H1 }
  v26 = (double)v12;
  v27 = 1.0 / (_D1 - _D0);
  v25 = (double)v15 - (double)v12;
  v24[0] = &v28;
  v24[1] = &v27;
  v23[0] = &v26;
  v23[1] = &v25;
  v22[0] = v24;
  v22[1] = v23;
  return sub_2398A7AAC(a1, a2, (uint64_t)v22);
}

uint64_t sub_2398A7804(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_23986C284((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A7A48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A7AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double ****v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (double ****)&v28;
    sub_23986C82C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398A7CF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A7D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  char v19;
  char v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 23544;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_2398A7E1C(a1, a2, (uint64_t)v16);
}

uint64_t sub_2398A7E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_23986D0B4(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398A8060(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398A80C4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398A6990(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6058;
  sub_23986B020((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398A81D8(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398A81A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A81BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A81D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE4D98;
  sub_239763350(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF168[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397635BC(a2, (uint64_t)(a4 + 1));
}

void sub_2398A82C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398A82D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A82EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23974B4CC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A8300(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398A8348(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398A8310(uint64_t **a1, uint64_t a2)
{
  return sub_2398A89F4(**a1, (*a1)[1], a2);
}

uint64_t sub_2398A8320(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398A84A4(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398A8348(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v18;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  double v26;
  double v27;
  double v28;
  unint64_t v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = -65536;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
LABEL_14:
  v16 = (unsigned __int16)v15;
  __asm { FCVT            S2, H0 }
  v18 = HIWORD(v15);
  __asm { FCVT            S2, H1 }
  _ZF = _ZF && _S2 == (float)v18;
  if (_ZF)
    return sub_2398A84A4(a1, a2, (uint64_t)v25, _Q0);
  __asm { FCVT            D0, H0 }
  v29 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  v27 = (double)v16;
  v28 = 1.0 / (_D1 - _Q0.n128_f64[0]);
  _Q0.n128_f64[0] = (double)v18 - (double)v16;
  v26 = _Q0.n128_f64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_2398A874C(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_2398A84A4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_23986DC6C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A86E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A874C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_23986E268(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A8990(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A89F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  __int16 v19;
  __int16 v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 31744;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_2398A8ABC(a1, a2, (uint64_t)v16);
}

uint64_t sub_2398A8ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_23986E93C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398A8D00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398A8D64@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398A6990(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE09C8;
  sub_23962787C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398A8EB0(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2397638FC((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398A8E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A8E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A8E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A8EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v17, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v17 = 0;
LABEL_17:
  sub_239622218(a2, &v16);
  v13.n128_u64[0] = sub_2398A9054(a1, a2);
  v14 = v16;
  v16 = 0;
  if (v14)
    (*(void (**)(uint64_t, float))(*(_QWORD *)v14 + 8))(v14, v13.n128_f32[0]);
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v13);
  return result;
}

void sub_2398A8FF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

__int16 sub_2398A9054@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  __int16 *v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  __int16 v26;
  uint64_t v28;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 != *(_DWORD *)(a2 + 108) || v4 != v5)
  {
    v28 = (3 * *(_DWORD *)(a1 + 56));
    sub_2398A921C(a1, a2, &v28);
    return v7;
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
  v9 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(_QWORD *)(v3 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 128) && v16)
  {
    a1 = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
    v16 = *(_QWORD *)(a2 + 32);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v17 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v17 < 0xF || (unint64_t)(v16 - v9) < 0x20)
    {
      v20 = (_WORD *)v16;
      v21 = (__int16 *)v9;
    }
    else
    {
      v18 = v17 + 1;
      v19 = (v17 + 1) & 0xFFFFFFFFFFFFFFF0;
      v20 = (_WORD *)(v16 + 2 * v19);
      v21 = (__int16 *)(v9 + 2 * v19);
      v22 = (__int128 *)(v9 + 16);
      v23 = (_OWORD *)(v16 + 16);
      v24 = v19;
      do
      {
        v7 = *(v22 - 1);
        v25 = *v22;
        *(v23 - 1) = v7;
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 16;
      }
      while (v24);
      if (v18 == v19)
        return v7;
    }
    do
    {
      v26 = *v21++;
      LOWORD(v7) = v26;
      *v20++ = v26;
    }
    while (v21 != (__int16 *)(v9 + 2 * v8));
  }
  return v7;
}

uint64_t sub_2398A921C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v19 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v19, v6, 0);
LABEL_17:
  sub_239622218(a2, &v18);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    v15.n128_f64[0] = sub_2397DDAD4(a3, a1, a2);
  v16 = v18;
  v18 = 0;
  if (v16)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v16 + 8))(v16, v15);
  result = v19;
  v19 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_2398A9384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2398A93E8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398A6990(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250ADDC30;
  sub_239609B40((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398A94FC(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398A94C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A94E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A94FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE50A8;
  sub_2397639D0(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF180[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970977C(a2, (uint64_t)(a4 + 1));
}

void sub_2398A95E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398A95FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398A9610(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23974F3D4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398A9624(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398A966C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398A9634(uint64_t **a1, uint64_t a2)
{
  return sub_2398A9D20(**a1, (*a1)[1], a2);
}

uint64_t sub_2398A9644(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398A97D0(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398A966C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  float v13;
  double v14;
  float v15;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  unint64_t v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v12 = -3.40282347e38;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        v12 = *(double *)(a3 + 24);
      v13 = v12;
      v14 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v14 = *(double *)(a3 + 32);
      v15 = v14;
      __asm
      {
        FCVT            S4, H0
        FCVT            S5, H1
      }
      if (v13 != _S4 || v15 != _S5)
        goto LABEL_15;
      return sub_2398A97D0(a1, a2, (uint64_t)v26, _Q0);
    }
  }
  else
  {
    _Q0.n128_u32[0] = 1006632960;
    LOWORD(_S1) = 15360;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v15 = 1.0;
  v13 = 0.0;
  __asm
  {
    FCVT            S4, H0
    FCVT            S5, H1
  }
  if (_S4 != 0.0 || 1.0 != _S5)
  {
LABEL_15:
    __asm { FCVT            D0, H0 }
    v30 = _Q0.n128_u64[0];
    __asm { FCVT            D1, H1 }
    v28 = v13;
    v29 = 1.0 / (_D1 - _Q0.n128_f64[0]);
    _Q0.n128_f64[0] = v15 - v13;
    v27 = _Q0.n128_f64[0];
    v26[0] = &v30;
    v26[1] = &v29;
    v25[0] = &v28;
    v25[1] = &v27;
    v24[0] = v26;
    v24[1] = v25;
    return sub_2398A9A78(a1, a2, (uint64_t)v24, _Q0);
  }
  return sub_2398A97D0(a1, a2, (uint64_t)v26, _Q0);
}

uint64_t sub_2398A97D0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_23986FB3C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A9A14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A9A78(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f32[0] = sub_23987007C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398A9CBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398A9D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  _QWORD v14[4];
  __int16 v15;
  __int16 v16;
  float v17;
  float v18;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 1.0;
    if (v3 < -3.40282347e38)
      v3 = -3.40282347e38;
    _S0 = v3;
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    _S1 = v4;
    v17 = _S1;
    v18 = _S0;
    __asm { FCVT            H0, S0 }
    v16 = _H0;
    __asm { FCVT            H0, S1 }
  }
  else
  {
    v17 = 1.0;
    v18 = 0.0;
    _H0 = 15360;
    v16 = 0;
  }
  v15 = _H0;
  v14[0] = &v16;
  v14[1] = &v18;
  v14[2] = &v15;
  v14[3] = &v17;
  return sub_2398A9DE8(a1, a2, (uint64_t)v14);
}

uint64_t sub_2398A9DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_239870750(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398AA02C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2398AA090(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398AA0B4@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398AA188(a1, a2);
}

double sub_2398AA0C0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398AA994(a1, a2);
}

double sub_2398AA0CC@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398AAE34(a1, a2);
}

double sub_2398AA0D8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398ABA94(a1, a2);
}

double sub_2398AA0E4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398AC6F4(a1, a2);
}

double sub_2398AA0F0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398AD384(a1, a2);
}

uint64_t sub_2398AA188@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398AA394(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEDE98;
  sub_23985EC2C((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398AA29C(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398AA264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398AA280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398AA29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEACB8;
  sub_239861838(a2, &v12);
  sub_2398AA624(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239831AFC(a2, (uint64_t)(a3 + 1));
}

void sub_2398AA358(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398AA36C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BB8AC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398AA380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398AA394(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 24;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398AA4D4((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_23970977C((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398AA498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398AA4C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398AA4D4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 24);
  *a2 = &off_250ADDC30;
  sub_239609B40((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398AA5EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398AA610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398AA624(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_2398AA7F8(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398AA7D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398AA7F8(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_239807484(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_f32[0] = sub_239877C58((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2398AA970(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398AA994@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398AA394(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE538;
  sub_23987725C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398AAAA8(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398AAA70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398AAA8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398AAAA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AEB478;
  sub_239877E48(a2, &v12);
  sub_2398AAB9C(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239836EF4(a2, (uint64_t)(a3 + 1));
}

void sub_2398AAB60(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398AAB74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C1844((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398AAB88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398AAB9C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_u64[0] = (unint64_t)sub_23989CCF4(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398AADD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398AAE34@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398AA394(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250ADBEA0;
  sub_239469644((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398AAF48(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398AAF10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398AAF2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398AAF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250ADCAF8;
  sub_23949D79C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF198[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239709138(a2, (uint64_t)(a4 + 1));
}

void sub_2398AB034(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398AB048(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398AB05C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23949ABF8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398AB070(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398AB0B8(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398AB080(uint64_t **a1, uint64_t a2)
{
  return sub_2398AB738(**a1, (*a1)[1], a2);
}

uint64_t sub_2398AB090(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398AB1E8(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398AB0B8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  unsigned int v6;
  double v7;
  double v8;
  unsigned int v9;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  double v16;
  double v17;
  double v18;
  double v19;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v7 = *(double *)(a3 + 24);
      if (v7 < 0.0)
        v7 = 0.0;
      v6 = (int)v7;
      v8 = 255.0;
      if (*(double *)(a3 + 32) <= 255.0)
        v8 = *(double *)(a3 + 32);
      v9 = (int)v8;
      if (a4.n128_f32[0] != (float)v6 || v5 != (float)(int)v8)
        goto LABEL_15;
      return sub_2398AB1E8(a1, a2, (uint64_t)v15, a4);
    }
  }
  else
  {
    v5 = 1.0;
    a4.n128_u32[0] = 0;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v9 = 255;
  if (a4.n128_f32[0] != (float)v6 || v5 != (float)0xFFu)
  {
LABEL_15:
    v19 = a4.n128_f32[0];
    v17 = (double)v6;
    v18 = 1.0 / (v5 - a4.n128_f32[0]);
    v16 = (double)v9 - (double)v6;
    v15[0] = &v19;
    v15[1] = &v18;
    v14[0] = &v17;
    v14[1] = &v16;
    v13[0] = v15;
    v13[1] = v14;
    return sub_2398AB490(a1, a2, (uint64_t)v13);
  }
  return sub_2398AB1E8(a1, a2, (uint64_t)v15, a4);
}

uint64_t sub_2398AB1E8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239872928((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398AB42C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398AB490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double ****v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (double ****)&v28;
    sub_239872EA0(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398AB6D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398AB738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1132396544;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_2398AB7EC(a1, a2, (uint64_t)v8);
}

uint64_t sub_2398AB7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_239873714(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398ABA30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398ABA94@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398AA394(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6058;
  sub_23986B020((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398ABBA8(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398ABB70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398ABB8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398ABBA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE4D98;
  sub_239763350(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF1B0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397635BC(a2, (uint64_t)(a4 + 1));
}

void sub_2398ABC94(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398ABCA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398ABCBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23974B4CC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398ABCD0(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398ABD18(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398ABCE0(uint64_t **a1, uint64_t a2)
{
  return sub_2398AC394(**a1, (*a1)[1], a2);
}

uint64_t sub_2398ABCF0(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398ABE44(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398ABD18(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  double v6;
  int v7;
  double v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v9 = -65536;
    goto LABEL_14;
  }
  v5 = 1.0;
  a4.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = *(double *)(a3 + 24);
  if (v6 < 0.0)
    v6 = 0.0;
  v7 = (int)v6;
  v8 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v8 = *(double *)(a3 + 32);
  v9 = v7 | ((int)v8 << 16);
LABEL_14:
  v10 = (unsigned __int16)v9;
  v11 = HIWORD(v9);
  if (a4.n128_f32[0] == (float)v10 && v5 == (float)v11)
    return sub_2398ABE44(a1, a2, (uint64_t)v16, a4);
  v20 = a4.n128_f32[0];
  v18 = (double)v10;
  v19 = 1.0 / (v5 - a4.n128_f32[0]);
  a4.n128_f64[0] = (double)v11 - (double)v10;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = v16;
  v14[1] = v15;
  return sub_2398AC0EC(a1, a2, (uint64_t)v14, a4);
}

uint64_t sub_2398ABE44(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239874250((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398AC088(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398AC0EC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2398747C8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398AC330(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398AC394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  __int16 v10;
  __int16 v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1199570688;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_2398AC44C(a1, a2, (uint64_t)v8);
}

uint64_t sub_2398AC44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_239874E7C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398AC690(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398AC6F4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398AA394(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE09C8;
  sub_23962787C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398AC808(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398AC7D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398AC7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398AC808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE4F20;
  sub_239763690(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF1C8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397638FC(a2, (uint64_t)(a4 + 1));
}

void sub_2398AC8F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398AC908(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398AC91C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23974D3CC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398AC930(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398AC978(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398AC940(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398AD010(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398AC950(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398ACAC0(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398AC978(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  float v5;
  double v6;
  unsigned __int16 v11;
  double v12;
  unsigned int v14;
  double v20;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    _Q0.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      _Q0.n128_u64[0] = *(_QWORD *)a3;
    _Q0.n128_f32[0] = _Q0.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v5 = 1.0;
  _Q0.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v6 = *(double *)(a3 + 24);
  _S2 = v6;
  __asm { FCVT            H2, S2 }
  v11 = LOWORD(_S2);
  v12 = 65504.0;
  if (*(double *)(a3 + 32) <= 65504.0)
    v12 = *(double *)(a3 + 32);
  _S2 = v12;
  __asm { FCVT            H2, S2 }
  v14 = v11 | (LOWORD(_S2) << 16);
LABEL_14:
  _H2 = v14;
  _S3 = HIWORD(v14);
  __asm
  {
    FCVT            S4, H2
    FCVT            S5, H3
  }
  if (_Q0.n128_f32[0] == _S4 && v5 == _S5)
    return sub_2398ACAC0(a1, a2, (uint64_t)v25, _Q0);
  v29 = _Q0.n128_f32[0];
  v20 = 1.0 / (v5 - _Q0.n128_f32[0]);
  __asm { FCVT            D0, H2 }
  v27 = _Q0.n128_u64[0];
  v28 = v20;
  __asm { FCVT            D1, H3 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_2398ACD68(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_2398ACAC0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = sub_239875914((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398ACD04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398ACD68(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_239875E54(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398ACFAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398AD010(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  _QWORD v14[4];
  unint64_t v15;
  __int16 v16;
  __int16 v17;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    _Q0.n128_u64[0] = *(_QWORD *)a3;
    if (!*(_BYTE *)(a3 + 8))
      _Q0.n128_f64[0] = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 1.0;
    if (_Q0.n128_f64[0] < -65504.0)
      _Q0.n128_f64[0] = -65504.0;
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    if (v4 > 65504.0)
      v4 = 65504.0;
    _S1 = v4;
    v17 = _H0;
    __asm { FCVT            H1, S1 }
    v16 = LOWORD(_S1);
    __asm
    {
      FCVT            S2, H0
      FCVT            S0, H1
    }
    v15 = __PAIR64__(_S2, _Q0.n128_u32[0]);
  }
  else
  {
    v17 = 0;
    v16 = 15360;
    v15 = 1065353216;
  }
  v14[0] = (char *)&v15 + 4;
  v14[1] = &v17;
  v14[2] = &v15;
  v14[3] = &v16;
  return sub_2398AD0DC(a1, a2, (uint64_t)v14, _Q0);
}

uint64_t sub_2398AD0DC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_239876628(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398AD320(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398AD384@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398AA394(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250ADDC30;
  sub_239609B40((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398AD4D0(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_23970977C((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398AD474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398AD498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398AD4B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398AD4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2398AD674(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398AD610(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2398AD674(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v16 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2398AD7CC(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2398AD7CC(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E3CD4(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398AD934(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

BOOL sub_2398AD998(uint64_t a1)
{
  uint64_t v1;
  char v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  std::__shared_weak_count *v10;

  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 40))(a1);
  v8[1] = 0;
  v8[2] = 0;
  v8[0] = &off_250AEF6A0;
  if (v2)
    (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v1 + 56))(v1, v8);
  sub_23979D0F0((uint64_t)v8, &v9);
  v4 = v9;
  v3 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  sub_2399107E4(v8);
  return v4 != 0;
}

void sub_2398ADA54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2399107E4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398ADA6C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  char v4;

  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 40))(a1);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = &off_250AEF6A0;
  if (v4)
    return (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 56))(result, a2);
  return result;
}

void sub_2398ADAD4(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_2399107E4(v1);
  _Unwind_Resume(a1);
}

void sub_2398ADAE8(uint64_t a1, int a2)
{
  sub_2398ADBA8(a2);
}

void sub_2398ADB18(uint64_t a1, int a2)
{
  sub_2398B505C(a2);
}

void sub_2398ADB48(uint64_t a1, int a2)
{
  sub_2398BB1F0(a2);
}

void sub_2398ADB78(uint64_t a1, int a2)
{
  sub_2398BFCE0(a2);
}

void sub_2398ADBA8(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398ADBCC@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398ADC90(a1, a2);
}

double sub_2398ADBD8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398AE660(a1, a2);
}

double sub_2398ADBE4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398B06C8(a1, a2);
}

double sub_2398ADBF0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398B2EC0(a1, a2);
}

uint64_t sub_2398ADC90@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[87];

  sub_2398ADDD4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v8);
  v11 = &off_250ADB628;
  sub_239423E50((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398AE064(*(_QWORD *)a1, (uint64_t)&v11);
  *a2 = &off_250ADB778;
  sub_239709384((uint64_t)&v11, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398ADD78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398ADD9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398ADDB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398ADDD4(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 1;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398ADF14((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_239709384((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398ADED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398ADF00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398ADF14(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 1);
  *a2 = &off_250ADB628;
  sub_239423E50((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398AE02C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398AE050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398AE064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 49))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 49))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_2395795F0(a2, &v15);
  sub_2398AE208(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398AE1A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2398AE208(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  size_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 32);
  v5 = *(_DWORD *)(a1 + 44);
  if (v5 == *(_DWORD *)(a2 + 76) && v5 == v4)
  {
    v8 = *(unsigned int *)(a1 + 36) * (unint64_t)v4;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 80) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v16 = *(unsigned int *)(a1 + 32);
    return (void *)sub_2398AE360(a1, a2, &v16);
  }
  return result;
}

uint64_t sub_2398AE360(uint64_t a1, uint64_t a2, size_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 49))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_2395795F0(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36))
    sub_2398AE524(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398AE4C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

size_t *sub_2398AE524(size_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  size_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  _OWORD v23[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v19 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 76);
    v20 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 72) << 32);
    v18 = 0;
    v21 = v3 - 1;
    v22 = v9 | (v10 << 32);
    v11 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(char **)(a2 + 24);
    }
    v17 = *(char **)(a3 + 32);
    if (*(_BYTE *)(a3 + 80))
    {
      if (v17)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a3 + 8) + 88))(*(_QWORD *)(a3 + 8), 1, "unknown location");
        v17 = *(char **)(a3 + 32);
      }
    }
    memset(v23, 0, sizeof(v23));
    return (size_t *)sub_23949FA00(&v18, (uint64_t)v23, v8, v11, v17);
  }
  return result;
}

double sub_2398AE660@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[87];

  sub_2398ADDD4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v9);
  v12 = &off_250AE4178;
  sub_2398AE894((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398AE76C(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398AE734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398AE750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398AE76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE4080;
  sub_2397614BC(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF1E0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239761728(a2, (uint64_t)(a4 + 1));
}

void sub_2398AE858(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398AE86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398AE880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23972FCB8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398AE894(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_2398AE994(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_2398264AC(a2, &v13, v5);
  *(_WORD *)(a2 + 72) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2398AE978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2398AE994(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2398AEBD4(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2398AEB74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2398AEBD4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2398AEC4C();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2398AEC4C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569343A8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569343A8))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_23970E61C();
    sub_2398AEE50((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2398AEE50((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256934390, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256934390, &dword_23940C000);
          __cxa_guard_release(&qword_2569343A8);
          return &stru_256934390;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256934390;
}

void sub_2398AED9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569343A8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569343A8);
  _Unwind_Resume(a1);
}

void sub_2398AEE50(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2398AEEE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398AEF20(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_2398AEF68(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_2398AEF30(uint64_t **a1, uint64_t a2)
{
  return sub_2398AFB00(**a1, (*a1)[1], a2);
}

uint64_t sub_2398AEF40(uint64_t **a1)
{
  char v2;

  return sub_2398AF090(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_2398AEF68(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  double v14;
  int v15;
  double v16;
  unsigned int v17;
  unsigned int v18;
  double **v20[2];
  _QWORD v21[2];
  _QWORD v22[2];
  double v23;
  double v24;
  double v25;
  double v26;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (!*(_BYTE *)(a3 + 16))
  {
    v13 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    LOWORD(v17) = 0;
    v18 = 0xFFFF;
    if (v10)
      goto LABEL_17;
    goto LABEL_15;
  }
  v11 = *(double *)a3;
  a6 = 0.0;
  if (*(double *)a3 < 0.0)
    v11 = 0.0;
  v10 = (int)v11;
  v12 = 255.0;
  if (*(double *)(a3 + 8) <= 255.0)
    v12 = *(double *)(a3 + 8);
  v13 = (int)v12;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v14 = *(double *)(a3 + 24);
  a6 = 0.0;
  if (v14 < 0.0)
    v14 = 0.0;
  v15 = (int)v14;
  v16 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v16 = *(double *)(a3 + 32);
  v17 = v15 | ((int)v16 << 16);
  v18 = HIWORD(v17);
  if (v10 != (unsigned __int16)v17)
    goto LABEL_17;
LABEL_15:
  if (v18 == v13)
    return sub_2398AF090(a1, a2, (uint64_t)v22);
LABEL_17:
  v26 = (double)v10;
  v24 = (double)(unsigned __int16)v17;
  v25 = 1.0 / ((double)v13 - (double)v10);
  a4.n128_f64[0] = (double)v18 - v24;
  v23 = a4.n128_f64[0];
  v22[0] = &v26;
  v22[1] = &v25;
  v21[0] = &v24;
  v21[1] = &v23;
  v20[0] = (double **)v22;
  v20[1] = (double **)v21;
  return sub_2398AF518(a1, a2, v20, a4, v24, a6, a7, a8, a9, a10);
}

uint64_t sub_2398AF090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398AF328((uint64_t)&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398AF2C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398AF328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  _WORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  int i;
  _WORD *v29;
  int v30;
  unsigned __int8 *v31;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 40);
    v10 = *(unsigned int *)(a2 + 44);
    v11 = *(unsigned int *)(a3 + 40);
    v12 = *(unsigned int *)(a3 + 44);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v14 = v13 == 0;
    else
      v14 = 1;
    if (!v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v21 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v21)
    {
      v22 = *(_QWORD *)(a3 + 8);
      v23 = *(std::__shared_weak_count **)(a3 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_WORD **)(a3 + 24);
    }
    v27 = v4 - 1;
    if (v8)
    {
      if (v4 == 1)
      {
        do
        {
          *v21 = *v13;
          v13 += v10;
          v21 += v12;
          --v8;
        }
        while (v8);
LABEL_35:
        *v21 = *v13;
        return result;
      }
      for (i = 0; i != v8; ++i)
      {
        v29 = v21;
        v30 = v4 - 1;
        v31 = v13;
        do
        {
          *v29 = *v31;
          v31 += v9;
          v29 += v11;
          --v30;
        }
        while (v30);
        *v29 = *v31;
        v13 += v10;
        v21 += v12;
      }
    }
    if (v4 != 1)
    {
      do
      {
        *v21 = *v13;
        v13 += v9;
        v21 += v11;
        --v27;
      }
      while (v27);
    }
    goto LABEL_35;
  }
  return result;
}

uint64_t sub_2398AF518(uint64_t a1, uint64_t a2, double ***a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  double ***v35;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_42;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f64[0] = sub_2398AF7B0(&v35, a1, a2, a4.n128_f64[0], a5, a6, a7, a8, a9, a10);
LABEL_36:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398AF74C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

double sub_2398AF7B0(double ****a1, uint64_t a2, uint64_t a3, double result, double a5, double a6, double a7, double a8, double a9, double a10)
{
  int v10;
  int v11;
  BOOL v12;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  unint64_t v23;
  _WORD *v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  char v35;

  v11 = *(_DWORD *)(a2 + 32);
  v10 = *(_DWORD *)(a2 + 36);
  if (v11)
    v12 = v10 == 0;
  else
    v12 = 1;
  if (!v12)
  {
    v31 = v11 - 1;
    v16 = *(unsigned int *)(a2 + 44);
    v17 = *(unsigned int *)(a3 + 44);
    v32 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v30 = 0;
    v33 = v10 - 1;
    v34 = v16 | (v17 << 32);
    v18 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v18)
    {
      v19 = *(_QWORD *)(a2 + 8);
      v20 = *(std::__shared_weak_count **)(a2 + 16);
      if (v20)
      {
        p_shared_owners = (unint64_t *)&v20->__shared_owners_;
        do
          v22 = __ldxr(p_shared_owners);
        while (__stxr(v22 + 1, p_shared_owners));
        do
          v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v19 + 88))(v19, 0, "unknown location");
      v18 = *(_BYTE **)(a2 + 24);
    }
    v24 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v24)
    {
      v25 = *(_QWORD *)(a3 + 8);
      v26 = *(std::__shared_weak_count **)(a3 + 16);
      if (v26)
      {
        v27 = (unint64_t *)&v26->__shared_owners_;
        do
          v28 = __ldxr(v27);
        while (__stxr(v28 + 1, v27));
        do
          v29 = __ldaxr(v27);
        while (__stlxr(v29 - 1, v27));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v25 + 88))(v25, 1, "unknown location");
      v24 = *(_WORD **)(a3 + 24);
    }
    v35 = 0;
    return sub_2398AF930(&v30, result, a5, a6, a7, a8, a9, a10, (uint64_t)&v35, a1, v18, v24);
  }
  return result;
}

double sub_2398AF930(_DWORD *a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, double ****a10, _BYTE *a11, _WORD *a12)
{
  int v12;
  int v13;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _WORD *v26;
  int v27;
  _BYTE *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double **v35;
  double **v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double result;

  v12 = a1[5];
  v13 = a1[2];
  if (!v12)
  {
    v36 = **a10;
    v35 = (*a10)[1];
    v16 = **v36;
    v17 = *v36[1];
    v18 = **v35;
    v19 = *v35[1];
    if (!v13)
      goto LABEL_26;
    goto LABEL_15;
  }
  v15 = **a10;
  v14 = (*a10)[1];
  v16 = **v15;
  v17 = *v15[1];
  v18 = **v14;
  v19 = *v14[1];
  v20 = a1[6];
  v21 = a1[7];
  if (v13)
  {
    v22 = 0;
    v23 = a1[3];
    v24 = 2 * v21;
    v25 = 2 * a1[4];
    do
    {
      v26 = a12;
      v27 = v13;
      v28 = a11;
      do
      {
        LOBYTE(a8) = *v28;
        v29 = v17 * ((double)*(unint64_t *)&a8 - v16);
        v30 = fmax(v29, 0.0);
        if (v29 <= 1.0)
          v31 = v30;
        else
          v31 = 1.0;
        a8 = v18 + v19 * v31;
        *v26 = llround(a8);
        v28 += v23;
        v26 = (_WORD *)((char *)v26 + v25);
        --v27;
      }
      while (v27);
      LOBYTE(a8) = *v28;
      v32 = v17 * ((double)*(unint64_t *)&a8 - v16);
      v33 = fmax(v32, 0.0);
      if (v32 <= 1.0)
        v34 = v33;
      else
        v34 = 1.0;
      a8 = v18 + v19 * v34;
      *v26 = llround(a8);
      a11 += v20;
      a12 = (_WORD *)((char *)a12 + v24);
      ++v22;
    }
    while (v22 != v12);
LABEL_15:
    v37 = a1[3];
    v38 = 2 * a1[4];
    a6 = 0.0;
    do
    {
      LOBYTE(a8) = *a11;
      v39 = v17 * ((double)*(unint64_t *)&a8 - v16);
      v40 = fmax(v39, 0.0);
      if (v39 <= 1.0)
        v41 = v40;
      else
        v41 = 1.0;
      a8 = v18 + v19 * v41;
      *a12 = llround(a8);
      a11 += v37;
      a12 = (_WORD *)((char *)a12 + v38);
      --v13;
    }
    while (v13);
    goto LABEL_26;
  }
  a6 = 0.0;
  do
  {
    LOBYTE(a8) = *a11;
    v42 = v17 * ((double)*(unint64_t *)&a8 - v16);
    v43 = fmax(v42, 0.0);
    if (v42 <= 1.0)
      v44 = v43;
    else
      v44 = 1.0;
    a8 = v18 + v19 * v44;
    *a12 = llround(a8);
    a11 += v20;
    a12 += v21;
    --v12;
  }
  while (v12);
LABEL_26:
  LOBYTE(a6) = *a11;
  v45 = v17 * ((double)*(unint64_t *)&a6 - v16);
  v46 = fmax(v45, 0.0);
  if (v45 <= 1.0)
    v47 = v46;
  else
    v47 = 1.0;
  result = v18 + v19 * v47;
  *a12 = llround(result);
  return result;
}

uint64_t sub_2398AFB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  unsigned __int8 *v8;
  __int16 *v9;
  char *v10;
  __int16 *v11;
  char v12;
  char v13;
  __int16 v14;
  __int16 v15;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    if ((int)v6 <= 0xFF)
    {
      v15 = v5;
      v14 = (int)v6;
      v13 = v5;
      v12 = (int)v6;
      v8 = (unsigned __int8 *)&v13;
      v9 = &v15;
      v10 = &v12;
      v11 = &v14;
      return sub_2398AFBD4(a1, a2, &v8);
    }
    v15 = v5;
    LOBYTE(v14) = v5;
  }
  else
  {
    v15 = 0;
    LOBYTE(v14) = 0;
  }
  v8 = (unsigned __int8 *)&v14;
  v9 = &v15;
  return sub_2398B0198(a1, a2, (uint64_t)&v8);
}

uint64_t sub_2398AFBD4(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 **v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398AFE6C(&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398AFE08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

unsigned __int8 ***sub_2398AFE6C(unsigned __int8 ***result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  unsigned __int8 ***v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  _WORD *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  char v28;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v24 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v25 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v23 = 0;
    v26 = v3 - 1;
    v27 = v9 | (v10 << 32);
    v11 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(unsigned __int8 **)(a2 + 24);
    }
    v17 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(_WORD **)(a3 + 24);
    }
    v28 = 0;
    return (unsigned __int8 ***)sub_2398AFFEC(&v23, (uint64_t)&v28, v8, v11, v17);
  }
  return result;
}

_DWORD *sub_2398AFFEC(_DWORD *result, uint64_t a2, unsigned __int8 ***a3, unsigned __int8 *a4, _WORD *a5)
{
  int v5;
  int v6;
  unsigned __int8 **v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  _WORD *v16;
  int v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;
  unsigned int v23;
  unsigned __int8 *v24;

  v5 = result[5];
  v6 = result[2];
  if (v5)
  {
    v7 = *a3;
    v8 = **a3;
    v9 = result[6];
    v10 = result[7];
    if (v6)
    {
      v11 = 0;
      v12 = result[3];
      v13 = 2 * v10;
      v14 = 2 * result[4];
      while (1)
      {
        v16 = a5;
        v17 = v6;
        v15 = a4;
        do
        {
          LODWORD(v18) = *v15;
          if (v18 < *v8)
          {
            v18 = v7[1];
LABEL_9:
            LOWORD(v18) = *(_WORD *)v18;
            goto LABEL_10;
          }
          if (v18 > *v7[2])
          {
            v18 = v7[3];
            goto LABEL_9;
          }
LABEL_10:
          *v16 = (_WORD)v18;
          v15 += v12;
          v16 = (_WORD *)((char *)v16 + v14);
          --v17;
        }
        while (v17);
        LODWORD(v15) = *v15;
        if (v15 < *v8)
        {
          v15 = v7[1];
          goto LABEL_5;
        }
        if (v15 > *v7[2])
        {
          v15 = v7[3];
LABEL_5:
          LOWORD(v15) = *(_WORD *)v15;
        }
        *v16 = (_WORD)v15;
        a4 += v9;
        a5 = (_WORD *)((char *)a5 + v13);
        if (++v11 == v5)
          goto LABEL_18;
      }
    }
    while (1)
    {
      LODWORD(v22) = *a4;
      if (v22 < *v8)
      {
        v22 = v7[1];
      }
      else
      {
        if (v22 <= *v7[2])
          goto LABEL_29;
        v22 = v7[3];
      }
      LOWORD(v22) = *(_WORD *)v22;
LABEL_29:
      *a5 = (_WORD)v22;
      a4 += v9;
      a5 += v10;
      if (!--v5)
        goto LABEL_33;
    }
  }
  v7 = *a3;
  v8 = **a3;
LABEL_18:
  if (v6)
  {
    v19 = result[3];
    v20 = 2 * result[4];
    do
    {
      LODWORD(v21) = *a4;
      if (v21 < *v8)
      {
        v21 = v7[1];
      }
      else
      {
        if (v21 <= *v7[2])
          goto LABEL_22;
        v21 = v7[3];
      }
      LOWORD(v21) = *(_WORD *)v21;
LABEL_22:
      *a5 = (_WORD)v21;
      a4 += v19;
      a5 = (_WORD *)((char *)a5 + v20);
      --v6;
    }
    while (v6);
  }
LABEL_33:
  v23 = *a4;
  if (v23 < *v8)
  {
    v24 = v7[1];
LABEL_37:
    LOWORD(v23) = *(_WORD *)v24;
    goto LABEL_38;
  }
  if (v23 > *v7[2])
  {
    v24 = v7[3];
    goto LABEL_37;
  }
LABEL_38:
  *a5 = v23;
  return result;
}

uint64_t sub_2398B0198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398B0430((uint64_t)&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398B03CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398B0430(uint64_t result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  unsigned __int8 ***v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unsigned __int8 **v27;
  unsigned __int8 *v28;
  int i;
  _WORD *v30;
  int v31;
  unsigned __int8 *v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (v5)
    return result;
  v8 = (unsigned __int8 ***)result;
  v9 = v3 - 1;
  v10 = *(unsigned int *)(a2 + 40);
  v11 = *(unsigned int *)(a2 + 44);
  v12 = *(unsigned int *)(a3 + 40);
  v37 = *(unsigned int *)(a3 + 44);
  v13 = *(unsigned __int8 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48))
    v14 = v13 == 0;
  else
    v14 = 1;
  if (!v14)
  {
    v15 = *(_QWORD *)(a2 + 8);
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (v16)
    {
      p_shared_owners = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldxr(p_shared_owners);
      while (__stxr(v18 + 1, p_shared_owners));
      do
        v19 = __ldaxr(p_shared_owners);
      while (__stlxr(v19 - 1, p_shared_owners));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
    v13 = *(unsigned __int8 **)(a2 + 24);
  }
  v20 = *(_WORD **)(a3 + 24);
  if (*(_BYTE *)(a3 + 48) && v20)
  {
    v21 = *(_QWORD *)(a3 + 8);
    v22 = *(std::__shared_weak_count **)(a3 + 16);
    if (v22)
    {
      v23 = (unint64_t *)&v22->__shared_owners_;
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 1, v23));
      do
        v25 = __ldaxr(v23);
      while (__stlxr(v25 - 1, v23));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
    result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
    v20 = *(_WORD **)(a3 + 24);
  }
  v26 = v4 - 1;
  if (v9)
  {
    v27 = *v8;
    v28 = **v8;
    if (v4 == 1)
    {
      do
      {
        v35 = *v13;
        if (v35 < *v28)
          LOWORD(v35) = *(_WORD *)v27[1];
        *v20 = v35;
        v13 += v11;
        v20 += v37;
        --v9;
      }
      while (v9);
      goto LABEL_45;
    }
    for (i = 0; i != v9; ++i)
    {
      v30 = v20;
      v31 = v4 - 1;
      v32 = v13;
      do
      {
        result = *v32;
        if (result < *v28)
          result = *(unsigned __int16 *)v27[1];
        *v30 = result;
        v32 += v10;
        v30 += v12;
        --v31;
      }
      while (v31);
      v33 = *v32;
      if (v33 < *v28)
        LOWORD(v33) = *(_WORD *)v27[1];
      *v30 = v33;
      v13 += v11;
      v20 += v37;
    }
  }
  else
  {
    v27 = *v8;
    v28 = **v8;
  }
  if (v4 != 1)
  {
    do
    {
      v34 = *v13;
      if (v34 < *v28)
        LOWORD(v34) = *(_WORD *)v27[1];
      *v20 = v34;
      v13 += v10;
      v20 += v12;
      --v26;
    }
    while (v26);
  }
LABEL_45:
  v36 = *v13;
  if (v36 < *v28)
    LOWORD(v36) = *(_WORD *)v27[1];
  *v20 = v36;
  return result;
}

double sub_2398B06C8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[87];

  sub_2398ADDD4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v9);
  v12 = &off_250AE5E18;
  sub_2398B08FC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398B07D4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398B079C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398B07B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398B07D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1970;
  sub_2397622C4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF1F8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239762530(a2, (uint64_t)(a4 + 1));
}

void sub_2398B08C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398B08D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398B08E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239643AF4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398B08FC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_2398B09FC(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_23982657C(a2, &v13, v5);
  *(_WORD *)(a2 + 72) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2398B09E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2398B09FC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2398B0C3C(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2398B0BDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2398B0C3C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2398B0CB4();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2398B0CB4()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569343C8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569343C8))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_23964D5C0();
    sub_2398B0EB8((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2398B0EB8((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569343B0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569343B0, &dword_23940C000);
          __cxa_guard_release(&qword_2569343C8);
          return &stru_2569343B0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569343B0;
}

void sub_2398B0E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569343C8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569343C8);
  _Unwind_Resume(a1);
}

void sub_2398B0EB8(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2398B0F4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398B0F88(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398B1098(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398B0F98(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2398B1C8C((uint64_t)v13, 2080373759, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = -65504.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 65504.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  else
    _Q0.n128_f64[0] = 65504.0;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2398B1C8C((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_2398B1070(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398B11DC(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398B1098(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  unsigned int v4;
  double v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  double v27;

  v4 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v5 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v5 = 0.0;
    v4 = (int)v5;
    _Q0.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = (int)_Q0.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = 255;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm
  {
    FCVT            S3, H0
    FCVT            S3, H1
  }
  _ZF = _ZF && _S3 == (float)v6;
  if (_ZF)
    return sub_2398B11DC(a1, a2, (uint64_t)v23, _Q0);
  v27 = (double)v4;
  __asm { FCVT            D0, H0 }
  v25 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v24 = _Q0.n128_u64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_2398B1688(a1, a2, (uint64_t)v21, _Q0, _D1, 1.0 / ((double)v6 - (double)v4));
}

uint64_t sub_2398B11DC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_u64[0] = sub_2398B1474(a4.n128_f32[0], (uint64_t)&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398B1410(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

__int16 sub_2398B1474@<H0>(float _S0@<S0>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>)
{
  int v4;
  int v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  BOOL v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  _WORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  int i;
  _WORD *v30;
  int v31;
  _BYTE *v32;

  v5 = *(_DWORD *)(a3 + 32);
  v4 = *(_DWORD *)(a3 + 36);
  if (v5)
    _ZF = v4 == 0;
  else
    _ZF = 1;
  if (!_ZF)
  {
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a3 + 40);
    v11 = *(unsigned int *)(a3 + 44);
    v13 = *(unsigned int *)(a4 + 40);
    v12 = *(unsigned int *)(a4 + 44);
    v14 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48))
      v15 = v14 == 0;
    else
      v15 = 1;
    if (!v15)
    {
      v16 = *(_QWORD *)(a3 + 8);
      v17 = *(std::__shared_weak_count **)(a3 + 16);
      if (v17)
      {
        p_shared_owners = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(p_shared_owners);
        while (__stxr(v19 + 1, p_shared_owners));
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v16 + 88))(v16, 0, "unknown location");
      v14 = *(_BYTE **)(a3 + 24);
    }
    v21 = *(_WORD **)(a4 + 24);
    if (*(_BYTE *)(a4 + 48) && v21)
    {
      v22 = *(_QWORD *)(a4 + 8);
      v23 = *(std::__shared_weak_count **)(a4 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_WORD **)(a4 + 24);
    }
    v27 = v5 - 1;
    v28 = 2 * v13;
    if (v9)
    {
      if (v5 == 1)
      {
        do
        {
          LOBYTE(_S0) = *v14;
          _S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v21 = LOWORD(_S0);
          v14 += v11;
          v21 += v12;
          --v9;
        }
        while (v9);
      }
      else
      {
        for (i = 0; i != v9; ++i)
        {
          v30 = v21;
          v31 = v5 - 1;
          v32 = v14;
          do
          {
            LOBYTE(_S0) = *v32;
            _S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *v30 = LOWORD(_S0);
            v32 += v10;
            v30 = (_WORD *)((char *)v30 + v28);
            --v31;
          }
          while (v31);
          LOBYTE(_S0) = *v32;
          _S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v30 = LOWORD(_S0);
          v14 += v11;
          v21 += v12;
        }
      }
    }
    if (v5 != 1)
    {
      do
      {
        LOBYTE(_S0) = *v14;
        _S0 = (float)LODWORD(_S0);
        __asm { FCVT            H0, S0 }
        *v21 = LOWORD(_S0);
        v14 += v10;
        v21 = (_WORD *)((char *)v21 + v28);
        --v27;
      }
      while (v27);
    }
    LOBYTE(_S0) = *v14;
    _S0 = (float)LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    *v21 = LOWORD(_S0);
  }
  return LOWORD(_S0);
}

uint64_t sub_2398B1688(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6)
{
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v9 = *(_QWORD *)(a1 + 8);
  if (!v9)
    goto LABEL_17;
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v9 = *(_QWORD *)(a1 + 8);
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_42;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v30 = 0;
    v18 = *(_QWORD *)(a2 + 8);
    if (!v18)
      goto LABEL_33;
LABEL_18:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(a2 + 8);
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v29, v18, 1);
    v31 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(&v30, v9, 0);
  v18 = *(_QWORD *)(a2 + 8);
  if (v18)
    goto LABEL_18;
LABEL_33:
  v29 = 0;
  v31 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f64[0] = sub_2398B1920((uint64_t)&v31, a1, a2, a4.n128_f64[0], a5, a6);
LABEL_36:
  v27 = v29;
  v29 = 0;
  if (v27)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v27 + 8))(v27, a4);
  result = v30;
  v30 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398B18BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

double sub_2398B1920(uint64_t a1, uint64_t a2, uint64_t a3, double result, double a5, double a6)
{
  int v6;
  int v7;
  BOOL v8;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  char v31;

  v7 = *(_DWORD *)(a2 + 32);
  v6 = *(_DWORD *)(a2 + 36);
  if (v7)
    v8 = v6 == 0;
  else
    v8 = 1;
  if (!v8)
  {
    v27 = v7 - 1;
    v12 = *(unsigned int *)(a2 + 44);
    v13 = *(unsigned int *)(a3 + 44);
    v28 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v26 = 0;
    v29 = v6 - 1;
    v30 = v12 | (v13 << 32);
    v14 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(_BYTE **)(a2 + 24);
    }
    v20 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_WORD **)(a3 + 24);
    }
    v31 = 0;
    *(_QWORD *)&result = sub_2398B1AA0(&v26, result, a5, a6, (uint64_t)&v31, a1, v14, v20);
  }
  return result;
}

__int16 sub_2398B1AA0@<H0>(_DWORD *a1@<X0>, double a2@<D0>, double a3@<D1>, double _D2@<D2>, uint64_t a5@<X1>, uint64_t a6@<X2>, _BYTE *a7@<X3>, _WORD *a8@<X4>)
{
  unsigned int v8;
  double v9;
  double v10;
  double v11;
  _WORD *v16;
  _BYTE *v17;
  unsigned int v18;
  double v19;
  double v20;
  double v21;
  unsigned int v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  __int16 result;

  if (a1[5])
  {
    v8 = 0;
    a2 = 0.0;
    do
    {
      v16 = a8;
      v17 = a7;
      if (a1[2])
      {
        v18 = 0;
        v17 = a7;
        v16 = a8;
        do
        {
          LOBYTE(_D2) = *v17;
          v19 = ((double)*(unint64_t *)&_D2 - ****(double ****)a6) * **(double **)(**(_QWORD **)a6 + 8);
          v20 = fmax(v19, 0.0);
          if (v19 <= 1.0)
            v21 = v20;
          else
            v21 = 1.0;
          _D2 = ***(double ***)(*(_QWORD *)a6 + 8) + v21 * **(double **)(*(_QWORD *)(*(_QWORD *)a6 + 8) + 8);
          *(float *)&_D2 = _D2;
          __asm { FCVT            H2, S2 }
          *v16 = LOWORD(_D2);
          v17 += a1[3];
          v16 += a1[4];
          ++v18;
        }
        while (v18 < a1[2]);
      }
      LOBYTE(_D2) = *v17;
      v9 = ((double)*(unint64_t *)&_D2 - ****(double ****)a6) * **(double **)(**(_QWORD **)a6 + 8);
      v10 = fmax(v9, 0.0);
      if (v9 <= 1.0)
        v11 = v10;
      else
        v11 = 1.0;
      _D2 = ***(double ***)(*(_QWORD *)a6 + 8) + v11 * **(double **)(*(_QWORD *)(*(_QWORD *)a6 + 8) + 8);
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *v16 = LOWORD(_D2);
      a7 += a1[6];
      a8 += a1[7];
      ++v8;
    }
    while (v8 < a1[5]);
  }
  if (a1[2])
  {
    v22 = 0;
    a2 = 0.0;
    do
    {
      LOBYTE(_D2) = *a7;
      v23 = ((double)*(unint64_t *)&_D2 - ****(double ****)a6) * **(double **)(**(_QWORD **)a6 + 8);
      v24 = fmax(v23, 0.0);
      if (v23 <= 1.0)
        v25 = v24;
      else
        v25 = 1.0;
      _D2 = ***(double ***)(*(_QWORD *)a6 + 8) + v25 * **(double **)(*(_QWORD *)(*(_QWORD *)a6 + 8) + 8);
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *a8 = LOWORD(_D2);
      a7 += a1[3];
      a8 += a1[4];
      ++v22;
    }
    while (v22 < a1[2]);
  }
  LOBYTE(a2) = *a7;
  v26 = ((double)*(unint64_t *)&a2 - ****(double ****)a6) * **(double **)(**(_QWORD **)a6 + 8);
  v27 = fmax(v26, 0.0);
  if (v26 <= 1.0)
    v28 = v27;
  else
    v28 = 1.0;
  _S0 = ***(double ***)(*(_QWORD *)a6 + 8) + v28 * **(double **)(*(_QWORD *)(*(_QWORD *)a6 + 8) + 8);
  __asm { FCVT            H0, S0 }
  *a8 = result;
  return result;
}

uint64_t sub_2398B1C8C(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  __int16 *v22;
  char *v23;
  __int16 *v24;
  char v25;
  char v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 255.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      LOBYTE(v27) = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = (unsigned __int8 *)&v27;
      v22 = &v28;
      return sub_2398B2380(v16, v17, (uint64_t)&v21);
    }
    else if (_Q0.n128_f32[0] <= 255.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      LOBYTE(v27) = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = (unsigned __int8 *)&v27;
      v22 = &v28;
      return sub_2398B2920(v19, v20, (uint64_t)&v21);
    }
    else
    {
      return sub_2398B11DC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = (unsigned __int8 *)&v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_2398B1DA4(v12, v13, &v21, _Q0);
  }
}

uint64_t sub_2398B1DA4(uint64_t a1, uint64_t a2, unsigned __int8 **a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 **v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f64[0] = sub_2398B203C(&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398B1FD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

double sub_2398B203C(unsigned __int8 ***a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  __int16 *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  double result;
  uint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  char v29;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v25 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v26 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v24 = 0;
    v27 = v3 - 1;
    v28 = v9 | (v10 << 32);
    v11 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(unsigned __int8 **)(a2 + 24);
    }
    v17 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(__int16 **)(a3 + 24);
    }
    v29 = 0;
    *(_QWORD *)&result = sub_2398B21BC(&v24, (uint64_t)&v29, a1, v11, v17);
  }
  return result;
}

__int16 sub_2398B21BC@<H0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 ***a3@<X2>, unsigned __int8 *a4@<X3>, __int16 *a5@<X4>)
{
  unsigned int i;
  __int16 *v6;
  __int16 *v8;
  unsigned __int8 *v9;
  unsigned int v10;
  __int16 *v11;
  uint64_t v13;
  unsigned int v14;
  uint64_t v20;
  unsigned int v21;
  unsigned int j;
  __int16 *v24;
  uint64_t v26;
  unsigned int v27;
  uint64_t v29;
  unsigned int v30;
  __int16 *v31;
  __int16 result;
  __int16 *v33;

  if (a1[5])
  {
    for (i = 0; i < a1[5]; ++i)
    {
      v8 = a5;
      v9 = a4;
      if (a1[2])
      {
        v10 = 0;
        v9 = a4;
        v8 = a5;
        do
        {
          v13 = (uint64_t)*a3;
          v14 = *v9;
          if (v14 < ***a3)
          {
            v11 = *(__int16 **)(v13 + 8);
          }
          else
          {
            if (v14 <= **(unsigned __int8 **)(v13 + 16))
            {
              _S0 = (float)v14;
              __asm { FCVT            H0, S0 }
              goto LABEL_10;
            }
            v11 = *(__int16 **)(v13 + 24);
          }
          _H0 = *v11;
LABEL_10:
          *v8 = _H0;
          v9 += a1[3];
          v8 += a1[4];
          ++v10;
        }
        while (v10 < a1[2]);
      }
      v20 = (uint64_t)*a3;
      v21 = *v9;
      if (v21 < ***a3)
      {
        v6 = *(__int16 **)(v20 + 8);
      }
      else
      {
        if (v21 <= **(unsigned __int8 **)(v20 + 16))
        {
          _S0 = (float)v21;
          __asm { FCVT            H0, S0 }
          goto LABEL_5;
        }
        v6 = *(__int16 **)(v20 + 24);
      }
      _H0 = *v6;
LABEL_5:
      *v8 = _H0;
      a4 += a1[6];
      a5 += a1[7];
    }
  }
  if (a1[2])
  {
    for (j = 0; j < a1[2]; ++j)
    {
      v26 = (uint64_t)*a3;
      v27 = *a4;
      if (v27 < ***a3)
      {
        v24 = *(__int16 **)(v26 + 8);
      }
      else
      {
        if (v27 <= **(unsigned __int8 **)(v26 + 16))
        {
          _S0 = (float)v27;
          __asm { FCVT            H0, S0 }
          goto LABEL_23;
        }
        v24 = *(__int16 **)(v26 + 24);
      }
      _H0 = *v24;
LABEL_23:
      *a5 = _H0;
      a4 += a1[3];
      a5 += a1[4];
    }
  }
  v29 = (uint64_t)*a3;
  v30 = *a4;
  if (v30 >= ***a3)
  {
    if (v30 <= **(unsigned __int8 **)(v29 + 16))
    {
      _S0 = (float)v30;
      __asm { FCVT            H0, S0 }
      *a5 = result;
    }
    else
    {
      v33 = *(__int16 **)(v29 + 24);
      result = *v33;
      *a5 = *v33;
    }
  }
  else
  {
    v31 = *(__int16 **)(v29 + 8);
    result = *v31;
    *a5 = *v31;
  }
  return result;
}

uint64_t sub_2398B2380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398B2618((uint64_t)&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398B25B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398B2618(uint64_t result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  unsigned __int8 ***v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  int i;
  _WORD *v34;
  int v35;
  unsigned __int8 *v36;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  unsigned int v41;
  unsigned int v44;
  unsigned int v45;
  uint64_t v48;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    _ZF = v3 == 0;
  else
    _ZF = 1;
  if (!_ZF)
  {
    v8 = (unsigned __int8 ***)result;
    v9 = v3 - 1;
    v10 = *(unsigned int *)(a2 + 40);
    v11 = *(unsigned int *)(a2 + 44);
    v12 = *(unsigned int *)(a3 + 40);
    v48 = *(unsigned int *)(a3 + 44);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v14 = v13 == 0;
    else
      v14 = 1;
    if (!v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v20 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_WORD **)(a3 + 24);
    }
    v26 = v4 - 1;
    v27 = 2 * v12;
    if (v9)
    {
      if (v4 == 1)
      {
        v40 = 2 * v48;
        do
        {
          while (1)
          {
            v41 = *v13;
            if (v41 >= ***v8)
              break;
            *v20 = *(_WORD *)(*v8)[1];
            v13 += v11;
            v20 = (_WORD *)((char *)v20 + v40);
            if (!--v9)
              goto LABEL_40;
          }
          _S0 = (float)v41;
          __asm { FCVT            H0, S0 }
          *v20 = LOWORD(_S0);
          v13 += v11;
          v20 = (_WORD *)((char *)v20 + v40);
          --v9;
        }
        while (v9);
      }
      else
      {
        for (i = 0; i != v9; ++i)
        {
          v34 = v20;
          v35 = v4 - 1;
          v36 = v13;
          do
          {
            while (1)
            {
              v38 = *v36;
              result = ***v8;
              if (v38 < result)
                break;
              _S0 = (float)v38;
              __asm { FCVT            H0, S0 }
              *v34 = LOWORD(_S0);
              v36 += v10;
              v34 = (_WORD *)((char *)v34 + v27);
              if (!--v35)
                goto LABEL_34;
            }
            *v34 = *(_WORD *)(*v8)[1];
            v36 += v10;
            v34 = (_WORD *)((char *)v34 + v27);
            --v35;
          }
          while (v35);
LABEL_34:
          v39 = *v36;
          if (v39 >= ***v8)
          {
            _S0 = (float)v39;
            __asm { FCVT            H0, S0 }
          }
          else
          {
            _H0 = *(_WORD *)(*v8)[1];
          }
          *v34 = _H0;
          v13 += v11;
          v20 += v48;
        }
      }
    }
LABEL_40:
    if (v4 != 1)
    {
      do
      {
        while (1)
        {
          v44 = *v13;
          if (v44 < ***v8)
            break;
          _S0 = (float)v44;
          __asm { FCVT            H0, S0 }
          *v20 = LOWORD(_S0);
          v13 += v10;
          v20 = (_WORD *)((char *)v20 + v27);
          if (!--v26)
            goto LABEL_45;
        }
        *v20 = *(_WORD *)(*v8)[1];
        v13 += v10;
        v20 = (_WORD *)((char *)v20 + v27);
        --v26;
      }
      while (v26);
    }
LABEL_45:
    v45 = *v13;
    if (v45 >= ***v8)
    {
      _S0 = (float)v45;
      __asm { FCVT            H0, S0 }
    }
    else
    {
      _H0 = *(_WORD *)(*v8)[1];
    }
    *v20 = _H0;
  }
  return result;
}

uint64_t sub_2398B2920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398B2BB8((uint64_t)&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398B2B54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398B2BB8(uint64_t result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  unsigned __int8 ***v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  int i;
  _WORD *v34;
  int v35;
  unsigned __int8 *v36;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  unsigned int v41;
  unsigned int v44;
  unsigned int v45;
  uint64_t v48;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    _ZF = v3 == 0;
  else
    _ZF = 1;
  if (!_ZF)
  {
    v8 = (unsigned __int8 ***)result;
    v9 = v3 - 1;
    v10 = *(unsigned int *)(a2 + 40);
    v11 = *(unsigned int *)(a2 + 44);
    v12 = *(unsigned int *)(a3 + 40);
    v48 = *(unsigned int *)(a3 + 44);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v14 = v13 == 0;
    else
      v14 = 1;
    if (!v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v20 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_WORD **)(a3 + 24);
    }
    v26 = v4 - 1;
    v27 = 2 * v12;
    if (v9)
    {
      if (v4 == 1)
      {
        v40 = 2 * v48;
        do
        {
          while (1)
          {
            v41 = *v13;
            if (v41 <= ***v8)
              break;
            *v20 = *(_WORD *)(*v8)[1];
            v13 += v11;
            v20 = (_WORD *)((char *)v20 + v40);
            if (!--v9)
              goto LABEL_40;
          }
          _S0 = (float)v41;
          __asm { FCVT            H0, S0 }
          *v20 = LOWORD(_S0);
          v13 += v11;
          v20 = (_WORD *)((char *)v20 + v40);
          --v9;
        }
        while (v9);
      }
      else
      {
        for (i = 0; i != v9; ++i)
        {
          v34 = v20;
          v35 = v4 - 1;
          v36 = v13;
          do
          {
            while (1)
            {
              v38 = *v36;
              result = ***v8;
              if (v38 > result)
                break;
              _S0 = (float)v38;
              __asm { FCVT            H0, S0 }
              *v34 = LOWORD(_S0);
              v36 += v10;
              v34 = (_WORD *)((char *)v34 + v27);
              if (!--v35)
                goto LABEL_34;
            }
            *v34 = *(_WORD *)(*v8)[1];
            v36 += v10;
            v34 = (_WORD *)((char *)v34 + v27);
            --v35;
          }
          while (v35);
LABEL_34:
          v39 = *v36;
          if (v39 <= ***v8)
          {
            _S0 = (float)v39;
            __asm { FCVT            H0, S0 }
          }
          else
          {
            _H0 = *(_WORD *)(*v8)[1];
          }
          *v34 = _H0;
          v13 += v11;
          v20 += v48;
        }
      }
    }
LABEL_40:
    if (v4 != 1)
    {
      do
      {
        while (1)
        {
          v44 = *v13;
          if (v44 > ***v8)
            break;
          _S0 = (float)v44;
          __asm { FCVT            H0, S0 }
          *v20 = LOWORD(_S0);
          v13 += v10;
          v20 = (_WORD *)((char *)v20 + v27);
          if (!--v26)
            goto LABEL_45;
        }
        *v20 = *(_WORD *)(*v8)[1];
        v13 += v10;
        v20 = (_WORD *)((char *)v20 + v27);
        --v26;
      }
      while (v26);
    }
LABEL_45:
    v45 = *v13;
    if (v45 <= ***v8)
    {
      _S0 = (float)v45;
      __asm { FCVT            H0, S0 }
    }
    else
    {
      _H0 = *(_WORD *)(*v8)[1];
    }
    *v20 = _H0;
  }
  return result;
}

double sub_2398B2EC0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[87];

  sub_2398ADDD4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v9);
  v12 = &off_250ADD920;
  sub_239541EE0((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398B2FCC(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398B2F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398B2FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398B2FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1F40;
  sub_239762604(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF210[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397096A8(a2, (uint64_t)(a4 + 1));
}

void sub_2398B30B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398B30CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398B30E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239644044((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398B30F4(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_2398B31F4(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_2398B3104(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  double v5;
  float v6;
  _QWORD v8[5];
  _QWORD v9[2];
  _QWORD v10[2];
  _QWORD v11[2];

  v3 = (*a1)[1];
  v11[0] = **a1;
  v11[1] = v3;
  v10[0] = v11[0];
  v10[1] = v3;
  v9[0] = v11[0];
  v9[1] = v3;
  v8[0] = v11;
  v8[1] = v10;
  v8[2] = v9;
  v8[3] = v11[0];
  v8[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = -3.40282347e38;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 3.40282347e38;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 <= 3.40282347e38)
      v5 = v4;
    else
      v5 = 3.40282347e38;
    v6 = v5;
    return sub_2398B3DA8((uint64_t)v8, a3, v6);
  }
  else
  {
    a3.n128_u32[0] = -8388609;
    return sub_2398B3DA8((uint64_t)v8, a3, 3.4028e38);
  }
}

uint64_t sub_2398B31CC(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398B3324(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398B31F4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  unsigned int v12;
  double v13;
  float v14;
  double v16;
  double **v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  unint64_t v22;
  double v23;
  uint64_t v24;
  double v25;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v11 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v11 = 0.0;
    v10 = (int)v11;
    a4.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v12 = (int)a4.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      a4.n128_u64[0] = 0xC7EFFFFFE0000000;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
      a4.n128_f32[0] = a4.n128_f64[0];
      v13 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v13 = *(double *)(a3 + 32);
      v14 = v13;
      if (a4.n128_f32[0] != (float)v10 || v14 != (float)v12)
        goto LABEL_15;
      return sub_2398B3324(a1, a2, (uint64_t)v21, a4);
    }
  }
  else
  {
    v12 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v14 = 1.0;
  a4.n128_u32[0] = 0;
  if ((float)v10 != 0.0 || 1.0 != (float)v12)
  {
LABEL_15:
    v25 = (double)v10;
    v23 = a4.n128_f32[0];
    v16 = v14;
    a4.n128_f64[0] = v16 - a4.n128_f32[0];
    v22 = a4.n128_u64[0];
    v21[0] = &v25;
    v21[1] = &v24;
    v20[0] = &v23;
    v20[1] = &v22;
    v19[0] = (double **)v21;
    v19[1] = (double **)v20;
    return sub_2398B37C0(a1, a2, v19, a4, v16, 1.0 / ((double)v12 - (double)v10), 1.0, a8, a9, a10);
  }
  return sub_2398B3324(a1, a2, (uint64_t)v21, a4);
}

uint64_t sub_2398B3324(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4 = sub_2398B35BC(a4, (uint64_t)&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398B3558(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

__n128 sub_2398B35BC(__n128 result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  BOOL v6;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  BOOL v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  int i;
  _DWORD *v29;
  int v30;
  unsigned __int8 *v31;

  v5 = *(_DWORD *)(a3 + 32);
  v4 = *(_DWORD *)(a3 + 36);
  if (v5)
    v6 = v4 == 0;
  else
    v6 = 1;
  if (!v6)
  {
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a3 + 40);
    v11 = *(unsigned int *)(a3 + 44);
    v12 = *(unsigned int *)(a4 + 40);
    v13 = *(unsigned int *)(a4 + 44);
    v14 = *(unsigned __int8 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48))
      v15 = v14 == 0;
    else
      v15 = 1;
    if (!v15)
    {
      v16 = *(_QWORD *)(a3 + 8);
      v17 = *(std::__shared_weak_count **)(a3 + 16);
      if (v17)
      {
        p_shared_owners = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(p_shared_owners);
        while (__stxr(v19 + 1, p_shared_owners));
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v16 + 88))(v16, 0, "unknown location");
      v14 = *(unsigned __int8 **)(a3 + 24);
    }
    v21 = *(_DWORD **)(a4 + 24);
    if (*(_BYTE *)(a4 + 48) && v21)
    {
      v22 = *(_QWORD *)(a4 + 8);
      v23 = *(std::__shared_weak_count **)(a4 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_DWORD **)(a4 + 24);
    }
    v27 = v5 - 1;
    if (v9)
    {
      if (v5 == 1)
      {
        do
        {
          result.n128_u8[0] = *v14;
          result.n128_f32[0] = (float)result.n128_u32[0];
          *v21 = result.n128_u32[0];
          v14 += v11;
          v21 += v13;
          --v9;
        }
        while (v9);
LABEL_35:
        result.n128_u8[0] = *v14;
        result.n128_f32[0] = (float)result.n128_u32[0];
        *v21 = result.n128_u32[0];
        return result;
      }
      for (i = 0; i != v9; ++i)
      {
        v29 = v21;
        v30 = v5 - 1;
        v31 = v14;
        do
        {
          result.n128_u8[0] = *v31;
          result.n128_f32[0] = (float)result.n128_u32[0];
          *v29 = result.n128_u32[0];
          v31 += v10;
          v29 += v12;
          --v30;
        }
        while (v30);
        result.n128_u8[0] = *v31;
        result.n128_f32[0] = (float)result.n128_u32[0];
        *v29 = result.n128_u32[0];
        v14 += v11;
        v21 += v13;
      }
    }
    if (v5 != 1)
    {
      do
      {
        result.n128_u8[0] = *v14;
        result.n128_f32[0] = (float)result.n128_u32[0];
        *v21 = result.n128_u32[0];
        v14 += v10;
        v21 += v12;
        --v27;
      }
      while (v27);
    }
    goto LABEL_35;
  }
  return result;
}

uint64_t sub_2398B37C0(uint64_t a1, uint64_t a2, double ***a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  double ***v35;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_42;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f32[0] = sub_2398B3A58(&v35, a1, a2, a4.n128_f64[0], a5, a6, a7, a8, a9, a10);
LABEL_36:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398B39F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float sub_2398B3A58(double ****a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  int v10;
  int v11;
  BOOL v12;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  unint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  int v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  char v36;

  v11 = *(_DWORD *)(a2 + 32);
  v10 = *(_DWORD *)(a2 + 36);
  if (v11)
    v12 = v10 == 0;
  else
    v12 = 1;
  if (!v12)
  {
    v32 = v11 - 1;
    v16 = *(unsigned int *)(a2 + 44);
    v17 = *(unsigned int *)(a3 + 44);
    v33 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v31 = 0;
    v34 = v10 - 1;
    v35 = v16 | (v17 << 32);
    v18 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v18)
    {
      v19 = *(_QWORD *)(a2 + 8);
      v20 = *(std::__shared_weak_count **)(a2 + 16);
      if (v20)
      {
        p_shared_owners = (unint64_t *)&v20->__shared_owners_;
        do
          v22 = __ldxr(p_shared_owners);
        while (__stxr(v22 + 1, p_shared_owners));
        do
          v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v19 + 88))(v19, 0, "unknown location");
      v18 = *(_BYTE **)(a2 + 24);
    }
    v24 = *(_DWORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v24)
    {
      v25 = *(_QWORD *)(a3 + 8);
      v26 = *(std::__shared_weak_count **)(a3 + 16);
      if (v26)
      {
        v27 = (unint64_t *)&v26->__shared_owners_;
        do
          v28 = __ldxr(v27);
        while (__stxr(v28 + 1, v27));
        do
          v29 = __ldaxr(v27);
        while (__stlxr(v29 - 1, v27));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v25 + 88))(v25, 1, "unknown location");
      v24 = *(_DWORD **)(a3 + 24);
    }
    v36 = 0;
    *(float *)&a4 = sub_2398B3BD8(&v31, a4, a5, a6, a7, a8, a9, a10, (uint64_t)&v36, a1, v18, v24);
  }
  return *(float *)&a4;
}

float sub_2398B3BD8(_DWORD *a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, double ****a10, _BYTE *a11, _DWORD *a12)
{
  int v12;
  int v13;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  int v27;
  _BYTE *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double **v35;
  double **v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  float result;

  v12 = a1[5];
  v13 = a1[2];
  if (!v12)
  {
    v36 = **a10;
    v35 = (*a10)[1];
    v16 = **v36;
    v17 = *v36[1];
    v18 = **v35;
    v19 = *v35[1];
    if (!v13)
      goto LABEL_26;
    goto LABEL_15;
  }
  v15 = **a10;
  v14 = (*a10)[1];
  v16 = **v15;
  v17 = *v15[1];
  v18 = **v14;
  v19 = *v14[1];
  v20 = a1[6];
  v21 = a1[7];
  if (v13)
  {
    v22 = 0;
    v23 = a1[3];
    v24 = 4 * v21;
    v25 = 4 * a1[4];
    do
    {
      v26 = a12;
      v27 = v13;
      v28 = a11;
      do
      {
        LOBYTE(a8) = *v28;
        v29 = v17 * ((double)*(unint64_t *)&a8 - v16);
        v30 = fmax(v29, 0.0);
        if (v29 <= 1.0)
          v31 = v30;
        else
          v31 = 1.0;
        a8 = v18 + v19 * v31;
        *(float *)&a8 = a8;
        *v26 = LODWORD(a8);
        v28 += v23;
        v26 = (_DWORD *)((char *)v26 + v25);
        --v27;
      }
      while (v27);
      LOBYTE(a8) = *v28;
      v32 = v17 * ((double)*(unint64_t *)&a8 - v16);
      v33 = fmax(v32, 0.0);
      if (v32 <= 1.0)
        v34 = v33;
      else
        v34 = 1.0;
      a8 = v18 + v19 * v34;
      *(float *)&a8 = a8;
      *v26 = LODWORD(a8);
      a11 += v20;
      a12 = (_DWORD *)((char *)a12 + v24);
      ++v22;
    }
    while (v22 != v12);
LABEL_15:
    v37 = a1[3];
    v38 = 4 * a1[4];
    a6 = 0.0;
    do
    {
      LOBYTE(a8) = *a11;
      v39 = v17 * ((double)*(unint64_t *)&a8 - v16);
      v40 = fmax(v39, 0.0);
      if (v39 <= 1.0)
        v41 = v40;
      else
        v41 = 1.0;
      a8 = v18 + v19 * v41;
      *(float *)&a8 = a8;
      *a12 = LODWORD(a8);
      a11 += v37;
      a12 = (_DWORD *)((char *)a12 + v38);
      --v13;
    }
    while (v13);
    goto LABEL_26;
  }
  a6 = 0.0;
  do
  {
    LOBYTE(a8) = *a11;
    v42 = v17 * ((double)*(unint64_t *)&a8 - v16);
    v43 = fmax(v42, 0.0);
    if (v42 <= 1.0)
      v44 = v43;
    else
      v44 = 1.0;
    a8 = v18 + v19 * v44;
    *(float *)&a8 = a8;
    *a12 = LODWORD(a8);
    a11 += v20;
    a12 += v21;
    --v12;
  }
  while (v12);
LABEL_26:
  LOBYTE(a6) = *a11;
  v45 = v17 * ((double)*(unint64_t *)&a6 - v16);
  v46 = fmax(v45, 0.0);
  if (v45 <= 1.0)
    v47 = v46;
  else
    v47 = 1.0;
  result = v18 + v19 * v47;
  *(float *)a12 = result;
  return result;
}

uint64_t sub_2398B3DA8(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  char *v17;
  float *v18;
  char v19;
  char v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 255.0;
    v3 = a3 >= 255.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOBYTE(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_2398B4504(v10, v11, (unsigned __int8 **)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1132396544;
      if (a3 <= 255.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOBYTE(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_2398B4AB0(v13, v14, (unsigned __int8 **)&v15, a2);
      }
      else
      {
        return sub_2398B3324(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_2398B3EA8(v6, v7, (unsigned __int8 **)&v15, a2);
  }
}

uint64_t sub_2398B3EA8(uint64_t a1, uint64_t a2, unsigned __int8 **a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 **v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f32[0] = sub_2398B4140(&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398B40DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float sub_2398B4140(unsigned __int8 ***a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  float *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  float result;
  uint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  char v29;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v25 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v26 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v24 = 0;
    v27 = v3 - 1;
    v28 = v9 | (v10 << 32);
    v11 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(unsigned __int8 **)(a2 + 24);
    }
    v17 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(float **)(a3 + 24);
    }
    v29 = 0;
    return sub_2398B42C0(&v24, (uint64_t)&v29, a1, v11, v17);
  }
  return result;
}

float sub_2398B42C0(_DWORD *a1, uint64_t a2, unsigned __int8 ***a3, unsigned __int8 *a4, float *a5)
{
  int v5;
  int v6;
  unsigned __int8 **v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  float *v16;
  int v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  float *v29;
  float result;
  float *v31;

  v5 = a1[5];
  v6 = a1[2];
  if (!v5)
  {
    v7 = *a3;
    v8 = **a3;
LABEL_19:
    if (!v6)
      goto LABEL_35;
    v22 = a1[3];
    v23 = 4 * a1[4];
    while (1)
    {
      while (1)
      {
        v25 = *a4;
        if (v25 >= *v8)
          break;
        v24 = v7[1];
LABEL_22:
        *a5 = *(float *)v24;
        a4 += v22;
        a5 = (float *)((char *)a5 + v23);
        if (!--v6)
          goto LABEL_35;
      }
      if (v25 > *v7[2])
      {
        v24 = v7[3];
        goto LABEL_22;
      }
      *a5 = (float)v25;
      a4 += v22;
      a5 = (float *)((char *)a5 + v23);
      if (!--v6)
        goto LABEL_35;
    }
  }
  v7 = *a3;
  v8 = **a3;
  v9 = a1[6];
  v10 = a1[7];
  if (v6)
  {
    v11 = 0;
    v12 = a1[3];
    v13 = 4 * v10;
    v14 = 4 * a1[4];
    while (1)
    {
      v16 = a5;
      v17 = v6;
      v18 = a4;
      do
      {
        while (1)
        {
          v20 = *v18;
          if (v20 >= *v8)
            break;
          v19 = v7[1];
LABEL_8:
          *v16 = *(float *)v19;
          v18 += v12;
          v16 = (float *)((char *)v16 + v14);
          if (!--v17)
            goto LABEL_13;
        }
        if (v20 > *v7[2])
        {
          v19 = v7[3];
          goto LABEL_8;
        }
        *v16 = (float)v20;
        v18 += v12;
        v16 = (float *)((char *)v16 + v14);
        --v17;
      }
      while (v17);
LABEL_13:
      v21 = *v18;
      if (v21 < *v8)
      {
        v15 = v7[1];
        goto LABEL_5;
      }
      if (v21 <= *v7[2])
      {
        *v16 = (float)v21;
        a4 += v9;
        a5 = (float *)((char *)a5 + v13);
        if (++v11 == v5)
          goto LABEL_19;
        continue;
      }
      v15 = v7[3];
LABEL_5:
      *v16 = *(float *)v15;
      a4 += v9;
      a5 = (float *)((char *)a5 + v13);
      if (++v11 == v5)
        goto LABEL_19;
    }
  }
  v26 = 4 * v10;
  do
  {
    while (1)
    {
      while (1)
      {
        v27 = *a4;
        if (v27 >= *v8)
          break;
        *a5 = *(float *)v7[1];
        a4 += v9;
        a5 = (float *)((char *)a5 + v26);
        if (!--v5)
          goto LABEL_35;
      }
      if (v27 > *v7[2])
        break;
      *a5 = (float)v27;
      a4 += v9;
      a5 = (float *)((char *)a5 + v26);
      if (!--v5)
        goto LABEL_35;
    }
    *a5 = *(float *)v7[3];
    a4 += v9;
    a5 = (float *)((char *)a5 + v26);
    --v5;
  }
  while (v5);
LABEL_35:
  v28 = *a4;
  if (v28 >= *v8)
  {
    if (v28 <= *v7[2])
    {
      result = (float)v28;
      *a5 = (float)v28;
    }
    else
    {
      v31 = (float *)v7[3];
      result = *v31;
      *a5 = *v31;
    }
  }
  else
  {
    v29 = (float *)v7[1];
    result = *v29;
    *a5 = *v29;
  }
  return result;
}

uint64_t sub_2398B4504(uint64_t a1, uint64_t a2, unsigned __int8 **a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 **v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f32[0] = sub_2398B479C(&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398B4738(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float sub_2398B479C(unsigned __int8 ***a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  float *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  float result;
  uint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  char v29;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v25 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v26 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v24 = 0;
    v27 = v3 - 1;
    v28 = v9 | (v10 << 32);
    v11 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(unsigned __int8 **)(a2 + 24);
    }
    v17 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(float **)(a3 + 24);
    }
    v29 = 0;
    return sub_2398B491C(&v24, (uint64_t)&v29, a1, v11, v17);
  }
  return result;
}

float sub_2398B491C(_DWORD *a1, uint64_t a2, unsigned __int8 ***a3, unsigned __int8 *a4, float *a5)
{
  int v5;
  int v6;
  unsigned __int8 **v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  float v15;
  float *v16;
  int v17;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  float *v27;
  float result;

  v5 = a1[5];
  v6 = a1[2];
  if (!v5)
  {
    v7 = *a3;
    v8 = **a3;
LABEL_13:
    if (v6)
    {
      v21 = a1[3];
      v22 = 4 * a1[4];
      do
      {
        while (1)
        {
          v23 = *a4;
          if (v23 < *v8)
            break;
          *a5 = (float)v23;
          a4 += v21;
          a5 = (float *)((char *)a5 + v22);
          if (!--v6)
            goto LABEL_23;
        }
        *a5 = *(float *)v7[1];
        a4 += v21;
        a5 = (float *)((char *)a5 + v22);
        --v6;
      }
      while (v6);
    }
    goto LABEL_23;
  }
  v7 = *a3;
  v8 = **a3;
  v9 = a1[6];
  v10 = a1[7];
  if (v6)
  {
    v11 = 0;
    v12 = a1[3];
    v13 = 4 * v10;
    v14 = 4 * a1[4];
    do
    {
      v16 = a5;
      v17 = v6;
      v18 = a4;
      do
      {
        while (1)
        {
          v19 = *v18;
          if (v19 < *v8)
            break;
          *v16 = (float)v19;
          v18 += v12;
          v16 = (float *)((char *)v16 + v14);
          if (!--v17)
            goto LABEL_10;
        }
        *v16 = *(float *)v7[1];
        v18 += v12;
        v16 = (float *)((char *)v16 + v14);
        --v17;
      }
      while (v17);
LABEL_10:
      v20 = *v18;
      if (v20 >= *v8)
        v15 = (float)v20;
      else
        v15 = *(float *)v7[1];
      *v16 = v15;
      a4 += v9;
      a5 = (float *)((char *)a5 + v13);
      ++v11;
    }
    while (v11 != v5);
    goto LABEL_13;
  }
  v24 = 4 * v10;
  do
  {
    while (1)
    {
      v25 = *a4;
      if (v25 >= *v8)
        break;
      *a5 = *(float *)v7[1];
      a4 += v9;
      a5 = (float *)((char *)a5 + v24);
      if (!--v5)
        goto LABEL_23;
    }
    *a5 = (float)v25;
    a4 += v9;
    a5 = (float *)((char *)a5 + v24);
    --v5;
  }
  while (v5);
LABEL_23:
  v26 = *a4;
  if (v26 >= *v8)
  {
    result = (float)v26;
    *a5 = (float)v26;
  }
  else
  {
    v27 = (float *)v7[1];
    result = *v27;
    *a5 = *v27;
  }
  return result;
}

uint64_t sub_2398B4AB0(uint64_t a1, uint64_t a2, unsigned __int8 **a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 **v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f32[0] = sub_2398B4D48(&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398B4CE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float sub_2398B4D48(unsigned __int8 ***a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  float *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  float result;
  uint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  char v29;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v25 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v26 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v24 = 0;
    v27 = v3 - 1;
    v28 = v9 | (v10 << 32);
    v11 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(unsigned __int8 **)(a2 + 24);
    }
    v17 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(float **)(a3 + 24);
    }
    v29 = 0;
    return sub_2398B4EC8(&v24, (uint64_t)&v29, a1, v11, v17);
  }
  return result;
}

float sub_2398B4EC8(_DWORD *a1, uint64_t a2, unsigned __int8 ***a3, unsigned __int8 *a4, float *a5)
{
  int v5;
  int v6;
  unsigned __int8 **v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  float v15;
  float *v16;
  int v17;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  float *v27;
  float result;

  v5 = a1[5];
  v6 = a1[2];
  if (!v5)
  {
    v7 = *a3;
    v8 = **a3;
LABEL_13:
    if (v6)
    {
      v21 = a1[3];
      v22 = 4 * a1[4];
      do
      {
        while (1)
        {
          v23 = *a4;
          if (v23 > *v8)
            break;
          *a5 = (float)v23;
          a4 += v21;
          a5 = (float *)((char *)a5 + v22);
          if (!--v6)
            goto LABEL_23;
        }
        *a5 = *(float *)v7[1];
        a4 += v21;
        a5 = (float *)((char *)a5 + v22);
        --v6;
      }
      while (v6);
    }
    goto LABEL_23;
  }
  v7 = *a3;
  v8 = **a3;
  v9 = a1[6];
  v10 = a1[7];
  if (v6)
  {
    v11 = 0;
    v12 = a1[3];
    v13 = 4 * v10;
    v14 = 4 * a1[4];
    do
    {
      v16 = a5;
      v17 = v6;
      v18 = a4;
      do
      {
        while (1)
        {
          v19 = *v18;
          if (v19 > *v8)
            break;
          *v16 = (float)v19;
          v18 += v12;
          v16 = (float *)((char *)v16 + v14);
          if (!--v17)
            goto LABEL_10;
        }
        *v16 = *(float *)v7[1];
        v18 += v12;
        v16 = (float *)((char *)v16 + v14);
        --v17;
      }
      while (v17);
LABEL_10:
      v20 = *v18;
      if (v20 <= *v8)
        v15 = (float)v20;
      else
        v15 = *(float *)v7[1];
      *v16 = v15;
      a4 += v9;
      a5 = (float *)((char *)a5 + v13);
      ++v11;
    }
    while (v11 != v5);
    goto LABEL_13;
  }
  v24 = 4 * v10;
  do
  {
    while (1)
    {
      v25 = *a4;
      if (v25 <= *v8)
        break;
      *a5 = *(float *)v7[1];
      a4 += v9;
      a5 = (float *)((char *)a5 + v24);
      if (!--v5)
        goto LABEL_23;
    }
    *a5 = (float)v25;
    a4 += v9;
    a5 = (float *)((char *)a5 + v24);
    --v5;
  }
  while (v5);
LABEL_23:
  v26 = *a4;
  if (v26 <= *v8)
  {
    result = (float)v26;
    *a5 = (float)v26;
  }
  else
  {
    v27 = (float *)v7[1];
    result = *v27;
    *a5 = *v27;
  }
  return result;
}

void sub_2398B505C(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398B5080@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398B5144(a1, a2);
}

double sub_2398B508C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398B67A8(a1, a2);
}

double sub_2398B5098@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398B6EE8(a1, a2);
}

double sub_2398B50A4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398B9088(a1, a2);
}

uint64_t sub_2398B5144@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[87];

  sub_2398B5378(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v8);
  v11 = &off_250ADB628;
  sub_239423E50((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398B5250(*(_QWORD *)a1, (uint64_t)&v11, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398B5218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398B5234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398B5250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250ADB3D0;
  sub_23949ED60(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF228[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239709384(a2, (uint64_t)(a4 + 1));
}

void sub_2398B533C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398B5350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398B5364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23941965C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398B5378(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 2;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398B54B8((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_239761728((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398B547C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398B54A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398B54B8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 2);
  *a2 = &off_250AE4178;
  sub_2398AE894((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398B55D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398B55F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398B5608(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5)
{
  return sub_2398B5650(**a1, (*a1)[1], a2, a3, a4, a5);
}

uint64_t sub_2398B5618(uint64_t **a1, uint64_t a2)
{
  return sub_2398B612C(**a1, (*a1)[1], a2);
}

uint64_t sub_2398B5628(uint64_t **a1)
{
  char v2;

  return sub_2398B5778(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_2398B5650(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6)
{
  double v6;
  int v7;
  double v8;
  unsigned int v9;
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  unsigned int v14;
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];
  double v19;
  double v20;
  double v21;
  double v22;

  if (!*(_BYTE *)(a3 + 16))
  {
    v9 = -65536;
    v10 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    v13 = 255;
    v14 = HIWORD(v9);
    if (v10 != (unsigned __int16)v9)
      goto LABEL_17;
    goto LABEL_15;
  }
  v6 = *(double *)a3;
  a6 = 0.0;
  if (*(double *)a3 < 0.0)
    v6 = 0.0;
  v7 = (int)v6;
  v8 = 65535.0;
  if (*(double *)(a3 + 8) <= 65535.0)
    v8 = *(double *)(a3 + 8);
  v9 = v7 | ((int)v8 << 16);
  v10 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v11 = *(double *)(a3 + 24);
  a6 = 0.0;
  if (v11 < 0.0)
    v11 = 0.0;
  v10 = (int)v11;
  v12 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v12 = *(double *)(a3 + 32);
  v13 = (int)v12;
  v14 = HIWORD(v9);
  if (v10 != (unsigned __int16)v9)
    goto LABEL_17;
LABEL_15:
  if (v14 == v13)
    return sub_2398B5778(a1, a2, (uint64_t)v18);
LABEL_17:
  v22 = (double)(unsigned __int16)v9;
  v20 = (double)v10;
  v21 = 1.0 / ((double)v14 - v22);
  a4.n128_f64[0] = (double)v13 - (double)v10;
  v19 = a4.n128_f64[0];
  v18[0] = &v22;
  v18[1] = &v21;
  v17[0] = &v20;
  v17[1] = &v19;
  v16[0] = v18;
  v16[1] = v17;
  return sub_2398B5BFC(a1, a2, (uint64_t)v16, a4, (double)v10, a6);
}

uint64_t sub_2398B5778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398B5A10((uint64_t)&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398B59AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398B5A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  _BYTE *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  int i;
  _BYTE *v30;
  int v31;
  _BYTE *v32;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = v3 - 1;
    v10 = *(unsigned int *)(a2 + 40);
    v9 = *(unsigned int *)(a2 + 44);
    v11 = *(unsigned int *)(a3 + 40);
    v12 = *(unsigned int *)(a3 + 44);
    v13 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v14 = v13 == 0;
    else
      v14 = 1;
    if (!v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v13 = *(_BYTE **)(a2 + 24);
    }
    v21 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v21)
    {
      v22 = *(_QWORD *)(a3 + 8);
      v23 = *(std::__shared_weak_count **)(a3 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_BYTE **)(a3 + 24);
    }
    v27 = v4 - 1;
    v28 = 2 * v10;
    if (v8)
    {
      if (v4 == 1)
      {
        do
        {
          *v21 = *v13;
          v21 += v12;
          v13 += 2 * v9;
          --v8;
        }
        while (v8);
      }
      else
      {
        for (i = 0; i != v8; ++i)
        {
          v30 = v13;
          v31 = v4 - 1;
          v32 = v21;
          do
          {
            *v32 = *v30;
            v32 += v11;
            v30 += v28;
            --v31;
          }
          while (v31);
          *v32 = *v30;
          v13 += 2 * v9;
          v21 += v12;
        }
      }
    }
    if (v4 != 1)
    {
      do
      {
        *v21 = *v13;
        v21 += v11;
        v13 += v28;
        --v27;
      }
      while (v27);
    }
    *v21 = *v13;
  }
  return result;
}

uint64_t sub_2398B5BFC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6)
{
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v9 = *(_QWORD *)(a1 + 8);
  if (!v9)
    goto LABEL_17;
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v9 = *(_QWORD *)(a1 + 8);
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_42;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v30 = 0;
    v18 = *(_QWORD *)(a2 + 8);
    if (!v18)
      goto LABEL_33;
LABEL_18:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(a2 + 8);
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v29, v18, 1);
    v31 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(&v30, v9, 0);
  v18 = *(_QWORD *)(a2 + 8);
  if (v18)
    goto LABEL_18;
LABEL_33:
  v29 = 0;
  v31 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f64[0] = sub_2398B5E94((uint64_t)&v31, a1, a2, a4.n128_f64[0], a5, a6);
LABEL_36:
  v27 = v29;
  v29 = 0;
  if (v27)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v27 + 8))(v27, a4);
  result = v30;
  v30 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398B5E30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

double sub_2398B5E94(uint64_t a1, uint64_t a2, uint64_t a3, double result, double a5, double a6)
{
  int v6;
  int v7;
  BOOL v8;
  uint64_t v12;
  uint64_t v13;
  _WORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unsigned int i;
  uint64_t v27;
  int v28;
  unint64_t v29;
  unsigned int v30;
  uint64_t v31;
  char v32;

  v7 = *(_DWORD *)(a2 + 32);
  v6 = *(_DWORD *)(a2 + 36);
  if (v7)
    v8 = v6 == 0;
  else
    v8 = 1;
  if (!v8)
  {
    v28 = v7 - 1;
    v12 = *(unsigned int *)(a2 + 44);
    v13 = *(unsigned int *)(a3 + 44);
    v29 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v27 = 0;
    v30 = v6 - 1;
    v31 = v12 | (v13 << 32);
    v14 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(_WORD **)(a2 + 24);
    }
    v20 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_BYTE **)(a3 + 24);
    }
    v32 = 0;
    if (v30)
    {
      for (i = 0; i < v30; ++i)
      {
        result = sub_2398B6058(&v27, result, a5, a6, (uint64_t)&v32, a1, v14, v20);
        v14 += v31;
        v20 += HIDWORD(v31);
      }
    }
    return sub_2398B6058(&v27, result, a5, a6, (uint64_t)&v32, a1, v14, v20);
  }
  return result;
}

double sub_2398B6058(_DWORD *a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, _WORD *a7, _BYTE *a8)
{
  unsigned int v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double result;

  if (a1[2])
  {
    v8 = 0;
    a2 = 0.0;
    do
    {
      LOWORD(a4) = *a7;
      v9 = ((double)*(unint64_t *)&a4 - ****(double ****)a6) * **(double **)(**(_QWORD **)a6 + 8);
      v10 = fmax(v9, 0.0);
      if (v9 <= 1.0)
        v11 = v10;
      else
        v11 = 1.0;
      a4 = ***(double ***)(*(_QWORD *)a6 + 8) + v11 * **(double **)(*(_QWORD *)(*(_QWORD *)a6 + 8) + 8);
      *a8 = llround(a4);
      a7 += a1[3];
      a8 += a1[4];
      ++v8;
    }
    while (v8 < a1[2]);
  }
  LOWORD(a2) = *a7;
  v12 = ((double)*(unint64_t *)&a2 - ****(double ****)a6) * **(double **)(**(_QWORD **)a6 + 8);
  v13 = fmax(v12, 0.0);
  if (v12 <= 1.0)
    v14 = v13;
  else
    v14 = 1.0;
  result = ***(double ***)(*(_QWORD *)a6 + 8) + v14 * **(double **)(*(_QWORD *)(*(_QWORD *)a6 + 8) + 8);
  *a8 = llround(result);
  return result;
}

uint64_t sub_2398B612C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  unsigned __int16 *v8[4];
  int v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    HIWORD(v9) = v5;
    LOWORD(v9) = (int)v6;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 255;
  }
  v8[0] = (unsigned __int16 *)&v9 + 1;
  v8[1] = (unsigned __int16 *)&v11;
  v8[2] = (unsigned __int16 *)&v9;
  v8[3] = (unsigned __int16 *)&v10;
  return sub_2398B61DC(a1, a2, v8);
}

uint64_t sub_2398B61DC(uint64_t a1, uint64_t a2, unsigned __int16 **a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 **v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398B6474(&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398B6410(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

unsigned __int16 ***sub_2398B6474(unsigned __int16 ***result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  unsigned __int16 ***v8;
  uint64_t v9;
  uint64_t v10;
  _WORD *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  char v28;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v24 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v25 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v23 = 0;
    v26 = v3 - 1;
    v27 = v9 | (v10 << 32);
    v11 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(_WORD **)(a2 + 24);
    }
    v17 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(_BYTE **)(a3 + 24);
    }
    v28 = 0;
    return (unsigned __int16 ***)sub_2398B65F4(&v23, (uint64_t)&v28, v8, v11, v17);
  }
  return result;
}

_DWORD *sub_2398B65F4(_DWORD *result, uint64_t a2, unsigned __int16 ***a3, _WORD *a4, _BYTE *a5)
{
  unsigned int i;
  _WORD *v6;
  _BYTE *v7;
  unsigned int v8;
  char *v9;
  char v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int j;
  char *v15;
  char v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;

  if (result[5])
  {
    for (i = 0; i < result[5]; ++i)
    {
      v7 = a5;
      v6 = a4;
      if (result[2])
      {
        v8 = 0;
        v6 = a4;
        v7 = a5;
        do
        {
          v11 = (uint64_t)*a3;
          v12 = (unsigned __int16)*v6;
          if (v12 < ***a3)
          {
            v9 = *(char **)(v11 + 8);
          }
          else
          {
            if (v12 <= **(unsigned __int16 **)(v11 + 16))
            {
              v10 = *v6;
              goto LABEL_10;
            }
            v9 = *(char **)(v11 + 24);
          }
          v10 = *v9;
LABEL_10:
          *v7 = v10;
          v6 += result[3];
          v7 += result[4];
          ++v8;
        }
        while (v8 < result[2]);
      }
      v13 = (uint64_t)*a3;
      LODWORD(v6) = (unsigned __int16)*v6;
      if (v6 < ***a3)
      {
        v6 = *(_WORD **)(v13 + 8);
      }
      else
      {
        if (v6 <= **(unsigned __int16 **)(v13 + 16))
          goto LABEL_5;
        v6 = *(_WORD **)(v13 + 24);
      }
      LOBYTE(v6) = *(_BYTE *)v6;
LABEL_5:
      *v7 = (_BYTE)v6;
      a4 += result[6];
      a5 += result[7];
    }
  }
  if (result[2])
  {
    for (j = 0; j < result[2]; ++j)
    {
      v17 = (uint64_t)*a3;
      v18 = (unsigned __int16)*a4;
      if (v18 < ***a3)
      {
        v15 = *(char **)(v17 + 8);
      }
      else
      {
        if (v18 <= **(unsigned __int16 **)(v17 + 16))
        {
          v16 = *a4;
          goto LABEL_23;
        }
        v15 = *(char **)(v17 + 24);
      }
      v16 = *v15;
LABEL_23:
      *a5 = v16;
      a4 += result[3];
      a5 += result[4];
    }
  }
  v19 = (uint64_t)*a3;
  v20 = (unsigned __int16)*a4;
  if (v20 >= ***a3)
  {
    if (v20 <= **(unsigned __int16 **)(v19 + 16))
      *a5 = v20;
    else
      *a5 = **(_BYTE **)(v19 + 24);
  }
  else
  {
    *a5 = **(_BYTE **)(v19 + 8);
  }
  return result;
}

double sub_2398B67A8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[87];

  sub_2398B5378(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v9);
  v12 = &off_250AE4178;
  sub_2398AE894((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398B68EC(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_239761728((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398B6890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398B68B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398B68D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398B68EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 49))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 49))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_2395795F0(a2, &v15);
  sub_2398B6A90(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398B6A2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2398B6A90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 32);
  v5 = *(_DWORD *)(a1 + 44);
  if (v5 == *(_DWORD *)(a2 + 76) && v5 == v4)
  {
    v8 = *(unsigned int *)(a1 + 36) * (unint64_t)v4;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 80) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v16 = *(unsigned int *)(a1 + 32);
    return (void *)sub_2398B6BE8(a1, a2, &v16);
  }
  return result;
}

uint64_t sub_2398B6BE8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 49))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_2395795F0(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36))
    sub_2398B6DAC(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398B6D48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2398B6DAC(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  _OWORD v23[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v19 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 76);
    v20 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 72) << 32);
    v18 = 0;
    v21 = v3 - 1;
    v22 = v9 | (v10 << 32);
    v11 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(char **)(a2 + 24);
    }
    v17 = *(char **)(a3 + 32);
    if (*(_BYTE *)(a3 + 80))
    {
      if (v17)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a3 + 8) + 88))(*(_QWORD *)(a3 + 8), 1, "unknown location");
        v17 = *(char **)(a3 + 32);
      }
    }
    memset(v23, 0, sizeof(v23));
    return (uint64_t *)sub_239745784(&v18, (uint64_t)v23, v8, v11, v17);
  }
  return result;
}

double sub_2398B6EE8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[87];

  sub_2398B5378(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v9);
  v12 = &off_250AE5E18;
  sub_2398B08FC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398B6FF4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398B6FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398B6FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398B6FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1970;
  sub_2397622C4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF240[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239762530(a2, (uint64_t)(a4 + 1));
}

void sub_2398B70E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398B70F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398B7108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239643AF4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398B711C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398B722C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398B712C(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2398B7E38((uint64_t)v13, 2080373759, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = -65504.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 65504.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  else
    _Q0.n128_f64[0] = 65504.0;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2398B7E38((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_2398B7204(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398B737C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398B722C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  unsigned int v15;
  unsigned int v18;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    _Q0.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)_Q0.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  v15 = (unsigned __int16)v6;
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm { FCVT            S3, H0 }
  v18 = HIWORD(v6);
  __asm { FCVT            S3, H1 }
  _ZF = _ZF && _S3 == (float)v18;
  if (_ZF)
    return sub_2398B737C(a1, a2, (uint64_t)v25, _Q0);
  v29 = (double)v15;
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_2398B7834(a1, a2, (uint64_t)v23, _Q0, _D1, 1.0 / ((double)v18 - (double)v15));
}

uint64_t sub_2398B737C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_u64[0] = sub_2398B7614(a4.n128_f32[0], (uint64_t)&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398B75B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

__int16 sub_2398B7614@<H0>(float _S0@<S0>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>)
{
  int v4;
  int v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _WORD *v14;
  BOOL v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  _WORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int i;
  _WORD *v31;
  _WORD *v32;
  int v33;
  __int16 result;

  v5 = *(_DWORD *)(a3 + 32);
  v4 = *(_DWORD *)(a3 + 36);
  if (v5)
    _ZF = v4 == 0;
  else
    _ZF = 1;
  if (!_ZF)
  {
    v9 = v4 - 1;
    v11 = *(unsigned int *)(a3 + 40);
    v10 = *(unsigned int *)(a3 + 44);
    v13 = *(unsigned int *)(a4 + 40);
    v12 = *(unsigned int *)(a4 + 44);
    v14 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48))
      v15 = v14 == 0;
    else
      v15 = 1;
    if (!v15)
    {
      v16 = *(_QWORD *)(a3 + 8);
      v17 = *(std::__shared_weak_count **)(a3 + 16);
      if (v17)
      {
        p_shared_owners = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(p_shared_owners);
        while (__stxr(v19 + 1, p_shared_owners));
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v16 + 88))(v16, 0, "unknown location");
      v14 = *(_WORD **)(a3 + 24);
    }
    v21 = *(_WORD **)(a4 + 24);
    if (*(_BYTE *)(a4 + 48) && v21)
    {
      v22 = *(_QWORD *)(a4 + 8);
      v23 = *(std::__shared_weak_count **)(a4 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_WORD **)(a4 + 24);
    }
    v27 = v5 - 1;
    v28 = 2 * v11;
    v29 = 2 * v13;
    if (v9)
    {
      if (v5 == 1)
      {
        do
        {
          LOWORD(_S0) = *v14;
          _S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v21 = LOWORD(_S0);
          v14 += v10;
          v21 += v12;
          --v9;
        }
        while (v9);
      }
      else
      {
        for (i = 0; i != v9; ++i)
        {
          v31 = v21;
          v32 = v14;
          v33 = v5 - 1;
          do
          {
            LOWORD(_S0) = *v32;
            _S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *v31 = LOWORD(_S0);
            v32 = (_WORD *)((char *)v32 + v28);
            v31 = (_WORD *)((char *)v31 + v29);
            --v33;
          }
          while (v33);
          LOWORD(_S0) = *v32;
          _S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v31 = LOWORD(_S0);
          v14 += v10;
          v21 += v12;
        }
      }
    }
    if (v5 != 1)
    {
      do
      {
        LOWORD(_S0) = *v14;
        _S0 = (float)LODWORD(_S0);
        __asm { FCVT            H0, S0 }
        *v21 = LOWORD(_S0);
        v14 = (_WORD *)((char *)v14 + v28);
        v21 = (_WORD *)((char *)v21 + v29);
        --v27;
      }
      while (v27);
    }
    LOWORD(_S0) = *v14;
    _S0 = (float)LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    *v21 = result;
  }
  return result;
}

uint64_t sub_2398B7834(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6)
{
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v9 = *(_QWORD *)(a1 + 8);
  if (!v9)
    goto LABEL_17;
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v9 = *(_QWORD *)(a1 + 8);
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_42;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v30 = 0;
    v18 = *(_QWORD *)(a2 + 8);
    if (!v18)
      goto LABEL_33;
LABEL_18:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(a2 + 8);
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v29, v18, 1);
    v31 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(&v30, v9, 0);
  v18 = *(_QWORD *)(a2 + 8);
  if (v18)
    goto LABEL_18;
LABEL_33:
  v29 = 0;
  v31 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f64[0] = sub_2398B7ACC((uint64_t)&v31, a1, a2, a4.n128_f64[0], a5, a6);
LABEL_36:
  v27 = v29;
  v29 = 0;
  if (v27)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v27 + 8))(v27, a4);
  result = v30;
  v30 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398B7A68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

double sub_2398B7ACC(uint64_t a1, uint64_t a2, uint64_t a3, double result, double a5, double a6)
{
  int v6;
  int v7;
  BOOL v8;
  uint64_t v12;
  uint64_t v13;
  _WORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  char v31;

  v7 = *(_DWORD *)(a2 + 32);
  v6 = *(_DWORD *)(a2 + 36);
  if (v7)
    v8 = v6 == 0;
  else
    v8 = 1;
  if (!v8)
  {
    v27 = v7 - 1;
    v12 = *(unsigned int *)(a2 + 44);
    v13 = *(unsigned int *)(a3 + 44);
    v28 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v26 = 0;
    v29 = v6 - 1;
    v30 = v12 | (v13 << 32);
    v14 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(_WORD **)(a2 + 24);
    }
    v20 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_WORD **)(a3 + 24);
    }
    v31 = 0;
    *(_QWORD *)&result = sub_2398B7C4C(&v26, result, a5, a6, (uint64_t)&v31, a1, v14, v20);
  }
  return result;
}

__int16 sub_2398B7C4C@<H0>(_DWORD *a1@<X0>, double a2@<D0>, double a3@<D1>, double _D2@<D2>, uint64_t a5@<X1>, uint64_t a6@<X2>, _WORD *a7@<X3>, _WORD *a8@<X4>)
{
  unsigned int v8;
  double v9;
  double v10;
  double v11;
  _WORD *v16;
  _WORD *v17;
  unsigned int v18;
  double v19;
  double v20;
  double v21;
  unsigned int v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  __int16 result;

  if (a1[5])
  {
    v8 = 0;
    a2 = 0.0;
    do
    {
      v16 = a8;
      v17 = a7;
      if (a1[2])
      {
        v18 = 0;
        v17 = a7;
        v16 = a8;
        do
        {
          LOWORD(_D2) = *v17;
          v19 = ((double)*(unint64_t *)&_D2 - ****(double ****)a6) * **(double **)(**(_QWORD **)a6 + 8);
          v20 = fmax(v19, 0.0);
          if (v19 <= 1.0)
            v21 = v20;
          else
            v21 = 1.0;
          _D2 = ***(double ***)(*(_QWORD *)a6 + 8) + v21 * **(double **)(*(_QWORD *)(*(_QWORD *)a6 + 8) + 8);
          *(float *)&_D2 = _D2;
          __asm { FCVT            H2, S2 }
          *v16 = LOWORD(_D2);
          v17 += a1[3];
          v16 += a1[4];
          ++v18;
        }
        while (v18 < a1[2]);
      }
      LOWORD(_D2) = *v17;
      v9 = ((double)*(unint64_t *)&_D2 - ****(double ****)a6) * **(double **)(**(_QWORD **)a6 + 8);
      v10 = fmax(v9, 0.0);
      if (v9 <= 1.0)
        v11 = v10;
      else
        v11 = 1.0;
      _D2 = ***(double ***)(*(_QWORD *)a6 + 8) + v11 * **(double **)(*(_QWORD *)(*(_QWORD *)a6 + 8) + 8);
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *v16 = LOWORD(_D2);
      a7 += a1[6];
      a8 += a1[7];
      ++v8;
    }
    while (v8 < a1[5]);
  }
  if (a1[2])
  {
    v22 = 0;
    a2 = 0.0;
    do
    {
      LOWORD(_D2) = *a7;
      v23 = ((double)*(unint64_t *)&_D2 - ****(double ****)a6) * **(double **)(**(_QWORD **)a6 + 8);
      v24 = fmax(v23, 0.0);
      if (v23 <= 1.0)
        v25 = v24;
      else
        v25 = 1.0;
      _D2 = ***(double ***)(*(_QWORD *)a6 + 8) + v25 * **(double **)(*(_QWORD *)(*(_QWORD *)a6 + 8) + 8);
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *a8 = LOWORD(_D2);
      a7 += a1[3];
      a8 += a1[4];
      ++v22;
    }
    while (v22 < a1[2]);
  }
  LOWORD(a2) = *a7;
  v26 = ((double)*(unint64_t *)&a2 - ****(double ****)a6) * **(double **)(**(_QWORD **)a6 + 8);
  v27 = fmax(v26, 0.0);
  if (v26 <= 1.0)
    v28 = v27;
  else
    v28 = 1.0;
  _S0 = ***(double ***)(*(_QWORD *)a6 + 8) + v28 * **(double **)(*(_QWORD *)(*(_QWORD *)a6 + 8) + 8);
  __asm { FCVT            H0, S0 }
  *a8 = result;
  return result;
}

uint64_t sub_2398B7E38(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 *v21;
  __int16 *v22;
  __int16 *v23;
  __int16 *v24;
  __int16 v25;
  __int16 v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 65535.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      v27 = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = (unsigned __int16 *)&v27;
      v22 = &v28;
      return sub_2398B8530(v16, v17, (uint64_t)&v21);
    }
    else if (_Q0.n128_f32[0] <= 65535.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      v27 = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = (unsigned __int16 *)&v27;
      v22 = &v28;
      return sub_2398B8ADC(v19, v20, (uint64_t)&v21);
    }
    else
    {
      return sub_2398B737C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = (unsigned __int16 *)&v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_2398B7F54(v12, v13, &v21, _Q0);
  }
}

uint64_t sub_2398B7F54(uint64_t a1, uint64_t a2, unsigned __int16 **a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 **v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f64[0] = sub_2398B81EC(&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398B8188(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

double sub_2398B81EC(unsigned __int16 ***a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  __int16 *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  double result;
  uint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  char v29;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v25 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v26 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v24 = 0;
    v27 = v3 - 1;
    v28 = v9 | (v10 << 32);
    v11 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(unsigned __int16 **)(a2 + 24);
    }
    v17 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(__int16 **)(a3 + 24);
    }
    v29 = 0;
    *(_QWORD *)&result = sub_2398B836C(&v24, (uint64_t)&v29, a1, v11, v17);
  }
  return result;
}

__int16 sub_2398B836C@<H0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, unsigned __int16 ***a3@<X2>, unsigned __int16 *a4@<X3>, __int16 *a5@<X4>)
{
  unsigned int i;
  __int16 *v6;
  __int16 *v8;
  unsigned __int16 *v9;
  unsigned int v10;
  __int16 *v11;
  uint64_t v13;
  unsigned int v14;
  uint64_t v20;
  unsigned int v21;
  unsigned int j;
  __int16 *v24;
  uint64_t v26;
  unsigned int v27;
  uint64_t v29;
  unsigned int v30;
  __int16 *v31;
  __int16 result;
  __int16 *v33;

  if (a1[5])
  {
    for (i = 0; i < a1[5]; ++i)
    {
      v8 = a5;
      v9 = a4;
      if (a1[2])
      {
        v10 = 0;
        v9 = a4;
        v8 = a5;
        do
        {
          v13 = (uint64_t)*a3;
          v14 = *v9;
          if (v14 < ***a3)
          {
            v11 = *(__int16 **)(v13 + 8);
          }
          else
          {
            if (v14 <= **(unsigned __int16 **)(v13 + 16))
            {
              _S0 = (float)v14;
              __asm { FCVT            H0, S0 }
              goto LABEL_10;
            }
            v11 = *(__int16 **)(v13 + 24);
          }
          _H0 = *v11;
LABEL_10:
          *v8 = _H0;
          v9 += a1[3];
          v8 += a1[4];
          ++v10;
        }
        while (v10 < a1[2]);
      }
      v20 = (uint64_t)*a3;
      v21 = *v9;
      if (v21 < ***a3)
      {
        v6 = *(__int16 **)(v20 + 8);
      }
      else
      {
        if (v21 <= **(unsigned __int16 **)(v20 + 16))
        {
          _S0 = (float)v21;
          __asm { FCVT            H0, S0 }
          goto LABEL_5;
        }
        v6 = *(__int16 **)(v20 + 24);
      }
      _H0 = *v6;
LABEL_5:
      *v8 = _H0;
      a4 += a1[6];
      a5 += a1[7];
    }
  }
  if (a1[2])
  {
    for (j = 0; j < a1[2]; ++j)
    {
      v26 = (uint64_t)*a3;
      v27 = *a4;
      if (v27 < ***a3)
      {
        v24 = *(__int16 **)(v26 + 8);
      }
      else
      {
        if (v27 <= **(unsigned __int16 **)(v26 + 16))
        {
          _S0 = (float)v27;
          __asm { FCVT            H0, S0 }
          goto LABEL_23;
        }
        v24 = *(__int16 **)(v26 + 24);
      }
      _H0 = *v24;
LABEL_23:
      *a5 = _H0;
      a4 += a1[3];
      a5 += a1[4];
    }
  }
  v29 = (uint64_t)*a3;
  v30 = *a4;
  if (v30 >= ***a3)
  {
    if (v30 <= **(unsigned __int16 **)(v29 + 16))
    {
      _S0 = (float)v30;
      __asm { FCVT            H0, S0 }
      *a5 = result;
    }
    else
    {
      v33 = *(__int16 **)(v29 + 24);
      result = *v33;
      *a5 = *v33;
    }
  }
  else
  {
    v31 = *(__int16 **)(v29 + 8);
    result = *v31;
    *a5 = *v31;
  }
  return result;
}

uint64_t sub_2398B8530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398B87C8((uint64_t)&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398B8764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398B87C8(uint64_t result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  unsigned __int16 ***v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int i;
  _WORD *v35;
  unsigned __int16 *v36;
  int v37;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v46;
  unsigned int v47;
  uint64_t v50;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    _ZF = v3 == 0;
  else
    _ZF = 1;
  if (!_ZF)
  {
    v8 = (unsigned __int16 ***)result;
    v9 = v3 - 1;
    v11 = *(unsigned int *)(a2 + 40);
    v10 = *(unsigned int *)(a2 + 44);
    v12 = *(unsigned int *)(a3 + 40);
    v50 = *(unsigned int *)(a3 + 44);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v14 = v13 == 0;
    else
      v14 = 1;
    if (!v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v20 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_WORD **)(a3 + 24);
    }
    v26 = v4 - 1;
    v27 = 2 * v11;
    v28 = 2 * v12;
    if (v9)
    {
      if (v4 == 1)
      {
        v41 = 2 * v10;
        v42 = 2 * v50;
        do
        {
          while (1)
          {
            v43 = *v13;
            if (v43 >= ***v8)
              break;
            *v20 = *(*v8)[1];
            v13 = (unsigned __int16 *)((char *)v13 + v41);
            v20 = (_WORD *)((char *)v20 + v42);
            if (!--v9)
              goto LABEL_40;
          }
          _S0 = (float)v43;
          __asm { FCVT            H0, S0 }
          *v20 = LOWORD(_S0);
          v13 = (unsigned __int16 *)((char *)v13 + v41);
          v20 = (_WORD *)((char *)v20 + v42);
          --v9;
        }
        while (v9);
      }
      else
      {
        for (i = 0; i != v9; ++i)
        {
          v35 = v20;
          v36 = v13;
          v37 = v4 - 1;
          do
          {
            while (1)
            {
              v39 = *v36;
              if (v39 < ***v8)
                break;
              _S0 = (float)v39;
              __asm { FCVT            H0, S0 }
              *v35 = LOWORD(_S0);
              v36 = (unsigned __int16 *)((char *)v36 + v27);
              v35 = (_WORD *)((char *)v35 + v28);
              if (!--v37)
                goto LABEL_34;
            }
            *v35 = *(*v8)[1];
            v36 = (unsigned __int16 *)((char *)v36 + v27);
            v35 = (_WORD *)((char *)v35 + v28);
            --v37;
          }
          while (v37);
LABEL_34:
          v40 = *v36;
          result = ***v8;
          if (v40 >= result)
          {
            _S0 = (float)v40;
            __asm { FCVT            H0, S0 }
          }
          else
          {
            _H0 = *(*v8)[1];
          }
          *v35 = _H0;
          v13 += v10;
          v20 += v50;
        }
      }
    }
LABEL_40:
    if (v4 != 1)
    {
      do
      {
        while (1)
        {
          v46 = *v13;
          if (v46 < ***v8)
            break;
          _S0 = (float)v46;
          __asm { FCVT            H0, S0 }
          *v20 = LOWORD(_S0);
          v13 = (unsigned __int16 *)((char *)v13 + v27);
          v20 = (_WORD *)((char *)v20 + v28);
          if (!--v26)
            goto LABEL_45;
        }
        *v20 = *(*v8)[1];
        v13 = (unsigned __int16 *)((char *)v13 + v27);
        v20 = (_WORD *)((char *)v20 + v28);
        --v26;
      }
      while (v26);
    }
LABEL_45:
    v47 = *v13;
    if (v47 >= ***v8)
    {
      _S0 = (float)v47;
      __asm { FCVT            H0, S0 }
    }
    else
    {
      _H0 = *(*v8)[1];
    }
    *v20 = _H0;
  }
  return result;
}

uint64_t sub_2398B8ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398B8D74((uint64_t)&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398B8D10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398B8D74(uint64_t result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  unsigned __int16 ***v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int i;
  _WORD *v35;
  unsigned __int16 *v36;
  int v37;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v46;
  unsigned int v47;
  uint64_t v50;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    _ZF = v3 == 0;
  else
    _ZF = 1;
  if (!_ZF)
  {
    v8 = (unsigned __int16 ***)result;
    v9 = v3 - 1;
    v11 = *(unsigned int *)(a2 + 40);
    v10 = *(unsigned int *)(a2 + 44);
    v12 = *(unsigned int *)(a3 + 40);
    v50 = *(unsigned int *)(a3 + 44);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v14 = v13 == 0;
    else
      v14 = 1;
    if (!v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v20 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_WORD **)(a3 + 24);
    }
    v26 = v4 - 1;
    v27 = 2 * v11;
    v28 = 2 * v12;
    if (v9)
    {
      if (v4 == 1)
      {
        v41 = 2 * v10;
        v42 = 2 * v50;
        do
        {
          while (1)
          {
            v43 = *v13;
            if (v43 <= ***v8)
              break;
            *v20 = *(*v8)[1];
            v13 = (unsigned __int16 *)((char *)v13 + v41);
            v20 = (_WORD *)((char *)v20 + v42);
            if (!--v9)
              goto LABEL_40;
          }
          _S0 = (float)v43;
          __asm { FCVT            H0, S0 }
          *v20 = LOWORD(_S0);
          v13 = (unsigned __int16 *)((char *)v13 + v41);
          v20 = (_WORD *)((char *)v20 + v42);
          --v9;
        }
        while (v9);
      }
      else
      {
        for (i = 0; i != v9; ++i)
        {
          v35 = v20;
          v36 = v13;
          v37 = v4 - 1;
          do
          {
            while (1)
            {
              v39 = *v36;
              if (v39 > ***v8)
                break;
              _S0 = (float)v39;
              __asm { FCVT            H0, S0 }
              *v35 = LOWORD(_S0);
              v36 = (unsigned __int16 *)((char *)v36 + v27);
              v35 = (_WORD *)((char *)v35 + v28);
              if (!--v37)
                goto LABEL_34;
            }
            *v35 = *(*v8)[1];
            v36 = (unsigned __int16 *)((char *)v36 + v27);
            v35 = (_WORD *)((char *)v35 + v28);
            --v37;
          }
          while (v37);
LABEL_34:
          v40 = *v36;
          result = ***v8;
          if (v40 <= result)
          {
            _S0 = (float)v40;
            __asm { FCVT            H0, S0 }
          }
          else
          {
            _H0 = *(*v8)[1];
          }
          *v35 = _H0;
          v13 += v10;
          v20 += v50;
        }
      }
    }
LABEL_40:
    if (v4 != 1)
    {
      do
      {
        while (1)
        {
          v46 = *v13;
          if (v46 > ***v8)
            break;
          _S0 = (float)v46;
          __asm { FCVT            H0, S0 }
          *v20 = LOWORD(_S0);
          v13 = (unsigned __int16 *)((char *)v13 + v27);
          v20 = (_WORD *)((char *)v20 + v28);
          if (!--v26)
            goto LABEL_45;
        }
        *v20 = *(*v8)[1];
        v13 = (unsigned __int16 *)((char *)v13 + v27);
        v20 = (_WORD *)((char *)v20 + v28);
        --v26;
      }
      while (v26);
    }
LABEL_45:
    v47 = *v13;
    if (v47 <= ***v8)
    {
      _S0 = (float)v47;
      __asm { FCVT            H0, S0 }
    }
    else
    {
      _H0 = *(*v8)[1];
    }
    *v20 = _H0;
  }
  return result;
}

double sub_2398B9088@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[87];

  sub_2398B5378(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v9);
  v12 = &off_250ADD920;
  sub_239541EE0((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398B9194(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398B915C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398B9178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398B9194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1F40;
  sub_239762604(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF258[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397096A8(a2, (uint64_t)(a4 + 1));
}

void sub_2398B9280(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398B9294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398B92A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239644044((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398B92BC(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_2398B93BC(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_2398B92CC(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  double v5;
  float v6;
  _QWORD v8[5];
  _QWORD v9[2];
  _QWORD v10[2];
  _QWORD v11[2];

  v3 = (*a1)[1];
  v11[0] = **a1;
  v11[1] = v3;
  v10[0] = v11[0];
  v10[1] = v3;
  v9[0] = v11[0];
  v9[1] = v3;
  v8[0] = v11;
  v8[1] = v10;
  v8[2] = v9;
  v8[3] = v11[0];
  v8[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = -3.40282347e38;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 3.40282347e38;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 <= 3.40282347e38)
      v5 = v4;
    else
      v5 = 3.40282347e38;
    v6 = v5;
    return sub_2398B9F8C((uint64_t)v8, a3, v6);
  }
  else
  {
    a3.n128_u32[0] = -8388609;
    return sub_2398B9F8C((uint64_t)v8, a3, 3.4028e38);
  }
}

uint64_t sub_2398B9394(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398B94E8(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398B93BC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  double v10;
  int v11;
  unsigned int v12;
  double v13;
  float v14;
  unsigned int v15;
  double v17;
  double **v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  unint64_t v22;
  double v23;
  uint64_t v24;
  double v25;

  if (*(_BYTE *)(a3 + 16))
  {
    v10 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v10 = 0.0;
    v11 = (int)v10;
    a4.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v12 = v11 | ((int)a4.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1.0;
    a4.n128_u32[0] = 0;
    goto LABEL_14;
  }
  v12 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  a4.n128_u64[0] = 0xC7EFFFFFE0000000;
  if (*(double *)(a3 + 24) >= -3.40282347e38)
    a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
  a4.n128_f32[0] = a4.n128_f64[0];
  v13 = 3.40282347e38;
  if (*(double *)(a3 + 32) <= 3.40282347e38)
    v13 = *(double *)(a3 + 32);
  v14 = v13;
LABEL_14:
  v15 = HIWORD(v12);
  if (a4.n128_f32[0] == (float)(unsigned __int16)v12 && v14 == (float)v15)
    return sub_2398B94E8(a1, a2, (uint64_t)v21, a4);
  v25 = (double)(unsigned __int16)v12;
  v23 = a4.n128_f32[0];
  v17 = v14;
  a4.n128_f64[0] = v17 - a4.n128_f32[0];
  v22 = a4.n128_u64[0];
  v21[0] = &v25;
  v21[1] = &v24;
  v20[0] = &v23;
  v20[1] = &v22;
  v19[0] = (double **)v21;
  v19[1] = (double **)v20;
  return sub_2398B9994(a1, a2, v19, a4, v17, 1.0 / ((double)v15 - v25), 1.0, a8, a9, a10);
}

uint64_t sub_2398B94E8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f32[0] = sub_2398B9780(a4.n128_f32[0], (uint64_t)&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398B971C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float sub_2398B9780(float result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  BOOL v6;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _WORD *v14;
  BOOL v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  float *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  int i;
  float *v29;
  _WORD *v30;
  int v31;

  v5 = *(_DWORD *)(a3 + 32);
  v4 = *(_DWORD *)(a3 + 36);
  if (v5)
    v6 = v4 == 0;
  else
    v6 = 1;
  if (!v6)
  {
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a3 + 40);
    v11 = *(unsigned int *)(a3 + 44);
    v12 = *(unsigned int *)(a4 + 40);
    v13 = *(unsigned int *)(a4 + 44);
    v14 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48))
      v15 = v14 == 0;
    else
      v15 = 1;
    if (!v15)
    {
      v16 = *(_QWORD *)(a3 + 8);
      v17 = *(std::__shared_weak_count **)(a3 + 16);
      if (v17)
      {
        p_shared_owners = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(p_shared_owners);
        while (__stxr(v19 + 1, p_shared_owners));
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v16 + 88))(v16, 0, "unknown location");
      v14 = *(_WORD **)(a3 + 24);
    }
    v21 = *(float **)(a4 + 24);
    if (*(_BYTE *)(a4 + 48) && v21)
    {
      v22 = *(_QWORD *)(a4 + 8);
      v23 = *(std::__shared_weak_count **)(a4 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(float **)(a4 + 24);
    }
    v27 = v5 - 1;
    if (v9)
    {
      if (v5 == 1)
      {
        do
        {
          LOWORD(result) = *v14;
          result = (float)LODWORD(result);
          *v21 = result;
          v14 += v11;
          v21 += v13;
          --v9;
        }
        while (v9);
LABEL_35:
        LOWORD(result) = *v14;
        result = (float)LODWORD(result);
        *v21 = result;
        return result;
      }
      for (i = 0; i != v9; ++i)
      {
        v29 = v21;
        v30 = v14;
        v31 = v5 - 1;
        do
        {
          LOWORD(result) = *v30;
          result = (float)LODWORD(result);
          *v29 = result;
          v30 += v10;
          v29 += v12;
          --v31;
        }
        while (v31);
        LOWORD(result) = *v30;
        result = (float)LODWORD(result);
        *v29 = result;
        v14 += v11;
        v21 += v13;
      }
    }
    if (v5 != 1)
    {
      do
      {
        LOWORD(result) = *v14;
        result = (float)LODWORD(result);
        *v21 = result;
        v14 += v10;
        v21 += v12;
        --v27;
      }
      while (v27);
    }
    goto LABEL_35;
  }
  return result;
}

uint64_t sub_2398B9994(uint64_t a1, uint64_t a2, double ***a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  double ***v35;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_42;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f32[0] = sub_2398B9C2C(&v35, a1, a2, a4.n128_f64[0], a5, a6, a7, a8, a9, a10);
LABEL_36:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398B9BC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float sub_2398B9C2C(double ****a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  int v10;
  int v11;
  BOOL v12;
  uint64_t v16;
  uint64_t v17;
  _WORD *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  unint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  int v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  char v36;

  v11 = *(_DWORD *)(a2 + 32);
  v10 = *(_DWORD *)(a2 + 36);
  if (v11)
    v12 = v10 == 0;
  else
    v12 = 1;
  if (!v12)
  {
    v32 = v11 - 1;
    v16 = *(unsigned int *)(a2 + 44);
    v17 = *(unsigned int *)(a3 + 44);
    v33 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v31 = 0;
    v34 = v10 - 1;
    v35 = v16 | (v17 << 32);
    v18 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v18)
    {
      v19 = *(_QWORD *)(a2 + 8);
      v20 = *(std::__shared_weak_count **)(a2 + 16);
      if (v20)
      {
        p_shared_owners = (unint64_t *)&v20->__shared_owners_;
        do
          v22 = __ldxr(p_shared_owners);
        while (__stxr(v22 + 1, p_shared_owners));
        do
          v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v19 + 88))(v19, 0, "unknown location");
      v18 = *(_WORD **)(a2 + 24);
    }
    v24 = *(_DWORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v24)
    {
      v25 = *(_QWORD *)(a3 + 8);
      v26 = *(std::__shared_weak_count **)(a3 + 16);
      if (v26)
      {
        v27 = (unint64_t *)&v26->__shared_owners_;
        do
          v28 = __ldxr(v27);
        while (__stxr(v28 + 1, v27));
        do
          v29 = __ldaxr(v27);
        while (__stlxr(v29 - 1, v27));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v25 + 88))(v25, 1, "unknown location");
      v24 = *(_DWORD **)(a3 + 24);
    }
    v36 = 0;
    *(float *)&a4 = sub_2398B9DAC(&v31, a4, a5, a6, a7, a8, a9, a10, (uint64_t)&v36, a1, v18, v24);
  }
  return *(float *)&a4;
}

float sub_2398B9DAC(_DWORD *a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, double ****a10, _WORD *a11, _DWORD *a12)
{
  int v12;
  int v13;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  _WORD *v28;
  int v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double **v36;
  double **v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  float result;

  v12 = a1[5];
  v13 = a1[2];
  if (!v12)
  {
    v37 = **a10;
    v36 = (*a10)[1];
    v16 = **v37;
    v17 = *v37[1];
    v18 = **v36;
    v19 = *v36[1];
    if (!v13)
      goto LABEL_26;
    goto LABEL_15;
  }
  v15 = **a10;
  v14 = (*a10)[1];
  v16 = **v15;
  v17 = *v15[1];
  v18 = **v14;
  v19 = *v14[1];
  v20 = a1[6];
  v21 = a1[7];
  if (v13)
  {
    v22 = 0;
    v23 = 2 * v20;
    v24 = 2 * a1[3];
    v25 = 4 * v21;
    v26 = 4 * a1[4];
    do
    {
      v27 = a12;
      v28 = a11;
      v29 = v13;
      do
      {
        LOWORD(a8) = *v28;
        v30 = v17 * ((double)*(unint64_t *)&a8 - v16);
        v31 = fmax(v30, 0.0);
        if (v30 <= 1.0)
          v32 = v31;
        else
          v32 = 1.0;
        a8 = v18 + v19 * v32;
        *(float *)&a8 = a8;
        *v27 = LODWORD(a8);
        v28 = (_WORD *)((char *)v28 + v24);
        v27 = (_DWORD *)((char *)v27 + v26);
        --v29;
      }
      while (v29);
      LOWORD(a8) = *v28;
      v33 = v17 * ((double)*(unint64_t *)&a8 - v16);
      v34 = fmax(v33, 0.0);
      if (v33 <= 1.0)
        v35 = v34;
      else
        v35 = 1.0;
      a8 = v18 + v19 * v35;
      *(float *)&a8 = a8;
      *v27 = LODWORD(a8);
      a11 = (_WORD *)((char *)a11 + v23);
      a12 = (_DWORD *)((char *)a12 + v25);
      ++v22;
    }
    while (v22 != v12);
LABEL_15:
    v38 = 2 * a1[3];
    v39 = 4 * a1[4];
    a6 = 0.0;
    do
    {
      LOWORD(a8) = *a11;
      v40 = v17 * ((double)*(unint64_t *)&a8 - v16);
      v41 = fmax(v40, 0.0);
      if (v40 <= 1.0)
        v42 = v41;
      else
        v42 = 1.0;
      a8 = v18 + v19 * v42;
      *(float *)&a8 = a8;
      *a12 = LODWORD(a8);
      a11 = (_WORD *)((char *)a11 + v38);
      a12 = (_DWORD *)((char *)a12 + v39);
      --v13;
    }
    while (v13);
    goto LABEL_26;
  }
  a6 = 0.0;
  do
  {
    LOWORD(a8) = *a11;
    v43 = v17 * ((double)*(unint64_t *)&a8 - v16);
    v44 = fmax(v43, 0.0);
    if (v43 <= 1.0)
      v45 = v44;
    else
      v45 = 1.0;
    a8 = v18 + v19 * v45;
    *(float *)&a8 = a8;
    *a12 = LODWORD(a8);
    a11 += v20;
    a12 += v21;
    --v12;
  }
  while (v12);
LABEL_26:
  LOWORD(a6) = *a11;
  v46 = v17 * ((double)*(unint64_t *)&a6 - v16);
  v47 = fmax(v46, 0.0);
  if (v46 <= 1.0)
    v48 = v47;
  else
    v48 = 1.0;
  result = v18 + v19 * v48;
  *(float *)a12 = result;
  return result;
}

uint64_t sub_2398B9F8C(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  __int16 *v17;
  float *v18;
  __int16 v19;
  __int16 v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 65535.0;
    v3 = a3 >= 65535.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOWORD(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_2398BA6F0(v10, v11, (uint64_t)&v15);
    }
    else
    {
      a2.n128_u32[0] = 1199570688;
      if (a3 <= 65535.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOWORD(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_2398BAC70(v13, v14, (uint64_t)&v15);
      }
      else
      {
        return sub_2398B94E8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_2398BA090(v6, v7, (unsigned __int16 **)&v15, a2);
  }
}

uint64_t sub_2398BA090(uint64_t a1, uint64_t a2, unsigned __int16 **a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 **v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f32[0] = sub_2398BA328(&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398BA2C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float sub_2398BA328(unsigned __int16 ***a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  float *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  float result;
  uint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  char v29;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v25 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v26 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v24 = 0;
    v27 = v3 - 1;
    v28 = v9 | (v10 << 32);
    v11 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(unsigned __int16 **)(a2 + 24);
    }
    v17 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(float **)(a3 + 24);
    }
    v29 = 0;
    return sub_2398BA4A8(&v24, (uint64_t)&v29, a1, v11, v17);
  }
  return result;
}

float sub_2398BA4A8(_DWORD *a1, uint64_t a2, unsigned __int16 ***a3, unsigned __int16 *a4, float *a5)
{
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float *v16;
  float *v17;
  unsigned __int16 *v18;
  int v19;
  float *v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  float *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  float *v31;
  float result;
  float *v33;

  v5 = a1[5];
  v6 = a1[2];
  if (!v5)
  {
    v7 = (uint64_t)*a3;
    v8 = ***a3;
LABEL_19:
    if (!v6)
      goto LABEL_35;
    v23 = 2 * a1[3];
    v24 = 4 * a1[4];
    while (1)
    {
      while (1)
      {
        v26 = *a4;
        if (v26 >= v8)
          break;
        v25 = *(float **)(v7 + 8);
LABEL_22:
        *a5 = *v25;
        a4 = (unsigned __int16 *)((char *)a4 + v23);
        a5 = (float *)((char *)a5 + v24);
        if (!--v6)
          goto LABEL_35;
      }
      if (v26 > **(unsigned __int16 **)(v7 + 16))
      {
        v25 = *(float **)(v7 + 24);
        goto LABEL_22;
      }
      *a5 = (float)v26;
      a4 = (unsigned __int16 *)((char *)a4 + v23);
      a5 = (float *)((char *)a5 + v24);
      if (!--v6)
        goto LABEL_35;
    }
  }
  v7 = (uint64_t)*a3;
  v8 = ***a3;
  v9 = a1[6];
  v10 = a1[7];
  if (v6)
  {
    v11 = 0;
    v12 = 2 * v9;
    v13 = 2 * a1[3];
    v14 = 4 * v10;
    v15 = 4 * a1[4];
    while (1)
    {
      v17 = a5;
      v18 = a4;
      v19 = v6;
      do
      {
        while (1)
        {
          v21 = *v18;
          if (v21 >= v8)
            break;
          v20 = *(float **)(v7 + 8);
LABEL_8:
          *v17 = *v20;
          v18 = (unsigned __int16 *)((char *)v18 + v13);
          v17 = (float *)((char *)v17 + v15);
          if (!--v19)
            goto LABEL_13;
        }
        if (v21 > **(unsigned __int16 **)(v7 + 16))
        {
          v20 = *(float **)(v7 + 24);
          goto LABEL_8;
        }
        *v17 = (float)v21;
        v18 = (unsigned __int16 *)((char *)v18 + v13);
        v17 = (float *)((char *)v17 + v15);
        --v19;
      }
      while (v19);
LABEL_13:
      v22 = *v18;
      if (v22 < v8)
      {
        v16 = *(float **)(v7 + 8);
        goto LABEL_5;
      }
      if (v22 <= **(unsigned __int16 **)(v7 + 16))
      {
        *v17 = (float)v22;
        a4 = (unsigned __int16 *)((char *)a4 + v12);
        a5 = (float *)((char *)a5 + v14);
        if (++v11 == v5)
          goto LABEL_19;
        continue;
      }
      v16 = *(float **)(v7 + 24);
LABEL_5:
      *v17 = *v16;
      a4 = (unsigned __int16 *)((char *)a4 + v12);
      a5 = (float *)((char *)a5 + v14);
      if (++v11 == v5)
        goto LABEL_19;
    }
  }
  v27 = 2 * v9;
  v28 = 4 * v10;
  do
  {
    while (1)
    {
      while (1)
      {
        v29 = *a4;
        if (v29 >= v8)
          break;
        *a5 = **(float **)(v7 + 8);
        a4 = (unsigned __int16 *)((char *)a4 + v27);
        a5 = (float *)((char *)a5 + v28);
        if (!--v5)
          goto LABEL_35;
      }
      if (v29 > **(unsigned __int16 **)(v7 + 16))
        break;
      *a5 = (float)v29;
      a4 = (unsigned __int16 *)((char *)a4 + v27);
      a5 = (float *)((char *)a5 + v28);
      if (!--v5)
        goto LABEL_35;
    }
    *a5 = **(float **)(v7 + 24);
    a4 = (unsigned __int16 *)((char *)a4 + v27);
    a5 = (float *)((char *)a5 + v28);
    --v5;
  }
  while (v5);
LABEL_35:
  v30 = *a4;
  if (v30 >= v8)
  {
    if (v30 <= **(unsigned __int16 **)(v7 + 16))
    {
      result = (float)v30;
      *a5 = (float)v30;
    }
    else
    {
      v33 = *(float **)(v7 + 24);
      result = *v33;
      *a5 = *v33;
    }
  }
  else
  {
    v31 = *(float **)(v7 + 8);
    result = *v31;
    *a5 = *v31;
  }
  return result;
}

uint64_t sub_2398BA6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398BA988((uint64_t)&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398BA924(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398BA988(uint64_t result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  unsigned __int16 ***v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  float *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  float v32;
  float *v33;
  unsigned __int16 *v34;
  int v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  float v44;
  uint64_t v45;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (v5)
    return result;
  v8 = (unsigned __int16 ***)result;
  v9 = v3 - 1;
  v10 = *(unsigned int *)(a2 + 40);
  v11 = *(unsigned int *)(a2 + 44);
  v12 = *(unsigned int *)(a3 + 40);
  v45 = *(unsigned int *)(a3 + 44);
  v13 = *(unsigned __int16 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48))
    v14 = v13 == 0;
  else
    v14 = 1;
  if (!v14)
  {
    v15 = *(_QWORD *)(a2 + 8);
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (v16)
    {
      p_shared_owners = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldxr(p_shared_owners);
      while (__stxr(v18 + 1, p_shared_owners));
      do
        v19 = __ldaxr(p_shared_owners);
      while (__stlxr(v19 - 1, p_shared_owners));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
    v13 = *(unsigned __int16 **)(a2 + 24);
  }
  v20 = *(float **)(a3 + 24);
  if (*(_BYTE *)(a3 + 48) && v20)
  {
    v21 = *(_QWORD *)(a3 + 8);
    v22 = *(std::__shared_weak_count **)(a3 + 16);
    if (v22)
    {
      v23 = (unint64_t *)&v22->__shared_owners_;
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 1, v23));
      do
        v25 = __ldaxr(v23);
      while (__stlxr(v25 - 1, v23));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
    result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
    v20 = *(float **)(a3 + 24);
  }
  v26 = v4 - 1;
  if (v9)
  {
    v27 = (uint64_t)*v8;
    v28 = ***v8;
    if (v4 == 1)
    {
      v40 = 2 * v11;
      v41 = 4 * v45;
      do
      {
        while (1)
        {
          v42 = *v13;
          if (v42 >= v28)
            break;
          *v20 = **(float **)(v27 + 8);
          v13 = (unsigned __int16 *)((char *)v13 + v40);
          v20 = (float *)((char *)v20 + v41);
          if (!--v9)
            goto LABEL_47;
        }
        *v20 = (float)v42;
        v13 = (unsigned __int16 *)((char *)v13 + v40);
        v20 = (float *)((char *)v20 + v41);
        --v9;
      }
      while (v9);
      goto LABEL_47;
    }
    v29 = 0;
    v30 = 2 * v10;
    v31 = 4 * v12;
    do
    {
      v33 = v20;
      v34 = v13;
      v35 = v4 - 1;
      do
      {
        while (1)
        {
          v36 = *v34;
          if (v36 < v28)
            break;
          *v33 = (float)v36;
          v34 = (unsigned __int16 *)((char *)v34 + v30);
          v33 = (float *)((char *)v33 + v31);
          if (!--v35)
            goto LABEL_34;
        }
        *v33 = **(float **)(v27 + 8);
        v34 = (unsigned __int16 *)((char *)v34 + v30);
        v33 = (float *)((char *)v33 + v31);
        --v35;
      }
      while (v35);
LABEL_34:
      result = *v34;
      if (result >= v28)
      {
        v32 = (float)result;
      }
      else
      {
        result = *(_QWORD *)(v27 + 8);
        v32 = *(float *)result;
      }
      *v33 = v32;
      v13 += v11;
      v20 += v45;
      ++v29;
    }
    while (v29 != v9);
  }
  else
  {
    v27 = (uint64_t)*v8;
    v28 = ***v8;
  }
  if (v4 != 1)
  {
    v37 = 2 * v10;
    v38 = 4 * v12;
    do
    {
      while (1)
      {
        v39 = *v13;
        if (v39 < v28)
          break;
        *v20 = (float)v39;
        v13 = (unsigned __int16 *)((char *)v13 + v37);
        v20 = (float *)((char *)v20 + v38);
        if (!--v26)
          goto LABEL_47;
      }
      *v20 = **(float **)(v27 + 8);
      v13 = (unsigned __int16 *)((char *)v13 + v37);
      v20 = (float *)((char *)v20 + v38);
      --v26;
    }
    while (v26);
  }
LABEL_47:
  v43 = *v13;
  if (v43 >= v28)
    v44 = (float)v43;
  else
    v44 = **(float **)(v27 + 8);
  *v20 = v44;
  return result;
}

uint64_t sub_2398BAC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398BAF08((uint64_t)&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398BAEA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398BAF08(uint64_t result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  unsigned __int16 ***v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  float *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  float v32;
  float *v33;
  unsigned __int16 *v34;
  int v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  float v44;
  uint64_t v45;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (v5)
    return result;
  v8 = (unsigned __int16 ***)result;
  v9 = v3 - 1;
  v10 = *(unsigned int *)(a2 + 40);
  v11 = *(unsigned int *)(a2 + 44);
  v12 = *(unsigned int *)(a3 + 40);
  v45 = *(unsigned int *)(a3 + 44);
  v13 = *(unsigned __int16 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48))
    v14 = v13 == 0;
  else
    v14 = 1;
  if (!v14)
  {
    v15 = *(_QWORD *)(a2 + 8);
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (v16)
    {
      p_shared_owners = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldxr(p_shared_owners);
      while (__stxr(v18 + 1, p_shared_owners));
      do
        v19 = __ldaxr(p_shared_owners);
      while (__stlxr(v19 - 1, p_shared_owners));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
    v13 = *(unsigned __int16 **)(a2 + 24);
  }
  v20 = *(float **)(a3 + 24);
  if (*(_BYTE *)(a3 + 48) && v20)
  {
    v21 = *(_QWORD *)(a3 + 8);
    v22 = *(std::__shared_weak_count **)(a3 + 16);
    if (v22)
    {
      v23 = (unint64_t *)&v22->__shared_owners_;
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 1, v23));
      do
        v25 = __ldaxr(v23);
      while (__stlxr(v25 - 1, v23));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
    result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
    v20 = *(float **)(a3 + 24);
  }
  v26 = v4 - 1;
  if (v9)
  {
    v27 = (uint64_t)*v8;
    v28 = ***v8;
    if (v4 == 1)
    {
      v40 = 2 * v11;
      v41 = 4 * v45;
      do
      {
        while (1)
        {
          v42 = *v13;
          if (v42 <= v28)
            break;
          *v20 = **(float **)(v27 + 8);
          v13 = (unsigned __int16 *)((char *)v13 + v40);
          v20 = (float *)((char *)v20 + v41);
          if (!--v9)
            goto LABEL_47;
        }
        *v20 = (float)v42;
        v13 = (unsigned __int16 *)((char *)v13 + v40);
        v20 = (float *)((char *)v20 + v41);
        --v9;
      }
      while (v9);
      goto LABEL_47;
    }
    v29 = 0;
    v30 = 2 * v10;
    v31 = 4 * v12;
    do
    {
      v33 = v20;
      v34 = v13;
      v35 = v4 - 1;
      do
      {
        while (1)
        {
          v36 = *v34;
          if (v36 > v28)
            break;
          *v33 = (float)v36;
          v34 = (unsigned __int16 *)((char *)v34 + v30);
          v33 = (float *)((char *)v33 + v31);
          if (!--v35)
            goto LABEL_34;
        }
        *v33 = **(float **)(v27 + 8);
        v34 = (unsigned __int16 *)((char *)v34 + v30);
        v33 = (float *)((char *)v33 + v31);
        --v35;
      }
      while (v35);
LABEL_34:
      result = *v34;
      if (result <= v28)
      {
        v32 = (float)result;
      }
      else
      {
        result = *(_QWORD *)(v27 + 8);
        v32 = *(float *)result;
      }
      *v33 = v32;
      v13 += v11;
      v20 += v45;
      ++v29;
    }
    while (v29 != v9);
  }
  else
  {
    v27 = (uint64_t)*v8;
    v28 = ***v8;
  }
  if (v4 != 1)
  {
    v37 = 2 * v10;
    v38 = 4 * v12;
    do
    {
      while (1)
      {
        v39 = *v13;
        if (v39 > v28)
          break;
        *v20 = (float)v39;
        v13 = (unsigned __int16 *)((char *)v13 + v37);
        v20 = (float *)((char *)v20 + v38);
        if (!--v26)
          goto LABEL_47;
      }
      *v20 = **(float **)(v27 + 8);
      v13 = (unsigned __int16 *)((char *)v13 + v37);
      v20 = (float *)((char *)v20 + v38);
      --v26;
    }
    while (v26);
  }
LABEL_47:
  v43 = *v13;
  if (v43 <= v28)
    v44 = (float)v43;
  else
    v44 = **(float **)(v27 + 8);
  *v20 = v44;
  return result;
}

void sub_2398BB1F0(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398BB214@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398BB2D8(a1, a2);
}

double sub_2398BB220@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398BC9D4(a1, a2);
}

double sub_2398BB22C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398BDFD4(a1, a2);
}

double sub_2398BB238@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398BE784(a1, a2);
}

uint64_t sub_2398BB2D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[87];

  sub_2398BB50C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v8);
  v11 = &off_250ADB628;
  sub_239423E50((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398BB3E4(*(_QWORD *)a1, (uint64_t)&v11, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398BB3AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398BB3C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398BB3E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250ADB3D0;
  sub_23949ED60(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF270[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239709384(a2, (uint64_t)(a4 + 1));
}

void sub_2398BB4D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398BB4E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398BB4F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23941965C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398BB50C(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 3;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398BB64C((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_239762530((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398BB610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398BB638(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398BB64C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 3);
  *a2 = &off_250AE5E18;
  sub_2398B08FC((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398BB764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398BB788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398BB79C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398BB7E4(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398BB7AC(uint64_t **a1, uint64_t a2)
{
  return sub_2398BC310(**a1, (*a1)[1], a2);
}

uint64_t sub_2398BB7BC(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398BB934(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398BB7E4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  unsigned int v12;
  double v13;
  double v14;
  unsigned int v15;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  double v24;
  double v25;
  double v26;
  unint64_t v27;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    v12 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = 255;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  v12 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v13 = *(double *)(a3 + 24);
  if (v13 < 0.0)
    v13 = 0.0;
  v12 = (int)v13;
  v14 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v14 = *(double *)(a3 + 32);
  v15 = (int)v14;
LABEL_14:
  __asm
  {
    FCVT            S3, H0
    FCVT            S2, H1
  }
  _ZF = _ZF && _S2 == (float)v15;
  if (_ZF)
    return sub_2398BB934(a1, a2, (uint64_t)v23, _Q0);
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  v25 = (double)v12;
  v26 = 1.0 / (_D1 - _Q0.n128_f64[0]);
  _Q0.n128_f64[0] = (double)v15 - (double)v12;
  v24 = _Q0.n128_f64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_2398BBDE0(a1, a2, (uint64_t)v21, _Q0);
}

uint64_t sub_2398BB934(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f32[0] = sub_2398BBBCC((uint64_t)&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398BBB68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float sub_2398BBBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  int i;
  __int16 *v29;
  int v30;
  _BYTE *v31;
  float result;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    _ZF = v3 == 0;
  else
    _ZF = 1;
  if (!_ZF)
  {
    v8 = v3 - 1;
    v10 = *(unsigned int *)(a2 + 40);
    v9 = *(unsigned int *)(a2 + 44);
    v11 = *(unsigned int *)(a3 + 40);
    v12 = *(unsigned int *)(a3 + 44);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v14 = v13 == 0;
    else
      v14 = 1;
    if (!v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v20 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_BYTE **)(a3 + 24);
    }
    v26 = v4 - 1;
    v27 = 2 * v10;
    if (v8)
    {
      if (v4 == 1)
      {
        do
        {
          _H0 = *v13;
          __asm { FCVT            S0, H0 }
          *v20 = (int)_S0;
          v20 += v12;
          v13 += v9;
          --v8;
        }
        while (v8);
      }
      else
      {
        for (i = 0; i != v8; ++i)
        {
          v29 = v13;
          v30 = v4 - 1;
          v31 = v20;
          do
          {
            _H0 = *v29;
            __asm { FCVT            S0, H0 }
            *v31 = (int)_S0;
            v31 += v11;
            v29 = (__int16 *)((char *)v29 + v27);
            --v30;
          }
          while (v30);
          _H0 = *v29;
          __asm { FCVT            S0, H0 }
          *v31 = (int)_S0;
          v13 += v9;
          v20 += v12;
        }
      }
    }
    if (v4 != 1)
    {
      do
      {
        _H0 = *v13;
        __asm { FCVT            S0, H0 }
        *v20 = (int)_S0;
        v20 += v11;
        v13 = (__int16 *)((char *)v13 + v27);
        --v26;
      }
      while (v26);
    }
    _H0 = *v13;
    __asm { FCVT            S0, H0 }
    *v20 = (int)result;
  }
  return result;
}

uint64_t sub_2398BBDE0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f64[0] = sub_2398BC078((uint64_t)&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398BC014(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

double sub_2398BC078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  __int16 *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int i;
  double result;
  uint64_t v25;
  int v26;
  unint64_t v27;
  unsigned int v28;
  uint64_t v29;
  char v30;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v26 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v27 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v9 | (v10 << 32);
    v11 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(__int16 **)(a2 + 24);
    }
    v17 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(_BYTE **)(a3 + 24);
    }
    v30 = 0;
    if (v28)
    {
      for (i = 0; i < v28; ++i)
      {
        sub_2398BC23C(&v25, (uint64_t)&v30, a1, v11, v17);
        v11 += v29;
        v17 += HIDWORD(v29);
      }
    }
    return sub_2398BC23C(&v25, (uint64_t)&v30, a1, v11, v17);
  }
  return result;
}

double sub_2398BC23C(_DWORD *a1, uint64_t a2, uint64_t a3, __int16 *a4, _BYTE *a5)
{
  unsigned int v5;
  double v12;
  double v13;
  double v14;
  double v17;
  double v18;
  double v19;
  double result;

  if (a1[2])
  {
    v5 = 0;
    do
    {
      _H2 = *a4;
      __asm { FCVT            D2, H2 }
      v12 = (_D2 - ****(double ****)a3) * **(double **)(**(_QWORD **)a3 + 8);
      v13 = fmax(v12, 0.0);
      if (v12 <= 1.0)
        v14 = v13;
      else
        v14 = 1.0;
      *a5 = llround(***(double ***)(*(_QWORD *)a3 + 8) + v14 * **(double **)(*(_QWORD *)(*(_QWORD *)a3 + 8) + 8));
      a4 += a1[3];
      a5 += a1[4];
      ++v5;
    }
    while (v5 < a1[2]);
  }
  _H0 = *a4;
  __asm { FCVT            D0, H0 }
  v17 = (_D0 - ****(double ****)a3) * **(double **)(**(_QWORD **)a3 + 8);
  v18 = fmax(v17, 0.0);
  if (v17 <= 1.0)
    v19 = v18;
  else
    v19 = 1.0;
  result = ***(double ***)(*(_QWORD *)a3 + 8) + v19 * **(double **)(*(_QWORD *)(*(_QWORD *)a3 + 8) + 8);
  *a5 = llround(result);
  return result;
}

uint64_t sub_2398BC310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  __int16 *v16[4];
  __int16 v17;
  __int16 v18;
  char v19;
  char v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 23544;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = (__int16 *)&v20;
  v16[2] = &v17;
  v16[3] = (__int16 *)&v19;
  return sub_2398BC3D8(a1, a2, v16);
}

uint64_t sub_2398BC3D8(uint64_t a1, uint64_t a2, __int16 **a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  __int16 **v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398BC670(&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398BC60C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

__int16 ***sub_2398BC670(__int16 ***result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  __int16 ***v8;
  uint64_t v9;
  uint64_t v10;
  __int16 *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  char v28;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v24 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v25 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v23 = 0;
    v26 = v3 - 1;
    v27 = v9 | (v10 << 32);
    v11 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(__int16 **)(a2 + 24);
    }
    v17 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(_BYTE **)(a3 + 24);
    }
    v28 = 0;
    return (__int16 ***)sub_2398BC7F0(&v23, (uint64_t)&v28, v8, v11, v17);
  }
  return result;
}

_DWORD *sub_2398BC7F0(_DWORD *result, uint64_t a2, __int16 ***a3, __int16 *a4, _BYTE *a5)
{
  unsigned int i;
  __int16 *v6;
  _BYTE *v7;
  __int16 *v8;
  unsigned int v9;
  __int16 *v10;
  __int16 **v11;
  __int16 **v22;
  unsigned int j;
  __int16 *v30;
  __int16 **v31;
  __int16 **v38;

  if (result[5])
  {
    for (i = 0; i < result[5]; ++i)
    {
      v7 = a5;
      v8 = a4;
      if (result[2])
      {
        v9 = 0;
        v8 = a4;
        v7 = a5;
        do
        {
          v11 = *a3;
          _H0 = *v8;
          _H1 = ***a3;
          __asm
          {
            FCVT            S0, H0
            FCVT            S1, H1
          }
          if (_S0 < _S1)
          {
            v10 = v11[1];
          }
          else
          {
            _H1 = *v11[2];
            __asm { FCVT            S1, H1 }
            if (_S0 <= _S1)
            {
              LODWORD(v10) = (int)_S0;
              goto LABEL_10;
            }
            v10 = v11[3];
          }
          LOBYTE(v10) = *(_BYTE *)v10;
LABEL_10:
          *v7 = (_BYTE)v10;
          v8 += result[3];
          v7 += result[4];
          ++v9;
        }
        while (v9 < result[2]);
      }
      v22 = *a3;
      _H0 = *v8;
      _H1 = ***a3;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 < _S1)
      {
        v6 = v22[1];
      }
      else
      {
        _H1 = *v22[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
        {
          LODWORD(v6) = (int)_S0;
          goto LABEL_5;
        }
        v6 = v22[3];
      }
      LOBYTE(v6) = *(_BYTE *)v6;
LABEL_5:
      *v7 = (_BYTE)v6;
      a4 += result[6];
      a5 += result[7];
    }
  }
  if (result[2])
  {
    for (j = 0; j < result[2]; ++j)
    {
      v31 = *a3;
      _H0 = *a4;
      _H1 = ***a3;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 < _S1)
      {
        v30 = v31[1];
      }
      else
      {
        _H1 = *v31[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
        {
          LODWORD(v30) = (int)_S0;
          goto LABEL_23;
        }
        v30 = v31[3];
      }
      LOBYTE(v30) = *(_BYTE *)v30;
LABEL_23:
      *a5 = (_BYTE)v30;
      a4 += result[3];
      a5 += result[4];
    }
  }
  v38 = *a3;
  _H0 = *a4;
  _H1 = ***a3;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 >= _S1)
  {
    _H1 = *v38[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      *a5 = (int)_S0;
    else
      *a5 = *(_BYTE *)v38[3];
  }
  else
  {
    *a5 = *(_BYTE *)v38[1];
  }
  return result;
}

double sub_2398BC9D4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[87];

  sub_2398BB50C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v9);
  v12 = &off_250AE4178;
  sub_2398AE894((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398BCAE0(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398BCAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398BCAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398BCAE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE4080;
  sub_2397614BC(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF288[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239761728(a2, (uint64_t)(a4 + 1));
}

void sub_2398BCBCC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398BCBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398BCBF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23972FCB8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398BCC08(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398BCC50(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398BCC18(uint64_t **a1, uint64_t a2)
{
  return sub_2398BD864(**a1, (*a1)[1], a2);
}

uint64_t sub_2398BCC28(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398BCDAC(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398BCC50(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v18;
  double **v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  double v26;
  double v27;
  double v28;
  unint64_t v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = -65536;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
LABEL_14:
  v16 = (unsigned __int16)v15;
  __asm { FCVT            S2, H0 }
  v18 = HIWORD(v15);
  __asm { FCVT            S2, H1 }
  _ZF = _ZF && _S2 == (float)v18;
  if (_ZF)
    return sub_2398BCDAC(a1, a2, (uint64_t)v25, _Q0);
  __asm { FCVT            D0, H0 }
  v29 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  v27 = (double)v16;
  v28 = 1.0 / (_D1 - _Q0.n128_f64[0]);
  _Q0.n128_f64[0] = (double)v18 - (double)v16;
  v26 = _Q0.n128_f64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = (double **)v25;
  v23[1] = (double **)v24;
  return sub_2398BD26C(a1, a2, v23, _Q0);
}

uint64_t sub_2398BCDAC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f32[0] = sub_2398BD044((uint64_t)&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398BCFE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float sub_2398BD044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  int i;
  _WORD *v28;
  __int16 *v29;
  int v30;
  float result;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    _ZF = v3 == 0;
  else
    _ZF = 1;
  if (!_ZF)
  {
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 40);
    v10 = *(unsigned int *)(a2 + 44);
    v11 = *(unsigned int *)(a3 + 40);
    v12 = *(unsigned int *)(a3 + 44);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v14 = v13 == 0;
    else
      v14 = 1;
    if (!v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v20 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_WORD **)(a3 + 24);
    }
    v26 = v4 - 1;
    if (v8)
    {
      if (v4 == 1)
      {
        do
        {
          _H0 = *v13;
          __asm { FCVT            S0, H0 }
          *v20 = (int)_S0;
          v13 += v10;
          v20 += v12;
          --v8;
        }
        while (v8);
LABEL_35:
        _H0 = *v13;
        __asm { FCVT            S0, H0 }
        *v20 = (int)result;
        return result;
      }
      for (i = 0; i != v8; ++i)
      {
        v28 = v20;
        v29 = v13;
        v30 = v4 - 1;
        do
        {
          _H0 = *v29;
          __asm { FCVT            S0, H0 }
          *v28 = (int)_S0;
          v29 += v9;
          v28 += v11;
          --v30;
        }
        while (v30);
        _H0 = *v29;
        __asm { FCVT            S0, H0 }
        *v28 = (int)_S0;
        v13 += v10;
        v20 += v12;
      }
    }
    if (v4 != 1)
    {
      do
      {
        _H0 = *v13;
        __asm { FCVT            S0, H0 }
        *v20 = (int)_S0;
        v13 += v9;
        v20 += v11;
        --v26;
      }
      while (v26);
    }
    goto LABEL_35;
  }
  return result;
}

uint64_t sub_2398BD26C(uint64_t a1, uint64_t a2, double ***a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  double ***v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f64[0] = sub_2398BD504(&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398BD4A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

double sub_2398BD504(double ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  __int16 *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  _WORD *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  double result;
  uint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  char v29;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v25 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v26 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v24 = 0;
    v27 = v3 - 1;
    v28 = v9 | (v10 << 32);
    v11 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(__int16 **)(a2 + 24);
    }
    v17 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(_WORD **)(a3 + 24);
    }
    v29 = 0;
    return sub_2398BD684(&v24, (uint64_t)&v29, a1, v11, v17);
  }
  return result;
}

double sub_2398BD684(_DWORD *a1, uint64_t a2, double ****a3, __int16 *a4, _WORD *a5)
{
  int v5;
  int v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _WORD *v20;
  __int16 *v21;
  int v22;
  double v29;
  double v30;
  double v31;
  double v34;
  double v35;
  double v36;
  double **v37;
  double **v38;
  uint64_t v39;
  uint64_t v40;
  double v43;
  double v44;
  double v45;
  double v48;
  double v49;
  double v50;
  double v53;
  double v54;
  double v55;
  double result;

  v5 = a1[5];
  v6 = a1[2];
  if (!v5)
  {
    v38 = **a3;
    v37 = (*a3)[1];
    v9 = **v38;
    v10 = *v38[1];
    v11 = **v37;
    v12 = *v37[1];
    if (!v6)
      goto LABEL_25;
    goto LABEL_15;
  }
  v8 = **a3;
  v7 = (*a3)[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  v13 = a1[6];
  v14 = a1[7];
  if (v6)
  {
    v15 = 0;
    v16 = 2 * v13;
    v17 = 2 * a1[3];
    v18 = 2 * v14;
    v19 = 2 * a1[4];
    do
    {
      v20 = a5;
      v21 = a4;
      v22 = v6;
      do
      {
        _H6 = *v21;
        __asm { FCVT            D6, H6 }
        v29 = v10 * (_D6 - v9);
        v30 = fmax(v29, 0.0);
        if (v29 <= 1.0)
          v31 = v30;
        else
          v31 = 1.0;
        *v20 = llround(v11 + v12 * v31);
        v21 = (__int16 *)((char *)v21 + v17);
        v20 = (_WORD *)((char *)v20 + v19);
        --v22;
      }
      while (v22);
      _H6 = *v21;
      __asm { FCVT            D6, H6 }
      v34 = v10 * (_D6 - v9);
      v35 = fmax(v34, 0.0);
      if (v34 <= 1.0)
        v36 = v35;
      else
        v36 = 1.0;
      *v20 = llround(v11 + v12 * v36);
      a4 = (__int16 *)((char *)a4 + v16);
      a5 = (_WORD *)((char *)a5 + v18);
      ++v15;
    }
    while (v15 != v5);
LABEL_15:
    v39 = 2 * a1[3];
    v40 = 2 * a1[4];
    do
    {
      _H6 = *a4;
      __asm { FCVT            D6, H6 }
      v43 = v10 * (_D6 - v9);
      v44 = fmax(v43, 0.0);
      if (v43 <= 1.0)
        v45 = v44;
      else
        v45 = 1.0;
      *a5 = llround(v11 + v12 * v45);
      a4 = (__int16 *)((char *)a4 + v39);
      a5 = (_WORD *)((char *)a5 + v40);
      --v6;
    }
    while (v6);
    goto LABEL_25;
  }
  do
  {
    _H6 = *a4;
    __asm { FCVT            D6, H6 }
    v48 = v10 * (_D6 - v9);
    v49 = fmax(v48, 0.0);
    if (v48 <= 1.0)
      v50 = v49;
    else
      v50 = 1.0;
    *a5 = llround(v11 + v12 * v50);
    a4 += v13;
    a5 += v14;
    --v5;
  }
  while (v5);
LABEL_25:
  _H4 = *a4;
  __asm { FCVT            D4, H4 }
  v53 = v10 * (_D4 - v9);
  v54 = fmax(v53, 0.0);
  if (v53 <= 1.0)
    v55 = v54;
  else
    v55 = 1.0;
  result = v11 + v12 * v55;
  *a5 = llround(result);
  return result;
}

uint64_t sub_2398BD864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  __int16 *v16[4];
  __int16 v17;
  __int16 v18;
  __int16 v19;
  __int16 v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 31744;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_2398BD92C(a1, a2, v16);
}

uint64_t sub_2398BD92C(uint64_t a1, uint64_t a2, __int16 **a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  __int16 **v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398BDBC4(&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398BDB60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

__int16 ***sub_2398BDBC4(__int16 ***result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  __int16 ***v8;
  uint64_t v9;
  uint64_t v10;
  __int16 *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  __int16 *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  char v28;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v24 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v25 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v23 = 0;
    v26 = v3 - 1;
    v27 = v9 | (v10 << 32);
    v11 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(__int16 **)(a2 + 24);
    }
    v17 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(__int16 **)(a3 + 24);
    }
    v28 = 0;
    return (__int16 ***)sub_2398BDD44(&v23, (uint64_t)&v28, v8, v11, v17);
  }
  return result;
}

_DWORD *sub_2398BDD44(_DWORD *result, uint64_t a2, __int16 ***a3, __int16 *a4, __int16 *a5)
{
  int v5;
  int v6;
  __int16 **v7;
  __int16 *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 *v16;
  __int16 *v17;
  __int16 *v18;
  int v19;
  __int16 *v20;
  uint64_t v37;
  uint64_t v38;
  __int16 *v39;
  uint64_t v46;
  uint64_t v47;

  v5 = result[5];
  v6 = result[2];
  if (!v5)
  {
    v7 = *a3;
    v8 = **a3;
LABEL_19:
    if (!v6)
      goto LABEL_35;
    v37 = 2 * result[3];
    v38 = 2 * result[4];
    while (1)
    {
      while (1)
      {
        _H0 = *a4;
        _H1 = *v8;
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        if (_S0 >= _S1)
          break;
        v39 = v7[1];
LABEL_22:
        *a5 = *v39;
        a4 = (__int16 *)((char *)a4 + v37);
        a5 = (__int16 *)((char *)a5 + v38);
        if (!--v6)
          goto LABEL_35;
      }
      _H1 = *v7[2];
      __asm { FCVT            S1, H1 }
      if (_S0 > _S1)
      {
        v39 = v7[3];
        goto LABEL_22;
      }
      *a5 = (int)_S0;
      a4 = (__int16 *)((char *)a4 + v37);
      a5 = (__int16 *)((char *)a5 + v38);
      if (!--v6)
        goto LABEL_35;
    }
  }
  v7 = *a3;
  v8 = **a3;
  v9 = result[6];
  v10 = result[7];
  if (v6)
  {
    v11 = 0;
    v12 = 2 * v9;
    v13 = 2 * result[3];
    v14 = 2 * v10;
    v15 = 2 * result[4];
    while (1)
    {
      v17 = a5;
      v18 = a4;
      v19 = v6;
      do
      {
        while (1)
        {
          _H0 = *v18;
          _H1 = *v8;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 >= _S1)
            break;
          v20 = v7[1];
LABEL_8:
          *v17 = *v20;
          v18 = (__int16 *)((char *)v18 + v13);
          v17 = (__int16 *)((char *)v17 + v15);
          if (!--v19)
            goto LABEL_13;
        }
        _H1 = *v7[2];
        __asm { FCVT            S1, H1 }
        if (_S0 > _S1)
        {
          v20 = v7[3];
          goto LABEL_8;
        }
        *v17 = (int)_S0;
        v18 = (__int16 *)((char *)v18 + v13);
        v17 = (__int16 *)((char *)v17 + v15);
        --v19;
      }
      while (v19);
LABEL_13:
      _H0 = *v18;
      _H1 = *v8;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 < _S1)
      {
        v16 = v7[1];
        goto LABEL_5;
      }
      _H1 = *v7[2];
      __asm { FCVT            S1, H1 }
      if (_S0 <= _S1)
      {
        *v17 = (int)_S0;
        a4 = (__int16 *)((char *)a4 + v12);
        a5 = (__int16 *)((char *)a5 + v14);
        if (++v11 == v5)
          goto LABEL_19;
        continue;
      }
      v16 = v7[3];
LABEL_5:
      *v17 = *v16;
      a4 = (__int16 *)((char *)a4 + v12);
      a5 = (__int16 *)((char *)a5 + v14);
      if (++v11 == v5)
        goto LABEL_19;
    }
  }
  v46 = 2 * v9;
  v47 = 2 * v10;
  do
  {
    while (1)
    {
      while (1)
      {
        _H0 = *a4;
        _H1 = *v8;
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        if (_S0 >= _S1)
          break;
        *a5 = *v7[1];
        a4 = (__int16 *)((char *)a4 + v46);
        a5 = (__int16 *)((char *)a5 + v47);
        if (!--v5)
          goto LABEL_35;
      }
      _H1 = *v7[2];
      __asm { FCVT            S1, H1 }
      if (_S0 > _S1)
        break;
      *a5 = (int)_S0;
      a4 = (__int16 *)((char *)a4 + v46);
      a5 = (__int16 *)((char *)a5 + v47);
      if (!--v5)
        goto LABEL_35;
    }
    *a5 = *v7[3];
    a4 = (__int16 *)((char *)a4 + v46);
    a5 = (__int16 *)((char *)a5 + v47);
    --v5;
  }
  while (v5);
LABEL_35:
  _H0 = *a4;
  _H1 = *v8;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = *v7[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      *a5 = (int)_S0;
    else
      *a5 = *v7[3];
  }
  else
  {
    *a5 = *v7[1];
  }
  return result;
}

double sub_2398BDFD4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[87];

  sub_2398BB50C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v9);
  v12 = &off_250AE5E18;
  sub_2398B08FC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398BE118(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_239762530((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398BE0BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398BE0E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398BE0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398BE118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 49))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 49))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v17, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v17 = 0;
LABEL_17:
  sub_2395795F0(a2, &v16);
  v13.n128_u64[0] = sub_2398BE2BC(a1, a2);
  v14 = v16;
  v16 = 0;
  if (v14)
    (*(void (**)(uint64_t, float))(*(_QWORD *)v14 + 8))(v14, v13.n128_f32[0]);
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v13);
  return result;
}

void sub_2398BE258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

__int16 sub_2398BE2BC@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  __int16 *v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  __int16 v26;
  uint64_t v28;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 32);
  v5 = *(_DWORD *)(a1 + 44);
  if (v5 != *(_DWORD *)(a2 + 76) || v5 != v4)
  {
    v28 = *(unsigned int *)(a1 + 32);
    sub_2398BE484(a1, a2, &v28);
    return v7;
  }
  v8 = *(unsigned int *)(a1 + 36) * (unint64_t)v4;
  v9 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(a1 + 48))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(_QWORD *)(v3 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 80) && v16)
  {
    a1 = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
    v16 = *(_QWORD *)(a2 + 32);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v17 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v17 < 0xF || (unint64_t)(v16 - v9) < 0x20)
    {
      v20 = (_WORD *)v16;
      v21 = (__int16 *)v9;
    }
    else
    {
      v18 = v17 + 1;
      v19 = (v17 + 1) & 0xFFFFFFFFFFFFFFF0;
      v20 = (_WORD *)(v16 + 2 * v19);
      v21 = (__int16 *)(v9 + 2 * v19);
      v22 = (__int128 *)(v9 + 16);
      v23 = (_OWORD *)(v16 + 16);
      v24 = v19;
      do
      {
        v7 = *(v22 - 1);
        v25 = *v22;
        *(v23 - 1) = v7;
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 16;
      }
      while (v24);
      if (v18 == v19)
        return v7;
    }
    do
    {
      v26 = *v21++;
      LOWORD(v7) = v26;
      *v20++ = v26;
    }
    while (v21 != (__int16 *)(v9 + 2 * v8));
  }
  return v7;
}

uint64_t sub_2398BE484(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 49))
          goto LABEL_14;
LABEL_16:
        v19 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v19, v6, 0);
LABEL_17:
  sub_2395795F0(a2, &v18);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36))
    v15.n128_f64[0] = sub_2398BE648(a3, a1, a2);
  v16 = v18;
  v18 = 0;
  if (v16)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v16 + 8))(v16, v15);
  result = v19;
  v19 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_2398BE5E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2398BE648(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  int v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  _OWORD v24[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v20 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 76);
    v21 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 72) << 32);
    v19 = 0;
    v22 = v3 - 1;
    v23 = v9 | (v10 << 32);
    v11 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(_QWORD *)(a2 + 24);
    }
    v17 = *(_QWORD *)(a3 + 32);
    if (*(_BYTE *)(a3 + 80))
    {
      if (v17)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a3 + 8) + 88))(*(_QWORD *)(a3 + 8), 1, "unknown location");
        v17 = *(_QWORD *)(a3 + 32);
      }
    }
    memset(v24, 0, sizeof(v24));
    *(_QWORD *)&result = sub_239746BD0(&v19, (uint64_t)v24, a1, v11, v17);
  }
  return result;
}

double sub_2398BE784@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[87];

  sub_2398BB50C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v9);
  v12 = &off_250ADD920;
  sub_239541EE0((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398BE890(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398BE858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398BE874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398BE890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1F40;
  sub_239762604(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF2A0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397096A8(a2, (uint64_t)(a4 + 1));
}

void sub_2398BE97C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398BE990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398BE9A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239644044((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398BE9B8(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398BEA00(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398BE9C8(uint64_t **a1, uint64_t a2)
{
  return sub_2398BF608(**a1, (*a1)[1], a2);
}

uint64_t sub_2398BE9D8(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398BEB64(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398BEA00(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  float v13;
  double v14;
  float v15;
  double **v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  unint64_t v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v12 = -3.40282347e38;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        v12 = *(double *)(a3 + 24);
      v13 = v12;
      v14 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v14 = *(double *)(a3 + 32);
      v15 = v14;
      __asm
      {
        FCVT            S4, H0
        FCVT            S5, H1
      }
      if (v13 != _S4 || v15 != _S5)
        goto LABEL_15;
      return sub_2398BEB64(a1, a2, (uint64_t)v26, _Q0);
    }
  }
  else
  {
    _Q0.n128_u32[0] = 1006632960;
    LOWORD(_S1) = 15360;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v15 = 1.0;
  v13 = 0.0;
  __asm
  {
    FCVT            S4, H0
    FCVT            S5, H1
  }
  if (_S4 != 0.0 || 1.0 != _S5)
  {
LABEL_15:
    __asm { FCVT            D0, H0 }
    v30 = _Q0.n128_u64[0];
    __asm { FCVT            D1, H1 }
    v28 = v13;
    v29 = 1.0 / (_D1 - _Q0.n128_f64[0]);
    _Q0.n128_f64[0] = v15 - v13;
    v27 = _Q0.n128_f64[0];
    v26[0] = &v30;
    v26[1] = &v29;
    v25[0] = &v28;
    v25[1] = &v27;
    v24[0] = (double **)v26;
    v24[1] = (double **)v25;
    return sub_2398BF010(a1, a2, v24, _Q0);
  }
  return sub_2398BEB64(a1, a2, (uint64_t)v26, _Q0);
}

uint64_t sub_2398BEB64(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f32[0] = sub_2398BEDFC((uint64_t)&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398BED98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float sub_2398BEDFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _DWORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  int i;
  _DWORD *v28;
  __int16 *v29;
  int v30;
  float result;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    _ZF = v3 == 0;
  else
    _ZF = 1;
  if (!_ZF)
  {
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 40);
    v10 = *(unsigned int *)(a2 + 44);
    v11 = *(unsigned int *)(a3 + 40);
    v12 = *(unsigned int *)(a3 + 44);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v14 = v13 == 0;
    else
      v14 = 1;
    if (!v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v20 = *(_DWORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_DWORD **)(a3 + 24);
    }
    v26 = v4 - 1;
    if (v8)
    {
      if (v4 == 1)
      {
        do
        {
          _H0 = *v13;
          __asm { FCVT            S0, H0 }
          *v20 = _S0;
          v13 += v10;
          v20 += v12;
          --v8;
        }
        while (v8);
LABEL_35:
        _H0 = *v13;
        __asm { FCVT            S0, H0 }
        *(float *)v20 = result;
        return result;
      }
      for (i = 0; i != v8; ++i)
      {
        v28 = v20;
        v29 = v13;
        v30 = v4 - 1;
        do
        {
          _H0 = *v29;
          __asm { FCVT            S0, H0 }
          *v28 = _S0;
          v29 += v9;
          v28 += v11;
          --v30;
        }
        while (v30);
        _H0 = *v29;
        __asm { FCVT            S0, H0 }
        *v28 = _S0;
        v13 += v10;
        v20 += v12;
      }
    }
    if (v4 != 1)
    {
      do
      {
        _H0 = *v13;
        __asm { FCVT            S0, H0 }
        *v20 = _S0;
        v13 += v9;
        v20 += v11;
        --v26;
      }
      while (v26);
    }
    goto LABEL_35;
  }
  return result;
}

uint64_t sub_2398BF010(uint64_t a1, uint64_t a2, double ***a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  double ***v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f32[0] = sub_2398BF2A8(&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398BF244(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float sub_2398BF2A8(double ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  __int16 *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  float *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  float result;
  uint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  char v29;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v25 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v26 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v24 = 0;
    v27 = v3 - 1;
    v28 = v9 | (v10 << 32);
    v11 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(__int16 **)(a2 + 24);
    }
    v17 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(float **)(a3 + 24);
    }
    v29 = 0;
    return sub_2398BF428(&v24, (uint64_t)&v29, a1, v11, v17);
  }
  return result;
}

float sub_2398BF428(_DWORD *a1, uint64_t a2, double ****a3, __int16 *a4, float *a5)
{
  int v5;
  int v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  float *v20;
  __int16 *v21;
  int v22;
  double v29;
  double v30;
  double v31;
  float v32;
  double v35;
  double v36;
  double v37;
  float v38;
  double **v39;
  double **v40;
  uint64_t v41;
  uint64_t v42;
  double v45;
  double v46;
  double v47;
  float v48;
  double v51;
  double v52;
  double v53;
  float v54;
  double v57;
  double v58;
  double v59;
  float result;

  v5 = a1[5];
  v6 = a1[2];
  if (!v5)
  {
    v40 = **a3;
    v39 = (*a3)[1];
    v9 = **v40;
    v10 = *v40[1];
    v11 = **v39;
    v12 = *v39[1];
    if (!v6)
      goto LABEL_25;
    goto LABEL_15;
  }
  v8 = **a3;
  v7 = (*a3)[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  v13 = a1[6];
  v14 = a1[7];
  if (v6)
  {
    v15 = 0;
    v16 = 2 * v13;
    v17 = 2 * a1[3];
    v18 = 4 * v14;
    v19 = 4 * a1[4];
    do
    {
      v20 = a5;
      v21 = a4;
      v22 = v6;
      do
      {
        _H6 = *v21;
        __asm { FCVT            D6, H6 }
        v29 = v10 * (_D6 - v9);
        v30 = fmax(v29, 0.0);
        if (v29 <= 1.0)
          v31 = v30;
        else
          v31 = 1.0;
        v32 = v11 + v12 * v31;
        *v20 = v32;
        v21 = (__int16 *)((char *)v21 + v17);
        v20 = (float *)((char *)v20 + v19);
        --v22;
      }
      while (v22);
      _H6 = *v21;
      __asm { FCVT            D6, H6 }
      v35 = v10 * (_D6 - v9);
      v36 = fmax(v35, 0.0);
      if (v35 <= 1.0)
        v37 = v36;
      else
        v37 = 1.0;
      v38 = v11 + v12 * v37;
      *v20 = v38;
      a4 = (__int16 *)((char *)a4 + v16);
      a5 = (float *)((char *)a5 + v18);
      ++v15;
    }
    while (v15 != v5);
LABEL_15:
    v41 = 2 * a1[3];
    v42 = 4 * a1[4];
    do
    {
      _H6 = *a4;
      __asm { FCVT            D6, H6 }
      v45 = v10 * (_D6 - v9);
      v46 = fmax(v45, 0.0);
      if (v45 <= 1.0)
        v47 = v46;
      else
        v47 = 1.0;
      v48 = v11 + v12 * v47;
      *a5 = v48;
      a4 = (__int16 *)((char *)a4 + v41);
      a5 = (float *)((char *)a5 + v42);
      --v6;
    }
    while (v6);
    goto LABEL_25;
  }
  do
  {
    _H6 = *a4;
    __asm { FCVT            D6, H6 }
    v51 = v10 * (_D6 - v9);
    v52 = fmax(v51, 0.0);
    if (v51 <= 1.0)
      v53 = v52;
    else
      v53 = 1.0;
    v54 = v11 + v12 * v53;
    *a5 = v54;
    a4 += v13;
    a5 += v14;
    --v5;
  }
  while (v5);
LABEL_25:
  _H4 = *a4;
  __asm { FCVT            D4, H4 }
  v57 = v10 * (_D4 - v9);
  v58 = fmax(v57, 0.0);
  if (v57 <= 1.0)
    v59 = v58;
  else
    v59 = 1.0;
  result = v11 + v12 * v59;
  *a5 = result;
  return result;
}

uint64_t sub_2398BF608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  double v6;
  __int16 *v15[4];
  __int16 v16;
  __int16 v17;
  float v18;
  int v19;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = -3.40282347e38;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 3.40282347e38;
    if (v3 < -3.40282347e38)
      v3 = -3.40282347e38;
    _S0 = v3;
    if (v4 <= 3.40282347e38)
      v6 = v4;
    else
      v6 = 3.40282347e38;
    _S1 = v6;
    v18 = _S1;
    v19 = LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    v17 = _H0;
    __asm { FCVT            H0, S1 }
  }
  else
  {
    v18 = 3.4028e38;
    v19 = -8388609;
    v17 = -1024;
    _H0 = 31744;
  }
  v16 = _H0;
  v15[0] = &v17;
  v15[1] = (__int16 *)&v19;
  v15[2] = &v16;
  v15[3] = (__int16 *)&v18;
  return sub_2398BF6D0(a1, a2, v15);
}

uint64_t sub_2398BF6D0(uint64_t a1, uint64_t a2, __int16 **a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  __int16 **v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398BF968(&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398BF904(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

__int16 ***sub_2398BF968(__int16 ***result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  __int16 ***v8;
  uint64_t v9;
  uint64_t v10;
  __int16 *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  float *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  char v28;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v24 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v25 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v23 = 0;
    v26 = v3 - 1;
    v27 = v9 | (v10 << 32);
    v11 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(__int16 **)(a2 + 24);
    }
    v17 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(float **)(a3 + 24);
    }
    v28 = 0;
    return (__int16 ***)sub_2398BFAE8(&v23, (uint64_t)&v28, v8, v11, v17);
  }
  return result;
}

_DWORD *sub_2398BFAE8(_DWORD *result, uint64_t a2, __int16 ***a3, __int16 *a4, float *a5)
{
  int v5;
  int v6;
  __int16 **v7;
  __int16 *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float *v16;
  float *v18;
  __int16 *v19;
  int v20;
  float *v21;
  uint64_t v37;
  uint64_t v38;
  float *v39;
  uint64_t v46;
  float *v47;
  float *v58;

  v5 = result[5];
  v6 = result[2];
  if (v5)
  {
    v7 = *a3;
    v8 = **a3;
    v9 = result[6];
    v10 = result[7];
    if (v6)
    {
      v11 = 0;
      v12 = 2 * v9;
      v13 = 2 * result[3];
      v14 = 4 * v10;
      v15 = 4 * result[4];
      while (1)
      {
        v18 = a5;
        v19 = a4;
        v20 = v6;
        do
        {
          _H0 = *v19;
          _H1 = *v8;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 < _S1)
          {
            v21 = (float *)v7[1];
LABEL_9:
            _S0 = *v21;
            goto LABEL_10;
          }
          _H1 = *v7[2];
          __asm { FCVT            S1, H1 }
          if (_S0 > _S1)
          {
            v21 = (float *)v7[3];
            goto LABEL_9;
          }
LABEL_10:
          *v18 = _S0;
          v19 = (__int16 *)((char *)v19 + v13);
          v18 = (float *)((char *)v18 + v15);
          --v20;
        }
        while (v20);
        _H0 = *v19;
        _H1 = *v8;
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        if (_S0 < _S1)
        {
          v16 = (float *)v7[1];
          goto LABEL_5;
        }
        _H1 = *v7[2];
        __asm { FCVT            S1, H1 }
        if (_S0 > _S1)
        {
          v16 = (float *)v7[3];
LABEL_5:
          _S0 = *v16;
        }
        *v18 = _S0;
        a4 = (__int16 *)((char *)a4 + v12);
        a5 = (float *)((char *)a5 + v14);
        if (++v11 == v5)
          goto LABEL_18;
      }
    }
    v46 = 2 * v9;
    while (1)
    {
      _H0 = *a4;
      _H1 = *v8;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 < _S1)
      {
        v47 = (float *)v7[1];
      }
      else
      {
        _H1 = *v7[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_29;
        v47 = (float *)v7[3];
      }
      _S0 = *v47;
LABEL_29:
      *a5 = _S0;
      a4 = (__int16 *)((char *)a4 + v46);
      a5 += v10;
      if (!--v5)
        goto LABEL_33;
    }
  }
  v7 = *a3;
  v8 = **a3;
LABEL_18:
  if (v6)
  {
    v37 = 2 * result[3];
    v38 = 4 * result[4];
    do
    {
      _H0 = *a4;
      _H1 = *v8;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 < _S1)
      {
        v39 = (float *)v7[1];
      }
      else
      {
        _H1 = *v7[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_22;
        v39 = (float *)v7[3];
      }
      _S0 = *v39;
LABEL_22:
      *a5 = _S0;
      a4 = (__int16 *)((char *)a4 + v37);
      a5 = (float *)((char *)a5 + v38);
      --v6;
    }
    while (v6);
  }
LABEL_33:
  _H0 = *a4;
  _H1 = *v8;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 < _S1)
  {
    v58 = (float *)v7[1];
LABEL_37:
    _S0 = *v58;
    goto LABEL_38;
  }
  _H1 = *v7[2];
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v58 = (float *)v7[3];
    goto LABEL_37;
  }
LABEL_38:
  *a5 = _S0;
  return result;
}

void sub_2398BFCE0(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398BFD04@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398BFDC8(a1, a2);
}

double sub_2398BFD10@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398C144C(a1, a2);
}

double sub_2398BFD1C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398C29B0(a1, a2);
}

double sub_2398BFD28@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398C3EC0(a1, a2);
}

uint64_t sub_2398BFDC8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[87];

  sub_2398BFFFC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v8);
  v11 = &off_250ADB628;
  sub_239423E50((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398BFED4(*(_QWORD *)a1, (uint64_t)&v11, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398BFE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398BFEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398BFED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250ADB3D0;
  sub_23949ED60(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF2B8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239709384(a2, (uint64_t)(a4 + 1));
}

void sub_2398BFFC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398BFFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398BFFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23941965C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398BFFFC(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 4;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398C013C((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397096A8((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398C0100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398C0128(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398C013C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 4);
  *a2 = &off_250ADD920;
  sub_239541EE0((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398C0254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398C0278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C028C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398C02D4(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398C029C(uint64_t **a1, uint64_t a2)
{
  return sub_2398C0DCC(**a1, (*a1)[1], a2);
}

uint64_t sub_2398C02AC(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398C0404(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398C02D4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  unsigned int v6;
  double v7;
  double v8;
  unsigned int v9;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  double v16;
  double v17;
  double v18;
  double v19;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v7 = *(double *)(a3 + 24);
      if (v7 < 0.0)
        v7 = 0.0;
      v6 = (int)v7;
      v8 = 255.0;
      if (*(double *)(a3 + 32) <= 255.0)
        v8 = *(double *)(a3 + 32);
      v9 = (int)v8;
      if (a4.n128_f32[0] != (float)v6 || v5 != (float)(int)v8)
        goto LABEL_15;
      return sub_2398C0404(a1, a2, (uint64_t)v15, a4);
    }
  }
  else
  {
    v5 = 1.0;
    a4.n128_u32[0] = 0;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v9 = 255;
  if (a4.n128_f32[0] != (float)v6 || v5 != (float)0xFFu)
  {
LABEL_15:
    v19 = a4.n128_f32[0];
    v17 = (double)v6;
    v18 = 1.0 / (v5 - a4.n128_f32[0]);
    a4.n128_f64[0] = (double)v9 - (double)v6;
    v16 = a4.n128_f64[0];
    v15[0] = &v19;
    v15[1] = &v18;
    v14[0] = &v17;
    v14[1] = &v16;
    v13[0] = v15;
    v13[1] = v14;
    return sub_2398C089C(a1, a2, (uint64_t)v13, a4);
  }
  return sub_2398C0404(a1, a2, (uint64_t)v15, a4);
}

uint64_t sub_2398C0404(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f32[0] = sub_2398C069C((uint64_t)&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C0638(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float sub_2398C069C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  int i;
  float *v29;
  int v30;
  _BYTE *v31;
  float result;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = v3 - 1;
    v10 = *(unsigned int *)(a2 + 40);
    v9 = *(unsigned int *)(a2 + 44);
    v11 = *(unsigned int *)(a3 + 40);
    v12 = *(unsigned int *)(a3 + 44);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v14 = v13 == 0;
    else
      v14 = 1;
    if (!v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v20 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_BYTE **)(a3 + 24);
    }
    v26 = v4 - 1;
    v27 = 4 * v10;
    if (v8)
    {
      if (v4 == 1)
      {
        do
        {
          *v20 = (int)*v13;
          v20 += v12;
          v13 += v9;
          --v8;
        }
        while (v8);
      }
      else
      {
        for (i = 0; i != v8; ++i)
        {
          v29 = v13;
          v30 = v4 - 1;
          v31 = v20;
          do
          {
            *v31 = (int)*v29;
            v31 += v11;
            v29 = (float *)((char *)v29 + v27);
            --v30;
          }
          while (v30);
          *v31 = (int)*v29;
          v13 += v9;
          v20 += v12;
        }
      }
    }
    if (v4 != 1)
    {
      do
      {
        *v20 = (int)*v13;
        v20 += v11;
        v13 = (float *)((char *)v13 + v27);
        --v26;
      }
      while (v26);
    }
    result = *v13;
    *v20 = (int)*v13;
  }
  return result;
}

uint64_t sub_2398C089C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f64[0] = sub_2398C0B34((uint64_t)&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C0AD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

double sub_2398C0B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int i;
  double result;
  uint64_t v25;
  int v26;
  unint64_t v27;
  unsigned int v28;
  uint64_t v29;
  char v30;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v26 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v27 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v9 | (v10 << 32);
    v11 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(float **)(a2 + 24);
    }
    v17 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(_BYTE **)(a3 + 24);
    }
    v30 = 0;
    if (v28)
    {
      for (i = 0; i < v28; ++i)
      {
        sub_2398C0CF8(&v25, (uint64_t)&v30, a1, v11, v17);
        v11 += v29;
        v17 += HIDWORD(v29);
      }
    }
    return sub_2398C0CF8(&v25, (uint64_t)&v30, a1, v11, v17);
  }
  return result;
}

double sub_2398C0CF8(_DWORD *a1, uint64_t a2, uint64_t a3, float *a4, _BYTE *a5)
{
  unsigned int v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double result;

  if (a1[2])
  {
    v5 = 0;
    do
    {
      v6 = (*a4 - ****(double ****)a3) * **(double **)(**(_QWORD **)a3 + 8);
      v7 = fmax(v6, 0.0);
      if (v6 <= 1.0)
        v8 = v7;
      else
        v8 = 1.0;
      *a5 = llround(***(double ***)(*(_QWORD *)a3 + 8) + v8 * **(double **)(*(_QWORD *)(*(_QWORD *)a3 + 8) + 8));
      a4 += a1[3];
      a5 += a1[4];
      ++v5;
    }
    while (v5 < a1[2]);
  }
  v9 = (*a4 - ****(double ****)a3) * **(double **)(**(_QWORD **)a3 + 8);
  v10 = fmax(v9, 0.0);
  if (v9 <= 1.0)
    v11 = v10;
  else
    v11 = 1.0;
  result = ***(double ***)(*(_QWORD *)a3 + 8) + v11 * **(double **)(*(_QWORD *)(*(_QWORD *)a3 + 8) + 8);
  *a5 = llround(result);
  return result;
}

uint64_t sub_2398C0DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  float *v8[4];
  uint64_t v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1132396544;
  }
  v8[0] = (float *)&v9 + 1;
  v8[1] = (float *)&v11;
  v8[2] = (float *)&v9;
  v8[3] = (float *)&v10;
  return sub_2398C0E80(a1, a2, v8);
}

uint64_t sub_2398C0E80(uint64_t a1, uint64_t a2, float **a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  float **v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398C1118(&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C10B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float ***sub_2398C1118(float ***result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  float ***v8;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  char v28;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v24 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v25 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v23 = 0;
    v26 = v3 - 1;
    v27 = v9 | (v10 << 32);
    v11 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(float **)(a2 + 24);
    }
    v17 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(_BYTE **)(a3 + 24);
    }
    v28 = 0;
    return (float ***)sub_2398C1298(&v23, (uint64_t)&v28, v8, v11, v17);
  }
  return result;
}

_DWORD *sub_2398C1298(_DWORD *result, uint64_t a2, float ***a3, float *a4, _BYTE *a5)
{
  unsigned int i;
  float *v6;
  _BYTE *v7;
  float *v8;
  unsigned int v9;
  float *v10;
  float **v11;
  float v12;
  float **v13;
  float v14;
  unsigned int j;
  float *v16;
  float **v17;
  float v18;
  float **v19;
  float v20;

  if (result[5])
  {
    for (i = 0; i < result[5]; ++i)
    {
      v7 = a5;
      v8 = a4;
      if (result[2])
      {
        v9 = 0;
        v8 = a4;
        v7 = a5;
        do
        {
          v11 = *a3;
          v12 = *v8;
          if (*v8 < ***a3)
          {
            v10 = v11[1];
          }
          else
          {
            if (v12 <= *v11[2])
            {
              LODWORD(v10) = (int)v12;
              goto LABEL_10;
            }
            v10 = v11[3];
          }
          LOBYTE(v10) = *(_BYTE *)v10;
LABEL_10:
          *v7 = (_BYTE)v10;
          v8 += result[3];
          v7 += result[4];
          ++v9;
        }
        while (v9 < result[2]);
      }
      v13 = *a3;
      v14 = *v8;
      if (*v8 < ***a3)
      {
        v6 = v13[1];
      }
      else
      {
        if (v14 <= *v13[2])
        {
          LODWORD(v6) = (int)v14;
          goto LABEL_5;
        }
        v6 = v13[3];
      }
      LOBYTE(v6) = *(_BYTE *)v6;
LABEL_5:
      *v7 = (_BYTE)v6;
      a4 += result[6];
      a5 += result[7];
    }
  }
  if (result[2])
  {
    for (j = 0; j < result[2]; ++j)
    {
      v17 = *a3;
      v18 = *a4;
      if (*a4 < ***a3)
      {
        v16 = v17[1];
      }
      else
      {
        if (v18 <= *v17[2])
        {
          LODWORD(v16) = (int)v18;
          goto LABEL_23;
        }
        v16 = v17[3];
      }
      LOBYTE(v16) = *(_BYTE *)v16;
LABEL_23:
      *a5 = (_BYTE)v16;
      a4 += result[3];
      a5 += result[4];
    }
  }
  v19 = *a3;
  v20 = *a4;
  if (*a4 >= ***a3)
  {
    if (v20 <= *v19[2])
      *a5 = (int)v20;
    else
      *a5 = *(_BYTE *)v19[3];
  }
  else
  {
    *a5 = *(_BYTE *)v19[1];
  }
  return result;
}

double sub_2398C144C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[87];

  sub_2398BFFFC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v9);
  v12 = &off_250AE4178;
  sub_2398AE894((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398C1558(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398C1520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C153C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C1558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE4080;
  sub_2397614BC(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF2D0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239761728(a2, (uint64_t)(a4 + 1));
}

void sub_2398C1644(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398C1658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398C166C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23972FCB8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C1680(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398C16C8(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398C1690(uint64_t **a1, uint64_t a2)
{
  return sub_2398C2298(**a1, (*a1)[1], a2);
}

uint64_t sub_2398C16A0(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398C17F4(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398C16C8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  double v6;
  int v7;
  double v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  double **v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v9 = -65536;
    goto LABEL_14;
  }
  v5 = 1.0;
  a4.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = *(double *)(a3 + 24);
  if (v6 < 0.0)
    v6 = 0.0;
  v7 = (int)v6;
  v8 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v8 = *(double *)(a3 + 32);
  v9 = v7 | ((int)v8 << 16);
LABEL_14:
  v10 = (unsigned __int16)v9;
  v11 = HIWORD(v9);
  if (a4.n128_f32[0] == (float)v10 && v5 == (float)v11)
    return sub_2398C17F4(a1, a2, (uint64_t)v16, a4);
  v20 = a4.n128_f32[0];
  v18 = (double)v10;
  v19 = 1.0 / (v5 - a4.n128_f32[0]);
  a4.n128_f64[0] = (double)v11 - (double)v10;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = (double **)v16;
  v14[1] = (double **)v15;
  return sub_2398C1CA0(a1, a2, v14, a4);
}

uint64_t sub_2398C17F4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f32[0] = sub_2398C1A8C((uint64_t)&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C1A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float sub_2398C1A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  int i;
  _WORD *v28;
  float *v29;
  int v30;
  float result;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 40);
    v10 = *(unsigned int *)(a2 + 44);
    v11 = *(unsigned int *)(a3 + 40);
    v12 = *(unsigned int *)(a3 + 44);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v14 = v13 == 0;
    else
      v14 = 1;
    if (!v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v20 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_WORD **)(a3 + 24);
    }
    v26 = v4 - 1;
    if (v8)
    {
      if (v4 == 1)
      {
        do
        {
          *v20 = (int)*v13;
          v13 += v10;
          v20 += v12;
          --v8;
        }
        while (v8);
LABEL_35:
        result = *v13;
        *v20 = (int)*v13;
        return result;
      }
      for (i = 0; i != v8; ++i)
      {
        v28 = v20;
        v29 = v13;
        v30 = v4 - 1;
        do
        {
          *v28 = (int)*v29;
          v29 += v9;
          v28 += v11;
          --v30;
        }
        while (v30);
        *v28 = (int)*v29;
        v13 += v10;
        v20 += v12;
      }
    }
    if (v4 != 1)
    {
      do
      {
        *v20 = (int)*v13;
        v13 += v9;
        v20 += v11;
        --v26;
      }
      while (v26);
    }
    goto LABEL_35;
  }
  return result;
}

uint64_t sub_2398C1CA0(uint64_t a1, uint64_t a2, double ***a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  double ***v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f64[0] = sub_2398C1F38(&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C1ED4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

double sub_2398C1F38(double ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  _WORD *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  double result;
  uint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  char v29;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v25 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v26 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v24 = 0;
    v27 = v3 - 1;
    v28 = v9 | (v10 << 32);
    v11 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(float **)(a2 + 24);
    }
    v17 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(_WORD **)(a3 + 24);
    }
    v29 = 0;
    return sub_2398C20B8(&v24, (uint64_t)&v29, a1, v11, v17);
  }
  return result;
}

double sub_2398C20B8(_DWORD *a1, uint64_t a2, double ****a3, float *a4, _WORD *a5)
{
  int v5;
  int v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _WORD *v20;
  float *v21;
  int v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double **v29;
  double **v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double result;

  v5 = a1[5];
  v6 = a1[2];
  if (!v5)
  {
    v30 = **a3;
    v29 = (*a3)[1];
    v9 = **v30;
    v10 = *v30[1];
    v11 = **v29;
    v12 = *v29[1];
    if (!v6)
      goto LABEL_25;
    goto LABEL_15;
  }
  v8 = **a3;
  v7 = (*a3)[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  v13 = a1[6];
  v14 = a1[7];
  if (v6)
  {
    v15 = 0;
    v16 = 4 * v13;
    v17 = 4 * a1[3];
    v18 = 2 * v14;
    v19 = 2 * a1[4];
    do
    {
      v20 = a5;
      v21 = a4;
      v22 = v6;
      do
      {
        v23 = v10 * (*v21 - v9);
        v24 = fmax(v23, 0.0);
        if (v23 <= 1.0)
          v25 = v24;
        else
          v25 = 1.0;
        *v20 = llround(v11 + v12 * v25);
        v21 = (float *)((char *)v21 + v17);
        v20 = (_WORD *)((char *)v20 + v19);
        --v22;
      }
      while (v22);
      v26 = v10 * (*v21 - v9);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      *v20 = llround(v11 + v12 * v28);
      a4 = (float *)((char *)a4 + v16);
      a5 = (_WORD *)((char *)a5 + v18);
      ++v15;
    }
    while (v15 != v5);
LABEL_15:
    v31 = 4 * a1[3];
    v32 = 2 * a1[4];
    do
    {
      v33 = v10 * (*a4 - v9);
      v34 = fmax(v33, 0.0);
      if (v33 <= 1.0)
        v35 = v34;
      else
        v35 = 1.0;
      *a5 = llround(v11 + v12 * v35);
      a4 = (float *)((char *)a4 + v31);
      a5 = (_WORD *)((char *)a5 + v32);
      --v6;
    }
    while (v6);
    goto LABEL_25;
  }
  do
  {
    v36 = v10 * (*a4 - v9);
    v37 = fmax(v36, 0.0);
    if (v36 <= 1.0)
      v38 = v37;
    else
      v38 = 1.0;
    *a5 = llround(v11 + v12 * v38);
    a4 += v13;
    a5 += v14;
    --v5;
  }
  while (v5);
LABEL_25:
  v39 = v10 * (*a4 - v9);
  v40 = fmax(v39, 0.0);
  if (v39 <= 1.0)
    v41 = v40;
  else
    v41 = 1.0;
  result = v11 + v12 * v41;
  *a5 = llround(result);
  return result;
}

uint64_t sub_2398C2298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  float *v8[4];
  uint64_t v9;
  __int16 v10;
  __int16 v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1199570688;
  }
  v8[0] = (float *)&v9 + 1;
  v8[1] = (float *)&v11;
  v8[2] = (float *)&v9;
  v8[3] = (float *)&v10;
  return sub_2398C2350(a1, a2, v8);
}

uint64_t sub_2398C2350(uint64_t a1, uint64_t a2, float **a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  float **v28;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_2398C25E8(&v28, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C2584(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

float ***sub_2398C25E8(float ***result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  float ***v8;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  _WORD *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  char v28;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v24 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v25 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v23 = 0;
    v26 = v3 - 1;
    v27 = v9 | (v10 << 32);
    v11 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(float **)(a2 + 24);
    }
    v17 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(_WORD **)(a3 + 24);
    }
    v28 = 0;
    return (float ***)sub_2398C2768(&v23, (uint64_t)&v28, v8, v11, v17);
  }
  return result;
}

_DWORD *sub_2398C2768(_DWORD *result, uint64_t a2, float ***a3, float *a4, _WORD *a5)
{
  int v5;
  int v6;
  float **v7;
  float v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float *v16;
  _WORD *v17;
  float *v18;
  int v19;
  float *v20;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  float *v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  float v29;
  float v30;

  v5 = result[5];
  v6 = result[2];
  if (!v5)
  {
    v7 = *a3;
    v8 = ***a3;
LABEL_19:
    if (!v6)
      goto LABEL_35;
    v23 = 4 * result[3];
    v24 = 2 * result[4];
    while (1)
    {
      while (1)
      {
        v26 = *a4;
        if (*a4 >= v8)
          break;
        v25 = v7[1];
LABEL_22:
        *a5 = *(_WORD *)v25;
        a4 = (float *)((char *)a4 + v23);
        a5 = (_WORD *)((char *)a5 + v24);
        if (!--v6)
          goto LABEL_35;
      }
      if (v26 > *v7[2])
      {
        v25 = v7[3];
        goto LABEL_22;
      }
      *a5 = (int)v26;
      a4 = (float *)((char *)a4 + v23);
      a5 = (_WORD *)((char *)a5 + v24);
      if (!--v6)
        goto LABEL_35;
    }
  }
  v7 = *a3;
  v8 = ***a3;
  v9 = result[6];
  v10 = result[7];
  if (v6)
  {
    v11 = 0;
    v12 = 4 * v9;
    v13 = 4 * result[3];
    v14 = 2 * v10;
    v15 = 2 * result[4];
    while (1)
    {
      v17 = a5;
      v18 = a4;
      v19 = v6;
      do
      {
        while (1)
        {
          v21 = *v18;
          if (*v18 >= v8)
            break;
          v20 = v7[1];
LABEL_8:
          *v17 = *(_WORD *)v20;
          v18 = (float *)((char *)v18 + v13);
          v17 = (_WORD *)((char *)v17 + v15);
          if (!--v19)
            goto LABEL_13;
        }
        if (v21 > *v7[2])
        {
          v20 = v7[3];
          goto LABEL_8;
        }
        *v17 = (int)v21;
        v18 = (float *)((char *)v18 + v13);
        v17 = (_WORD *)((char *)v17 + v15);
        --v19;
      }
      while (v19);
LABEL_13:
      v22 = *v18;
      if (*v18 < v8)
      {
        v16 = v7[1];
        goto LABEL_5;
      }
      if (v22 <= *v7[2])
      {
        *v17 = (int)v22;
        a4 = (float *)((char *)a4 + v12);
        a5 = (_WORD *)((char *)a5 + v14);
        if (++v11 == v5)
          goto LABEL_19;
        continue;
      }
      v16 = v7[3];
LABEL_5:
      *v17 = *(_WORD *)v16;
      a4 = (float *)((char *)a4 + v12);
      a5 = (_WORD *)((char *)a5 + v14);
      if (++v11 == v5)
        goto LABEL_19;
    }
  }
  v27 = 4 * v9;
  v28 = 2 * v10;
  do
  {
    while (1)
    {
      while (1)
      {
        v29 = *a4;
        if (*a4 >= v8)
          break;
        *a5 = *(_WORD *)v7[1];
        a4 = (float *)((char *)a4 + v27);
        a5 = (_WORD *)((char *)a5 + v28);
        if (!--v5)
          goto LABEL_35;
      }
      if (v29 > *v7[2])
        break;
      *a5 = (int)v29;
      a4 = (float *)((char *)a4 + v27);
      a5 = (_WORD *)((char *)a5 + v28);
      if (!--v5)
        goto LABEL_35;
    }
    *a5 = *(_WORD *)v7[3];
    a4 = (float *)((char *)a4 + v27);
    a5 = (_WORD *)((char *)a5 + v28);
    --v5;
  }
  while (v5);
LABEL_35:
  v30 = *a4;
  if (*a4 >= v8)
  {
    if (v30 <= *v7[2])
      *a5 = (int)v30;
    else
      *a5 = *(_WORD *)v7[3];
  }
  else
  {
    *a5 = *(_WORD *)v7[1];
  }
  return result;
}

double sub_2398C29B0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[87];

  sub_2398BFFFC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v9);
  v12 = &off_250AE5E18;
  sub_2398B08FC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398C2ABC(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398C2A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C2AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C2ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1970;
  sub_2397622C4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF2E8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239762530(a2, (uint64_t)(a4 + 1));
}

void sub_2398C2BA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398C2BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398C2BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239643AF4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C2BE4(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398C2C2C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398C2BF4(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398C381C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398C2C04(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398C2D74(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398C2C2C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  float v5;
  double v6;
  unsigned __int16 v11;
  double v12;
  unsigned int v14;
  double v20;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    _Q0.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      _Q0.n128_u64[0] = *(_QWORD *)a3;
    _Q0.n128_f32[0] = _Q0.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v5 = 1.0;
  _Q0.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v6 = *(double *)(a3 + 24);
  _S2 = v6;
  __asm { FCVT            H2, S2 }
  v11 = LOWORD(_S2);
  v12 = 65504.0;
  if (*(double *)(a3 + 32) <= 65504.0)
    v12 = *(double *)(a3 + 32);
  _S2 = v12;
  __asm { FCVT            H2, S2 }
  v14 = v11 | (LOWORD(_S2) << 16);
LABEL_14:
  _H2 = v14;
  _S3 = HIWORD(v14);
  __asm
  {
    FCVT            S4, H2
    FCVT            S5, H3
  }
  if (_Q0.n128_f32[0] == _S4 && v5 == _S5)
    return sub_2398C2D74(a1, a2, (uint64_t)v25, _Q0);
  v29 = _Q0.n128_f32[0];
  v20 = 1.0 / (v5 - _Q0.n128_f32[0]);
  __asm { FCVT            D0, H2 }
  v27 = _Q0.n128_u64[0];
  v28 = v20;
  __asm { FCVT            D1, H3 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_2398C3218(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_2398C2D74(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_u64[0] = sub_2398C300C((uint64_t)&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C2FA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

__int16 sub_2398C300C@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  BOOL v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int i;
  _WORD *v30;
  int *v31;
  int v32;
  __int16 result;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    _ZF = v3 == 0;
  else
    _ZF = 1;
  if (!_ZF)
  {
    v8 = v3 - 1;
    v10 = *(unsigned int *)(a2 + 40);
    v9 = *(unsigned int *)(a2 + 44);
    v12 = *(unsigned int *)(a3 + 40);
    v11 = *(unsigned int *)(a3 + 44);
    v13 = *(int **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v14 = v13 == 0;
    else
      v14 = 1;
    if (!v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v13 = *(int **)(a2 + 24);
    }
    v20 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_WORD **)(a3 + 24);
    }
    v26 = v4 - 1;
    v27 = 4 * v10;
    v28 = 2 * v12;
    if (v8)
    {
      if (v4 == 1)
      {
        do
        {
          _S0 = *v13;
          __asm { FCVT            H0, S0 }
          *v20 = _S0;
          v13 += v9;
          v20 += v11;
          --v8;
        }
        while (v8);
      }
      else
      {
        for (i = 0; i != v8; ++i)
        {
          v30 = v20;
          v31 = v13;
          v32 = v4 - 1;
          do
          {
            _S0 = *v31;
            __asm { FCVT            H0, S0 }
            *v30 = _S0;
            v31 = (int *)((char *)v31 + v27);
            v30 = (_WORD *)((char *)v30 + v28);
            --v32;
          }
          while (v32);
          _S0 = *v31;
          __asm { FCVT            H0, S0 }
          *v30 = _S0;
          v13 += v9;
          v20 += v11;
        }
      }
    }
    if (v4 != 1)
    {
      do
      {
        _S0 = *v13;
        __asm { FCVT            H0, S0 }
        *v20 = _S0;
        v13 = (int *)((char *)v13 + v27);
        v20 = (_WORD *)((char *)v20 + v28);
        --v26;
      }
      while (v26);
    }
    _S0 = *v13;
    __asm { FCVT            H0, S0 }
    *v20 = result;
  }
  return result;
}

uint64_t sub_2398C3218(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f64[0] = sub_2398C34B0((uint64_t)&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C344C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

double sub_2398C34B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  _WORD *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  double result;
  uint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  char v29;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v25 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v26 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v24 = 0;
    v27 = v3 - 1;
    v28 = v9 | (v10 << 32);
    v11 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(float **)(a2 + 24);
    }
    v17 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(_WORD **)(a3 + 24);
    }
    v29 = 0;
    *(_QWORD *)&result = sub_2398C3630(&v24, (uint64_t)&v29, a1, v11, v17);
  }
  return result;
}

__int16 sub_2398C3630@<H0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, float *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  double v6;
  double v7;
  double v8;
  _WORD *v14;
  float *v15;
  unsigned int v16;
  double v17;
  double v18;
  double v19;
  unsigned int v21;
  double v22;
  double v23;
  double v24;
  double v26;
  double v27;
  double v28;
  __int16 result;

  if (a1[5])
  {
    v5 = 0;
    do
    {
      v14 = a5;
      v15 = a4;
      if (a1[2])
      {
        v16 = 0;
        v15 = a4;
        v14 = a5;
        do
        {
          v17 = (*v15 - ****(double ****)a3) * **(double **)(**(_QWORD **)a3 + 8);
          v18 = fmax(v17, 0.0);
          if (v17 <= 1.0)
            v19 = v18;
          else
            v19 = 1.0;
          _S2 = ***(double ***)(*(_QWORD *)a3 + 8) + v19 * **(double **)(*(_QWORD *)(*(_QWORD *)a3 + 8) + 8);
          __asm { FCVT            H2, S2 }
          *v14 = LOWORD(_S2);
          v15 += a1[3];
          v14 += a1[4];
          ++v16;
        }
        while (v16 < a1[2]);
      }
      v6 = (*v15 - ****(double ****)a3) * **(double **)(**(_QWORD **)a3 + 8);
      v7 = fmax(v6, 0.0);
      if (v6 <= 1.0)
        v8 = v7;
      else
        v8 = 1.0;
      _S2 = ***(double ***)(*(_QWORD *)a3 + 8) + v8 * **(double **)(*(_QWORD *)(*(_QWORD *)a3 + 8) + 8);
      __asm { FCVT            H2, S2 }
      *v14 = LOWORD(_S2);
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  if (a1[2])
  {
    v21 = 0;
    do
    {
      v22 = (*a4 - ****(double ****)a3) * **(double **)(**(_QWORD **)a3 + 8);
      v23 = fmax(v22, 0.0);
      if (v22 <= 1.0)
        v24 = v23;
      else
        v24 = 1.0;
      _S2 = ***(double ***)(*(_QWORD *)a3 + 8) + v24 * **(double **)(*(_QWORD *)(*(_QWORD *)a3 + 8) + 8);
      __asm { FCVT            H2, S2 }
      *a5 = LOWORD(_S2);
      a4 += a1[3];
      a5 += a1[4];
      ++v21;
    }
    while (v21 < a1[2]);
  }
  v26 = (*a4 - ****(double ****)a3) * **(double **)(**(_QWORD **)a3 + 8);
  v27 = fmax(v26, 0.0);
  if (v26 <= 1.0)
    v28 = v27;
  else
    v28 = 1.0;
  _S0 = ***(double ***)(*(_QWORD *)a3 + 8) + v28 * **(double **)(*(_QWORD *)(*(_QWORD *)a3 + 8) + 8);
  __asm { FCVT            H0, S0 }
  *a5 = result;
  return result;
}

uint64_t sub_2398C381C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  double v11;
  float *v15[4];
  unsigned __int32 v16;
  int v17;
  __int16 v18;
  __int16 v19;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    _Q0.n128_u64[0] = *(_QWORD *)a3;
    if (!*(_BYTE *)(a3 + 8))
      _Q0.n128_f64[0] = -65504.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65504.0;
    if (_Q0.n128_f64[0] < -65504.0)
      _Q0.n128_f64[0] = -65504.0;
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    if (v4 <= 65504.0)
      v11 = v4;
    else
      v11 = 65504.0;
    _S1 = v11;
    v19 = _H0;
    __asm { FCVT            H1, S1 }
    v18 = LOWORD(_S1);
    __asm
    {
      FCVT            S2, H0
      FCVT            S0, H1
    }
    v16 = _Q0.n128_u32[0];
    v17 = _S2;
  }
  else
  {
    v19 = -1025;
    v18 = 31743;
    v17 = -947920896;
    v16 = 1199562752;
  }
  v15[0] = (float *)&v17;
  v15[1] = (float *)&v19;
  v15[2] = (float *)&v16;
  v15[3] = (float *)&v18;
  return sub_2398C38F4(a1, a2, v15, _Q0);
}

uint64_t sub_2398C38F4(uint64_t a1, uint64_t a2, float **a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  float **v29;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f64[0] = sub_2398C3B8C(&v29, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C3B28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

double sub_2398C3B8C(float ***a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  _WORD *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  double result;
  uint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  char v29;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v25 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v26 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v24 = 0;
    v27 = v3 - 1;
    v28 = v9 | (v10 << 32);
    v11 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(float **)(a2 + 24);
    }
    v17 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(_WORD **)(a3 + 24);
    }
    v29 = 0;
    *(_QWORD *)&result = sub_2398C3D0C(&v24, (uint64_t)&v29, a1, v11, v17);
  }
  return result;
}

__int16 sub_2398C3D0C@<H0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, float ***a3@<X2>, float *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int i;
  float *v6;
  _WORD *v8;
  float *v9;
  unsigned int v10;
  float *v11;
  float **v13;
  float **v19;
  unsigned int j;
  float *v22;
  float **v24;
  float **v26;
  float *v28;
  __int16 result;
  float *v30;

  if (a1[5])
  {
    for (i = 0; i < a1[5]; ++i)
    {
      v8 = a5;
      v9 = a4;
      if (a1[2])
      {
        v10 = 0;
        v9 = a4;
        v8 = a5;
        do
        {
          v13 = *a3;
          _S0 = *v9;
          if (*v9 < ***a3)
          {
            v11 = v13[1];
          }
          else
          {
            if (_S0 <= *v13[2])
            {
              __asm { FCVT            H0, S0 }
              goto LABEL_10;
            }
            v11 = v13[3];
          }
          _H0 = *(_WORD *)v11;
LABEL_10:
          *v8 = _H0;
          v9 += a1[3];
          v8 += a1[4];
          ++v10;
        }
        while (v10 < a1[2]);
      }
      v19 = *a3;
      _S0 = *v9;
      if (*v9 < ***a3)
      {
        v6 = v19[1];
      }
      else
      {
        if (_S0 <= *v19[2])
        {
          __asm { FCVT            H0, S0 }
          goto LABEL_5;
        }
        v6 = v19[3];
      }
      _H0 = *(_WORD *)v6;
LABEL_5:
      *v8 = _H0;
      a4 += a1[6];
      a5 += a1[7];
    }
  }
  if (a1[2])
  {
    for (j = 0; j < a1[2]; ++j)
    {
      v24 = *a3;
      _S0 = *a4;
      if (*a4 < ***a3)
      {
        v22 = v24[1];
      }
      else
      {
        if (_S0 <= *v24[2])
        {
          __asm { FCVT            H0, S0 }
          goto LABEL_23;
        }
        v22 = v24[3];
      }
      _H0 = *(_WORD *)v22;
LABEL_23:
      *a5 = _H0;
      a4 += a1[3];
      a5 += a1[4];
    }
  }
  v26 = *a3;
  _S0 = *a4;
  if (*a4 >= ***a3)
  {
    if (_S0 <= *v26[2])
    {
      __asm { FCVT            H0, S0 }
      *a5 = result;
    }
    else
    {
      v30 = v26[3];
      result = *(_WORD *)v30;
      *a5 = *(_WORD *)v30;
    }
  }
  else
  {
    v28 = v26[1];
    result = *(_WORD *)v28;
    *a5 = *(_WORD *)v28;
  }
  return result;
}

double sub_2398C3EC0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[87];

  sub_2398BFFFC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 32, v9);
  v12 = &off_250ADD920;
  sub_239541EE0((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398C4004(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2397096A8((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398C3FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C3FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C3FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C4004(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 49))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 49))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_2395795F0(a2, &v15);
  sub_2398C41A8(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C4144(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2398C41A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 32);
  v5 = *(_DWORD *)(a1 + 44);
  if (v5 == *(_DWORD *)(a2 + 76) && v5 == v4)
  {
    v8 = *(unsigned int *)(a1 + 36) * (unint64_t)v4;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 80) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v16 = *(unsigned int *)(a1 + 32);
    return (void *)sub_2398C4300(a1, a2, &v16);
  }
  return result;
}

uint64_t sub_2398C4300(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 49))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_2395795F0(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36))
    sub_2398C44C4(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C4460(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2398C44C4(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  _OWORD v23[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v19 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 76);
    v20 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 72) << 32);
    v18 = 0;
    v21 = v3 - 1;
    v22 = v9 | (v10 << 32);
    v11 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(char **)(a2 + 24);
    }
    v17 = *(char **)(a3 + 32);
    if (*(_BYTE *)(a3 + 80))
    {
      if (v17)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a3 + 8) + 88))(*(_QWORD *)(a3 + 8), 1, "unknown location");
        v17 = *(char **)(a3 + 32);
      }
    }
    memset(v23, 0, sizeof(v23));
    return (uint64_t *)sub_239717CA4(&v18, (uint64_t)v23, v8, v11, v17);
  }
  return result;
}

void sub_2398C4600(uint64_t a1, int a2)
{
  sub_2398C46C0(a2);
}

void sub_2398C4630(uint64_t a1, int a2)
{
  sub_2398C9DE8(a2);
}

void sub_2398C4660(uint64_t a1, int a2)
{
  sub_2398CF204(a2);
}

void sub_2398C4690(uint64_t a1, int a2)
{
  sub_2398D3AB0(a2);
}

void sub_2398C46C0(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398C46E4@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398C47C8(a1, a2);
}

double sub_2398C46F0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398C4FD4(a1, a2);
}

double sub_2398C46FC@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398C55E8(a1, a2);
}

double sub_2398C4708@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398C6508(a1, a2);
}

double sub_2398C4714@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398C77FC(a1, a2);
}

double sub_2398C4720@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398C8AB0(a1, a2);
}

double sub_2398C472C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398C91FC(a1, a2);
}

double sub_2398C4738@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398C9948(a1, a2);
}

uint64_t sub_2398C47C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398C49D4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEBF48;
  sub_2397E4B58((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398C48DC(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398C48A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C48C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C48DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEADB0;
  sub_2397E5C8C(a2, &v11);
  sub_2398C4C64(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397E5EF8(a2, (uint64_t)(a3 + 1));
}

void sub_2398C4998(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398C49AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BC484((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398C49C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398C49D4(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 25;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398C4B14((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_23970AF38((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398C4AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398C4B00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398C4B14(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 25);
  *a2 = &off_250AE3B18;
  sub_2397E61D4((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398C4C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398C4C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C4C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_2398C4E38(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C4E14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398C4E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397E5638((unsigned int *)&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_2397E5A94((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C4FB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398C4FD4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398C49D4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3B18;
  sub_2397E61D4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398C5120(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_23970AF38((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398C50C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C50E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C5104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C5120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2398C52C4(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C5260(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2398C52C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2398C541C(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2398C541C(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397CB3C8(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C5584(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2398C55E8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398C49D4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC468;
  sub_2397F349C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398C56FC(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398C56C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C56E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C56FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB570;
  sub_2397F412C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF300[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397F4398(a2, (uint64_t)(a4 + 1));
}

void sub_2398C57E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398C57FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C5810(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C356C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C5824(uint64_t **a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  return sub_2398C586C(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7);
}

uint64_t sub_2398C5834(uint64_t **a1, uint64_t a2)
{
  return sub_2398C5EE4(**a1, (*a1)[1], a2);
}

uint64_t sub_2398C5844(uint64_t **a1)
{
  char v2;

  return sub_2398C5994(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_2398C586C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  unsigned int v8;
  double v9;
  double v10;
  unsigned int v11;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;

  v8 = *(unsigned __int8 *)(a3 + 16);
  if (!*(_BYTE *)(a3 + 16))
  {
    v11 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    LOWORD(v15) = 0;
    v16 = 0xFFFF;
    if (v8)
      goto LABEL_17;
    goto LABEL_15;
  }
  v9 = *(double *)a3;
  a6 = 0.0;
  if (*(double *)a3 < 0.0)
    v9 = 0.0;
  v8 = (int)v9;
  v10 = 255.0;
  if (*(double *)(a3 + 8) <= 255.0)
    v10 = *(double *)(a3 + 8);
  v11 = (int)v10;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  a6 = 0.0;
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
  v16 = HIWORD(v15);
  if (v8 != (unsigned __int16)v15)
    goto LABEL_17;
LABEL_15:
  if (v16 == v11)
    return sub_2398C5994(a1, a2, (uint64_t)v20);
LABEL_17:
  v24 = (double)v8;
  v23 = 1.0 / ((double)v11 - (double)v8);
  v20[0] = &v24;
  v20[1] = &v23;
  v19[0] = &v22;
  v19[1] = &v21;
  v18[0] = v20;
  v18[1] = v19;
  return sub_2398C5C3C(a1, a2, (uint64_t)v18, (double)v16 - (double)(unsigned __int16)v15, (double)(unsigned __int16)v15, a6, a7, a8);
}

uint64_t sub_2398C5994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397E88F0((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C5BD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398C5C3C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double ****v34;

  v11 = *(_QWORD *)(a1 + 8);
  if (!v11)
    goto LABEL_17;
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  do
    v15 = __ldaxr(p_shared_owners);
  while (__stlxr(v15 - 1, p_shared_owners));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  v11 = *(_QWORD *)(a1 + 8);
  v16 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v16)
    goto LABEL_43;
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (v19)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v32 = 0;
    v20 = *(_QWORD *)(a2 + 8);
    if (!v20)
      goto LABEL_33;
LABEL_18:
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
    v20 = *(_QWORD *)(a2 + 8);
    v25 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v25)
      goto LABEL_29;
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
    do
      v28 = __ldaxr(v26);
    while (__stlxr(v28 - 1, v26));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v20 + 96))(&v31, v20, 1);
    v33 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
  std::__shared_weak_count::__release_weak(v16);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v11 + 96))(&v32, v11, 0);
  v20 = *(_QWORD *)(a2 + 8);
  if (v20)
    goto LABEL_18;
LABEL_33:
  v31 = 0;
  v33 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v34 = (double ****)&v33;
    sub_2397E8E14(&v34, a1, a2, a4, a5, a6, a7, a8);
  }
LABEL_37:
  v29 = v31;
  v31 = 0;
  if (v29)
    (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
  result = v32;
  v32 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C5E80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398C5EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  __int16 *v8;
  __int16 *v9;
  char *v10;
  __int16 *v11;
  char v12;
  char v13;
  __int16 v14;
  __int16 v15;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    if ((int)v6 <= 0xFF)
    {
      v15 = v5;
      v14 = (int)v6;
      v13 = v5;
      v12 = (int)v6;
      v8 = (__int16 *)&v13;
      v9 = &v15;
      v10 = &v12;
      v11 = &v14;
      return sub_2398C5FB8(a1, a2, (uint64_t)&v8);
    }
    v15 = v5;
    LOBYTE(v14) = v5;
  }
  else
  {
    v15 = 0;
    LOBYTE(v14) = 0;
  }
  v8 = &v14;
  v9 = &v15;
  return sub_2398C6260(a1, a2, (uint64_t)&v8);
}

uint64_t sub_2398C5FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_2397E9648(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C61FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398C6260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_2397E9CC4(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C64A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398C6508@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398C49D4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC6A0;
  sub_2397FEB58((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398C661C(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398C65E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C6600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C661C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB668;
  sub_2397FF80C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF318[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397FFA78(a2, (uint64_t)(a4 + 1));
}

void sub_2398C6708(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398C671C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C6730(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C41B4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C6744(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398C6858(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398C6754(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2398C6EEC((uint64_t)v13, 1006632960, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 1.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2398C6EEC((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_2398C6830(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398C699C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398C6858(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  unsigned int v4;
  double v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  unint64_t v24;
  unint64_t v25;
  double v26;
  double v27;

  v4 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v5 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v5 = 0.0;
    v4 = (int)v5;
    _Q0.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = (int)_Q0.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = 255;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm
  {
    FCVT            S3, H0
    FCVT            S3, H1
  }
  _ZF = _ZF && _S3 == (float)v6;
  if (_ZF)
    return sub_2398C699C(a1, a2, (uint64_t)v23, _Q0);
  v27 = (double)v4;
  __asm { FCVT            D0, H0 }
  v25 = _Q0.n128_u64[0];
  v26 = 1.0 / ((double)v6 - (double)v4);
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v24 = _Q0.n128_u64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_2398C6C44(a1, a2, (uint64_t)v21, _Q0);
}

uint64_t sub_2398C699C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397EB274((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C6BE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398C6C44(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397EB8E4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C6E88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398C6EEC(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  char *v23;
  __int16 *v24;
  char v25;
  char v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 255.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      LOBYTE(v27) = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2398C72AC(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 255.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      LOBYTE(v27) = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2398C7554(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_2398C699C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = (__int16 *)&v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_2398C7004(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_2398C7004(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397EC274(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C7248(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398C72AC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397ECAA8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C74F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398C7554(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397ED154(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C7798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398C77FC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398C49D4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC8D8;
  sub_239808068((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398C7910(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398C78D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C78F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C7910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1E48;
  sub_239808CE0(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF330[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239808F4C(a2, (uint64_t)(a4 + 1));
}

void sub_2398C79FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398C7A10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C7A24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643FDC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C7A38(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_2398C7B38(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_2398C7A48(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  float v5;
  _QWORD v7[5];
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[2];

  v3 = (*a1)[1];
  v10[0] = **a1;
  v10[1] = v3;
  v9[0] = v10[0];
  v9[1] = v3;
  v8[0] = v10[0];
  v8[1] = v3;
  v7[0] = v10;
  v7[1] = v9;
  v7[2] = v8;
  v7[3] = v10[0];
  v7[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = 0.0;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 1.0;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    v5 = v4;
    return sub_2398C81B8((uint64_t)v7, a3, v5);
  }
  else
  {
    a3.n128_u32[0] = 0;
    return sub_2398C81B8((uint64_t)v7, a3, 1.0);
  }
}

uint64_t sub_2398C7B10(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398C7C68(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398C7B38(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  unsigned int v12;
  double v13;
  float v14;
  double v16;
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  unint64_t v22;
  double v23;
  uint64_t v24;
  double v25;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v11 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v11 = 0.0;
    v10 = (int)v11;
    a4.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v12 = (int)a4.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      a4.n128_u64[0] = 0xC7EFFFFFE0000000;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
      a4.n128_f32[0] = a4.n128_f64[0];
      v13 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v13 = *(double *)(a3 + 32);
      v14 = v13;
      if (a4.n128_f32[0] != (float)v10 || v14 != (float)v12)
        goto LABEL_15;
      return sub_2398C7C68(a1, a2, (uint64_t)v21, a4);
    }
  }
  else
  {
    v12 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v14 = 1.0;
  a4.n128_u32[0] = 0;
  if ((float)v10 != 0.0 || 1.0 != (float)v12)
  {
LABEL_15:
    v25 = (double)v10;
    v23 = a4.n128_f32[0];
    v16 = v14;
    a4.n128_f64[0] = v16 - a4.n128_f32[0];
    v22 = a4.n128_u64[0];
    v21[0] = &v25;
    v21[1] = &v24;
    v20[0] = &v23;
    v20[1] = &v22;
    v19[0] = v21;
    v19[1] = v20;
    return sub_2398C7F10(a1, a2, (uint64_t)v19, a4, v16, 1.0 / ((double)v12 - (double)v10), 1.0, a8, a9, a10);
  }
  return sub_2398C7C68(a1, a2, (uint64_t)v21, a4);
}

uint64_t sub_2398C7C68(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2397EE744((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C7EAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398C7F10(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double ****v36;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_43;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v36 = (double ****)&v35;
    a4.n128_f32[0] = sub_2397EED04(&v36, a1, a2, a4.n128_f32[0], a5, a6, a7, a8, a9, a10);
  }
LABEL_37:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C8154(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398C81B8(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  char *v17;
  float *v18;
  char v19;
  char v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 255.0;
    v3 = a3 >= 255.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOBYTE(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_2398C8560(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1132396544;
      if (a3 <= 255.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOBYTE(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_2398C8808(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_2398C7C68(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_2398C82B8(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_2398C82B8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397EF464(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C84FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398C8560(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397EFCB4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C87A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398C8808(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397F0328(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398C8A4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398C8AB0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398C49D4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0988;
  sub_2396214F4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398C8BC4(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398C8B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C8BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C8BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE1760;
  sub_239763EA8(a2, &v11);
  sub_2398C8CB8(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_239709850(a2, (uint64_t)(a3 + 1));
}

void sub_2398C8C7C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398C8C90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643A24((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398C8CA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C8CB8(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2398C8F50(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C8EEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2398C8F50(_DWORD *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t)result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_DWORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_DWORD **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2398C9138(&v26, v33, v10, v13, v19);
        v13 = (_DWORD *)((char *)v13 + v32);
        v19 += HIDWORD(v32);
      }
    }
    return sub_2398C9138(&v26, v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2398C9138(_DWORD *result, _QWORD *a2, uint64_t a3, _DWORD *a4, uint64_t a5)
{
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  *a2 = a4;
  a2[2] = a5;
  if (result[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v6 = *a4 >> 8;
      v7 = HIWORD(*a4);
      v8 = HIBYTE(*a4);
      *(_BYTE *)(a5 + 2) = *a4;
      *(_BYTE *)(a2[2] + 1) = v6;
      *(_BYTE *)a2[2] = v7;
      *(_BYTE *)(a2[2] + 3) = v8;
      a4 = (_DWORD *)((char *)a4 + result[6]);
      a5 += result[7];
      ++v5;
    }
    while (v5 < result[5]);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v9 = *a4 >> 8;
  v10 = HIWORD(*a4);
  v11 = HIBYTE(*a4);
  *(_BYTE *)(a5 + 2) = *a4;
  *(_BYTE *)(a2[2] + 1) = v9;
  *(_BYTE *)a2[2] = v10;
  *(_BYTE *)(a2[2] + 3) = v11;
  return result;
}

double sub_2398C91FC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398C49D4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6538;
  sub_2397E44CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398C9310(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398C92D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C92F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C9310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE56F0;
  sub_239765EEC(a2, &v11);
  sub_2398C9404(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_239766158(a2, (uint64_t)(a3 + 1));
}

void sub_2398C93C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398C93DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239758F54((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398C93F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C9404(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2398C969C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C9638(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2398C969C(_DWORD *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t)result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_DWORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_DWORD **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2398C9884(&v26, v33, v10, v13, v19);
        v13 = (_DWORD *)((char *)v13 + v32);
        v19 += HIDWORD(v32);
      }
    }
    return sub_2398C9884(&v26, v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2398C9884(_DWORD *result, _QWORD *a2, uint64_t a3, _DWORD *a4, uint64_t a5)
{
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  *a2 = a4;
  a2[2] = a5;
  if (result[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v6 = *a4 >> 8;
      v7 = HIWORD(*a4);
      v8 = HIBYTE(*a4);
      *(_BYTE *)(a5 + 1) = *a4;
      *(_BYTE *)(a2[2] + 2) = v6;
      *(_BYTE *)(a2[2] + 3) = v7;
      *(_BYTE *)a2[2] = v8;
      a4 = (_DWORD *)((char *)a4 + result[6]);
      a5 += result[7];
      ++v5;
    }
    while (v5 < result[5]);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v9 = *a4 >> 8;
  v10 = HIWORD(*a4);
  v11 = HIBYTE(*a4);
  *(_BYTE *)(a5 + 1) = *a4;
  *(_BYTE *)(a2[2] + 2) = v9;
  *(_BYTE *)(a2[2] + 3) = v10;
  *(_BYTE *)a2[2] = v11;
  return result;
}

double sub_2398C9948@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398C49D4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3A00;
  sub_2397F0C3C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398C9A5C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398C9A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C9A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C9A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE5878;
  sub_23976622C(a2, &v11);
  sub_2398C9B50(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_23970A418(a2, (uint64_t)(a3 + 1));
}

void sub_2398C9B14(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398C9B28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975A724((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398C9B3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398C9B50(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E7244(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398C9D84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2398C9DE8(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398C9E0C@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398C9EF0(a1, a2);
}

double sub_2398C9E18@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398CA6FC(a1, a2);
}

double sub_2398C9E24@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398CB350(a1, a2);
}

double sub_2398C9E30@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398CB964(a1, a2);
}

double sub_2398C9E3C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398CCC68(a1, a2);
}

double sub_2398C9E48@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398CDF1C(a1, a2);
}

double sub_2398C9E54@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398CE63C(a1, a2);
}

double sub_2398C9E60@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398CED64(a1, a2);
}

uint64_t sub_2398C9EF0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398CA0FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEC370;
  sub_2397F1DD8((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398CA004(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398C9FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398C9FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CA004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEAEA8;
  sub_2397F2F2C(a2, &v11);
  sub_2398CA38C(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397F3198(a2, (uint64_t)(a3 + 1));
}

void sub_2398CA0C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398CA0D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BD058((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398CA0E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398CA0FC(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 26;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398CA23C((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397F4398((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398CA200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398CA228(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398CA23C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 26);
  *a2 = &off_250AEC468;
  sub_2397F349C((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398CA354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398CA378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CA38C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_2398CA560(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398CA53C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398CA560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397F28B8(&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_2397F2D14((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398CA6D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398CA6FC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398CA0FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3B18;
  sub_2397E61D4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398CA810(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398CA7D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398CA7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CA810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1878;
  sub_239763C3C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF348[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970AF38(a2, (uint64_t)(a4 + 1));
}

void sub_2398CA8FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398CA910(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398CA924(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643A8C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CA938(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398CA980(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398CA948(uint64_t **a1, uint64_t a2)
{
  return sub_2398CAFF8(**a1, (*a1)[1], a2);
}

uint64_t sub_2398CA958(uint64_t **a1)
{
  char v2;

  return sub_2398CAAA8(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_2398CA980(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  int v5;
  double v6;
  unsigned int v7;
  unsigned int v8;
  double v9;
  double v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (!*(_BYTE *)(a3 + 16))
  {
    v7 = -65536;
    v8 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    v11 = 255;
    v12 = HIWORD(v7);
    if (v8 != (unsigned __int16)v7)
      goto LABEL_17;
    goto LABEL_15;
  }
  v4 = *(double *)a3;
  if (*(double *)a3 < 0.0)
    v4 = 0.0;
  v5 = (int)v4;
  v6 = 65535.0;
  if (*(double *)(a3 + 8) <= 65535.0)
    v6 = *(double *)(a3 + 8);
  v7 = v5 | ((int)v6 << 16);
  v8 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v9 = *(double *)(a3 + 24);
  if (v9 < 0.0)
    v9 = 0.0;
  v8 = (int)v9;
  v10 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v10 = *(double *)(a3 + 32);
  v11 = (int)v10;
  v12 = HIWORD(v7);
  if (v8 != (unsigned __int16)v7)
    goto LABEL_17;
LABEL_15:
  if (v12 == v11)
    return sub_2398CAAA8(a1, a2, (uint64_t)v16);
LABEL_17:
  v20 = (double)(unsigned __int16)v7;
  v18 = (double)v8;
  v19 = 1.0 / ((double)v12 - v20);
  a4.n128_f64[0] = (double)v11 - (double)v8;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = v16;
  v14[1] = v15;
  return sub_2398CAD50(a1, a2, (uint64_t)v14, a4);
}

uint64_t sub_2398CAAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397F586C((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398CACEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398CAD50(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397F5D8C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398CAF94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398CAFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  _QWORD v8[4];
  int v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    HIWORD(v9) = v5;
    LOWORD(v9) = (int)v6;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 255;
  }
  v8[0] = (char *)&v9 + 2;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_2398CB0A8(a1, a2, (uint64_t)v8);
}

uint64_t sub_2398CB0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int16 ***)&v28;
    sub_2397F6694(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398CB2EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398CB350@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398CA0FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC468;
  sub_2397F349C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398CB49C(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2397F4398((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398CB440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398CB464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398CB480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CB49C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2398CB640(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398CB5DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2398CB640(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2398CB798(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2398CB798(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397D5B2C(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398CB900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2398CB964@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398CA0FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC6A0;
  sub_2397FEB58((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398CBA78(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398CBA40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398CBA5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CBA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB668;
  sub_2397FF80C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF360[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397FFA78(a2, (uint64_t)(a4 + 1));
}

void sub_2398CBB64(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398CBB78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398CBB8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C41B4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CBBA0(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398CBCB4(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398CBBB0(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2398CC354((uint64_t)v13, 1006632960, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 1.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2398CC354((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_2398CBC8C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398CBE04(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398CBCB4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  unsigned int v15;
  unsigned int v18;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    _Q0.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)_Q0.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  v15 = (unsigned __int16)v6;
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm { FCVT            S3, H0 }
  v18 = HIWORD(v6);
  __asm { FCVT            S3, H1 }
  _ZF = _ZF && _S3 == (float)v18;
  if (_ZF)
    return sub_2398CBE04(a1, a2, (uint64_t)v25, _Q0);
  v29 = (double)v15;
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  v28 = 1.0 / ((double)v18 - (double)v15);
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_2398CC0AC(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_2398CBE04(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397F7974((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398CC048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398CC0AC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397F7FE4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398CC2F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398CC354(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  __int16 *v23;
  __int16 *v24;
  __int16 v25;
  __int16 v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 65535.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      v27 = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2398CC718(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 65535.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      v27 = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2398CC9C0(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_2398CBE04(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = &v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_2398CC470(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_2398CC470(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F8978(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398CC6B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398CC718(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F91AC(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398CC95C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398CC9C0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F9858(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398CCC04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398CCC68@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398CA0FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC8D8;
  sub_239808068((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398CCD7C(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398CCD44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398CCD60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CCD7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1E48;
  sub_239808CE0(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF378[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239808F4C(a2, (uint64_t)(a4 + 1));
}

void sub_2398CCE68(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398CCE7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398CCE90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643FDC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CCEA4(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398CCFA4(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398CCEB4(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  float v5;
  _QWORD v7[5];
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[2];

  v3 = (*a1)[1];
  v10[0] = **a1;
  v10[1] = v3;
  v9[0] = v10[0];
  v9[1] = v3;
  v8[0] = v10[0];
  v8[1] = v3;
  v7[0] = v10;
  v7[1] = v9;
  v7[2] = v8;
  v7[3] = v10[0];
  v7[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = 0.0;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 1.0;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    v5 = v4;
    return sub_2398CD620((uint64_t)v7, a3, v5);
  }
  else
  {
    a3.n128_u32[0] = 0;
    return sub_2398CD620((uint64_t)v7, a3, 1.0);
  }
}

uint64_t sub_2398CCF7C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398CD0D0(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398CCFA4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  float v8;
  unsigned int v9;
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  unint64_t v15;
  double v16;
  double v17;
  double v18;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    a4.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)a4.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v8 = 1.0;
    a4.n128_u32[0] = 0;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  a4.n128_u64[0] = 0xC7EFFFFFE0000000;
  if (*(double *)(a3 + 24) >= -3.40282347e38)
    a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
  a4.n128_f32[0] = a4.n128_f64[0];
  v7 = 3.40282347e38;
  if (*(double *)(a3 + 32) <= 3.40282347e38)
    v7 = *(double *)(a3 + 32);
  v8 = v7;
LABEL_14:
  v9 = HIWORD(v6);
  if (a4.n128_f32[0] == (float)(unsigned __int16)v6 && v8 == (float)v9)
    return sub_2398CD0D0(a1, a2, (uint64_t)v14, a4);
  v18 = (double)(unsigned __int16)v6;
  v16 = a4.n128_f32[0];
  v17 = 1.0 / ((double)v9 - v18);
  a4.n128_f64[0] = v8 - a4.n128_f32[0];
  v15 = a4.n128_u64[0];
  v14[0] = &v18;
  v14[1] = &v17;
  v13[0] = &v16;
  v13[1] = &v15;
  v12[0] = v14;
  v12[1] = v13;
  return sub_2398CD378(a1, a2, (uint64_t)v12, a4);
}

uint64_t sub_2398CD0D0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397FA36C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398CD314(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398CD378(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (uint64_t ****)&v29;
    a4.n128_f64[0] = sub_2397FA8A4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398CD5BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398CD620(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  __int16 *v17;
  float *v18;
  __int16 v19;
  __int16 v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 65535.0;
    v3 = a3 >= 65535.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOWORD(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_2398CD9CC(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1199570688;
      if (a3 <= 65535.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOWORD(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_2398CDC74(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_2398CD0D0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_2398CD724(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_2398CD724(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FAF68(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398CD968(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398CD9CC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FB6E4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398CDC10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398CDC74(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FBD20(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398CDEB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398CDF1C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398CA0FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE62E0;
  sub_2397F4674((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398CE030(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398CDFF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398CE014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CE030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE5350;
  sub_239764BF4(a2, &v11);
  sub_2398CE124(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_239764E60(a2, (uint64_t)(a3 + 1));
}

void sub_2398CE0E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398CE0FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239754008((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398CE110(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CE124(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2398CE3BC(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398CE358(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2398CE3BC(_DWORD *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t)result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(uint64_t **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(uint64_t **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2398CE5A4(&v26, (uint64_t **)v33, v10, v13, v19);
        v13 = (uint64_t *)((char *)v13 + 2 * v32);
        v19 += 2 * HIDWORD(v32);
      }
    }
    return sub_2398CE5A4(&v26, (uint64_t **)v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2398CE5A4(_DWORD *result, uint64_t **a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  *a2 = a4;
  a2[2] = (uint64_t *)a5;
  v5 = result[5];
  if (v5)
  {
    do
    {
      *a2 = a4;
      a2[2] = (uint64_t *)a5;
      if (!a4)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v6 = HIDWORD(*a4);
      v7 = HIWORD(*a4);
      HIDWORD(v8) = *a4;
      LODWORD(v8) = HIDWORD(v8);
      *(_DWORD *)(a5 + 2) = v8 >> 16;
      *(_WORD *)a5 = v6;
      *(_WORD *)(a5 + 6) = v7;
      a4 = (uint64_t *)((char *)a4 + 2 * result[6]);
      a5 += 2 * result[7];
      --v5;
    }
    while (v5);
    *a2 = a4;
    a2[2] = (uint64_t *)a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = (uint64_t *)a5;
    if (!a4)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v9 = *a4;
  v10 = HIDWORD(*a4);
  HIDWORD(v11) = *a4;
  LODWORD(v11) = HIDWORD(v11);
  *(_DWORD *)(a5 + 2) = v11 >> 16;
  *(_WORD *)a5 = v10;
  *(_WORD *)(a5 + 6) = HIWORD(v9);
  return result;
}

double sub_2398CE63C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398CA0FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC040;
  sub_2397E7D68((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398CE750(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398CE718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398CE734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CE750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AEB760;
  sub_2397EA060(a2, &v11);
  sub_2398CE844(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397EA2CC(a2, (uint64_t)(a3 + 1));
}

void sub_2398CE808(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398CE81C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C6D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398CE830(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CE844(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2398CEADC(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398CEA78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2398CEADC(_DWORD *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t)result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(uint64_t **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(uint64_t **)(a2 + 24);
    }
    v19 = *(uint64_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(uint64_t **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2398CECC4(&v26, (uint64_t **)v33, v10, v13, v19);
        v13 = (uint64_t *)((char *)v13 + 2 * v32);
        v19 = (uint64_t *)((char *)v19 + 2 * HIDWORD(v32));
      }
    }
    return sub_2398CECC4(&v26, (uint64_t **)v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2398CECC4(_DWORD *result, uint64_t **a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  if (v5)
  {
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v6 = (unint64_t)*a4 >> 16;
      v7 = HIDWORD(*a4);
      v8 = HIWORD(*a4);
      *((_WORD *)a5 + 1) = *a4;
      *((_WORD *)a5 + 2) = v6;
      *((_WORD *)a5 + 3) = v7;
      *(_WORD *)a5 = v8;
      a4 = (uint64_t *)((char *)a4 + 2 * result[6]);
      a5 = (uint64_t *)((char *)a5 + 2 * result[7]);
      --v5;
    }
    while (v5);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v9 = *a4;
  v10 = (unint64_t)*a4 >> 16;
  v11 = HIDWORD(*a4);
  *((_WORD *)a5 + 1) = *a4;
  *((_WORD *)a5 + 2) = v10;
  *((_WORD *)a5 + 3) = v11;
  *(_WORD *)a5 = HIWORD(v9);
  return result;
}

