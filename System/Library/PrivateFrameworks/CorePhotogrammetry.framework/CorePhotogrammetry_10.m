uint64_t sub_2397B6730(uint64_t a1, uint64_t a2, uint64_t *a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f64[0] = sub_239746A4C(a3, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397B695C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397B69C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 32);
  v5 = *(_DWORD *)(a1 + 44);
  if (v5 == *(_DWORD *)(a2 + 44) && v5 == v4)
  {
    v8 = *(unsigned int *)(a1 + 36) * (unint64_t)v4;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v21 = *(unsigned int *)(a1 + 32);
    return (void *)sub_2397B6B60(a1, a2, &v21);
  }
  return result;
}

uint64_t sub_2397B6B60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_239748C74(a3, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397B6D8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397B6DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 2 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v21 = (2 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397B6F90(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397B6F90(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23949E424(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397B71C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397B7228(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 2 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v21 = (2 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397B7430(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

double sub_2397B73C8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397B7430(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23974C7C0(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397B7664(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397B76C8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397B7734()
{
  return 6;
}

uint64_t sub_2397B773C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397B7744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397B7760(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397B77E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397B7AB4(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (2 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 2;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397B7A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397B7AB4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397B7B2C();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397B7B2C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932D78);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932D78))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397AA844();
    sub_2397B7D30((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397B7D30((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932D60, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932D60, &dword_23940C000);
          __cxa_guard_release(&qword_256932D78);
          return &stru_256932D60;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932D60;
}

void sub_2397B7C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932D78);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932D78);
  _Unwind_Resume(a1);
}

void sub_2397B7D30(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397B7DC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397B7E00@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v8;
  __n128 *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  __n128 *v27;
  __n128 *v28;
  unint64_t v29;
  __n128 v30;
  unsigned __int16 v31;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(a1 + 52);
  v6 = 2 * *(_DWORD *)(a1 + 56);
  if (v5 != *(_DWORD *)(a2 + 52) || v5 != v6)
  {
    v33 = (2 * *(_DWORD *)(a1 + 56));
    sub_2397B8010(a1, a2, &v33, a3);
    return a3.n128_u16[0];
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v6;
  v9 = *(__n128 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(__n128 **)(v4 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(__n128 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v16)
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
    v16 = *(__n128 **)(a2 + 24);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v22 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0xF || (unint64_t)((char *)v16 - (char *)v9) < 0x20)
    {
      v25 = (unsigned __int16 *)v16;
      v26 = (unsigned __int16 *)v9;
    }
    else
    {
      v23 = v22 + 1;
      v24 = (v22 + 1) & 0xFFFFFFFFFFFFFFF0;
      v25 = (unsigned __int16 *)v16 + v24;
      v26 = (unsigned __int16 *)v9 + v24;
      v27 = v9 + 1;
      v28 = v16 + 1;
      v29 = v24;
      do
      {
        a3 = v27[-1];
        v30 = *v27;
        v28[-1] = a3;
        *v28 = v30;
        v27 += 2;
        v28 += 2;
        v29 -= 16;
      }
      while (v29);
      if (v23 == v24)
        return a3.n128_u16[0];
    }
    do
    {
      v31 = *v26++;
      a3.n128_u16[0] = v31;
      *v25++ = v31;
    }
    while (v26 != (unsigned __int16 *)((char *)v9 + 2 * v8));
  }
  return a3.n128_u16[0];
}

uint64_t sub_2397B8010(uint64_t a1, uint64_t a2, uint64_t *a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23974E728(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397B8244(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397B82A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397B8578(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (2 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 2;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397B852C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397B8578(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397B85F0();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397B85F0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932D98);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932D98))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_23978507C();
    sub_2397B87F4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397B87F4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932D80, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932D80, &dword_23940C000);
          __cxa_guard_release(&qword_256932D98);
          return &stru_256932D80;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932D80;
}

void sub_2397B8740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932D98);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932D98);
  _Unwind_Resume(a1);
}

void sub_2397B87F4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397B8888(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397B88C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 2 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v21 = (2 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397B8A64(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397B8A64(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23975068C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397B8C98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397B8CFC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 8)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397B8FCC(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (2 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 2;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397B8F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397B8FCC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397B9044();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397B9044()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932DB8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932DB8))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_239785124();
    sub_2397B9248((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397B9248((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932DA0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932DA0, &dword_23940C000);
          __cxa_guard_release(&qword_256932DB8);
          return &stru_256932DA0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932DA0;
}

void sub_2397B9194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932DB8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932DB8);
  _Unwind_Resume(a1);
}

void sub_2397B9248(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397B92DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397B9318(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v21 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397B9520(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

double sub_2397B94B8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397B9520(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23949E424(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397B9754(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397B97B8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397B9824()
{
  return 9;
}

uint64_t sub_2397B982C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397B9834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_2397B9850(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397B98D4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 9)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397B9BA0(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v15;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * (_DWORD)v18 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397B9B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397B9BA0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397B9C18();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397B9C18()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932DD8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932DD8))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397ABE44();
    sub_2397B9E1C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397B9E1C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932DC0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932DC0, &dword_23940C000);
          __cxa_guard_release(&qword_256932DD8);
          return &stru_256932DC0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932DC0;
}

void sub_2397B9D68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932DD8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932DD8);
  _Unwind_Resume(a1);
}

void sub_2397B9E1C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397B9EB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397B9EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v21 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397BA0F4(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

double sub_2397BA08C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397BA0F4(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23974C7C0(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397BA328(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397BA38C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397BA3F8()
{
  return 10;
}

uint64_t sub_2397BA400(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397BA408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397BA424(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397BA4A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 10)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397BA778(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397BA72C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397BA778(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397BA7F0();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397BA7F0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932DF8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932DF8))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397AC68C();
    sub_2397BA9F4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397BA9F4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932DE0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932DE0, &dword_23940C000);
          __cxa_guard_release(&qword_256932DF8);
          return &stru_256932DE0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932DE0;
}

void sub_2397BA940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932DF8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932DF8);
  _Unwind_Resume(a1);
}

void sub_2397BA9F4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397BAA88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397BAAC4@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v8;
  __n128 *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  __n128 *v27;
  __n128 *v28;
  unint64_t v29;
  __n128 v30;
  unsigned __int16 v31;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(a1 + 52);
  v6 = 3 * *(_DWORD *)(a1 + 56);
  if (v5 != *(_DWORD *)(a2 + 52) || v5 != v6)
  {
    v33 = (3 * *(_DWORD *)(a1 + 56));
    sub_2397BAD3C(a1, a2, &v33, a3);
    return a3.n128_u16[0];
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v6;
  v9 = *(__n128 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(__n128 **)(v4 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(__n128 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v16)
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
    v16 = *(__n128 **)(a2 + 24);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v22 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0xF || (unint64_t)((char *)v16 - (char *)v9) < 0x20)
    {
      v25 = (unsigned __int16 *)v16;
      v26 = (unsigned __int16 *)v9;
    }
    else
    {
      v23 = v22 + 1;
      v24 = (v22 + 1) & 0xFFFFFFFFFFFFFFF0;
      v25 = (unsigned __int16 *)v16 + v24;
      v26 = (unsigned __int16 *)v9 + v24;
      v27 = v9 + 1;
      v28 = v16 + 1;
      v29 = v24;
      do
      {
        a3 = v27[-1];
        v30 = *v27;
        v28[-1] = a3;
        *v28 = v30;
        v27 += 2;
        v28 += 2;
        v29 -= 16;
      }
      while (v29);
      if (v23 == v24)
        return a3.n128_u16[0];
    }
    do
    {
      v31 = *v26++;
      a3.n128_u16[0] = v31;
      *v25++ = v31;
    }
    while (v26 != (unsigned __int16 *)((char *)v9 + 2 * v8));
  }
  return a3.n128_u16[0];
}

double sub_2397BACD4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397BAD3C(uint64_t a1, uint64_t a2, uint64_t *a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23974E728(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397BAF70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397BAFD4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397BB040()
{
  return 11;
}

uint64_t sub_2397BB048(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397BB050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397BB06C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397BB0F0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 11)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397BB3C0(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397BB374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397BB3C0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397BB438();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397BB438()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932E18);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932E18))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397ACED4();
    sub_2397BB63C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397BB63C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932E00, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932E00, &dword_23940C000);
          __cxa_guard_release(&qword_256932E18);
          return &stru_256932E00;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932E00;
}

void sub_2397BB588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932E18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932E18);
  _Unwind_Resume(a1);
}

void sub_2397BB63C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397BB6D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397BB70C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v21 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397BB914(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

double sub_2397BB8AC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397BB914(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23975068C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397BBB48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397BBBAC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397BBC18()
{
  return 12;
}

uint64_t sub_2397BBC20(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397BBC28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2397BBC44(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397BBCC8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 12)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397BBF98(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397BBF4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397BBF98(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397BC010();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397BC010()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932E38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932E38))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397AD71C();
    sub_2397BC214((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397BC214((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932E20, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932E20, &dword_23940C000);
          __cxa_guard_release(&qword_256932E38);
          return &stru_256932E20;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932E20;
}

void sub_2397BC160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932E38);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932E38);
  _Unwind_Resume(a1);
}

void sub_2397BC214(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397BC2A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397BC2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397BC4EC(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

double sub_2397BC484(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397BC4EC(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23949E424(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397BC720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397BC784(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397BC7F0()
{
  return 13;
}

uint64_t sub_2397BC7F8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397BC800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_2397BC81C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397BC8A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 13)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397BCB6C(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397BCB20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397BCB6C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397BCBE4();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397BCBE4()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932E58);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932E58))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397ADDDC();
    sub_2397BCDE8((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397BCDE8((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932E40, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932E40, &dword_23940C000);
          __cxa_guard_release(&qword_256932E58);
          return &stru_256932E40;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932E40;
}

void sub_2397BCD34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932E58);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932E58);
  _Unwind_Resume(a1);
}

void sub_2397BCDE8(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397BCE7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397BCEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397BD0C0(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

double sub_2397BD058(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397BD0C0(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23974C7C0(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397BD2F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397BD358(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397BD3C4()
{
  return 14;
}

uint64_t sub_2397BD3CC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397BD3D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397BD3F0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397BD474(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 14)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397BD744(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397BD6F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397BD744(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397BD7BC();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397BD7BC()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932E78);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932E78))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397AE624();
    sub_2397BD9C0((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397BD9C0((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932E60, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932E60, &dword_23940C000);
          __cxa_guard_release(&qword_256932E78);
          return &stru_256932E60;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932E60;
}

void sub_2397BD90C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932E78);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932E78);
  _Unwind_Resume(a1);
}

void sub_2397BD9C0(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397BDA54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397BDA90@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v8;
  __n128 *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  __n128 *v27;
  __n128 *v28;
  unint64_t v29;
  __n128 v30;
  unsigned __int16 v31;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(a1 + 52);
  v6 = 4 * *(_DWORD *)(a1 + 56);
  if (v5 != *(_DWORD *)(a2 + 52) || v5 != v6)
  {
    v33 = (4 * *(_DWORD *)(a1 + 56));
    sub_2397BDD08(a1, a2, &v33, a3);
    return a3.n128_u16[0];
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v6;
  v9 = *(__n128 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(__n128 **)(v4 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(__n128 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v16)
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
    v16 = *(__n128 **)(a2 + 24);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v22 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0xF || (unint64_t)((char *)v16 - (char *)v9) < 0x20)
    {
      v25 = (unsigned __int16 *)v16;
      v26 = (unsigned __int16 *)v9;
    }
    else
    {
      v23 = v22 + 1;
      v24 = (v22 + 1) & 0xFFFFFFFFFFFFFFF0;
      v25 = (unsigned __int16 *)v16 + v24;
      v26 = (unsigned __int16 *)v9 + v24;
      v27 = v9 + 1;
      v28 = v16 + 1;
      v29 = v24;
      do
      {
        a3 = v27[-1];
        v30 = *v27;
        v28[-1] = a3;
        *v28 = v30;
        v27 += 2;
        v28 += 2;
        v29 -= 16;
      }
      while (v29);
      if (v23 == v24)
        return a3.n128_u16[0];
    }
    do
    {
      v31 = *v26++;
      a3.n128_u16[0] = v31;
      *v25++ = v31;
    }
    while (v26 != (unsigned __int16 *)((char *)v9 + 2 * v8));
  }
  return a3.n128_u16[0];
}

double sub_2397BDCA0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397BDD08(uint64_t a1, uint64_t a2, uint64_t *a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23974E728(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397BDF3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397BDFA0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397BE00C()
{
  return 15;
}

uint64_t sub_2397BE014(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397BE01C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397BE038(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397BE0BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 15)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397BE38C(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397BE340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397BE38C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397BE404();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397BE404()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932E98);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932E98))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397AEE6C();
    sub_2397BE608((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397BE608((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932E80, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932E80, &dword_23940C000);
          __cxa_guard_release(&qword_256932E98);
          return &stru_256932E80;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932E80;
}

void sub_2397BE554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932E98);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932E98);
  _Unwind_Resume(a1);
}

void sub_2397BE608(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397BE69C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397BE6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397BE8E0(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

double sub_2397BE878(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397BE8E0(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23975068C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397BEB14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397BEB78(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397BEBE4()
{
  return 16;
}

uint64_t sub_2397BEBEC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397BEBF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2397BEC10(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397BEC94(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 16)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397BEF64(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397BEF18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397BEF64(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397BEFDC();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397BEFDC()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932EB8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932EB8))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397AF6B4();
    sub_2397BF1E0((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397BF1E0((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932EA0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932EA0, &dword_23940C000);
          __cxa_guard_release(&qword_256932EB8);
          return &stru_256932EA0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932EA0;
}

void sub_2397BF12C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932EB8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932EB8);
  _Unwind_Resume(a1);
}

void sub_2397BF1E0(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397BF274(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397BF2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v21 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397BF4B8(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

double sub_2397BF450(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397BF4B8(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23949E424(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397BF6EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397BF750(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397BF7BC()
{
  return 17;
}

uint64_t sub_2397BF7C4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397BF7CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_2397BF7E8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397BF86C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 17)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397BFB38(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v15;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * (_DWORD)v18 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397BFAEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397BFB38(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397BFBB0();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397BFBB0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932ED8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932ED8))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_239708E5C();
    sub_2397BFDB4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397BFDB4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932EC0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932EC0, &dword_23940C000);
          __cxa_guard_release(&qword_256932ED8);
          return &stru_256932EC0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932EC0;
}

void sub_2397BFD00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932ED8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932ED8);
  _Unwind_Resume(a1);
}

void sub_2397BFDB4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397BFE48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397BFE84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v21 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C008C(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

double sub_2397C0024(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397C008C(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23974C7C0(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C02C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397C0324(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397C0390()
{
  return 18;
}

uint64_t sub_2397C0398(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397C03A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397C03BC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397C0440(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 18)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397C0710(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397C06C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397C0710(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397C0788();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397C0788()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932EF8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932EF8))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397AFEFC();
    sub_2397C098C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397C098C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932EE0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932EE0, &dword_23940C000);
          __cxa_guard_release(&qword_256932EF8);
          return &stru_256932EE0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932EE0;
}

void sub_2397C08D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932EF8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932EF8);
  _Unwind_Resume(a1);
}

void sub_2397C098C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397C0A20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397C0A5C@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v8;
  __n128 *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  __n128 *v27;
  __n128 *v28;
  unint64_t v29;
  __n128 v30;
  unsigned __int16 v31;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(a1 + 52);
  v6 = 3 * *(_DWORD *)(a1 + 56);
  if (v5 != *(_DWORD *)(a2 + 52) || v5 != v6)
  {
    v33 = (3 * *(_DWORD *)(a1 + 56));
    sub_2397C0CD4(a1, a2, &v33, a3);
    return a3.n128_u16[0];
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v6;
  v9 = *(__n128 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(__n128 **)(v4 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(__n128 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v16)
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
    v16 = *(__n128 **)(a2 + 24);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v22 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0xF || (unint64_t)((char *)v16 - (char *)v9) < 0x20)
    {
      v25 = (unsigned __int16 *)v16;
      v26 = (unsigned __int16 *)v9;
    }
    else
    {
      v23 = v22 + 1;
      v24 = (v22 + 1) & 0xFFFFFFFFFFFFFFF0;
      v25 = (unsigned __int16 *)v16 + v24;
      v26 = (unsigned __int16 *)v9 + v24;
      v27 = v9 + 1;
      v28 = v16 + 1;
      v29 = v24;
      do
      {
        a3 = v27[-1];
        v30 = *v27;
        v28[-1] = a3;
        *v28 = v30;
        v27 += 2;
        v28 += 2;
        v29 -= 16;
      }
      while (v29);
      if (v23 == v24)
        return a3.n128_u16[0];
    }
    do
    {
      v31 = *v26++;
      a3.n128_u16[0] = v31;
      *v25++ = v31;
    }
    while (v26 != (unsigned __int16 *)((char *)v9 + 2 * v8));
  }
  return a3.n128_u16[0];
}

double sub_2397C0C6C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397C0CD4(uint64_t a1, uint64_t a2, uint64_t *a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23974E728(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397C0F08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397C0F6C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397C0FD8()
{
  return 19;
}

uint64_t sub_2397C0FE0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397C0FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397C1004(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397C1088(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 19)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397C1358(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397C130C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397C1358(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397C13D0();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397C13D0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932F18);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932F18))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397B0744();
    sub_2397C15D4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397C15D4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932F00, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932F00, &dword_23940C000);
          __cxa_guard_release(&qword_256932F18);
          return &stru_256932F00;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932F00;
}

void sub_2397C1520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932F18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932F18);
  _Unwind_Resume(a1);
}

void sub_2397C15D4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397C1668(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397C16A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v21 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C18AC(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

double sub_2397C1844(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397C18AC(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23975068C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C1AE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397C1B44(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397C1BB0()
{
  return 20;
}

uint64_t sub_2397C1BB8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397C1BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2397C1BDC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397C1C60(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 20)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397C1F30(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397C1EE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397C1F30(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397C1FA8();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397C1FA8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932F38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932F38))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397B0F8C();
    sub_2397C21AC((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397C21AC((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932F20, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932F20, &dword_23940C000);
          __cxa_guard_release(&qword_256932F38);
          return &stru_256932F20;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932F20;
}

void sub_2397C20F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932F38);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932F38);
  _Unwind_Resume(a1);
}

void sub_2397C21AC(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397C2240(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397C227C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v21 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C241C(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397C241C(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23974C7C0(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C2650(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397C26B4@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v8;
  __n128 *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  __n128 *v27;
  __n128 *v28;
  unint64_t v29;
  __n128 v30;
  unsigned __int16 v31;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(a1 + 52);
  v6 = 3 * *(_DWORD *)(a1 + 56);
  if (v5 != *(_DWORD *)(a2 + 52) || v5 != v6)
  {
    v33 = (3 * *(_DWORD *)(a1 + 56));
    sub_2397C28C4(a1, a2, &v33, a3);
    return a3.n128_u16[0];
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v6;
  v9 = *(__n128 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(__n128 **)(v4 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(__n128 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v16)
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
    v16 = *(__n128 **)(a2 + 24);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v22 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0xF || (unint64_t)((char *)v16 - (char *)v9) < 0x20)
    {
      v25 = (unsigned __int16 *)v16;
      v26 = (unsigned __int16 *)v9;
    }
    else
    {
      v23 = v22 + 1;
      v24 = (v22 + 1) & 0xFFFFFFFFFFFFFFF0;
      v25 = (unsigned __int16 *)v16 + v24;
      v26 = (unsigned __int16 *)v9 + v24;
      v27 = v9 + 1;
      v28 = v16 + 1;
      v29 = v24;
      do
      {
        a3 = v27[-1];
        v30 = *v27;
        v28[-1] = a3;
        *v28 = v30;
        v27 += 2;
        v28 += 2;
        v29 -= 16;
      }
      while (v29);
      if (v23 == v24)
        return a3.n128_u16[0];
    }
    do
    {
      v31 = *v26++;
      a3.n128_u16[0] = v31;
      *v25++ = v31;
    }
    while (v26 != (unsigned __int16 *)((char *)v9 + 2 * v8));
  }
  return a3.n128_u16[0];
}

uint64_t sub_2397C28C4(uint64_t a1, uint64_t a2, uint64_t *a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23974E728(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397C2AF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397C2B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v21 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C2CFC(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397C2CFC(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23975068C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C2F30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397C2F94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C3134(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397C3134(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23949E424(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C3368(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397C33CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C35D4(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

double sub_2397C356C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397C35D4(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23974C7C0(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C3808(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397C386C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397C38D8()
{
  return 26;
}

uint64_t sub_2397C38E0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397C38E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397C3904(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397C3988(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 26)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397C3C58(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397C3C0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397C3C58(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397C3CD0();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397C3CD0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932F58);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932F58))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397B17D4();
    sub_2397C3ED4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397C3ED4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932F40, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932F40, &dword_23940C000);
          __cxa_guard_release(&qword_256932F58);
          return &stru_256932F40;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932F40;
}

void sub_2397C3E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932F58);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932F58);
  _Unwind_Resume(a1);
}

void sub_2397C3ED4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397C3F68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397C3FA4@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v8;
  __n128 *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  __n128 *v27;
  __n128 *v28;
  unint64_t v29;
  __n128 v30;
  unsigned __int16 v31;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(a1 + 52);
  v6 = 4 * *(_DWORD *)(a1 + 56);
  if (v5 != *(_DWORD *)(a2 + 52) || v5 != v6)
  {
    v33 = (4 * *(_DWORD *)(a1 + 56));
    sub_2397C421C(a1, a2, &v33, a3);
    return a3.n128_u16[0];
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v6;
  v9 = *(__n128 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(__n128 **)(v4 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(__n128 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v16)
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
    v16 = *(__n128 **)(a2 + 24);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v22 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0xF || (unint64_t)((char *)v16 - (char *)v9) < 0x20)
    {
      v25 = (unsigned __int16 *)v16;
      v26 = (unsigned __int16 *)v9;
    }
    else
    {
      v23 = v22 + 1;
      v24 = (v22 + 1) & 0xFFFFFFFFFFFFFFF0;
      v25 = (unsigned __int16 *)v16 + v24;
      v26 = (unsigned __int16 *)v9 + v24;
      v27 = v9 + 1;
      v28 = v16 + 1;
      v29 = v24;
      do
      {
        a3 = v27[-1];
        v30 = *v27;
        v28[-1] = a3;
        *v28 = v30;
        v27 += 2;
        v28 += 2;
        v29 -= 16;
      }
      while (v29);
      if (v23 == v24)
        return a3.n128_u16[0];
    }
    do
    {
      v31 = *v26++;
      a3.n128_u16[0] = v31;
      *v25++ = v31;
    }
    while (v26 != (unsigned __int16 *)((char *)v9 + 2 * v8));
  }
  return a3.n128_u16[0];
}

double sub_2397C41B4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397C421C(uint64_t a1, uint64_t a2, uint64_t *a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23974E728(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397C4450(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397C44B4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397C4520()
{
  return 27;
}

uint64_t sub_2397C4528(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397C4530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397C454C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397C45D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 27)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397C48A0(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397C4854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397C48A0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397C4918();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397C4918()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932F78);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932F78))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397B201C();
    sub_2397C4B1C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397C4B1C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932F60, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932F60, &dword_23940C000);
          __cxa_guard_release(&qword_256932F78);
          return &stru_256932F60;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932F60;
}

void sub_2397C4A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932F78);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932F78);
  _Unwind_Resume(a1);
}

void sub_2397C4B1C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397C4BB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397C4BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C4D8C(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397C4D8C(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23975068C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C4FC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397C5024(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 28)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397C52F4(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397C52A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397C52F4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397C536C();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397C536C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932F98);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932F98))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_23964E8F0();
    sub_2397C5570((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397C5570((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932F80, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932F80, &dword_23940C000);
          __cxa_guard_release(&qword_256932F98);
          return &stru_256932F80;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932F80;
}

void sub_2397C54BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932F98);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932F98);
  _Unwind_Resume(a1);
}

void sub_2397C5570(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397C5604(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397C5640(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C57E0(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397C57E0(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23949E424(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C5A14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397C5A78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C5C18(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397C5C18(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23974C7C0(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C5E4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397C5EB0@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v8;
  __n128 *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  __n128 *v27;
  __n128 *v28;
  unint64_t v29;
  __n128 v30;
  unsigned __int16 v31;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(a1 + 52);
  v6 = 4 * *(_DWORD *)(a1 + 56);
  if (v5 != *(_DWORD *)(a2 + 52) || v5 != v6)
  {
    v33 = (4 * *(_DWORD *)(a1 + 56));
    sub_2397C60C0(a1, a2, &v33, a3);
    return a3.n128_u16[0];
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v6;
  v9 = *(__n128 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(__n128 **)(v4 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(__n128 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v16)
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
    v16 = *(__n128 **)(a2 + 24);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v22 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0xF || (unint64_t)((char *)v16 - (char *)v9) < 0x20)
    {
      v25 = (unsigned __int16 *)v16;
      v26 = (unsigned __int16 *)v9;
    }
    else
    {
      v23 = v22 + 1;
      v24 = (v22 + 1) & 0xFFFFFFFFFFFFFFF0;
      v25 = (unsigned __int16 *)v16 + v24;
      v26 = (unsigned __int16 *)v9 + v24;
      v27 = v9 + 1;
      v28 = v16 + 1;
      v29 = v24;
      do
      {
        a3 = v27[-1];
        v30 = *v27;
        v28[-1] = a3;
        *v28 = v30;
        v27 += 2;
        v28 += 2;
        v29 -= 16;
      }
      while (v29);
      if (v23 == v24)
        return a3.n128_u16[0];
    }
    do
    {
      v31 = *v26++;
      a3.n128_u16[0] = v31;
      *v25++ = v31;
    }
    while (v26 != (unsigned __int16 *)((char *)v9 + 2 * v8));
  }
  return a3.n128_u16[0];
}

uint64_t sub_2397C60C0(uint64_t a1, uint64_t a2, uint64_t *a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23974E728(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397C62F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397C6358(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C64F8(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397C64F8(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23975068C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C672C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397C6790(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C6930(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397C6930(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23949E424(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C6B64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397C6BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C6DD0(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

double sub_2397C6D68(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397C6DD0(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23974C7C0(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C7004(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397C7068(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397C70D4()
{
  return 34;
}

uint64_t sub_2397C70DC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397C70E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397C7100(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397C7184(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 34)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397C7454(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397C7408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397C7454(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397C74CC();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397C74CC()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932FB8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932FB8))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397B2864();
    sub_2397C76D0((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397C76D0((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932FA0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932FA0, &dword_23940C000);
          __cxa_guard_release(&qword_256932FB8);
          return &stru_256932FA0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932FA0;
}

void sub_2397C761C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932FB8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932FB8);
  _Unwind_Resume(a1);
}

void sub_2397C76D0(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397C7764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397C77A0@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v8;
  __n128 *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  __n128 *v27;
  __n128 *v28;
  unint64_t v29;
  __n128 v30;
  unsigned __int16 v31;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(a1 + 52);
  v6 = 4 * *(_DWORD *)(a1 + 56);
  if (v5 != *(_DWORD *)(a2 + 52) || v5 != v6)
  {
    v33 = (4 * *(_DWORD *)(a1 + 56));
    sub_2397C7A18(a1, a2, &v33, a3);
    return a3.n128_u16[0];
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v6;
  v9 = *(__n128 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(__n128 **)(v4 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(__n128 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v16)
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
    v16 = *(__n128 **)(a2 + 24);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v22 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0xF || (unint64_t)((char *)v16 - (char *)v9) < 0x20)
    {
      v25 = (unsigned __int16 *)v16;
      v26 = (unsigned __int16 *)v9;
    }
    else
    {
      v23 = v22 + 1;
      v24 = (v22 + 1) & 0xFFFFFFFFFFFFFFF0;
      v25 = (unsigned __int16 *)v16 + v24;
      v26 = (unsigned __int16 *)v9 + v24;
      v27 = v9 + 1;
      v28 = v16 + 1;
      v29 = v24;
      do
      {
        a3 = v27[-1];
        v30 = *v27;
        v28[-1] = a3;
        *v28 = v30;
        v27 += 2;
        v28 += 2;
        v29 -= 16;
      }
      while (v29);
      if (v23 == v24)
        return a3.n128_u16[0];
    }
    do
    {
      v31 = *v26++;
      a3.n128_u16[0] = v31;
      *v25++ = v31;
    }
    while (v26 != (unsigned __int16 *)((char *)v9 + 2 * v8));
  }
  return a3.n128_u16[0];
}

double sub_2397C79B0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397C7A18(uint64_t a1, uint64_t a2, uint64_t *a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23974E728(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397C7C4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397C7CB0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397C7D1C()
{
  return 35;
}

uint64_t sub_2397C7D24(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397C7D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397C7D48(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397C7DCC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 35)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397C809C(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397C8050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397C809C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397C8114();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397C8114()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932FD8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932FD8))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397B30AC();
    sub_2397C8318((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397C8318((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932FC0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932FC0, &dword_23940C000);
          __cxa_guard_release(&qword_256932FD8);
          return &stru_256932FC0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932FC0;
}

void sub_2397C8264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932FD8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932FD8);
  _Unwind_Resume(a1);
}

void sub_2397C8318(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397C83AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397C83E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C85F0(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

double sub_2397C8588(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_2397C85F0(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23975068C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C8824(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397C8888(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397C88F4()
{
  return 36;
}

uint64_t sub_2397C88FC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397C8904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2397C8920(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397C89A4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 36)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397C8C74(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397C8C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397C8C74(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397C8CEC();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397C8CEC()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932FF8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932FF8))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397B38F4();
    sub_2397C8EF0((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397C8EF0((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932FE0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932FE0, &dword_23940C000);
          __cxa_guard_release(&qword_256932FF8);
          return &stru_256932FE0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932FE0;
}

void sub_2397C8E3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932FF8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932FF8);
  _Unwind_Resume(a1);
}

void sub_2397C8EF0(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397C8F84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void *sub_2397C8FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C9160(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397C9160(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23949E424(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C9394(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397C93F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C9598(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397C9598(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23974C7C0(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397C97CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397C9830@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v8;
  __n128 *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  __n128 *v27;
  __n128 *v28;
  unint64_t v29;
  __n128 v30;
  unsigned __int16 v31;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(a1 + 52);
  v6 = 4 * *(_DWORD *)(a1 + 56);
  if (v5 != *(_DWORD *)(a2 + 52) || v5 != v6)
  {
    v33 = (4 * *(_DWORD *)(a1 + 56));
    sub_2397C9A40(a1, a2, &v33, a3);
    return a3.n128_u16[0];
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v6;
  v9 = *(__n128 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(__n128 **)(v4 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(__n128 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v16)
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
    v16 = *(__n128 **)(a2 + 24);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v22 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0xF || (unint64_t)((char *)v16 - (char *)v9) < 0x20)
    {
      v25 = (unsigned __int16 *)v16;
      v26 = (unsigned __int16 *)v9;
    }
    else
    {
      v23 = v22 + 1;
      v24 = (v22 + 1) & 0xFFFFFFFFFFFFFFF0;
      v25 = (unsigned __int16 *)v16 + v24;
      v26 = (unsigned __int16 *)v9 + v24;
      v27 = v9 + 1;
      v28 = v16 + 1;
      v29 = v24;
      do
      {
        a3 = v27[-1];
        v30 = *v27;
        v28[-1] = a3;
        *v28 = v30;
        v27 += 2;
        v28 += 2;
        v29 -= 16;
      }
      while (v29);
      if (v23 == v24)
        return a3.n128_u16[0];
    }
    do
    {
      v31 = *v26++;
      a3.n128_u16[0] = v31;
      *v25++ = v31;
    }
    while (v26 != (unsigned __int16 *)((char *)v9 + 2 * v8));
  }
  return a3.n128_u16[0];
}

uint64_t sub_2397C9A40(uint64_t a1, uint64_t a2, uint64_t *a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23974E728(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397C9C74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397C9CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397C9E78(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397C9E78(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23975068C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397CA0AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397CA110(uint64_t a1, int a2)
{
  sub_2397CA1D0(a2);
}

void sub_2397CA140(uint64_t a1, int a2)
{
  sub_2397D39B8(a2);
}

void sub_2397CA170(uint64_t a1, int a2)
{
  sub_2397DA404(a2);
}

void sub_2397CA1A0(uint64_t a1, int a2)
{
  sub_2397DF188(a2);
}

void sub_2397CA1D0(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2397CA1F4@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397CA2B8(a1, a2);
}

double sub_2397CA200@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397CDC04(a1, a2);
}

double sub_2397CA20C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397D0B34(a1, a2);
}

double sub_2397CA218@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397CB52C(a1, a2);
}

uint64_t sub_2397CA2B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2397CA42C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEBA48;
  sub_2397CA7AC((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2397CAF00(*(_QWORD *)a1, (uint64_t)&v11);
  *a2 = &off_250ADB778;
  sub_2397CA6BC((uint64_t)&v11, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2397CA3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397CA3CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397CA3E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_2397CA404(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2397CA42C(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 5;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2397CA56C((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397CA6BC((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2397CA530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397CA558(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397CA56C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 5);
  *a2 = &off_250AEBA48;
  sub_2397CA7AC((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2397CA684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397CA6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397CA6BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826490(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 1);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 5;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397CA770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397CA790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

void sub_2397CA7AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __int16 v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;

  sub_2397CA974(a1, &v13);
  v12 = v13;
  v13 = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v4 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v4 = 0;
  v5 = *(_WORD *)(a1 + 60);
  sub_239826940(a2, &v12, v4);
  *(_WORD *)(a2 + 120) = v5;
  v6 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
  if (*((_QWORD *)&v12 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v10 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2397CA890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397CA8AC(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397CA8E8()
{
  return 5;
}

uint64_t sub_2397CA8F0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2397CA8F8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2397CA974(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397CABB4(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397CAB54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397CABB4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397CAC2C();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397CAC2C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933018);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933018))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_23941C2E0();
    sub_2397CAE30((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397CAE30((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933000, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933000, &dword_23940C000);
          __cxa_guard_release(&qword_256933018);
          return &stru_256933000;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933000;
}

void sub_2397CAD7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933018);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933018);
  _Unwind_Resume(a1);
}

void sub_2397CAE30(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397CAEC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397CAF00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2397CB0A4(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397CB040(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2397CB0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 2 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v16 = (2 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397CB1FC(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2397CB1FC(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397CB3C8(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397CB364(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

unsigned int *sub_2397CB3C8(unsigned int *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  size_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  _QWORD v27[6];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (size_t *)result;
    v21 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 104);
    v22 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 100) << 32);
    v20 = 0;
    v23 = v3 - 1;
    v24 = v11 | (v12 << 32);
    v25 = v5 - 1;
    v26 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 108) << 32);
    v13 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(char **)(a2 + 24);
    }
    v19 = *(char **)(a3 + 32);
    if (*(_BYTE *)(a3 + 128))
    {
      if (v19)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a3 + 8) + 88))(*(_QWORD *)(a3 + 8), 1, "unknown location");
        v19 = *(char **)(a3 + 32);
      }
    }
    v27[2] = 0;
    v27[3] = 0;
    v27[0] = 0;
    v27[1] = 1;
    v27[4] = 1;
    v27[5] = 0;
    return sub_23949E5D0((unsigned int *)&v20, (uint64_t)v27, v10, v13, v19);
  }
  return result;
}

double sub_2397CB52C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397CA42C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEBB40;
  sub_2397CB790((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397CB640(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397CB608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397CB624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397CB640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEA8D8;
  sub_2397CD8C4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEBC28[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397CDB30(a2, (uint64_t)(a4 + 1));
}

void sub_2397CB72C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397CB740(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397CB754(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397B73C8((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_2397CB768(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2397CB790(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_2397CB974(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_2398269FC(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2397CB874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397CB890(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397CB8CC()
{
  return 6;
}

uint64_t sub_2397CB8D4(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2397CB8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2397CB8F8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2397CB974(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397CBBB4(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397CBB54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397CBBB4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397CBC2C();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397CBC2C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933038);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933038))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397AA844();
    sub_2397CBE30((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397CBE30((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933020, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933020, &dword_23940C000);
          __cxa_guard_release(&qword_256933038);
          return &stru_256933020;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933020;
}

void sub_2397CBD7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933038);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933038);
  _Unwind_Resume(a1);
}

void sub_2397CBE30(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397CBEC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397CBF00(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_2397CBF48(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_2397CBF10(uint64_t **a1, uint64_t a2)
{
  return sub_2397CCAF4(**a1, (*a1)[1], a2);
}

uint64_t sub_2397CBF20(uint64_t **a1)
{
  char v2;

  return sub_2397CC070(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_2397CBF48(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  double v14;
  int v15;
  double v16;
  unsigned int v17;
  unsigned int v18;
  _QWORD v20[2];
  _QWORD v21[2];
  _QWORD v22[2];
  double v23;
  double v24;
  double v25;
  double v26;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (!*(_BYTE *)(a3 + 16))
  {
    v13 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    LOWORD(v17) = 0;
    v18 = 0xFFFF;
    if (v10)
      goto LABEL_17;
    goto LABEL_15;
  }
  v11 = *(double *)a3;
  a6 = 0.0;
  if (*(double *)a3 < 0.0)
    v11 = 0.0;
  v10 = (int)v11;
  v12 = 255.0;
  if (*(double *)(a3 + 8) <= 255.0)
    v12 = *(double *)(a3 + 8);
  v13 = (int)v12;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v14 = *(double *)(a3 + 24);
  a6 = 0.0;
  if (v14 < 0.0)
    v14 = 0.0;
  v15 = (int)v14;
  v16 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v16 = *(double *)(a3 + 32);
  v17 = v15 | ((int)v16 << 16);
  v18 = HIWORD(v17);
  if (v10 != (unsigned __int16)v17)
    goto LABEL_17;
LABEL_15:
  if (v18 == v13)
    return sub_2397CC070(a1, a2, (uint64_t)v22);
LABEL_17:
  v26 = (double)v10;
  v24 = (double)(unsigned __int16)v17;
  v25 = 1.0 / ((double)v13 - (double)v10);
  a4.n128_f64[0] = (double)v18 - v24;
  v23 = a4.n128_f64[0];
  v22[0] = &v26;
  v22[1] = &v25;
  v21[0] = &v24;
  v21[1] = &v23;
  v20[0] = v22;
  v20[1] = v21;
  return sub_2397CC544(a1, a2, (uint64_t)v20, a4, v24, a6, a7, a8, a9, a10);
}

uint64_t sub_2397CC070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397CC318((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397CC2B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397CC318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  _WORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  int v28;
  unsigned __int8 *v29;
  _WORD *v30;
  _WORD *v31;
  unsigned __int8 *v32;
  int v33;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a2 + 48);
    v11 = *(unsigned int *)(a2 + 52);
    v12 = *(unsigned int *)(a3 + 48);
    v13 = *(unsigned int *)(a3 + 52);
    v14 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(unsigned __int8 **)(a2 + 24);
    }
    v21 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v21)
    {
      v22 = *(_QWORD *)(a3 + 8);
      v23 = *(std::__shared_weak_count **)(a3 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_WORD **)(a3 + 24);
    }
    v27 = v3 - 1;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          *v21 = *v14;
          v21[1] = v14[1];
          v14 += v11;
          v21 += v13;
          --v9;
        }
        while (v9);
LABEL_36:
        *v21 = *v14;
        v21[1] = v14[1];
        return result;
      }
      v28 = 0;
      v29 = v14 + 1;
      v30 = v21 + 1;
      do
      {
        v31 = v30;
        v32 = v29;
        v33 = v3 - 1;
        do
        {
          *(v31 - 1) = *(v32 - 1);
          result = *v32;
          *v31 = result;
          v32 += v10;
          v31 += v12;
          --v33;
        }
        while (v33);
        *(v31 - 1) = *(v32 - 1);
        *v31 = *v32;
        v14 += v11;
        v21 += v13;
        ++v28;
        v29 += v11;
        v30 += v13;
      }
      while (v28 != v9);
    }
    if (v3 != 1)
    {
      do
      {
        *v21 = *v14;
        v21[1] = v14[1];
        v14 += v10;
        v21 += v12;
        --v27;
      }
      while (v27);
    }
    goto LABEL_36;
  }
  return result;
}

uint64_t sub_2397CC544(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double ****v36;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_43;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v36 = (double ****)&v35;
    a4.n128_f64[0] = sub_2397CC7EC(&v36, a1, a2, a4.n128_f64[0], a5, a6, a7, a8, a9, a10);
  }
LABEL_37:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397CC788(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397CC7EC(double *****a1, uint64_t a2, uint64_t a3, double result, double a5, double a6, double a7, double a8, double a9, double a10)
{
  int v10;
  int v11;
  int v12;
  BOOL v13;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t v25;
  _WORD *v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  double v32;
  unsigned int i;
  uint64_t v34;
  int v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  unsigned int v39;
  unint64_t v40;
  _OWORD v41[2];

  v11 = *(_DWORD *)(a2 + 32);
  v10 = *(_DWORD *)(a2 + 36);
  v12 = *(_DWORD *)(a2 + 40);
  if (v11)
    v13 = v10 == 0;
  else
    v13 = 1;
  if (!v13 && v12 != 0)
  {
    v35 = v11 - 1;
    v18 = *(unsigned int *)(a2 + 48);
    v19 = *(unsigned int *)(a3 + 48);
    v36 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v34 = 0;
    v37 = v10 - 1;
    v38 = v18 | (v19 << 32);
    v39 = v12 - 1;
    v40 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v20 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v20)
    {
      v21 = *(_QWORD *)(a2 + 8);
      v22 = *(std::__shared_weak_count **)(a2 + 16);
      if (v22)
      {
        p_shared_owners = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(p_shared_owners);
        while (__stxr(v24 + 1, p_shared_owners));
        do
          v25 = __ldaxr(p_shared_owners);
        while (__stlxr(v25 - 1, p_shared_owners));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v21 + 88))(v21, 0, "unknown location");
      v20 = *(_BYTE **)(a2 + 24);
    }
    v26 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v26)
    {
      v27 = *(_QWORD *)(a3 + 8);
      v28 = *(std::__shared_weak_count **)(a3 + 16);
      if (v28)
      {
        v29 = (unint64_t *)&v28->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v27 + 88))(v27, 1, "unknown location");
      v26 = *(_WORD **)(a3 + 24);
    }
    v32 = 0.0;
    memset(v41, 0, sizeof(v41));
    if (v39)
    {
      for (i = 0; i < v39; ++i)
      {
        v32 = sub_2397CC9D4(&v34, v41, a1, v20, v26, v32, a5, a6, a7, a8, a9, a10);
        v20 += v40;
        v26 += HIDWORD(v40);
      }
    }
    return sub_2397CC9D4(&v34, v41, a1, v20, v26, v32, a5, a6, a7, a8, a9, a10);
  }
  return result;
}

double sub_2397CC9D4(_DWORD *a1, _QWORD *a2, double *****a3, _BYTE *a4, _WORD *a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  int v12;
  double ***v13;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double result;

  *a2 = a4;
  a2[2] = a5;
  v12 = a1[5];
  v13 = **a3;
  v15 = *v13;
  v14 = v13[1];
  v16 = **v15;
  v17 = *v15[1];
  v18 = **v14;
  v19 = *v14[1];
  if (v12)
  {
    v20 = a1[6];
    v21 = 2 * a1[7];
    a10 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      LOBYTE(a12) = *a4;
      v22 = v17 * ((double)*(unint64_t *)&a12 - v16);
      v23 = fmax(v22, 0.0);
      if (v22 <= 1.0)
        v24 = v23;
      else
        v24 = 1.0;
      v25 = v18 + v19 * v24;
      *a5 = llround(v25);
      LOBYTE(v25) = a4[1];
      v26 = v17 * ((double)*(unint64_t *)&v25 - v16);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      a12 = v18 + v19 * v28;
      a5[1] = llround(a12);
      a4 += v20;
      a5 = (_WORD *)((char *)a5 + v21);
      --v12;
    }
    while (v12);
  }
  *a2 = a4;
  a2[2] = a5;
  LOBYTE(a10) = *a4;
  v29 = v17 * ((double)*(unint64_t *)&a10 - v16);
  v30 = fmax(v29, 0.0);
  if (v29 <= 1.0)
    v31 = v30;
  else
    v31 = 1.0;
  v32 = v18 + v19 * v31;
  *a5 = llround(v32);
  LOBYTE(v32) = a4[1];
  v33 = v17 * ((double)*(unint64_t *)&v32 - v16);
  v34 = fmax(v33, 0.0);
  if (v33 <= 1.0)
    v35 = v34;
  else
    v35 = 1.0;
  result = v18 + v19 * v35;
  a5[1] = llround(result);
  return result;
}

uint64_t sub_2397CCAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  __int16 *v8;
  __int16 *v9;
  char *v10;
  __int16 *v11;
  char v12;
  char v13;
  __int16 v14;
  __int16 v15;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    if ((int)v6 <= 0xFF)
    {
      v15 = v5;
      v14 = (int)v6;
      v13 = v5;
      v12 = (int)v6;
      v8 = (__int16 *)&v13;
      v9 = &v15;
      v10 = &v12;
      v11 = &v14;
      return sub_2397CCBC8(a1, a2, (uint64_t)&v8);
    }
    v15 = v5;
    LOBYTE(v14) = v5;
  }
  else
  {
    v15 = 0;
    LOBYTE(v14) = 0;
  }
  v8 = &v14;
  v9 = &v15;
  return sub_2397CD270(a1, a2, (uint64_t)&v8);
}

uint64_t sub_2397CCBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397CCE70((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397CCE0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397CCE70(uint64_t result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  unsigned __int8 ****v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unsigned __int8 **v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unsigned __int8 *v32;
  _WORD *v33;
  unsigned __int8 *v34;
  _WORD *v35;
  unsigned __int8 *v36;
  int v37;
  unsigned __int8 *v38;
  unsigned __int8 *v39;
  unsigned __int8 *v40;
  unsigned __int8 *v41;
  unsigned __int8 *v42;
  unsigned int v43;
  unsigned __int8 *v44;
  uint64_t v45;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = (unsigned __int8 ****)result;
    v10 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a2 + 52);
    v13 = *(unsigned int *)(a3 + 52);
    v45 = *(unsigned int *)(a3 + 48);
    v14 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(unsigned __int8 **)(a2 + 24);
    }
    v20 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_WORD **)(a3 + 24);
    }
    v26 = v3 - 1;
    v27 = **v9;
    v28 = *v27;
    v29 = 2 * v45;
    if (v10)
    {
      v30 = 2 * v13;
      if (v3 != 1)
      {
        v31 = 0;
        v32 = v14 + 1;
        v33 = v20 + 1;
        while (1)
        {
          v35 = v33;
          v36 = v32;
          v37 = v3 - 1;
          do
          {
            LODWORD(v38) = *(v36 - 1);
            if (v38 >= *v28)
            {
              if (v38 <= *v27[2])
                goto LABEL_41;
              v38 = v27[3];
            }
            else
            {
              v38 = v27[1];
            }
            LOWORD(v38) = *(_WORD *)v38;
LABEL_41:
            *(v35 - 1) = (_WORD)v38;
            LODWORD(v38) = *v36;
            if (v38 < *v28)
            {
              v38 = v27[1];
LABEL_34:
              LOWORD(v38) = *(_WORD *)v38;
              goto LABEL_35;
            }
            if (v38 > *v27[2])
            {
              v38 = v27[3];
              goto LABEL_34;
            }
LABEL_35:
            *v35 = (_WORD)v38;
            v36 += v11;
            v35 = (_WORD *)((char *)v35 + v29);
            --v37;
          }
          while (v37);
          LODWORD(v39) = *(v36 - 1);
          if (v39 < *v28)
          {
            v39 = v27[1];
            goto LABEL_48;
          }
          if (v39 > *v27[2])
          {
            v39 = v27[3];
LABEL_48:
            LOWORD(v39) = *(_WORD *)v39;
          }
          *(v35 - 1) = (_WORD)v39;
          result = *v36;
          if (result < *v28)
          {
            v34 = v27[1];
            goto LABEL_30;
          }
          if (result > *v27[2])
          {
            v34 = v27[3];
LABEL_30:
            result = *(unsigned __int16 *)v34;
          }
          *v35 = result;
          v14 += v12;
          v20 += v13;
          ++v31;
          v32 += v12;
          v33 = (_WORD *)((char *)v33 + v30);
          if (v31 == v10)
            goto LABEL_63;
        }
      }
      do
      {
        LODWORD(v40) = *v14;
        if (v40 >= *v28)
        {
          if (v40 <= *v27[2])
            goto LABEL_60;
          v40 = v27[3];
        }
        else
        {
          v40 = v27[1];
        }
        LOWORD(v40) = *(_WORD *)v40;
LABEL_60:
        *v20 = (_WORD)v40;
        LODWORD(v40) = v14[1];
        if (v40 < *v28)
        {
          v40 = v27[1];
        }
        else
        {
          if (v40 <= *v27[2])
            goto LABEL_54;
          v40 = v27[3];
        }
        LOWORD(v40) = *(_WORD *)v40;
LABEL_54:
        v20[1] = (_WORD)v40;
        v14 += v12;
        v20 = (_WORD *)((char *)v20 + v30);
        --v10;
      }
      while (v10);
    }
LABEL_63:
    if (v3 == 1)
    {
LABEL_64:
      LODWORD(v41) = *v14;
      if (v41 >= *v28)
      {
        if (v41 <= *v27[2])
          goto LABEL_80;
        v41 = v27[3];
      }
      else
      {
        v41 = v27[1];
      }
      LOWORD(v41) = *(_WORD *)v41;
LABEL_80:
      *v20 = (_WORD)v41;
      v43 = v14[1];
      if (v43 >= *v28)
      {
        if (v43 <= *v27[2])
        {
LABEL_85:
          v20[1] = v43;
          return result;
        }
        v44 = v27[3];
      }
      else
      {
        v44 = v27[1];
      }
      LOWORD(v43) = *(_WORD *)v44;
      goto LABEL_85;
    }
    while (1)
    {
      LODWORD(v42) = *v14;
      if (v42 >= *v28)
      {
        if (v42 <= *v27[2])
          goto LABEL_74;
        v42 = v27[3];
      }
      else
      {
        v42 = v27[1];
      }
      LOWORD(v42) = *(_WORD *)v42;
LABEL_74:
      *v20 = (_WORD)v42;
      LODWORD(v42) = v14[1];
      if (v42 < *v28)
      {
        v42 = v27[1];
      }
      else
      {
        if (v42 <= *v27[2])
          goto LABEL_68;
        v42 = v27[3];
      }
      LOWORD(v42) = *(_WORD *)v42;
LABEL_68:
      v20[1] = (_WORD)v42;
      v14 += v11;
      v20 = (_WORD *)((char *)v20 + v29);
      if (!--v26)
        goto LABEL_64;
    }
  }
  return result;
}

uint64_t sub_2397CD270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_2397CD518(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397CD4B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int8 ****sub_2397CD518(unsigned __int8 ****result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  unsigned __int8 ****v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    return (unsigned __int8 ****)sub_2397CD6BC(&v25, v32, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397CD6BC(_DWORD *result, _QWORD *a2, unsigned __int8 ****a3, unsigned __int8 *a4, _WORD *a5)
{
  int v5;
  int v6;
  unsigned __int8 **v7;
  unsigned __int8 *v8;
  _WORD *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned __int8 **v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;

  if (result[8])
  {
    v5 = 0;
    while (1)
    {
      *a2 = a4;
      a2[2] = a5;
      v6 = result[5];
      v7 = **a3;
      v8 = *v7;
      v9 = a5;
      v10 = a4;
      if (v6)
        break;
LABEL_12:
      *a2 = v10;
      a2[2] = v9;
      v15 = *v10;
      if (v15 < *v8)
        LOWORD(v15) = *(_WORD *)v7[1];
      *v9 = v15;
      v16 = v10[1];
      if (v16 < *v8)
        LOWORD(v16) = *(_WORD *)v7[1];
      v9[1] = v16;
      a4 += result[9];
      a5 += result[10];
      if (++v5 >= result[8])
        goto LABEL_16;
    }
    v11 = result[6];
    v12 = 2 * result[7];
    v9 = a5;
    v10 = a4;
    while (1)
    {
      *a2 = v10;
      a2[2] = v9;
      v13 = *v10;
      if (v13 < *v8)
      {
        *v9 = *(_WORD *)v7[1];
        v14 = v10[1];
        if (v14 < *v8)
LABEL_11:
          LOWORD(v14) = *(_WORD *)v7[1];
      }
      else
      {
        *v9 = v13;
        v14 = v10[1];
        if (v14 < *v8)
          goto LABEL_11;
      }
      v9[1] = v14;
      v10 += v11;
      v9 = (_WORD *)((char *)v9 + v12);
      if (!--v6)
        goto LABEL_12;
    }
  }
LABEL_16:
  *a2 = a4;
  a2[2] = a5;
  v17 = result[5];
  v18 = **a3;
  v19 = *v18;
  if (v17)
  {
    v20 = result[6];
    v21 = 2 * result[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v22 = *a4;
      if (v22 < *v19)
      {
        *a5 = *(_WORD *)v18[1];
        v23 = a4[1];
        if (v23 < *v19)
LABEL_23:
          LOWORD(v23) = *(_WORD *)v18[1];
      }
      else
      {
        *a5 = v22;
        v23 = a4[1];
        if (v23 < *v19)
          goto LABEL_23;
      }
      a5[1] = v23;
      a4 += v20;
      a5 = (_WORD *)((char *)a5 + v21);
      --v17;
    }
    while (v17);
  }
  *a2 = a4;
  a2[2] = a5;
  v24 = *a4;
  if (v24 < *v19)
  {
    *a5 = *(_WORD *)v18[1];
    v25 = a4[1];
    if (v25 >= *v19)
      goto LABEL_26;
  }
  else
  {
    *a5 = v24;
    v25 = a4[1];
    if (v25 >= *v19)
    {
LABEL_26:
      a5[1] = v25;
      return result;
    }
  }
  a5[1] = *(_WORD *)v18[1];
  return result;
}

void sub_2397CD8C4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397CD9CC(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397CD9B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397CD9CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 6);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397CDB1C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397CDB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 6;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397CDBE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2397CDC04@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397CA42C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEBC50;
  sub_2397CDE68((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397CDD18(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397CDCE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397CDCFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397CDD18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE9278;
  sub_2397D07F4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEBD38[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397D0A60(a2, (uint64_t)(a4 + 1));
}

void sub_2397CDE04(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397CDE18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397CDE2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23978DC10((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_2397CDE40(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2397CDE68(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_2397CE04C(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239826AB8(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2397CDF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397CDF68(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397CDFA4()
{
  return 7;
}

uint64_t sub_2397CDFAC(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2397CDFB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2397CDFD0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2397CE04C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397CE28C(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397CE22C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397CE28C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397CE304();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397CE304()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933058);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933058))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_23978507C();
    sub_2397CE508((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397CE508((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933040, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933040, &dword_23940C000);
          __cxa_guard_release(&qword_256933058);
          return &stru_256933040;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933040;
}

void sub_2397CE454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933058);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933058);
  _Unwind_Resume(a1);
}

void sub_2397CE508(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397CE59C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397CE5D8(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2397CE6E8(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2397CE5E8(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2397CF390((uint64_t)v13, 2080373759, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = -65504.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 65504.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  else
    _Q0.n128_f64[0] = 65504.0;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2397CF390((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_2397CE6C0(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2397CE82C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2397CE6E8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  unsigned int v4;
  double v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  double v27;

  v4 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v5 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v5 = 0.0;
    v4 = (int)v5;
    _Q0.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = (int)_Q0.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = 255;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm
  {
    FCVT            S3, H0
    FCVT            S3, H1
  }
  _ZF = _ZF && _S3 == (float)v6;
  if (_ZF)
    return sub_2397CE82C(a1, a2, (uint64_t)v23, _Q0);
  v27 = (double)v4;
  __asm { FCVT            D0, H0 }
  v25 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v24 = _Q0.n128_u64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_2397CED4C(a1, a2, (uint64_t)v21, _Q0, _D1, 1.0 / ((double)v6 - (double)v4));
}

uint64_t sub_2397CE82C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = sub_2397CEAD4(a4.n128_f32[0], (uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397CEA70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 sub_2397CEAD4@<H0>(float _S0@<S0>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>)
{
  int v4;
  int v5;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  _WORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  _BYTE *v30;
  _WORD *v31;
  _WORD *v32;
  _BYTE *v33;
  int v34;

  v4 = *(_DWORD *)(a3 + 36);
  v5 = *(_DWORD *)(a3 + 40);
  if (*(_DWORD *)(a3 + 32))
    _ZF = v4 == 0;
  else
    _ZF = 1;
  if (!_ZF && v5 != 0)
  {
    v10 = v5 - 1;
    v11 = *(unsigned int *)(a3 + 48);
    v12 = *(unsigned int *)(a3 + 52);
    v14 = *(unsigned int *)(a4 + 48);
    v13 = *(unsigned int *)(a4 + 52);
    v15 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v15)
    {
      v16 = *(_QWORD *)(a3 + 8);
      v17 = *(std::__shared_weak_count **)(a3 + 16);
      if (v17)
      {
        p_shared_owners = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(p_shared_owners);
        while (__stxr(v19 + 1, p_shared_owners));
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v16 + 88))(v16, 0, "unknown location");
      v15 = *(_BYTE **)(a3 + 24);
    }
    v21 = *(_WORD **)(a4 + 24);
    if (*(_BYTE *)(a4 + 72) && v21)
    {
      v22 = *(_QWORD *)(a4 + 8);
      v23 = *(std::__shared_weak_count **)(a4 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_WORD **)(a4 + 24);
    }
    v27 = v4 - 1;
    v28 = 2 * v14;
    if (v10)
    {
      if (v4 == 1)
      {
        do
        {
          LOBYTE(_S0) = *v15;
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v21 = _S0;
          LOBYTE(_S0) = v15[1];
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v21[1] = LOWORD(_S0);
          v15 += v12;
          v21 += v13;
          --v10;
        }
        while (v10);
      }
      else
      {
        v29 = 0;
        v30 = v15 + 1;
        v31 = v21 + 1;
        do
        {
          v32 = v31;
          v33 = v30;
          v34 = v4 - 1;
          do
          {
            LOBYTE(_S0) = *(v33 - 1);
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *(v32 - 1) = _S0;
            LOBYTE(_S0) = *v33;
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *v32 = LOWORD(_S0);
            v33 += v11;
            v32 = (_WORD *)((char *)v32 + v28);
            --v34;
          }
          while (v34);
          LOBYTE(_S0) = *(v33 - 1);
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *(v32 - 1) = _S0;
          LOBYTE(_S0) = *v33;
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          *v32 = LOWORD(_S0);
          v15 += v12;
          v21 += v13;
          ++v29;
          v30 += v12;
          v31 += v13;
        }
        while (v29 != v10);
      }
    }
    if (v4 != 1)
    {
      do
      {
        LOBYTE(_S0) = *v15;
        *(float *)&_S0 = (float)LODWORD(_S0);
        __asm { FCVT            H0, S0 }
        *v21 = _S0;
        LOBYTE(_S0) = v15[1];
        _S0 = (float)_S0;
        __asm { FCVT            H0, S0 }
        v21[1] = LOWORD(_S0);
        v15 += v11;
        v21 = (_WORD *)((char *)v21 + v28);
        --v27;
      }
      while (v27);
    }
    LOBYTE(_S0) = *v15;
    *(float *)&_S0 = (float)LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    *v21 = _S0;
    LOBYTE(_S0) = v15[1];
    _S0 = (float)_S0;
    __asm { FCVT            H0, S0 }
    v21[1] = LOWORD(_S0);
  }
  return LOWORD(_S0);
}

uint64_t sub_2397CED4C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6)
{
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double ****v32;

  v9 = *(_QWORD *)(a1 + 8);
  if (!v9)
    goto LABEL_17;
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v9 = *(_QWORD *)(a1 + 8);
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v30 = 0;
    v18 = *(_QWORD *)(a2 + 8);
    if (!v18)
      goto LABEL_33;
LABEL_18:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(a2 + 8);
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v29, v18, 1);
    v31 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(&v30, v9, 0);
  v18 = *(_QWORD *)(a2 + 8);
  if (v18)
    goto LABEL_18;
LABEL_33:
  v29 = 0;
  v31 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v32 = (double ****)&v31;
    a4.n128_f64[0] = sub_2397CEFF4(&v32, a1, a2, a4.n128_f64[0], a5, a6);
  }
LABEL_37:
  v27 = v29;
  v29 = 0;
  if (v27)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v27 + 8))(v27, a4);
  result = v30;
  v30 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397CEF90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397CEFF4(double *****a1, uint64_t a2, uint64_t a3, double result, double a5, double a6)
{
  int v6;
  int v7;
  int v8;
  BOOL v9;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  _WORD *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  double v28;
  unsigned int i;
  uint64_t v30;
  int v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  unint64_t v36;
  _OWORD v37[2];

  v7 = *(_DWORD *)(a2 + 32);
  v6 = *(_DWORD *)(a2 + 36);
  v8 = *(_DWORD *)(a2 + 40);
  if (v7)
    v9 = v6 == 0;
  else
    v9 = 1;
  if (!v9 && v8 != 0)
  {
    v31 = v7 - 1;
    v14 = *(unsigned int *)(a2 + 48);
    v15 = *(unsigned int *)(a3 + 48);
    v32 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v30 = 0;
    v33 = v6 - 1;
    v34 = v14 | (v15 << 32);
    v35 = v8 - 1;
    v36 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v16 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v16)
    {
      v17 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (v18)
      {
        p_shared_owners = (unint64_t *)&v18->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
        do
          v21 = __ldaxr(p_shared_owners);
        while (__stlxr(v21 - 1, p_shared_owners));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v17 + 88))(v17, 0, "unknown location");
      v16 = *(_BYTE **)(a2 + 24);
    }
    v22 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v22)
    {
      v23 = *(_QWORD *)(a3 + 8);
      v24 = *(std::__shared_weak_count **)(a3 + 16);
      if (v24)
      {
        v25 = (unint64_t *)&v24->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
        do
          v27 = __ldaxr(v25);
        while (__stlxr(v27 - 1, v25));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v23 + 88))(v23, 1, "unknown location");
      v22 = *(_WORD **)(a3 + 24);
    }
    v28 = 0.0;
    memset(v37, 0, sizeof(v37));
    if (v35)
    {
      for (i = 0; i < v35; ++i)
      {
        *(_QWORD *)&v28 = sub_2397CF1DC(&v30, v37, a1, v16, v22, v28, a5, a6);
        v16 += v36;
        v22 += HIDWORD(v36);
      }
    }
    *(_QWORD *)&result = sub_2397CF1DC(&v30, v37, a1, v16, v22, v28, a5, a6);
  }
  return result;
}

__int16 sub_2397CF1DC@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, double *****a3@<X2>, _BYTE *a4@<X3>, _WORD *a5@<X4>, double a6@<D0>, double a7@<D1>, double _D2@<D2>)
{
  unsigned int v8;
  double ***v9;
  double **v10;
  double **v11;
  double v12;
  double v13;
  double v14;
  double ***v20;
  double **v21;
  double **v22;
  double v23;
  double v24;
  double v25;
  double ***v26;
  double **v27;
  double **v28;
  double v29;
  double v30;
  double v31;
  double ***v33;
  double **v34;
  double **v35;
  double v36;
  double v37;
  double v38;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v8 = 0;
    a6 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v9 = **a3;
      LOBYTE(_D2) = *a4;
      v11 = *v9;
      v10 = v9[1];
      v12 = ((double)*(unint64_t *)&_D2 - **v11) * *v11[1];
      v13 = fmax(v12, 0.0);
      if (v12 <= 1.0)
        v14 = v13;
      else
        v14 = 1.0;
      _D2 = **v10 + v14 * *v10[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *a5 = LOWORD(_D2);
      v20 = **a3;
      LOBYTE(_D2) = *(_BYTE *)(*a2 + 1);
      v22 = *v20;
      v21 = v20[1];
      v23 = ((double)*(unint64_t *)&_D2 - **v22) * *v22[1];
      v24 = fmax(v23, 0.0);
      if (v23 <= 1.0)
        v25 = v24;
      else
        v25 = 1.0;
      _D2 = **v21 + v25 * *v21[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *(_WORD *)(a2[2] + 2) = LOWORD(_D2);
      a4 += a1[6];
      a5 += a1[7];
      ++v8;
    }
    while (v8 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = **a3;
  LOBYTE(a6) = *a4;
  v28 = *v26;
  v27 = v26[1];
  v29 = ((double)*(unint64_t *)&a6 - **v28) * *v28[1];
  v30 = fmax(v29, 0.0);
  if (v29 <= 1.0)
    v31 = v30;
  else
    v31 = 1.0;
  _D0 = **v27 + v31 * *v27[1];
  *(float *)&_D0 = _D0;
  __asm { FCVT            H0, S0 }
  *a5 = LOWORD(_D0);
  v33 = **a3;
  LOBYTE(_D0) = *(_BYTE *)(*a2 + 1);
  v35 = *v33;
  v34 = v33[1];
  v36 = ((double)*(unint64_t *)&_D0 - **v35) * *v35[1];
  v37 = fmax(v36, 0.0);
  if (v36 <= 1.0)
    v38 = v37;
  else
    v38 = 1.0;
  _S0 = **v34 + v38 * *v34[1];
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 2) = result;
  return result;
}

uint64_t sub_2397CF390(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  char *v23;
  __int16 *v24;
  char v25;
  char v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 255.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      LOBYTE(v27) = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2397CFAD4(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 255.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      LOBYTE(v27) = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2397D0164(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_2397CE82C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = (__int16 *)&v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_2397CF4A8(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_2397CF4A8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397CF750(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397CF6EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397CF750(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397CF938(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    *(_QWORD *)&result = sub_2397CF938(&v27, v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_2397CF938@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int8 ****a3@<X2>, unsigned __int8 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int i;
  unsigned __int8 *v6;
  unsigned __int8 **v8;
  unsigned int v9;
  unsigned __int8 **v16;
  unsigned int v17;
  unsigned __int8 **v19;
  unsigned int v20;
  uint64_t v23;
  unsigned __int8 **v24;
  unsigned int v25;
  unsigned __int8 *v26;
  __int16 result;
  unsigned __int8 *v28;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    for (i = 0; i < a1[5]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      v9 = *a4;
      if (v9 >= **v8)
      {
        if (v9 <= *v8[2])
        {
          _S0 = (float)v9;
          __asm { FCVT            H0, S0 }
        }
        else
        {
          _H0 = *(_WORD *)v8[3];
        }
      }
      else
      {
        _H0 = *(_WORD *)v8[1];
      }
      *a5 = _H0;
      v16 = **a3;
      v17 = *(unsigned __int8 *)(*a2 + 1);
      if (v17 < **v16)
      {
        v6 = v16[1];
      }
      else
      {
        if (v17 <= *v16[2])
        {
          _S0 = (float)v17;
          __asm { FCVT            H0, S0 }
          goto LABEL_5;
        }
        v6 = v16[3];
      }
      _H0 = *(_WORD *)v6;
LABEL_5:
      *(_WORD *)(a2[2] + 2) = _H0;
      a4 += a1[6];
      a5 += a1[7];
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v19 = **a3;
  v20 = *a4;
  if (v20 >= **v19)
  {
    if (v20 <= *v19[2])
    {
      _S0 = (float)v20;
      __asm { FCVT            H0, S0 }
    }
    else
    {
      _H0 = *(_WORD *)v19[3];
    }
  }
  else
  {
    _H0 = *(_WORD *)v19[1];
  }
  *a5 = _H0;
  v23 = a2[2];
  v24 = **a3;
  v25 = *(unsigned __int8 *)(*a2 + 1);
  if (v25 >= **v24)
  {
    if (v25 <= *v24[2])
    {
      _S0 = (float)v25;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(v23 + 2) = result;
    }
    else
    {
      v28 = v24[3];
      result = *(_WORD *)v28;
      *(_WORD *)(v23 + 2) = *(_WORD *)v28;
    }
  }
  else
  {
    v26 = v24[1];
    result = *(_WORD *)v26;
    *(_WORD *)(v23 + 2) = *(_WORD *)v26;
  }
  return result;
}

uint64_t sub_2397CFAD4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397CFD7C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397CFD18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397CFD7C(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  _WORD *v26;
  unsigned __int8 *v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  unint64_t v34;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v29 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v30 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v28 = 0;
    v31 = v3 - 1;
    v32 = v11 | (v12 << 32);
    v33 = v5 - 1;
    v34 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v27 = v13;
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    v26 = v19;
    *(_QWORD *)&result = sub_2397CFF20(&v28, a1, &v27, &v26);
  }
  return result;
}

__int16 sub_2397CFF20@<H0>(_DWORD *a1@<X0>, unsigned __int8 ****a2@<X1>, unsigned __int8 **a3@<X2>, _WORD **a4@<X3>)
{
  unsigned __int8 *v4;
  _WORD *v5;
  unsigned int v6;
  _WORD *v8;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned __int8 **v12;
  unsigned int v13;
  unsigned __int8 **v20;
  unsigned int v21;
  unsigned __int8 **v23;
  unsigned int v24;
  unsigned __int8 **v27;
  unsigned int v28;
  unsigned int v30;
  unsigned __int8 **v32;
  unsigned int v33;
  unsigned __int8 **v36;
  unsigned int v37;
  unsigned __int8 **v39;
  unsigned int v40;
  unsigned __int8 **v43;
  unsigned int v44;
  unsigned __int8 *v45;
  __int16 result;

  v4 = *a3;
  v5 = *a4;
  if (a1[8])
  {
    v6 = 0;
    do
    {
      v8 = v5;
      v9 = v4;
      if (a1[5])
      {
        v10 = 0;
        v9 = v4;
        v8 = v5;
        do
        {
          v12 = **a2;
          v13 = *v9;
          if (v13 >= **v12)
          {
            _S0 = (float)v13;
            __asm { FCVT            H0, S0 }
          }
          else
          {
            _H0 = *(_WORD *)v12[1];
          }
          *v8 = _H0;
          v20 = **a2;
          v21 = v9[1];
          if (v21 < **v20)
          {
            _H0 = *(_WORD *)v20[1];
          }
          else
          {
            _S0 = (float)v21;
            __asm { FCVT            H0, S0 }
          }
          v8[1] = _H0;
          v9 += a1[6];
          v8 += a1[7];
          ++v10;
        }
        while (v10 < a1[5]);
      }
      v23 = **a2;
      v24 = *v9;
      if (v24 >= **v23)
      {
        _S0 = (float)v24;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v23[1];
      }
      *v8 = _H0;
      v27 = **a2;
      v28 = v9[1];
      if (v28 < **v27)
      {
        _H0 = *(_WORD *)v27[1];
      }
      else
      {
        _S0 = (float)v28;
        __asm { FCVT            H0, S0 }
      }
      v8[1] = _H0;
      v4 += a1[9];
      v5 += a1[10];
      ++v6;
    }
    while (v6 < a1[8]);
  }
  if (a1[5])
  {
    v30 = 0;
    do
    {
      v32 = **a2;
      v33 = *v4;
      if (v33 >= **v32)
      {
        _S0 = (float)v33;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v32[1];
      }
      *v5 = _H0;
      v36 = **a2;
      v37 = v4[1];
      if (v37 < **v36)
      {
        _H0 = *(_WORD *)v36[1];
      }
      else
      {
        _S0 = (float)v37;
        __asm { FCVT            H0, S0 }
      }
      v5[1] = _H0;
      v4 += a1[6];
      v5 += a1[7];
      ++v30;
    }
    while (v30 < a1[5]);
  }
  v39 = **a2;
  v40 = *v4;
  if (v40 >= **v39)
  {
    _S0 = (float)v40;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v39[1];
  }
  *v5 = _H0;
  v43 = **a2;
  v44 = v4[1];
  if (v44 >= **v43)
  {
    _S0 = (float)v44;
    __asm { FCVT            H0, S0 }
    v5[1] = result;
  }
  else
  {
    v45 = v43[1];
    result = *(_WORD *)v45;
    v5[1] = *(_WORD *)v45;
  }
  return result;
}

uint64_t sub_2397D0164(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397D040C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D03A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397D040C(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  _WORD *v26;
  unsigned __int8 *v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  unint64_t v34;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v29 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v30 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v28 = 0;
    v31 = v3 - 1;
    v32 = v11 | (v12 << 32);
    v33 = v5 - 1;
    v34 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v27 = v13;
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    v26 = v19;
    *(_QWORD *)&result = sub_2397D05B0(&v28, a1, &v27, &v26);
  }
  return result;
}

__int16 sub_2397D05B0@<H0>(_DWORD *a1@<X0>, unsigned __int8 ****a2@<X1>, unsigned __int8 **a3@<X2>, _WORD **a4@<X3>)
{
  unsigned __int8 *v4;
  _WORD *v5;
  unsigned int v6;
  _WORD *v8;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned __int8 **v12;
  unsigned int v13;
  unsigned __int8 **v20;
  unsigned int v21;
  unsigned __int8 **v23;
  unsigned int v24;
  unsigned __int8 **v27;
  unsigned int v28;
  unsigned int v30;
  unsigned __int8 **v32;
  unsigned int v33;
  unsigned __int8 **v36;
  unsigned int v37;
  unsigned __int8 **v39;
  unsigned int v40;
  unsigned __int8 **v43;
  unsigned int v44;
  unsigned __int8 *v45;
  __int16 result;

  v4 = *a3;
  v5 = *a4;
  if (a1[8])
  {
    v6 = 0;
    do
    {
      v8 = v5;
      v9 = v4;
      if (a1[5])
      {
        v10 = 0;
        v9 = v4;
        v8 = v5;
        do
        {
          v12 = **a2;
          v13 = *v9;
          if (v13 <= **v12)
          {
            _S0 = (float)v13;
            __asm { FCVT            H0, S0 }
          }
          else
          {
            _H0 = *(_WORD *)v12[1];
          }
          *v8 = _H0;
          v20 = **a2;
          v21 = v9[1];
          if (v21 > **v20)
          {
            _H0 = *(_WORD *)v20[1];
          }
          else
          {
            _S0 = (float)v21;
            __asm { FCVT            H0, S0 }
          }
          v8[1] = _H0;
          v9 += a1[6];
          v8 += a1[7];
          ++v10;
        }
        while (v10 < a1[5]);
      }
      v23 = **a2;
      v24 = *v9;
      if (v24 <= **v23)
      {
        _S0 = (float)v24;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v23[1];
      }
      *v8 = _H0;
      v27 = **a2;
      v28 = v9[1];
      if (v28 > **v27)
      {
        _H0 = *(_WORD *)v27[1];
      }
      else
      {
        _S0 = (float)v28;
        __asm { FCVT            H0, S0 }
      }
      v8[1] = _H0;
      v4 += a1[9];
      v5 += a1[10];
      ++v6;
    }
    while (v6 < a1[8]);
  }
  if (a1[5])
  {
    v30 = 0;
    do
    {
      v32 = **a2;
      v33 = *v4;
      if (v33 <= **v32)
      {
        _S0 = (float)v33;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v32[1];
      }
      *v5 = _H0;
      v36 = **a2;
      v37 = v4[1];
      if (v37 > **v36)
      {
        _H0 = *(_WORD *)v36[1];
      }
      else
      {
        _S0 = (float)v37;
        __asm { FCVT            H0, S0 }
      }
      v5[1] = _H0;
      v4 += a1[6];
      v5 += a1[7];
      ++v30;
    }
    while (v30 < a1[5]);
  }
  v39 = **a2;
  v40 = *v4;
  if (v40 <= **v39)
  {
    _S0 = (float)v40;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v39[1];
  }
  *v5 = _H0;
  v43 = **a2;
  v44 = v4[1];
  if (v44 <= **v43)
  {
    _S0 = (float)v44;
    __asm { FCVT            H0, S0 }
    v5[1] = result;
  }
  else
  {
    v45 = v43[1];
    result = *(_WORD *)v45;
    v5[1] = *(_WORD *)v45;
  }
  return result;
}

void sub_2397D07F4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397D08FC(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397D08E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397D08FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 7);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397D0A4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397D0A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 7;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397D0B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2397D0B34@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397CA42C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEBD60;
  sub_2397D0D98((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397D0C48(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397D0C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397D0C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397D0C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE9370;
  sub_2397D3678(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEBE48[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397D38E4(a2, (uint64_t)(a4 + 1));
}

void sub_2397D0D34(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397D0D48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397D0D5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23978DD94((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_2397D0D70(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2397D0D98(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_2397D0F7C(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 2) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239826B74(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2397D0E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397D0E98(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397D0ED4()
{
  return 8;
}

uint64_t sub_2397D0EDC(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2397D0EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_2397D0F00(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2397D0F7C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 8)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397D11BC(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397D115C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397D11BC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397D1234();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397D1234()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933078);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933078))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_239785124();
    sub_2397D1438((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397D1438((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933060, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933060, &dword_23940C000);
          __cxa_guard_release(&qword_256933078);
          return &stru_256933060;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933060;
}

void sub_2397D1384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933078);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933078);
  _Unwind_Resume(a1);
}

void sub_2397D1438(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397D14CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397D1508(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_2397D1608(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_2397D1518(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  double v5;
  float v6;
  _QWORD v8[5];
  _QWORD v9[2];
  _QWORD v10[2];
  _QWORD v11[2];

  v3 = (*a1)[1];
  v11[0] = **a1;
  v11[1] = v3;
  v10[0] = v11[0];
  v10[1] = v3;
  v9[0] = v11[0];
  v9[1] = v3;
  v8[0] = v11;
  v8[1] = v10;
  v8[2] = v9;
  v8[3] = v11[0];
  v8[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = -3.40282347e38;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 3.40282347e38;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 <= 3.40282347e38)
      v5 = v4;
    else
      v5 = 3.40282347e38;
    v6 = v5;
    return sub_2397D21E4((uint64_t)v8, a3, v6);
  }
  else
  {
    a3.n128_u32[0] = -8388609;
    return sub_2397D21E4((uint64_t)v8, a3, 3.4028e38);
  }
}

uint64_t sub_2397D15E0(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2397D1738(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2397D1608(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  unsigned int v12;
  double v13;
  float v14;
  double v16;
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  unint64_t v22;
  double v23;
  uint64_t v24;
  double v25;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v11 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v11 = 0.0;
    v10 = (int)v11;
    a4.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v12 = (int)a4.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      a4.n128_u64[0] = 0xC7EFFFFFE0000000;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
      a4.n128_f32[0] = a4.n128_f64[0];
      v13 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v13 = *(double *)(a3 + 32);
      v14 = v13;
      if (a4.n128_f32[0] != (float)v10 || v14 != (float)v12)
        goto LABEL_15;
      return sub_2397D1738(a1, a2, (uint64_t)v21, a4);
    }
  }
  else
  {
    v12 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v14 = 1.0;
  a4.n128_u32[0] = 0;
  if ((float)v10 != 0.0 || 1.0 != (float)v12)
  {
LABEL_15:
    v25 = (double)v10;
    v23 = a4.n128_f32[0];
    v16 = v14;
    a4.n128_f64[0] = v16 - a4.n128_f32[0];
    v22 = a4.n128_u64[0];
    v21[0] = &v25;
    v21[1] = &v24;
    v20[0] = &v23;
    v20[1] = &v22;
    v19[0] = v21;
    v19[1] = v20;
    return sub_2397D1C34(a1, a2, (uint64_t)v19, a4, v16, 1.0 / ((double)v12 - (double)v10), 1.0, a8, a9, a10);
  }
  return sub_2397D1738(a1, a2, (uint64_t)v21, a4);
}

uint64_t sub_2397D1738(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4 = sub_2397D19E0(a4, (uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D197C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__n128 sub_2397D19E0(__n128 result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  BOOL v6;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  float *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  int v28;
  unsigned __int8 *v29;
  float *v30;
  float *v31;
  unsigned __int8 *v32;
  int v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;

  v4 = *(_DWORD *)(a3 + 36);
  v5 = *(_DWORD *)(a3 + 40);
  if (*(_DWORD *)(a3 + 32))
    v6 = v4 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = v5 - 1;
    v11 = *(unsigned int *)(a3 + 48);
    v12 = *(unsigned int *)(a3 + 52);
    v13 = *(unsigned int *)(a4 + 48);
    v14 = *(unsigned int *)(a4 + 52);
    v15 = *(unsigned __int8 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v15)
    {
      v16 = *(_QWORD *)(a3 + 8);
      v17 = *(std::__shared_weak_count **)(a3 + 16);
      if (v17)
      {
        p_shared_owners = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(p_shared_owners);
        while (__stxr(v19 + 1, p_shared_owners));
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v16 + 88))(v16, 0, "unknown location");
      v15 = *(unsigned __int8 **)(a3 + 24);
    }
    v21 = *(float **)(a4 + 24);
    if (*(_BYTE *)(a4 + 72) && v21)
    {
      v22 = *(_QWORD *)(a4 + 8);
      v23 = *(std::__shared_weak_count **)(a4 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(float **)(a4 + 24);
    }
    v27 = v4 - 1;
    if (v10)
    {
      if (v4 == 1)
      {
        do
        {
          result.n128_u8[0] = *v15;
          v37 = (float)result.n128_u32[0];
          *v21 = v37;
          LOBYTE(v37) = v15[1];
          result.n128_f32[0] = (float)LODWORD(v37);
          v21[1] = result.n128_f32[0];
          v15 += v12;
          v21 += v14;
          --v10;
        }
        while (v10);
LABEL_36:
        result.n128_u8[0] = *v15;
        v38 = (float)result.n128_u32[0];
        *v21 = v38;
        LOBYTE(v38) = v15[1];
        result.n128_f32[0] = (float)LODWORD(v38);
        v21[1] = result.n128_f32[0];
        return result;
      }
      v28 = 0;
      v29 = v15 + 1;
      v30 = v21 + 1;
      do
      {
        v31 = v30;
        v32 = v29;
        v33 = v4 - 1;
        do
        {
          result.n128_u8[0] = *(v32 - 1);
          v34 = (float)result.n128_u32[0];
          *(v31 - 1) = v34;
          LOBYTE(v34) = *v32;
          result.n128_f32[0] = (float)LODWORD(v34);
          *v31 = result.n128_f32[0];
          v32 += v11;
          v31 += v13;
          --v33;
        }
        while (v33);
        result.n128_u8[0] = *(v32 - 1);
        v35 = (float)result.n128_u32[0];
        *(v31 - 1) = v35;
        LOBYTE(v35) = *v32;
        result.n128_f32[0] = (float)LODWORD(v35);
        *v31 = result.n128_f32[0];
        v15 += v12;
        v21 += v14;
        ++v28;
        v29 += v12;
        v30 += v14;
      }
      while (v28 != v10);
    }
    if (v4 != 1)
    {
      do
      {
        result.n128_u8[0] = *v15;
        v36 = (float)result.n128_u32[0];
        *v21 = v36;
        LOBYTE(v36) = v15[1];
        result.n128_f32[0] = (float)LODWORD(v36);
        v21[1] = result.n128_f32[0];
        v15 += v11;
        v21 += v13;
        --v27;
      }
      while (v27);
    }
    goto LABEL_36;
  }
  return result;
}

uint64_t sub_2397D1C34(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double ****v36;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_43;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v36 = (double ****)&v35;
    a4.n128_f32[0] = sub_2397D1EDC(&v36, a1, a2, a4.n128_f32[0], a5, a6, a7, a8, a9, a10);
  }
LABEL_37:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D1E78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397D1EDC(double *****a1, uint64_t a2, uint64_t a3, float result, double a5, double a6, double a7, double a8, double a9, double a10)
{
  int v10;
  int v11;
  int v12;
  BOOL v13;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t v25;
  float *v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  double v32;
  unsigned int i;
  uint64_t v34;
  int v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  unsigned int v39;
  unint64_t v40;
  _OWORD v41[2];

  v11 = *(_DWORD *)(a2 + 32);
  v10 = *(_DWORD *)(a2 + 36);
  v12 = *(_DWORD *)(a2 + 40);
  if (v11)
    v13 = v10 == 0;
  else
    v13 = 1;
  if (!v13 && v12 != 0)
  {
    v35 = v11 - 1;
    v18 = *(unsigned int *)(a2 + 48);
    v19 = *(unsigned int *)(a3 + 48);
    v36 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v34 = 0;
    v37 = v10 - 1;
    v38 = v18 | (v19 << 32);
    v39 = v12 - 1;
    v40 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v20 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v20)
    {
      v21 = *(_QWORD *)(a2 + 8);
      v22 = *(std::__shared_weak_count **)(a2 + 16);
      if (v22)
      {
        p_shared_owners = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(p_shared_owners);
        while (__stxr(v24 + 1, p_shared_owners));
        do
          v25 = __ldaxr(p_shared_owners);
        while (__stlxr(v25 - 1, p_shared_owners));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v21 + 88))(v21, 0, "unknown location");
      v20 = *(_BYTE **)(a2 + 24);
    }
    v26 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v26)
    {
      v27 = *(_QWORD *)(a3 + 8);
      v28 = *(std::__shared_weak_count **)(a3 + 16);
      if (v28)
      {
        v29 = (unint64_t *)&v28->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v27 + 88))(v27, 1, "unknown location");
      v26 = *(float **)(a3 + 24);
    }
    v32 = 0.0;
    memset(v41, 0, sizeof(v41));
    if (v39)
    {
      for (i = 0; i < v39; ++i)
      {
        *(float *)&v32 = sub_2397D20C4(&v34, v41, a1, v20, v26, v32, a5, a6, a7, a8, a9, a10);
        v20 += v40;
        v26 += HIDWORD(v40);
      }
    }
    return sub_2397D20C4(&v34, v41, a1, v20, v26, v32, a5, a6, a7, a8, a9, a10);
  }
  return result;
}

float sub_2397D20C4(_DWORD *a1, _QWORD *a2, double *****a3, _BYTE *a4, float *a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  int v12;
  double ***v13;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  float result;

  *a2 = a4;
  a2[2] = a5;
  v12 = a1[5];
  v13 = **a3;
  v15 = *v13;
  v14 = v13[1];
  v16 = **v15;
  v17 = *v15[1];
  v18 = **v14;
  v19 = *v14[1];
  if (v12)
  {
    v20 = a1[6];
    v21 = 4 * a1[7];
    a10 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      LOBYTE(a12) = *a4;
      v22 = v17 * ((double)*(unint64_t *)&a12 - v16);
      v23 = fmax(v22, 0.0);
      if (v22 <= 1.0)
        v24 = v23;
      else
        v24 = 1.0;
      v25 = v18 + v19 * v24;
      *(float *)&v25 = v25;
      *a5 = *(float *)&v25;
      LOBYTE(v25) = a4[1];
      v26 = v17 * ((double)*(unint64_t *)&v25 - v16);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      a12 = v18 + v19 * v28;
      *(float *)&a12 = a12;
      a5[1] = *(float *)&a12;
      a4 += v20;
      a5 = (float *)((char *)a5 + v21);
      --v12;
    }
    while (v12);
  }
  *a2 = a4;
  a2[2] = a5;
  LOBYTE(a10) = *a4;
  v29 = v17 * ((double)*(unint64_t *)&a10 - v16);
  v30 = fmax(v29, 0.0);
  if (v29 <= 1.0)
    v31 = v30;
  else
    v31 = 1.0;
  v32 = v18 + v19 * v31;
  *(float *)&v32 = v32;
  *a5 = *(float *)&v32;
  LOBYTE(v32) = a4[1];
  v33 = v17 * ((double)*(unint64_t *)&v32 - v16);
  v34 = fmax(v33, 0.0);
  if (v33 <= 1.0)
    v35 = v34;
  else
    v35 = 1.0;
  result = v18 + v19 * v35;
  a5[1] = result;
  return result;
}

uint64_t sub_2397D21E4(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  char *v17;
  float *v18;
  char v19;
  char v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 255.0;
    v3 = a3 >= 255.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOBYTE(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_2397D2920(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1132396544;
      if (a3 <= 255.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOBYTE(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_2397D2FCC(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_2397D1738(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_2397D22E4(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_2397D22E4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397D258C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D2528(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397D258C(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397D2774(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    return sub_2397D2774(&v27, v34, a1, v13, v19);
  }
  return result;
}

float sub_2397D2774(_DWORD *a1, _QWORD *a2, unsigned __int8 ****a3, unsigned __int8 *a4, float *a5)
{
  int v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  float *v15;
  float result;
  float *v17;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = a1[6];
    v9 = 4 * a1[7];
    do
    {
      while (1)
      {
        *a2 = a4;
        a2[2] = a5;
        v11 = *a4;
        if (v11 >= *v7)
          break;
        *a5 = *(float *)v6[1];
        v12 = a4[1];
        if (v12 >= *v7)
          goto LABEL_12;
LABEL_3:
        v10 = v6[1];
LABEL_4:
        a5[1] = *(float *)v10;
        a4 += v8;
        a5 = (float *)((char *)a5 + v9);
        if (!--v5)
          goto LABEL_15;
      }
      if (v11 <= *v6[2])
      {
        *a5 = (float)v11;
        v12 = a4[1];
        if (v12 >= *v7)
          goto LABEL_12;
        goto LABEL_3;
      }
      *a5 = *(float *)v6[3];
      v12 = a4[1];
      if (v12 < *v7)
        goto LABEL_3;
LABEL_12:
      if (v12 > *v6[2])
      {
        v10 = v6[3];
        goto LABEL_4;
      }
      a5[1] = (float)v12;
      a4 += v8;
      a5 = (float *)((char *)a5 + v9);
      --v5;
    }
    while (v5);
  }
LABEL_15:
  *a2 = a4;
  a2[2] = a5;
  v13 = *a4;
  if (v13 >= *v7)
  {
    if (v13 <= *v6[2])
    {
      *a5 = (float)v13;
      v14 = a4[1];
      if (v14 >= *v7)
        goto LABEL_20;
    }
    else
    {
      *a5 = *(float *)v6[3];
      v14 = a4[1];
      if (v14 >= *v7)
        goto LABEL_20;
    }
LABEL_23:
    v17 = (float *)v6[1];
    result = *v17;
    a5[1] = *v17;
    return result;
  }
  *a5 = *(float *)v6[1];
  v14 = a4[1];
  if (v14 < *v7)
    goto LABEL_23;
LABEL_20:
  if (v14 <= *v6[2])
  {
    result = (float)v14;
    a5[1] = (float)v14;
  }
  else
  {
    v15 = (float *)v6[3];
    result = *v15;
    a5[1] = *v15;
  }
  return result;
}

uint64_t sub_2397D2920(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397D2BC8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D2B64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397D2BC8(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397D2D6C(&v26, v33, a1, v13, v19);
  }
  return result;
}

float sub_2397D2D6C(_DWORD *a1, _QWORD *a2, unsigned __int8 ****a3, unsigned __int8 *a4, float *a5)
{
  unsigned int i;
  float v6;
  int v7;
  unsigned __int8 **v8;
  unsigned __int8 *v9;
  float *v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unsigned __int8 **v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  float result;
  float *v28;

  if (a1[8])
  {
    for (i = 0; i < a1[8]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = a1[5];
      v8 = **a3;
      v9 = *v8;
      v10 = a5;
      v11 = a4;
      if (v7)
      {
        v12 = a1[6];
        v13 = 4 * a1[7];
        v10 = a5;
        v11 = a4;
        while (1)
        {
          *a2 = v11;
          a2[2] = v10;
          v14 = *v11;
          if (v14 >= *v9)
          {
            *v10 = (float)v14;
            v15 = v11[1];
            if (v15 < *v9)
              goto LABEL_7;
LABEL_12:
            v10[1] = (float)v15;
            v11 += v12;
            v10 = (float *)((char *)v10 + v13);
            if (!--v7)
              break;
          }
          else
          {
            *v10 = *(float *)v8[1];
            v15 = v11[1];
            if (v15 >= *v9)
              goto LABEL_12;
LABEL_7:
            v10[1] = *(float *)v8[1];
            v11 += v12;
            v10 = (float *)((char *)v10 + v13);
            if (!--v7)
              break;
          }
        }
      }
      *a2 = v11;
      a2[2] = v10;
      v16 = *v11;
      if (v16 >= *v9)
      {
        *v10 = (float)v16;
        v17 = v11[1];
        if (v17 >= *v9)
        {
LABEL_17:
          v6 = (float)v17;
          goto LABEL_4;
        }
      }
      else
      {
        *v10 = *(float *)v8[1];
        v17 = v11[1];
        if (v17 >= *v9)
          goto LABEL_17;
      }
      v6 = *(float *)v8[1];
LABEL_4:
      v10[1] = v6;
      a4 += a1[9];
      a5 += a1[10];
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v18 = a1[5];
  v19 = **a3;
  v20 = *v19;
  if (v18)
  {
    v21 = a1[6];
    v22 = 4 * a1[7];
    while (1)
    {
      *a2 = a4;
      a2[2] = a5;
      v23 = *a4;
      if (v23 >= *v20)
      {
        *a5 = (float)v23;
        v24 = a4[1];
        if (v24 < *v20)
          goto LABEL_20;
LABEL_25:
        a5[1] = (float)v24;
        a4 += v21;
        a5 = (float *)((char *)a5 + v22);
        if (!--v18)
          break;
      }
      else
      {
        *a5 = *(float *)v19[1];
        v24 = a4[1];
        if (v24 >= *v20)
          goto LABEL_25;
LABEL_20:
        a5[1] = *(float *)v19[1];
        a4 += v21;
        a5 = (float *)((char *)a5 + v22);
        if (!--v18)
          break;
      }
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v25 = *a4;
  if (v25 >= *v20)
  {
    *a5 = (float)v25;
    v26 = a4[1];
    if (v26 >= *v20)
      goto LABEL_28;
  }
  else
  {
    *a5 = *(float *)v19[1];
    v26 = a4[1];
    if (v26 >= *v20)
    {
LABEL_28:
      result = (float)v26;
      a5[1] = (float)v26;
      return result;
    }
  }
  v28 = (float *)v19[1];
  result = *v28;
  a5[1] = *v28;
  return result;
}

uint64_t sub_2397D2FCC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397D3274(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D3210(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397D3274(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397D3418(&v26, v33, a1, v13, v19);
  }
  return result;
}

float sub_2397D3418(_DWORD *a1, _QWORD *a2, unsigned __int8 ****a3, unsigned __int8 *a4, float *a5)
{
  unsigned int i;
  float v6;
  int v7;
  unsigned __int8 **v8;
  unsigned __int8 *v9;
  float *v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unsigned __int8 **v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  float result;
  float *v28;

  if (a1[8])
  {
    for (i = 0; i < a1[8]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = a1[5];
      v8 = **a3;
      v9 = *v8;
      v10 = a5;
      v11 = a4;
      if (v7)
      {
        v12 = a1[6];
        v13 = 4 * a1[7];
        v10 = a5;
        v11 = a4;
        while (1)
        {
          *a2 = v11;
          a2[2] = v10;
          v14 = *v11;
          if (v14 <= *v9)
          {
            *v10 = (float)v14;
            v15 = v11[1];
            if (v15 > *v9)
              goto LABEL_7;
LABEL_12:
            v10[1] = (float)v15;
            v11 += v12;
            v10 = (float *)((char *)v10 + v13);
            if (!--v7)
              break;
          }
          else
          {
            *v10 = *(float *)v8[1];
            v15 = v11[1];
            if (v15 <= *v9)
              goto LABEL_12;
LABEL_7:
            v10[1] = *(float *)v8[1];
            v11 += v12;
            v10 = (float *)((char *)v10 + v13);
            if (!--v7)
              break;
          }
        }
      }
      *a2 = v11;
      a2[2] = v10;
      v16 = *v11;
      if (v16 <= *v9)
      {
        *v10 = (float)v16;
        v17 = v11[1];
        if (v17 <= *v9)
        {
LABEL_17:
          v6 = (float)v17;
          goto LABEL_4;
        }
      }
      else
      {
        *v10 = *(float *)v8[1];
        v17 = v11[1];
        if (v17 <= *v9)
          goto LABEL_17;
      }
      v6 = *(float *)v8[1];
LABEL_4:
      v10[1] = v6;
      a4 += a1[9];
      a5 += a1[10];
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v18 = a1[5];
  v19 = **a3;
  v20 = *v19;
  if (v18)
  {
    v21 = a1[6];
    v22 = 4 * a1[7];
    while (1)
    {
      *a2 = a4;
      a2[2] = a5;
      v23 = *a4;
      if (v23 <= *v20)
      {
        *a5 = (float)v23;
        v24 = a4[1];
        if (v24 > *v20)
          goto LABEL_20;
LABEL_25:
        a5[1] = (float)v24;
        a4 += v21;
        a5 = (float *)((char *)a5 + v22);
        if (!--v18)
          break;
      }
      else
      {
        *a5 = *(float *)v19[1];
        v24 = a4[1];
        if (v24 <= *v20)
          goto LABEL_25;
LABEL_20:
        a5[1] = *(float *)v19[1];
        a4 += v21;
        a5 = (float *)((char *)a5 + v22);
        if (!--v18)
          break;
      }
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v25 = *a4;
  if (v25 <= *v20)
  {
    *a5 = (float)v25;
    v26 = a4[1];
    if (v26 <= *v20)
      goto LABEL_28;
  }
  else
  {
    *a5 = *(float *)v19[1];
    v26 = a4[1];
    if (v26 <= *v20)
    {
LABEL_28:
      result = (float)v26;
      a5[1] = (float)v26;
      return result;
    }
  }
  v28 = (float *)v19[1];
  result = *v28;
  a5[1] = *v28;
  return result;
}

void sub_2397D3678(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397D3780(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397D3764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397D3780(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 8);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397D38D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397D38E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826920(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 4);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 8;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397D3998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2397D39B8(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2397D39DC@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397D3AA0(a1, a2);
}

double sub_2397D39E8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397D5C90(a1, a2);
}

double sub_2397D39F4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397D8104(a1, a2);
}

double sub_2397D3A00@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397D5518(a1, a2);
}

uint64_t sub_2397D3AA0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2397D3CDC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEBA48;
  sub_2397CA7AC((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2397D3BB4(*(_QWORD *)a1, (uint64_t)&v11, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2397D3B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397D3B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397D3BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250ADB428;
  sub_2397D52AC(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEBE60[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397CA6BC(a2, (uint64_t)(a4 + 1));
}

void sub_2397D3CA0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397D3CB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397D3CC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239419954((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397D3CDC(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 6;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2397D3E1C((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397CDB30((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2397D3DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397D3E08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397D3E1C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 6);
  *a2 = &off_250AEBB40;
  sub_2397CB790((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2397D3F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397D3F58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397D3F6C(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5)
{
  return sub_2397D3FB4(**a1, (*a1)[1], a2, a3, a4, a5);
}

uint64_t sub_2397D3F7C(uint64_t **a1, uint64_t a2)
{
  return sub_2397D4BE0(**a1, (*a1)[1], a2);
}

uint64_t sub_2397D3F8C(uint64_t **a1)
{
  char v2;

  return sub_2397D40DC(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_2397D3FB4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6)
{
  double v6;
  int v7;
  double v8;
  unsigned int v9;
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  unsigned int v14;
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];
  double v19;
  double v20;
  double v21;
  double v22;

  if (!*(_BYTE *)(a3 + 16))
  {
    v9 = -65536;
    v10 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    v13 = 255;
    v14 = HIWORD(v9);
    if (v10 != (unsigned __int16)v9)
      goto LABEL_17;
    goto LABEL_15;
  }
  v6 = *(double *)a3;
  a6 = 0.0;
  if (*(double *)a3 < 0.0)
    v6 = 0.0;
  v7 = (int)v6;
  v8 = 65535.0;
  if (*(double *)(a3 + 8) <= 65535.0)
    v8 = *(double *)(a3 + 8);
  v9 = v7 | ((int)v8 << 16);
  v10 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v11 = *(double *)(a3 + 24);
  a6 = 0.0;
  if (v11 < 0.0)
    v11 = 0.0;
  v10 = (int)v11;
  v12 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v12 = *(double *)(a3 + 32);
  v13 = (int)v12;
  v14 = HIWORD(v9);
  if (v10 != (unsigned __int16)v9)
    goto LABEL_17;
LABEL_15:
  if (v14 == v13)
    return sub_2397D40DC(a1, a2, (uint64_t)v18);
LABEL_17:
  v22 = (double)(unsigned __int16)v9;
  v20 = (double)v10;
  v21 = 1.0 / ((double)v14 - v22);
  a4.n128_f64[0] = (double)v13 - (double)v10;
  v19 = a4.n128_f64[0];
  v18[0] = &v22;
  v18[1] = &v21;
  v17[0] = &v20;
  v17[1] = &v19;
  v16[0] = v18;
  v16[1] = v17;
  return sub_2397D45AC(a1, a2, (uint64_t)v16, a4, (double)v10, a6);
}

uint64_t sub_2397D40DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397D4384((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397D4320(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397D4384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  _BYTE *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  int v34;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v12 = *(unsigned int *)(a3 + 48);
    v13 = *(unsigned int *)(a3 + 52);
    v14 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(_BYTE **)(a2 + 24);
    }
    v21 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v21)
    {
      v22 = *(_QWORD *)(a3 + 8);
      v23 = *(std::__shared_weak_count **)(a3 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_BYTE **)(a3 + 24);
    }
    v27 = v3 - 1;
    v28 = 2 * v11;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          *v21 = *v14;
          v21[1] = v14[2];
          v21 += v13;
          v14 += 2 * v10;
          --v9;
        }
        while (v9);
      }
      else
      {
        v29 = 0;
        v30 = v14 + 2;
        v31 = v21 + 1;
        do
        {
          v32 = v31;
          v33 = v30;
          v34 = v3 - 1;
          do
          {
            *(v32 - 1) = *(v33 - 2);
            result = *v33;
            *v32 = result;
            v33 += v28;
            v32 += v12;
            --v34;
          }
          while (v34);
          *(v32 - 1) = *(v33 - 2);
          *v32 = *v33;
          v14 += 2 * v10;
          v21 += v13;
          ++v29;
          v30 += 2 * v10;
          v31 += v13;
        }
        while (v29 != v9);
      }
    }
    if (v3 != 1)
    {
      do
      {
        *v21 = *v14;
        v21[1] = v14[2];
        v21 += v12;
        v14 += v28;
        --v27;
      }
      while (v27);
    }
    *v21 = *v14;
    v21[1] = v14[2];
  }
  return result;
}

uint64_t sub_2397D45AC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6)
{
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double ****v32;

  v9 = *(_QWORD *)(a1 + 8);
  if (!v9)
    goto LABEL_17;
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v9 = *(_QWORD *)(a1 + 8);
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v30 = 0;
    v18 = *(_QWORD *)(a2 + 8);
    if (!v18)
      goto LABEL_33;
LABEL_18:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(a2 + 8);
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v29, v18, 1);
    v31 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(&v30, v9, 0);
  v18 = *(_QWORD *)(a2 + 8);
  if (v18)
    goto LABEL_18;
LABEL_33:
  v29 = 0;
  v31 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v32 = (double ****)&v31;
    a4.n128_f64[0] = sub_2397D4854(&v32, a1, a2, a4.n128_f64[0], a5, a6);
  }
LABEL_37:
  v27 = v29;
  v29 = 0;
  if (v27)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v27 + 8))(v27, a4);
  result = v30;
  v30 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D47F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397D4854(double *****a1, uint64_t a2, uint64_t a3, double result, double a5, double a6)
{
  int v6;
  int v7;
  int v8;
  BOOL v9;
  uint64_t v14;
  uint64_t v15;
  _WORD *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  double v28;
  unsigned int i;
  uint64_t v30;
  int v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  unint64_t v36;
  _OWORD v37[2];

  v7 = *(_DWORD *)(a2 + 32);
  v6 = *(_DWORD *)(a2 + 36);
  v8 = *(_DWORD *)(a2 + 40);
  if (v7)
    v9 = v6 == 0;
  else
    v9 = 1;
  if (!v9 && v8 != 0)
  {
    v31 = v7 - 1;
    v14 = *(unsigned int *)(a2 + 48);
    v15 = *(unsigned int *)(a3 + 48);
    v32 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v30 = 0;
    v33 = v6 - 1;
    v34 = v14 | (v15 << 32);
    v35 = v8 - 1;
    v36 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v16 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v16)
    {
      v17 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (v18)
      {
        p_shared_owners = (unint64_t *)&v18->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
        do
          v21 = __ldaxr(p_shared_owners);
        while (__stlxr(v21 - 1, p_shared_owners));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v17 + 88))(v17, 0, "unknown location");
      v16 = *(_WORD **)(a2 + 24);
    }
    v22 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v22)
    {
      v23 = *(_QWORD *)(a3 + 8);
      v24 = *(std::__shared_weak_count **)(a3 + 16);
      if (v24)
      {
        v25 = (unint64_t *)&v24->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
        do
          v27 = __ldaxr(v25);
        while (__stlxr(v27 - 1, v25));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v23 + 88))(v23, 1, "unknown location");
      v22 = *(_BYTE **)(a3 + 24);
    }
    v28 = 0.0;
    memset(v37, 0, sizeof(v37));
    if (v35)
    {
      for (i = 0; i < v35; ++i)
      {
        v28 = sub_2397D4A3C(&v30, v37, a1, v16, v22, v28, a5, a6);
        v16 += v36;
        v22 += HIDWORD(v36);
      }
    }
    return sub_2397D4A3C(&v30, v37, a1, v16, v22, v28, a5, a6);
  }
  return result;
}

double sub_2397D4A3C(_DWORD *a1, _QWORD *a2, double *****a3, _WORD *a4, _BYTE *a5, double a6, double a7, double a8)
{
  unsigned int v8;
  double ***v9;
  double **v10;
  double **v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double ***v16;
  double **v17;
  double **v18;
  double v19;
  double v20;
  double v21;
  double ***v22;
  double **v23;
  double **v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double ***v29;
  double **v30;
  double **v31;
  double v32;
  double v33;
  double v34;
  double result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v8 = 0;
    a6 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v9 = **a3;
      LOWORD(a8) = *a4;
      v11 = *v9;
      v10 = v9[1];
      v12 = ((double)*(unint64_t *)&a8 - **v11) * *v11[1];
      v13 = fmax(v12, 0.0);
      if (v12 <= 1.0)
        v14 = v13;
      else
        v14 = 1.0;
      v15 = **v10 + v14 * *v10[1];
      *a5 = llround(v15);
      v16 = **a3;
      LOWORD(v15) = *(_WORD *)(*a2 + 2);
      v18 = *v16;
      v17 = v16[1];
      v19 = ((double)*(unint64_t *)&v15 - **v18) * *v18[1];
      v20 = fmax(v19, 0.0);
      if (v19 <= 1.0)
        v21 = v20;
      else
        v21 = 1.0;
      a8 = **v17 + v21 * *v17[1];
      *(_BYTE *)(a2[2] + 1) = llround(a8);
      a4 += a1[6];
      a5 += a1[7];
      ++v8;
    }
    while (v8 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v22 = **a3;
  LOWORD(a6) = *a4;
  v24 = *v22;
  v23 = v22[1];
  v25 = ((double)*(unint64_t *)&a6 - **v24) * *v24[1];
  v26 = fmax(v25, 0.0);
  if (v25 <= 1.0)
    v27 = v26;
  else
    v27 = 1.0;
  v28 = **v23 + v27 * *v23[1];
  *a5 = llround(v28);
  v29 = **a3;
  LOWORD(v28) = *(_WORD *)(*a2 + 2);
  v31 = *v29;
  v30 = v29[1];
  v32 = ((double)*(unint64_t *)&v28 - **v31) * *v31[1];
  v33 = fmax(v32, 0.0);
  if (v32 <= 1.0)
    v34 = v33;
  else
    v34 = 1.0;
  result = **v30 + v34 * *v30[1];
  *(_BYTE *)(a2[2] + 1) = llround(result);
  return result;
}

uint64_t sub_2397D4BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  _QWORD v8[4];
  int v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    HIWORD(v9) = v5;
    LOWORD(v9) = (int)v6;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 255;
  }
  v8[0] = (char *)&v9 + 2;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_2397D4C90(a1, a2, (uint64_t)v8);
}

uint64_t sub_2397D4C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int16 ***)&v28;
    sub_2397D4F38(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397D4ED4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 ****sub_2397D4F38(unsigned __int16 ****result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  unsigned __int16 ****v10;
  uint64_t v11;
  uint64_t v12;
  _WORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_WORD **)(a2 + 24);
    }
    v19 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_BYTE **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2397D5120(&v26, v33, v10, v13, v19);
        v13 += v32;
        v19 += HIDWORD(v32);
      }
    }
    return (unsigned __int16 ****)sub_2397D5120(&v26, v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397D5120(_DWORD *result, _QWORD *a2, unsigned __int16 ****a3, _WORD *a4, _BYTE *a5)
{
  unsigned int i;
  unsigned __int16 *v6;
  char v7;
  unsigned __int16 **v8;
  unsigned int v9;
  char v10;
  unsigned __int16 **v11;
  unsigned int v12;
  unsigned __int16 **v13;
  unsigned int v14;
  char v15;
  uint64_t v16;
  unsigned __int16 **v17;
  unsigned int v18;

  *a2 = a4;
  a2[2] = a5;
  if (result[5])
  {
    for (i = 0; i < result[5]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      v9 = (unsigned __int16)*a4;
      if (v9 >= **v8)
      {
        if (v9 <= *v8[2])
          v10 = *a4;
        else
          v10 = *(_BYTE *)v8[3];
      }
      else
      {
        v10 = *(_BYTE *)v8[1];
      }
      *a5 = v10;
      v11 = **a3;
      v12 = *(unsigned __int16 *)(*a2 + 2);
      if (v12 < **v11)
      {
        v6 = v11[1];
      }
      else
      {
        if (v12 <= *v11[2])
        {
          v7 = *(_WORD *)(*a2 + 2);
          goto LABEL_5;
        }
        v6 = v11[3];
      }
      v7 = *(_BYTE *)v6;
LABEL_5:
      *(_BYTE *)(a2[2] + 1) = v7;
      a4 += result[6];
      a5 += result[7];
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v13 = **a3;
  v14 = (unsigned __int16)*a4;
  if (v14 >= **v13)
  {
    if (v14 <= *v13[2])
      v15 = *a4;
    else
      v15 = *(_BYTE *)v13[3];
  }
  else
  {
    v15 = *(_BYTE *)v13[1];
  }
  *a5 = v15;
  v16 = a2[2];
  v17 = **a3;
  v18 = *(unsigned __int16 *)(*a2 + 2);
  if (v18 >= **v17)
  {
    if (v18 <= *v17[2])
      *(_BYTE *)(v16 + 1) = v18;
    else
      *(_BYTE *)(v16 + 1) = *(_BYTE *)v17[3];
  }
  else
  {
    *(_BYTE *)(v16 + 1) = *(_BYTE *)v17[1];
  }
  return result;
}

void sub_2397D52AC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397D53B4(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397D5398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397D53B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 5);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397D5504(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

double sub_2397D5518@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397D3CDC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEBB40;
  sub_2397CB790((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397D5664(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2397CDB30((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397D5608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397D562C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397D5648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397D5664(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2397D5808(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397D57A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2397D5808(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 2 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v16 = (2 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397D5960(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2397D5960(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397D5B2C(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397D5AC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

unsigned int *sub_2397D5B2C(unsigned int *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  _QWORD v27[6];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t *)result;
    v21 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 104);
    v22 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 100) << 32);
    v20 = 0;
    v23 = v3 - 1;
    v24 = v11 | (v12 << 32);
    v25 = v5 - 1;
    v26 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 108) << 32);
    v13 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(char **)(a2 + 24);
    }
    v19 = *(char **)(a3 + 32);
    if (*(_BYTE *)(a3 + 128))
    {
      if (v19)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a3 + 8) + 88))(*(_QWORD *)(a3 + 8), 1, "unknown location");
        v19 = *(char **)(a3 + 32);
      }
    }
    v27[2] = 0;
    v27[3] = 0;
    v27[0] = 0;
    v27[1] = 1;
    v27[4] = 1;
    v27[5] = 0;
    return sub_23974C96C((unsigned int *)&v20, (uint64_t)v27, v10, v13, v19);
  }
  return result;
}

double sub_2397D5C90@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397D3CDC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEBC50;
  sub_2397CDE68((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397D5DA4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397D5D6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397D5D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397D5DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE9278;
  sub_2397D07F4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEBE78[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397D0A60(a2, (uint64_t)(a4 + 1));
}

void sub_2397D5E90(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397D5EA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397D5EB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23978DC10((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397D5ECC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2397D5FDC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2397D5EDC(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2397D6C9C((uint64_t)v13, 2080373759, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = -65504.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 65504.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  else
    _Q0.n128_f64[0] = 65504.0;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2397D6C9C((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_2397D5FB4(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2397D612C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2397D5FDC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  unsigned int v15;
  unsigned int v18;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    _Q0.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)_Q0.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  v15 = (unsigned __int16)v6;
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm { FCVT            S3, H0 }
  v18 = HIWORD(v6);
  __asm { FCVT            S3, H1 }
  _ZF = _ZF && _S3 == (float)v18;
  if (_ZF)
    return sub_2397D612C(a1, a2, (uint64_t)v25, _Q0);
  v29 = (double)v15;
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_2397D6658(a1, a2, (uint64_t)v23, _Q0, _D1, 1.0 / ((double)v18 - (double)v15));
}

uint64_t sub_2397D612C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = sub_2397D63D4(a4.n128_f32[0], (uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D6370(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 sub_2397D63D4@<H0>(float _S0@<S0>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>)
{
  int v4;
  int v5;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _WORD *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  _WORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  _WORD *v31;
  _WORD *v32;
  _WORD *v33;
  _WORD *v34;
  int v35;
  __int16 result;

  v4 = *(_DWORD *)(a3 + 36);
  v5 = *(_DWORD *)(a3 + 40);
  if (*(_DWORD *)(a3 + 32))
    _ZF = v4 == 0;
  else
    _ZF = 1;
  if (!_ZF && v5 != 0)
  {
    v10 = v5 - 1;
    v12 = *(unsigned int *)(a3 + 48);
    v11 = *(unsigned int *)(a3 + 52);
    v14 = *(unsigned int *)(a4 + 48);
    v13 = *(unsigned int *)(a4 + 52);
    v15 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v15)
    {
      v16 = *(_QWORD *)(a3 + 8);
      v17 = *(std::__shared_weak_count **)(a3 + 16);
      if (v17)
      {
        p_shared_owners = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(p_shared_owners);
        while (__stxr(v19 + 1, p_shared_owners));
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v16 + 88))(v16, 0, "unknown location");
      v15 = *(_WORD **)(a3 + 24);
    }
    v21 = *(_WORD **)(a4 + 24);
    if (*(_BYTE *)(a4 + 72) && v21)
    {
      v22 = *(_QWORD *)(a4 + 8);
      v23 = *(std::__shared_weak_count **)(a4 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_WORD **)(a4 + 24);
    }
    v27 = v4 - 1;
    v28 = 2 * v12;
    v29 = 2 * v14;
    if (v10)
    {
      if (v4 == 1)
      {
        do
        {
          LOWORD(_S0) = *v15;
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v21 = _S0;
          LOWORD(_S0) = v15[1];
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v21[1] = LOWORD(_S0);
          v15 += v11;
          v21 += v13;
          --v10;
        }
        while (v10);
      }
      else
      {
        v30 = 0;
        v31 = v15 + 1;
        v32 = v21 + 1;
        do
        {
          v33 = v32;
          v34 = v31;
          v35 = v4 - 1;
          do
          {
            LOWORD(_S0) = *(v34 - 1);
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *(v33 - 1) = _S0;
            LOWORD(_S0) = *v34;
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *v33 = LOWORD(_S0);
            v34 = (_WORD *)((char *)v34 + v28);
            v33 = (_WORD *)((char *)v33 + v29);
            --v35;
          }
          while (v35);
          LOWORD(_S0) = *(v34 - 1);
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *(v33 - 1) = _S0;
          LOWORD(_S0) = *v34;
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          *v33 = LOWORD(_S0);
          v15 += v11;
          v21 += v13;
          ++v30;
          v31 += v11;
          v32 += v13;
        }
        while (v30 != v10);
      }
    }
    if (v4 != 1)
    {
      do
      {
        LOWORD(_S0) = *v15;
        *(float *)&_S0 = (float)LODWORD(_S0);
        __asm { FCVT            H0, S0 }
        *v21 = _S0;
        LOWORD(_S0) = v15[1];
        _S0 = (float)_S0;
        __asm { FCVT            H0, S0 }
        v21[1] = LOWORD(_S0);
        v15 = (_WORD *)((char *)v15 + v28);
        v21 = (_WORD *)((char *)v21 + v29);
        --v27;
      }
      while (v27);
    }
    LOWORD(_S0) = *v15;
    *(float *)&_S0 = (float)LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    *v21 = _S0;
    LOWORD(_S0) = v15[1];
    _S0 = (float)_S0;
    __asm { FCVT            H0, S0 }
    v21[1] = result;
  }
  return result;
}

uint64_t sub_2397D6658(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6)
{
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double ****v32;

  v9 = *(_QWORD *)(a1 + 8);
  if (!v9)
    goto LABEL_17;
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v9 = *(_QWORD *)(a1 + 8);
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v30 = 0;
    v18 = *(_QWORD *)(a2 + 8);
    if (!v18)
      goto LABEL_33;
LABEL_18:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(a2 + 8);
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v29, v18, 1);
    v31 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(&v30, v9, 0);
  v18 = *(_QWORD *)(a2 + 8);
  if (v18)
    goto LABEL_18;
LABEL_33:
  v29 = 0;
  v31 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v32 = (double ****)&v31;
    a4.n128_f64[0] = sub_2397D6900(&v32, a1, a2, a4.n128_f64[0], a5, a6);
  }
LABEL_37:
  v27 = v29;
  v29 = 0;
  if (v27)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v27 + 8))(v27, a4);
  result = v30;
  v30 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D689C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397D6900(double *****a1, uint64_t a2, uint64_t a3, double result, double a5, double a6)
{
  int v6;
  int v7;
  int v8;
  BOOL v9;
  uint64_t v14;
  uint64_t v15;
  _WORD *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  _WORD *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  double v28;
  unsigned int i;
  uint64_t v30;
  int v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  unint64_t v36;
  _OWORD v37[2];

  v7 = *(_DWORD *)(a2 + 32);
  v6 = *(_DWORD *)(a2 + 36);
  v8 = *(_DWORD *)(a2 + 40);
  if (v7)
    v9 = v6 == 0;
  else
    v9 = 1;
  if (!v9 && v8 != 0)
  {
    v31 = v7 - 1;
    v14 = *(unsigned int *)(a2 + 48);
    v15 = *(unsigned int *)(a3 + 48);
    v32 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v30 = 0;
    v33 = v6 - 1;
    v34 = v14 | (v15 << 32);
    v35 = v8 - 1;
    v36 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v16 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v16)
    {
      v17 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (v18)
      {
        p_shared_owners = (unint64_t *)&v18->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
        do
          v21 = __ldaxr(p_shared_owners);
        while (__stlxr(v21 - 1, p_shared_owners));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v17 + 88))(v17, 0, "unknown location");
      v16 = *(_WORD **)(a2 + 24);
    }
    v22 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v22)
    {
      v23 = *(_QWORD *)(a3 + 8);
      v24 = *(std::__shared_weak_count **)(a3 + 16);
      if (v24)
      {
        v25 = (unint64_t *)&v24->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
        do
          v27 = __ldaxr(v25);
        while (__stlxr(v27 - 1, v25));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v23 + 88))(v23, 1, "unknown location");
      v22 = *(_WORD **)(a3 + 24);
    }
    v28 = 0.0;
    memset(v37, 0, sizeof(v37));
    if (v35)
    {
      for (i = 0; i < v35; ++i)
      {
        *(_QWORD *)&v28 = sub_2397D6AE8(&v30, v37, a1, v16, v22, v28, a5, a6);
        v16 += v36;
        v22 += HIDWORD(v36);
      }
    }
    *(_QWORD *)&result = sub_2397D6AE8(&v30, v37, a1, v16, v22, v28, a5, a6);
  }
  return result;
}

__int16 sub_2397D6AE8@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, double *****a3@<X2>, _WORD *a4@<X3>, _WORD *a5@<X4>, double a6@<D0>, double a7@<D1>, double _D2@<D2>)
{
  unsigned int v8;
  double ***v9;
  double **v10;
  double **v11;
  double v12;
  double v13;
  double v14;
  double ***v20;
  double **v21;
  double **v22;
  double v23;
  double v24;
  double v25;
  double ***v26;
  double **v27;
  double **v28;
  double v29;
  double v30;
  double v31;
  double ***v33;
  double **v34;
  double **v35;
  double v36;
  double v37;
  double v38;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v8 = 0;
    a6 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v9 = **a3;
      LOWORD(_D2) = *a4;
      v11 = *v9;
      v10 = v9[1];
      v12 = ((double)*(unint64_t *)&_D2 - **v11) * *v11[1];
      v13 = fmax(v12, 0.0);
      if (v12 <= 1.0)
        v14 = v13;
      else
        v14 = 1.0;
      _D2 = **v10 + v14 * *v10[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *a5 = LOWORD(_D2);
      v20 = **a3;
      LOWORD(_D2) = *(_WORD *)(*a2 + 2);
      v22 = *v20;
      v21 = v20[1];
      v23 = ((double)*(unint64_t *)&_D2 - **v22) * *v22[1];
      v24 = fmax(v23, 0.0);
      if (v23 <= 1.0)
        v25 = v24;
      else
        v25 = 1.0;
      _D2 = **v21 + v25 * *v21[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *(_WORD *)(a2[2] + 2) = LOWORD(_D2);
      a4 += a1[6];
      a5 += a1[7];
      ++v8;
    }
    while (v8 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = **a3;
  LOWORD(a6) = *a4;
  v28 = *v26;
  v27 = v26[1];
  v29 = ((double)*(unint64_t *)&a6 - **v28) * *v28[1];
  v30 = fmax(v29, 0.0);
  if (v29 <= 1.0)
    v31 = v30;
  else
    v31 = 1.0;
  _D0 = **v27 + v31 * *v27[1];
  *(float *)&_D0 = _D0;
  __asm { FCVT            H0, S0 }
  *a5 = LOWORD(_D0);
  v33 = **a3;
  LOWORD(_D0) = *(_WORD *)(*a2 + 2);
  v35 = *v33;
  v34 = v33[1];
  v36 = ((double)*(unint64_t *)&_D0 - **v35) * *v35[1];
  v37 = fmax(v36, 0.0);
  if (v36 <= 1.0)
    v38 = v37;
  else
    v38 = 1.0;
  _S0 = **v34 + v38 * *v34[1];
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 2) = result;
  return result;
}

uint64_t sub_2397D6C9C(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  __int16 *v23;
  __int16 *v24;
  __int16 v25;
  __int16 v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 65535.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      v27 = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2397D73E4(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 65535.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      v27 = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2397D7A74(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_2397D612C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = &v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_2397D6DB8(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_2397D6DB8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397D7060(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D6FFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397D7060@<H0>(unsigned __int16 ****a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  unsigned __int16 result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397D7248(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    return sub_2397D7248(&v27, v34, a1, v13, v19);
  }
  return result;
}

unsigned __int16 sub_2397D7248@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int16 ****a3@<X2>, unsigned __int16 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int i;
  unsigned __int16 *v6;
  unsigned __int16 **v8;
  unsigned int v9;
  unsigned __int16 **v16;
  unsigned int v17;
  unsigned __int16 **v19;
  unsigned int v20;
  uint64_t v23;
  unsigned __int16 **v24;
  unsigned int v25;
  unsigned __int16 *v26;
  unsigned __int16 result;
  unsigned __int16 *v28;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    for (i = 0; i < a1[5]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      v9 = *a4;
      if (v9 >= **v8)
      {
        if (v9 <= *v8[2])
        {
          _S0 = (float)v9;
          __asm { FCVT            H0, S0 }
        }
        else
        {
          _H0 = *v8[3];
        }
      }
      else
      {
        _H0 = *v8[1];
      }
      *a5 = _H0;
      v16 = **a3;
      v17 = *(unsigned __int16 *)(*a2 + 2);
      if (v17 < **v16)
      {
        v6 = v16[1];
      }
      else
      {
        if (v17 <= *v16[2])
        {
          _S0 = (float)v17;
          __asm { FCVT            H0, S0 }
          goto LABEL_5;
        }
        v6 = v16[3];
      }
      _H0 = *v6;
LABEL_5:
      *(_WORD *)(a2[2] + 2) = _H0;
      a4 += a1[6];
      a5 += a1[7];
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v19 = **a3;
  v20 = *a4;
  if (v20 >= **v19)
  {
    if (v20 <= *v19[2])
    {
      _S0 = (float)v20;
      __asm { FCVT            H0, S0 }
    }
    else
    {
      _H0 = *v19[3];
    }
  }
  else
  {
    _H0 = *v19[1];
  }
  *a5 = _H0;
  v23 = a2[2];
  v24 = **a3;
  v25 = *(unsigned __int16 *)(*a2 + 2);
  if (v25 >= **v24)
  {
    if (v25 <= *v24[2])
    {
      _S0 = (float)v25;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(v23 + 2) = result;
    }
    else
    {
      v28 = v24[3];
      result = *v28;
      *(_WORD *)(v23 + 2) = *v28;
    }
  }
  else
  {
    v26 = v24[1];
    result = *v26;
    *(_WORD *)(v23 + 2) = *v26;
  }
  return result;
}

uint64_t sub_2397D73E4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397D768C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D7628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397D768C@<H0>(unsigned __int16 ****a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 result;
  _WORD *v26;
  unsigned __int16 *v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  unint64_t v34;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v29 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v30 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v28 = 0;
    v31 = v3 - 1;
    v32 = v11 | (v12 << 32);
    v33 = v5 - 1;
    v34 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v27 = v13;
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    v26 = v19;
    return sub_2397D7830(&v28, a1, &v27, &v26);
  }
  return result;
}

unsigned __int16 sub_2397D7830@<H0>(_DWORD *a1@<X0>, unsigned __int16 ****a2@<X1>, unsigned __int16 **a3@<X2>, _WORD **a4@<X3>)
{
  unsigned __int16 *v4;
  _WORD *v5;
  unsigned int v6;
  _WORD *v8;
  unsigned __int16 *v9;
  unsigned int v10;
  unsigned __int16 **v12;
  unsigned int v13;
  unsigned __int16 **v20;
  unsigned int v21;
  unsigned __int16 **v23;
  unsigned int v24;
  unsigned __int16 **v27;
  unsigned int v28;
  unsigned int v30;
  unsigned __int16 **v32;
  unsigned int v33;
  unsigned __int16 **v36;
  unsigned int v37;
  unsigned __int16 **v39;
  unsigned int v40;
  unsigned __int16 **v43;
  unsigned int v44;
  unsigned __int16 *v45;
  unsigned __int16 result;

  v4 = *a3;
  v5 = *a4;
  if (a1[8])
  {
    v6 = 0;
    do
    {
      v8 = v5;
      v9 = v4;
      if (a1[5])
      {
        v10 = 0;
        v9 = v4;
        v8 = v5;
        do
        {
          v12 = **a2;
          v13 = *v9;
          if (v13 >= **v12)
          {
            _S0 = (float)v13;
            __asm { FCVT            H0, S0 }
          }
          else
          {
            _H0 = *v12[1];
          }
          *v8 = _H0;
          v20 = **a2;
          v21 = v9[1];
          if (v21 < **v20)
          {
            _H0 = *v20[1];
          }
          else
          {
            _S0 = (float)v21;
            __asm { FCVT            H0, S0 }
          }
          v8[1] = _H0;
          v9 += a1[6];
          v8 += a1[7];
          ++v10;
        }
        while (v10 < a1[5]);
      }
      v23 = **a2;
      v24 = *v9;
      if (v24 >= **v23)
      {
        _S0 = (float)v24;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v23[1];
      }
      *v8 = _H0;
      v27 = **a2;
      v28 = v9[1];
      if (v28 < **v27)
      {
        _H0 = *v27[1];
      }
      else
      {
        _S0 = (float)v28;
        __asm { FCVT            H0, S0 }
      }
      v8[1] = _H0;
      v4 += a1[9];
      v5 += a1[10];
      ++v6;
    }
    while (v6 < a1[8]);
  }
  if (a1[5])
  {
    v30 = 0;
    do
    {
      v32 = **a2;
      v33 = *v4;
      if (v33 >= **v32)
      {
        _S0 = (float)v33;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v32[1];
      }
      *v5 = _H0;
      v36 = **a2;
      v37 = v4[1];
      if (v37 < **v36)
      {
        _H0 = *v36[1];
      }
      else
      {
        _S0 = (float)v37;
        __asm { FCVT            H0, S0 }
      }
      v5[1] = _H0;
      v4 += a1[6];
      v5 += a1[7];
      ++v30;
    }
    while (v30 < a1[5]);
  }
  v39 = **a2;
  v40 = *v4;
  if (v40 >= **v39)
  {
    _S0 = (float)v40;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v39[1];
  }
  *v5 = _H0;
  v43 = **a2;
  v44 = v4[1];
  if (v44 >= **v43)
  {
    _S0 = (float)v44;
    __asm { FCVT            H0, S0 }
    v5[1] = result;
  }
  else
  {
    v45 = v43[1];
    result = *v45;
    v5[1] = *v45;
  }
  return result;
}

uint64_t sub_2397D7A74(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397D7D1C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D7CB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397D7D1C@<H0>(unsigned __int16 ****a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 result;
  _WORD *v26;
  unsigned __int16 *v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  unint64_t v34;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v29 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v30 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v28 = 0;
    v31 = v3 - 1;
    v32 = v11 | (v12 << 32);
    v33 = v5 - 1;
    v34 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v27 = v13;
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    v26 = v19;
    return sub_2397D7EC0(&v28, a1, &v27, &v26);
  }
  return result;
}

unsigned __int16 sub_2397D7EC0@<H0>(_DWORD *a1@<X0>, unsigned __int16 ****a2@<X1>, unsigned __int16 **a3@<X2>, _WORD **a4@<X3>)
{
  unsigned __int16 *v4;
  _WORD *v5;
  unsigned int v6;
  _WORD *v8;
  unsigned __int16 *v9;
  unsigned int v10;
  unsigned __int16 **v12;
  unsigned int v13;
  unsigned __int16 **v20;
  unsigned int v21;
  unsigned __int16 **v23;
  unsigned int v24;
  unsigned __int16 **v27;
  unsigned int v28;
  unsigned int v30;
  unsigned __int16 **v32;
  unsigned int v33;
  unsigned __int16 **v36;
  unsigned int v37;
  unsigned __int16 **v39;
  unsigned int v40;
  unsigned __int16 **v43;
  unsigned int v44;
  unsigned __int16 *v45;
  unsigned __int16 result;

  v4 = *a3;
  v5 = *a4;
  if (a1[8])
  {
    v6 = 0;
    do
    {
      v8 = v5;
      v9 = v4;
      if (a1[5])
      {
        v10 = 0;
        v9 = v4;
        v8 = v5;
        do
        {
          v12 = **a2;
          v13 = *v9;
          if (v13 <= **v12)
          {
            _S0 = (float)v13;
            __asm { FCVT            H0, S0 }
          }
          else
          {
            _H0 = *v12[1];
          }
          *v8 = _H0;
          v20 = **a2;
          v21 = v9[1];
          if (v21 > **v20)
          {
            _H0 = *v20[1];
          }
          else
          {
            _S0 = (float)v21;
            __asm { FCVT            H0, S0 }
          }
          v8[1] = _H0;
          v9 += a1[6];
          v8 += a1[7];
          ++v10;
        }
        while (v10 < a1[5]);
      }
      v23 = **a2;
      v24 = *v9;
      if (v24 <= **v23)
      {
        _S0 = (float)v24;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v23[1];
      }
      *v8 = _H0;
      v27 = **a2;
      v28 = v9[1];
      if (v28 > **v27)
      {
        _H0 = *v27[1];
      }
      else
      {
        _S0 = (float)v28;
        __asm { FCVT            H0, S0 }
      }
      v8[1] = _H0;
      v4 += a1[9];
      v5 += a1[10];
      ++v6;
    }
    while (v6 < a1[8]);
  }
  if (a1[5])
  {
    v30 = 0;
    do
    {
      v32 = **a2;
      v33 = *v4;
      if (v33 <= **v32)
      {
        _S0 = (float)v33;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v32[1];
      }
      *v5 = _H0;
      v36 = **a2;
      v37 = v4[1];
      if (v37 > **v36)
      {
        _H0 = *v36[1];
      }
      else
      {
        _S0 = (float)v37;
        __asm { FCVT            H0, S0 }
      }
      v5[1] = _H0;
      v4 += a1[6];
      v5 += a1[7];
      ++v30;
    }
    while (v30 < a1[5]);
  }
  v39 = **a2;
  v40 = *v4;
  if (v40 <= **v39)
  {
    _S0 = (float)v40;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v39[1];
  }
  *v5 = _H0;
  v43 = **a2;
  v44 = v4[1];
  if (v44 <= **v43)
  {
    _S0 = (float)v44;
    __asm { FCVT            H0, S0 }
    v5[1] = result;
  }
  else
  {
    v45 = v43[1];
    result = *v45;
    v5[1] = *v45;
  }
  return result;
}

double sub_2397D8104@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397D3CDC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEBD60;
  sub_2397D0D98((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397D8218(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397D81E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397D81FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397D8218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE9370;
  sub_2397D3678(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEBE90[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397D38E4(a2, (uint64_t)(a4 + 1));
}

void sub_2397D8304(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397D8318(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397D832C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23978DD94((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397D8340(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2397D8440(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2397D8350(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  double v5;
  float v6;
  _QWORD v8[5];
  _QWORD v9[2];
  _QWORD v10[2];
  _QWORD v11[2];

  v3 = (*a1)[1];
  v11[0] = **a1;
  v11[1] = v3;
  v10[0] = v11[0];
  v10[1] = v3;
  v9[0] = v11[0];
  v9[1] = v3;
  v8[0] = v11;
  v8[1] = v10;
  v8[2] = v9;
  v8[3] = v11[0];
  v8[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = -3.40282347e38;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 3.40282347e38;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 <= 3.40282347e38)
      v5 = v4;
    else
      v5 = 3.40282347e38;
    v6 = v5;
    return sub_2397D8FEC((uint64_t)v8, a3, v6);
  }
  else
  {
    a3.n128_u32[0] = -8388609;
    return sub_2397D8FEC((uint64_t)v8, a3, 3.4028e38);
  }
}

uint64_t sub_2397D8418(uint64_t **a1, __n128 a2, float a3)
{
  char v4;

  return sub_2397D856C(**a1, (*a1)[1], (uint64_t)&v4, a2, a3);
}

uint64_t sub_2397D8440(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  float v8;
  unsigned int v9;
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  unint64_t v15;
  double v16;
  double v17;
  double v18;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    a4.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)a4.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v8 = 1.0;
    a4.n128_u32[0] = 0;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  a4.n128_u64[0] = 0xC7EFFFFFE0000000;
  if (*(double *)(a3 + 24) >= -3.40282347e38)
    a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
  a4.n128_f32[0] = a4.n128_f64[0];
  v7 = 3.40282347e38;
  if (*(double *)(a3 + 32) <= 3.40282347e38)
    v7 = *(double *)(a3 + 32);
  v8 = v7;
LABEL_14:
  v9 = HIWORD(v6);
  if (a4.n128_f32[0] == (float)(unsigned __int16)v6 && v8 == (float)v9)
    return sub_2397D856C(a1, a2, (uint64_t)v14, a4, v8);
  v18 = (double)(unsigned __int16)v6;
  v16 = a4.n128_f32[0];
  v17 = 1.0 / ((double)v9 - v18);
  a4.n128_f64[0] = v8 - a4.n128_f32[0];
  v15 = a4.n128_u64[0];
  v14[0] = &v18;
  v14[1] = &v17;
  v13[0] = &v16;
  v13[1] = &v15;
  v12[0] = v14;
  v12[1] = v13;
  return sub_2397D8A6C(a1, a2, (uint64_t)v12, a4);
}

uint64_t sub_2397D856C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, float a5)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    goto LABEL_17;
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(p_shared_owners);
  while (__stxr(v11 + 1, p_shared_owners));
  do
    v12 = __ldaxr(p_shared_owners);
  while (__stlxr(v12 - 1, p_shared_owners));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  v8 = *(_QWORD *)(a1 + 8);
  v13 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v13)
    goto LABEL_43;
  v14 = (unint64_t *)&v13->__shared_owners_;
  do
    v15 = __ldxr(v14);
  while (__stxr(v15 + 1, v14));
  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (v16)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v29 = 0;
    v17 = *(_QWORD *)(a2 + 8);
    if (!v17)
      goto LABEL_33;
LABEL_18:
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
    v17 = *(_QWORD *)(a2 + 8);
    v22 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v22)
      goto LABEL_29;
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v17 + 96))(&v28, v17, 1);
    v30 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v8 + 96))(&v29, v8, 0);
  v17 = *(_QWORD *)(a2 + 8);
  if (v17)
    goto LABEL_18;
LABEL_33:
  v28 = 0;
  v30 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v31 = &v30;
    a4.n128_f32[0] = sub_2397D8814(a4.n128_f32[0], a5, (uint64_t)&v31, a1, a2);
  }
LABEL_37:
  v26 = v28;
  v28 = 0;
  if (v26)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v26 + 8))(v26, a4);
  result = v29;
  v29 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D87B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397D8814(float result, float a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  BOOL v7;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _WORD *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  float *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  int v29;
  _WORD *v30;
  float *v31;
  float *v32;
  _WORD *v33;
  int v34;
  float v35;
  float v36;

  v5 = *(_DWORD *)(a4 + 36);
  v6 = *(_DWORD *)(a4 + 40);
  if (*(_DWORD *)(a4 + 32))
    v7 = v5 == 0;
  else
    v7 = 1;
  if (!v7 && v6 != 0)
  {
    v11 = v6 - 1;
    v12 = *(unsigned int *)(a4 + 48);
    v13 = *(unsigned int *)(a4 + 52);
    v14 = *(unsigned int *)(a5 + 48);
    v15 = *(unsigned int *)(a5 + 52);
    v16 = *(_WORD **)(a4 + 24);
    if (*(_BYTE *)(a4 + 72) && v16)
    {
      v17 = *(_QWORD *)(a4 + 8);
      v18 = *(std::__shared_weak_count **)(a4 + 16);
      if (v18)
      {
        p_shared_owners = (unint64_t *)&v18->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
        do
          v21 = __ldaxr(p_shared_owners);
        while (__stlxr(v21 - 1, p_shared_owners));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v17 + 88))(v17, 0, "unknown location");
      v16 = *(_WORD **)(a4 + 24);
    }
    v22 = *(float **)(a5 + 24);
    if (*(_BYTE *)(a5 + 72) && v22)
    {
      v23 = *(_QWORD *)(a5 + 8);
      v24 = *(std::__shared_weak_count **)(a5 + 16);
      if (v24)
      {
        v25 = (unint64_t *)&v24->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
        do
          v27 = __ldaxr(v25);
        while (__stlxr(v27 - 1, v25));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v23 + 88))(v23, 1, "unknown location");
      v22 = *(float **)(a5 + 24);
    }
    v28 = v5 - 1;
    if (v11)
    {
      if (v5 == 1)
      {
        do
        {
          LOWORD(result) = *v16;
          result = (float)LODWORD(result);
          LOWORD(a2) = v16[1];
          a2 = (float)LODWORD(a2);
          *v22 = result;
          v22[1] = a2;
          v16 += v13;
          v22 += v15;
          --v11;
        }
        while (v11);
LABEL_36:
        LOWORD(result) = *v16;
        result = (float)LODWORD(result);
        LOWORD(a2) = v16[1];
        *v22 = result;
        v22[1] = (float)LODWORD(a2);
        return result;
      }
      v29 = 0;
      v30 = v16 + 1;
      v31 = v22 + 1;
      do
      {
        v32 = v31;
        v33 = v30;
        v34 = v5 - 1;
        do
        {
          LOWORD(result) = *(v33 - 1);
          v35 = (float)LODWORD(result);
          *(v32 - 1) = v35;
          LOWORD(v35) = *v33;
          result = (float)LODWORD(v35);
          *v32 = result;
          v33 += v12;
          v32 += v14;
          --v34;
        }
        while (v34);
        LOWORD(result) = *(v33 - 1);
        v36 = (float)LODWORD(result);
        *(v32 - 1) = v36;
        LOWORD(v36) = *v33;
        result = (float)LODWORD(v36);
        *v32 = result;
        v16 += v13;
        v22 += v15;
        ++v29;
        v30 += v13;
        v31 += v15;
      }
      while (v29 != v11);
    }
    if (v5 != 1)
    {
      do
      {
        LOWORD(result) = *v16;
        result = (float)LODWORD(result);
        LOWORD(a2) = v16[1];
        a2 = (float)LODWORD(a2);
        *v22 = result;
        v22[1] = a2;
        v16 += v12;
        v22 += v14;
        --v28;
      }
      while (v28);
    }
    goto LABEL_36;
  }
  return result;
}

uint64_t sub_2397D8A6C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (uint64_t ****)&v29;
    a4.n128_u64[0] = (unint64_t)sub_2397D8D14(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D8CB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float32x2_t sub_2397D8D14(uint64_t *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float32x2_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float32x2_t result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(float32x2_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float32x2_t **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397D8EFC(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 = (float32x2_t *)((char *)v19 + 4 * HIDWORD(v33));
      }
    }
    return sub_2397D8EFC(&v27, v34, a1, v13, v19);
  }
  return result;
}

float32x2_t sub_2397D8EFC(_DWORD *a1, _QWORD *a2, uint64_t *****a3, unsigned __int16 *a4, float32x2_t *a5)
{
  int v5;
  uint64_t ***v6;
  uint64_t **v7;
  uint64_t **v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64x2_t v22;
  float64x2_t v23;
  uint64x2_t v24;
  float64x2_t v25;
  float32x2_t result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *(double *)v8[1];
  v11 = **v7;
  v12 = *(double *)v7[1];
  __asm { FMOV            V2.2D, #1.0 }
  if (v5)
  {
    v18 = (float64x2_t)vdupq_lane_s64(v11, 0);
    v19 = (float64x2_t)vdupq_lane_s64(v9, 0);
    v20 = 2 * a1[6];
    v21 = 4 * a1[7];
    do
    {
      v22.i64[0] = *a4;
      v22.i64[1] = a4[1];
      v23 = vmulq_n_f64(vsubq_f64(vcvtq_f64_u64(v22), v19), v10);
      *a5 = vcvt_f32_f64(vaddq_f64(v18, vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v23, _Q2), (int8x16_t)_Q2, (int8x16_t)vmaxnmq_f64(v23, (float64x2_t)0)), v12)));
      a4 = (unsigned __int16 *)((char *)a4 + v20);
      a5 = (float32x2_t *)((char *)a5 + v21);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  v24.i64[0] = *a4;
  v24.i64[1] = a4[1];
  v25 = vmulq_n_f64(vsubq_f64(vcvtq_f64_u64(v24), (float64x2_t)vdupq_lane_s64(v9, 0)), v10);
  result = vcvt_f32_f64(vaddq_f64((float64x2_t)vdupq_lane_s64(v11, 0), vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v25, _Q2), (int8x16_t)_Q2, (int8x16_t)vmaxnmq_f64(v25, (float64x2_t)0)), v12)));
  *a5 = result;
  return result;
}

uint64_t sub_2397D8FEC(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  __int16 *v17;
  float *v18;
  __int16 v19;
  __int16 v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 65535.0;
    v3 = a3 >= 65535.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOWORD(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_2397D970C(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1199570688;
      if (a3 <= 65535.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOWORD(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_2397D9D88(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_2397D856C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2, a3);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_2397D90F0(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_2397D90F0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397D9398(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D9334(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397D9398(unsigned __int16 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397D9580(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    return sub_2397D9580(&v27, v34, a1, v13, v19);
  }
  return result;
}

float sub_2397D9580(_DWORD *a1, _QWORD *a2, unsigned __int16 ****a3, unsigned __int16 *a4, float *a5)
{
  int v5;
  unsigned __int16 **v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  float *v15;
  float result;
  float *v17;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = **v6;
  if (v5)
  {
    v8 = 2 * a1[6];
    v9 = 4 * a1[7];
    do
    {
      while (1)
      {
        v11 = *a4;
        if (v11 >= v7)
          break;
        *a5 = *(float *)v6[1];
        v12 = a4[1];
        if (v12 >= v7)
          goto LABEL_12;
LABEL_3:
        v10 = v6[1];
LABEL_4:
        a5[1] = *(float *)v10;
        a4 = (unsigned __int16 *)((char *)a4 + v8);
        a5 = (float *)((char *)a5 + v9);
        if (!--v5)
          goto LABEL_15;
      }
      if (v11 <= *v6[2])
      {
        *a5 = (float)v11;
        v12 = a4[1];
        if (v12 >= v7)
          goto LABEL_12;
        goto LABEL_3;
      }
      *a5 = *(float *)v6[3];
      v12 = a4[1];
      if (v12 < v7)
        goto LABEL_3;
LABEL_12:
      if (v12 > *v6[2])
      {
        v10 = v6[3];
        goto LABEL_4;
      }
      a5[1] = (float)v12;
      a4 = (unsigned __int16 *)((char *)a4 + v8);
      a5 = (float *)((char *)a5 + v9);
      --v5;
    }
    while (v5);
  }
LABEL_15:
  *a2 = a4;
  a2[2] = a5;
  v13 = *a4;
  if (v13 >= v7)
  {
    if (v13 <= *v6[2])
    {
      *a5 = (float)v13;
      v14 = a4[1];
      if (v14 >= v7)
        goto LABEL_20;
    }
    else
    {
      *a5 = *(float *)v6[3];
      v14 = a4[1];
      if (v14 >= v7)
        goto LABEL_20;
    }
LABEL_23:
    v17 = (float *)v6[1];
    result = *v17;
    a5[1] = *v17;
    return result;
  }
  *a5 = *(float *)v6[1];
  v14 = a4[1];
  if (v14 < v7)
    goto LABEL_23;
LABEL_20:
  if (v14 <= *v6[2])
  {
    result = (float)v14;
    a5[1] = (float)v14;
  }
  else
  {
    v15 = (float *)v6[3];
    result = *v15;
    a5[1] = *v15;
  }
  return result;
}

uint64_t sub_2397D970C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397D99B4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D9950(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397D99B4(unsigned __int16 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397D9B58(&v26, v33, a1, v13, v19);
  }
  return result;
}

float sub_2397D9B58(_DWORD *a1, _QWORD *a2, unsigned __int16 ****a3, unsigned __int16 *a4, float *a5)
{
  unsigned int i;
  float v6;
  int v7;
  unsigned __int16 **v8;
  unsigned int v9;
  float *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unsigned __int16 **v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  float result;
  float *v28;

  if (a1[8])
  {
    for (i = 0; i < a1[8]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = a1[5];
      v8 = **a3;
      v9 = **v8;
      v10 = a5;
      v11 = a4;
      if (v7)
      {
        v12 = 2 * a1[6];
        v13 = 4 * a1[7];
        v10 = a5;
        v11 = a4;
        while (1)
        {
          v14 = *v11;
          if (v14 >= v9)
          {
            *v10 = (float)v14;
            v15 = v11[1];
            if (v15 < v9)
              goto LABEL_7;
LABEL_12:
            v10[1] = (float)v15;
            v11 = (unsigned __int16 *)((char *)v11 + v12);
            v10 = (float *)((char *)v10 + v13);
            if (!--v7)
              break;
          }
          else
          {
            *v10 = *(float *)v8[1];
            v15 = v11[1];
            if (v15 >= v9)
              goto LABEL_12;
LABEL_7:
            v10[1] = *(float *)v8[1];
            v11 = (unsigned __int16 *)((char *)v11 + v12);
            v10 = (float *)((char *)v10 + v13);
            if (!--v7)
              break;
          }
        }
      }
      *a2 = v11;
      a2[2] = v10;
      v16 = *v11;
      if (v16 >= v9)
      {
        *v10 = (float)v16;
        v17 = v11[1];
        if (v17 >= v9)
        {
LABEL_17:
          v6 = (float)v17;
          goto LABEL_4;
        }
      }
      else
      {
        *v10 = *(float *)v8[1];
        v17 = v11[1];
        if (v17 >= v9)
          goto LABEL_17;
      }
      v6 = *(float *)v8[1];
LABEL_4:
      v10[1] = v6;
      a4 += a1[9];
      a5 += a1[10];
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v18 = a1[5];
  v19 = **a3;
  v20 = **v19;
  if (v18)
  {
    v21 = 2 * a1[6];
    v22 = 4 * a1[7];
    while (1)
    {
      v23 = *a4;
      if (v23 >= v20)
      {
        *a5 = (float)v23;
        v24 = a4[1];
        if (v24 < v20)
          goto LABEL_20;
LABEL_25:
        a5[1] = (float)v24;
        a4 = (unsigned __int16 *)((char *)a4 + v21);
        a5 = (float *)((char *)a5 + v22);
        if (!--v18)
          break;
      }
      else
      {
        *a5 = *(float *)v19[1];
        v24 = a4[1];
        if (v24 >= v20)
          goto LABEL_25;
LABEL_20:
        a5[1] = *(float *)v19[1];
        a4 = (unsigned __int16 *)((char *)a4 + v21);
        a5 = (float *)((char *)a5 + v22);
        if (!--v18)
          break;
      }
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v25 = *a4;
  if (v25 >= v20)
  {
    *a5 = (float)v25;
    v26 = a4[1];
    if (v26 >= v20)
      goto LABEL_28;
  }
  else
  {
    *a5 = *(float *)v19[1];
    v26 = a4[1];
    if (v26 >= v20)
    {
LABEL_28:
      result = (float)v26;
      a5[1] = (float)v26;
      return result;
    }
  }
  v28 = (float *)v19[1];
  result = *v28;
  a5[1] = *v28;
  return result;
}

uint64_t sub_2397D9D88(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397DA030(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397D9FCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397DA030(unsigned __int16 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397DA1D4(&v26, v33, a1, v13, v19);
  }
  return result;
}

float sub_2397DA1D4(_DWORD *a1, _QWORD *a2, unsigned __int16 ****a3, unsigned __int16 *a4, float *a5)
{
  unsigned int i;
  float v6;
  int v7;
  unsigned __int16 **v8;
  unsigned int v9;
  float *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unsigned __int16 **v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  float result;
  float *v28;

  if (a1[8])
  {
    for (i = 0; i < a1[8]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = a1[5];
      v8 = **a3;
      v9 = **v8;
      v10 = a5;
      v11 = a4;
      if (v7)
      {
        v12 = 2 * a1[6];
        v13 = 4 * a1[7];
        v10 = a5;
        v11 = a4;
        while (1)
        {
          v14 = *v11;
          if (v14 <= v9)
          {
            *v10 = (float)v14;
            v15 = v11[1];
            if (v15 > v9)
              goto LABEL_7;
LABEL_12:
            v10[1] = (float)v15;
            v11 = (unsigned __int16 *)((char *)v11 + v12);
            v10 = (float *)((char *)v10 + v13);
            if (!--v7)
              break;
          }
          else
          {
            *v10 = *(float *)v8[1];
            v15 = v11[1];
            if (v15 <= v9)
              goto LABEL_12;
LABEL_7:
            v10[1] = *(float *)v8[1];
            v11 = (unsigned __int16 *)((char *)v11 + v12);
            v10 = (float *)((char *)v10 + v13);
            if (!--v7)
              break;
          }
        }
      }
      *a2 = v11;
      a2[2] = v10;
      v16 = *v11;
      if (v16 <= v9)
      {
        *v10 = (float)v16;
        v17 = v11[1];
        if (v17 <= v9)
        {
LABEL_17:
          v6 = (float)v17;
          goto LABEL_4;
        }
      }
      else
      {
        *v10 = *(float *)v8[1];
        v17 = v11[1];
        if (v17 <= v9)
          goto LABEL_17;
      }
      v6 = *(float *)v8[1];
LABEL_4:
      v10[1] = v6;
      a4 += a1[9];
      a5 += a1[10];
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v18 = a1[5];
  v19 = **a3;
  v20 = **v19;
  if (v18)
  {
    v21 = 2 * a1[6];
    v22 = 4 * a1[7];
    while (1)
    {
      v23 = *a4;
      if (v23 <= v20)
      {
        *a5 = (float)v23;
        v24 = a4[1];
        if (v24 > v20)
          goto LABEL_20;
LABEL_25:
        a5[1] = (float)v24;
        a4 = (unsigned __int16 *)((char *)a4 + v21);
        a5 = (float *)((char *)a5 + v22);
        if (!--v18)
          break;
      }
      else
      {
        *a5 = *(float *)v19[1];
        v24 = a4[1];
        if (v24 <= v20)
          goto LABEL_25;
LABEL_20:
        a5[1] = *(float *)v19[1];
        a4 = (unsigned __int16 *)((char *)a4 + v21);
        a5 = (float *)((char *)a5 + v22);
        if (!--v18)
          break;
      }
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v25 = *a4;
  if (v25 <= v20)
  {
    *a5 = (float)v25;
    v26 = a4[1];
    if (v26 <= v20)
      goto LABEL_28;
  }
  else
  {
    *a5 = *(float *)v19[1];
    v26 = a4[1];
    if (v26 <= v20)
    {
LABEL_28:
      result = (float)v26;
      a5[1] = (float)v26;
      return result;
    }
  }
  v28 = (float *)v19[1];
  result = *v28;
  a5[1] = *v28;
  return result;
}

void sub_2397DA404(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2397DA428@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397DA4EC(a1, a2);
}

double sub_2397DA434@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397DD450(a1, a2);
}

double sub_2397DA440@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397DDC38(a1, a2);
}

double sub_2397DA44C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397DBE48(a1, a2);
}

uint64_t sub_2397DA4EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2397DA728(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEBA48;
  sub_2397CA7AC((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2397DA600(*(_QWORD *)a1, (uint64_t)&v11, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2397DA5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397DA5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397DA600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250ADB428;
  sub_2397D52AC(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEBEA8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397CA6BC(a2, (uint64_t)(a4 + 1));
}

void sub_2397DA6EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397DA700(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397DA714(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239419954((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397DA728(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 7;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2397DA868((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397D0A60((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2397DA82C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397DA854(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397DA868(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 7);
  *a2 = &off_250AEBC50;
  sub_2397CDE68((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2397DA980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397DA9A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397DA9B8(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2397DAA00(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2397DA9C8(uint64_t **a1, uint64_t a2)
{
  return sub_2397DB734(**a1, (*a1)[1], a2);
}

uint64_t sub_2397DA9D8(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2397DAB50(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2397DAA00(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  unsigned int v12;
  double v13;
  double v14;
  unsigned int v15;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  double v24;
  double v25;
  double v26;
  unint64_t v27;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    v12 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = 255;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  v12 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v13 = *(double *)(a3 + 24);
  if (v13 < 0.0)
    v13 = 0.0;
  v12 = (int)v13;
  v14 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v14 = *(double *)(a3 + 32);
  v15 = (int)v14;
LABEL_14:
  __asm
  {
    FCVT            S3, H0
    FCVT            S2, H1
  }
  _ZF = _ZF && _S2 == (float)v15;
  if (_ZF)
    return sub_2397DAB50(a1, a2, (uint64_t)v23, _Q0);
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  v25 = (double)v12;
  v26 = 1.0 / (_D1 - _Q0.n128_f64[0]);
  _Q0.n128_f64[0] = (double)v15 - (double)v12;
  v24 = _Q0.n128_f64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_2397DB100(a1, a2, (uint64_t)v21, _Q0);
}

uint64_t sub_2397DAB50(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2397DADF8((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397DAD94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397DADF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397DAF9C(&v26, (__int16 **)v33, a1, v13, v19);
  }
  return result;
}

float sub_2397DAF9C(_DWORD *a1, __int16 **a2, uint64_t a3, __int16 *a4, __int16 *a5)
{
  unsigned int v5;
  __int16 *v13;
  __int16 *v14;
  unsigned int v15;
  unsigned int v19;
  float result;

  if (a1[8])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v13 = a5;
      v14 = a4;
      if (a1[5])
      {
        v15 = 0;
        v14 = a4;
        v13 = a5;
        do
        {
          *a2 = v14;
          a2[2] = v13;
          _H0 = *v14;
          __asm { FCVT            S0, H0 }
          *(_BYTE *)v13 = (int)_S0;
          LOWORD(_S0) = (*a2)[1];
          __asm { FCVT            S0, H0 }
          *((_BYTE *)a2[2] + 1) = (int)_S0;
          v14 += a1[6];
          v13 = (__int16 *)((char *)v13 + a1[7]);
          ++v15;
        }
        while (v15 < a1[5]);
      }
      *a2 = v14;
      a2[2] = v13;
      _H0 = *v14;
      __asm { FCVT            S0, H0 }
      *(_BYTE *)v13 = (int)_S0;
      LOWORD(_S0) = (*a2)[1];
      __asm { FCVT            S0, H0 }
      *((_BYTE *)a2[2] + 1) = (int)_S0;
      a4 += a1[9];
      a5 = (__int16 *)((char *)a5 + a1[10]);
      ++v5;
    }
    while (v5 < a1[8]);
  }
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v19 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      _H0 = *a4;
      __asm { FCVT            S0, H0 }
      *(_BYTE *)a5 = (int)_S0;
      LOWORD(_S0) = (*a2)[1];
      __asm { FCVT            S0, H0 }
      *((_BYTE *)a2[2] + 1) = (int)_S0;
      a4 += a1[6];
      a5 = (__int16 *)((char *)a5 + a1[7]);
      ++v19;
    }
    while (v19 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  _H0 = *a4;
  __asm { FCVT            S0, H0 }
  *(_BYTE *)a5 = (int)_S0;
  LOWORD(_S0) = (*a2)[1];
  __asm { FCVT            S0, H0 }
  *((_BYTE *)a2[2] + 1) = (int)result;
  return result;
}

uint64_t sub_2397DB100(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397DB3A8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397DB344(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397DB3A8(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397DB590(&v27, (__int16 **)v34, a1, v13, v19);
        v13 += v33;
        v19 = (__int16 *)((char *)v19 + HIDWORD(v33));
      }
    }
    return sub_2397DB590(&v27, (__int16 **)v34, a1, v13, v19);
  }
  return result;
}

double sub_2397DB590(_DWORD *a1, __int16 **a2, double *****a3, __int16 *a4, __int16 *a5)
{
  unsigned int v5;
  double ***v6;
  double **v13;
  double **v14;
  double v15;
  double v16;
  double v17;
  double ***v18;
  double **v21;
  double **v22;
  double v23;
  double v24;
  double v25;
  double ***v26;
  double **v29;
  double **v30;
  double v31;
  double v32;
  double v33;
  double ***v34;
  double **v37;
  double **v38;
  double v39;
  double v40;
  double v41;
  double result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v6 = **a3;
      _H2 = *a4;
      __asm { FCVT            D2, H2 }
      v14 = *v6;
      v13 = v6[1];
      v15 = (_D2 - **v14) * *v14[1];
      v16 = fmax(v15, 0.0);
      if (v15 <= 1.0)
        v17 = v16;
      else
        v17 = 1.0;
      *(_BYTE *)a5 = llround(**v13 + v17 * *v13[1]);
      v18 = **a3;
      _H2 = (*a2)[1];
      __asm { FCVT            D2, H2 }
      v22 = *v18;
      v21 = v18[1];
      v23 = (_D2 - **v22) * *v22[1];
      v24 = fmax(v23, 0.0);
      if (v23 <= 1.0)
        v25 = v24;
      else
        v25 = 1.0;
      *((_BYTE *)a2[2] + 1) = llround(**v21 + v25 * *v21[1]);
      a4 += a1[6];
      a5 = (__int16 *)((char *)a5 + a1[7]);
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = **a3;
  _H0 = *a4;
  __asm { FCVT            D0, H0 }
  v30 = *v26;
  v29 = v26[1];
  v31 = (_D0 - **v30) * *v30[1];
  v32 = fmax(v31, 0.0);
  if (v31 <= 1.0)
    v33 = v32;
  else
    v33 = 1.0;
  *(_BYTE *)a5 = llround(**v29 + v33 * *v29[1]);
  v34 = **a3;
  _H0 = (*a2)[1];
  __asm { FCVT            D0, H0 }
  v38 = *v34;
  v37 = v34[1];
  v39 = (_D0 - **v38) * *v38[1];
  v40 = fmax(v39, 0.0);
  if (v39 <= 1.0)
    v41 = v40;
  else
    v41 = 1.0;
  result = **v37 + v41 * *v37[1];
  *((_BYTE *)a2[2] + 1) = llround(result);
  return result;
}

uint64_t sub_2397DB734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  char v19;
  char v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 23544;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_2397DB7FC(a1, a2, (uint64_t)v16);
}

uint64_t sub_2397DB7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_2397DBAA4(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397DBA40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 ****sub_2397DBAA4(__int16 ****result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  __int16 ****v10;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2397DBC8C(&v26, (__int16 **)v33, v10, v13, v19);
        v13 += v32;
        v19 = (__int16 *)((char *)v19 + HIDWORD(v32));
      }
    }
    return (__int16 ****)sub_2397DBC8C(&v26, (__int16 **)v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397DBC8C(_DWORD *result, __int16 **a2, __int16 ****a3, __int16 *a4, __int16 *a5)
{
  unsigned int i;
  __int16 *v6;
  __int16 **v7;
  __int16 **v18;
  __int16 **v25;
  __int16 *v32;
  __int16 **v33;

  *a2 = a4;
  a2[2] = a5;
  if (result[5])
  {
    for (i = 0; i < result[5]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      _H0 = *a4;
      _H1 = **v7;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 >= _S1)
      {
        _H1 = *v7[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          LODWORD(v7) = (int)_S0;
        else
          LOBYTE(v7) = *(_BYTE *)v7[3];
      }
      else
      {
        LOBYTE(v7) = *(_BYTE *)v7[1];
      }
      *(_BYTE *)a5 = (_BYTE)v7;
      v18 = **a3;
      _H0 = (*a2)[1];
      _H1 = **v18;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 < _S1)
      {
        v6 = v18[1];
      }
      else
      {
        _H1 = *v18[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
        {
          LODWORD(v6) = (int)_S0;
          goto LABEL_5;
        }
        v6 = v18[3];
      }
      LOBYTE(v6) = *(_BYTE *)v6;
LABEL_5:
      *((_BYTE *)a2[2] + 1) = (_BYTE)v6;
      a4 += result[6];
      a5 = (__int16 *)((char *)a5 + result[7]);
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v25 = **a3;
  _H0 = *a4;
  _H1 = **v25;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 >= _S1)
  {
    _H1 = *v25[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      LODWORD(v25) = (int)_S0;
    else
      LOBYTE(v25) = *(_BYTE *)v25[3];
  }
  else
  {
    LOBYTE(v25) = *(_BYTE *)v25[1];
  }
  *(_BYTE *)a5 = (_BYTE)v25;
  v32 = a2[2];
  v33 = **a3;
  _H0 = (*a2)[1];
  _H1 = **v33;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 >= _S1)
  {
    _H1 = *v33[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      *((_BYTE *)v32 + 1) = (int)_S0;
    else
      *((_BYTE *)v32 + 1) = *(_BYTE *)v33[3];
  }
  else
  {
    *((_BYTE *)v32 + 1) = *(_BYTE *)v33[1];
  }
  return result;
}

double sub_2397DBE48@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397DA728(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEBB40;
  sub_2397CB790((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397DBF5C(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397DBF24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397DBF40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397DBF5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEA8D8;
  sub_2397CD8C4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEBEC0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397CDB30(a2, (uint64_t)(a4 + 1));
}

void sub_2397DC048(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397DC05C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397DC070(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397B73C8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397DC084(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2397DC0CC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2397DC094(uint64_t **a1, uint64_t a2)
{
  return sub_2397DCD64(**a1, (*a1)[1], a2);
}

uint64_t sub_2397DC0A4(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2397DC228(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2397DC0CC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v18;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  double v26;
  double v27;
  double v28;
  unint64_t v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = -65536;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
LABEL_14:
  v16 = (unsigned __int16)v15;
  __asm { FCVT            S2, H0 }
  v18 = HIWORD(v15);
  __asm { FCVT            S2, H1 }
  _ZF = _ZF && _S2 == (float)v18;
  if (_ZF)
    return sub_2397DC228(a1, a2, (uint64_t)v25, _Q0);
  __asm { FCVT            D0, H0 }
  v29 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  v27 = (double)v16;
  v28 = 1.0 / (_D1 - _Q0.n128_f64[0]);
  _Q0.n128_f64[0] = (double)v18 - (double)v16;
  v26 = _Q0.n128_f64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_2397DC7B0(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_2397DC228(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2397DC4D0((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397DC46C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397DC4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397DC674(&v26, (__int16 **)v33, a1, v13, v19);
  }
  return result;
}

float sub_2397DC674(_DWORD *a1, __int16 **a2, uint64_t a3, __int16 *a4, __int16 *a5)
{
  unsigned int v5;
  int v13;
  __int16 *v14;
  __int16 *v15;
  uint64_t v16;
  uint64_t v17;
  int v21;
  uint64_t v22;
  uint64_t v23;
  float result;

  if (a1[8])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v13 = a1[5];
      v14 = a5;
      v15 = a4;
      if (v13)
      {
        v16 = 2 * a1[6];
        v17 = 2 * a1[7];
        v14 = a5;
        v15 = a4;
        do
        {
          *a2 = v15;
          a2[2] = v14;
          _H0 = *v15;
          __asm { FCVT            S0, H0 }
          *v14 = (int)_S0;
          LOWORD(_S0) = v15[1];
          __asm { FCVT            S0, H0 }
          v14[1] = (int)_S0;
          v15 = (__int16 *)((char *)v15 + v16);
          v14 = (__int16 *)((char *)v14 + v17);
          --v13;
        }
        while (v13);
      }
      *a2 = v15;
      a2[2] = v14;
      _H0 = *v15;
      __asm { FCVT            S0, H0 }
      *v14 = (int)_S0;
      LOWORD(_S0) = v15[1];
      __asm { FCVT            S0, H0 }
      v14[1] = (int)_S0;
      a4 += a1[9];
      a5 += a1[10];
      ++v5;
    }
    while (v5 < a1[8]);
  }
  *a2 = a4;
  a2[2] = a5;
  v21 = a1[5];
  if (v21)
  {
    v22 = 2 * a1[6];
    v23 = 2 * a1[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      _H0 = *a4;
      __asm { FCVT            S0, H0 }
      *a5 = (int)_S0;
      LOWORD(_S0) = a4[1];
      __asm { FCVT            S0, H0 }
      a5[1] = (int)_S0;
      a4 = (__int16 *)((char *)a4 + v22);
      a5 = (__int16 *)((char *)a5 + v23);
      --v21;
    }
    while (v21);
  }
  *a2 = a4;
  a2[2] = a5;
  _H0 = *a4;
  __asm { FCVT            S0, H0 }
  *a5 = (int)_S0;
  LOWORD(_S0) = a4[1];
  __asm { FCVT            S0, H0 }
  a5[1] = (int)result;
  return result;
}

uint64_t sub_2397DC7B0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397DCA58(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397DC9F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397DCA58(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397DCC40(&v27, (__int16 **)v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    return sub_2397DCC40(&v27, (__int16 **)v34, a1, v13, v19);
  }
  return result;
}

double sub_2397DCC40(_DWORD *a1, __int16 **a2, double *****a3, __int16 *a4, __int16 *a5)
{
  int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v21;
  double v22;
  double v23;
  double v26;
  double v27;
  double v28;
  double v31;
  double v32;
  double v33;
  double v36;
  double v37;
  double v38;
  double result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  if (v5)
  {
    v13 = 2 * a1[6];
    v14 = 2 * a1[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      _H6 = *a4;
      __asm { FCVT            D6, H6 }
      v21 = v10 * (_D6 - v9);
      v22 = fmax(v21, 0.0);
      if (v21 <= 1.0)
        v23 = v22;
      else
        v23 = 1.0;
      *a5 = llround(v11 + v12 * v23);
      _H6 = a4[1];
      __asm { FCVT            D6, H6 }
      v26 = v10 * (_D6 - v9);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      a5[1] = llround(v11 + v12 * v28);
      a4 = (__int16 *)((char *)a4 + v13);
      a5 = (__int16 *)((char *)a5 + v14);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  _H4 = *a4;
  __asm { FCVT            D4, H4 }
  v31 = v10 * (_D4 - v9);
  v32 = fmax(v31, 0.0);
  if (v31 <= 1.0)
    v33 = v32;
  else
    v33 = 1.0;
  *a5 = llround(v11 + v12 * v33);
  _H4 = a4[1];
  __asm { FCVT            D4, H4 }
  v36 = v10 * (_D4 - v9);
  v37 = fmax(v36, 0.0);
  if (v36 <= 1.0)
    v38 = v37;
  else
    v38 = 1.0;
  result = v11 + v12 * v38;
  a5[1] = llround(result);
  return result;
}

uint64_t sub_2397DCD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  __int16 v19;
  __int16 v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 31744;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_2397DCE2C(a1, a2, (uint64_t)v16);
}

uint64_t sub_2397DCE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_2397DD0D4(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397DD070(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 ****sub_2397DD0D4(__int16 ****result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  __int16 ****v10;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2397DD2BC(&v26, (__int16 **)v33, v10, v13, v19);
        v13 += v32;
        v19 += HIDWORD(v32);
      }
    }
    return (__int16 ****)sub_2397DD2BC(&v26, (__int16 **)v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397DD2BC(_DWORD *result, __int16 **a2, __int16 ****a3, __int16 *a4, __int16 *a5)
{
  int v5;
  __int16 **v6;
  __int16 *v7;
  uint64_t v8;
  uint64_t v9;
  __int16 *v10;
  int v19;
  int v32;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = 2 * result[6];
    v9 = 2 * result[7];
    do
    {
      while (1)
      {
        *a2 = a4;
        a2[2] = a5;
        _H0 = *a4;
        _H1 = *v7;
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        if (_S0 >= _S1)
        {
          _H1 = *v6[2];
          __asm { FCVT            S1, H1 }
          if (_S0 <= _S1)
            v19 = (int)_S0;
          else
            LOWORD(v19) = *v6[3];
        }
        else
        {
          LOWORD(v19) = *v6[1];
        }
        *a5 = v19;
        _H0 = a4[1];
        _H1 = *v7;
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        if (_S0 >= _S1)
          break;
        v10 = v6[1];
LABEL_4:
        a5[1] = *v10;
        a4 = (__int16 *)((char *)a4 + v8);
        a5 = (__int16 *)((char *)a5 + v9);
        if (!--v5)
          goto LABEL_14;
      }
      _H1 = *v6[2];
      __asm { FCVT            S1, H1 }
      if (_S0 > _S1)
      {
        v10 = v6[3];
        goto LABEL_4;
      }
      a5[1] = (int)_S0;
      a4 = (__int16 *)((char *)a4 + v8);
      a5 = (__int16 *)((char *)a5 + v9);
      --v5;
    }
    while (v5);
  }
LABEL_14:
  *a2 = a4;
  a2[2] = a5;
  _H0 = *a4;
  _H1 = *v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = *v6[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      v32 = (int)_S0;
    else
      LOWORD(v32) = *v6[3];
  }
  else
  {
    LOWORD(v32) = *v6[1];
  }
  *a5 = v32;
  _H0 = a4[1];
  _H1 = *v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = *v6[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      a5[1] = (int)_S0;
    else
      a5[1] = *v6[3];
  }
  else
  {
    a5[1] = *v6[1];
  }
  return result;
}

double sub_2397DD450@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397DA728(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEBC50;
  sub_2397CDE68((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397DD59C(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2397D0A60((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397DD540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397DD564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397DD580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397DD59C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v17, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v17 = 0;
LABEL_17:
  sub_239622218(a2, &v16);
  v13.n128_u64[0] = sub_2397DD740(a1, a2);
  v14 = v16;
  v16 = 0;
  if (v14)
    (*(void (**)(uint64_t, float))(*(_QWORD *)v14 + 8))(v14, v13.n128_f32[0]);
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v13);
  return result;
}

void sub_2397DD6DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

__int16 sub_2397DD740@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  __int16 *v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  __int16 v26;
  uint64_t v28;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 2 * *(_DWORD *)(a1 + 56);
  if (v4 != *(_DWORD *)(a2 + 108) || v4 != v5)
  {
    v28 = (2 * *(_DWORD *)(a1 + 56));
    sub_2397DD908(a1, a2, &v28);
    return v7;
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
  v9 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(_QWORD *)(v3 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 128) && v16)
  {
    a1 = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
    v16 = *(_QWORD *)(a2 + 32);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v17 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v17 < 0xF || (unint64_t)(v16 - v9) < 0x20)
    {
      v20 = (_WORD *)v16;
      v21 = (__int16 *)v9;
    }
    else
    {
      v18 = v17 + 1;
      v19 = (v17 + 1) & 0xFFFFFFFFFFFFFFF0;
      v20 = (_WORD *)(v16 + 2 * v19);
      v21 = (__int16 *)(v9 + 2 * v19);
      v22 = (__int128 *)(v9 + 16);
      v23 = (_OWORD *)(v16 + 16);
      v24 = v19;
      do
      {
        v7 = *(v22 - 1);
        v25 = *v22;
        *(v23 - 1) = v7;
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 16;
      }
      while (v24);
      if (v18 == v19)
        return v7;
    }
    do
    {
      v26 = *v21++;
      LOWORD(v7) = v26;
      *v20++ = v26;
    }
    while (v21 != (__int16 *)(v9 + 2 * v8));
  }
  return v7;
}

uint64_t sub_2397DD908(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v19 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v19, v6, 0);
LABEL_17:
  sub_239622218(a2, &v18);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    v15.n128_f64[0] = sub_2397DDAD4(a3, a1, a2);
  v16 = v18;
  v18 = 0;
  if (v16)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v16 + 8))(v16, v15);
  result = v19;
  v19 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_2397DDA70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2397DDAD4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  int v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  _QWORD v28[6];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v22 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 104);
    v23 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 100) << 32);
    v21 = 0;
    v24 = v3 - 1;
    v25 = v11 | (v12 << 32);
    v26 = v5 - 1;
    v27 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 108) << 32);
    v13 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_QWORD *)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 32);
    if (*(_BYTE *)(a3 + 128))
    {
      if (v19)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a3 + 8) + 88))(*(_QWORD *)(a3 + 8), 1, "unknown location");
        v19 = *(_QWORD *)(a3 + 32);
      }
    }
    v28[2] = 0;
    v28[3] = 0;
    v28[0] = 0;
    v28[1] = 1;
    v28[4] = 1;
    v28[5] = 0;
    *(_QWORD *)&result = sub_23974E8D4((unsigned int *)&v21, (uint64_t)v28, a1, v13, v19);
  }
  return result;
}

double sub_2397DDC38@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397DA728(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEBD60;
  sub_2397D0D98((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397DDD4C(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397DDD14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397DDD30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397DDD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE9370;
  sub_2397D3678(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEBED8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397D38E4(a2, (uint64_t)(a4 + 1));
}

void sub_2397DDE38(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397DDE4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397DDE60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23978DD94((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397DDE74(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2397DDEBC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2397DDE84(uint64_t **a1, uint64_t a2)
{
  return sub_2397DEAE0(**a1, (*a1)[1], a2);
}

uint64_t sub_2397DDE94(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2397DE020(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2397DDEBC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  float v13;
  double v14;
  float v15;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  unint64_t v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v12 = -3.40282347e38;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        v12 = *(double *)(a3 + 24);
      v13 = v12;
      v14 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v14 = *(double *)(a3 + 32);
      v15 = v14;
      __asm
      {
        FCVT            S4, H0
        FCVT            S5, H1
      }
      if (v13 != _S4 || v15 != _S5)
        goto LABEL_15;
      return sub_2397DE020(a1, a2, (uint64_t)v26, _Q0);
    }
  }
  else
  {
    _Q0.n128_u32[0] = 1006632960;
    LOWORD(_S1) = 15360;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v15 = 1.0;
  v13 = 0.0;
  __asm
  {
    FCVT            S4, H0
    FCVT            S5, H1
  }
  if (_S4 != 0.0 || 1.0 != _S5)
  {
LABEL_15:
    __asm { FCVT            D0, H0 }
    v30 = _Q0.n128_u64[0];
    __asm { FCVT            D1, H1 }
    v28 = v13;
    v29 = 1.0 / (_D1 - _Q0.n128_f64[0]);
    _Q0.n128_f64[0] = v15 - v13;
    v27 = _Q0.n128_f64[0];
    v26[0] = &v30;
    v26[1] = &v29;
    v25[0] = &v28;
    v25[1] = &v27;
    v24[0] = v26;
    v24[1] = v25;
    return sub_2397DE52C(a1, a2, (uint64_t)v24, _Q0);
  }
  return sub_2397DE020(a1, a2, (uint64_t)v26, _Q0);
}

uint64_t sub_2397DE020(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2397DE2C8((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397DE264(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397DE2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  float *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  int v27;
  _WORD *v28;
  _DWORD *v29;
  _DWORD *v30;
  _WORD *v31;
  int v32;
  float result;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    _ZF = v3 == 0;
  else
    _ZF = 1;
  if (!_ZF && v4 != 0)
  {
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a2 + 48);
    v11 = *(unsigned int *)(a2 + 52);
    v12 = *(unsigned int *)(a3 + 48);
    v13 = *(unsigned int *)(a3 + 52);
    v14 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(__int16 **)(a2 + 24);
    }
    v20 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(float **)(a3 + 24);
    }
    v26 = v3 - 1;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          _H0 = *v14;
          __asm { FCVT            S0, H0 }
          *(_DWORD *)v20 = _S0;
          LOWORD(_S0) = v14[1];
          __asm { FCVT            S0, H0 }
          *((_DWORD *)v20 + 1) = _S0;
          v14 += v11;
          v20 += v13;
          --v9;
        }
        while (v9);
LABEL_36:
        _H0 = *v14;
        __asm { FCVT            S0, H0 }
        *(_DWORD *)v20 = _S0;
        LOWORD(_S0) = v14[1];
        __asm { FCVT            S0, H0 }
        v20[1] = result;
        return result;
      }
      v27 = 0;
      v28 = v14 + 1;
      v29 = v20 + 1;
      do
      {
        v30 = v29;
        v31 = v28;
        v32 = v3 - 1;
        do
        {
          _H0 = *(v31 - 1);
          __asm { FCVT            S0, H0 }
          *(v30 - 1) = _S0;
          LOWORD(_S0) = *v31;
          __asm { FCVT            S0, H0 }
          *v30 = _S0;
          v31 += v10;
          v30 += v12;
          --v32;
        }
        while (v32);
        _H0 = *(v31 - 1);
        __asm { FCVT            S0, H0 }
        *(v30 - 1) = _S0;
        LOWORD(_S0) = *v31;
        __asm { FCVT            S0, H0 }
        *v30 = _S0;
        v14 += v11;
        v20 += v13;
        ++v27;
        v28 += v11;
        v29 += v13;
      }
      while (v27 != v9);
    }
    if (v3 != 1)
    {
      do
      {
        _H0 = *v14;
        __asm { FCVT            S0, H0 }
        *(_DWORD *)v20 = _S0;
        LOWORD(_S0) = v14[1];
        __asm { FCVT            S0, H0 }
        *((_DWORD *)v20 + 1) = _S0;
        v14 += v10;
        v20 += v12;
        --v26;
      }
      while (v26);
    }
    goto LABEL_36;
  }
  return result;
}

uint64_t sub_2397DE52C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f32[0] = sub_2397DE7D4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397DE770(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397DE7D4(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397DE9BC(&v27, (__int16 **)v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    return sub_2397DE9BC(&v27, (__int16 **)v34, a1, v13, v19);
  }
  return result;
}

float sub_2397DE9BC(_DWORD *a1, __int16 **a2, double *****a3, __int16 *a4, float *a5)
{
  int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v21;
  double v22;
  double v23;
  double v26;
  double v27;
  double v28;
  float v29;
  double v32;
  double v33;
  double v34;
  double v37;
  double v38;
  double v39;
  float result;

  *a2 = a4;
  a2[2] = (__int16 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  if (v5)
  {
    v13 = 2 * a1[6];
    v14 = 4 * a1[7];
    do
    {
      *a2 = a4;
      a2[2] = (__int16 *)a5;
      _H6 = *a4;
      __asm { FCVT            D6, H6 }
      v21 = v10 * (_D6 - v9);
      v22 = fmax(v21, 0.0);
      if (v21 <= 1.0)
        v23 = v22;
      else
        v23 = 1.0;
      _S6 = v11 + v12 * v23;
      *a5 = _S6;
      LOWORD(_S6) = a4[1];
      __asm { FCVT            D6, H6 }
      v26 = v10 * (_D6 - v9);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      v29 = v11 + v12 * v28;
      a5[1] = v29;
      a4 = (__int16 *)((char *)a4 + v13);
      a5 = (float *)((char *)a5 + v14);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = (__int16 *)a5;
  _H4 = *a4;
  __asm { FCVT            D4, H4 }
  v32 = v10 * (_D4 - v9);
  v33 = fmax(v32, 0.0);
  if (v32 <= 1.0)
    v34 = v33;
  else
    v34 = 1.0;
  _S4 = v11 + v12 * v34;
  *a5 = _S4;
  LOWORD(_S4) = a4[1];
  __asm { FCVT            D4, H4 }
  v37 = v10 * (_D4 - v9);
  v38 = fmax(v37, 0.0);
  if (v37 <= 1.0)
    v39 = v38;
  else
    v39 = 1.0;
  result = v11 + v12 * v39;
  a5[1] = result;
  return result;
}

uint64_t sub_2397DEAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  double v6;
  _QWORD v15[4];
  __int16 v16;
  __int16 v17;
  float v18;
  int v19;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = -3.40282347e38;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 3.40282347e38;
    if (v3 < -3.40282347e38)
      v3 = -3.40282347e38;
    _S0 = v3;
    if (v4 <= 3.40282347e38)
      v6 = v4;
    else
      v6 = 3.40282347e38;
    _S1 = v6;
    v18 = _S1;
    v19 = LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    v17 = _H0;
    __asm { FCVT            H0, S1 }
  }
  else
  {
    v18 = 3.4028e38;
    v19 = -8388609;
    v17 = -1024;
    _H0 = 31744;
  }
  v16 = _H0;
  v15[0] = &v17;
  v15[1] = &v19;
  v15[2] = &v16;
  v15[3] = &v18;
  return sub_2397DEBA8(a1, a2, (uint64_t)v15);
}

uint64_t sub_2397DEBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397DEE50(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397DEDEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t **sub_2397DEE50(uint64_t **result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t **v10;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2397DF038(&v26, (__int16 **)v33, v10, v13, v19);
        v13 += v32;
        v19 += HIDWORD(v32);
      }
    }
    return (uint64_t **)sub_2397DF038(&v26, (__int16 **)v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397DF038(_DWORD *result, __int16 **a2, uint64_t **a3, __int16 *a4, float *a5)
{
  int v5;
  uint64_t v6;
  __int16 *v7;
  uint64_t v8;
  uint64_t v9;
  float *v10;
  float *v20;
  float *v32;
  float *v39;

  *a2 = a4;
  a2[2] = (__int16 *)a5;
  v5 = result[5];
  v6 = **a3;
  v7 = *(__int16 **)v6;
  if (v5)
  {
    v8 = 2 * result[6];
    v9 = 4 * result[7];
    do
    {
      *a2 = a4;
      a2[2] = (__int16 *)a5;
      _H0 = *a4;
      _H1 = *v7;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = **(_WORD **)(v6 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_11;
        v20 = *(float **)(v6 + 24);
      }
      else
      {
        v20 = *(float **)(v6 + 8);
      }
      _S0 = *v20;
LABEL_11:
      *a5 = _S0;
      _H0 = a4[1];
      _H1 = *v7;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 < _S1)
      {
        v10 = *(float **)(v6 + 8);
      }
      else
      {
        _H1 = **(_WORD **)(v6 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_5;
        v10 = *(float **)(v6 + 24);
      }
      _S0 = *v10;
LABEL_5:
      a5[1] = _S0;
      a4 = (__int16 *)((char *)a4 + v8);
      a5 = (float *)((char *)a5 + v9);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = (__int16 *)a5;
  _H0 = *a4;
  _H1 = *v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = **(_WORD **)(v6 + 16);
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      goto LABEL_19;
    v32 = *(float **)(v6 + 24);
  }
  else
  {
    v32 = *(float **)(v6 + 8);
  }
  _S0 = *v32;
LABEL_19:
  *a5 = _S0;
  _H0 = a4[1];
  _H1 = *v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 < _S1)
  {
    v39 = *(float **)(v6 + 8);
LABEL_23:
    _S0 = *v39;
    goto LABEL_24;
  }
  _H1 = **(_WORD **)(v6 + 16);
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v39 = *(float **)(v6 + 24);
    goto LABEL_23;
  }
LABEL_24:
  a5[1] = _S0;
  return result;
}

void sub_2397DF188(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2397DF1AC@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397DF270(a1, a2);
}

double sub_2397DF1B8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397E20B8(a1, a2);
}

double sub_2397DF1C4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397E36C0(a1, a2);
}

double sub_2397DF1D0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397E0B48(a1, a2);
}

uint64_t sub_2397DF270@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2397DF4AC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEBA48;
  sub_2397CA7AC((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2397DF384(*(_QWORD *)a1, (uint64_t)&v11, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2397DF34C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397DF368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397DF384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250ADB428;
  sub_2397D52AC(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEBEF0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397CA6BC(a2, (uint64_t)(a4 + 1));
}

void sub_2397DF470(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397DF484(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397DF498(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239419954((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397DF4AC(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 8;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2397DF5EC((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397D38E4((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2397DF5B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397DF5D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397DF5EC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 8);
  *a2 = &off_250AEBD60;
  sub_2397D0D98((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2397DF704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397DF728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397DF73C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2397DF784(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2397DF74C(uint64_t **a1, uint64_t a2)
{
  return sub_2397E0478(**a1, (*a1)[1], a2);
}

uint64_t sub_2397DF75C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2397DF8B4(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2397DF784(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  unsigned int v6;
  double v7;
  double v8;
  unsigned int v9;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  double v16;
  double v17;
  double v18;
  double v19;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v7 = *(double *)(a3 + 24);
      if (v7 < 0.0)
        v7 = 0.0;
      v6 = (int)v7;
      v8 = 255.0;
      if (*(double *)(a3 + 32) <= 255.0)
        v8 = *(double *)(a3 + 32);
      v9 = (int)v8;
      if (a4.n128_f32[0] != (float)v6 || v5 != (float)(int)v8)
        goto LABEL_15;
      return sub_2397DF8B4(a1, a2, (uint64_t)v15, a4);
    }
  }
  else
  {
    v5 = 1.0;
    a4.n128_u32[0] = 0;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v9 = 255;
  if (a4.n128_f32[0] != (float)v6 || v5 != (float)0xFFu)
  {
LABEL_15:
    v19 = a4.n128_f32[0];
    v17 = (double)v6;
    v18 = 1.0 / (v5 - a4.n128_f32[0]);
    a4.n128_f64[0] = (double)v9 - (double)v6;
    v16 = a4.n128_f64[0];
    v15[0] = &v19;
    v15[1] = &v18;
    v14[0] = &v17;
    v14[1] = &v16;
    v13[0] = v15;
    v13[1] = v14;
    return sub_2397DFE44(a1, a2, (uint64_t)v13, a4);
  }
  return sub_2397DF8B4(a1, a2, (uint64_t)v15, a4);
}

uint64_t sub_2397DF8B4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2397DFB5C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397DFAF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397DFB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397DFD00(&v26, (float **)v33, a1, v13, v19);
  }
  return result;
}

float sub_2397DFD00(_DWORD *a1, float **a2, uint64_t a3, float *a4, float *a5)
{
  unsigned int v5;
  float *v6;
  float *v7;
  unsigned int v8;
  unsigned int v9;
  float result;

  if (a1[8])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v6 = a5;
      v7 = a4;
      if (a1[5])
      {
        v8 = 0;
        v7 = a4;
        v6 = a5;
        do
        {
          *a2 = v7;
          a2[2] = v6;
          *(_BYTE *)v6 = (int)*v7;
          *((_BYTE *)a2[2] + 1) = (int)(*a2)[1];
          v7 += a1[6];
          v6 = (float *)((char *)v6 + a1[7]);
          ++v8;
        }
        while (v8 < a1[5]);
      }
      *a2 = v7;
      a2[2] = v6;
      *(_BYTE *)v6 = (int)*v7;
      *((_BYTE *)a2[2] + 1) = (int)(*a2)[1];
      a4 += a1[9];
      a5 = (float *)((char *)a5 + a1[10]);
      ++v5;
    }
    while (v5 < a1[8]);
  }
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v9 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      *(_BYTE *)a5 = (int)*a4;
      *((_BYTE *)a2[2] + 1) = (int)(*a2)[1];
      a4 += a1[6];
      a5 = (float *)((char *)a5 + a1[7]);
      ++v9;
    }
    while (v9 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  *(_BYTE *)a5 = (int)*a4;
  result = (*a2)[1];
  *((_BYTE *)a2[2] + 1) = (int)result;
  return result;
}

uint64_t sub_2397DFE44(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397E00EC(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397E0088(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397E00EC(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397E02D4(&v27, (float **)v34, a1, v13, v19);
        v13 += v33;
        v19 = (float *)((char *)v19 + HIDWORD(v33));
      }
    }
    return sub_2397E02D4(&v27, (float **)v34, a1, v13, v19);
  }
  return result;
}

double sub_2397E02D4(_DWORD *a1, float **a2, double *****a3, float *a4, float *a5)
{
  unsigned int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double ***v12;
  double **v13;
  double **v14;
  double v15;
  double v16;
  double v17;
  double ***v18;
  double **v19;
  double **v20;
  double v21;
  double v22;
  double v23;
  double ***v24;
  double **v25;
  double **v26;
  double v27;
  double v28;
  double v29;
  double result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v6 = **a3;
      v8 = *v6;
      v7 = v6[1];
      v9 = (*a4 - **v8) * *v8[1];
      v10 = fmax(v9, 0.0);
      if (v9 <= 1.0)
        v11 = v10;
      else
        v11 = 1.0;
      *(_BYTE *)a5 = llround(**v7 + v11 * *v7[1]);
      v12 = **a3;
      v14 = *v12;
      v13 = v12[1];
      v15 = ((*a2)[1] - **v14) * *v14[1];
      v16 = fmax(v15, 0.0);
      if (v15 <= 1.0)
        v17 = v16;
      else
        v17 = 1.0;
      *((_BYTE *)a2[2] + 1) = llround(**v13 + v17 * *v13[1]);
      a4 += a1[6];
      a5 = (float *)((char *)a5 + a1[7]);
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v18 = **a3;
  v20 = *v18;
  v19 = v18[1];
  v21 = (*a4 - **v20) * *v20[1];
  v22 = fmax(v21, 0.0);
  if (v21 <= 1.0)
    v23 = v22;
  else
    v23 = 1.0;
  *(_BYTE *)a5 = llround(**v19 + v23 * *v19[1]);
  v24 = **a3;
  v26 = *v24;
  v25 = v24[1];
  v27 = ((*a2)[1] - **v26) * *v26[1];
  v28 = fmax(v27, 0.0);
  if (v27 <= 1.0)
    v29 = v28;
  else
    v29 = 1.0;
  result = **v25 + v29 * *v25[1];
  *((_BYTE *)a2[2] + 1) = llround(result);
  return result;
}

uint64_t sub_2397E0478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1132396544;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_2397E052C(a1, a2, (uint64_t)v8);
}

uint64_t sub_2397E052C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397E07D4(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397E0770(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t **sub_2397E07D4(uint64_t **result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t **v10;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2397E09BC(&v26, (float **)v33, v10, v13, v19);
        v13 += v32;
        v19 = (float *)((char *)v19 + HIDWORD(v32));
      }
    }
    return (uint64_t **)sub_2397E09BC(&v26, (float **)v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397E09BC(_DWORD *result, float **a2, uint64_t **a3, float *a4, float *a5)
{
  unsigned int i;
  _BYTE *v6;
  uint64_t v7;
  float v8;
  uint64_t v9;
  float v10;
  uint64_t v11;
  float v12;
  float *v13;
  uint64_t v14;
  float v15;

  *a2 = a4;
  a2[2] = a5;
  if (result[5])
  {
    for (i = 0; i < result[5]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (*a4 >= **(float **)v7)
      {
        if (v8 <= **(float **)(v7 + 16))
          LODWORD(v7) = (int)v8;
        else
          LOBYTE(v7) = **(_BYTE **)(v7 + 24);
      }
      else
      {
        LOBYTE(v7) = **(_BYTE **)(v7 + 8);
      }
      *(_BYTE *)a5 = v7;
      v9 = **a3;
      v10 = (*a2)[1];
      if (v10 < **(float **)v9)
      {
        v6 = *(_BYTE **)(v9 + 8);
      }
      else
      {
        if (v10 <= **(float **)(v9 + 16))
        {
          LODWORD(v6) = (int)v10;
          goto LABEL_5;
        }
        v6 = *(_BYTE **)(v9 + 24);
      }
      LOBYTE(v6) = *v6;
LABEL_5:
      *((_BYTE *)a2[2] + 1) = (_BYTE)v6;
      a4 += result[6];
      a5 = (float *)((char *)a5 + result[7]);
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v11 = **a3;
  v12 = *a4;
  if (*a4 >= **(float **)v11)
  {
    if (v12 <= **(float **)(v11 + 16))
      LODWORD(v11) = (int)v12;
    else
      LOBYTE(v11) = **(_BYTE **)(v11 + 24);
  }
  else
  {
    LOBYTE(v11) = **(_BYTE **)(v11 + 8);
  }
  *(_BYTE *)a5 = v11;
  v13 = a2[2];
  v14 = **a3;
  v15 = (*a2)[1];
  if (v15 >= **(float **)v14)
  {
    if (v15 <= **(float **)(v14 + 16))
      *((_BYTE *)v13 + 1) = (int)v15;
    else
      *((_BYTE *)v13 + 1) = **(_BYTE **)(v14 + 24);
  }
  else
  {
    *((_BYTE *)v13 + 1) = **(_BYTE **)(v14 + 8);
  }
  return result;
}

double sub_2397E0B48@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397DF4AC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEBB40;
  sub_2397CB790((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397E0C5C(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397E0C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397E0C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397E0C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEA8D8;
  sub_2397CD8C4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEBF08[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397CDB30(a2, (uint64_t)(a4 + 1));
}

void sub_2397E0D48(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397E0D5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397E0D70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397B73C8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397E0D84(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2397E0DCC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2397E0D94(uint64_t **a1, uint64_t a2)
{
  return sub_2397E19E4(**a1, (*a1)[1], a2);
}

uint64_t sub_2397E0DA4(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2397E0EF8(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2397E0DCC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  double v6;
  int v7;
  double v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v9 = -65536;
    goto LABEL_14;
  }
  v5 = 1.0;
  a4.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = *(double *)(a3 + 24);
  if (v6 < 0.0)
    v6 = 0.0;
  v7 = (int)v6;
  v8 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v8 = *(double *)(a3 + 32);
  v9 = v7 | ((int)v8 << 16);
LABEL_14:
  v10 = (unsigned __int16)v9;
  v11 = HIWORD(v9);
  if (a4.n128_f32[0] == (float)v10 && v5 == (float)v11)
    return sub_2397E0EF8(a1, a2, (uint64_t)v16, a4);
  v20 = a4.n128_f32[0];
  v18 = (double)v10;
  v19 = 1.0 / (v5 - a4.n128_f32[0]);
  a4.n128_f64[0] = (double)v11 - (double)v10;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = v16;
  v14[1] = v15;
  return sub_2397E1440(a1, a2, (uint64_t)v14, a4);
}

uint64_t sub_2397E0EF8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2397E11A0((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397E113C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397E11A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397E1344(&v26, (float **)v33, a1, v13, v19);
  }
  return result;
}

float sub_2397E1344(_DWORD *a1, float **a2, uint64_t a3, float *a4, float *a5)
{
  unsigned int v5;
  float v6;
  int v7;
  int v8;
  float *v9;
  float *v10;
  uint64_t v11;
  uint64_t v12;
  float v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  float v17;
  float result;
  float v19;

  if (a1[8])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = a1[5];
      v9 = a5;
      v10 = a4;
      if (v8)
      {
        v11 = 4 * a1[6];
        v12 = 2 * a1[7];
        v9 = a5;
        v10 = a4;
        do
        {
          v13 = v10[1];
          *(_WORD *)v9 = (int)*v10;
          *((_WORD *)v9 + 1) = (int)v13;
          v10 = (float *)((char *)v10 + v11);
          v9 = (float *)((char *)v9 + v12);
          --v8;
        }
        while (v8);
      }
      v6 = v10[1];
      v7 = (int)*v10;
      *a2 = v10;
      a2[2] = v9;
      *(_WORD *)v9 = v7;
      *((_WORD *)v9 + 1) = (int)v6;
      a4 += a1[9];
      a5 = (float *)((char *)a5 + 2 * a1[10]);
      ++v5;
    }
    while (v5 < a1[8]);
  }
  *a2 = a4;
  a2[2] = a5;
  v14 = a1[5];
  if (v14)
  {
    v15 = 4 * a1[6];
    v16 = 2 * a1[7];
    do
    {
      v17 = a4[1];
      *(_WORD *)a5 = (int)*a4;
      *((_WORD *)a5 + 1) = (int)v17;
      a4 = (float *)((char *)a4 + v15);
      a5 = (float *)((char *)a5 + v16);
      --v14;
    }
    while (v14);
  }
  *a2 = a4;
  a2[2] = a5;
  result = *a4;
  v19 = a4[1];
  *(_WORD *)a5 = (int)*a4;
  *((_WORD *)a5 + 1) = (int)v19;
  return result;
}

uint64_t sub_2397E1440(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397E16E8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397E1684(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397E16E8(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397E18D0(&v27, (float **)v34, a1, v13, v19);
        v13 += v33;
        v19 = (float *)((char *)v19 + 2 * HIDWORD(v33));
      }
    }
    return sub_2397E18D0(&v27, (float **)v34, a1, v13, v19);
  }
  return result;
}

double sub_2397E18D0(_DWORD *a1, float **a2, double *****a3, float *a4, float *a5)
{
  int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  BOOL v16;
  double v17;
  double v18;
  __int16 v19;
  double v20;
  float v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  if (v5)
  {
    v13 = 4 * a1[6];
    v14 = 2 * a1[7];
    do
    {
      v15 = v10 * (*a4 - v9);
      v16 = v15 <= 1.0;
      v17 = fmax(v15, 0.0);
      if (!v16)
        v17 = 1.0;
      v18 = v10 * (a4[1] - v9);
      v19 = llround(v11 + v12 * v17);
      v20 = fmax(v18, 0.0);
      if (v18 > 1.0)
        v20 = 1.0;
      *(_WORD *)a5 = v19;
      *((_WORD *)a5 + 1) = llround(v11 + v12 * v20);
      a4 = (float *)((char *)a4 + v13);
      a5 = (float *)((char *)a5 + v14);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  v21 = a4[1];
  v22 = v10 * (*a4 - v9);
  v16 = v22 <= 1.0;
  v23 = fmax(v22, 0.0);
  if (!v16)
    v23 = 1.0;
  *(_WORD *)a5 = llround(v11 + v12 * v23);
  v24 = v10 * (v21 - v9);
  v25 = fmax(v24, 0.0);
  if (v24 <= 1.0)
    v26 = v25;
  else
    v26 = 1.0;
  result = v11 + v12 * v26;
  *((_WORD *)a5 + 1) = llround(result);
  return result;
}

uint64_t sub_2397E19E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  __int16 v10;
  __int16 v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1199570688;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_2397E1A9C(a1, a2, (uint64_t)v8);
}

uint64_t sub_2397E1A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397E1D44(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397E1CE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t **sub_2397E1D44(uint64_t **result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t **v10;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2397E1F2C(&v26, (float **)v33, v10, v13, v19);
        v13 += v32;
        v19 = (float *)((char *)v19 + 2 * HIDWORD(v32));
      }
    }
    return (uint64_t **)sub_2397E1F2C(&v26, (float **)v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397E1F2C(_DWORD *result, float **a2, uint64_t **a3, float *a4, float *a5)
{
  int v5;
  uint64_t v6;
  float v7;
  uint64_t v8;
  uint64_t v9;
  _WORD *v10;
  float v11;
  float v12;
  float v13;
  float v14;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  v6 = **a3;
  v7 = **(float **)v6;
  if (v5)
  {
    v8 = 4 * result[6];
    v9 = 2 * result[7];
    do
    {
      while (1)
      {
        v11 = *a4;
        if (*a4 >= v7)
          break;
        *(_WORD *)a5 = **(_WORD **)(v6 + 8);
        v12 = a4[1];
        if (v12 >= v7)
          goto LABEL_12;
LABEL_3:
        v10 = *(_WORD **)(v6 + 8);
LABEL_4:
        *((_WORD *)a5 + 1) = *v10;
        a4 = (float *)((char *)a4 + v8);
        a5 = (float *)((char *)a5 + v9);
        if (!--v5)
          goto LABEL_15;
      }
      if (v11 <= **(float **)(v6 + 16))
      {
        *(_WORD *)a5 = (int)v11;
        v12 = a4[1];
        if (v12 >= v7)
          goto LABEL_12;
        goto LABEL_3;
      }
      *(_WORD *)a5 = **(_WORD **)(v6 + 24);
      v12 = a4[1];
      if (v12 < v7)
        goto LABEL_3;
LABEL_12:
      if (v12 > **(float **)(v6 + 16))
      {
        v10 = *(_WORD **)(v6 + 24);
        goto LABEL_4;
      }
      *((_WORD *)a5 + 1) = (int)v12;
      a4 = (float *)((char *)a4 + v8);
      a5 = (float *)((char *)a5 + v9);
      --v5;
    }
    while (v5);
  }
LABEL_15:
  *a2 = a4;
  a2[2] = a5;
  v13 = *a4;
  if (*a4 >= v7)
  {
    if (v13 <= **(float **)(v6 + 16))
    {
      *(_WORD *)a5 = (int)v13;
      v14 = a4[1];
      if (v14 >= v7)
        goto LABEL_20;
    }
    else
    {
      *(_WORD *)a5 = **(_WORD **)(v6 + 24);
      v14 = a4[1];
      if (v14 >= v7)
        goto LABEL_20;
    }
LABEL_23:
    *((_WORD *)a5 + 1) = **(_WORD **)(v6 + 8);
    return result;
  }
  *(_WORD *)a5 = **(_WORD **)(v6 + 8);
  v14 = a4[1];
  if (v14 < v7)
    goto LABEL_23;
LABEL_20:
  if (v14 <= **(float **)(v6 + 16))
    *((_WORD *)a5 + 1) = (int)v14;
  else
    *((_WORD *)a5 + 1) = **(_WORD **)(v6 + 24);
  return result;
}

double sub_2397E20B8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397DF4AC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEBC50;
  sub_2397CDE68((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397E21CC(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397E2194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397E21B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397E21CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE9278;
  sub_2397D07F4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEBF20[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397D0A60(a2, (uint64_t)(a4 + 1));
}

void sub_2397E22B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397E22CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397E22E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23978DC10((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397E22F4(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2397E233C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2397E2304(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2397E2FCC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2397E2314(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2397E2484(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2397E233C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  float v5;
  double v6;
  unsigned __int16 v11;
  double v12;
  unsigned int v14;
  double v20;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    _Q0.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      _Q0.n128_u64[0] = *(_QWORD *)a3;
    _Q0.n128_f32[0] = _Q0.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v5 = 1.0;
  _Q0.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v6 = *(double *)(a3 + 24);
  _S2 = v6;
  __asm { FCVT            H2, S2 }
  v11 = LOWORD(_S2);
  v12 = 65504.0;
  if (*(double *)(a3 + 32) <= 65504.0)
    v12 = *(double *)(a3 + 32);
  _S2 = v12;
  __asm { FCVT            H2, S2 }
  v14 = v11 | (LOWORD(_S2) << 16);
LABEL_14:
  _H2 = v14;
  _S3 = HIWORD(v14);
  __asm
  {
    FCVT            S4, H2
    FCVT            S5, H3
  }
  if (_Q0.n128_f32[0] == _S4 && v5 == _S5)
    return sub_2397E2484(a1, a2, (uint64_t)v25, _Q0);
  v29 = _Q0.n128_f32[0];
  v20 = 1.0 / (v5 - _Q0.n128_f32[0]);
  __asm { FCVT            D0, H2 }
  v27 = _Q0.n128_u64[0];
  v28 = v20;
  __asm { FCVT            D1, H3 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_2397E2988(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_2397E2484(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = sub_2397E272C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397E26C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 sub_2397E272C@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int *v30;
  _WORD *v31;
  _WORD *v32;
  int *v33;
  int v34;
  __int16 result;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    _ZF = v3 == 0;
  else
    _ZF = 1;
  if (!_ZF && v4 != 0)
  {
    v9 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v13 = *(unsigned int *)(a3 + 48);
    v12 = *(unsigned int *)(a3 + 52);
    v14 = *(int **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(int **)(a2 + 24);
    }
    v20 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(_WORD **)(a3 + 24);
    }
    v26 = v3 - 1;
    v27 = 4 * v11;
    v28 = 2 * v13;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          _S0 = *v14;
          __asm { FCVT            H0, S0 }
          *v20 = _S0;
          _S0 = v14[1];
          __asm { FCVT            H0, S0 }
          v20[1] = _S0;
          v14 += v10;
          v20 += v12;
          --v9;
        }
        while (v9);
      }
      else
      {
        v29 = 0;
        v30 = v14 + 1;
        v31 = v20 + 1;
        do
        {
          v32 = v31;
          v33 = v30;
          v34 = v3 - 1;
          do
          {
            _S0 = *(v33 - 1);
            __asm { FCVT            H0, S0 }
            *(v32 - 1) = _S0;
            _S0 = *v33;
            __asm { FCVT            H0, S0 }
            *v32 = _S0;
            v33 = (int *)((char *)v33 + v27);
            v32 = (_WORD *)((char *)v32 + v28);
            --v34;
          }
          while (v34);
          _S0 = *(v33 - 1);
          __asm { FCVT            H0, S0 }
          *(v32 - 1) = _S0;
          _S0 = *v33;
          __asm { FCVT            H0, S0 }
          *v32 = _S0;
          v14 += v10;
          v20 += v12;
          ++v29;
          v30 += v10;
          v31 += v12;
        }
        while (v29 != v9);
      }
    }
    if (v3 != 1)
    {
      do
      {
        _S0 = *v14;
        __asm { FCVT            H0, S0 }
        *v20 = _S0;
        _S0 = v14[1];
        __asm { FCVT            H0, S0 }
        v20[1] = _S0;
        v14 = (int *)((char *)v14 + v27);
        v20 = (_WORD *)((char *)v20 + v28);
        --v26;
      }
      while (v26);
    }
    _S0 = *v14;
    __asm { FCVT            H0, S0 }
    *v20 = _S0;
    _S0 = v14[1];
    __asm { FCVT            H0, S0 }
    v20[1] = result;
  }
  return result;
}

uint64_t sub_2397E2988(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397E2C30(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397E2BCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397E2C30(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397E2E18(&v27, (float **)v34, a1, v13, v19);
        v13 += v33;
        v19 = (float *)((char *)v19 + 2 * HIDWORD(v33));
      }
    }
    *(_QWORD *)&result = sub_2397E2E18(&v27, (float **)v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_2397E2E18@<H0>(_DWORD *a1@<X0>, float **a2@<X1>, double *****a3@<X2>, float *a4@<X3>, float *a5@<X4>)
{
  unsigned int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double ***v17;
  double **v18;
  double **v19;
  double v20;
  double v21;
  double v22;
  double ***v24;
  double **v25;
  double **v26;
  double v27;
  double v28;
  double v29;
  double ***v31;
  double **v32;
  double **v33;
  double v34;
  double v35;
  double v36;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v6 = **a3;
      v8 = *v6;
      v7 = v6[1];
      v9 = (*a4 - **v8) * *v8[1];
      v10 = fmax(v9, 0.0);
      if (v9 <= 1.0)
        v11 = v10;
      else
        v11 = 1.0;
      _S2 = **v7 + v11 * *v7[1];
      __asm { FCVT            H2, S2 }
      *(_WORD *)a5 = LOWORD(_S2);
      v17 = **a3;
      v19 = *v17;
      v18 = v17[1];
      v20 = ((*a2)[1] - **v19) * *v19[1];
      v21 = fmax(v20, 0.0);
      if (v20 <= 1.0)
        v22 = v21;
      else
        v22 = 1.0;
      _S2 = **v18 + v22 * *v18[1];
      __asm { FCVT            H2, S2 }
      *((_WORD *)a2[2] + 1) = LOWORD(_S2);
      a4 += a1[6];
      a5 = (float *)((char *)a5 + 2 * a1[7]);
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v24 = **a3;
  v26 = *v24;
  v25 = v24[1];
  v27 = (*a4 - **v26) * *v26[1];
  v28 = fmax(v27, 0.0);
  if (v27 <= 1.0)
    v29 = v28;
  else
    v29 = 1.0;
  _S0 = **v25 + v29 * *v25[1];
  __asm { FCVT            H0, S0 }
  *(_WORD *)a5 = LOWORD(_S0);
  v31 = **a3;
  v33 = *v31;
  v32 = v31[1];
  v34 = ((*a2)[1] - **v33) * *v33[1];
  v35 = fmax(v34, 0.0);
  if (v34 <= 1.0)
    v36 = v35;
  else
    v36 = 1.0;
  _S0 = **v32 + v36 * *v32[1];
  __asm { FCVT            H0, S0 }
  *((_WORD *)a2[2] + 1) = result;
  return result;
}

uint64_t sub_2397E2FCC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  double v11;
  _QWORD v15[4];
  unsigned __int32 v16;
  int v17;
  __int16 v18;
  __int16 v19;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    _Q0.n128_u64[0] = *(_QWORD *)a3;
    if (!*(_BYTE *)(a3 + 8))
      _Q0.n128_f64[0] = -65504.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65504.0;
    if (_Q0.n128_f64[0] < -65504.0)
      _Q0.n128_f64[0] = -65504.0;
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    if (v4 <= 65504.0)
      v11 = v4;
    else
      v11 = 65504.0;
    _S1 = v11;
    v19 = _H0;
    __asm { FCVT            H1, S1 }
    v18 = LOWORD(_S1);
    __asm
    {
      FCVT            S2, H0
      FCVT            S0, H1
    }
    v16 = _Q0.n128_u32[0];
    v17 = _S2;
  }
  else
  {
    v19 = -1025;
    v18 = 31743;
    v17 = -947920896;
    v16 = 1199562752;
  }
  v15[0] = &v17;
  v15[1] = &v19;
  v15[2] = &v16;
  v15[3] = &v18;
  return sub_2397E30A4(a1, a2, (uint64_t)v15, _Q0);
}

uint64_t sub_2397E30A4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397E334C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397E32E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397E334C(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397E3534(&v27, (float **)v34, a1, v13, v19);
        v13 += v33;
        v19 = (float *)((char *)v19 + 2 * HIDWORD(v33));
      }
    }
    *(_QWORD *)&result = sub_2397E3534(&v27, (float **)v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_2397E3534@<H0>(_DWORD *a1@<X0>, float **a2@<X1>, uint64_t **a3@<X2>, float *a4@<X3>, float *a5@<X4>)
{
  unsigned int i;
  __int16 *v6;
  uint64_t v8;
  uint64_t v15;
  uint64_t v17;
  float *v20;
  uint64_t v21;
  __int16 *v23;
  __int16 result;
  __int16 *v25;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    for (i = 0; i < a1[5]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      _S0 = *a4;
      if (*a4 >= **(float **)v8)
      {
        if (_S0 <= **(float **)(v8 + 16))
          __asm { FCVT            H0, S0 }
        else
          _H0 = **(_WORD **)(v8 + 24);
      }
      else
      {
        _H0 = **(_WORD **)(v8 + 8);
      }
      *(_WORD *)a5 = _H0;
      v15 = **a3;
      _S0 = (*a2)[1];
      if (_S0 < **(float **)v15)
      {
        v6 = *(__int16 **)(v15 + 8);
      }
      else
      {
        if (_S0 <= **(float **)(v15 + 16))
        {
          __asm { FCVT            H0, S0 }
          goto LABEL_5;
        }
        v6 = *(__int16 **)(v15 + 24);
      }
      _H0 = *v6;
LABEL_5:
      *((_WORD *)a2[2] + 1) = _H0;
      a4 += a1[6];
      a5 = (float *)((char *)a5 + 2 * a1[7]);
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v17 = **a3;
  _S0 = *a4;
  if (*a4 >= **(float **)v17)
  {
    if (_S0 <= **(float **)(v17 + 16))
      __asm { FCVT            H0, S0 }
    else
      _H0 = **(_WORD **)(v17 + 24);
  }
  else
  {
    _H0 = **(_WORD **)(v17 + 8);
  }
  *(_WORD *)a5 = _H0;
  v20 = a2[2];
  v21 = **a3;
  _S0 = (*a2)[1];
  if (_S0 >= **(float **)v21)
  {
    if (_S0 <= **(float **)(v21 + 16))
    {
      __asm { FCVT            H0, S0 }
      *((_WORD *)v20 + 1) = result;
    }
    else
    {
      v25 = *(__int16 **)(v21 + 24);
      result = *v25;
      *((_WORD *)v20 + 1) = *v25;
    }
  }
  else
  {
    v23 = *(__int16 **)(v21 + 8);
    result = *v23;
    *((_WORD *)v20 + 1) = *v23;
  }
  return result;
}

double sub_2397E36C0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397DF4AC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEBD60;
  sub_2397D0D98((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397E380C(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2397D38E4((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397E37B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397E37D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397E37F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397E380C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2397E39B0(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397E394C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2397E39B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 2 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v16 = (2 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397E3B08(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2397E3B08(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E3CD4(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397E3C70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

unsigned int *sub_2397E3CD4(unsigned int *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  _QWORD v27[6];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t *)result;
    v21 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 104);
    v22 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 100) << 32);
    v20 = 0;
    v23 = v3 - 1;
    v24 = v11 | (v12 << 32);
    v25 = v5 - 1;
    v26 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 108) << 32);
    v13 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(char **)(a2 + 24);
    }
    v19 = *(char **)(a3 + 32);
    if (*(_BYTE *)(a3 + 128))
    {
      if (v19)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a3 + 8) + 88))(*(_QWORD *)(a3 + 8), 1, "unknown location");
        v19 = *(char **)(a3 + 32);
      }
    }
    v27[2] = 0;
    v27[3] = 0;
    v27[0] = 0;
    v27[1] = 1;
    v27[4] = 1;
    v27[5] = 0;
    return sub_239718ABC((unsigned int *)&v20, (uint64_t)v27, v10, v13, v19);
  }
  return result;
}

void sub_2397E3E38(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 351, a3, a4);
}

void sub_2397E3E40(uint64_t a1, int a2)
{
  sub_2397E3F00(a2);
}

void sub_2397E3E70(uint64_t a1, int a2)
{
  sub_2397F180C(a2);
}

void sub_2397E3EA0(uint64_t a1, int a2)
{
  sub_2397FCE68(a2);
}

void sub_2397E3ED0(uint64_t a1, int a2)
{
  sub_2398063D8(a2);
}

void sub_2397E3F00(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2397E3F24@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397E4008(a1, a2);
}

double sub_2397E3F30@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397E6DA4(a1, a2);
}

double sub_2397E3F3C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397E74F0(a1, a2);
}

double sub_2397E3F48@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397E7B04(a1, a2);
}

double sub_2397E3F54@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397EA3A0(a1, a2);
}

double sub_2397E3F60@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397E5FCC(a1, a2);
}

double sub_2397E3F6C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397ED898(a1, a2);
}

double sub_2397E3F78@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397F0A34(a1, a2);
}

uint64_t sub_2397E4008@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2397E423C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEBF48;
  sub_2397E4B58((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2397E411C(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2397E40E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397E4100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397E411C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEADB0;
  sub_2397E5C8C(a2, &v11);
  sub_2397E52C8(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397E5EF8(a2, (uint64_t)(a3 + 1));
}

void sub_2397E41D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397E41EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BC484((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397E4200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_2397E4214(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2397E423C(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 33;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2397E437C((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_239766158((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2397E4340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397E4368(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397E437C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 33);
  *a2 = &off_250AE6538;
  sub_2397E44CC((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2397E4494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397E44B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397E44CC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __int16 v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;

  sub_2397E45CC(a1, &v13);
  v12 = v13;
  v13 = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v4 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v4 = 0;
  v5 = *(_WORD *)(a1 + 60);
  sub_23982837C(a2, &v12, v4);
  *(_WORD *)(a2 + 120) = v5;
  v6 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
  if (*((_QWORD *)&v12 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v10 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2397E45B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397E45CC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 33)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397E480C(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397E47AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397E480C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397E4884();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397E4884()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933098);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933098))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_23970D7AC();
    sub_2397E4A88((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397E4A88((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933080, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933080, &dword_23940C000);
          __cxa_guard_release(&qword_256933098);
          return &stru_256933080;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933080;
}

void sub_2397E49D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933098);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933098);
  _Unwind_Resume(a1);
}

void sub_2397E4A88(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397E4B1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_2397E4B58(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __int16 v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;

  sub_2397E4D3C(a1, &v13);
  v12 = v13;
  v13 = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v4 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v4 = 0;
  v5 = *(_WORD *)(a1 + 60);
  sub_239826F20(a2, &v12, v4);
  *(_WORD *)(a2 + 120) = v5;
  v6 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
  if (*((_QWORD *)&v12 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v10 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2397E4C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397E4C58(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397E4C94()
{
  return 13;
}

uint64_t sub_2397E4C9C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2397E4CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_2397E4CC0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2397E4D3C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 13)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397E4F7C(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397E4F1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397E4F7C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397E4FF4();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397E4FF4()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569330B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569330B8))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397ADDDC();
    sub_2397E51F8((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397E51F8((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569330A0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569330A0, &dword_23940C000);
          __cxa_guard_release(&qword_2569330B8);
          return &stru_2569330A0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569330A0;
}

void sub_2397E5144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569330B8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569330B8);
  _Unwind_Resume(a1);
}

void sub_2397E51F8(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397E528C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397E52C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_2397E549C(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397E5478(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397E549C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397E5638((unsigned int *)&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_2397E5A94((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397E5614(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned int *sub_2397E5638(unsigned int *result)
{
  _DWORD *v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  BOOL v9;
  BOOL v11;
  size_t v13;

  v1 = *(_DWORD **)result;
  v2 = *((_QWORD *)result + 1);
  v3 = *(_DWORD *)(*(_QWORD *)result + 48);
  if (v3 == *(_DWORD *)(v2 + 24))
  {
    v4 = v1[8];
    if (v3 == v1[11] * v4)
    {
      v5 = v1[13];
      v6 = v1[9];
      v7 = v6 * v3;
      if (v5 == *(_DWORD *)(v2 + 28) && v5 == v7)
        return (unsigned int *)sub_2397E5700(*(void **)result, (void **)v2);
      v13 = v4 * v6;
      if (v4)
        v9 = v6 == 0;
      else
        v9 = 1;
      if (!v9 && v1[10] != 0)
        return sub_2397E57EC((unsigned int *)&v13, (uint64_t)v1, v2);
      return result;
    }
  }
  else
  {
    v4 = v1[8];
  }
  v13 = v4;
  if (v4)
    v11 = v1[9] == 0;
  else
    v11 = 1;
  if (!v11 && v1[10] != 0)
    return (unsigned int *)sub_2397E5920(&v13, (uint64_t)v1, v2);
  return result;
}

void *sub_2397E5700(void *result, void **a2)
{
  size_t v3;
  const void *v4;
  BOOL v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;

  v3 = (*((_DWORD *)result + 10) * *((_DWORD *)result + 9) * *((_DWORD *)result + 8));
  v4 = (const void *)*((_QWORD *)result + 3);
  if (*((_BYTE *)result + 72))
    v5 = v4 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v6 = result;
    v7 = *((_QWORD *)result + 1);
    v8 = (std::__shared_weak_count *)*((_QWORD *)result + 2);
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    result = (void *)(*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v7 + 88))(v7, 0, "unknown location");
    v4 = (const void *)v6[3];
  }
  if ((_DWORD)v3)
    v12 = v4 == 0;
  else
    v12 = 0;
  if (v12)
    sub_239EBF50C((uint64_t)result, (uint64_t)v4);
  if ((_DWORD)v3)
    return memmove(*a2, v4, v3);
  return result;
}

unsigned int *sub_2397E57EC(unsigned int *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  size_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  _QWORD v27[6];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (size_t *)result;
    v21 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 24);
    v22 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v20 = 0;
    v23 = v3 - 1;
    v24 = v11 | (v12 << 32);
    v25 = v5 - 1;
    v26 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v13 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(char **)(a2 + 24);
    }
    v19 = *(char **)a3;
    memset(&v27[2], 0, 32);
    v27[0] = 0;
    v27[1] = 1;
    return sub_23978EBAC((unsigned int *)&v20, (uint64_t)v27, v10, v13, v19);
  }
  return result;
}

size_t *sub_2397E5920(size_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  size_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  char *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  unsigned int v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  _OWORD v29[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v23 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 24);
    v24 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v22 = 0;
    v25 = v3 - 1;
    v26 = v11 | (v12 << 32);
    v13 = v5 - 1;
    v27 = v13;
    v28 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v14 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(char **)(a2 + 24);
      v13 = v27;
    }
    v20 = *(char **)a3;
    memset(v29, 0, sizeof(v29));
    if (v13)
    {
      v21 = 0;
      do
      {
        sub_23978ED84(&v22, (char **)v29, v10, v14, v20);
        v14 += v28;
        v20 += HIDWORD(v28);
        ++v21;
      }
      while (v21 < v27);
    }
    return (size_t *)sub_23978ED84(&v22, (char **)v29, v10, v14, v20);
  }
  return result;
}

uint64_t sub_2397E5A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  int v21;
  _BYTE *v22;
  int v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  int v28;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a2 + 48);
    v11 = *(unsigned int *)(a2 + 52);
    v12 = *(unsigned int *)(a3 + 24);
    v13 = *(unsigned int *)(a3 + 28);
    v14 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(_BYTE **)(a2 + 24);
    }
    v21 = v3 - 1;
    v22 = *(_BYTE **)a3;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          *v22 = *v14;
          v22[1] = v14[1];
          v22[2] = v14[2];
          v22[3] = v14[3];
          v14 += v11;
          v22 += v13;
          --v9;
        }
        while (v9);
      }
      else
      {
        v23 = 0;
        v24 = v22 + 3;
        v25 = v14 + 1;
        do
        {
          v26 = v25;
          v27 = v24;
          v28 = v3 - 1;
          do
          {
            *(v27 - 3) = *(v26 - 1);
            *(v27 - 2) = *v26;
            *(v27 - 1) = v26[1];
            *v27 = v26[2];
            v27 += v12;
            v26 += v10;
            --v28;
          }
          while (v28);
          *(v27 - 3) = *(v26 - 1);
          *(v27 - 2) = *v26;
          *(v27 - 1) = v26[1];
          *v27 = v26[2];
          v14 += v11;
          v22 += v13;
          ++v23;
          v24 += v13;
          v25 += v11;
        }
        while (v23 != v9);
      }
    }
    if (v3 != 1)
    {
      do
      {
        *v22 = *v14;
        v22[1] = v14[1];
        v22[2] = v14[2];
        v22[3] = v14[3];
        v14 += v10;
        v22 += v12;
        --v21;
      }
      while (v21);
    }
    *v22 = *v14;
    v22[1] = v14[1];
    v22[2] = v14[2];
    v22[3] = v14[3];
  }
  return result;
}

void sub_2397E5C8C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397E5D94(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397E5D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397E5D94(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 13);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397E5EE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397E5EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826490(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 1);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 13;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397E5FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2397E5FCC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397E423C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3B18;
  sub_2397E61D4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397E60E0(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397E60A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397E60C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397E60E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE1878;
  sub_239763C3C(a2, &v11);
  sub_2397E6860(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_23970AF38(a2, (uint64_t)(a3 + 1));
}

void sub_2397E6198(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397E61AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643A8C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397E61C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397E61D4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __int16 v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;

  sub_2397E62D4(a1, &v13);
  v12 = v13;
  v13 = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v4 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v4 = 0;
  v5 = *(_WORD *)(a1 + 60);
  sub_239827D9C(a2, &v12, v4);
  *(_WORD *)(a2 + 120) = v5;
  v6 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
  if (*((_QWORD *)&v12 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v10 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2397E62B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397E62D4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 25)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397E6514(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397E64B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397E6514(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397E658C();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397E658C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569330D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569330D8))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_23964E22C();
    sub_2397E6790((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397E6790((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569330C0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569330C0, &dword_23940C000);
          __cxa_guard_release(&qword_2569330D8);
          return &stru_2569330C0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569330C0;
}

void sub_2397E66DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569330D8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569330D8);
  _Unwind_Resume(a1);
}

void sub_2397E6790(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397E6824(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397E6860(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E6AF8(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397E6A94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2397E6AF8(_DWORD *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t)result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_DWORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_DWORD **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2397E6CE0(&v26, v33, v10, v13, v19);
        v13 = (_DWORD *)((char *)v13 + v32);
        v19 += HIDWORD(v32);
      }
    }
    return sub_2397E6CE0(&v26, v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397E6CE0(_DWORD *result, _QWORD *a2, uint64_t a3, _DWORD *a4, uint64_t a5)
{
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  *a2 = a4;
  a2[2] = a5;
  if (result[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v6 = *a4 >> 8;
      v7 = HIWORD(*a4);
      v8 = HIBYTE(*a4);
      *(_BYTE *)(a5 + 3) = *a4;
      *(_BYTE *)a2[2] = v6;
      *(_BYTE *)(a2[2] + 1) = v7;
      *(_BYTE *)(a2[2] + 2) = v8;
      a4 = (_DWORD *)((char *)a4 + result[6]);
      a5 += result[7];
      ++v5;
    }
    while (v5 < result[5]);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v9 = *a4 >> 8;
  v10 = HIWORD(*a4);
  v11 = HIBYTE(*a4);
  *(_BYTE *)(a5 + 3) = *a4;
  *(_BYTE *)a2[2] = v9;
  *(_BYTE *)(a2[2] + 1) = v10;
  *(_BYTE *)(a2[2] + 2) = v11;
  return result;
}

double sub_2397E6DA4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397E423C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0988;
  sub_2396214F4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397E6EB8(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397E6E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397E6E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397E6EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE1760;
  sub_239763EA8(a2, &v11);
  sub_2397E6FAC(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_239709850(a2, (uint64_t)(a3 + 1));
}

void sub_2397E6F70(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397E6F84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643A24((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397E6F98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397E6FAC(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E7244(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397E71E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2397E7244(_DWORD *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t)result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_DWORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_DWORD **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2397E742C(&v26, v33, v10, v13, v19);
        v13 = (_DWORD *)((char *)v13 + v32);
        v19 += HIDWORD(v32);
      }
    }
    return sub_2397E742C(&v26, v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397E742C(_DWORD *result, _QWORD *a2, uint64_t a3, _DWORD *a4, uint64_t a5)
{
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  *a2 = a4;
  a2[2] = a5;
  if (result[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v6 = *a4 >> 8;
      v7 = HIWORD(*a4);
      v8 = HIBYTE(*a4);
      *(_BYTE *)(a5 + 3) = *a4;
      *(_BYTE *)(a2[2] + 2) = v6;
      *(_BYTE *)(a2[2] + 1) = v7;
      *(_BYTE *)a2[2] = v8;
      a4 = (_DWORD *)((char *)a4 + result[6]);
      a5 += result[7];
      ++v5;
    }
    while (v5 < result[5]);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v9 = *a4 >> 8;
  v10 = HIWORD(*a4);
  v11 = HIBYTE(*a4);
  *(_BYTE *)(a5 + 3) = *a4;
  *(_BYTE *)(a2[2] + 2) = v9;
  *(_BYTE *)(a2[2] + 1) = v10;
  *(_BYTE *)a2[2] = v11;
  return result;
}

double sub_2397E74F0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397E423C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6538;
  sub_2397E44CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397E763C(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_239766158((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397E75E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397E7604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397E7620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397E763C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2397E77E0(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397E777C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2397E77E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397E7938(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2397E7938(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397CB3C8(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397E7AA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2397E7B04@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397E423C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC040;
  sub_2397E7D68((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397E7C18(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397E7BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397E7BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397E7C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB760;
  sub_2397EA060(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEC128[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397EA2CC(a2, (uint64_t)(a4 + 1));
}

void sub_2397E7D04(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397E7D18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397E7D2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C6D68((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_2397E7D40(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2397E7D68(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_2397E7F4C(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239828438(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2397E7E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397E7E68(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397E7EA4()
{
  return 34;
}

uint64_t sub_2397E7EAC(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2397E7EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2397E7ED0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2397E7F4C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 34)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397E818C(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397E812C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397E818C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397E8204();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397E8204()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569330F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569330F8))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397B2864();
    sub_2397E8408((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397E8408((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569330E0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569330E0, &dword_23940C000);
          __cxa_guard_release(&qword_2569330F8);
          return &stru_2569330E0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569330E0;
}

void sub_2397E8354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569330F8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569330F8);
  _Unwind_Resume(a1);
}

void sub_2397E8408(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397E849C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397E84D8(uint64_t **a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  return sub_2397E8520(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7);
}

uint64_t sub_2397E84E8(uint64_t **a1, uint64_t a2)
{
  return sub_2397E92CC(**a1, (*a1)[1], a2);
}

uint64_t sub_2397E84F8(uint64_t **a1)
{
  char v2;

  return sub_2397E8648(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_2397E8520(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  unsigned int v8;
  double v9;
  double v10;
  unsigned int v11;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;

  v8 = *(unsigned __int8 *)(a3 + 16);
  if (!*(_BYTE *)(a3 + 16))
  {
    v11 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    LOWORD(v15) = 0;
    v16 = 0xFFFF;
    if (v8)
      goto LABEL_17;
    goto LABEL_15;
  }
  v9 = *(double *)a3;
  a6 = 0.0;
  if (*(double *)a3 < 0.0)
    v9 = 0.0;
  v8 = (int)v9;
  v10 = 255.0;
  if (*(double *)(a3 + 8) <= 255.0)
    v10 = *(double *)(a3 + 8);
  v11 = (int)v10;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  a6 = 0.0;
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
  v16 = HIWORD(v15);
  if (v8 != (unsigned __int16)v15)
    goto LABEL_17;
LABEL_15:
  if (v16 == v11)
    return sub_2397E8648(a1, a2, (uint64_t)v20);
LABEL_17:
  v24 = (double)v8;
  v23 = 1.0 / ((double)v11 - (double)v8);
  v20[0] = &v24;
  v20[1] = &v23;
  v19[0] = &v22;
  v19[1] = &v21;
  v18[0] = v20;
  v18[1] = v19;
  return sub_2397E8B6C(a1, a2, (uint64_t)v18, (double)v16 - (double)(unsigned __int16)v15, (double)(unsigned __int16)v15, a6, a7, a8);
}

uint64_t sub_2397E8648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397E88F0((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397E888C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397E88F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  _WORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  int v28;
  _WORD *v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  _WORD *v32;
  int v33;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a2 + 48);
    v11 = *(unsigned int *)(a2 + 52);
    v12 = *(unsigned int *)(a3 + 48);
    v13 = *(unsigned int *)(a3 + 52);
    v14 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(unsigned __int8 **)(a2 + 24);
    }
    v21 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v21)
    {
      v22 = *(_QWORD *)(a3 + 8);
      v23 = *(std::__shared_weak_count **)(a3 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_WORD **)(a3 + 24);
    }
    v27 = v3 - 1;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          *v21 = *v14;
          v21[1] = v14[1];
          v21[2] = v14[2];
          v21[3] = v14[3];
          v14 += v11;
          v21 += v13;
          --v9;
        }
        while (v9);
LABEL_36:
        *v21 = *v14;
        v21[1] = v14[1];
        v21[2] = v14[2];
        v21[3] = v14[3];
        return result;
      }
      v28 = 0;
      v29 = v21 + 2;
      v30 = v14 + 1;
      do
      {
        v31 = v30;
        v32 = v29;
        v33 = v3 - 1;
        do
        {
          *(v32 - 2) = *(v31 - 1);
          *(v32 - 1) = *v31;
          *v32 = v31[1];
          result = v31[2];
          v32[1] = result;
          v32 += v12;
          v31 += v10;
          --v33;
        }
        while (v33);
        *(v32 - 2) = *(v31 - 1);
        *(v32 - 1) = *v31;
        *v32 = v31[1];
        v32[1] = v31[2];
        v14 += v11;
        v21 += v13;
        ++v28;
        v29 += v13;
        v30 += v11;
      }
      while (v28 != v9);
    }
    if (v3 != 1)
    {
      do
      {
        *v21 = *v14;
        v21[1] = v14[1];
        v21[2] = v14[2];
        v21[3] = v14[3];
        v14 += v10;
        v21 += v12;
        --v27;
      }
      while (v27);
    }
    goto LABEL_36;
  }
  return result;
}

uint64_t sub_2397E8B6C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double ****v34;

  v11 = *(_QWORD *)(a1 + 8);
  if (!v11)
    goto LABEL_17;
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  do
    v15 = __ldaxr(p_shared_owners);
  while (__stlxr(v15 - 1, p_shared_owners));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  v11 = *(_QWORD *)(a1 + 8);
  v16 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v16)
    goto LABEL_43;
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (v19)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v32 = 0;
    v20 = *(_QWORD *)(a2 + 8);
    if (!v20)
      goto LABEL_33;
LABEL_18:
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
    v20 = *(_QWORD *)(a2 + 8);
    v25 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v25)
      goto LABEL_29;
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
    do
      v28 = __ldaxr(v26);
    while (__stlxr(v28 - 1, v26));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v20 + 96))(&v31, v20, 1);
    v33 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
  std::__shared_weak_count::__release_weak(v16);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v11 + 96))(&v32, v11, 0);
  v20 = *(_QWORD *)(a2 + 8);
  if (v20)
    goto LABEL_18;
LABEL_33:
  v31 = 0;
  v33 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v34 = (double ****)&v33;
    sub_2397E8E14(&v34, a1, a2, a4, a5, a6, a7, a8);
  }
LABEL_37:
  v29 = v31;
  v31 = 0;
  if (v29)
    (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
  result = v32;
  v32 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397E8DB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397E8E14(double *****a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  int v8;
  int v9;
  int v10;
  BOOL v11;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  unint64_t v23;
  _WORD *v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  unint64_t v36;
  _OWORD v37[2];

  v9 = *(_DWORD *)(a2 + 32);
  v8 = *(_DWORD *)(a2 + 36);
  v10 = *(_DWORD *)(a2 + 40);
  if (v9)
    v11 = v8 == 0;
  else
    v11 = 1;
  if (!v11 && v10 != 0)
  {
    v31 = v9 - 1;
    v16 = *(unsigned int *)(a2 + 48);
    v17 = *(unsigned int *)(a3 + 48);
    v32 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v30 = 0;
    v33 = v8 - 1;
    v34 = v16 | (v17 << 32);
    v35 = v10 - 1;
    v36 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v18 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v18)
    {
      v19 = *(_QWORD *)(a2 + 8);
      v20 = *(std::__shared_weak_count **)(a2 + 16);
      if (v20)
      {
        p_shared_owners = (unint64_t *)&v20->__shared_owners_;
        do
          v22 = __ldxr(p_shared_owners);
        while (__stxr(v22 + 1, p_shared_owners));
        do
          v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v19 + 88))(v19, 0, "unknown location");
      v18 = *(_BYTE **)(a2 + 24);
    }
    v24 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v24)
    {
      v25 = *(_QWORD *)(a3 + 8);
      v26 = *(std::__shared_weak_count **)(a3 + 16);
      if (v26)
      {
        v27 = (unint64_t *)&v26->__shared_owners_;
        do
          v28 = __ldxr(v27);
        while (__stxr(v28 + 1, v27));
        do
          v29 = __ldaxr(v27);
        while (__stlxr(v29 - 1, v27));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v25 + 88))(v25, 1, "unknown location");
      v24 = *(_WORD **)(a3 + 24);
    }
    memset(v37, 0, sizeof(v37));
    sub_2397E8FB8(&v30, v37, a1, v18, v24, 0.0, a5, a6, a7, a8);
  }
}

void sub_2397E8FB8(_DWORD *a1, _QWORD *a2, double *****a3, _BYTE *a4, _WORD *a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v15;
  int v16;
  double ****v17;
  uint64_t v18;
  uint64_t v19;
  _WORD *v20;
  _BYTE *v21;
  double **v22;
  double **v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  unsigned int v40;
  unsigned int v41;
  _WORD *v42;
  _BYTE *v43;

  if (a1[8])
  {
    v15 = 0;
    do
    {
      v42 = a5;
      v43 = a4;
      *a2 = a4;
      a2[2] = a5;
      v16 = a1[5];
      if (v16)
      {
        v17 = *a3;
        v18 = a1[6];
        v19 = 2 * a1[7];
        v20 = a5;
        v21 = a4;
        do
        {
          *a2 = v21;
          a2[2] = v20;
          v23 = **v17;
          v22 = (*v17)[1];
          v24 = **v23;
          v25 = *v23[1];
          a8 = **v22;
          a9 = *v22[1];
          LOBYTE(a10) = *v21;
          v26 = v25 * ((double)*(unint64_t *)&a10 - v24);
          v27 = fmax(v26, 0.0);
          if (v26 <= 1.0)
            v28 = v27;
          else
            v28 = 1.0;
          v29 = a8 + a9 * v28;
          *v20 = llround(v29);
          LOBYTE(v29) = v21[1];
          v30 = v25 * ((double)*(unint64_t *)&v29 - v24);
          v31 = fmax(v30, 0.0);
          if (v30 <= 1.0)
            v32 = v31;
          else
            v32 = 1.0;
          v33 = a8 + a9 * v32;
          v20[1] = llround(v33);
          LOBYTE(v33) = v21[2];
          v34 = v25 * ((double)*(unint64_t *)&v33 - v24);
          v35 = fmax(v34, 0.0);
          if (v34 <= 1.0)
            v36 = v35;
          else
            v36 = 1.0;
          v37 = a8 + a9 * v36;
          v20[2] = llround(v37);
          LOBYTE(v37) = v21[3];
          a10 = (double)*(unint64_t *)&v37;
          v38 = v25 * (a10 - v24);
          a7 = fmax(v38, 0.0);
          if (v38 <= 1.0)
            v39 = a7;
          else
            v39 = 1.0;
          a6 = a8 + a9 * v39;
          v20[3] = llround(a6);
          v21 += v18;
          v20 = (_WORD *)((char *)v20 + v19);
          v42 = v20;
          v43 = v21;
          --v16;
        }
        while (v16);
      }
      a6 = sub_2397E91DC(a6, a7, a8, a9, a10, (uint64_t)a1, a2, a3, &v43, &v42);
      a4 += a1[9];
      a5 += a1[10];
      ++v15;
    }
    while (v15 < a1[8]);
  }
  v42 = a5;
  v43 = a4;
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v40 = 0;
    do
    {
      a6 = sub_2397E91DC(a6, a7, a8, a9, a10, (uint64_t)a1, a2, a3, &v43, &v42);
      v41 = a1[5];
      v43 += a1[6];
      v42 += a1[7];
      ++v40;
    }
    while (v40 < v41);
  }
  sub_2397E91DC(a6, a7, a8, a9, a10, (uint64_t)a1, a2, a3, &v43, &v42);
}

double sub_2397E91DC(double a1, double a2, double a3, double a4, double a5, uint64_t a6, _QWORD *a7, double *****a8, _BYTE **a9, _WORD **a10)
{
  _BYTE *v10;
  _WORD *v11;
  double ***v12;
  double **v13;
  double **v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double result;

  v10 = *a9;
  *a7 = *a9;
  v11 = *a10;
  a7[2] = *a10;
  v12 = **a8;
  v14 = *v12;
  v13 = v12[1];
  v15 = **v14;
  v16 = *v14[1];
  v17 = **v13;
  v18 = *v13[1];
  LOBYTE(a5) = *v10;
  v19 = v16 * ((double)*(unint64_t *)&a5 - v15);
  v20 = fmax(v19, 0.0);
  if (v19 <= 1.0)
    v21 = v20;
  else
    v21 = 1.0;
  v22 = v17 + v18 * v21;
  *v11 = llround(v22);
  LOBYTE(v22) = v10[1];
  v23 = v16 * ((double)*(unint64_t *)&v22 - v15);
  v24 = fmax(v23, 0.0);
  if (v23 <= 1.0)
    v25 = v24;
  else
    v25 = 1.0;
  v26 = v17 + v18 * v25;
  v11[1] = llround(v26);
  LOBYTE(v26) = v10[2];
  v27 = v16 * ((double)*(unint64_t *)&v26 - v15);
  v28 = fmax(v27, 0.0);
  if (v27 <= 1.0)
    v29 = v28;
  else
    v29 = 1.0;
  v30 = v17 + v18 * v29;
  v11[2] = llround(v30);
  LOBYTE(v30) = v10[3];
  v31 = v16 * ((double)*(unint64_t *)&v30 - v15);
  v32 = fmax(v31, 0.0);
  if (v31 <= 1.0)
    v33 = v32;
  else
    v33 = 1.0;
  result = v17 + v18 * v33;
  v11[3] = llround(result);
  return result;
}

uint64_t sub_2397E92CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  __int16 *v8;
  __int16 *v9;
  char *v10;
  __int16 *v11;
  char v12;
  char v13;
  __int16 v14;
  __int16 v15;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    if ((int)v6 <= 0xFF)
    {
      v15 = v5;
      v14 = (int)v6;
      v13 = v5;
      v12 = (int)v6;
      v8 = (__int16 *)&v13;
      v9 = &v15;
      v10 = &v12;
      v11 = &v14;
      return sub_2397E93A0(a1, a2, (uint64_t)&v8);
    }
    v15 = v5;
    LOBYTE(v14) = v5;
  }
  else
  {
    v15 = 0;
    LOBYTE(v14) = 0;
  }
  v8 = &v14;
  v9 = &v15;
  return sub_2397E9A1C(a1, a2, (uint64_t)&v8);
}

uint64_t sub_2397E93A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_2397E9648(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397E95E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int8 ****sub_2397E9648(unsigned __int8 ****result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  unsigned __int8 ****v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(unsigned __int8 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(unsigned __int8 **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2397E9830(&v26, (unsigned __int8 **)v33, v10, v13, v19);
        v13 += v32;
        v19 += 2 * HIDWORD(v32);
      }
    }
    return (unsigned __int8 ****)sub_2397E9830(&v26, (unsigned __int8 **)v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397E9830(_DWORD *result, unsigned __int8 **a2, unsigned __int8 ****a3, unsigned __int8 *a4, unsigned __int8 *a5)
{
  int v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned __int8 *v13;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = result[6];
    v9 = 2 * result[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      LODWORD(v10) = *a4;
      if (v10 >= *v7)
      {
        if (v10 <= *v6[2])
          goto LABEL_11;
        v10 = v6[3];
      }
      else
      {
        v10 = v6[1];
      }
      LOWORD(v10) = *(_WORD *)v10;
LABEL_11:
      *(_WORD *)a5 = (_WORD)v10;
      LODWORD(v10) = a4[1];
      if (v10 >= *v7)
      {
        if (v10 <= *v6[2])
          goto LABEL_16;
        v10 = v6[3];
      }
      else
      {
        v10 = v6[1];
      }
      LOWORD(v10) = *(_WORD *)v10;
LABEL_16:
      *((_WORD *)a5 + 1) = (_WORD)v10;
      LODWORD(v10) = a4[2];
      if (v10 >= *v7)
      {
        if (v10 <= *v6[2])
          goto LABEL_21;
        v10 = v6[3];
      }
      else
      {
        v10 = v6[1];
      }
      LOWORD(v10) = *(_WORD *)v10;
LABEL_21:
      *((_WORD *)a5 + 2) = (_WORD)v10;
      LODWORD(v10) = a4[3];
      if (v10 < *v7)
      {
        v10 = v6[1];
      }
      else
      {
        if (v10 <= *v6[2])
          goto LABEL_5;
        v10 = v6[3];
      }
      LOWORD(v10) = *(_WORD *)v10;
LABEL_5:
      *((_WORD *)a5 + 3) = (_WORD)v10;
      a4 += v8;
      a5 += v9;
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  LODWORD(v11) = *a4;
  if (v11 >= *v7)
  {
    if (v11 <= *v6[2])
      goto LABEL_29;
    v11 = v6[3];
  }
  else
  {
    v11 = v6[1];
  }
  LOWORD(v11) = *(_WORD *)v11;
LABEL_29:
  *(_WORD *)a5 = (_WORD)v11;
  LODWORD(v11) = a4[1];
  if (v11 >= *v7)
  {
    if (v11 <= *v6[2])
      goto LABEL_34;
    v11 = v6[3];
  }
  else
  {
    v11 = v6[1];
  }
  LOWORD(v11) = *(_WORD *)v11;
LABEL_34:
  *((_WORD *)a5 + 1) = (_WORD)v11;
  LODWORD(v11) = a4[2];
  if (v11 >= *v7)
  {
    if (v11 <= *v6[2])
      goto LABEL_39;
    v11 = v6[3];
  }
  else
  {
    v11 = v6[1];
  }
  LOWORD(v11) = *(_WORD *)v11;
LABEL_39:
  *((_WORD *)a5 + 2) = (_WORD)v11;
  v12 = a4[3];
  if (v12 < *v7)
  {
    v13 = v6[1];
LABEL_43:
    LOWORD(v12) = *(_WORD *)v13;
    goto LABEL_44;
  }
  if (v12 > *v6[2])
  {
    v13 = v6[3];
    goto LABEL_43;
  }
LABEL_44:
  *((_WORD *)a5 + 3) = v12;
  return result;
}

uint64_t sub_2397E9A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_2397E9CC4(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397E9C60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int8 ****sub_2397E9CC4(unsigned __int8 ****result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  unsigned __int8 ****v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(unsigned __int8 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(unsigned __int8 **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2397E9EAC(&v26, (unsigned __int8 **)v33, v10, v13, v19);
        v13 += v32;
        v19 += 2 * HIDWORD(v32);
      }
    }
    return (unsigned __int8 ****)sub_2397E9EAC(&v26, (unsigned __int8 **)v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397E9EAC(_DWORD *result, unsigned __int8 **a2, unsigned __int8 ****a3, unsigned __int8 *a4, unsigned __int8 *a5)
{
  int v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = result[6];
    v9 = 2 * result[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v10 = *a4;
      if (v10 < *v7)
      {
        *(_WORD *)a5 = *(_WORD *)v6[1];
        v11 = a4[1];
        if (v11 >= *v7)
        {
LABEL_6:
          *((_WORD *)a5 + 1) = v11;
          v12 = a4[2];
          if (v12 >= *v7)
            goto LABEL_7;
          goto LABEL_11;
        }
      }
      else
      {
        *(_WORD *)a5 = v10;
        v11 = a4[1];
        if (v11 >= *v7)
          goto LABEL_6;
      }
      *((_WORD *)a5 + 1) = *(_WORD *)v6[1];
      v12 = a4[2];
      if (v12 >= *v7)
      {
LABEL_7:
        *((_WORD *)a5 + 2) = v12;
        v13 = a4[3];
        if (v13 < *v7)
          goto LABEL_12;
        goto LABEL_3;
      }
LABEL_11:
      *((_WORD *)a5 + 2) = *(_WORD *)v6[1];
      v13 = a4[3];
      if (v13 < *v7)
LABEL_12:
        LOWORD(v13) = *(_WORD *)v6[1];
LABEL_3:
      *((_WORD *)a5 + 3) = v13;
      a4 += v8;
      a5 += v9;
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  v14 = *a4;
  if (v14 < *v7)
  {
    *(_WORD *)a5 = *(_WORD *)v6[1];
    v15 = a4[1];
    if (v15 >= *v7)
    {
LABEL_15:
      *((_WORD *)a5 + 1) = v15;
      v16 = a4[2];
      if (v16 >= *v7)
        goto LABEL_16;
LABEL_20:
      *((_WORD *)a5 + 2) = *(_WORD *)v6[1];
      v17 = a4[3];
      if (v17 >= *v7)
        goto LABEL_17;
      goto LABEL_21;
    }
  }
  else
  {
    *(_WORD *)a5 = v14;
    v15 = a4[1];
    if (v15 >= *v7)
      goto LABEL_15;
  }
  *((_WORD *)a5 + 1) = *(_WORD *)v6[1];
  v16 = a4[2];
  if (v16 < *v7)
    goto LABEL_20;
LABEL_16:
  *((_WORD *)a5 + 2) = v16;
  v17 = a4[3];
  if (v17 >= *v7)
  {
LABEL_17:
    *((_WORD *)a5 + 3) = v17;
    return result;
  }
LABEL_21:
  *((_WORD *)a5 + 3) = *(_WORD *)v6[1];
  return result;
}

void sub_2397EA060(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397EA168(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397EA14C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397EA168(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 34);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397EA2B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397EA2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 34;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397EA380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2397EA3A0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397E423C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC150;
  sub_2397EA604((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397EA4B4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397EA47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397EA498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397EA4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB858;
  sub_2397ED558(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEC238[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397ED7C4(a2, (uint64_t)(a4 + 1));
}

void sub_2397EA5A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397EA5B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397EA5C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C79B0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_2397EA5DC(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2397EA604(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_2397EA7E8(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_2398284F4(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2397EA6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397EA704(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397EA740()
{
  return 35;
}

uint64_t sub_2397EA748(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2397EA750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2397EA76C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2397EA7E8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 35)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397EAA28(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397EA9C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397EAA28(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397EAAA0();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397EAAA0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933118);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933118))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397B30AC();
    sub_2397EACA4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397EACA4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933100, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933100, &dword_23940C000);
          __cxa_guard_release(&qword_256933118);
          return &stru_256933100;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933100;
}

void sub_2397EABF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933118);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933118);
  _Unwind_Resume(a1);
}

void sub_2397EACA4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397EAD38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397EAD74(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2397EAE88(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2397EAD84(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2397EBEB4((uint64_t)v13, 1006632960, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 1.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2397EBEB4((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_2397EAE60(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2397EAFCC(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2397EAE88(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  unsigned int v4;
  double v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  unint64_t v24;
  unint64_t v25;
  double v26;
  double v27;

  v4 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v5 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v5 = 0.0;
    v4 = (int)v5;
    _Q0.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = (int)_Q0.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = 255;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm
  {
    FCVT            S3, H0
    FCVT            S3, H1
  }
  _ZF = _ZF && _S3 == (float)v6;
  if (_ZF)
    return sub_2397EAFCC(a1, a2, (uint64_t)v23, _Q0);
  v27 = (double)v4;
  __asm { FCVT            D0, H0 }
  v25 = _Q0.n128_u64[0];
  v26 = 1.0 / ((double)v6 - (double)v4);
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v24 = _Q0.n128_u64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_2397EB63C(a1, a2, (uint64_t)v21, _Q0);
}

uint64_t sub_2397EAFCC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397EB274((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397EB210(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397EB274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_BYTE **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    *(_QWORD *)&result = sub_2397EB418(&v26, v33, 0.0, a1, v13, v19);
  }
  return result;
}

__int16 sub_2397EB418@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, float _S0@<S0>, uint64_t a4@<X2>, _BYTE *a5@<X3>, _WORD *a6@<X4>)
{
  unsigned int v6;
  _WORD *v14;
  _BYTE *v15;
  unsigned int v16;
  unsigned int v20;
  __int16 result;

  if (a1[8])
  {
    v6 = 0;
    do
    {
      *a2 = a5;
      a2[2] = a6;
      v14 = a6;
      v15 = a5;
      if (a1[5])
      {
        v16 = 0;
        v15 = a5;
        v14 = a6;
        do
        {
          *a2 = v15;
          a2[2] = v14;
          LOBYTE(_S0) = *v15;
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v14 = _S0;
          LOBYTE(_S0) = *(_BYTE *)(*a2 + 1);
          *(float *)&_S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          *(_WORD *)(a2[2] + 2) = _S0;
          LOBYTE(_S0) = *(_BYTE *)(*a2 + 2);
          *(float *)&_S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          *(_WORD *)(a2[2] + 4) = _S0;
          LOBYTE(_S0) = *(_BYTE *)(*a2 + 3);
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          *(_WORD *)(a2[2] + 6) = LOWORD(_S0);
          v15 += a1[6];
          v14 += a1[7];
          ++v16;
        }
        while (v16 < a1[5]);
      }
      *a2 = v15;
      a2[2] = v14;
      LOBYTE(_S0) = *v15;
      *(float *)&_S0 = (float)LODWORD(_S0);
      __asm { FCVT            H0, S0 }
      *v14 = _S0;
      LOBYTE(_S0) = *(_BYTE *)(*a2 + 1);
      *(float *)&_S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(a2[2] + 2) = _S0;
      LOBYTE(_S0) = *(_BYTE *)(*a2 + 2);
      *(float *)&_S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(a2[2] + 4) = _S0;
      LOBYTE(_S0) = *(_BYTE *)(*a2 + 3);
      _S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(a2[2] + 6) = LOWORD(_S0);
      a5 += a1[9];
      a6 += a1[10];
      ++v6;
    }
    while (v6 < a1[8]);
  }
  *a2 = a5;
  a2[2] = a6;
  if (a1[5])
  {
    v20 = 0;
    do
    {
      *a2 = a5;
      a2[2] = a6;
      LOBYTE(_S0) = *a5;
      *(float *)&_S0 = (float)LODWORD(_S0);
      __asm { FCVT            H0, S0 }
      *a6 = _S0;
      LOBYTE(_S0) = *(_BYTE *)(*a2 + 1);
      *(float *)&_S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(a2[2] + 2) = _S0;
      LOBYTE(_S0) = *(_BYTE *)(*a2 + 2);
      *(float *)&_S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(a2[2] + 4) = _S0;
      LOBYTE(_S0) = *(_BYTE *)(*a2 + 3);
      _S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(a2[2] + 6) = LOWORD(_S0);
      a5 += a1[6];
      a6 += a1[7];
      ++v20;
    }
    while (v20 < a1[5]);
  }
  *a2 = a5;
  a2[2] = a6;
  LOBYTE(_S0) = *a5;
  *(float *)&_S0 = (float)LODWORD(_S0);
  __asm { FCVT            H0, S0 }
  *a6 = _S0;
  LOBYTE(_S0) = *(_BYTE *)(*a2 + 1);
  *(float *)&_S0 = (float)_S0;
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 2) = _S0;
  LOBYTE(_S0) = *(_BYTE *)(*a2 + 2);
  *(float *)&_S0 = (float)_S0;
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 4) = _S0;
  LOBYTE(_S0) = *(_BYTE *)(*a2 + 3);
  _S0 = (float)_S0;
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 6) = result;
  return result;
}

uint64_t sub_2397EB63C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397EB8E4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397EB880(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397EB8E4(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_BYTE **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397EBA88(&v26, v33, a1, v13, v19, 0.0);
  }
  return result;
}

double sub_2397EBA88(_DWORD *a1, _QWORD *a2, double *****a3, _BYTE *a4, _WORD *a5, double _D0)
{
  unsigned int v11;
  _WORD *v12;
  _BYTE *v13;
  unsigned int v14;
  double ***v15;
  double **v16;
  double **v17;
  double v18;
  double v19;
  double v20;
  double ***v26;
  double **v27;
  double **v28;
  double v29;
  double v30;
  double v31;
  double ***v33;
  double **v34;
  double **v35;
  double v36;
  double v37;
  double v38;
  double ***v40;
  double **v41;
  double **v42;
  double v43;
  double v44;
  double v45;
  unsigned int v46;
  double result;

  if (a1[8])
  {
    v11 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v12 = a5;
      v13 = a4;
      if (a1[5])
      {
        v14 = 0;
        v13 = a4;
        v12 = a5;
        do
        {
          *a2 = v13;
          a2[2] = v12;
          v15 = **a3;
          LOBYTE(_D0) = *v13;
          v17 = *v15;
          v16 = v15[1];
          v18 = ((double)*(unint64_t *)&_D0 - **v17) * *v17[1];
          v19 = fmax(v18, 0.0);
          if (v18 <= 1.0)
            v20 = v19;
          else
            v20 = 1.0;
          _D0 = **v16 + v20 * *v16[1];
          *(float *)&_D0 = _D0;
          __asm { FCVT            H0, S0 }
          *v12 = LOWORD(_D0);
          v26 = **a3;
          LOBYTE(_D0) = *(_BYTE *)(*a2 + 1);
          v28 = *v26;
          v27 = v26[1];
          v29 = ((double)*(unint64_t *)&_D0 - **v28) * *v28[1];
          v30 = fmax(v29, 0.0);
          if (v29 <= 1.0)
            v31 = v30;
          else
            v31 = 1.0;
          _D0 = **v27 + v31 * *v27[1];
          *(float *)&_D0 = _D0;
          __asm { FCVT            H0, S0 }
          *(_WORD *)(a2[2] + 2) = LOWORD(_D0);
          v33 = **a3;
          LOBYTE(_D0) = *(_BYTE *)(*a2 + 2);
          v35 = *v33;
          v34 = v33[1];
          v36 = ((double)*(unint64_t *)&_D0 - **v35) * *v35[1];
          v37 = fmax(v36, 0.0);
          if (v36 <= 1.0)
            v38 = v37;
          else
            v38 = 1.0;
          _D0 = **v34 + v38 * *v34[1];
          *(float *)&_D0 = _D0;
          __asm { FCVT            H0, S0 }
          *(_WORD *)(a2[2] + 4) = LOWORD(_D0);
          v40 = **a3;
          LOBYTE(_D0) = *(_BYTE *)(*a2 + 3);
          v42 = *v40;
          v41 = v40[1];
          v43 = ((double)*(unint64_t *)&_D0 - **v42) * *v42[1];
          v44 = fmax(v43, 0.0);
          if (v43 <= 1.0)
            v45 = v44;
          else
            v45 = 1.0;
          _D0 = **v41 + v45 * *v41[1];
          *(float *)&_D0 = _D0;
          __asm { FCVT            H0, S0 }
          *(_WORD *)(a2[2] + 6) = LOWORD(_D0);
          v13 += a1[6];
          v12 += a1[7];
          ++v14;
        }
        while (v14 < a1[5]);
      }
      *a2 = v13;
      a2[2] = v12;
      *(_QWORD *)&_D0 = sub_2397EBD38(a3, (_BYTE **)a2, (uint64_t)(a2 + 2), _D0);
      a4 += a1[9];
      a5 += a1[10];
      ++v11;
    }
    while (v11 < a1[8]);
  }
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v46 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      *(_QWORD *)&_D0 = sub_2397EBD38(a3, (_BYTE **)a2, (uint64_t)(a2 + 2), _D0);
      a4 += a1[6];
      a5 += a1[7];
      ++v46;
    }
    while (v46 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  *(_QWORD *)&result = sub_2397EBD38(a3, (_BYTE **)a2, (uint64_t)(a2 + 2), _D0);
  return result;
}

__int16 sub_2397EBD38@<H0>(double *****a1@<X0>, _BYTE **a2@<X1>, uint64_t a3@<X2>, double a4@<D0>)
{
  double ***v4;
  double **v5;
  double **v6;
  double v7;
  double v8;
  double v9;
  double ***v15;
  double **v16;
  double **v17;
  double v18;
  double v19;
  double v20;
  double ***v22;
  double **v23;
  double **v24;
  double v25;
  double v26;
  double v27;
  double ***v29;
  double **v30;
  double **v31;
  double v32;
  double v33;
  __int16 result;

  v4 = **a1;
  LOBYTE(a4) = **a2;
  v6 = *v4;
  v5 = v4[1];
  v7 = ((double)*(unint64_t *)&a4 - **v6) * *v6[1];
  v8 = fmax(v7, 0.0);
  if (v7 <= 1.0)
    v9 = v8;
  else
    v9 = 1.0;
  _D2 = **v5 + v9 * *v5[1];
  *(float *)&_D2 = _D2;
  __asm { FCVT            H2, S2 }
  **(_WORD **)a3 = LOWORD(_D2);
  v15 = **a1;
  LOBYTE(_D2) = (*a2)[1];
  v17 = *v15;
  v16 = v15[1];
  v18 = ((double)*(unint64_t *)&_D2 - **v17) * *v17[1];
  v19 = fmax(v18, 0.0);
  if (v18 <= 1.0)
    v20 = v19;
  else
    v20 = 1.0;
  _D2 = **v16 + v20 * *v16[1];
  *(float *)&_D2 = _D2;
  __asm { FCVT            H2, S2 }
  *(_WORD *)(*(_QWORD *)a3 + 2) = LOWORD(_D2);
  v22 = **a1;
  LOBYTE(_D2) = (*a2)[2];
  v24 = *v22;
  v23 = v22[1];
  v25 = ((double)*(unint64_t *)&_D2 - **v24) * *v24[1];
  v26 = fmax(v25, 0.0);
  if (v25 <= 1.0)
    v27 = v26;
  else
    v27 = 1.0;
  _D2 = **v23 + v27 * *v23[1];
  *(float *)&_D2 = _D2;
  __asm { FCVT            H2, S2 }
  *(_WORD *)(*(_QWORD *)a3 + 4) = LOWORD(_D2);
  v29 = **a1;
  LOBYTE(_D2) = (*a2)[3];
  v31 = *v29;
  v30 = v29[1];
  v32 = ((double)*(unint64_t *)&_D2 - **v31) * *v31[1];
  v33 = fmax(v32, 0.0);
  if (v32 > 1.0)
    v33 = 1.0;
  _S0 = **v30 + v33 * *v30[1];
  __asm { FCVT            H0, S0 }
  *(_WORD *)(*(_QWORD *)a3 + 6) = result;
  return result;
}

uint64_t sub_2397EBEB4(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  char *v23;
  __int16 *v24;
  char v25;
  char v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 255.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      LOBYTE(v27) = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2397EC800(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 255.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      LOBYTE(v27) = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2397ECEAC(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_2397EAFCC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = (__int16 *)&v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_2397EBFCC(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_2397EBFCC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397EC274(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397EC210(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397EC274(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397EC418(&v26, (uint64_t)v33, a1, v13, v19);
  }
  return result;
}

double sub_2397EC418(_DWORD *a1, uint64_t a2, unsigned __int8 ****a3, unsigned __int8 *a4, _WORD *a5)
{
  int v10;
  _WORD *v11;
  unsigned __int8 *v12;
  int v13;
  unsigned __int8 *v14;
  unsigned __int8 **v16;
  unsigned int v17;
  unsigned __int8 **v24;
  unsigned int v25;
  unsigned __int8 *v26;
  unsigned __int8 **v29;
  unsigned int v30;
  unsigned __int8 *v31;
  unsigned __int8 **v34;
  unsigned int v35;
  unsigned int v37;
  double result;

  if (a1[8])
  {
    v10 = 0;
    while (1)
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      v11 = a5;
      v12 = a4;
      if (a1[5])
        break;
LABEL_3:
      *(_QWORD *)a2 = v12;
      *(_QWORD *)(a2 + 16) = v11;
      sub_2397EC69C(a3, (unsigned __int8 **)a2, (uint64_t *)(a2 + 16));
      a4 += a1[9];
      a5 += a1[10];
      if (++v10 >= a1[8])
        goto LABEL_30;
    }
    v13 = 0;
    v12 = a4;
    v11 = a5;
    while (1)
    {
      *(_QWORD *)a2 = v12;
      *(_QWORD *)(a2 + 16) = v11;
      v16 = **a3;
      v17 = *v12;
      if (v17 >= **v16)
      {
        if (v17 <= *v16[2])
        {
          _S0 = (float)v17;
          __asm { FCVT            H0, S0 }
        }
        else
        {
          _H0 = *(_WORD *)v16[3];
        }
      }
      else
      {
        _H0 = *(_WORD *)v16[1];
      }
      *v11 = _H0;
      v24 = **a3;
      v25 = *(unsigned __int8 *)(*(_QWORD *)a2 + 1);
      if (v25 < **v24)
        break;
      if (v25 > *v24[2])
      {
        v26 = v24[3];
        goto LABEL_18;
      }
      _S0 = (float)v25;
      __asm { FCVT            H0, S0 }
LABEL_20:
      *(_WORD *)(*(_QWORD *)(a2 + 16) + 2) = _H0;
      v29 = **a3;
      v30 = *(unsigned __int8 *)(*(_QWORD *)a2 + 2);
      if (v30 < **v29)
      {
        v31 = v29[1];
LABEL_24:
        _H0 = *(_WORD *)v31;
        goto LABEL_26;
      }
      if (v30 > *v29[2])
      {
        v31 = v29[3];
        goto LABEL_24;
      }
      _S0 = (float)v30;
      __asm { FCVT            H0, S0 }
LABEL_26:
      *(_WORD *)(*(_QWORD *)(a2 + 16) + 4) = _H0;
      v34 = **a3;
      v35 = *(unsigned __int8 *)(*(_QWORD *)a2 + 3);
      if (v35 < **v34)
      {
        v14 = v34[1];
      }
      else
      {
        if (v35 <= *v34[2])
        {
          _S0 = (float)v35;
          __asm { FCVT            H0, S0 }
          goto LABEL_8;
        }
        v14 = v34[3];
      }
      _H0 = *(_WORD *)v14;
LABEL_8:
      *(_WORD *)(*(_QWORD *)(a2 + 16) + 6) = _H0;
      v12 += a1[6];
      v11 += a1[7];
      if (++v13 >= a1[5])
        goto LABEL_3;
    }
    v26 = v24[1];
LABEL_18:
    _H0 = *(_WORD *)v26;
    goto LABEL_20;
  }
LABEL_30:
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  if (a1[5])
  {
    v37 = 0;
    do
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      sub_2397EC69C(a3, (unsigned __int8 **)a2, (uint64_t *)(a2 + 16));
      a4 += a1[6];
      a5 += a1[7];
      ++v37;
    }
    while (v37 < a1[5]);
  }
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  *(_QWORD *)&result = sub_2397EC69C(a3, (unsigned __int8 **)a2, (uint64_t *)(a2 + 16));
  return result;
}

__int16 sub_2397EC69C@<H0>(unsigned __int8 ****a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t *a3@<X2>)
{
  unsigned __int8 **v3;
  unsigned int v4;
  unsigned __int8 **v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned __int8 **v16;
  unsigned int v17;
  unsigned __int8 *v18;
  uint64_t v21;
  unsigned __int8 **v22;
  unsigned int v23;
  unsigned __int8 *v24;
  __int16 result;
  unsigned __int8 *v26;

  v3 = **a1;
  v4 = **a2;
  if (v4 >= **v3)
  {
    if (v4 <= *v3[2])
    {
      _S0 = (float)v4;
      __asm { FCVT            H0, S0 }
    }
    else
    {
      _H0 = *(_WORD *)v3[3];
    }
  }
  else
  {
    _H0 = *(_WORD *)v3[1];
  }
  *(_WORD *)*a3 = _H0;
  v11 = **a1;
  v12 = (*a2)[1];
  if (v12 < **v11)
  {
    v13 = v11[1];
LABEL_10:
    _H0 = *(_WORD *)v13;
    goto LABEL_12;
  }
  if (v12 > *v11[2])
  {
    v13 = v11[3];
    goto LABEL_10;
  }
  _S0 = (float)v12;
  __asm { FCVT            H0, S0 }
LABEL_12:
  *(_WORD *)(*a3 + 2) = _H0;
  v16 = **a1;
  v17 = (*a2)[2];
  if (v17 < **v16)
  {
    v18 = v16[1];
LABEL_16:
    _H0 = *(_WORD *)v18;
    goto LABEL_18;
  }
  if (v17 > *v16[2])
  {
    v18 = v16[3];
    goto LABEL_16;
  }
  _S0 = (float)v17;
  __asm { FCVT            H0, S0 }
LABEL_18:
  *(_WORD *)(*a3 + 4) = _H0;
  v21 = *a3;
  v22 = **a1;
  v23 = (*a2)[3];
  if (v23 >= **v22)
  {
    if (v23 <= *v22[2])
    {
      _S0 = (float)v23;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(v21 + 6) = result;
    }
    else
    {
      v26 = v22[3];
      result = *(_WORD *)v26;
      *(_WORD *)(v21 + 6) = *(_WORD *)v26;
    }
  }
  else
  {
    v24 = v22[1];
    result = *(_WORD *)v24;
    *(_WORD *)(v21 + 6) = *(_WORD *)v24;
  }
  return result;
}

uint64_t sub_2397EC800(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397ECAA8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397ECA44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397ECAA8(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397ECC90(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    *(_QWORD *)&result = sub_2397ECC90(&v27, v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_2397ECC90@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int8 ****a3@<X2>, unsigned __int8 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int8 **v7;
  unsigned int v8;
  unsigned __int8 **v15;
  unsigned int v16;
  unsigned __int8 **v19;
  unsigned int v20;
  unsigned __int8 **v23;
  unsigned int v24;
  unsigned __int8 **v26;
  unsigned int v27;
  unsigned __int8 **v30;
  unsigned int v31;
  unsigned __int8 **v34;
  unsigned int v35;
  uint64_t v38;
  unsigned __int8 **v39;
  unsigned int v40;
  unsigned __int8 *v41;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 >= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int8 *)(*a2 + 1);
      if (v16 >= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int8 *)(*a2 + 2);
      if (v20 >= **v19)
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v19[1];
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      v23 = **a3;
      v24 = *(unsigned __int8 *)(*a2 + 3);
      if (v24 < **v23)
      {
        _H0 = *(_WORD *)v23[1];
      }
      else
      {
        _S0 = (float)v24;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 6) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = **a3;
  v27 = *a4;
  if (v27 >= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v26[1];
  }
  *a5 = _H0;
  v30 = **a3;
  v31 = *(unsigned __int8 *)(*a2 + 1);
  if (v31 >= **v30)
  {
    _S0 = (float)v31;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v30[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v34 = **a3;
  v35 = *(unsigned __int8 *)(*a2 + 2);
  if (v35 >= **v34)
  {
    _S0 = (float)v35;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v34[1];
  }
  *(_WORD *)(a2[2] + 4) = _H0;
  v38 = a2[2];
  v39 = **a3;
  v40 = *(unsigned __int8 *)(*a2 + 3);
  if (v40 >= **v39)
  {
    _S0 = (float)v40;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v38 + 6) = result;
  }
  else
  {
    v41 = v39[1];
    result = *(_WORD *)v41;
    *(_WORD *)(v38 + 6) = *(_WORD *)v41;
  }
  return result;
}

uint64_t sub_2397ECEAC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397ED154(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397ED0F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397ED154(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397ED33C(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    *(_QWORD *)&result = sub_2397ED33C(&v27, v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_2397ED33C@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int8 ****a3@<X2>, unsigned __int8 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int8 **v7;
  unsigned int v8;
  unsigned __int8 **v15;
  unsigned int v16;
  unsigned __int8 **v19;
  unsigned int v20;
  unsigned __int8 **v23;
  unsigned int v24;
  unsigned __int8 **v26;
  unsigned int v27;
  unsigned __int8 **v30;
  unsigned int v31;
  unsigned __int8 **v34;
  unsigned int v35;
  uint64_t v38;
  unsigned __int8 **v39;
  unsigned int v40;
  unsigned __int8 *v41;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 <= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int8 *)(*a2 + 1);
      if (v16 <= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int8 *)(*a2 + 2);
      if (v20 <= **v19)
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v19[1];
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      v23 = **a3;
      v24 = *(unsigned __int8 *)(*a2 + 3);
      if (v24 > **v23)
      {
        _H0 = *(_WORD *)v23[1];
      }
      else
      {
        _S0 = (float)v24;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 6) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = **a3;
  v27 = *a4;
  if (v27 <= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v26[1];
  }
  *a5 = _H0;
  v30 = **a3;
  v31 = *(unsigned __int8 *)(*a2 + 1);
  if (v31 <= **v30)
  {
    _S0 = (float)v31;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v30[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v34 = **a3;
  v35 = *(unsigned __int8 *)(*a2 + 2);
  if (v35 <= **v34)
  {
    _S0 = (float)v35;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v34[1];
  }
  *(_WORD *)(a2[2] + 4) = _H0;
  v38 = a2[2];
  v39 = **a3;
  v40 = *(unsigned __int8 *)(*a2 + 3);
  if (v40 <= **v39)
  {
    _S0 = (float)v40;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v38 + 6) = result;
  }
  else
  {
    v41 = v39[1];
    result = *(_WORD *)v41;
    *(_WORD *)(v38 + 6) = *(_WORD *)v41;
  }
  return result;
}

void sub_2397ED558(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397ED660(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397ED644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397ED660(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 35);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397ED7B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397ED7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 35;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397ED878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2397ED898@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397E423C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC260;
  sub_2397EDAFC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397ED9AC(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397ED974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397ED990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397ED9AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB950;
  sub_2397F06F4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEC348[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397F0960(a2, (uint64_t)(a4 + 1));
}

void sub_2397EDA98(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397EDAAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397EDAC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C8588((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_2397EDAD4(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2397EDAFC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_2397EDCE0(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 2) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_2398285B0(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2397EDBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397EDBFC(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397EDC38()
{
  return 36;
}

uint64_t sub_2397EDC40(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2397EDC48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_2397EDC64(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2397EDCE0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 36)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397EDF20(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397EDEC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397EDF20(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397EDF98();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397EDF98()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933138);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933138))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397B38F4();
    sub_2397EE19C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397EE19C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933120, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933120, &dword_23940C000);
          __cxa_guard_release(&qword_256933138);
          return &stru_256933120;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933120;
}

void sub_2397EE0E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933138);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933138);
  _Unwind_Resume(a1);
}

void sub_2397EE19C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397EE230(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397EE26C(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_2397EE36C(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_2397EE27C(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  float v5;
  _QWORD v7[5];
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[2];

  v3 = (*a1)[1];
  v10[0] = **a1;
  v10[1] = v3;
  v9[0] = v10[0];
  v9[1] = v3;
  v8[0] = v10[0];
  v8[1] = v3;
  v7[0] = v10;
  v7[1] = v9;
  v7[2] = v8;
  v7[3] = v10[0];
  v7[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = 0.0;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 1.0;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    v5 = v4;
    return sub_2397EF0BC((uint64_t)v7, a3, v5);
  }
  else
  {
    a3.n128_u32[0] = 0;
    return sub_2397EF0BC((uint64_t)v7, a3, 1.0);
  }
}

uint64_t sub_2397EE344(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2397EE49C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2397EE36C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  unsigned int v12;
  double v13;
  float v14;
  double v16;
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  unint64_t v22;
  double v23;
  uint64_t v24;
  double v25;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v11 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v11 = 0.0;
    v10 = (int)v11;
    a4.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v12 = (int)a4.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      a4.n128_u64[0] = 0xC7EFFFFFE0000000;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
      a4.n128_f32[0] = a4.n128_f64[0];
      v13 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v13 = *(double *)(a3 + 32);
      v14 = v13;
      if (a4.n128_f32[0] != (float)v10 || v14 != (float)v12)
        goto LABEL_15;
      return sub_2397EE49C(a1, a2, (uint64_t)v21, a4);
    }
  }
  else
  {
    v12 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v14 = 1.0;
  a4.n128_u32[0] = 0;
  if ((float)v10 != 0.0 || 1.0 != (float)v12)
  {
LABEL_15:
    v25 = (double)v10;
    v23 = a4.n128_f32[0];
    v16 = v14;
    a4.n128_f64[0] = v16 - a4.n128_f32[0];
    v22 = a4.n128_u64[0];
    v21[0] = &v25;
    v21[1] = &v24;
    v20[0] = &v23;
    v20[1] = &v22;
    v19[0] = v21;
    v19[1] = v20;
    return sub_2397EEA5C(a1, a2, (uint64_t)v19, a4, v16, 1.0 / ((double)v12 - (double)v10), 1.0, a8, a9, a10);
  }
  return sub_2397EE49C(a1, a2, (uint64_t)v21, a4);
}

uint64_t sub_2397EE49C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2397EE744((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397EE6E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397EE744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_BYTE **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397EE8E8(&v26, v33, 0.0, a1, v13, v19);
  }
  return result;
}

float sub_2397EE8E8(_DWORD *a1, _QWORD *a2, float a3, uint64_t a4, _BYTE *a5, float *a6)
{
  unsigned int v6;
  float v7;
  float v8;
  float v9;
  int v10;
  float *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  float v15;
  float v16;
  float v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  float v21;
  float v22;
  float v23;
  float v24;
  float v25;
  float v26;
  float result;

  if (a1[8])
  {
    v6 = 0;
    do
    {
      *a2 = a5;
      a2[2] = a6;
      v10 = a1[5];
      v11 = a6;
      v12 = a5;
      if (v10)
      {
        v13 = a1[6];
        v14 = 4 * a1[7];
        v11 = a6;
        v12 = a5;
        do
        {
          *a2 = v12;
          a2[2] = v11;
          LOBYTE(a3) = *v12;
          v15 = (float)LODWORD(a3);
          *v11 = v15;
          LOBYTE(v15) = v12[1];
          v16 = (float)LODWORD(v15);
          v11[1] = v16;
          LOBYTE(v16) = v12[2];
          v17 = (float)LODWORD(v16);
          v11[2] = v17;
          LOBYTE(v17) = v12[3];
          a3 = (float)LODWORD(v17);
          v11[3] = a3;
          v12 += v13;
          v11 = (float *)((char *)v11 + v14);
          --v10;
        }
        while (v10);
      }
      *a2 = v12;
      a2[2] = v11;
      LOBYTE(a3) = *v12;
      v7 = (float)LODWORD(a3);
      *v11 = v7;
      LOBYTE(v7) = v12[1];
      v8 = (float)LODWORD(v7);
      v11[1] = v8;
      LOBYTE(v8) = v12[2];
      v9 = (float)LODWORD(v8);
      v11[2] = v9;
      LOBYTE(v9) = v12[3];
      a3 = (float)LODWORD(v9);
      v11[3] = a3;
      a5 += a1[9];
      a6 += a1[10];
      ++v6;
    }
    while (v6 < a1[8]);
  }
  *a2 = a5;
  a2[2] = a6;
  v18 = a1[5];
  if (v18)
  {
    v19 = a1[6];
    v20 = 4 * a1[7];
    do
    {
      *a2 = a5;
      a2[2] = a6;
      LOBYTE(a3) = *a5;
      v21 = (float)LODWORD(a3);
      *a6 = v21;
      LOBYTE(v21) = a5[1];
      v22 = (float)LODWORD(v21);
      a6[1] = v22;
      LOBYTE(v22) = a5[2];
      v23 = (float)LODWORD(v22);
      a6[2] = v23;
      LOBYTE(v23) = a5[3];
      a3 = (float)LODWORD(v23);
      a6[3] = a3;
      a5 += v19;
      a6 = (float *)((char *)a6 + v20);
      --v18;
    }
    while (v18);
  }
  *a2 = a5;
  a2[2] = a6;
  LOBYTE(a3) = *a5;
  v24 = (float)LODWORD(a3);
  *a6 = v24;
  LOBYTE(v24) = a5[1];
  v25 = (float)LODWORD(v24);
  a6[1] = v25;
  LOBYTE(v25) = a5[2];
  v26 = (float)LODWORD(v25);
  a6[2] = v26;
  LOBYTE(v26) = a5[3];
  result = (float)LODWORD(v26);
  a6[3] = result;
  return result;
}

uint64_t sub_2397EEA5C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double ****v36;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_43;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v36 = (double ****)&v35;
    a4.n128_f32[0] = sub_2397EED04(&v36, a1, a2, a4.n128_f32[0], a5, a6, a7, a8, a9, a10);
  }
LABEL_37:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397EECA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397EED04(double *****a1, uint64_t a2, uint64_t a3, float result, double a5, double a6, double a7, double a8, double a9, double a10)
{
  int v10;
  int v11;
  int v12;
  BOOL v13;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t v25;
  float *v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  double v32;
  unsigned int i;
  uint64_t v34;
  int v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  unsigned int v39;
  unint64_t v40;
  _OWORD v41[2];

  v11 = *(_DWORD *)(a2 + 32);
  v10 = *(_DWORD *)(a2 + 36);
  v12 = *(_DWORD *)(a2 + 40);
  if (v11)
    v13 = v10 == 0;
  else
    v13 = 1;
  if (!v13 && v12 != 0)
  {
    v35 = v11 - 1;
    v18 = *(unsigned int *)(a2 + 48);
    v19 = *(unsigned int *)(a3 + 48);
    v36 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v34 = 0;
    v37 = v10 - 1;
    v38 = v18 | (v19 << 32);
    v39 = v12 - 1;
    v40 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v20 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v20)
    {
      v21 = *(_QWORD *)(a2 + 8);
      v22 = *(std::__shared_weak_count **)(a2 + 16);
      if (v22)
      {
        p_shared_owners = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(p_shared_owners);
        while (__stxr(v24 + 1, p_shared_owners));
        do
          v25 = __ldaxr(p_shared_owners);
        while (__stlxr(v25 - 1, p_shared_owners));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v21 + 88))(v21, 0, "unknown location");
      v20 = *(_BYTE **)(a2 + 24);
    }
    v26 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v26)
    {
      v27 = *(_QWORD *)(a3 + 8);
      v28 = *(std::__shared_weak_count **)(a3 + 16);
      if (v28)
      {
        v29 = (unint64_t *)&v28->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v27 + 88))(v27, 1, "unknown location");
      v26 = *(float **)(a3 + 24);
    }
    v32 = 0.0;
    memset(v41, 0, sizeof(v41));
    if (v39)
    {
      for (i = 0; i < v39; ++i)
      {
        *(float *)&v32 = sub_2397EEEEC(&v34, v41, a1, v20, v26, v32, a5, a6, a7, a8, a9, a10);
        v20 += v40;
        v26 += HIDWORD(v40);
      }
    }
    return sub_2397EEEEC(&v34, v41, a1, v20, v26, v32, a5, a6, a7, a8, a9, a10);
  }
  return result;
}

float sub_2397EEEEC(_DWORD *a1, _QWORD *a2, double *****a3, _BYTE *a4, float *a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  int v12;
  double ***v13;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  float result;

  *a2 = a4;
  a2[2] = a5;
  v12 = a1[5];
  v13 = **a3;
  v15 = *v13;
  v14 = v13[1];
  v16 = **v15;
  v17 = *v15[1];
  v18 = **v14;
  v19 = *v14[1];
  if (v12)
  {
    v20 = a1[6];
    v21 = 4 * a1[7];
    a10 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      LOBYTE(a12) = *a4;
      v22 = v17 * ((double)*(unint64_t *)&a12 - v16);
      v23 = fmax(v22, 0.0);
      if (v22 <= 1.0)
        v24 = v23;
      else
        v24 = 1.0;
      v25 = v18 + v19 * v24;
      *(float *)&v25 = v25;
      *a5 = *(float *)&v25;
      LOBYTE(v25) = a4[1];
      v26 = v17 * ((double)*(unint64_t *)&v25 - v16);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      v29 = v18 + v19 * v28;
      *(float *)&v29 = v29;
      a5[1] = *(float *)&v29;
      LOBYTE(v29) = a4[2];
      v30 = v17 * ((double)*(unint64_t *)&v29 - v16);
      v31 = fmax(v30, 0.0);
      if (v30 <= 1.0)
        v32 = v31;
      else
        v32 = 1.0;
      v33 = v18 + v19 * v32;
      *(float *)&v33 = v33;
      a5[2] = *(float *)&v33;
      LOBYTE(v33) = a4[3];
      v34 = v17 * ((double)*(unint64_t *)&v33 - v16);
      v35 = fmax(v34, 0.0);
      if (v34 <= 1.0)
        v36 = v35;
      else
        v36 = 1.0;
      a12 = v18 + v19 * v36;
      *(float *)&a12 = a12;
      a5[3] = *(float *)&a12;
      a4 += v20;
      a5 = (float *)((char *)a5 + v21);
      --v12;
    }
    while (v12);
  }
  *a2 = a4;
  a2[2] = a5;
  LOBYTE(a10) = *a4;
  v37 = v17 * ((double)*(unint64_t *)&a10 - v16);
  v38 = fmax(v37, 0.0);
  if (v37 <= 1.0)
    v39 = v38;
  else
    v39 = 1.0;
  v40 = v18 + v19 * v39;
  *(float *)&v40 = v40;
  *a5 = *(float *)&v40;
  LOBYTE(v40) = a4[1];
  v41 = v17 * ((double)*(unint64_t *)&v40 - v16);
  v42 = fmax(v41, 0.0);
  if (v41 <= 1.0)
    v43 = v42;
  else
    v43 = 1.0;
  v44 = v18 + v19 * v43;
  *(float *)&v44 = v44;
  a5[1] = *(float *)&v44;
  LOBYTE(v44) = a4[2];
  v45 = v17 * ((double)*(unint64_t *)&v44 - v16);
  v46 = fmax(v45, 0.0);
  if (v45 <= 1.0)
    v47 = v46;
  else
    v47 = 1.0;
  v48 = v18 + v19 * v47;
  *(float *)&v48 = v48;
  a5[2] = *(float *)&v48;
  LOBYTE(v48) = a4[3];
  v49 = v17 * ((double)*(unint64_t *)&v48 - v16);
  v50 = fmax(v49, 0.0);
  if (v49 <= 1.0)
    v51 = v50;
  else
    v51 = 1.0;
  result = v18 + v19 * v51;
  a5[3] = result;
  return result;
}

uint64_t sub_2397EF0BC(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  char *v17;
  float *v18;
  char v19;
  char v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 255.0;
    v3 = a3 >= 255.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOBYTE(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_2397EFA0C(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1132396544;
      if (a3 <= 255.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOBYTE(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_2397F0080(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_2397EE49C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_2397EF1BC(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_2397EF1BC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397EF464(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397EF400(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397EF464(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397EF608(&v26, (uint64_t)v33, a1, v13, v19);
  }
  return result;
}

float sub_2397EF608(_DWORD *a1, uint64_t a2, unsigned __int8 ****a3, unsigned __int8 *a4, float *a5)
{
  int v10;
  int v11;
  unsigned __int8 ***v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unsigned __int8 **v18;
  unsigned __int8 *v19;
  unsigned int v20;
  unsigned int v21;
  unsigned __int8 *v22;
  unsigned int v23;
  unsigned __int8 *v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  float *v29;
  unsigned __int8 *v30;

  if (a1[8])
  {
    v10 = 0;
    while (1)
    {
      v29 = a5;
      v30 = a4;
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      v11 = a1[5];
      if (v11)
        break;
LABEL_3:
      sub_2397EF8A8((uint64_t)a1, (unsigned __int8 **)a2, a3, &v30, &v29);
      a4 += a1[9];
      a5 += a1[10];
      if (++v10 >= a1[8])
        goto LABEL_29;
    }
    v12 = *a3;
    v13 = a1[6];
    v14 = 4 * a1[7];
    v15 = a5;
    v16 = a4;
    while (1)
    {
      *(_QWORD *)a2 = v16;
      *(_QWORD *)(a2 + 16) = v15;
      v18 = *v12;
      v19 = **v12;
      v20 = *v16;
      if (v20 >= *v19)
      {
        if (v20 <= *v18[2])
        {
          *v15 = (float)v20;
          v21 = v16[1];
          if (v21 < *v19)
          {
LABEL_16:
            v22 = v18[1];
LABEL_17:
            v15[1] = *(float *)v22;
            v23 = v16[2];
            if (v23 < *v19)
              goto LABEL_18;
            goto LABEL_20;
          }
        }
        else
        {
          *v15 = *(float *)v18[3];
          v21 = v16[1];
          if (v21 < *v19)
            goto LABEL_16;
        }
      }
      else
      {
        *v15 = *(float *)v18[1];
        v21 = v16[1];
        if (v21 < *v19)
          goto LABEL_16;
      }
      if (v21 > *v18[2])
      {
        v22 = v18[3];
        goto LABEL_17;
      }
      v15[1] = (float)v21;
      v23 = v16[2];
      if (v23 < *v19)
      {
LABEL_18:
        v24 = v18[1];
        goto LABEL_22;
      }
LABEL_20:
      if (v23 <= *v18[2])
      {
        v15[2] = (float)v23;
        v25 = v16[3];
        if (v25 >= *v19)
          goto LABEL_25;
LABEL_6:
        v17 = v18[1];
LABEL_7:
        v15[3] = *(float *)v17;
        v16 += v13;
        v15 = (float *)((char *)v15 + v14);
        v29 = v15;
        v30 = v16;
        if (!--v11)
          goto LABEL_3;
      }
      else
      {
        v24 = v18[3];
LABEL_22:
        v15[2] = *(float *)v24;
        v25 = v16[3];
        if (v25 < *v19)
          goto LABEL_6;
LABEL_25:
        if (v25 > *v18[2])
        {
          v17 = v18[3];
          goto LABEL_7;
        }
        v15[3] = (float)v25;
        v16 += v13;
        v15 = (float *)((char *)v15 + v14);
        v29 = v15;
        v30 = v16;
        if (!--v11)
          goto LABEL_3;
      }
    }
  }
LABEL_29:
  v29 = a5;
  v30 = a4;
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  if (a1[5])
  {
    v26 = 0;
    do
    {
      sub_2397EF8A8((uint64_t)a1, (unsigned __int8 **)a2, a3, &v30, &v29);
      v27 = a1[5];
      v30 += a1[6];
      v29 += a1[7];
      ++v26;
    }
    while (v26 < v27);
  }
  return sub_2397EF8A8((uint64_t)a1, (unsigned __int8 **)a2, a3, &v30, &v29);
}

float sub_2397EF8A8(uint64_t a1, unsigned __int8 **a2, unsigned __int8 ****a3, unsigned __int8 **a4, float **a5)
{
  unsigned __int8 *v5;
  float *v6;
  unsigned __int8 **v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned int v14;
  float *v15;
  float result;
  float *v17;

  v5 = *a4;
  *a2 = *a4;
  v6 = *a5;
  a2[2] = (unsigned __int8 *)*a5;
  v7 = **a3;
  v8 = *v7;
  v9 = *v5;
  if (v9 >= **v7)
  {
    if (v9 <= *v7[2])
    {
      *v6 = (float)v9;
      v10 = v5[1];
      if (v10 >= *v8)
        goto LABEL_6;
    }
    else
    {
      *v6 = *(float *)v7[3];
      v10 = v5[1];
      if (v10 >= *v8)
        goto LABEL_6;
    }
LABEL_9:
    v11 = v7[1];
    goto LABEL_10;
  }
  *v6 = *(float *)v7[1];
  v10 = v5[1];
  if (v10 < *v8)
    goto LABEL_9;
LABEL_6:
  if (v10 <= *v7[2])
  {
    v6[1] = (float)v10;
    v12 = v5[2];
    if (v12 < *v8)
      goto LABEL_11;
    goto LABEL_13;
  }
  v11 = v7[3];
LABEL_10:
  v6[1] = *(float *)v11;
  v12 = v5[2];
  if (v12 < *v8)
  {
LABEL_11:
    v13 = v7[1];
    goto LABEL_15;
  }
LABEL_13:
  if (v12 <= *v7[2])
  {
    v6[2] = (float)v12;
    v14 = v5[3];
    if (v14 < *v8)
      goto LABEL_16;
    goto LABEL_18;
  }
  v13 = v7[3];
LABEL_15:
  v6[2] = *(float *)v13;
  v14 = v5[3];
  if (v14 < *v8)
  {
LABEL_16:
    v15 = (float *)v7[1];
    result = *v15;
    v6[3] = *v15;
    return result;
  }
LABEL_18:
  if (v14 <= *v7[2])
  {
    result = (float)v14;
    v6[3] = (float)v14;
  }
  else
  {
    v17 = (float *)v7[3];
    result = *v17;
    v6[3] = *v17;
  }
  return result;
}

uint64_t sub_2397EFA0C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397EFCB4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397EFC50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397EFCB4(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397EFE9C(&v27, (unsigned __int8 **)v34, a1, v13, v19);
        v13 += v33;
        v19 += 4 * HIDWORD(v33);
      }
    }
    return sub_2397EFE9C(&v27, (unsigned __int8 **)v34, a1, v13, v19);
  }
  return result;
}

float sub_2397EFE9C(_DWORD *a1, unsigned __int8 **a2, unsigned __int8 ****a3, unsigned __int8 *a4, uint64_t a5)
{
  int v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  float result;
  float *v19;

  *a2 = a4;
  a2[2] = (unsigned __int8 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = a1[6];
    v9 = 4 * a1[7];
    while (1)
    {
      *a2 = a4;
      a2[2] = (unsigned __int8 *)a5;
      v10 = *a4;
      if (v10 >= *v7)
      {
        *(float *)a5 = (float)v10;
        v11 = a4[1];
        if (v11 < *v7)
          goto LABEL_10;
LABEL_6:
        *(float *)(a5 + 4) = (float)v11;
        v12 = a4[2];
        if (v12 >= *v7)
          goto LABEL_7;
LABEL_11:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
        v13 = a4[3];
        if (v13 < *v7)
          goto LABEL_3;
LABEL_12:
        *(float *)(a5 + 12) = (float)v13;
        a4 += v8;
        a5 += v9;
        if (!--v5)
          break;
      }
      else
      {
        *(_DWORD *)a5 = *(_DWORD *)v6[1];
        v11 = a4[1];
        if (v11 >= *v7)
          goto LABEL_6;
LABEL_10:
        *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
        v12 = a4[2];
        if (v12 < *v7)
          goto LABEL_11;
LABEL_7:
        *(float *)(a5 + 8) = (float)v12;
        v13 = a4[3];
        if (v13 >= *v7)
          goto LABEL_12;
LABEL_3:
        *(_DWORD *)(a5 + 12) = *(_DWORD *)v6[1];
        a4 += v8;
        a5 += v9;
        if (!--v5)
          break;
      }
    }
  }
  *a2 = a4;
  a2[2] = (unsigned __int8 *)a5;
  v14 = *a4;
  if (v14 >= *v7)
  {
    *(float *)a5 = (float)v14;
    v15 = a4[1];
    if (v15 >= *v7)
    {
LABEL_15:
      *(float *)(a5 + 4) = (float)v15;
      v16 = a4[2];
      if (v16 >= *v7)
        goto LABEL_16;
LABEL_20:
      *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
      v17 = a4[3];
      if (v17 >= *v7)
        goto LABEL_17;
      goto LABEL_21;
    }
  }
  else
  {
    *(_DWORD *)a5 = *(_DWORD *)v6[1];
    v15 = a4[1];
    if (v15 >= *v7)
      goto LABEL_15;
  }
  *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
  v16 = a4[2];
  if (v16 < *v7)
    goto LABEL_20;
LABEL_16:
  *(float *)(a5 + 8) = (float)v16;
  v17 = a4[3];
  if (v17 >= *v7)
  {
LABEL_17:
    result = (float)v17;
    *(float *)(a5 + 12) = (float)v17;
    return result;
  }
LABEL_21:
  v19 = (float *)v6[1];
  result = *v19;
  *(float *)(a5 + 12) = *v19;
  return result;
}

uint64_t sub_2397F0080(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397F0328(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397F02C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397F0328(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397F0510(&v27, (unsigned __int8 **)v34, a1, v13, v19);
        v13 += v33;
        v19 += 4 * HIDWORD(v33);
      }
    }
    return sub_2397F0510(&v27, (unsigned __int8 **)v34, a1, v13, v19);
  }
  return result;
}

float sub_2397F0510(_DWORD *a1, unsigned __int8 **a2, unsigned __int8 ****a3, unsigned __int8 *a4, uint64_t a5)
{
  int v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  float result;
  float *v19;

  *a2 = a4;
  a2[2] = (unsigned __int8 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = a1[6];
    v9 = 4 * a1[7];
    while (1)
    {
      *a2 = a4;
      a2[2] = (unsigned __int8 *)a5;
      v10 = *a4;
      if (v10 <= *v7)
      {
        *(float *)a5 = (float)v10;
        v11 = a4[1];
        if (v11 > *v7)
          goto LABEL_10;
LABEL_6:
        *(float *)(a5 + 4) = (float)v11;
        v12 = a4[2];
        if (v12 <= *v7)
          goto LABEL_7;
LABEL_11:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
        v13 = a4[3];
        if (v13 > *v7)
          goto LABEL_3;
LABEL_12:
        *(float *)(a5 + 12) = (float)v13;
        a4 += v8;
        a5 += v9;
        if (!--v5)
          break;
      }
      else
      {
        *(_DWORD *)a5 = *(_DWORD *)v6[1];
        v11 = a4[1];
        if (v11 <= *v7)
          goto LABEL_6;
LABEL_10:
        *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
        v12 = a4[2];
        if (v12 > *v7)
          goto LABEL_11;
LABEL_7:
        *(float *)(a5 + 8) = (float)v12;
        v13 = a4[3];
        if (v13 <= *v7)
          goto LABEL_12;
LABEL_3:
        *(_DWORD *)(a5 + 12) = *(_DWORD *)v6[1];
        a4 += v8;
        a5 += v9;
        if (!--v5)
          break;
      }
    }
  }
  *a2 = a4;
  a2[2] = (unsigned __int8 *)a5;
  v14 = *a4;
  if (v14 <= *v7)
  {
    *(float *)a5 = (float)v14;
    v15 = a4[1];
    if (v15 <= *v7)
    {
LABEL_15:
      *(float *)(a5 + 4) = (float)v15;
      v16 = a4[2];
      if (v16 <= *v7)
        goto LABEL_16;
LABEL_20:
      *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
      v17 = a4[3];
      if (v17 <= *v7)
        goto LABEL_17;
      goto LABEL_21;
    }
  }
  else
  {
    *(_DWORD *)a5 = *(_DWORD *)v6[1];
    v15 = a4[1];
    if (v15 <= *v7)
      goto LABEL_15;
  }
  *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
  v16 = a4[2];
  if (v16 > *v7)
    goto LABEL_20;
LABEL_16:
  *(float *)(a5 + 8) = (float)v16;
  v17 = a4[3];
  if (v17 <= *v7)
  {
LABEL_17:
    result = (float)v17;
    *(float *)(a5 + 12) = (float)v17;
    return result;
  }
LABEL_21:
  v19 = (float *)v6[1];
  result = *v19;
  *(float *)(a5 + 12) = *v19;
  return result;
}

void sub_2397F06F4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397F07FC(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397F07E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397F07FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 36);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397F094C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397F0960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826920(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 4);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 36;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397F0A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2397F0A34@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397E423C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3A00;
  sub_2397F0C3C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397F0B48(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397F0B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397F0B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397F0B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE5878;
  sub_23976622C(a2, &v11);
  sub_2397F12C8(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_23970A418(a2, (uint64_t)(a3 + 1));
}

void sub_2397F0C00(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397F0C14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975A724((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397F0C28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397F0C3C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __int16 v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;

  sub_2397F0D3C(a1, &v13);
  v12 = v13;
  v13 = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v4 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v4 = 0;
  v5 = *(_WORD *)(a1 + 60);
  sub_23982866C(a2, &v12, v4);
  *(_WORD *)(a2 + 120) = v5;
  v6 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
  if (*((_QWORD *)&v12 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v10 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2397F0D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397F0D3C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 37)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397F0F7C(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397F0F1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397F0F7C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397F0FF4();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397F0FF4()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933158);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933158))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_23970A310();
    sub_2397F11F8((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397F11F8((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933140, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933140, &dword_23940C000);
          __cxa_guard_release(&qword_256933158);
          return &stru_256933140;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933140;
}

void sub_2397F1144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933158);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933158);
  _Unwind_Resume(a1);
}

void sub_2397F11F8(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397F128C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397F12C8(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397F1560(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397F14FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2397F1560(_DWORD *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t)result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_DWORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_DWORD **)(a2 + 24);
    }
    v19 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_BYTE **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2397F1748(&v26, v33, v10, v13, v19);
        v13 = (_DWORD *)((char *)v13 + v32);
        v19 += HIDWORD(v32);
      }
    }
    return sub_2397F1748(&v26, v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397F1748(_DWORD *result, _QWORD *a2, uint64_t a3, _DWORD *a4, _BYTE *a5)
{
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  *a2 = a4;
  a2[2] = a5;
  if (result[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v6 = *a4 >> 8;
      v7 = HIWORD(*a4);
      v8 = HIBYTE(*a4);
      *a5 = *a4;
      *(_BYTE *)(a2[2] + 3) = v6;
      *(_BYTE *)(a2[2] + 2) = v7;
      *(_BYTE *)(a2[2] + 1) = v8;
      a4 = (_DWORD *)((char *)a4 + result[6]);
      a5 += result[7];
      ++v5;
    }
    while (v5 < result[5]);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v9 = *a4 >> 8;
  v10 = HIWORD(*a4);
  v11 = HIBYTE(*a4);
  *a5 = *a4;
  *(_BYTE *)(a2[2] + 3) = v9;
  *(_BYTE *)(a2[2] + 2) = v10;
  *(_BYTE *)(a2[2] + 1) = v11;
  return result;
}

void sub_2397F180C(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2397F1830@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397F1914(a1, a2);
}

double sub_2397F183C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397F722C(a1, a2);
}

double sub_2397F1848@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397F326C(a1, a2);
}

double sub_2397F1854@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397F446C(a1, a2);
}

double sub_2397F1860@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397F5218(a1, a2);
}

double sub_2397F186C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397F6C18(a1, a2);
}

double sub_2397F1878@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397F9C5C(a1, a2);
}

double sub_2397F1884@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397FC0B4(a1, a2);
}

uint64_t sub_2397F1914@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2397F1B48(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEC370;
  sub_2397F1DD8((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2397F1A28(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2397F19F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397F1A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397F1A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEAEA8;
  sub_2397F2F2C(a2, &v11);
  sub_2397F2548(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397F3198(a2, (uint64_t)(a3 + 1));
}

void sub_2397F1AE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397F1AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BD058((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397F1B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_2397F1B20(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2397F1B48(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 34;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2397F1C88((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397EA2CC((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2397F1C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397F1C74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397F1C88(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 34);
  *a2 = &off_250AEC040;
  sub_2397E7D68((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2397F1DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397F1DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397F1DD8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_2397F1FBC(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239826FDC(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2397F1EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397F1ED8(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397F1F14()
{
  return 14;
}

uint64_t sub_2397F1F1C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2397F1F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2397F1F40(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2397F1FBC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 14)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397F21FC(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397F219C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397F21FC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397F2274();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397F2274()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933178);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933178))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397AE624();
    sub_2397F2478((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397F2478((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933160, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933160, &dword_23940C000);
          __cxa_guard_release(&qword_256933178);
          return &stru_256933160;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933160;
}

void sub_2397F23C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933178);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933178);
  _Unwind_Resume(a1);
}

void sub_2397F2478(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397F250C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397F2548(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_2397F271C(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397F26F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397F271C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397F28B8(&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_2397F2D14((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397F2894(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2397F28B8(uint64_t *result)
{
  _DWORD *v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  BOOL v9;
  BOOL v11;
  uint64_t v13;

  v1 = (_DWORD *)*result;
  v2 = result[1];
  v3 = *(_DWORD *)(*result + 48);
  if (v3 == *(_DWORD *)(v2 + 24))
  {
    v4 = v1[8];
    if (v3 == v1[11] * v4)
    {
      v5 = v1[13];
      v6 = v1[9];
      v7 = v6 * v3;
      if (v5 == *(_DWORD *)(v2 + 28) && v5 == v7)
        return (uint64_t *)sub_2397F2980((void *)*result, (void **)v2);
      v13 = v4 * v6;
      if (v4)
        v9 = v6 == 0;
      else
        v9 = 1;
      if (!v9 && v1[10] != 0)
        return (uint64_t *)sub_2397F2A6C((unsigned int *)&v13, (uint64_t)v1, v2);
      return result;
    }
  }
  else
  {
    v4 = v1[8];
  }
  v13 = v4;
  if (v4)
    v11 = v1[9] == 0;
  else
    v11 = 1;
  if (!v11 && v1[10] != 0)
    return sub_2397F2BA0(&v13, (uint64_t)v1, v2);
  return result;
}

void *sub_2397F2980(void *result, void **a2)
{
  uint64_t v3;
  const void *v4;
  BOOL v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;

  v3 = (*((_DWORD *)result + 10) * *((_DWORD *)result + 9) * *((_DWORD *)result + 8));
  v4 = (const void *)*((_QWORD *)result + 3);
  if (*((_BYTE *)result + 72))
    v5 = v4 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v6 = result;
    v7 = *((_QWORD *)result + 1);
    v8 = (std::__shared_weak_count *)*((_QWORD *)result + 2);
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    result = (void *)(*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v7 + 88))(v7, 0, "unknown location");
    v4 = (const void *)v6[3];
  }
  if ((_DWORD)v3)
    v12 = v4 == 0;
  else
    v12 = 0;
  if (v12)
    sub_239EBF50C((uint64_t)result, (uint64_t)v4);
  if ((_DWORD)v3)
    return memmove(*a2, v4, 2 * v3);
  return result;
}

unsigned int *sub_2397F2A6C(unsigned int *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  _QWORD v27[6];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t *)result;
    v21 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 24);
    v22 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v20 = 0;
    v23 = v3 - 1;
    v24 = v11 | (v12 << 32);
    v25 = v5 - 1;
    v26 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v13 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(char **)(a2 + 24);
    }
    v19 = *(char **)a3;
    memset(&v27[2], 0, 32);
    v27[0] = 0;
    v27[1] = 1;
    return sub_2397905B0((unsigned int *)&v20, (uint64_t)v27, v10, v13, v19);
  }
  return result;
}

uint64_t *sub_2397F2BA0(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  char *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  unsigned int v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  _OWORD v29[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v23 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 24);
    v24 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v22 = 0;
    v25 = v3 - 1;
    v26 = v11 | (v12 << 32);
    v13 = v5 - 1;
    v27 = v13;
    v28 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v14 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(char **)(a2 + 24);
      v13 = v27;
    }
    v20 = *(char **)a3;
    memset(v29, 0, sizeof(v29));
    if (v13)
    {
      v21 = 0;
      do
      {
        sub_239790790(&v22, (char **)v29, v10, v14, v20);
        v14 += 2 * v28;
        v20 += 2 * HIDWORD(v28);
        ++v21;
      }
      while (v21 < v27);
    }
    return (uint64_t *)sub_239790790(&v22, (char **)v29, v10, v14, v20);
  }
  return result;
}

void sub_2397F2D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _WORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _WORD *v21;
  int v22;
  _WORD *v23;
  _WORD *v24;
  _WORD *v25;
  _WORD *v26;
  int v27;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a2 + 48);
    v11 = *(unsigned int *)(a2 + 52);
    v12 = *(unsigned int *)(a3 + 24);
    v13 = *(unsigned int *)(a3 + 28);
    v14 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(_WORD **)(a2 + 24);
    }
    v20 = v3 - 1;
    v21 = *(_WORD **)a3;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          *v21 = *v14;
          v21[1] = v14[1];
          v21[2] = v14[2];
          v21[3] = v14[3];
          v14 += v11;
          v21 += v13;
          --v9;
        }
        while (v9);
LABEL_27:
        *v21 = *v14;
        v21[1] = v14[1];
        v21[2] = v14[2];
        v21[3] = v14[3];
        return;
      }
      v22 = 0;
      v23 = v21 + 2;
      v24 = v14 + 2;
      do
      {
        v25 = v24;
        v26 = v23;
        v27 = v3 - 1;
        do
        {
          *(v26 - 2) = *(v25 - 2);
          *(v26 - 1) = *(v25 - 1);
          *v26 = *v25;
          v26[1] = v25[1];
          v26 += v12;
          v25 += v10;
          --v27;
        }
        while (v27);
        *(v26 - 2) = *(v25 - 2);
        *(v26 - 1) = *(v25 - 1);
        *v26 = *v25;
        v26[1] = v25[1];
        v14 += v11;
        v21 += v13;
        ++v22;
        v23 += v13;
        v24 += v11;
      }
      while (v22 != v9);
    }
    if (v3 != 1)
    {
      do
      {
        *v21 = *v14;
        v21[1] = v14[1];
        v21[2] = v14[2];
        v21[3] = v14[3];
        v14 += v10;
        v21 += v12;
        --v20;
      }
      while (v20);
    }
    goto LABEL_27;
  }
}

void sub_2397F2F2C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397F3034(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397F3018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397F3034(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 14);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397F3184(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397F3198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 14;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397F324C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2397F326C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397F1B48(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC468;
  sub_2397F349C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397F3380(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397F3348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397F3364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397F3380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AEB570;
  sub_2397F412C(a2, &v11);
  sub_2397F3C0C(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397F4398(a2, (uint64_t)(a3 + 1));
}

void sub_2397F3438(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397F344C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C356C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397F3460(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2397F3474(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2397F349C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_2397F3680(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239827E58(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2397F3580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397F359C(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397F35D8()
{
  return 26;
}

uint64_t sub_2397F35E0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2397F35E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2397F3604(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2397F3680(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 26)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397F38C0(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397F3860(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397F38C0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397F3938();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397F3938()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933198);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933198))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397B17D4();
    sub_2397F3B3C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397F3B3C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933180, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933180, &dword_23940C000);
          __cxa_guard_release(&qword_256933198);
          return &stru_256933180;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933180;
}

void sub_2397F3A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933198);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933198);
  _Unwind_Resume(a1);
}

void sub_2397F3B3C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397F3BD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397F3C0C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397F3EA4(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397F3E40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2397F3EA4(_DWORD *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t)result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(uint64_t **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(uint64_t **)(a2 + 24);
    }
    v19 = *(uint64_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(uint64_t **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2397F408C(&v26, (uint64_t **)v33, v10, v13, v19);
        v13 = (uint64_t *)((char *)v13 + 2 * v32);
        v19 = (uint64_t *)((char *)v19 + 2 * HIDWORD(v32));
      }
    }
    return sub_2397F408C(&v26, (uint64_t **)v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397F408C(_DWORD *result, uint64_t **a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  if (v5)
  {
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v6 = (unint64_t)*a4 >> 16;
      v7 = HIDWORD(*a4);
      v8 = HIWORD(*a4);
      *((_WORD *)a5 + 3) = *a4;
      *(_WORD *)a5 = v6;
      *((_WORD *)a5 + 1) = v7;
      *((_WORD *)a5 + 2) = v8;
      a4 = (uint64_t *)((char *)a4 + 2 * result[6]);
      a5 = (uint64_t *)((char *)a5 + 2 * result[7]);
      --v5;
    }
    while (v5);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v9 = *a4;
  v10 = (unint64_t)*a4 >> 16;
  v11 = HIDWORD(*a4);
  *((_WORD *)a5 + 3) = *a4;
  *(_WORD *)a5 = v10;
  *((_WORD *)a5 + 1) = v11;
  *((_WORD *)a5 + 2) = HIWORD(v9);
  return result;
}

void sub_2397F412C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397F4234(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397F4218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397F4234(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 26);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397F4384(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397F4398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 26;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397F444C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2397F446C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397F1B48(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE62E0;
  sub_2397F4674((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397F4580(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397F4548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397F4564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397F4580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE5350;
  sub_239764BF4(a2, &v11);
  sub_2397F4D00(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_239764E60(a2, (uint64_t)(a3 + 1));
}

void sub_2397F4638(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397F464C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239754008((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397F4660(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397F4674(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_2397F4774(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239828148(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2397F4758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397F4774(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 30)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397F49B4(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397F4954(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397F49B4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397F4A2C();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397F4A2C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569331B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569331B8))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_23970F5A4();
    sub_2397F4C30((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397F4C30((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569331A0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569331A0, &dword_23940C000);
          __cxa_guard_release(&qword_2569331B8);
          return &stru_2569331A0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569331A0;
}

void sub_2397F4B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569331B8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569331B8);
  _Unwind_Resume(a1);
}

void sub_2397F4C30(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397F4CC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397F4D00(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397F4F98(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397F4F34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2397F4F98(_DWORD *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t)result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(uint64_t **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(uint64_t **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2397F5180(&v26, (uint64_t **)v33, v10, v13, v19);
        v13 = (uint64_t *)((char *)v13 + 2 * v32);
        v19 += 2 * HIDWORD(v32);
      }
    }
    return sub_2397F5180(&v26, (uint64_t **)v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397F5180(_DWORD *result, uint64_t **a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  *a2 = a4;
  a2[2] = (uint64_t *)a5;
  v5 = result[5];
  if (v5)
  {
    do
    {
      *a2 = a4;
      a2[2] = (uint64_t *)a5;
      if (!a4)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v6 = HIDWORD(*a4);
      v7 = HIWORD(*a4);
      HIDWORD(v8) = *a4;
      LODWORD(v8) = HIDWORD(v8);
      *(_DWORD *)(a5 + 4) = v8 >> 16;
      *(_WORD *)(a5 + 2) = v6;
      *(_WORD *)a5 = v7;
      a4 = (uint64_t *)((char *)a4 + 2 * result[6]);
      a5 += 2 * result[7];
      --v5;
    }
    while (v5);
    *a2 = a4;
    a2[2] = (uint64_t *)a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = (uint64_t *)a5;
    if (!a4)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v9 = *a4;
  v10 = HIDWORD(*a4);
  HIDWORD(v11) = *a4;
  LODWORD(v11) = HIDWORD(v11);
  *(_DWORD *)(a5 + 4) = v11 >> 16;
  *(_WORD *)(a5 + 2) = v10;
  *(_WORD *)a5 = HIWORD(v9);
  return result;
}

double sub_2397F5218@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397F1B48(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6538;
  sub_2397E44CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397F532C(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397F52F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397F5310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397F532C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE56F0;
  sub_239765EEC(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEC550[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239766158(a2, (uint64_t)(a4 + 1));
}

void sub_2397F5418(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397F542C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397F5440(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239758F54((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397F5454(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2397F549C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2397F5464(uint64_t **a1, uint64_t a2)
{
  return sub_2397F633C(**a1, (*a1)[1], a2);
}

uint64_t sub_2397F5474(uint64_t **a1)
{
  char v2;

  return sub_2397F55C4(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_2397F549C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  int v5;
  double v6;
  unsigned int v7;
  unsigned int v8;
  double v9;
  double v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (!*(_BYTE *)(a3 + 16))
  {
    v7 = -65536;
    v8 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    v11 = 255;
    v12 = HIWORD(v7);
    if (v8 != (unsigned __int16)v7)
      goto LABEL_17;
    goto LABEL_15;
  }
  v4 = *(double *)a3;
  if (*(double *)a3 < 0.0)
    v4 = 0.0;
  v5 = (int)v4;
  v6 = 65535.0;
  if (*(double *)(a3 + 8) <= 65535.0)
    v6 = *(double *)(a3 + 8);
  v7 = v5 | ((int)v6 << 16);
  v8 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v9 = *(double *)(a3 + 24);
  if (v9 < 0.0)
    v9 = 0.0;
  v8 = (int)v9;
  v10 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v10 = *(double *)(a3 + 32);
  v11 = (int)v10;
  v12 = HIWORD(v7);
  if (v8 != (unsigned __int16)v7)
    goto LABEL_17;
LABEL_15:
  if (v12 == v11)
    return sub_2397F55C4(a1, a2, (uint64_t)v16);
LABEL_17:
  v20 = (double)(unsigned __int16)v7;
  v18 = (double)v8;
  v19 = 1.0 / ((double)v12 - v20);
  a4.n128_f64[0] = (double)v11 - (double)v8;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = v16;
  v14[1] = v15;
  return sub_2397F5AE4(a1, a2, (uint64_t)v14, a4);
}

uint64_t sub_2397F55C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397F586C((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397F5808(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397F586C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  _BYTE *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  int v34;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v12 = *(unsigned int *)(a3 + 48);
    v13 = *(unsigned int *)(a3 + 52);
    v14 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(_BYTE **)(a2 + 24);
    }
    v21 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v21)
    {
      v22 = *(_QWORD *)(a3 + 8);
      v23 = *(std::__shared_weak_count **)(a3 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_BYTE **)(a3 + 24);
    }
    v27 = v3 - 1;
    v28 = 2 * v11;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          *v21 = *v14;
          v21[1] = v14[2];
          v21[2] = v14[4];
          v21[3] = v14[6];
          v21 += v13;
          v14 += 2 * v10;
          --v9;
        }
        while (v9);
      }
      else
      {
        v29 = 0;
        v30 = v21 + 3;
        v31 = v14 + 4;
        do
        {
          v32 = v31;
          v33 = v30;
          v34 = v3 - 1;
          do
          {
            *(v33 - 3) = *(v32 - 4);
            *(v33 - 2) = *(v32 - 2);
            *(v33 - 1) = *v32;
            result = v32[2];
            *v33 = result;
            v33 += v12;
            v32 += v28;
            --v34;
          }
          while (v34);
          *(v33 - 3) = *(v32 - 4);
          *(v33 - 2) = *(v32 - 2);
          *(v33 - 1) = *v32;
          *v33 = v32[2];
          v14 += 2 * v10;
          v21 += v13;
          ++v29;
          v30 += v13;
          v31 += 2 * v10;
        }
        while (v29 != v9);
      }
    }
    if (v3 != 1)
    {
      do
      {
        *v21 = *v14;
        v21[1] = v14[2];
        v21[2] = v14[4];
        v21[3] = v14[6];
        v21 += v12;
        v14 += v28;
        --v27;
      }
      while (v27);
    }
    *v21 = *v14;
    v21[1] = v14[2];
    v21[2] = v14[4];
    v21[3] = v14[6];
  }
  return result;
}

uint64_t sub_2397F5AE4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397F5D8C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397F5D28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397F5D8C(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  _WORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_WORD **)(a2 + 24);
    }
    v19 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_BYTE **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397F5F30(&v26, v33, a1, v13, v19, 0.0);
  }
  return result;
}

double sub_2397F5F30(_DWORD *a1, _QWORD *a2, double *****a3, _WORD *a4, _BYTE *a5, double a6)
{
  unsigned int v11;
  _BYTE *v12;
  _WORD *v13;
  unsigned int v14;
  double ***v15;
  double **v16;
  double **v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double ***v22;
  double **v23;
  double **v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double ***v29;
  double **v30;
  double **v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double ***v36;
  double **v37;
  double **v38;
  double v39;
  double v40;
  double v41;
  unsigned int v42;

  if (a1[8])
  {
    v11 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v12 = a5;
      v13 = a4;
      if (a1[5])
      {
        v14 = 0;
        v13 = a4;
        v12 = a5;
        do
        {
          *a2 = v13;
          a2[2] = v12;
          v15 = **a3;
          LOWORD(a6) = *v13;
          v17 = *v15;
          v16 = v15[1];
          v18 = ((double)*(unint64_t *)&a6 - **v17) * *v17[1];
          v19 = fmax(v18, 0.0);
          if (v18 <= 1.0)
            v20 = v19;
          else
            v20 = 1.0;
          v21 = **v16 + v20 * *v16[1];
          *v12 = llround(v21);
          v22 = **a3;
          LOWORD(v21) = *(_WORD *)(*a2 + 2);
          v24 = *v22;
          v23 = v22[1];
          v25 = ((double)*(unint64_t *)&v21 - **v24) * *v24[1];
          v26 = fmax(v25, 0.0);
          if (v25 <= 1.0)
            v27 = v26;
          else
            v27 = 1.0;
          v28 = **v23 + v27 * *v23[1];
          *(_BYTE *)(a2[2] + 1) = llround(v28);
          v29 = **a3;
          LOWORD(v28) = *(_WORD *)(*a2 + 4);
          v31 = *v29;
          v30 = v29[1];
          v32 = ((double)*(unint64_t *)&v28 - **v31) * *v31[1];
          v33 = fmax(v32, 0.0);
          if (v32 <= 1.0)
            v34 = v33;
          else
            v34 = 1.0;
          v35 = **v30 + v34 * *v30[1];
          *(_BYTE *)(a2[2] + 2) = llround(v35);
          v36 = **a3;
          LOWORD(v35) = *(_WORD *)(*a2 + 6);
          v38 = *v36;
          v37 = v36[1];
          v39 = ((double)*(unint64_t *)&v35 - **v38) * *v38[1];
          v40 = fmax(v39, 0.0);
          if (v39 <= 1.0)
            v41 = v40;
          else
            v41 = 1.0;
          a6 = **v37 + v41 * *v37[1];
          *(_BYTE *)(a2[2] + 3) = llround(a6);
          v13 += a1[6];
          v12 += a1[7];
          ++v14;
        }
        while (v14 < a1[5]);
      }
      *a2 = v13;
      a2[2] = v12;
      a6 = sub_2397F61D0(a3, (_WORD **)a2, (uint64_t)(a2 + 2), a6);
      a4 += a1[9];
      a5 += a1[10];
      ++v11;
    }
    while (v11 < a1[8]);
  }
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v42 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      a6 = sub_2397F61D0(a3, (_WORD **)a2, (uint64_t)(a2 + 2), a6);
      a4 += a1[6];
      a5 += a1[7];
      ++v42;
    }
    while (v42 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  return sub_2397F61D0(a3, (_WORD **)a2, (uint64_t)(a2 + 2), a6);
}

double sub_2397F61D0(double *****a1, _WORD **a2, uint64_t a3, double a4)
{
  double ***v4;
  double **v5;
  double **v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double ***v11;
  double **v12;
  double **v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double ***v18;
  double **v19;
  double **v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double ***v25;
  double **v26;
  double **v27;
  double v28;
  double v29;
  double result;

  v4 = **a1;
  LOWORD(a4) = **a2;
  v6 = *v4;
  v5 = v4[1];
  v7 = ((double)*(unint64_t *)&a4 - **v6) * *v6[1];
  v8 = fmax(v7, 0.0);
  if (v7 <= 1.0)
    v9 = v8;
  else
    v9 = 1.0;
  v10 = **v5 + v9 * *v5[1];
  **(_BYTE **)a3 = llround(v10);
  v11 = **a1;
  LOWORD(v10) = (*a2)[1];
  v13 = *v11;
  v12 = v11[1];
  v14 = ((double)*(unint64_t *)&v10 - **v13) * *v13[1];
  v15 = fmax(v14, 0.0);
  if (v14 <= 1.0)
    v16 = v15;
  else
    v16 = 1.0;
  v17 = **v12 + v16 * *v12[1];
  *(_BYTE *)(*(_QWORD *)a3 + 1) = llround(v17);
  v18 = **a1;
  LOWORD(v17) = (*a2)[2];
  v20 = *v18;
  v19 = v18[1];
  v21 = ((double)*(unint64_t *)&v17 - **v20) * *v20[1];
  v22 = fmax(v21, 0.0);
  if (v21 <= 1.0)
    v23 = v22;
  else
    v23 = 1.0;
  v24 = **v19 + v23 * *v19[1];
  *(_BYTE *)(*(_QWORD *)a3 + 2) = llround(v24);
  v25 = **a1;
  LOWORD(v24) = (*a2)[3];
  v27 = *v25;
  v26 = v25[1];
  v28 = ((double)*(unint64_t *)&v24 - **v27) * *v27[1];
  v29 = fmax(v28, 0.0);
  if (v28 > 1.0)
    v29 = 1.0;
  result = **v26 + v29 * *v26[1];
  *(_BYTE *)(*(_QWORD *)a3 + 3) = llround(result);
  return result;
}

uint64_t sub_2397F633C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  _QWORD v8[4];
  int v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    HIWORD(v9) = v5;
    LOWORD(v9) = (int)v6;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 255;
  }
  v8[0] = (char *)&v9 + 2;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_2397F63EC(a1, a2, (uint64_t)v8);
}

uint64_t sub_2397F63EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int16 ***)&v28;
    sub_2397F6694(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397F6630(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397F6694(unsigned __int16 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(unsigned __int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(unsigned __int16 **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    sub_2397F6838(&v25, (unsigned __int16 **)v32, a1, v13, v19);
  }
}

void sub_2397F6838(_DWORD *a1, unsigned __int16 **a2, unsigned __int16 ****a3, unsigned __int16 *a4, unsigned __int16 *a5)
{
  int v10;
  int v11;
  unsigned __int16 *v12;
  unsigned __int16 *v13;
  unsigned __int16 *v14;
  char v15;
  unsigned int v16;
  unsigned __int16 **v17;
  unsigned int v18;
  unsigned __int16 **v19;
  unsigned int v20;
  unsigned __int16 *v21;
  char v22;
  unsigned __int16 **v23;
  unsigned int v24;
  unsigned __int16 *v25;
  char v26;
  unsigned __int16 **v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned __int16 *v31;
  unsigned __int16 *v32;
  unsigned __int16 *v33;

  if (a1[8])
  {
    v10 = 0;
    while (1)
    {
      v32 = a5;
      v33 = a4;
      *a2 = a4;
      a2[2] = a5;
      if (a1[5])
        break;
LABEL_3:
      sub_2397F6ABC((uint64_t)a1, a2, a3, &v33, (_BYTE **)&v32);
      a4 += a1[9];
      a5 = (unsigned __int16 *)((char *)a5 + a1[10]);
      if (++v10 >= a1[8])
        goto LABEL_29;
    }
    v11 = 0;
    v12 = a5;
    v13 = a4;
    while (1)
    {
      *a2 = v13;
      a2[2] = v12;
      v17 = **a3;
      v18 = *v13;
      if (v18 >= **v17)
      {
        if (v18 > *v17[2])
          LOBYTE(v18) = *(_BYTE *)v17[3];
      }
      else
      {
        LOBYTE(v18) = *(_BYTE *)v17[1];
      }
      *(_BYTE *)v12 = v18;
      v19 = **a3;
      v20 = (*a2)[1];
      if (v20 < **v19)
        break;
      if (v20 > *v19[2])
      {
        v21 = v19[3];
        goto LABEL_17;
      }
      v22 = (*a2)[1];
LABEL_19:
      *((_BYTE *)a2[2] + 1) = v22;
      v23 = **a3;
      v24 = (*a2)[2];
      if (v24 < **v23)
      {
        v25 = v23[1];
LABEL_23:
        v26 = *(_BYTE *)v25;
        goto LABEL_25;
      }
      if (v24 > *v23[2])
      {
        v25 = v23[3];
        goto LABEL_23;
      }
      v26 = (*a2)[2];
LABEL_25:
      *((_BYTE *)a2[2] + 2) = v26;
      v27 = **a3;
      v28 = (*a2)[3];
      if (v28 < **v27)
      {
        v14 = v27[1];
      }
      else
      {
        if (v28 <= *v27[2])
        {
          v15 = (*a2)[3];
          goto LABEL_8;
        }
        v14 = v27[3];
      }
      v15 = *(_BYTE *)v14;
LABEL_8:
      *((_BYTE *)a2[2] + 3) = v15;
      v16 = a1[5];
      v13 = &v33[a1[6]];
      v12 = (unsigned __int16 *)((char *)v32 + a1[7]);
      v32 = v12;
      v33 = v13;
      if (++v11 >= v16)
        goto LABEL_3;
    }
    v21 = v19[1];
LABEL_17:
    v22 = *(_BYTE *)v21;
    goto LABEL_19;
  }
LABEL_29:
  v32 = a5;
  v33 = a4;
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v29 = 0;
    do
    {
      sub_2397F6ABC((uint64_t)a1, a2, a3, &v33, (_BYTE **)&v32);
      v30 = a1[5];
      v31 = &v33[a1[6]];
      v32 = (unsigned __int16 *)((char *)v32 + a1[7]);
      v33 = v31;
      ++v29;
    }
    while (v29 < v30);
  }
  sub_2397F6ABC((uint64_t)a1, a2, a3, &v33, (_BYTE **)&v32);
}

void sub_2397F6ABC(uint64_t a1, _QWORD *a2, unsigned __int16 ****a3, unsigned __int16 **a4, _BYTE **a5)
{
  unsigned __int16 *v5;
  _BYTE *v6;
  unsigned __int16 **v7;
  unsigned int v8;
  char v9;
  unsigned __int16 **v10;
  unsigned int v11;
  unsigned __int16 *v12;
  char v13;
  unsigned __int16 **v14;
  unsigned int v15;
  unsigned __int16 *v16;
  char v17;
  uint64_t v18;
  unsigned __int16 **v19;
  unsigned int v20;

  v5 = *a4;
  *a2 = *a4;
  v6 = *a5;
  a2[2] = *a5;
  v7 = **a3;
  v8 = *v5;
  if (v8 >= **v7)
  {
    if (v8 <= *v7[2])
      v9 = v8;
    else
      v9 = *(_BYTE *)v7[3];
  }
  else
  {
    v9 = *(_BYTE *)v7[1];
  }
  *v6 = v9;
  v10 = **a3;
  v11 = *(unsigned __int16 *)(*a2 + 2);
  if (v11 < **v10)
  {
    v12 = v10[1];
LABEL_10:
    v13 = *(_BYTE *)v12;
    goto LABEL_12;
  }
  if (v11 > *v10[2])
  {
    v12 = v10[3];
    goto LABEL_10;
  }
  v13 = *(_WORD *)(*a2 + 2);
LABEL_12:
  *(_BYTE *)(a2[2] + 1) = v13;
  v14 = **a3;
  v15 = *(unsigned __int16 *)(*a2 + 4);
  if (v15 < **v14)
  {
    v16 = v14[1];
LABEL_16:
    v17 = *(_BYTE *)v16;
    goto LABEL_18;
  }
  if (v15 > *v14[2])
  {
    v16 = v14[3];
    goto LABEL_16;
  }
  v17 = *(_WORD *)(*a2 + 4);
LABEL_18:
  *(_BYTE *)(a2[2] + 2) = v17;
  v18 = a2[2];
  v19 = **a3;
  v20 = *(unsigned __int16 *)(*a2 + 6);
  if (v20 >= **v19)
  {
    if (v20 <= *v19[2])
      *(_BYTE *)(v18 + 3) = v20;
    else
      *(_BYTE *)(v18 + 3) = *(_BYTE *)v19[3];
  }
  else
  {
    *(_BYTE *)(v18 + 3) = *(_BYTE *)v19[1];
  }
}

double sub_2397F6C18@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397F1B48(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC040;
  sub_2397E7D68((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397F6D64(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2397EA2CC((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397F6D08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397F6D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397F6D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397F6D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2397F6F08(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397F6EA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2397F6F08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397F7060(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2397F7060(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397D5B2C(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397F71C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2397F722C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397F1B48(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC150;
  sub_2397EA604((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397F7340(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397F7308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397F7324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397F7340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB858;
  sub_2397ED558(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEC568[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397ED7C4(a2, (uint64_t)(a4 + 1));
}

void sub_2397F742C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397F7440(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397F7454(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C79B0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397F7468(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2397F757C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2397F7478(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2397F85B4((uint64_t)v13, 1006632960, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 1.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2397F85B4((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_2397F7554(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2397F76CC(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2397F757C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  unsigned int v15;
  unsigned int v18;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    _Q0.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)_Q0.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  v15 = (unsigned __int16)v6;
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm { FCVT            S3, H0 }
  v18 = HIWORD(v6);
  __asm { FCVT            S3, H1 }
  _ZF = _ZF && _S3 == (float)v18;
  if (_ZF)
    return sub_2397F76CC(a1, a2, (uint64_t)v25, _Q0);
  v29 = (double)v15;
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  v28 = 1.0 / ((double)v18 - (double)v15);
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_2397F7D3C(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_2397F76CC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397F7974((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397F7910(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397F7974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  _WORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_WORD **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    *(_QWORD *)&result = sub_2397F7B18(&v26, v33, 0.0, a1, v13, v19);
  }
  return result;
}

__int16 sub_2397F7B18@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, float _S0@<S0>, uint64_t a4@<X2>, _WORD *a5@<X3>, _WORD *a6@<X4>)
{
  unsigned int v6;
  _WORD *v14;
  _WORD *v15;
  unsigned int v16;
  unsigned int v20;
  __int16 result;

  if (a1[8])
  {
    v6 = 0;
    do
    {
      *a2 = a5;
      a2[2] = a6;
      v14 = a6;
      v15 = a5;
      if (a1[5])
      {
        v16 = 0;
        v15 = a5;
        v14 = a6;
        do
        {
          *a2 = v15;
          a2[2] = v14;
          LOWORD(_S0) = *v15;
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v14 = _S0;
          LOWORD(_S0) = *(_WORD *)(*a2 + 2);
          *(float *)&_S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          *(_WORD *)(a2[2] + 2) = _S0;
          LOWORD(_S0) = *(_WORD *)(*a2 + 4);
          *(float *)&_S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          *(_WORD *)(a2[2] + 4) = _S0;
          LOWORD(_S0) = *(_WORD *)(*a2 + 6);
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          *(_WORD *)(a2[2] + 6) = LOWORD(_S0);
          v15 += a1[6];
          v14 += a1[7];
          ++v16;
        }
        while (v16 < a1[5]);
      }
      *a2 = v15;
      a2[2] = v14;
      LOWORD(_S0) = *v15;
      *(float *)&_S0 = (float)LODWORD(_S0);
      __asm { FCVT            H0, S0 }
      *v14 = _S0;
      LOWORD(_S0) = *(_WORD *)(*a2 + 2);
      *(float *)&_S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(a2[2] + 2) = _S0;
      LOWORD(_S0) = *(_WORD *)(*a2 + 4);
      *(float *)&_S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(a2[2] + 4) = _S0;
      LOWORD(_S0) = *(_WORD *)(*a2 + 6);
      _S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(a2[2] + 6) = LOWORD(_S0);
      a5 += a1[9];
      a6 += a1[10];
      ++v6;
    }
    while (v6 < a1[8]);
  }
  *a2 = a5;
  a2[2] = a6;
  if (a1[5])
  {
    v20 = 0;
    do
    {
      *a2 = a5;
      a2[2] = a6;
      LOWORD(_S0) = *a5;
      *(float *)&_S0 = (float)LODWORD(_S0);
      __asm { FCVT            H0, S0 }
      *a6 = _S0;
      LOWORD(_S0) = *(_WORD *)(*a2 + 2);
      *(float *)&_S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(a2[2] + 2) = _S0;
      LOWORD(_S0) = *(_WORD *)(*a2 + 4);
      *(float *)&_S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(a2[2] + 4) = _S0;
      LOWORD(_S0) = *(_WORD *)(*a2 + 6);
      _S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(a2[2] + 6) = LOWORD(_S0);
      a5 += a1[6];
      a6 += a1[7];
      ++v20;
    }
    while (v20 < a1[5]);
  }
  *a2 = a5;
  a2[2] = a6;
  LOWORD(_S0) = *a5;
  *(float *)&_S0 = (float)LODWORD(_S0);
  __asm { FCVT            H0, S0 }
  *a6 = _S0;
  LOWORD(_S0) = *(_WORD *)(*a2 + 2);
  *(float *)&_S0 = (float)_S0;
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 2) = _S0;
  LOWORD(_S0) = *(_WORD *)(*a2 + 4);
  *(float *)&_S0 = (float)_S0;
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 4) = _S0;
  LOWORD(_S0) = *(_WORD *)(*a2 + 6);
  _S0 = (float)_S0;
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 6) = result;
  return result;
}

uint64_t sub_2397F7D3C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397F7FE4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397F7F80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397F7FE4(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  _WORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_WORD **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397F8188(&v26, v33, a1, v13, v19, 0.0);
  }
  return result;
}

double sub_2397F8188(_DWORD *a1, _QWORD *a2, double *****a3, _WORD *a4, _WORD *a5, double _D0)
{
  unsigned int v11;
  _WORD *v12;
  _WORD *v13;
  unsigned int v14;
  double ***v15;
  double **v16;
  double **v17;
  double v18;
  double v19;
  double v20;
  double ***v26;
  double **v27;
  double **v28;
  double v29;
  double v30;
  double v31;
  double ***v33;
  double **v34;
  double **v35;
  double v36;
  double v37;
  double v38;
  double ***v40;
  double **v41;
  double **v42;
  double v43;
  double v44;
  double v45;
  unsigned int v46;
  double result;

  if (a1[8])
  {
    v11 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v12 = a5;
      v13 = a4;
      if (a1[5])
      {
        v14 = 0;
        v13 = a4;
        v12 = a5;
        do
        {
          *a2 = v13;
          a2[2] = v12;
          v15 = **a3;
          LOWORD(_D0) = *v13;
          v17 = *v15;
          v16 = v15[1];
          v18 = ((double)*(unint64_t *)&_D0 - **v17) * *v17[1];
          v19 = fmax(v18, 0.0);
          if (v18 <= 1.0)
            v20 = v19;
          else
            v20 = 1.0;
          _D0 = **v16 + v20 * *v16[1];
          *(float *)&_D0 = _D0;
          __asm { FCVT            H0, S0 }
          *v12 = LOWORD(_D0);
          v26 = **a3;
          LOWORD(_D0) = *(_WORD *)(*a2 + 2);
          v28 = *v26;
          v27 = v26[1];
          v29 = ((double)*(unint64_t *)&_D0 - **v28) * *v28[1];
          v30 = fmax(v29, 0.0);
          if (v29 <= 1.0)
            v31 = v30;
          else
            v31 = 1.0;
          _D0 = **v27 + v31 * *v27[1];
          *(float *)&_D0 = _D0;
          __asm { FCVT            H0, S0 }
          *(_WORD *)(a2[2] + 2) = LOWORD(_D0);
          v33 = **a3;
          LOWORD(_D0) = *(_WORD *)(*a2 + 4);
          v35 = *v33;
          v34 = v33[1];
          v36 = ((double)*(unint64_t *)&_D0 - **v35) * *v35[1];
          v37 = fmax(v36, 0.0);
          if (v36 <= 1.0)
            v38 = v37;
          else
            v38 = 1.0;
          _D0 = **v34 + v38 * *v34[1];
          *(float *)&_D0 = _D0;
          __asm { FCVT            H0, S0 }
          *(_WORD *)(a2[2] + 4) = LOWORD(_D0);
          v40 = **a3;
          LOWORD(_D0) = *(_WORD *)(*a2 + 6);
          v42 = *v40;
          v41 = v40[1];
          v43 = ((double)*(unint64_t *)&_D0 - **v42) * *v42[1];
          v44 = fmax(v43, 0.0);
          if (v43 <= 1.0)
            v45 = v44;
          else
            v45 = 1.0;
          _D0 = **v41 + v45 * *v41[1];
          *(float *)&_D0 = _D0;
          __asm { FCVT            H0, S0 }
          *(_WORD *)(a2[2] + 6) = LOWORD(_D0);
          v13 += a1[6];
          v12 += a1[7];
          ++v14;
        }
        while (v14 < a1[5]);
      }
      *a2 = v13;
      a2[2] = v12;
      *(_QWORD *)&_D0 = sub_2397F8438(a3, (_WORD **)a2, (uint64_t)(a2 + 2), _D0);
      a4 += a1[9];
      a5 += a1[10];
      ++v11;
    }
    while (v11 < a1[8]);
  }
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v46 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      *(_QWORD *)&_D0 = sub_2397F8438(a3, (_WORD **)a2, (uint64_t)(a2 + 2), _D0);
      a4 += a1[6];
      a5 += a1[7];
      ++v46;
    }
    while (v46 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  *(_QWORD *)&result = sub_2397F8438(a3, (_WORD **)a2, (uint64_t)(a2 + 2), _D0);
  return result;
}

__int16 sub_2397F8438@<H0>(double *****a1@<X0>, _WORD **a2@<X1>, uint64_t a3@<X2>, double a4@<D0>)
{
  double ***v4;
  double **v5;
  double **v6;
  double v7;
  double v8;
  double v9;
  double ***v15;
  double **v16;
  double **v17;
  double v18;
  double v19;
  double v20;
  double ***v22;
  double **v23;
  double **v24;
  double v25;
  double v26;
  double v27;
  double ***v29;
  double **v30;
  double **v31;
  double v32;
  double v33;
  __int16 result;

  v4 = **a1;
  LOWORD(a4) = **a2;
  v6 = *v4;
  v5 = v4[1];
  v7 = ((double)*(unint64_t *)&a4 - **v6) * *v6[1];
  v8 = fmax(v7, 0.0);
  if (v7 <= 1.0)
    v9 = v8;
  else
    v9 = 1.0;
  _D2 = **v5 + v9 * *v5[1];
  *(float *)&_D2 = _D2;
  __asm { FCVT            H2, S2 }
  **(_WORD **)a3 = LOWORD(_D2);
  v15 = **a1;
  LOWORD(_D2) = (*a2)[1];
  v17 = *v15;
  v16 = v15[1];
  v18 = ((double)*(unint64_t *)&_D2 - **v17) * *v17[1];
  v19 = fmax(v18, 0.0);
  if (v18 <= 1.0)
    v20 = v19;
  else
    v20 = 1.0;
  _D2 = **v16 + v20 * *v16[1];
  *(float *)&_D2 = _D2;
  __asm { FCVT            H2, S2 }
  *(_WORD *)(*(_QWORD *)a3 + 2) = LOWORD(_D2);
  v22 = **a1;
  LOWORD(_D2) = (*a2)[2];
  v24 = *v22;
  v23 = v22[1];
  v25 = ((double)*(unint64_t *)&_D2 - **v24) * *v24[1];
  v26 = fmax(v25, 0.0);
  if (v25 <= 1.0)
    v27 = v26;
  else
    v27 = 1.0;
  _D2 = **v23 + v27 * *v23[1];
  *(float *)&_D2 = _D2;
  __asm { FCVT            H2, S2 }
  *(_WORD *)(*(_QWORD *)a3 + 4) = LOWORD(_D2);
  v29 = **a1;
  LOWORD(_D2) = (*a2)[3];
  v31 = *v29;
  v30 = v29[1];
  v32 = ((double)*(unint64_t *)&_D2 - **v31) * *v31[1];
  v33 = fmax(v32, 0.0);
  if (v32 > 1.0)
    v33 = 1.0;
  _S0 = **v30 + v33 * *v30[1];
  __asm { FCVT            H0, S0 }
  *(_WORD *)(*(_QWORD *)a3 + 6) = result;
  return result;
}

uint64_t sub_2397F85B4(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  __int16 *v23;
  __int16 *v24;
  __int16 v25;
  __int16 v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 65535.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      v27 = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2397F8F04(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 65535.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      v27 = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2397F95B0(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_2397F76CC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = &v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_2397F86D0(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_2397F86D0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F8978(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397F8914(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397F8978@<H0>(unsigned __int16 ****a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2397F8B1C(&v26, (uint64_t)v33, a1, v13, v19);
  }
  return result;
}

unsigned __int16 sub_2397F8B1C@<H0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, unsigned __int16 ****a3@<X2>, unsigned __int16 *a4@<X3>, _WORD *a5@<X4>)
{
  int v10;
  _WORD *v11;
  unsigned __int16 *v12;
  int v13;
  unsigned __int16 *v14;
  unsigned __int16 **v16;
  unsigned int v17;
  unsigned __int16 **v24;
  unsigned int v25;
  unsigned __int16 *v26;
  unsigned __int16 **v29;
  unsigned int v30;
  unsigned __int16 *v31;
  unsigned __int16 **v34;
  unsigned int v35;
  unsigned int v37;

  if (a1[8])
  {
    v10 = 0;
    while (1)
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      v11 = a5;
      v12 = a4;
      if (a1[5])
        break;
LABEL_3:
      *(_QWORD *)a2 = v12;
      *(_QWORD *)(a2 + 16) = v11;
      sub_2397F8DA0(a3, (unsigned __int16 **)a2, (uint64_t *)(a2 + 16));
      a4 += a1[9];
      a5 += a1[10];
      if (++v10 >= a1[8])
        goto LABEL_30;
    }
    v13 = 0;
    v12 = a4;
    v11 = a5;
    while (1)
    {
      *(_QWORD *)a2 = v12;
      *(_QWORD *)(a2 + 16) = v11;
      v16 = **a3;
      v17 = *v12;
      if (v17 >= **v16)
      {
        if (v17 <= *v16[2])
        {
          _S0 = (float)v17;
          __asm { FCVT            H0, S0 }
        }
        else
        {
          _H0 = *v16[3];
        }
      }
      else
      {
        _H0 = *v16[1];
      }
      *v11 = _H0;
      v24 = **a3;
      v25 = *(unsigned __int16 *)(*(_QWORD *)a2 + 2);
      if (v25 < **v24)
        break;
      if (v25 > *v24[2])
      {
        v26 = v24[3];
        goto LABEL_18;
      }
      _S0 = (float)v25;
      __asm { FCVT            H0, S0 }
LABEL_20:
      *(_WORD *)(*(_QWORD *)(a2 + 16) + 2) = _H0;
      v29 = **a3;
      v30 = *(unsigned __int16 *)(*(_QWORD *)a2 + 4);
      if (v30 < **v29)
      {
        v31 = v29[1];
LABEL_24:
        _H0 = *v31;
        goto LABEL_26;
      }
      if (v30 > *v29[2])
      {
        v31 = v29[3];
        goto LABEL_24;
      }
      _S0 = (float)v30;
      __asm { FCVT            H0, S0 }
LABEL_26:
      *(_WORD *)(*(_QWORD *)(a2 + 16) + 4) = _H0;
      v34 = **a3;
      v35 = *(unsigned __int16 *)(*(_QWORD *)a2 + 6);
      if (v35 < **v34)
      {
        v14 = v34[1];
      }
      else
      {
        if (v35 <= *v34[2])
        {
          _S0 = (float)v35;
          __asm { FCVT            H0, S0 }
          goto LABEL_8;
        }
        v14 = v34[3];
      }
      _H0 = *v14;
LABEL_8:
      *(_WORD *)(*(_QWORD *)(a2 + 16) + 6) = _H0;
      v12 += a1[6];
      v11 += a1[7];
      if (++v13 >= a1[5])
        goto LABEL_3;
    }
    v26 = v24[1];
LABEL_18:
    _H0 = *v26;
    goto LABEL_20;
  }
LABEL_30:
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  if (a1[5])
  {
    v37 = 0;
    do
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      sub_2397F8DA0(a3, (unsigned __int16 **)a2, (uint64_t *)(a2 + 16));
      a4 += a1[6];
      a5 += a1[7];
      ++v37;
    }
    while (v37 < a1[5]);
  }
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  return sub_2397F8DA0(a3, (unsigned __int16 **)a2, (uint64_t *)(a2 + 16));
}

unsigned __int16 sub_2397F8DA0@<H0>(unsigned __int16 ****a1@<X0>, unsigned __int16 **a2@<X1>, uint64_t *a3@<X2>)
{
  unsigned __int16 **v3;
  unsigned int v4;
  unsigned __int16 **v11;
  unsigned int v12;
  unsigned __int16 *v13;
  unsigned __int16 **v16;
  unsigned int v17;
  unsigned __int16 *v18;
  uint64_t v21;
  unsigned __int16 **v22;
  unsigned int v23;
  unsigned __int16 *v24;
  unsigned __int16 result;
  unsigned __int16 *v26;

  v3 = **a1;
  v4 = **a2;
  if (v4 >= **v3)
  {
    if (v4 <= *v3[2])
    {
      _S0 = (float)v4;
      __asm { FCVT            H0, S0 }
    }
    else
    {
      _H0 = *v3[3];
    }
  }
  else
  {
    _H0 = *v3[1];
  }
  *(_WORD *)*a3 = _H0;
  v11 = **a1;
  v12 = (*a2)[1];
  if (v12 < **v11)
  {
    v13 = v11[1];
LABEL_10:
    _H0 = *v13;
    goto LABEL_12;
  }
  if (v12 > *v11[2])
  {
    v13 = v11[3];
    goto LABEL_10;
  }
  _S0 = (float)v12;
  __asm { FCVT            H0, S0 }
LABEL_12:
  *(_WORD *)(*a3 + 2) = _H0;
  v16 = **a1;
  v17 = (*a2)[2];
  if (v17 < **v16)
  {
    v18 = v16[1];
LABEL_16:
    _H0 = *v18;
    goto LABEL_18;
  }
  if (v17 > *v16[2])
  {
    v18 = v16[3];
    goto LABEL_16;
  }
  _S0 = (float)v17;
  __asm { FCVT            H0, S0 }
LABEL_18:
  *(_WORD *)(*a3 + 4) = _H0;
  v21 = *a3;
  v22 = **a1;
  v23 = (*a2)[3];
  if (v23 >= **v22)
  {
    if (v23 <= *v22[2])
    {
      _S0 = (float)v23;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(v21 + 6) = result;
    }
    else
    {
      v26 = v22[3];
      result = *v26;
      *(_WORD *)(v21 + 6) = *v26;
    }
  }
  else
  {
    v24 = v22[1];
    result = *v24;
    *(_WORD *)(v21 + 6) = *v24;
  }
  return result;
}

uint64_t sub_2397F8F04(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F91AC(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397F9148(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397F91AC@<H0>(unsigned __int16 ****a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  unsigned __int16 result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397F9394(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    return sub_2397F9394(&v27, v34, a1, v13, v19);
  }
  return result;
}

unsigned __int16 sub_2397F9394@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int16 ****a3@<X2>, unsigned __int16 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int16 **v7;
  unsigned int v8;
  unsigned __int16 **v15;
  unsigned int v16;
  unsigned __int16 **v19;
  unsigned int v20;
  unsigned __int16 **v23;
  unsigned int v24;
  unsigned __int16 **v26;
  unsigned int v27;
  unsigned __int16 **v30;
  unsigned int v31;
  unsigned __int16 **v34;
  unsigned int v35;
  uint64_t v38;
  unsigned __int16 **v39;
  unsigned int v40;
  unsigned __int16 *v41;
  unsigned __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 >= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int16 *)(*a2 + 2);
      if (v16 >= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int16 *)(*a2 + 4);
      if (v20 >= **v19)
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v19[1];
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      v23 = **a3;
      v24 = *(unsigned __int16 *)(*a2 + 6);
      if (v24 < **v23)
      {
        _H0 = *v23[1];
      }
      else
      {
        _S0 = (float)v24;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 6) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = **a3;
  v27 = *a4;
  if (v27 >= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v26[1];
  }
  *a5 = _H0;
  v30 = **a3;
  v31 = *(unsigned __int16 *)(*a2 + 2);
  if (v31 >= **v30)
  {
    _S0 = (float)v31;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v30[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v34 = **a3;
  v35 = *(unsigned __int16 *)(*a2 + 4);
  if (v35 >= **v34)
  {
    _S0 = (float)v35;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v34[1];
  }
  *(_WORD *)(a2[2] + 4) = _H0;
  v38 = a2[2];
  v39 = **a3;
  v40 = *(unsigned __int16 *)(*a2 + 6);
  if (v40 >= **v39)
  {
    _S0 = (float)v40;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v38 + 6) = result;
  }
  else
  {
    v41 = v39[1];
    result = *v41;
    *(_WORD *)(v38 + 6) = *v41;
  }
  return result;
}

uint64_t sub_2397F95B0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F9858(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397F97F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397F9858@<H0>(unsigned __int16 ****a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  unsigned __int16 result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397F9A40(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    return sub_2397F9A40(&v27, v34, a1, v13, v19);
  }
  return result;
}

unsigned __int16 sub_2397F9A40@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int16 ****a3@<X2>, unsigned __int16 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int16 **v7;
  unsigned int v8;
  unsigned __int16 **v15;
  unsigned int v16;
  unsigned __int16 **v19;
  unsigned int v20;
  unsigned __int16 **v23;
  unsigned int v24;
  unsigned __int16 **v26;
  unsigned int v27;
  unsigned __int16 **v30;
  unsigned int v31;
  unsigned __int16 **v34;
  unsigned int v35;
  uint64_t v38;
  unsigned __int16 **v39;
  unsigned int v40;
  unsigned __int16 *v41;
  unsigned __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 <= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int16 *)(*a2 + 2);
      if (v16 <= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int16 *)(*a2 + 4);
      if (v20 <= **v19)
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v19[1];
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      v23 = **a3;
      v24 = *(unsigned __int16 *)(*a2 + 6);
      if (v24 > **v23)
      {
        _H0 = *v23[1];
      }
      else
      {
        _S0 = (float)v24;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 6) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = **a3;
  v27 = *a4;
  if (v27 <= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v26[1];
  }
  *a5 = _H0;
  v30 = **a3;
  v31 = *(unsigned __int16 *)(*a2 + 2);
  if (v31 <= **v30)
  {
    _S0 = (float)v31;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v30[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v34 = **a3;
  v35 = *(unsigned __int16 *)(*a2 + 4);
  if (v35 <= **v34)
  {
    _S0 = (float)v35;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v34[1];
  }
  *(_WORD *)(a2[2] + 4) = _H0;
  v38 = a2[2];
  v39 = **a3;
  v40 = *(unsigned __int16 *)(*a2 + 6);
  if (v40 <= **v39)
  {
    _S0 = (float)v40;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v38 + 6) = result;
  }
  else
  {
    v41 = v39[1];
    result = *v41;
    *(_WORD *)(v38 + 6) = *v41;
  }
  return result;
}

double sub_2397F9C5C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397F1B48(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC260;
  sub_2397EDAFC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397F9D70(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397F9D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397F9D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397F9D70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB950;
  sub_2397F06F4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEC580[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397F0960(a2, (uint64_t)(a4 + 1));
}

void sub_2397F9E5C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397F9E70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397F9E84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C8588((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397F9E98(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2397F9F98(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2397F9EA8(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  float v5;
  _QWORD v7[5];
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[2];

  v3 = (*a1)[1];
  v10[0] = **a1;
  v10[1] = v3;
  v9[0] = v10[0];
  v9[1] = v3;
  v8[0] = v10[0];
  v8[1] = v3;
  v7[0] = v10;
  v7[1] = v9;
  v7[2] = v8;
  v7[3] = v10[0];
  v7[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = 0.0;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 1.0;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    v5 = v4;
    return sub_2397FABBC((uint64_t)v7, a3, v5);
  }
  else
  {
    a3.n128_u32[0] = 0;
    return sub_2397FABBC((uint64_t)v7, a3, 1.0);
  }
}

uint64_t sub_2397F9F70(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2397FA0C4(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2397F9F98(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  float v8;
  unsigned int v9;
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  unint64_t v15;
  double v16;
  double v17;
  double v18;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    a4.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)a4.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v8 = 1.0;
    a4.n128_u32[0] = 0;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  a4.n128_u64[0] = 0xC7EFFFFFE0000000;
  if (*(double *)(a3 + 24) >= -3.40282347e38)
    a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
  a4.n128_f32[0] = a4.n128_f64[0];
  v7 = 3.40282347e38;
  if (*(double *)(a3 + 32) <= 3.40282347e38)
    v7 = *(double *)(a3 + 32);
  v8 = v7;
LABEL_14:
  v9 = HIWORD(v6);
  if (a4.n128_f32[0] == (float)(unsigned __int16)v6 && v8 == (float)v9)
    return sub_2397FA0C4(a1, a2, (uint64_t)v14, a4);
  v18 = (double)(unsigned __int16)v6;
  v16 = a4.n128_f32[0];
  v17 = 1.0 / ((double)v9 - v18);
  a4.n128_f64[0] = v8 - a4.n128_f32[0];
  v15 = a4.n128_u64[0];
  v14[0] = &v18;
  v14[1] = &v17;
  v13[0] = &v16;
  v13[1] = &v15;
  v12[0] = v14;
  v12[1] = v13;
  return sub_2397FA5FC(a1, a2, (uint64_t)v12, a4);
}

uint64_t sub_2397FA0C4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397FA36C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397FA308(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397FA36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  uint16x4_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float32x4_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(uint16x4_t **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(uint16x4_t **)(a2 + 24);
    }
    v19 = *(float32x4_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float32x4_t **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    *(_QWORD *)&result = sub_2397FA510(&v26, (uint16x4_t **)v33, a1, v13, v19).u64[0];
  }
  return result;
}

float32x4_t sub_2397FA510(_DWORD *a1, uint16x4_t **a2, uint64_t a3, uint16x4_t *a4, float32x4_t *a5)
{
  unsigned int v5;
  int v6;
  float32x4_t *v7;
  uint16x4_t *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  float32x4_t result;

  if (a1[8])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = (uint16x4_t *)a5;
      v6 = a1[5];
      v7 = a5;
      v8 = a4;
      if (v6)
      {
        v9 = 2 * a1[6];
        v10 = 4 * a1[7];
        v7 = a5;
        v8 = a4;
        do
        {
          *v7 = vcvtq_f32_u32(vmovl_u16(*v8));
          v8 = (uint16x4_t *)((char *)v8 + v9);
          v7 = (float32x4_t *)((char *)v7 + v10);
          --v6;
        }
        while (v6);
      }
      *a2 = v8;
      a2[2] = (uint16x4_t *)v7;
      *v7 = vcvtq_f32_u32(vmovl_u16(*v8));
      a4 = (uint16x4_t *)((char *)a4 + 2 * a1[9]);
      a5 = (float32x4_t *)((char *)a5 + 4 * a1[10]);
      ++v5;
    }
    while (v5 < a1[8]);
  }
  *a2 = a4;
  a2[2] = (uint16x4_t *)a5;
  v11 = a1[5];
  if (v11)
  {
    v12 = 2 * a1[6];
    v13 = 4 * a1[7];
    do
    {
      *a5 = vcvtq_f32_u32(vmovl_u16(*a4));
      a4 = (uint16x4_t *)((char *)a4 + v12);
      a5 = (float32x4_t *)((char *)a5 + v13);
      --v11;
    }
    while (v11);
  }
  *a2 = a4;
  a2[2] = (uint16x4_t *)a5;
  result = vcvtq_f32_u32(vmovl_u16(*a4));
  *a5 = result;
  return result;
}

uint64_t sub_2397FA5FC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (uint64_t ****)&v29;
    a4.n128_f64[0] = sub_2397FA8A4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397FA840(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397FA8A4(uint64_t *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  uint16x4_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float32x4_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(uint16x4_t **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(uint16x4_t **)(a2 + 24);
    }
    v19 = *(float32x4_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float32x4_t **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397FAA8C(&v27, (uint16x4_t **)v34, a1, v13, v19);
        v13 = (uint16x4_t *)((char *)v13 + 2 * v33);
        v19 = (float32x4_t *)((char *)v19 + 4 * HIDWORD(v33));
      }
    }
    *(_QWORD *)&result = *(_OWORD *)&sub_2397FAA8C(&v27, (uint16x4_t **)v34, a1, v13, v19);
  }
  return result;
}

float64x2_t sub_2397FAA8C(_DWORD *a1, uint16x4_t **a2, uint64_t *****a3, uint16x4_t *a4, float32x4_t *a5)
{
  int v5;
  uint64_t ***v6;
  uint64_t **v7;
  uint64_t **v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  uint32x4_t v22;
  uint64x2_t v23;
  float64x2_t v24;
  float64x2_t v25;
  float64x2_t v26;
  uint32x4_t v27;
  uint64x2_t v28;
  float64x2_t v29;
  float64x2_t v30;
  float64x2_t v31;
  float64x2_t v32;
  float64x2_t v33;
  float64x2_t v34;
  float64x2_t v35;
  float64x2_t v36;
  float64x2_t result;

  *a2 = a4;
  a2[2] = (uint16x4_t *)a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *(double *)v8[1];
  v11 = **v7;
  v12 = *(double *)v7[1];
  __asm { FMOV            V2.2D, #1.0 }
  if (v5)
  {
    v18 = (float64x2_t)vdupq_lane_s64(v11, 0);
    v19 = (float64x2_t)vdupq_lane_s64(v9, 0);
    v20 = 2 * a1[6];
    v21 = 4 * a1[7];
    do
    {
      v22 = vmovl_u16(*a4);
      v23.i64[0] = v22.u32[2];
      v23.i64[1] = v22.u32[3];
      v24 = vcvtq_f64_u64(v23);
      v23.i64[0] = v22.u32[0];
      v23.i64[1] = v22.u32[1];
      v25 = vmulq_n_f64(vsubq_f64(v24, v19), v10);
      v26 = vmulq_n_f64(vsubq_f64(vcvtq_f64_u64(v23), v19), v10);
      *a5 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vaddq_f64(v18, vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v26, _Q2), (int8x16_t)_Q2, (int8x16_t)vmaxnmq_f64(v26, (float64x2_t)0)), v12))), vaddq_f64(v18, vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v25, _Q2), (int8x16_t)_Q2, (int8x16_t)vmaxnmq_f64(v25, (float64x2_t)0)), v12)));
      a4 = (uint16x4_t *)((char *)a4 + v20);
      a5 = (float32x4_t *)((char *)a5 + v21);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = (uint16x4_t *)a5;
  v27 = vmovl_u16(*a4);
  v28.i64[0] = v27.u32[2];
  v28.i64[1] = v27.u32[3];
  v29 = vcvtq_f64_u64(v28);
  v28.i64[0] = v27.u32[0];
  v28.i64[1] = v27.u32[1];
  v30 = (float64x2_t)vdupq_lane_s64(v9, 0);
  v31 = vsubq_f64(vcvtq_f64_u64(v28), v30);
  v32 = vmulq_n_f64(vsubq_f64(v29, v30), v10);
  v33 = vmulq_n_f64(v31, v10);
  v34 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v32, _Q2), (int8x16_t)_Q2, (int8x16_t)vmaxnmq_f64(v32, (float64x2_t)0));
  v35 = vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v33, _Q2), (int8x16_t)_Q2, (int8x16_t)vmaxnmq_f64(v33, (float64x2_t)0)), v12);
  v36 = (float64x2_t)vdupq_lane_s64(v11, 0);
  result = vaddq_f64(v36, vmulq_n_f64(v34, v12));
  *a5 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vaddq_f64(v36, v35)), result);
  return result;
}

uint64_t sub_2397FABBC(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  __int16 *v17;
  float *v18;
  __int16 v19;
  __int16 v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 65535.0;
    v3 = a3 >= 65535.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOWORD(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_2397FB43C(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1199570688;
      if (a3 <= 65535.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOWORD(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_2397FBA78(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_2397FA0C4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_2397FACC0(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_2397FACC0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FAF68(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397FAF04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397FAF68(unsigned __int16 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397FB150(&v27, (unsigned __int16 **)v34, a1, v13, v19);
        v13 += v33;
        v19 += 4 * HIDWORD(v33);
      }
    }
    return sub_2397FB150(&v27, (unsigned __int16 **)v34, a1, v13, v19);
  }
  return result;
}

float sub_2397FB150(_DWORD *a1, unsigned __int16 **a2, unsigned __int16 ****a3, unsigned __int16 *a4, uint64_t a5)
{
  int v5;
  unsigned __int16 **v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  float *v19;
  float result;
  float *v21;

  *a2 = a4;
  a2[2] = (unsigned __int16 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = **v6;
  if (v5)
  {
    v8 = 2 * a1[6];
    v9 = 4 * a1[7];
    do
    {
      while (1)
      {
        v11 = *a4;
        if (v11 < v7)
          break;
        if (v11 <= *v6[2])
        {
          *(float *)a5 = (float)v11;
          v12 = a4[1];
          if (v12 < v7)
            goto LABEL_14;
        }
        else
        {
          *(_DWORD *)a5 = *(_DWORD *)v6[3];
          v12 = a4[1];
          if (v12 < v7)
            goto LABEL_14;
        }
LABEL_10:
        if (v12 > *v6[2])
        {
          *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[3];
          v13 = a4[2];
          if (v13 < v7)
            goto LABEL_15;
          goto LABEL_18;
        }
        *(float *)(a5 + 4) = (float)v12;
        v13 = a4[2];
        if (v13 >= v7)
          goto LABEL_18;
LABEL_15:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
        v14 = a4[3];
        if (v14 >= v7)
          goto LABEL_22;
LABEL_3:
        v10 = v6[1];
LABEL_4:
        *(_DWORD *)(a5 + 12) = *(_DWORD *)v10;
        a4 = (unsigned __int16 *)((char *)a4 + v8);
        a5 += v9;
        if (!--v5)
          goto LABEL_25;
      }
      *(_DWORD *)a5 = *(_DWORD *)v6[1];
      v12 = a4[1];
      if (v12 >= v7)
        goto LABEL_10;
LABEL_14:
      *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
      v13 = a4[2];
      if (v13 < v7)
        goto LABEL_15;
LABEL_18:
      if (v13 <= *v6[2])
      {
        *(float *)(a5 + 8) = (float)v13;
        v14 = a4[3];
        if (v14 >= v7)
          goto LABEL_22;
        goto LABEL_3;
      }
      *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[3];
      v14 = a4[3];
      if (v14 < v7)
        goto LABEL_3;
LABEL_22:
      if (v14 > *v6[2])
      {
        v10 = v6[3];
        goto LABEL_4;
      }
      *(float *)(a5 + 12) = (float)v14;
      a4 = (unsigned __int16 *)((char *)a4 + v8);
      a5 += v9;
      --v5;
    }
    while (v5);
  }
LABEL_25:
  *a2 = a4;
  a2[2] = (unsigned __int16 *)a5;
  v15 = *a4;
  if (v15 >= v7)
  {
    if (v15 <= *v6[2])
    {
      *(float *)a5 = (float)v15;
      v16 = a4[1];
      if (v16 < v7)
        goto LABEL_34;
    }
    else
    {
      *(_DWORD *)a5 = *(_DWORD *)v6[3];
      v16 = a4[1];
      if (v16 < v7)
        goto LABEL_34;
    }
  }
  else
  {
    *(_DWORD *)a5 = *(_DWORD *)v6[1];
    v16 = a4[1];
    if (v16 < v7)
    {
LABEL_34:
      *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
      v17 = a4[2];
      if (v17 < v7)
        goto LABEL_35;
LABEL_38:
      if (v17 <= *v6[2])
      {
        *(float *)(a5 + 8) = (float)v17;
        v18 = a4[3];
        if (v18 >= v7)
          goto LABEL_40;
      }
      else
      {
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[3];
        v18 = a4[3];
        if (v18 >= v7)
          goto LABEL_40;
      }
LABEL_43:
      v21 = (float *)v6[1];
      result = *v21;
      *(float *)(a5 + 12) = *v21;
      return result;
    }
  }
  if (v16 > *v6[2])
  {
    *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[3];
    v17 = a4[2];
    if (v17 < v7)
      goto LABEL_35;
    goto LABEL_38;
  }
  *(float *)(a5 + 4) = (float)v16;
  v17 = a4[2];
  if (v17 >= v7)
    goto LABEL_38;
LABEL_35:
  *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
  v18 = a4[3];
  if (v18 < v7)
    goto LABEL_43;
LABEL_40:
  if (v18 <= *v6[2])
  {
    result = (float)v18;
    *(float *)(a5 + 12) = (float)v18;
  }
  else
  {
    v19 = (float *)v6[3];
    result = *v19;
    *(float *)(a5 + 12) = *v19;
  }
  return result;
}

uint64_t sub_2397FB43C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FB6E4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397FB680(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397FB6E4(unsigned __int16 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397FB8CC(&v27, (unsigned __int16 **)v34, a1, v13, v19);
        v13 += v33;
        v19 += 4 * HIDWORD(v33);
      }
    }
    return sub_2397FB8CC(&v27, (unsigned __int16 **)v34, a1, v13, v19);
  }
  return result;
}

float sub_2397FB8CC(_DWORD *a1, unsigned __int16 **a2, unsigned __int16 ****a3, unsigned __int16 *a4, uint64_t a5)
{
  int v5;
  unsigned __int16 **v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  float result;
  float *v19;

  *a2 = a4;
  a2[2] = (unsigned __int16 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = **v6;
  if (v5)
  {
    v8 = 2 * a1[6];
    v9 = 4 * a1[7];
    while (1)
    {
      v10 = *a4;
      if (v10 >= v7)
      {
        *(float *)a5 = (float)v10;
        v11 = a4[1];
        if (v11 < v7)
          goto LABEL_10;
LABEL_6:
        *(float *)(a5 + 4) = (float)v11;
        v12 = a4[2];
        if (v12 >= v7)
          goto LABEL_7;
LABEL_11:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
        v13 = a4[3];
        if (v13 < v7)
          goto LABEL_3;
LABEL_12:
        *(float *)(a5 + 12) = (float)v13;
        a4 = (unsigned __int16 *)((char *)a4 + v8);
        a5 += v9;
        if (!--v5)
          break;
      }
      else
      {
        *(_DWORD *)a5 = *(_DWORD *)v6[1];
        v11 = a4[1];
        if (v11 >= v7)
          goto LABEL_6;
LABEL_10:
        *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
        v12 = a4[2];
        if (v12 < v7)
          goto LABEL_11;
LABEL_7:
        *(float *)(a5 + 8) = (float)v12;
        v13 = a4[3];
        if (v13 >= v7)
          goto LABEL_12;
LABEL_3:
        *(_DWORD *)(a5 + 12) = *(_DWORD *)v6[1];
        a4 = (unsigned __int16 *)((char *)a4 + v8);
        a5 += v9;
        if (!--v5)
          break;
      }
    }
  }
  *a2 = a4;
  a2[2] = (unsigned __int16 *)a5;
  v14 = *a4;
  if (v14 >= v7)
  {
    *(float *)a5 = (float)v14;
    v15 = a4[1];
    if (v15 >= v7)
    {
LABEL_15:
      *(float *)(a5 + 4) = (float)v15;
      v16 = a4[2];
      if (v16 >= v7)
        goto LABEL_16;
LABEL_20:
      *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
      v17 = a4[3];
      if (v17 >= v7)
        goto LABEL_17;
      goto LABEL_21;
    }
  }
  else
  {
    *(_DWORD *)a5 = *(_DWORD *)v6[1];
    v15 = a4[1];
    if (v15 >= v7)
      goto LABEL_15;
  }
  *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
  v16 = a4[2];
  if (v16 < v7)
    goto LABEL_20;
LABEL_16:
  *(float *)(a5 + 8) = (float)v16;
  v17 = a4[3];
  if (v17 >= v7)
  {
LABEL_17:
    result = (float)v17;
    *(float *)(a5 + 12) = (float)v17;
    return result;
  }
LABEL_21:
  v19 = (float *)v6[1];
  result = *v19;
  *(float *)(a5 + 12) = *v19;
  return result;
}

uint64_t sub_2397FBA78(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FBD20(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397FBCBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2397FBD20(unsigned __int16 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397FBF08(&v27, (unsigned __int16 **)v34, a1, v13, v19);
        v13 += v33;
        v19 += 4 * HIDWORD(v33);
      }
    }
    return sub_2397FBF08(&v27, (unsigned __int16 **)v34, a1, v13, v19);
  }
  return result;
}

float sub_2397FBF08(_DWORD *a1, unsigned __int16 **a2, unsigned __int16 ****a3, unsigned __int16 *a4, uint64_t a5)
{
  int v5;
  unsigned __int16 **v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  float result;
  float *v19;

  *a2 = a4;
  a2[2] = (unsigned __int16 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = **v6;
  if (v5)
  {
    v8 = 2 * a1[6];
    v9 = 4 * a1[7];
    while (1)
    {
      v10 = *a4;
      if (v10 <= v7)
      {
        *(float *)a5 = (float)v10;
        v11 = a4[1];
        if (v11 > v7)
          goto LABEL_10;
LABEL_6:
        *(float *)(a5 + 4) = (float)v11;
        v12 = a4[2];
        if (v12 <= v7)
          goto LABEL_7;
LABEL_11:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
        v13 = a4[3];
        if (v13 > v7)
          goto LABEL_3;
LABEL_12:
        *(float *)(a5 + 12) = (float)v13;
        a4 = (unsigned __int16 *)((char *)a4 + v8);
        a5 += v9;
        if (!--v5)
          break;
      }
      else
      {
        *(_DWORD *)a5 = *(_DWORD *)v6[1];
        v11 = a4[1];
        if (v11 <= v7)
          goto LABEL_6;
LABEL_10:
        *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
        v12 = a4[2];
        if (v12 > v7)
          goto LABEL_11;
LABEL_7:
        *(float *)(a5 + 8) = (float)v12;
        v13 = a4[3];
        if (v13 <= v7)
          goto LABEL_12;
LABEL_3:
        *(_DWORD *)(a5 + 12) = *(_DWORD *)v6[1];
        a4 = (unsigned __int16 *)((char *)a4 + v8);
        a5 += v9;
        if (!--v5)
          break;
      }
    }
  }
  *a2 = a4;
  a2[2] = (unsigned __int16 *)a5;
  v14 = *a4;
  if (v14 <= v7)
  {
    *(float *)a5 = (float)v14;
    v15 = a4[1];
    if (v15 <= v7)
    {
LABEL_15:
      *(float *)(a5 + 4) = (float)v15;
      v16 = a4[2];
      if (v16 <= v7)
        goto LABEL_16;
LABEL_20:
      *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
      v17 = a4[3];
      if (v17 <= v7)
        goto LABEL_17;
      goto LABEL_21;
    }
  }
  else
  {
    *(_DWORD *)a5 = *(_DWORD *)v6[1];
    v15 = a4[1];
    if (v15 <= v7)
      goto LABEL_15;
  }
  *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
  v16 = a4[2];
  if (v16 > v7)
    goto LABEL_20;
LABEL_16:
  *(float *)(a5 + 8) = (float)v16;
  v17 = a4[3];
  if (v17 <= v7)
  {
LABEL_17:
    result = (float)v17;
    *(float *)(a5 + 12) = (float)v17;
    return result;
  }
LABEL_21:
  v19 = (float *)v6[1];
  result = *v19;
  *(float *)(a5 + 12) = *v19;
  return result;
}

double sub_2397FC0B4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397F1B48(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6778;
  sub_2397FC2BC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397FC1C8(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397FC190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397FC1AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397FC1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE5A00;
  sub_239766F78(a2, &v11);
  sub_2397FC948(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397671E4(a2, (uint64_t)(a3 + 1));
}

void sub_2397FC280(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397FC294(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975BEF4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397FC2A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397FC2BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_2397FC3BC(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239828728(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2397FC3A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397FC3BC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 38)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397FC5FC(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397FC59C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397FC5FC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397FC674();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397FC674()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569331D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569331D8))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_23974097C();
    sub_2397FC878((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397FC878((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569331C0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569331C0, &dword_23940C000);
          __cxa_guard_release(&qword_2569331D8);
          return &stru_2569331C0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569331C0;
}

void sub_2397FC7C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569331D8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569331D8);
  _Unwind_Resume(a1);
}

void sub_2397FC878(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397FC90C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397FC948(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397FCBE0(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397FCB7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2397FCBE0(_DWORD *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t)result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(uint64_t **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(uint64_t **)(a2 + 24);
    }
    v19 = *(uint64_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(uint64_t **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2397FCDC8(&v26, (uint64_t **)v33, v10, v13, v19);
        v13 = (uint64_t *)((char *)v13 + 2 * v32);
        v19 = (uint64_t *)((char *)v19 + 2 * HIDWORD(v32));
      }
    }
    return sub_2397FCDC8(&v26, (uint64_t **)v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2397FCDC8(_DWORD *result, uint64_t **a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  if (v5)
  {
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v6 = (unint64_t)*a4 >> 16;
      v7 = HIDWORD(*a4);
      v8 = HIWORD(*a4);
      *(_WORD *)a5 = *a4;
      *((_WORD *)a5 + 3) = v6;
      *((_WORD *)a5 + 2) = v7;
      *((_WORD *)a5 + 1) = v8;
      a4 = (uint64_t *)((char *)a4 + 2 * result[6]);
      a5 = (uint64_t *)((char *)a5 + 2 * result[7]);
      --v5;
    }
    while (v5);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v9 = *a4;
  v10 = (unint64_t)*a4 >> 16;
  v11 = HIDWORD(*a4);
  *(_WORD *)a5 = *a4;
  *((_WORD *)a5 + 3) = v10;
  *((_WORD *)a5 + 2) = v11;
  *((_WORD *)a5 + 1) = HIWORD(v9);
  return result;
}

void sub_2397FCE68(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2397FCE8C@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397FCF70(a1, a2);
}

double sub_2397FCE98@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397FFB4C(a1, a2);
}

double sub_2397FCEA4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398036E8(a1, a2);
}

double sub_2397FCEB0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239805600(a1, a2);
}

double sub_2397FCEBC@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2397FE928(a1, a2);
}

double sub_2397FCEC8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239800298(a1, a2);
}

double sub_2397FCED4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239801D84(a1, a2);
}

double sub_2397FCEE0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239803D6C(a1, a2);
}

uint64_t sub_2397FCF70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2397FD1A4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEC5A8;
  sub_2397FD434((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2397FD084(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2397FD04C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397FD068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397FD084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEAFA0;
  sub_2397FE5E8(a2, &v12);
  sub_2397FDBA4(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397FE854(a2, (uint64_t)(a3 + 1));
}

void sub_2397FD140(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397FD154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BDCA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397FD168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_2397FD17C(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2397FD1A4(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 35;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2397FD2E4((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397ED7C4((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2397FD2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397FD2D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397FD2E4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 35);
  *a2 = &off_250AEC150;
  sub_2397EA604((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2397FD3FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397FD420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397FD434(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_2397FD618(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239827098(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2397FD518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397FD534(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397FD570()
{
  return 15;
}

uint64_t sub_2397FD578(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2397FD580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2397FD59C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2397FD618(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 15)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397FD858(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397FD7F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397FD858(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397FD8D0();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397FD8D0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569331F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569331F8))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397AEE6C();
    sub_2397FDAD4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397FDAD4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569331E0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569331E0, &dword_23940C000);
          __cxa_guard_release(&qword_2569331F8);
          return &stru_2569331E0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569331E0;
}

void sub_2397FDA20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569331F8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569331F8);
  _Unwind_Resume(a1);
}

void sub_2397FDAD4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397FDB68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397FDBA4(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_2397FDD78(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397FDD54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397FDD78(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        a3.n128_f64[0] = sub_2397FDF14(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_u64[0] = sub_2397FE3D8((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2397FDEF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397FDF14(uint64_t *a1)
{
  _DWORD *v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  BOOL v9;
  double result;
  BOOL v12;
  uint64_t v14;

  v1 = (_DWORD *)*a1;
  v2 = a1[1];
  v3 = *(_DWORD *)(*a1 + 48);
  if (v3 == *(_DWORD *)(v2 + 24))
  {
    v4 = v1[8];
    if (v3 == v1[11] * v4)
    {
      v5 = v1[13];
      v6 = v1[9];
      v7 = v6 * v3;
      if (v5 == *(_DWORD *)(v2 + 28) && v5 == v7)
      {
        *(_QWORD *)&result = sub_2397FDFDC(*a1, (_QWORD *)v2);
      }
      else
      {
        v14 = v4 * v6;
        if (v4)
          v9 = v6 == 0;
        else
          v9 = 1;
        if (!v9 && v1[10] != 0)
          return sub_2397FE130(&v14, (uint64_t)v1, v2);
      }
      return result;
    }
  }
  else
  {
    v4 = v1[8];
  }
  v14 = v4;
  if (v4)
    v12 = v1[9] == 0;
  else
    v12 = 1;
  if (!v12 && v1[10] != 0)
    return sub_2397FE264(&v14, (uint64_t)v1, v2);
  return result;
}

__int16 sub_2397FDFDC@<H0>(uint64_t a1@<X0>, _QWORD *a2@<X1>)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  BOOL v13;
  _WORD *v14;
  unint64_t v15;
  __int16 *v16;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  __int128 *v20;
  _OWORD *v21;
  unint64_t v22;
  __int128 v23;
  __int16 *v24;
  __int16 v25;

  v3 = (*(_DWORD *)(a1 + 40) * *(_DWORD *)(a1 + 36) * *(_DWORD *)(a1 + 32));
  v4 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v5 = v4 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v6 = a1;
    v7 = *(_QWORD *)(a1 + 8);
    v8 = *(std::__shared_weak_count **)(a1 + 16);
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v7 + 88))(v7, 0, "unknown location");
    v4 = *(_QWORD *)(v6 + 24);
  }
  if ((_DWORD)v3)
    v13 = v4 == 0;
  else
    v13 = 0;
  if (v13)
    sub_239EBF50C(a1, (uint64_t)a2);
  if ((_DWORD)v3)
  {
    v14 = (_WORD *)*a2;
    v15 = (v3 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v15 < 0xF)
    {
      v16 = (__int16 *)v4;
    }
    else
    {
      v16 = (__int16 *)v4;
      if ((unint64_t)v14 - v4 >= 0x20)
      {
        v17 = v15 + 1;
        v18 = v17 & 0xFFFFFFFFFFFFFFF0;
        v19 = &v14[v18];
        v16 = (__int16 *)(v4 + v18 * 2);
        v20 = (__int128 *)(v4 + 16);
        v21 = v14 + 8;
        v22 = v17 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v12 = *(v20 - 1);
          v23 = *v20;
          *(v21 - 1) = v12;
          *v21 = v23;
          v20 += 2;
          v21 += 2;
          v22 -= 16;
        }
        while (v22);
        v14 = v19;
        if (v17 == (v17 & 0xFFFFFFFFFFFFFFF0))
          return v12;
      }
    }
    v24 = (__int16 *)(v4 + 2 * v3);
    do
    {
      v25 = *v16++;
      LOWORD(v12) = v25;
      *v14++ = v25;
    }
    while (v16 != v24);
  }
  return v12;
}

double sub_2397FE130(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  int v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  _QWORD v28[6];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v22 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 24);
    v23 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v21 = 0;
    v24 = v3 - 1;
    v25 = v11 | (v12 << 32);
    v26 = v5 - 1;
    v27 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v13 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_QWORD *)(a2 + 24);
    }
    v19 = *(_QWORD *)a3;
    memset(&v28[2], 0, 32);
    v28[0] = 0;
    v28[1] = 1;
    *(_QWORD *)&result = sub_239791CF0((unsigned int *)&v21, (uint64_t)v28, a1, v13, v19);
  }
  return result;
}

double sub_2397FE264(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int v21;
  double result;
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  unsigned int v28;
  unint64_t v29;
  _OWORD v30[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v24 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 24);
    v25 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v23 = 0;
    v26 = v3 - 1;
    v27 = v11 | (v12 << 32);
    v13 = v5 - 1;
    v28 = v13;
    v29 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v14 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(_QWORD *)(a2 + 24);
      v13 = v28;
    }
    v20 = *(_QWORD *)a3;
    memset(v30, 0, sizeof(v30));
    if (v13)
    {
      v21 = 0;
      do
      {
        sub_239791F70(&v23, v30, a1, v14, v20);
        v14 += 2 * v29;
        v20 += 2 * HIDWORD(v29);
        ++v21;
      }
      while (v21 < v28);
    }
    *(_QWORD *)&result = sub_239791F70(&v23, v30, a1, v14, v20);
  }
  return result;
}

__int16 sub_2397FE3D8@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  BOOL v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _WORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _WORD *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  _WORD *v25;
  _WORD *v26;
  _WORD *v27;
  _WORD *v28;
  int v29;
  __int16 result;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v13 = *(unsigned int *)(a3 + 24);
    v12 = *(unsigned int *)(a3 + 28);
    v14 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(_WORD **)(a2 + 24);
    }
    v20 = v3 - 1;
    v21 = *(_WORD **)a3;
    v22 = 2 * v11;
    v23 = 2 * v13;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          *v21 = *v14;
          v21[1] = v14[1];
          v21[2] = v14[2];
          v21[3] = v14[3];
          v21 += v12;
          v14 += v10;
          --v9;
        }
        while (v9);
      }
      else
      {
        v24 = 0;
        v25 = v21 + 2;
        v26 = v14 + 2;
        do
        {
          v27 = v26;
          v28 = v25;
          v29 = v3 - 1;
          do
          {
            *(v28 - 2) = *(v27 - 2);
            *(v28 - 1) = *(v27 - 1);
            *v28 = *v27;
            v28[1] = v27[1];
            v28 = (_WORD *)((char *)v28 + v23);
            v27 = (_WORD *)((char *)v27 + v22);
            --v29;
          }
          while (v29);
          *(v28 - 2) = *(v27 - 2);
          *(v28 - 1) = *(v27 - 1);
          *v28 = *v27;
          v28[1] = v27[1];
          v14 += v10;
          v21 += v12;
          ++v24;
          v25 += v12;
          v26 += v10;
        }
        while (v24 != v9);
      }
    }
    if (v3 != 1)
    {
      do
      {
        *v21 = *v14;
        v21[1] = v14[1];
        v21[2] = v14[2];
        v21[3] = v14[3];
        v14 = (_WORD *)((char *)v14 + v22);
        v21 = (_WORD *)((char *)v21 + v23);
        --v20;
      }
      while (v20);
    }
    *v21 = *v14;
    v21[1] = v14[1];
    v21[2] = v14[2];
    result = v14[3];
    v21[3] = result;
  }
  return result;
}

void sub_2397FE5E8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397FE6F0(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397FE6D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397FE6F0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 15);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397FE840(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397FE854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 15;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397FE908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2397FE928@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397FD1A4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC6A0;
  sub_2397FEB58((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397FEA3C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397FEA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397FEA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397FEA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AEB668;
  sub_2397FF80C(a2, &v12);
  sub_2397FF2C8(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397FFA78(a2, (uint64_t)(a3 + 1));
}

void sub_2397FEAF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397FEB08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C41B4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397FEB1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2397FEB30(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2397FEB58(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_2397FED3C(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239827F14(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2397FEC3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2397FEC58(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397FEC94()
{
  return 27;
}

uint64_t sub_2397FEC9C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2397FECA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2397FECC0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2397FED3C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 27)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397FEF7C(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2397FEF1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397FEF7C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397FEFF4();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397FEFF4()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933218);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933218))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397B201C();
    sub_2397FF1F8((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397FF1F8((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933200, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933200, &dword_23940C000);
          __cxa_guard_release(&qword_256933218);
          return &stru_256933200;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933200;
}

void sub_2397FF144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933218);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933218);
  _Unwind_Resume(a1);
}

void sub_2397FF1F8(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397FF28C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397FF2C8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2397FF560(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397FF4FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397FF560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  _WORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_WORD **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2397FF748(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += 2 * HIDWORD(v33);
      }
    }
    *(_QWORD *)&result = sub_2397FF748(&v27, v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_2397FF748@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _WORD *a4@<X3>, uint64_t a5@<X4>)
{
  unsigned int v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;
  __int16 result;
  __int16 v10;
  __int16 v11;
  __int16 v12;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
      v6 = a4[1];
      v7 = a4[2];
      v8 = a4[3];
      *(_WORD *)(a5 + 6) = *a4;
      *(_WORD *)a2[2] = v6;
      *(_WORD *)(a2[2] + 2) = v7;
      *(_WORD *)(a2[2] + 4) = v8;
      a4 += a1[6];
      a5 += 2 * a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
  }
  result = *a4;
  v10 = a4[1];
  v11 = a4[2];
  v12 = a4[3];
  *(_WORD *)(a5 + 6) = *a4;
  *(_WORD *)a2[2] = v10;
  *(_WORD *)(a2[2] + 2) = v11;
  *(_WORD *)(a2[2] + 4) = v12;
  return result;
}

void sub_2397FF80C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397FF914(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397FF8F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397FF914(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 27);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397FFA64(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397FFA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 27;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397FFB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2397FFB4C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397FD1A4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0A08;
  sub_239627148((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2397FFC60(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397FFC28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397FFC44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397FFC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE54D8;
  sub_239764F34(a2, &v12);
  sub_2397FFD54(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_23970B0E0(a2, (uint64_t)(a3 + 1));
}

void sub_2397FFD18(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2397FFD2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239755C98((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397FFD40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397FFD54(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2397FFFEC(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397FFF88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397FFFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  _WORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_WORD **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2398001D4(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += 2 * HIDWORD(v33);
      }
    }
    *(_QWORD *)&result = sub_2398001D4(&v27, v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_2398001D4@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _WORD *a4@<X3>, uint64_t a5@<X4>)
{
  unsigned int v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;
  __int16 result;
  __int16 v10;
  __int16 v11;
  __int16 v12;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
      v6 = a4[1];
      v7 = a4[2];
      v8 = a4[3];
      *(_WORD *)(a5 + 6) = *a4;
      *(_WORD *)(a2[2] + 4) = v6;
      *(_WORD *)(a2[2] + 2) = v7;
      *(_WORD *)a2[2] = v8;
      a4 += a1[6];
      a5 += 2 * a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
  }
  result = *a4;
  v10 = a4[1];
  v11 = a4[2];
  v12 = a4[3];
  *(_WORD *)(a5 + 6) = *a4;
  *(_WORD *)(a2[2] + 4) = v10;
  *(_WORD *)(a2[2] + 2) = v11;
  *(_WORD *)a2[2] = v12;
  return result;
}

double sub_239800298@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397FD1A4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6538;
  sub_2397E44CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398003AC(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239800374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239800390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398003AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE56F0;
  sub_239765EEC(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEC788[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239766158(a2, (uint64_t)(a4 + 1));
}

void sub_239800498(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398004AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398004C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239758F54((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398004D4(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23980051C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398004E4(uint64_t **a1, uint64_t a2)
{
  return sub_239801448(**a1, (*a1)[1], a2);
}

uint64_t sub_2398004F4(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23980066C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23980051C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  unsigned int v12;
  double v13;
  double v14;
  unsigned int v15;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  double v24;
  double v25;
  double v26;
  unint64_t v27;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    v12 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = 255;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  v12 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v13 = *(double *)(a3 + 24);
  if (v13 < 0.0)
    v13 = 0.0;
  v12 = (int)v13;
  v14 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v14 = *(double *)(a3 + 32);
  v15 = (int)v14;
LABEL_14:
  __asm
  {
    FCVT            S3, H0
    FCVT            S2, H1
  }
  _ZF = _ZF && _S2 == (float)v15;
  if (_ZF)
    return sub_23980066C(a1, a2, (uint64_t)v23, _Q0);
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  v25 = (double)v12;
  v26 = 1.0 / (_D1 - _Q0.n128_f64[0]);
  _Q0.n128_f64[0] = (double)v15 - (double)v12;
  v24 = _Q0.n128_f64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_239800BF0(a1, a2, (uint64_t)v21, _Q0);
}

uint64_t sub_23980066C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239800914((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398008B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_239800914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_239800AFC(&v27, (__int16 **)v34, a1, v13, v19);
        v13 += v33;
        v19 = (__int16 *)((char *)v19 + HIDWORD(v33));
      }
    }
    return sub_239800AFC(&v27, (__int16 **)v34, a1, v13, v19);
  }
  return result;
}

float sub_239800AFC(_DWORD *a1, __int16 **a2, uint64_t a3, __int16 *a4, __int16 *a5)
{
  unsigned int v5;
  float result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      _H0 = *a4;
      __asm { FCVT            S0, H0 }
      *(_BYTE *)a5 = (int)_S0;
      LOWORD(_S0) = (*a2)[1];
      __asm { FCVT            S0, H0 }
      *((_BYTE *)a2[2] + 1) = (int)_S0;
      LOWORD(_S0) = (*a2)[2];
      __asm { FCVT            S0, H0 }
      *((_BYTE *)a2[2] + 2) = (int)_S0;
      LOWORD(_S0) = (*a2)[3];
      __asm { FCVT            S0, H0 }
      *((_BYTE *)a2[2] + 3) = (int)_S0;
      a4 += a1[6];
      a5 = (__int16 *)((char *)a5 + a1[7]);
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  _H0 = *a4;
  __asm { FCVT            S0, H0 }
  *(_BYTE *)a5 = (int)_S0;
  LOWORD(_S0) = (*a2)[1];
  __asm { FCVT            S0, H0 }
  *((_BYTE *)a2[2] + 1) = (int)_S0;
  LOWORD(_S0) = (*a2)[2];
  __asm { FCVT            S0, H0 }
  *((_BYTE *)a2[2] + 2) = (int)_S0;
  LOWORD(_S0) = (*a2)[3];
  __asm { FCVT            S0, H0 }
  *((_BYTE *)a2[2] + 3) = (int)result;
  return result;
}

uint64_t sub_239800BF0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_239800E98(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239800E34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239800E98(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_23980103C(&v26, (__int16 **)v33, a1, v13, v19);
  }
  return result;
}

double sub_23980103C(_DWORD *a1, __int16 **a2, double *****a3, __int16 *a4, __int16 *a5)
{
  unsigned int v10;
  __int16 *v11;
  __int16 *v12;
  unsigned int v13;
  double ***v14;
  double **v21;
  double **v22;
  double v23;
  double v24;
  double v25;
  double ***v26;
  double **v29;
  double **v30;
  double v31;
  double v32;
  double v33;
  double ***v34;
  double **v37;
  double **v38;
  double v39;
  double v40;
  double v41;
  double ***v42;
  double **v45;
  double **v46;
  double v47;
  double v48;
  double v49;
  unsigned int v50;

  if (a1[8])
  {
    v10 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v11 = a5;
      v12 = a4;
      if (a1[5])
      {
        v13 = 0;
        v12 = a4;
        v11 = a5;
        do
        {
          *a2 = v12;
          a2[2] = v11;
          v14 = **a3;
          _H0 = *v12;
          __asm { FCVT            D0, H0 }
          v22 = *v14;
          v21 = v14[1];
          v23 = (_D0 - **v22) * *v22[1];
          v24 = fmax(v23, 0.0);
          if (v23 <= 1.0)
            v25 = v24;
          else
            v25 = 1.0;
          *(_BYTE *)v11 = llround(**v21 + v25 * *v21[1]);
          v26 = **a3;
          _H0 = (*a2)[1];
          __asm { FCVT            D0, H0 }
          v30 = *v26;
          v29 = v26[1];
          v31 = (_D0 - **v30) * *v30[1];
          v32 = fmax(v31, 0.0);
          if (v31 <= 1.0)
            v33 = v32;
          else
            v33 = 1.0;
          *((_BYTE *)a2[2] + 1) = llround(**v29 + v33 * *v29[1]);
          v34 = **a3;
          _H0 = (*a2)[2];
          __asm { FCVT            D0, H0 }
          v38 = *v34;
          v37 = v34[1];
          v39 = (_D0 - **v38) * *v38[1];
          v40 = fmax(v39, 0.0);
          if (v39 <= 1.0)
            v41 = v40;
          else
            v41 = 1.0;
          *((_BYTE *)a2[2] + 2) = llround(**v37 + v41 * *v37[1]);
          v42 = **a3;
          _H0 = (*a2)[3];
          __asm { FCVT            D0, H0 }
          v46 = *v42;
          v45 = v42[1];
          v47 = (_D0 - **v46) * *v46[1];
          v48 = fmax(v47, 0.0);
          if (v47 <= 1.0)
            v49 = v48;
          else
            v49 = 1.0;
          *((_BYTE *)a2[2] + 3) = llround(**v45 + v49 * *v45[1]);
          v12 += a1[6];
          v11 = (__int16 *)((char *)v11 + a1[7]);
          ++v13;
        }
        while (v13 < a1[5]);
      }
      *a2 = v12;
      a2[2] = v11;
      sub_2398012DC(a3, a2, (uint64_t)(a2 + 2));
      a4 += a1[9];
      a5 = (__int16 *)((char *)a5 + a1[10]);
      ++v10;
    }
    while (v10 < a1[8]);
  }
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v50 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      sub_2398012DC(a3, a2, (uint64_t)(a2 + 2));
      a4 += a1[6];
      a5 = (__int16 *)((char *)a5 + a1[7]);
      ++v50;
    }
    while (v50 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  return sub_2398012DC(a3, a2, (uint64_t)(a2 + 2));
}

double sub_2398012DC(double *****a1, __int16 **a2, uint64_t a3)
{
  double ***v3;
  double **v10;
  double **v11;
  double v12;
  double v13;
  double v14;
  double ***v15;
  double **v18;
  double **v19;
  double v20;
  double v21;
  double v22;
  double ***v23;
  double **v26;
  double **v27;
  double v28;
  double v29;
  double v30;
  double ***v31;
  double **v34;
  double **v35;
  double v36;
  double v37;
  double result;

  v3 = **a1;
  _H0 = **a2;
  __asm { FCVT            D0, H0 }
  v11 = *v3;
  v10 = v3[1];
  v12 = (_D0 - **v11) * *v11[1];
  v13 = fmax(v12, 0.0);
  if (v12 <= 1.0)
    v14 = v13;
  else
    v14 = 1.0;
  **(_BYTE **)a3 = llround(**v10 + v14 * *v10[1]);
  v15 = **a1;
  _H2 = (*a2)[1];
  __asm { FCVT            D2, H2 }
  v19 = *v15;
  v18 = v15[1];
  v20 = (_D2 - **v19) * *v19[1];
  v21 = fmax(v20, 0.0);
  if (v20 <= 1.0)
    v22 = v21;
  else
    v22 = 1.0;
  *(_BYTE *)(*(_QWORD *)a3 + 1) = llround(**v18 + v22 * *v18[1]);
  v23 = **a1;
  _H2 = (*a2)[2];
  __asm { FCVT            D2, H2 }
  v27 = *v23;
  v26 = v23[1];
  v28 = (_D2 - **v27) * *v27[1];
  v29 = fmax(v28, 0.0);
  if (v28 <= 1.0)
    v30 = v29;
  else
    v30 = 1.0;
  *(_BYTE *)(*(_QWORD *)a3 + 2) = llround(**v26 + v30 * *v26[1]);
  v31 = **a1;
  _H2 = (*a2)[3];
  __asm { FCVT            D2, H2 }
  v35 = *v31;
  v34 = v31[1];
  v36 = (_D2 - **v35) * *v35[1];
  v37 = fmax(v36, 0.0);
  if (v36 > 1.0)
    v37 = 1.0;
  result = **v34 + v37 * *v34[1];
  *(_BYTE *)(*(_QWORD *)a3 + 3) = llround(result);
  return result;
}

uint64_t sub_239801448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  char v19;
  char v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 23544;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_239801510(a1, a2, (uint64_t)v16);
}

uint64_t sub_239801510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_2398017B8(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239801754(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 ****sub_2398017B8(__int16 ****result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  __int16 ****v10;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_BYTE **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    return sub_23980195C(&v25, (uint64_t)v32, v10, v13, v19);
  }
  return result;
}

__int16 ****sub_23980195C(_DWORD *a1, uint64_t a2, __int16 ****a3, __int16 *a4, _BYTE *a5)
{
  int v10;
  _BYTE *v11;
  __int16 *v12;
  int v13;
  __int16 *v14;
  __int16 **v15;
  __int16 **v26;
  __int16 *v31;
  __int16 **v34;
  __int16 *v39;
  __int16 **v42;
  unsigned int v49;

  if (a1[8])
  {
    v10 = 0;
    while (1)
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      v11 = a5;
      v12 = a4;
      if (a1[5])
        break;
LABEL_3:
      *(_QWORD *)a2 = v12;
      *(_QWORD *)(a2 + 16) = v11;
      sub_239801C00(a3, (__int16 **)a2, (uint64_t *)(a2 + 16));
      a4 += a1[9];
      a5 += a1[10];
      if (++v10 >= a1[8])
        goto LABEL_30;
    }
    v13 = 0;
    v12 = a4;
    v11 = a5;
    while (1)
    {
      *(_QWORD *)a2 = v12;
      *(_QWORD *)(a2 + 16) = v11;
      v15 = **a3;
      _H0 = *v12;
      _H1 = **v15;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 >= _S1)
      {
        _H1 = *v15[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          LODWORD(v15) = (int)_S0;
        else
          LOBYTE(v15) = *(_BYTE *)v15[3];
      }
      else
      {
        LOBYTE(v15) = *(_BYTE *)v15[1];
      }
      *v11 = (_BYTE)v15;
      v26 = **a3;
      _H0 = *(_WORD *)(*(_QWORD *)a2 + 2);
      _H1 = **v26;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 < _S1)
        break;
      _H1 = *v26[2];
      __asm { FCVT            S1, H1 }
      if (_S0 > _S1)
      {
        v31 = v26[3];
        goto LABEL_18;
      }
      LODWORD(v31) = (int)_S0;
LABEL_20:
      *(_BYTE *)(*(_QWORD *)(a2 + 16) + 1) = (_BYTE)v31;
      v34 = **a3;
      _H0 = *(_WORD *)(*(_QWORD *)a2 + 4);
      _H1 = **v34;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 < _S1)
      {
        v39 = v34[1];
LABEL_24:
        LOBYTE(v39) = *(_BYTE *)v39;
        goto LABEL_26;
      }
      _H1 = *v34[2];
      __asm { FCVT            S1, H1 }
      if (_S0 > _S1)
      {
        v39 = v34[3];
        goto LABEL_24;
      }
      LODWORD(v39) = (int)_S0;
LABEL_26:
      *(_BYTE *)(*(_QWORD *)(a2 + 16) + 2) = (_BYTE)v39;
      v42 = **a3;
      _H0 = *(_WORD *)(*(_QWORD *)a2 + 6);
      _H1 = **v42;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 < _S1)
      {
        v14 = v42[1];
      }
      else
      {
        _H1 = *v42[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
        {
          LODWORD(v14) = (int)_S0;
          goto LABEL_8;
        }
        v14 = v42[3];
      }
      LOBYTE(v14) = *(_BYTE *)v14;
LABEL_8:
      *(_BYTE *)(*(_QWORD *)(a2 + 16) + 3) = (_BYTE)v14;
      v12 += a1[6];
      v11 += a1[7];
      if (++v13 >= a1[5])
        goto LABEL_3;
    }
    v31 = v26[1];
LABEL_18:
    LOBYTE(v31) = *(_BYTE *)v31;
    goto LABEL_20;
  }
LABEL_30:
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  if (a1[5])
  {
    v49 = 0;
    do
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      sub_239801C00(a3, (__int16 **)a2, (uint64_t *)(a2 + 16));
      a4 += a1[6];
      a5 += a1[7];
      ++v49;
    }
    while (v49 < a1[5]);
  }
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  return sub_239801C00(a3, (__int16 **)a2, (uint64_t *)(a2 + 16));
}

__int16 ****sub_239801C00(__int16 ****result, __int16 **a2, uint64_t *a3)
{
  __int16 **v3;
  __int16 **v14;
  __int16 *v19;
  __int16 **v22;
  __int16 *v27;
  uint64_t v30;
  __int16 **v31;

  v3 = **result;
  _H0 = **a2;
  _H1 = **v3;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 >= _S1)
  {
    _H1 = *v3[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      LODWORD(v3) = (int)_S0;
    else
      LOBYTE(v3) = *(_BYTE *)v3[3];
  }
  else
  {
    LOBYTE(v3) = *(_BYTE *)v3[1];
  }
  *(_BYTE *)*a3 = (_BYTE)v3;
  v14 = **result;
  _H0 = (*a2)[1];
  _H1 = **v14;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 < _S1)
  {
    v19 = v14[1];
LABEL_10:
    LOBYTE(v19) = *(_BYTE *)v19;
    goto LABEL_12;
  }
  _H1 = *v14[2];
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v19 = v14[3];
    goto LABEL_10;
  }
  LODWORD(v19) = (int)_S0;
LABEL_12:
  *(_BYTE *)(*a3 + 1) = (_BYTE)v19;
  v22 = **result;
  _H0 = (*a2)[2];
  _H1 = **v22;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 < _S1)
  {
    v27 = v22[1];
LABEL_16:
    LOBYTE(v27) = *(_BYTE *)v27;
    goto LABEL_18;
  }
  _H1 = *v22[2];
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v27 = v22[3];
    goto LABEL_16;
  }
  LODWORD(v27) = (int)_S0;
LABEL_18:
  *(_BYTE *)(*a3 + 2) = (_BYTE)v27;
  v30 = *a3;
  v31 = **result;
  _H0 = (*a2)[3];
  _H1 = **v31;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 >= _S1)
  {
    _H1 = *v31[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      *(_BYTE *)(v30 + 3) = (int)_S0;
    else
      *(_BYTE *)(v30 + 3) = *(_BYTE *)v31[3];
  }
  else
  {
    *(_BYTE *)(v30 + 3) = *(_BYTE *)v31[1];
  }
  return result;
}

double sub_239801D84@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397FD1A4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC040;
  sub_2397E7D68((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239801E98(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239801E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239801E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239801E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB760;
  sub_2397EA060(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEC7A0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397EA2CC(a2, (uint64_t)(a4 + 1));
}

void sub_239801F84(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239801F98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239801FAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C6D68((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239801FC0(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239802008(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239801FD0(uint64_t **a1, uint64_t a2)
{
  return sub_239802E14(**a1, (*a1)[1], a2);
}

uint64_t sub_239801FE0(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_239802164(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239802008(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v18;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  double v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = -65536;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
LABEL_14:
  v16 = (unsigned __int16)v15;
  __asm { FCVT            S2, H0 }
  v18 = HIWORD(v15);
  __asm { FCVT            S2, H1 }
  _ZF = _ZF && _S2 == (float)v18;
  if (_ZF)
    return sub_239802164(a1, a2, (uint64_t)v26, _Q0);
  __asm { FCVT            D0, H0 }
  v30 = _D0;
  __asm { FCVT            D1, H1 }
  v28 = (double)v16;
  v29 = 1.0 / (_D1 - _D0);
  v27 = (double)v18 - (double)v16;
  v26[0] = &v30;
  v26[1] = &v29;
  v25[0] = &v28;
  v25[1] = &v27;
  v24[0] = v26;
  v24[1] = v25;
  return sub_2398026B4(a1, a2, (uint64_t)v24);
}

uint64_t sub_239802164(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_23980240C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398023A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_23980240C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2398025F4(&v27, (__int16 **)v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    return sub_2398025F4(&v27, (__int16 **)v34, a1, v13, v19);
  }
  return result;
}

float sub_2398025F4(_DWORD *a1, __int16 **a2, uint64_t a3, __int16 *a4, __int16 *a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  float result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  if (v5)
  {
    v6 = 2 * a1[6];
    v7 = 2 * a1[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      _H0 = *a4;
      __asm { FCVT            S0, H0 }
      *a5 = (int)_S0;
      LOWORD(_S0) = a4[1];
      __asm { FCVT            S0, H0 }
      a5[1] = (int)_S0;
      LOWORD(_S0) = a4[2];
      __asm { FCVT            S0, H0 }
      a5[2] = (int)_S0;
      LOWORD(_S0) = a4[3];
      __asm { FCVT            S0, H0 }
      a5[3] = (int)_S0;
      a4 = (__int16 *)((char *)a4 + v6);
      a5 = (__int16 *)((char *)a5 + v7);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  _H0 = *a4;
  __asm { FCVT            S0, H0 }
  *a5 = (int)_S0;
  LOWORD(_S0) = a4[1];
  __asm { FCVT            S0, H0 }
  a5[1] = (int)_S0;
  LOWORD(_S0) = a4[2];
  __asm { FCVT            S0, H0 }
  a5[2] = (int)_S0;
  LOWORD(_S0) = a4[3];
  __asm { FCVT            S0, H0 }
  a5[3] = (int)result;
  return result;
}

uint64_t sub_2398026B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double ****v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (double ****)&v28;
    sub_23980295C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398028F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23980295C(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    sub_239802B00(&v25, (uint64_t)v32, a1, v13, v19);
  }
}

void sub_239802B00(_DWORD *a1, uint64_t a2, double *****a3, __int16 *a4, __int16 *a5)
{
  unsigned int v10;
  int v11;
  double ****v12;
  uint64_t v13;
  uint64_t v14;
  __int16 *v15;
  __int16 *v16;
  double **v17;
  double **v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v29;
  double v30;
  double v31;
  double v34;
  double v35;
  double v36;
  double v39;
  double v40;
  double v41;
  double v44;
  double v45;
  double v46;
  unsigned int v47;
  unsigned int v48;
  __int16 *v49;
  __int16 *v50;
  __int16 *v51;

  if (a1[8])
  {
    v10 = 0;
    do
    {
      v50 = a5;
      v51 = a4;
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      v11 = a1[5];
      if (v11)
      {
        v12 = *a3;
        v13 = 2 * a1[7];
        v14 = 2 * a1[6];
        v15 = a4;
        v16 = a5;
        do
        {
          *(_QWORD *)a2 = v15;
          *(_QWORD *)(a2 + 16) = v16;
          v18 = **v12;
          v17 = (*v12)[1];
          v19 = **v18;
          v20 = *v18[1];
          v21 = **v17;
          v22 = *v17[1];
          _H4 = *v15;
          __asm { FCVT            D4, H4 }
          v29 = v20 * (_D4 - v19);
          v30 = fmax(v29, 0.0);
          if (v29 <= 1.0)
            v31 = v30;
          else
            v31 = 1.0;
          *v16 = llround(v21 + v22 * v31);
          _H4 = v15[1];
          __asm { FCVT            D4, H4 }
          v34 = v20 * (_D4 - v19);
          v35 = fmax(v34, 0.0);
          if (v34 <= 1.0)
            v36 = v35;
          else
            v36 = 1.0;
          v16[1] = llround(v21 + v22 * v36);
          _H4 = v15[2];
          __asm { FCVT            D4, H4 }
          v39 = v20 * (_D4 - v19);
          v40 = fmax(v39, 0.0);
          if (v39 <= 1.0)
            v41 = v40;
          else
            v41 = 1.0;
          v16[2] = llround(v21 + v22 * v41);
          _H4 = v15[3];
          __asm { FCVT            D4, H4 }
          v44 = v20 * (_D4 - v19);
          v45 = fmax(v44, 0.0);
          if (v44 <= 1.0)
            v46 = v45;
          else
            v46 = 1.0;
          v16[3] = llround(v21 + v22 * v46);
          v15 = (__int16 *)((char *)v15 + v14);
          v16 = (__int16 *)((char *)v16 + v13);
          v50 = v16;
          v51 = v15;
          --v11;
        }
        while (v11);
      }
      sub_239802D24((uint64_t)a1, (__int16 **)a2, a3, &v51, &v50);
      a4 += a1[9];
      a5 += a1[10];
      ++v10;
    }
    while (v10 < a1[8]);
  }
  v50 = a5;
  v51 = a4;
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  if (a1[5])
  {
    v47 = 0;
    do
    {
      sub_239802D24((uint64_t)a1, (__int16 **)a2, a3, &v51, &v50);
      v48 = a1[5];
      v49 = &v51[a1[6]];
      v50 += a1[7];
      v51 = v49;
      ++v47;
    }
    while (v47 < v48);
  }
  sub_239802D24((uint64_t)a1, (__int16 **)a2, a3, &v51, &v50);
}

double sub_239802D24(uint64_t a1, __int16 **a2, double *****a3, __int16 **a4, __int16 **a5)
{
  __int16 *v5;
  __int16 *v6;
  double ***v7;
  double **v8;
  double **v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v20;
  double v21;
  double v22;
  double v25;
  double v26;
  double v27;
  double v30;
  double v31;
  double v32;
  double v35;
  double v36;
  double v37;
  double result;

  v5 = *a4;
  *a2 = *a4;
  v6 = *a5;
  a2[2] = *a5;
  v7 = **a3;
  v9 = *v7;
  v8 = v7[1];
  v10 = **v9;
  v11 = *v9[1];
  v12 = **v8;
  v13 = *v8[1];
  _H4 = *v5;
  __asm { FCVT            D4, H4 }
  v20 = v11 * (_D4 - v10);
  v21 = fmax(v20, 0.0);
  if (v20 <= 1.0)
    v22 = v21;
  else
    v22 = 1.0;
  *v6 = llround(v12 + v13 * v22);
  _H4 = v5[1];
  __asm { FCVT            D4, H4 }
  v25 = v11 * (_D4 - v10);
  v26 = fmax(v25, 0.0);
  if (v25 <= 1.0)
    v27 = v26;
  else
    v27 = 1.0;
  v6[1] = llround(v12 + v13 * v27);
  _H4 = v5[2];
  __asm { FCVT            D4, H4 }
  v30 = v11 * (_D4 - v10);
  v31 = fmax(v30, 0.0);
  if (v30 <= 1.0)
    v32 = v31;
  else
    v32 = 1.0;
  v6[2] = llround(v12 + v13 * v32);
  _H4 = v5[3];
  __asm { FCVT            D4, H4 }
  v35 = v11 * (_D4 - v10);
  v36 = fmax(v35, 0.0);
  if (v35 <= 1.0)
    v37 = v36;
  else
    v37 = 1.0;
  result = v12 + v13 * v37;
  v6[3] = llround(result);
  return result;
}

uint64_t sub_239802E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  __int16 v19;
  __int16 v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 31744;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_239802EDC(a1, a2, (uint64_t)v16);
}

uint64_t sub_239802EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_239803184(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239803120(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 ****sub_239803184(__int16 ****result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  __int16 ****v10;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    return sub_239803328(&v25, (__int16 **)v32, v10, v13, v19);
  }
  return result;
}

__int16 ****sub_239803328(_DWORD *a1, __int16 **a2, __int16 ****a3, __int16 *a4, __int16 *a5)
{
  int v10;
  int v11;
  __int16 *v12;
  __int16 *v13;
  __int16 **v14;
  __int16 *v15;
  uint64_t v16;
  uint64_t v17;
  __int16 *v18;
  int v27;
  __int16 *v34;
  __int16 *v41;
  unsigned int v50;

  if (a1[8])
  {
    v10 = 0;
    while (1)
    {
      *a2 = a4;
      a2[2] = a5;
      v11 = a1[5];
      v12 = a5;
      v13 = a4;
      if (v11)
        break;
LABEL_3:
      *a2 = v13;
      a2[2] = v12;
      sub_2398035A0(a3, a2, a2 + 2);
      a4 += a1[9];
      a5 += a1[10];
      if (++v10 >= a1[8])
        goto LABEL_30;
    }
    v14 = **a3;
    v15 = *v14;
    v16 = 2 * a1[7];
    v17 = 2 * a1[6];
    v13 = a4;
    v12 = a5;
    while (1)
    {
      *a2 = v13;
      a2[2] = v12;
      _H0 = *v13;
      _H1 = *v15;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = *v14[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          v27 = (int)_S0;
        else
          LOWORD(v27) = *v14[3];
      }
      else
      {
        LOWORD(v27) = *v14[1];
      }
      *v12 = v27;
      _H0 = v13[1];
      _H1 = *v15;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 < _S1)
        break;
      _H1 = *v14[2];
      __asm { FCVT            S1, H1 }
      if (_S0 > _S1)
      {
        v34 = v14[3];
        goto LABEL_17;
      }
      LODWORD(v34) = (int)_S0;
LABEL_19:
      v12[1] = (__int16)v34;
      _H0 = v13[2];
      _H1 = *v15;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = *v14[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
        {
          LODWORD(v41) = (int)_S0;
          goto LABEL_25;
        }
        v41 = v14[3];
      }
      else
      {
        v41 = v14[1];
      }
      LOWORD(v41) = *v41;
LABEL_25:
      v12[2] = (__int16)v41;
      _H0 = v13[3];
      _H1 = *v15;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 < _S1)
      {
        v18 = v14[1];
LABEL_7:
        v12[3] = *v18;
        v12 = (__int16 *)((char *)v12 + v16);
        v13 = (__int16 *)((char *)v13 + v17);
        if (!--v11)
          goto LABEL_3;
      }
      else
      {
        _H1 = *v14[2];
        __asm { FCVT            S1, H1 }
        if (_S0 > _S1)
        {
          v18 = v14[3];
          goto LABEL_7;
        }
        v12[3] = (int)_S0;
        v12 = (__int16 *)((char *)v12 + v16);
        v13 = (__int16 *)((char *)v13 + v17);
        if (!--v11)
          goto LABEL_3;
      }
    }
    v34 = v14[1];
LABEL_17:
    LOWORD(v34) = *v34;
    goto LABEL_19;
  }
LABEL_30:
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v50 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      sub_2398035A0(a3, a2, a2 + 2);
      a4 += a1[6];
      a5 += a1[7];
      ++v50;
    }
    while (v50 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  return sub_2398035A0(a3, a2, a2 + 2);
}

__int16 ****sub_2398035A0(__int16 ****result, __int16 **a2, _WORD **a3)
{
  __int16 *v3;
  _WORD *v4;
  __int16 **v5;
  __int16 *v6;
  int v15;
  __int16 *v22;
  __int16 *v29;

  v3 = *a2;
  v4 = *a3;
  v5 = **result;
  v6 = *v5;
  _H0 = **a2;
  _H1 = **v5;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 >= _S1)
  {
    _H1 = *v5[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      v15 = (int)_S0;
    else
      LOWORD(v15) = *v5[3];
  }
  else
  {
    LOWORD(v15) = *v5[1];
  }
  *v4 = v15;
  _H0 = v3[1];
  _H1 = *v6;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 < _S1)
  {
    v22 = v5[1];
LABEL_10:
    LOWORD(v22) = *v22;
    goto LABEL_12;
  }
  _H1 = *v5[2];
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v22 = v5[3];
    goto LABEL_10;
  }
  LODWORD(v22) = (int)_S0;
LABEL_12:
  v4[1] = (_WORD)v22;
  _H0 = v3[2];
  _H1 = *v6;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 < _S1)
  {
    v29 = v5[1];
LABEL_16:
    LOWORD(v29) = *v29;
    goto LABEL_18;
  }
  _H1 = *v5[2];
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v29 = v5[3];
    goto LABEL_16;
  }
  LODWORD(v29) = (int)_S0;
LABEL_18:
  v4[2] = (_WORD)v29;
  _H0 = v3[3];
  _H1 = *v6;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = *v5[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      v4[3] = (int)_S0;
    else
      v4[3] = *v5[3];
  }
  else
  {
    v4[3] = *v5[1];
  }
  return result;
}

double sub_2398036E8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397FD1A4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC150;
  sub_2397EA604((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239803834(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2397ED7C4((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398037D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398037FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239803818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239803834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v17, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v17 = 0;
LABEL_17:
  sub_239622218(a2, &v16);
  v13.n128_u64[0] = sub_2398039D8(a1, a2);
  v14 = v16;
  v16 = 0;
  if (v14)
    (*(void (**)(uint64_t, float))(*(_QWORD *)v14 + 8))(v14, v13.n128_f32[0]);
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v13);
  return result;
}

void sub_239803974(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

__int16 sub_2398039D8@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  __int16 *v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  __int16 v26;
  uint64_t v28;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 != *(_DWORD *)(a2 + 108) || v4 != v5)
  {
    v28 = (4 * *(_DWORD *)(a1 + 56));
    sub_239803BA0(a1, a2, &v28);
    return v7;
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
  v9 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(_QWORD *)(v3 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 128) && v16)
  {
    a1 = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
    v16 = *(_QWORD *)(a2 + 32);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v17 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v17 < 0xF || (unint64_t)(v16 - v9) < 0x20)
    {
      v20 = (_WORD *)v16;
      v21 = (__int16 *)v9;
    }
    else
    {
      v18 = v17 + 1;
      v19 = (v17 + 1) & 0xFFFFFFFFFFFFFFF0;
      v20 = (_WORD *)(v16 + 2 * v19);
      v21 = (__int16 *)(v9 + 2 * v19);
      v22 = (__int128 *)(v9 + 16);
      v23 = (_OWORD *)(v16 + 16);
      v24 = v19;
      do
      {
        v7 = *(v22 - 1);
        v25 = *v22;
        *(v23 - 1) = v7;
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 16;
      }
      while (v24);
      if (v18 == v19)
        return v7;
    }
    do
    {
      v26 = *v21++;
      LOWORD(v7) = v26;
      *v20++ = v26;
    }
    while (v21 != (__int16 *)(v9 + 2 * v8));
  }
  return v7;
}

uint64_t sub_239803BA0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v19 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v19, v6, 0);
LABEL_17:
  sub_239622218(a2, &v18);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    v15.n128_f64[0] = sub_2397DDAD4(a3, a1, a2);
  v16 = v18;
  v18 = 0;
  if (v16)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v16 + 8))(v16, v15);
  result = v19;
  v19 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_239803D08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_239803D6C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397FD1A4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC260;
  sub_2397EDAFC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239803E80(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239803E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239803E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239803E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB950;
  sub_2397F06F4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEC7B8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397F0960(a2, (uint64_t)(a4 + 1));
}

void sub_239803F6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239803F80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239803F94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C8588((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239803FA8(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239803FF0(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239803FB8(uint64_t **a1, uint64_t a2)
{
  return sub_239804D80(**a1, (*a1)[1], a2);
}

uint64_t sub_239803FC8(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_239804154(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239803FF0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  float v13;
  double v14;
  float v15;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  unint64_t v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v12 = -3.40282347e38;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        v12 = *(double *)(a3 + 24);
      v13 = v12;
      v14 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v14 = *(double *)(a3 + 32);
      v15 = v14;
      __asm
      {
        FCVT            S4, H0
        FCVT            S5, H1
      }
      if (v13 != _S4 || v15 != _S5)
        goto LABEL_15;
      return sub_239804154(a1, a2, (uint64_t)v26, _Q0);
    }
  }
  else
  {
    _Q0.n128_u32[0] = 1006632960;
    LOWORD(_S1) = 15360;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v15 = 1.0;
  v13 = 0.0;
  __asm
  {
    FCVT            S4, H0
    FCVT            S5, H1
  }
  if (_S4 != 0.0 || 1.0 != _S5)
  {
LABEL_15:
    __asm { FCVT            D0, H0 }
    v30 = _Q0.n128_u64[0];
    __asm { FCVT            D1, H1 }
    v28 = v13;
    v29 = 1.0 / (_D1 - _Q0.n128_f64[0]);
    _Q0.n128_f64[0] = v15 - v13;
    v27 = _Q0.n128_f64[0];
    v26[0] = &v30;
    v26[1] = &v29;
    v25[0] = &v28;
    v25[1] = &v27;
    v24[0] = v26;
    v24[1] = v25;
    return sub_23980471C(a1, a2, (uint64_t)v24, _Q0);
  }
  return sub_239804154(a1, a2, (uint64_t)v26, _Q0);
}

uint64_t sub_239804154(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2398043FC((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239804398(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2398043FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2398045A0(&v26, (__int16 **)v33, a1, v13, v19);
  }
  return result;
}

float sub_2398045A0(_DWORD *a1, __int16 **a2, uint64_t a3, __int16 *a4, __int16 *a5)
{
  unsigned int v5;
  int v15;
  __int16 *v16;
  __int16 *v17;
  uint64_t v18;
  uint64_t v19;
  int v25;
  uint64_t v26;
  uint64_t v27;
  float result;

  if (a1[8])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v15 = a1[5];
      v16 = a5;
      v17 = a4;
      if (v15)
      {
        v18 = 2 * a1[6];
        v19 = 4 * a1[7];
        v16 = a5;
        v17 = a4;
        do
        {
          *a2 = v17;
          a2[2] = v16;
          _H0 = *v17;
          __asm { FCVT            S0, H0 }
          *(_DWORD *)v16 = _S0;
          LOWORD(_S0) = v17[1];
          __asm { FCVT            S0, H0 }
          *((_DWORD *)v16 + 1) = _S0;
          LOWORD(_S0) = v17[2];
          __asm { FCVT            S0, H0 }
          *((_DWORD *)v16 + 2) = _S0;
          LOWORD(_S0) = v17[3];
          __asm { FCVT            S0, H0 }
          *((_DWORD *)v16 + 3) = _S0;
          v17 = (__int16 *)((char *)v17 + v18);
          v16 = (__int16 *)((char *)v16 + v19);
          --v15;
        }
        while (v15);
      }
      *a2 = v17;
      a2[2] = v16;
      _H0 = *v17;
      __asm { FCVT            S0, H0 }
      *(_DWORD *)v16 = _S0;
      LOWORD(_S0) = v17[1];
      __asm { FCVT            S0, H0 }
      *((_DWORD *)v16 + 1) = _S0;
      LOWORD(_S0) = v17[2];
      __asm { FCVT            S0, H0 }
      *((_DWORD *)v16 + 2) = _S0;
      LOWORD(_S0) = v17[3];
      __asm { FCVT            S0, H0 }
      *((_DWORD *)v16 + 3) = _S0;
      a4 += a1[9];
      a5 += 2 * a1[10];
      ++v5;
    }
    while (v5 < a1[8]);
  }
  *a2 = a4;
  a2[2] = a5;
  v25 = a1[5];
  if (v25)
  {
    v26 = 2 * a1[6];
    v27 = 4 * a1[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      _H0 = *a4;
      __asm { FCVT            S0, H0 }
      *(_DWORD *)a5 = _S0;
      LOWORD(_S0) = a4[1];
      __asm { FCVT            S0, H0 }
      *((_DWORD *)a5 + 1) = _S0;
      LOWORD(_S0) = a4[2];
      __asm { FCVT            S0, H0 }
      *((_DWORD *)a5 + 2) = _S0;
      LOWORD(_S0) = a4[3];
      __asm { FCVT            S0, H0 }
      *((_DWORD *)a5 + 3) = _S0;
      a4 = (__int16 *)((char *)a4 + v26);
      a5 = (__int16 *)((char *)a5 + v27);
      --v25;
    }
    while (v25);
  }
  *a2 = a4;
  a2[2] = a5;
  _H0 = *a4;
  __asm { FCVT            S0, H0 }
  *(_DWORD *)a5 = _S0;
  LOWORD(_S0) = a4[1];
  __asm { FCVT            S0, H0 }
  *((_DWORD *)a5 + 1) = _S0;
  LOWORD(_S0) = a4[2];
  __asm { FCVT            S0, H0 }
  *((_DWORD *)a5 + 2) = _S0;
  LOWORD(_S0) = a4[3];
  __asm { FCVT            S0, H0 }
  *((float *)a5 + 3) = result;
  return result;
}

uint64_t sub_23980471C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f32[0] = sub_2398049C4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239804960(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2398049C4(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_239804BAC(&v27, (__int16 **)v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    return sub_239804BAC(&v27, (__int16 **)v34, a1, v13, v19);
  }
  return result;
}

float sub_239804BAC(_DWORD *a1, __int16 **a2, double *****a3, __int16 *a4, float *a5)
{
  int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v21;
  double v22;
  double v23;
  double v26;
  double v27;
  double v28;
  double v31;
  double v32;
  double v33;
  double v36;
  double v37;
  double v38;
  float v39;
  double v42;
  double v43;
  double v44;
  double v47;
  double v48;
  double v49;
  double v52;
  double v53;
  double v54;
  double v57;
  double v58;
  double v59;
  float result;

  *a2 = a4;
  a2[2] = (__int16 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  if (v5)
  {
    v13 = 2 * a1[6];
    v14 = 4 * a1[7];
    do
    {
      *a2 = a4;
      a2[2] = (__int16 *)a5;
      _H6 = *a4;
      __asm { FCVT            D6, H6 }
      v21 = v10 * (_D6 - v9);
      v22 = fmax(v21, 0.0);
      if (v21 <= 1.0)
        v23 = v22;
      else
        v23 = 1.0;
      _S6 = v11 + v12 * v23;
      *a5 = _S6;
      LOWORD(_S6) = a4[1];
      __asm { FCVT            D6, H6 }
      v26 = v10 * (_D6 - v9);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      _S6 = v11 + v12 * v28;
      a5[1] = _S6;
      LOWORD(_S6) = a4[2];
      __asm { FCVT            D6, H6 }
      v31 = v10 * (_D6 - v9);
      v32 = fmax(v31, 0.0);
      if (v31 <= 1.0)
        v33 = v32;
      else
        v33 = 1.0;
      _S6 = v11 + v12 * v33;
      a5[2] = _S6;
      LOWORD(_S6) = a4[3];
      __asm { FCVT            D6, H6 }
      v36 = v10 * (_D6 - v9);
      v37 = fmax(v36, 0.0);
      if (v36 <= 1.0)
        v38 = v37;
      else
        v38 = 1.0;
      v39 = v11 + v12 * v38;
      a5[3] = v39;
      a4 = (__int16 *)((char *)a4 + v13);
      a5 = (float *)((char *)a5 + v14);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = (__int16 *)a5;
  _H4 = *a4;
  __asm { FCVT            D4, H4 }
  v42 = v10 * (_D4 - v9);
  v43 = fmax(v42, 0.0);
  if (v42 <= 1.0)
    v44 = v43;
  else
    v44 = 1.0;
  _S4 = v11 + v12 * v44;
  *a5 = _S4;
  LOWORD(_S4) = a4[1];
  __asm { FCVT            D4, H4 }
  v47 = v10 * (_D4 - v9);
  v48 = fmax(v47, 0.0);
  if (v47 <= 1.0)
    v49 = v48;
  else
    v49 = 1.0;
  _S4 = v11 + v12 * v49;
  a5[1] = _S4;
  LOWORD(_S4) = a4[2];
  __asm { FCVT            D4, H4 }
  v52 = v10 * (_D4 - v9);
  v53 = fmax(v52, 0.0);
  if (v52 <= 1.0)
    v54 = v53;
  else
    v54 = 1.0;
  _S4 = v11 + v12 * v54;
  a5[2] = _S4;
  LOWORD(_S4) = a4[3];
  __asm { FCVT            D4, H4 }
  v57 = v10 * (_D4 - v9);
  v58 = fmax(v57, 0.0);
  if (v57 <= 1.0)
    v59 = v58;
  else
    v59 = 1.0;
  result = v11 + v12 * v59;
  a5[3] = result;
  return result;
}

uint64_t sub_239804D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  _QWORD v14[4];
  __int16 v15;
  __int16 v16;
  float v17;
  float v18;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 1.0;
    if (v3 < -3.40282347e38)
      v3 = -3.40282347e38;
    _S0 = v3;
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    _S1 = v4;
    v17 = _S1;
    v18 = _S0;
    __asm { FCVT            H0, S0 }
    v16 = _H0;
    __asm { FCVT            H0, S1 }
  }
  else
  {
    v17 = 1.0;
    v18 = 0.0;
    _H0 = 15360;
    v16 = 0;
  }
  v15 = _H0;
  v14[0] = &v16;
  v14[1] = &v18;
  v14[2] = &v15;
  v14[3] = &v17;
  return sub_239804E48(a1, a2, (uint64_t)v14);
}

uint64_t sub_239804E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_2398050F0(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23980508C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2398050F0(__int16 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    sub_239805294(&v25, (uint64_t)v32, a1, v13, v19);
  }
}

void sub_239805294(_DWORD *a1, uint64_t a2, __int16 ****a3, __int16 *a4, float *a5)
{
  int v10;
  int v11;
  __int16 ***v12;
  uint64_t v13;
  uint64_t v14;
  __int16 *v15;
  float *v16;
  float *v17;
  __int16 **v19;
  __int16 *v20;
  float *v29;
  float *v36;
  float *v43;
  unsigned int v51;
  unsigned int v52;
  __int16 *v53;
  float *v54;
  __int16 *v55;

  if (a1[8])
  {
    v10 = 0;
    while (1)
    {
      v54 = a5;
      v55 = a4;
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      v11 = a1[5];
      if (v11)
        break;
LABEL_3:
      sub_2398054E0((uint64_t)a1, (__int16 **)a2, a3, &v55, &v54);
      a4 += a1[9];
      a5 += a1[10];
      if (++v10 >= a1[8])
        goto LABEL_27;
    }
    v12 = *a3;
    v13 = 4 * a1[7];
    v14 = 2 * a1[6];
    v15 = a4;
    v16 = a5;
    while (1)
    {
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 16) = v16;
      v19 = *v12;
      v20 = **v12;
      _H0 = *v15;
      _H1 = *v20;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 >= _S1)
      {
        _H1 = *v19[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_14;
        v29 = (float *)v19[3];
      }
      else
      {
        v29 = (float *)v19[1];
      }
      _S0 = *v29;
LABEL_14:
      *v16 = _S0;
      _H0 = v15[1];
      _H1 = *v20;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = *v19[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_19;
        v36 = (float *)v19[3];
      }
      else
      {
        v36 = (float *)v19[1];
      }
      _S0 = *v36;
LABEL_19:
      v16[1] = _S0;
      _H0 = v15[2];
      _H1 = *v20;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = *v19[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_24;
        v43 = (float *)v19[3];
      }
      else
      {
        v43 = (float *)v19[1];
      }
      _S0 = *v43;
LABEL_24:
      v16[2] = _S0;
      _H0 = v15[3];
      _H1 = *v20;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 < _S1)
      {
        v17 = (float *)v19[1];
      }
      else
      {
        _H1 = *v19[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_8;
        v17 = (float *)v19[3];
      }
      _S0 = *v17;
LABEL_8:
      v16[3] = _S0;
      v15 = (__int16 *)((char *)v15 + v14);
      v16 = (float *)((char *)v16 + v13);
      v54 = v16;
      v55 = v15;
      if (!--v11)
        goto LABEL_3;
    }
  }
LABEL_27:
  v54 = a5;
  v55 = a4;
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  if (a1[5])
  {
    v51 = 0;
    do
    {
      sub_2398054E0((uint64_t)a1, (__int16 **)a2, a3, &v55, &v54);
      v52 = a1[5];
      v53 = &v55[a1[6]];
      v54 += a1[7];
      v55 = v53;
      ++v51;
    }
    while (v51 < v52);
  }
  sub_2398054E0((uint64_t)a1, (__int16 **)a2, a3, &v55, &v54);
}

void sub_2398054E0(uint64_t a1, __int16 **a2, __int16 ****a3, __int16 **a4, float **a5)
{
  __int16 *v5;
  float *v6;
  __int16 **v7;
  __int16 *v8;
  float *v17;
  float *v24;
  float *v31;
  float *v38;

  v5 = *a4;
  *a2 = *a4;
  v6 = *a5;
  a2[2] = (__int16 *)*a5;
  v7 = **a3;
  v8 = *v7;
  _H0 = *v5;
  _H1 = **v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = *v7[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      goto LABEL_6;
    v17 = (float *)v7[3];
  }
  else
  {
    v17 = (float *)v7[1];
  }
  _S0 = *v17;
LABEL_6:
  *v6 = _S0;
  _H0 = v5[1];
  _H1 = *v8;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = *v7[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      goto LABEL_11;
    v24 = (float *)v7[3];
  }
  else
  {
    v24 = (float *)v7[1];
  }
  _S0 = *v24;
LABEL_11:
  v6[1] = _S0;
  _H0 = v5[2];
  _H1 = *v8;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = *v7[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      goto LABEL_16;
    v31 = (float *)v7[3];
  }
  else
  {
    v31 = (float *)v7[1];
  }
  _S0 = *v31;
LABEL_16:
  v6[2] = _S0;
  _H0 = v5[3];
  _H1 = *v8;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 < _S1)
  {
    v38 = (float *)v7[1];
LABEL_20:
    _S0 = *v38;
    goto LABEL_21;
  }
  _H1 = *v7[2];
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v38 = (float *)v7[3];
    goto LABEL_20;
  }
LABEL_21:
  v6[3] = _S0;
}

double sub_239805600@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2397FD1A4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE69A0;
  sub_239805808((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239805714(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398056DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398056F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239805714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE5B88;
  sub_239767D98(a2, &v12);
  sub_239805E94(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239768004(a2, (uint64_t)(a3 + 1));
}

void sub_2398057CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398057E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975DB84((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398057F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239805808(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_239805908(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_2398287E4(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2398058EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_239805908(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 39)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239805B48(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_239805AE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_239805B48(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239805BC0();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239805BC0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933238);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933238))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397411C4();
    sub_239805DC4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_239805DC4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933220, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933220, &dword_23940C000);
          __cxa_guard_release(&qword_256933238);
          return &stru_256933220;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933220;
}

void sub_239805D10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933238);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933238);
  _Unwind_Resume(a1);
}

void sub_239805DC4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_239805E58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239805E94(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23980612C(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398060C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23980612C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  _WORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_WORD **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_239806314(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    *(_QWORD *)&result = sub_239806314(&v27, v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_239806314@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _WORD *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;
  __int16 result;
  __int16 v10;
  __int16 v11;
  __int16 v12;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
      v6 = a4[1];
      v7 = a4[2];
      v8 = a4[3];
      *a5 = *a4;
      *(_WORD *)(a2[2] + 6) = v6;
      *(_WORD *)(a2[2] + 4) = v7;
      *(_WORD *)(a2[2] + 2) = v8;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
  }
  result = *a4;
  v10 = a4[1];
  v11 = a4[2];
  v12 = a4[3];
  *a5 = *a4;
  *(_WORD *)(a2[2] + 6) = v10;
  *(_WORD *)(a2[2] + 4) = v11;
  *(_WORD *)(a2[2] + 2) = v12;
  return result;
}

void sub_2398063D8(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398063FC@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398064E0(a1, a2);
}

double sub_239806408@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239807E38(a1, a2);
}

double sub_239806414@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239809020(a1, a2);
}

double sub_239806420@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23980973C(a1, a2);
}

double sub_23980642C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23980B174(a1, a2);
}

double sub_239806438@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23980C9E0(a1, a2);
}

double sub_239806444@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23980EB48(a1, a2);
}

double sub_239806450@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23980E534(a1, a2);
}

uint64_t sub_2398064E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_239806714(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEC7E0;
  sub_2398069A4((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398065F4(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398065BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398065D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398065F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEB098;
  sub_239807AF8(a2, &v12);
  sub_239807114(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239807D64(a2, (uint64_t)(a3 + 1));
}

void sub_2398066B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398066C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BE878((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398066D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_2398066EC(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239806714(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 36;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_239806854((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397F0960((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_239806818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239806840(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239806854(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 36);
  *a2 = &off_250AEC260;
  sub_2397EDAFC((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_23980696C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239806990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398069A4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_239806B88(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 2) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239827154(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_239806A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_239806AA4(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239806AE0()
{
  return 16;
}

uint64_t sub_239806AE8(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_239806AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_239806B0C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_239806B88(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 16)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239806DC8(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_239806D68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_239806DC8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239806E40();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239806E40()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933258);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933258))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397AF6B4();
    sub_239807044((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_239807044((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933240, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933240, &dword_23940C000);
          __cxa_guard_release(&qword_256933258);
          return &stru_256933240;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933240;
}

void sub_239806F90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933258);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933258);
  _Unwind_Resume(a1);
}

void sub_239807044(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2398070D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239807114(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_2398072E8(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398072C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398072E8(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_239807484(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_f32[0] = sub_2398078E0((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_239807460(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_239807484(uint64_t *result)
{
  _DWORD *v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  BOOL v9;
  BOOL v11;
  uint64_t v13;

  v1 = (_DWORD *)*result;
  v2 = result[1];
  v3 = *(_DWORD *)(*result + 48);
  if (v3 == *(_DWORD *)(v2 + 24))
  {
    v4 = v1[8];
    if (v3 == v1[11] * v4)
    {
      v5 = v1[13];
      v6 = v1[9];
      v7 = v6 * v3;
      if (v5 == *(_DWORD *)(v2 + 28) && v5 == v7)
        return (uint64_t *)sub_23980754C((void *)*result, (void **)v2);
      v13 = v4 * v6;
      if (v4)
        v9 = v6 == 0;
      else
        v9 = 1;
      if (!v9 && v1[10] != 0)
        return (uint64_t *)sub_239807638((unsigned int *)&v13, (uint64_t)v1, v2);
      return result;
    }
  }
  else
  {
    v4 = v1[8];
  }
  v13 = v4;
  if (v4)
    v11 = v1[9] == 0;
  else
    v11 = 1;
  if (!v11 && v1[10] != 0)
    return sub_23980776C(&v13, (uint64_t)v1, v2);
  return result;
}

void *sub_23980754C(void *result, void **a2)
{
  uint64_t v3;
  const void *v4;
  BOOL v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;

  v3 = (*((_DWORD *)result + 10) * *((_DWORD *)result + 9) * *((_DWORD *)result + 8));
  v4 = (const void *)*((_QWORD *)result + 3);
  if (*((_BYTE *)result + 72))
    v5 = v4 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v6 = result;
    v7 = *((_QWORD *)result + 1);
    v8 = (std::__shared_weak_count *)*((_QWORD *)result + 2);
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    result = (void *)(*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v7 + 88))(v7, 0, "unknown location");
    v4 = (const void *)v6[3];
  }
  if ((_DWORD)v3)
    v12 = v4 == 0;
  else
    v12 = 0;
  if (v12)
    sub_239EBF50C((uint64_t)result, (uint64_t)v4);
  if ((_DWORD)v3)
    return memmove(*a2, v4, 4 * v3);
  return result;
}

unsigned int *sub_239807638(unsigned int *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  _QWORD v27[6];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t *)result;
    v21 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 24);
    v22 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v20 = 0;
    v23 = v3 - 1;
    v24 = v11 | (v12 << 32);
    v25 = v5 - 1;
    v26 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v13 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(char **)(a2 + 24);
    }
    v19 = *(char **)a3;
    memset(&v27[2], 0, 32);
    v27[0] = 0;
    v27[1] = 1;
    return sub_239793014((unsigned int *)&v20, (uint64_t)v27, v10, v13, v19);
  }
  return result;
}

uint64_t *sub_23980776C(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  char *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  unsigned int v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  _OWORD v29[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v23 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 24);
    v24 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v22 = 0;
    v25 = v3 - 1;
    v26 = v11 | (v12 << 32);
    v13 = v5 - 1;
    v27 = v13;
    v28 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v14 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(char **)(a2 + 24);
      v13 = v27;
    }
    v20 = *(char **)a3;
    memset(v29, 0, sizeof(v29));
    if (v13)
    {
      v21 = 0;
      do
      {
        sub_2397931F4(&v22, (char **)v29, v10, v14, v20);
        v14 += 4 * v28;
        v20 += 4 * HIDWORD(v28);
        ++v21;
      }
      while (v21 < v27);
    }
    return (uint64_t *)sub_2397931F4(&v22, (char **)v29, v10, v14, v20);
  }
  return result;
}

float sub_2398078E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  int v20;
  float *v21;
  int v22;
  _DWORD *v23;
  _DWORD *v24;
  _DWORD *v25;
  _DWORD *v26;
  int v27;
  float result;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a2 + 48);
    v11 = *(unsigned int *)(a2 + 52);
    v12 = *(unsigned int *)(a3 + 24);
    v13 = *(unsigned int *)(a3 + 28);
    v14 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(float **)(a2 + 24);
    }
    v20 = v3 - 1;
    v21 = *(float **)a3;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          *v21 = *v14;
          v21[1] = v14[1];
          v21[2] = v14[2];
          v21[3] = v14[3];
          v14 += v11;
          v21 += v13;
          --v9;
        }
        while (v9);
LABEL_27:
        *v21 = *v14;
        v21[1] = v14[1];
        v21[2] = v14[2];
        result = v14[3];
        v21[3] = result;
        return result;
      }
      v22 = 0;
      v23 = v21 + 2;
      v24 = v14 + 2;
      do
      {
        v25 = v24;
        v26 = v23;
        v27 = v3 - 1;
        do
        {
          *(v26 - 2) = *(v25 - 2);
          *(v26 - 1) = *(v25 - 1);
          *v26 = *v25;
          v26[1] = v25[1];
          v26 += v12;
          v25 += v10;
          --v27;
        }
        while (v27);
        *(v26 - 2) = *(v25 - 2);
        *(v26 - 1) = *(v25 - 1);
        *v26 = *v25;
        v26[1] = v25[1];
        v14 += v11;
        v21 += v13;
        ++v22;
        v23 += v13;
        v24 += v11;
      }
      while (v22 != v9);
    }
    if (v3 != 1)
    {
      do
      {
        *v21 = *v14;
        v21[1] = v14[1];
        v21[2] = v14[2];
        v21[3] = v14[3];
        v14 += v10;
        v21 += v12;
        --v20;
      }
      while (v20);
    }
    goto LABEL_27;
  }
  return result;
}

void sub_239807AF8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239807C00(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239807BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239807C00(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 16);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_239807D50(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239807D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826920(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 4);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 16;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_239807E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_239807E38@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239806714(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC8D8;
  sub_239808068((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239807F4C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239807F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239807F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239807F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE1E48;
  sub_239808CE0(a2, &v12);
  sub_2398087D8(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239808F4C(a2, (uint64_t)(a3 + 1));
}

void sub_239808004(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239808018(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643FDC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23980802C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_239808040(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239808068(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_23980824C(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 2) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239827FD0(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_23980814C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_239808168(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2398081A4()
{
  return 28;
}

uint64_t sub_2398081AC(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2398081B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_2398081D0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_23980824C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 28)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23980848C(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_23980842C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_23980848C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239808504();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239808504()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933278);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933278))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_23964E8F0();
    sub_239808708((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_239808708((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933260, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933260, &dword_23940C000);
          __cxa_guard_release(&qword_256933278);
          return &stru_256933260;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933260;
}

void sub_239808654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933278);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933278);
  _Unwind_Resume(a1);
}

void sub_239808708(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23980879C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398087D8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_239808A70(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239808A0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239808A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  int8x16_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  int8x16_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(int8x16_t **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(int8x16_t **)(a2 + 24);
    }
    v19 = *(int8x16_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(int8x16_t **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_239808C58(&v27, (int8x16_t **)v34, a1, v13, v19);
        v13 = (int8x16_t *)((char *)v13 + 4 * v33);
        v19 = (int8x16_t *)((char *)v19 + 4 * HIDWORD(v33));
      }
    }
    *(_QWORD *)&result = sub_239808C58(&v27, (int8x16_t **)v34, a1, v13, v19).u64[0];
  }
  return result;
}

int8x16_t sub_239808C58(_DWORD *a1, int8x16_t **a2, uint64_t a3, int8x16_t *a4, int8x16_t *a5)
{
  int v5;
  int8x16_t result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  if (v5)
  {
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
      *a5 = vextq_s8(*a4, *a4, 4uLL);
      a4 = (int8x16_t *)((char *)a4 + 4 * a1[6]);
      a5 = (int8x16_t *)((char *)a5 + 4 * a1[7]);
      --v5;
    }
    while (v5);
    *a2 = a4;
    a2[2] = a5;
    result = vextq_s8(*a4, *a4, 4uLL);
    *a5 = result;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
    result = vextq_s8(*a4, *a4, 4uLL);
    *a5 = result;
  }
  return result;
}

void sub_239808CE0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239808DE8(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239808DCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239808DE8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 28);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_239808F38(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239808F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826920(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 4);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 28;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_239809000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_239809020@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239806714(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE08B8;
  sub_23960A1CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239809134(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398090FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239809118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239809134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE1D50;
  sub_2397651A0(a2, &v12);
  sub_239809228(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_23970B1B4(a2, (uint64_t)(a3 + 1));
}

void sub_2398091EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239809200(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643F74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239809214(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239809228(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2398094C0(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23980945C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398094C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  int32x4_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  int8x16_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(int32x4_t **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(int32x4_t **)(a2 + 24);
    }
    v19 = *(int8x16_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(int8x16_t **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2398096A8(&v27, (int32x4_t **)v34, a1, v13, v19);
        v13 = (int32x4_t *)((char *)v13 + 4 * v33);
        v19 = (int8x16_t *)((char *)v19 + 4 * HIDWORD(v33));
      }
    }
    *(_QWORD *)&result = sub_2398096A8(&v27, (int32x4_t **)v34, a1, v13, v19).u64[0];
  }
  return result;
}

int8x16_t sub_2398096A8(_DWORD *a1, int32x4_t **a2, uint64_t a3, int32x4_t *a4, int8x16_t *a5)
{
  int v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t result;
  int8x16_t v9;

  *a2 = a4;
  a2[2] = (int32x4_t *)a5;
  v5 = a1[5];
  if (v5)
  {
    do
    {
      *a2 = a4;
      a2[2] = (int32x4_t *)a5;
      if (!a4)
        sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
      v6 = (int8x16_t)vrev64q_s32(*a4);
      *a5 = vextq_s8(v6, v6, 8uLL);
      a4 = (int32x4_t *)((char *)a4 + 4 * a1[6]);
      a5 = (int8x16_t *)((char *)a5 + 4 * a1[7]);
      --v5;
    }
    while (v5);
    *a2 = a4;
    a2[2] = (int32x4_t *)a5;
    v7 = (int8x16_t)vrev64q_s32(*a4);
    result = vextq_s8(v7, v7, 8uLL);
    *a5 = result;
  }
  else
  {
    *a2 = a4;
    a2[2] = (int32x4_t *)a5;
    if (!a4)
      sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
    v9 = (int8x16_t)vrev64q_s32(*a4);
    result = vextq_s8(v9, v9, 8uLL);
    *a5 = result;
  }
  return result;
}

double sub_23980973C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239806714(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6538;
  sub_2397E44CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239809850(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239809818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239809834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239809850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE56F0;
  sub_239765EEC(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEC9C0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239766158(a2, (uint64_t)(a4 + 1));
}

void sub_23980993C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239809950(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239809964(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239758F54((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239809978(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398099C0(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239809988(uint64_t **a1, uint64_t a2)
{
  return sub_23980A8AC(**a1, (*a1)[1], a2);
}

uint64_t sub_239809998(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_239809AF0(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398099C0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  unsigned int v6;
  double v7;
  double v8;
  unsigned int v9;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  double v16;
  double v17;
  double v18;
  double v19;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v7 = *(double *)(a3 + 24);
      if (v7 < 0.0)
        v7 = 0.0;
      v6 = (int)v7;
      v8 = 255.0;
      if (*(double *)(a3 + 32) <= 255.0)
        v8 = *(double *)(a3 + 32);
      v9 = (int)v8;
      if (a4.n128_f32[0] != (float)v6 || v5 != (float)(int)v8)
        goto LABEL_15;
      return sub_239809AF0(a1, a2, (uint64_t)v15, a4);
    }
  }
  else
  {
    v5 = 1.0;
    a4.n128_u32[0] = 0;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v9 = 255;
  if (a4.n128_f32[0] != (float)v6 || v5 != (float)0xFFu)
  {
LABEL_15:
    v19 = a4.n128_f32[0];
    v17 = (double)v6;
    v18 = 1.0 / (v5 - a4.n128_f32[0]);
    a4.n128_f64[0] = (double)v9 - (double)v6;
    v16 = a4.n128_f64[0];
    v15[0] = &v19;
    v15[1] = &v18;
    v14[0] = &v17;
    v14[1] = &v16;
    v13[0] = v15;
    v13[1] = v14;
    return sub_23980A054(a1, a2, (uint64_t)v13, a4);
  }
  return sub_239809AF0(a1, a2, (uint64_t)v15, a4);
}

uint64_t sub_239809AF0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239809D98((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239809D34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_239809D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_239809F80(&v27, (float **)v34, a1, v13, v19);
        v13 += v33;
        v19 = (float *)((char *)v19 + HIDWORD(v33));
      }
    }
    return sub_239809F80(&v27, (float **)v34, a1, v13, v19);
  }
  return result;
}

float sub_239809F80(_DWORD *a1, float **a2, uint64_t a3, float *a4, float *a5)
{
  unsigned int v5;
  float result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      *(_BYTE *)a5 = (int)*a4;
      *((_BYTE *)a2[2] + 1) = (int)(*a2)[1];
      *((_BYTE *)a2[2] + 2) = (int)(*a2)[2];
      *((_BYTE *)a2[2] + 3) = (int)(*a2)[3];
      a4 += a1[6];
      a5 = (float *)((char *)a5 + a1[7]);
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  *(_BYTE *)a5 = (int)*a4;
  *((_BYTE *)a2[2] + 1) = (int)(*a2)[1];
  *((_BYTE *)a2[2] + 2) = (int)(*a2)[2];
  result = (*a2)[3];
  *((_BYTE *)a2[2] + 3) = (int)result;
  return result;
}

uint64_t sub_23980A054(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_23980A2FC(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23980A298(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23980A2FC(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_23980A4A0(&v26, (float **)v33, a1, v13, v19);
  }
  return result;
}

double sub_23980A4A0(_DWORD *a1, float **a2, double *****a3, float *a4, float *a5)
{
  unsigned int v10;
  float *v11;
  float *v12;
  unsigned int v13;
  double ***v14;
  double **v15;
  double **v16;
  double v17;
  double v18;
  double v19;
  double ***v20;
  double **v21;
  double **v22;
  double v23;
  double v24;
  double v25;
  double ***v26;
  double **v27;
  double **v28;
  double v29;
  double v30;
  double v31;
  double ***v32;
  double **v33;
  double **v34;
  double v35;
  double v36;
  double v37;
  unsigned int v38;

  if (a1[8])
  {
    v10 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v11 = a5;
      v12 = a4;
      if (a1[5])
      {
        v13 = 0;
        v12 = a4;
        v11 = a5;
        do
        {
          *a2 = v12;
          a2[2] = v11;
          v14 = **a3;
          v16 = *v14;
          v15 = v14[1];
          v17 = (*v12 - **v16) * *v16[1];
          v18 = fmax(v17, 0.0);
          if (v17 <= 1.0)
            v19 = v18;
          else
            v19 = 1.0;
          *(_BYTE *)v11 = llround(**v15 + v19 * *v15[1]);
          v20 = **a3;
          v22 = *v20;
          v21 = v20[1];
          v23 = ((*a2)[1] - **v22) * *v22[1];
          v24 = fmax(v23, 0.0);
          if (v23 <= 1.0)
            v25 = v24;
          else
            v25 = 1.0;
          *((_BYTE *)a2[2] + 1) = llround(**v21 + v25 * *v21[1]);
          v26 = **a3;
          v28 = *v26;
          v27 = v26[1];
          v29 = ((*a2)[2] - **v28) * *v28[1];
          v30 = fmax(v29, 0.0);
          if (v29 <= 1.0)
            v31 = v30;
          else
            v31 = 1.0;
          *((_BYTE *)a2[2] + 2) = llround(**v27 + v31 * *v27[1]);
          v32 = **a3;
          v34 = *v32;
          v33 = v32[1];
          v35 = ((*a2)[3] - **v34) * *v34[1];
          v36 = fmax(v35, 0.0);
          if (v35 <= 1.0)
            v37 = v36;
          else
            v37 = 1.0;
          *((_BYTE *)a2[2] + 3) = llround(**v33 + v37 * *v33[1]);
          v12 += a1[6];
          v11 = (float *)((char *)v11 + a1[7]);
          ++v13;
        }
        while (v13 < a1[5]);
      }
      *a2 = v12;
      a2[2] = v11;
      sub_23980A740(a3, (uint64_t)a2, (uint64_t)(a2 + 2));
      a4 += a1[9];
      a5 = (float *)((char *)a5 + a1[10]);
      ++v10;
    }
    while (v10 < a1[8]);
  }
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v38 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      sub_23980A740(a3, (uint64_t)a2, (uint64_t)(a2 + 2));
      a4 += a1[6];
      a5 = (float *)((char *)a5 + a1[7]);
      ++v38;
    }
    while (v38 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  return sub_23980A740(a3, (uint64_t)a2, (uint64_t)(a2 + 2));
}

double sub_23980A740(double *****a1, uint64_t a2, uint64_t a3)
{
  double ***v3;
  double **v4;
  double **v5;
  double v6;
  double v7;
  double v8;
  double ***v9;
  double **v10;
  double **v11;
  double v12;
  double v13;
  double v14;
  double ***v15;
  double **v16;
  double **v17;
  double v18;
  double v19;
  double v20;
  double ***v21;
  double **v22;
  double **v23;
  double v24;
  double v25;
  double result;

  v3 = **a1;
  v5 = *v3;
  v4 = v3[1];
  v6 = (**(float **)a2 - **v5) * *v5[1];
  v7 = fmax(v6, 0.0);
  if (v6 <= 1.0)
    v8 = v7;
  else
    v8 = 1.0;
  **(_BYTE **)a3 = llround(**v4 + v8 * *v4[1]);
  v9 = **a1;
  v11 = *v9;
  v10 = v9[1];
  v12 = (*(float *)(*(_QWORD *)a2 + 4) - **v11) * *v11[1];
  v13 = fmax(v12, 0.0);
  if (v12 <= 1.0)
    v14 = v13;
  else
    v14 = 1.0;
  *(_BYTE *)(*(_QWORD *)a3 + 1) = llround(**v10 + v14 * *v10[1]);
  v15 = **a1;
  v17 = *v15;
  v16 = v15[1];
  v18 = (*(float *)(*(_QWORD *)a2 + 8) - **v17) * *v17[1];
  v19 = fmax(v18, 0.0);
  if (v18 <= 1.0)
    v20 = v19;
  else
    v20 = 1.0;
  *(_BYTE *)(*(_QWORD *)a3 + 2) = llround(**v16 + v20 * *v16[1]);
  v21 = **a1;
  v23 = *v21;
  v22 = v21[1];
  v24 = (*(float *)(*(_QWORD *)a2 + 12) - **v23) * *v23[1];
  v25 = fmax(v24, 0.0);
  if (v24 > 1.0)
    v25 = 1.0;
  result = **v22 + v25 * *v22[1];
  *(_BYTE *)(*(_QWORD *)a3 + 3) = llround(result);
  return result;
}

uint64_t sub_23980A8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1132396544;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_23980A960(a1, a2, (uint64_t)v8);
}

uint64_t sub_23980A960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_23980AC08(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23980ABA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t **sub_23980AC08(uint64_t **result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t **v10;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_BYTE **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    return sub_23980ADAC(&v25, (uint64_t)v32, v10, v13, v19);
  }
  return result;
}

uint64_t **sub_23980ADAC(_DWORD *a1, uint64_t a2, uint64_t **a3, float *a4, _BYTE *a5)
{
  int v10;
  _BYTE *v11;
  float *v12;
  int v13;
  _BYTE *v14;
  uint64_t v15;
  float v16;
  uint64_t v17;
  float v18;
  _BYTE *v19;
  uint64_t v20;
  float v21;
  _BYTE *v22;
  uint64_t v23;
  float v24;
  unsigned int v25;

  if (a1[8])
  {
    v10 = 0;
    while (1)
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      v11 = a5;
      v12 = a4;
      if (a1[5])
        break;
LABEL_3:
      *(_QWORD *)a2 = v12;
      *(_QWORD *)(a2 + 16) = v11;
      sub_23980B020(a3, (float **)a2, (uint64_t *)(a2 + 16));
      a4 += a1[9];
      a5 += a1[10];
      if (++v10 >= a1[8])
        goto LABEL_30;
    }
    v13 = 0;
    v12 = a4;
    v11 = a5;
    while (1)
    {
      *(_QWORD *)a2 = v12;
      *(_QWORD *)(a2 + 16) = v11;
      v15 = **a3;
      v16 = *v12;
      if (*v12 >= **(float **)v15)
      {
        if (v16 <= **(float **)(v15 + 16))
          LODWORD(v15) = (int)v16;
        else
          LOBYTE(v15) = **(_BYTE **)(v15 + 24);
      }
      else
      {
        LOBYTE(v15) = **(_BYTE **)(v15 + 8);
      }
      *v11 = v15;
      v17 = **a3;
      v18 = *(float *)(*(_QWORD *)a2 + 4);
      if (v18 < **(float **)v17)
        break;
      if (v18 > **(float **)(v17 + 16))
      {
        v19 = *(_BYTE **)(v17 + 24);
        goto LABEL_18;
      }
      LODWORD(v19) = (int)v18;
LABEL_20:
      *(_BYTE *)(*(_QWORD *)(a2 + 16) + 1) = (_BYTE)v19;
      v20 = **a3;
      v21 = *(float *)(*(_QWORD *)a2 + 8);
      if (v21 < **(float **)v20)
      {
        v22 = *(_BYTE **)(v20 + 8);
LABEL_24:
        LOBYTE(v22) = *v22;
        goto LABEL_26;
      }
      if (v21 > **(float **)(v20 + 16))
      {
        v22 = *(_BYTE **)(v20 + 24);
        goto LABEL_24;
      }
      LODWORD(v22) = (int)v21;
LABEL_26:
      *(_BYTE *)(*(_QWORD *)(a2 + 16) + 2) = (_BYTE)v22;
      v23 = **a3;
      v24 = *(float *)(*(_QWORD *)a2 + 12);
      if (v24 < **(float **)v23)
      {
        v14 = *(_BYTE **)(v23 + 8);
      }
      else
      {
        if (v24 <= **(float **)(v23 + 16))
        {
          LODWORD(v14) = (int)v24;
          goto LABEL_8;
        }
        v14 = *(_BYTE **)(v23 + 24);
      }
      LOBYTE(v14) = *v14;
LABEL_8:
      *(_BYTE *)(*(_QWORD *)(a2 + 16) + 3) = (_BYTE)v14;
      v12 += a1[6];
      v11 += a1[7];
      if (++v13 >= a1[5])
        goto LABEL_3;
    }
    v19 = *(_BYTE **)(v17 + 8);
LABEL_18:
    LOBYTE(v19) = *v19;
    goto LABEL_20;
  }
LABEL_30:
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  if (a1[5])
  {
    v25 = 0;
    do
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      sub_23980B020(a3, (float **)a2, (uint64_t *)(a2 + 16));
      a4 += a1[6];
      a5 += a1[7];
      ++v25;
    }
    while (v25 < a1[5]);
  }
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  return sub_23980B020(a3, (float **)a2, (uint64_t *)(a2 + 16));
}

uint64_t **sub_23980B020(uint64_t **result, float **a2, uint64_t *a3)
{
  uint64_t v3;
  float v4;
  uint64_t v5;
  float v6;
  _BYTE *v7;
  uint64_t v8;
  float v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  float v13;

  v3 = **result;
  v4 = **a2;
  if (v4 >= **(float **)v3)
  {
    if (v4 <= **(float **)(v3 + 16))
      LODWORD(v3) = (int)v4;
    else
      LOBYTE(v3) = **(_BYTE **)(v3 + 24);
  }
  else
  {
    LOBYTE(v3) = **(_BYTE **)(v3 + 8);
  }
  *(_BYTE *)*a3 = v3;
  v5 = **result;
  v6 = (*a2)[1];
  if (v6 < **(float **)v5)
  {
    v7 = *(_BYTE **)(v5 + 8);
LABEL_10:
    LOBYTE(v7) = *v7;
    goto LABEL_12;
  }
  if (v6 > **(float **)(v5 + 16))
  {
    v7 = *(_BYTE **)(v5 + 24);
    goto LABEL_10;
  }
  LODWORD(v7) = (int)v6;
LABEL_12:
  *(_BYTE *)(*a3 + 1) = (_BYTE)v7;
  v8 = **result;
  v9 = (*a2)[2];
  if (v9 < **(float **)v8)
  {
    v10 = *(_BYTE **)(v8 + 8);
LABEL_16:
    LOBYTE(v10) = *v10;
    goto LABEL_18;
  }
  if (v9 > **(float **)(v8 + 16))
  {
    v10 = *(_BYTE **)(v8 + 24);
    goto LABEL_16;
  }
  LODWORD(v10) = (int)v9;
LABEL_18:
  *(_BYTE *)(*a3 + 2) = (_BYTE)v10;
  v11 = *a3;
  v12 = **result;
  v13 = (*a2)[3];
  if (v13 >= **(float **)v12)
  {
    if (v13 <= **(float **)(v12 + 16))
      *(_BYTE *)(v11 + 3) = (int)v13;
    else
      *(_BYTE *)(v11 + 3) = **(_BYTE **)(v12 + 24);
  }
  else
  {
    *(_BYTE *)(v11 + 3) = **(_BYTE **)(v12 + 8);
  }
  return result;
}

double sub_23980B174@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239806714(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC040;
  sub_2397E7D68((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23980B288(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23980B250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23980B26C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23980B288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB760;
  sub_2397EA060(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEC9D8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397EA2CC(a2, (uint64_t)(a4 + 1));
}

void sub_23980B374(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23980B388(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23980B39C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C6D68((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23980B3B0(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23980B3F8(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23980B3C0(uint64_t **a1, uint64_t a2)
{
  return sub_23980C0E0(**a1, (*a1)[1], a2);
}

uint64_t sub_23980B3D0(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23980B524(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23980B3F8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  double v6;
  int v7;
  double v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v9 = -65536;
    goto LABEL_14;
  }
  v5 = 1.0;
  a4.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = *(double *)(a3 + 24);
  if (v6 < 0.0)
    v6 = 0.0;
  v7 = (int)v6;
  v8 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v8 = *(double *)(a3 + 32);
  v9 = v7 | ((int)v8 << 16);
LABEL_14:
  v10 = (unsigned __int16)v9;
  v11 = HIWORD(v9);
  if (a4.n128_f32[0] == (float)v10 && v5 == (float)v11)
    return sub_23980B524(a1, a2, (uint64_t)v16, a4);
  v20 = a4.n128_f32[0];
  v18 = (double)v10;
  v19 = 1.0 / (v5 - a4.n128_f32[0]);
  a4.n128_f64[0] = (double)v11 - (double)v10;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = v16;
  v14[1] = v15;
  return sub_23980BA0C(a1, a2, (uint64_t)v14, a4);
}

uint64_t sub_23980B524(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = (unint64_t)sub_23980B7CC((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23980B768(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

int16x4_t sub_23980B7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float32x4_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  int16x4_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  int16x4_t result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float32x4_t **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float32x4_t **)(a2 + 24);
    }
    v19 = *(int16x4_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(int16x4_t **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_23980B9B4(&v27, (float32x4_t **)v34, a1, v13, v19);
        v13 = (float32x4_t *)((char *)v13 + 4 * v33);
        v19 = (int16x4_t *)((char *)v19 + 2 * HIDWORD(v33));
      }
    }
    return sub_23980B9B4(&v27, (float32x4_t **)v34, a1, v13, v19);
  }
  return result;
}

int16x4_t sub_23980B9B4(_DWORD *a1, float32x4_t **a2, uint64_t a3, float32x4_t *a4, int16x4_t *a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  int16x4_t result;

  *a2 = a4;
  a2[2] = (float32x4_t *)a5;
  v5 = a1[5];
  if (v5)
  {
    v6 = 4 * a1[6];
    v7 = 2 * a1[7];
    do
    {
      *a5 = vmovn_s32((int32x4_t)vcvtq_u32_f32(*a4));
      a4 = (float32x4_t *)((char *)a4 + v6);
      a5 = (int16x4_t *)((char *)a5 + v7);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = (float32x4_t *)a5;
  result = vmovn_s32((int32x4_t)vcvtq_u32_f32(*a4));
  *a5 = result;
  return result;
}

uint64_t sub_23980BA0C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t **v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (uint64_t **)&v29;
    a4.n128_u64[0] = (unint64_t)sub_23980BCB4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23980BC50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

int16x4_t sub_23980BCB4(uint64_t ***a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float32x4_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  int16x4_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  int16x4_t result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float32x4_t **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float32x4_t **)(a2 + 24);
    }
    v19 = *(int16x4_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(int16x4_t **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_23980BE58(&v26, (uint64_t)v33, a1, v13, v19);
  }
  return result;
}

int16x4_t sub_23980BE58(_DWORD *a1, uint64_t a2, uint64_t ***a3, float32x4_t *a4, int16x4_t *a5)
{
  unsigned int v10;
  float64x2_t v16;
  int v17;
  uint64_t **v18;
  uint64_t v19;
  uint64_t v20;
  float32x4_t *v21;
  int16x4_t *v22;
  uint64_t v23;
  uint64_t v24;
  const double *v25;
  double *v26;
  const double *v27;
  float64x2_t v28;
  double v29;
  float64x2_t v30;
  float64x2_t v31;
  float64x2_t v32;
  float64x2_t v33;
  unsigned int v34;
  unsigned int v35;
  float32x4_t *v36;
  float64x2_t v38;
  int16x4_t *v39;
  float32x4_t *v40;

  if (a1[8])
  {
    v10 = 0;
    __asm { FMOV            V5.2D, #1.0 }
    v16 = 0uLL;
    v38 = _Q5;
    do
    {
      v39 = a5;
      v40 = a4;
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      v17 = a1[5];
      if (v17)
      {
        v18 = *a3;
        v19 = a1[6];
        v20 = a1[7];
        v21 = a4;
        v22 = a5;
        do
        {
          v24 = **v18;
          v23 = (*v18)[1];
          v25 = *(const double **)v24;
          v26 = *(double **)(v24 + 8);
          v27 = *(const double **)v23;
          v28 = vld1q_dup_f64(v25);
          v29 = **(double **)(v23 + 8);
          v30 = vmulq_n_f64(vsubq_f64(vcvt_hight_f64_f32(*v21), v28), *v26);
          v31 = vmulq_n_f64(vsubq_f64(vcvtq_f64_f32(*(float32x2_t *)v21->f32), v28), *v26);
          v32 = vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v30, _Q5), (int8x16_t)_Q5, (int8x16_t)vmaxnmq_f64(v30, v16)), v29);
          v33 = vld1q_dup_f64(v27);
          *v22 = vuzp1_s16((int16x4_t)vmovn_s64(vcvtq_s64_f64(vrndaq_f64(vaddq_f64(v33, vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v31, _Q5), (int8x16_t)_Q5, (int8x16_t)vmaxnmq_f64(v31, v16)), v29))))), (int16x4_t)vmovn_s64(vcvtq_s64_f64(vrndaq_f64(vaddq_f64(v33, v32)))));
          v21 = (float32x4_t *)((char *)v21 + 4 * v19);
          v22 = (int16x4_t *)((char *)v22 + 2 * v20);
          v39 = v22;
          v40 = v21;
          --v17;
        }
        while (v17);
        *(_QWORD *)a2 = (char *)v21 - 4 * v19;
        *(_QWORD *)(a2 + 16) = (char *)v22 - 2 * v20;
      }
      sub_23980C03C((uint64_t)a1, (float32x4_t **)a2, a3, &v40, &v39);
      v16 = 0uLL;
      _Q5 = v38;
      a4 = (float32x4_t *)((char *)a4 + 4 * a1[9]);
      a5 = (int16x4_t *)((char *)a5 + 2 * a1[10]);
      ++v10;
    }
    while (v10 < a1[8]);
  }
  v39 = a5;
  v40 = a4;
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  if (a1[5])
  {
    v34 = 0;
    do
    {
      sub_23980C03C((uint64_t)a1, (float32x4_t **)a2, a3, &v40, &v39);
      v35 = a1[5];
      v36 = (float32x4_t *)((char *)v40 + 4 * a1[6]);
      v39 = (int16x4_t *)((char *)v39 + 2 * a1[7]);
      v40 = v36;
      ++v34;
    }
    while (v34 < v35);
  }
  return sub_23980C03C((uint64_t)a1, (float32x4_t **)a2, a3, &v40, &v39);
}

int16x4_t sub_23980C03C(uint64_t a1, float32x4_t **a2, uint64_t ***a3, float32x4_t **a4, int16x4_t **a5)
{
  float32x4_t *v5;
  int16x4_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  const double *v10;
  double v11;
  double *v12;
  const double *v13;
  float64x2_t v14;
  float64x2_t v15;
  float64x2_t v16;
  float64x2_t v22;
  float64x2_t v23;
  float64x2_t v24;
  int16x4_t result;

  v5 = *a4;
  *a2 = *a4;
  v6 = *a5;
  a2[2] = (float32x4_t *)*a5;
  v7 = **a3;
  v9 = *v7;
  v8 = v7[1];
  v10 = *(const double **)v9;
  v11 = **(double **)(v9 + 8);
  v13 = *(const double **)v8;
  v12 = *(double **)(v8 + 8);
  v14 = vld1q_dup_f64(v10);
  v15 = vmulq_n_f64(vsubq_f64(vcvt_hight_f64_f32(*v5), v14), v11);
  v16 = vmulq_n_f64(vsubq_f64(vcvtq_f64_f32(*(float32x2_t *)v5->f32), v14), v11);
  __asm { FMOV            V2.2D, #1.0 }
  v22 = vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v16, _Q2), (int8x16_t)_Q2, (int8x16_t)vmaxnmq_f64(v16, (float64x2_t)0)), *v12);
  v23 = vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v15, _Q2), (int8x16_t)_Q2, (int8x16_t)vmaxnmq_f64(v15, (float64x2_t)0)), *v12);
  v24 = vld1q_dup_f64(v13);
  result = vuzp1_s16((int16x4_t)vmovn_s64(vcvtq_s64_f64(vrndaq_f64(vaddq_f64(v24, v22)))), (int16x4_t)vmovn_s64(vcvtq_s64_f64(vrndaq_f64(vaddq_f64(v24, v23)))));
  *v6 = result;
  return result;
}

uint64_t sub_23980C0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  __int16 v10;
  __int16 v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1199570688;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_23980C198(a1, a2, (uint64_t)v8);
}

uint64_t sub_23980C198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_23980C440(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23980C3DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t **sub_23980C440(uint64_t **result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t **v10;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    return sub_23980C5E4(&v25, (uint64_t)v32, v10, v13, v19);
  }
  return result;
}

uint64_t **sub_23980C5E4(_DWORD *a1, uint64_t a2, uint64_t **a3, float *a4, _WORD *a5)
{
  int v10;
  int v11;
  _WORD *v12;
  float *v13;
  uint64_t v14;
  float v15;
  uint64_t v16;
  uint64_t v17;
  _WORD *v18;
  float v19;
  float v20;
  float v21;
  float v22;
  unsigned int v23;

  if (a1[8])
  {
    v10 = 0;
    while (1)
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      v11 = a1[5];
      v12 = a5;
      v13 = a4;
      if (v11)
        break;
LABEL_3:
      *(_QWORD *)a2 = v13;
      *(_QWORD *)(a2 + 16) = v12;
      sub_23980C878(a3, (float **)a2, (_WORD **)(a2 + 16));
      a4 += a1[9];
      a5 += a1[10];
      if (++v10 >= a1[8])
        goto LABEL_29;
    }
    v14 = **a3;
    v15 = **(float **)v14;
    v16 = 2 * a1[7];
    v17 = 4 * a1[6];
    v13 = a4;
    v12 = a5;
    while (1)
    {
      while (1)
      {
        v19 = *v13;
        if (*v13 < v15)
          break;
        if (v19 <= **(float **)(v14 + 16))
        {
          *v12 = (int)v19;
          v20 = v13[1];
          if (v20 < v15)
            goto LABEL_17;
        }
        else
        {
          *v12 = **(_WORD **)(v14 + 24);
          v20 = v13[1];
          if (v20 < v15)
            goto LABEL_17;
        }
LABEL_13:
        if (v20 > **(float **)(v14 + 16))
        {
          v12[1] = **(_WORD **)(v14 + 24);
          v21 = v13[2];
          if (v21 < v15)
            goto LABEL_18;
          goto LABEL_21;
        }
        v12[1] = (int)v20;
        v21 = v13[2];
        if (v21 >= v15)
          goto LABEL_21;
LABEL_18:
        v12[2] = **(_WORD **)(v14 + 8);
        v22 = v13[3];
        if (v22 >= v15)
          goto LABEL_25;
LABEL_6:
        v18 = *(_WORD **)(v14 + 8);
LABEL_7:
        v12[3] = *v18;
        v12 = (_WORD *)((char *)v12 + v16);
        v13 = (float *)((char *)v13 + v17);
        if (!--v11)
          goto LABEL_3;
      }
      *v12 = **(_WORD **)(v14 + 8);
      v20 = v13[1];
      if (v20 >= v15)
        goto LABEL_13;
LABEL_17:
      v12[1] = **(_WORD **)(v14 + 8);
      v21 = v13[2];
      if (v21 < v15)
        goto LABEL_18;
LABEL_21:
      if (v21 <= **(float **)(v14 + 16))
      {
        v12[2] = (int)v21;
        v22 = v13[3];
        if (v22 >= v15)
          goto LABEL_25;
        goto LABEL_6;
      }
      v12[2] = **(_WORD **)(v14 + 24);
      v22 = v13[3];
      if (v22 < v15)
        goto LABEL_6;
LABEL_25:
      if (v22 > **(float **)(v14 + 16))
      {
        v18 = *(_WORD **)(v14 + 24);
        goto LABEL_7;
      }
      v12[3] = (int)v22;
      v12 = (_WORD *)((char *)v12 + v16);
      v13 = (float *)((char *)v13 + v17);
      if (!--v11)
        goto LABEL_3;
    }
  }
LABEL_29:
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  if (a1[5])
  {
    v23 = 0;
    do
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      sub_23980C878(a3, (float **)a2, (_WORD **)(a2 + 16));
      a4 += a1[6];
      a5 += a1[7];
      ++v23;
    }
    while (v23 < a1[5]);
  }
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  return sub_23980C878(a3, (float **)a2, (_WORD **)(a2 + 16));
}

uint64_t **sub_23980C878(uint64_t **result, float **a2, _WORD **a3)
{
  float *v3;
  _WORD *v4;
  uint64_t v5;
  float v6;
  float v7;
  float v8;
  float v9;
  float v10;

  v3 = *a2;
  v4 = *a3;
  v5 = **result;
  v6 = **(float **)v5;
  v7 = **a2;
  if (v7 >= v6)
  {
    if (v7 <= **(float **)(v5 + 16))
    {
      *v4 = (int)v7;
      v8 = v3[1];
      if (v8 < v6)
        goto LABEL_10;
    }
    else
    {
      *v4 = **(_WORD **)(v5 + 24);
      v8 = v3[1];
      if (v8 < v6)
        goto LABEL_10;
    }
  }
  else
  {
    *v4 = **(_WORD **)(v5 + 8);
    v8 = v3[1];
    if (v8 < v6)
    {
LABEL_10:
      v4[1] = **(_WORD **)(v5 + 8);
      v9 = v3[2];
      if (v9 < v6)
        goto LABEL_11;
LABEL_14:
      if (v9 <= **(float **)(v5 + 16))
      {
        v4[2] = (int)v9;
        v10 = v3[3];
        if (v10 >= v6)
          goto LABEL_16;
      }
      else
      {
        v4[2] = **(_WORD **)(v5 + 24);
        v10 = v3[3];
        if (v10 >= v6)
          goto LABEL_16;
      }
LABEL_19:
      v4[3] = **(_WORD **)(v5 + 8);
      return result;
    }
  }
  if (v8 > **(float **)(v5 + 16))
  {
    v4[1] = **(_WORD **)(v5 + 24);
    v9 = v3[2];
    if (v9 < v6)
      goto LABEL_11;
    goto LABEL_14;
  }
  v4[1] = (int)v8;
  v9 = v3[2];
  if (v9 >= v6)
    goto LABEL_14;
LABEL_11:
  v4[2] = **(_WORD **)(v5 + 8);
  v10 = v3[3];
  if (v10 < v6)
    goto LABEL_19;
LABEL_16:
  if (v10 <= **(float **)(v5 + 16))
    v4[3] = (int)v10;
  else
    v4[3] = **(_WORD **)(v5 + 24);
  return result;
}

double sub_23980C9E0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239806714(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC150;
  sub_2397EA604((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23980CAF4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23980CABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23980CAD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23980CAF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB858;
  sub_2397ED558(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEC9F0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397ED7C4(a2, (uint64_t)(a4 + 1));
}

void sub_23980CBE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23980CBF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23980CC08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C79B0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23980CC1C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23980CC64(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23980CC2C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23980DC54(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23980CC3C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23980CDAC(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23980CC64(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  float v5;
  double v6;
  unsigned __int16 v11;
  double v12;
  unsigned int v14;
  double v20;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    _Q0.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      _Q0.n128_u64[0] = *(_QWORD *)a3;
    _Q0.n128_f32[0] = _Q0.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v5 = 1.0;
  _Q0.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v6 = *(double *)(a3 + 24);
  _S2 = v6;
  __asm { FCVT            H2, S2 }
  v11 = LOWORD(_S2);
  v12 = 65504.0;
  if (*(double *)(a3 + 32) <= 65504.0)
    v12 = *(double *)(a3 + 32);
  _S2 = v12;
  __asm { FCVT            H2, S2 }
  v14 = v11 | (LOWORD(_S2) << 16);
LABEL_14:
  _H2 = v14;
  _S3 = HIWORD(v14);
  __asm
  {
    FCVT            S4, H2
    FCVT            S5, H3
  }
  if (_Q0.n128_f32[0] == _S4 && v5 == _S5)
    return sub_23980CDAC(a1, a2, (uint64_t)v25, _Q0);
  v29 = _Q0.n128_f32[0];
  v20 = 1.0 / (v5 - _Q0.n128_f32[0]);
  __asm { FCVT            D0, H2 }
  v27 = _Q0.n128_u64[0];
  v28 = v20;
  __asm { FCVT            D1, H3 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_23980D3DC(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_23980CDAC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_23980D054((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23980CFF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23980D054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  int *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(int **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(int **)(a2 + 24);
    }
    v19 = *(int **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(int **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    *(_QWORD *)&result = sub_23980D1F8(&v26, (int **)v33, a1, v13, v19);
  }
  return result;
}

__int16 sub_23980D1F8@<H0>(_DWORD *a1@<X0>, int **a2@<X1>, uint64_t a3@<X2>, int *a4@<X3>, int *a5@<X4>)
{
  unsigned int v5;
  int *v14;
  int *v15;
  unsigned int v16;
  unsigned int v21;
  __int16 result;

  if (a1[8])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v14 = a5;
      v15 = a4;
      if (a1[5])
      {
        v16 = 0;
        v15 = a4;
        v14 = a5;
        do
        {
          *a2 = v15;
          a2[2] = v14;
          _S0 = *v15;
          __asm { FCVT            H0, S0 }
          *(_WORD *)v14 = _S0;
          _S0 = (*a2)[1];
          __asm { FCVT            H0, S0 }
          *((_WORD *)a2[2] + 1) = _S0;
          _S0 = (*a2)[2];
          __asm { FCVT            H0, S0 }
          *((_WORD *)a2[2] + 2) = _S0;
          _S0 = (*a2)[3];
          __asm { FCVT            H0, S0 }
          *((_WORD *)a2[2] + 3) = _S0;
          v15 += a1[6];
          v14 = (int *)((char *)v14 + 2 * a1[7]);
          ++v16;
        }
        while (v16 < a1[5]);
      }
      *a2 = v15;
      a2[2] = v14;
      _S0 = *v15;
      __asm { FCVT            H0, S0 }
      *(_WORD *)v14 = _S0;
      _S0 = (*a2)[1];
      __asm { FCVT            H0, S0 }
      *((_WORD *)a2[2] + 1) = _S0;
      _S0 = (*a2)[2];
      __asm { FCVT            H0, S0 }
      *((_WORD *)a2[2] + 2) = _S0;
      _S0 = (*a2)[3];
      __asm { FCVT            H0, S0 }
      *((_WORD *)a2[2] + 3) = _S0;
      a4 += a1[9];
      a5 = (int *)((char *)a5 + 2 * a1[10]);
      ++v5;
    }
    while (v5 < a1[8]);
  }
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v21 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      _S0 = *a4;
      __asm { FCVT            H0, S0 }
      *(_WORD *)a5 = _S0;
      _S0 = (*a2)[1];
      __asm { FCVT            H0, S0 }
      *((_WORD *)a2[2] + 1) = _S0;
      _S0 = (*a2)[2];
      __asm { FCVT            H0, S0 }
      *((_WORD *)a2[2] + 2) = _S0;
      _S0 = (*a2)[3];
      __asm { FCVT            H0, S0 }
      *((_WORD *)a2[2] + 3) = _S0;
      a4 += a1[6];
      a5 = (int *)((char *)a5 + 2 * a1[7]);
      ++v21;
    }
    while (v21 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  _S0 = *a4;
  __asm { FCVT            H0, S0 }
  *(_WORD *)a5 = _S0;
  _S0 = (*a2)[1];
  __asm { FCVT            H0, S0 }
  *((_WORD *)a2[2] + 1) = _S0;
  _S0 = (*a2)[2];
  __asm { FCVT            H0, S0 }
  *((_WORD *)a2[2] + 2) = _S0;
  _S0 = (*a2)[3];
  __asm { FCVT            H0, S0 }
  *((_WORD *)a2[2] + 3) = result;
  return result;
}

uint64_t sub_23980D3DC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_23980D684(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23980D620(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23980D684(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_23980D828(&v26, (float **)v33, a1, v13, v19);
  }
  return result;
}

double sub_23980D828(_DWORD *a1, float **a2, double *****a3, float *a4, float *a5)
{
  unsigned int v10;
  float *v11;
  float *v12;
  unsigned int v13;
  double ***v14;
  double **v15;
  double **v16;
  double v17;
  double v18;
  double v19;
  double ***v25;
  double **v26;
  double **v27;
  double v28;
  double v29;
  double v30;
  double ***v32;
  double **v33;
  double **v34;
  double v35;
  double v36;
  double v37;
  double ***v39;
  double **v40;
  double **v41;
  double v42;
  double v43;
  double v44;
  unsigned int v46;
  double result;

  if (a1[8])
  {
    v10 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v11 = a5;
      v12 = a4;
      if (a1[5])
      {
        v13 = 0;
        v12 = a4;
        v11 = a5;
        do
        {
          *a2 = v12;
          a2[2] = v11;
          v14 = **a3;
          v16 = *v14;
          v15 = v14[1];
          v17 = (*v12 - **v16) * *v16[1];
          v18 = fmax(v17, 0.0);
          if (v17 <= 1.0)
            v19 = v18;
          else
            v19 = 1.0;
          _S0 = **v15 + v19 * *v15[1];
          __asm { FCVT            H0, S0 }
          *(_WORD *)v11 = LOWORD(_S0);
          v25 = **a3;
          v27 = *v25;
          v26 = v25[1];
          v28 = ((*a2)[1] - **v27) * *v27[1];
          v29 = fmax(v28, 0.0);
          if (v28 <= 1.0)
            v30 = v29;
          else
            v30 = 1.0;
          _S0 = **v26 + v30 * *v26[1];
          __asm { FCVT            H0, S0 }
          *((_WORD *)a2[2] + 1) = LOWORD(_S0);
          v32 = **a3;
          v34 = *v32;
          v33 = v32[1];
          v35 = ((*a2)[2] - **v34) * *v34[1];
          v36 = fmax(v35, 0.0);
          if (v35 <= 1.0)
            v37 = v36;
          else
            v37 = 1.0;
          _S0 = **v33 + v37 * *v33[1];
          __asm { FCVT            H0, S0 }
          *((_WORD *)a2[2] + 2) = LOWORD(_S0);
          v39 = **a3;
          v41 = *v39;
          v40 = v39[1];
          v42 = ((*a2)[3] - **v41) * *v41[1];
          v43 = fmax(v42, 0.0);
          if (v42 <= 1.0)
            v44 = v43;
          else
            v44 = 1.0;
          _S0 = **v40 + v44 * *v40[1];
          __asm { FCVT            H0, S0 }
          *((_WORD *)a2[2] + 3) = LOWORD(_S0);
          v12 += a1[6];
          v11 = (float *)((char *)v11 + 2 * a1[7]);
          ++v13;
        }
        while (v13 < a1[5]);
      }
      *a2 = v12;
      a2[2] = v11;
      sub_23980DAD8(a3, (uint64_t)a2, (uint64_t)(a2 + 2));
      a4 += a1[9];
      a5 = (float *)((char *)a5 + 2 * a1[10]);
      ++v10;
    }
    while (v10 < a1[8]);
  }
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v46 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      sub_23980DAD8(a3, (uint64_t)a2, (uint64_t)(a2 + 2));
      a4 += a1[6];
      a5 = (float *)((char *)a5 + 2 * a1[7]);
      ++v46;
    }
    while (v46 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  *(_QWORD *)&result = sub_23980DAD8(a3, (uint64_t)a2, (uint64_t)(a2 + 2));
  return result;
}

__int16 sub_23980DAD8@<H0>(double *****a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  double ***v3;
  double **v4;
  double **v5;
  double v6;
  double v7;
  double v8;
  double ***v14;
  double **v15;
  double **v16;
  double v17;
  double v18;
  double v19;
  double ***v21;
  double **v22;
  double **v23;
  double v24;
  double v25;
  double v26;
  double ***v28;
  double **v29;
  double **v30;
  double v31;
  double v32;
  __int16 result;

  v3 = **a1;
  v5 = *v3;
  v4 = v3[1];
  v6 = (**(float **)a2 - **v5) * *v5[1];
  v7 = fmax(v6, 0.0);
  if (v6 <= 1.0)
    v8 = v7;
  else
    v8 = 1.0;
  _S2 = **v4 + v8 * *v4[1];
  __asm { FCVT            H2, S2 }
  **(_WORD **)a3 = LOWORD(_S2);
  v14 = **a1;
  v16 = *v14;
  v15 = v14[1];
  v17 = (*(float *)(*(_QWORD *)a2 + 4) - **v16) * *v16[1];
  v18 = fmax(v17, 0.0);
  if (v17 <= 1.0)
    v19 = v18;
  else
    v19 = 1.0;
  _S2 = **v15 + v19 * *v15[1];
  __asm { FCVT            H2, S2 }
  *(_WORD *)(*(_QWORD *)a3 + 2) = LOWORD(_S2);
  v21 = **a1;
  v23 = *v21;
  v22 = v21[1];
  v24 = (*(float *)(*(_QWORD *)a2 + 8) - **v23) * *v23[1];
  v25 = fmax(v24, 0.0);
  if (v24 <= 1.0)
    v26 = v25;
  else
    v26 = 1.0;
  _S2 = **v22 + v26 * *v22[1];
  __asm { FCVT            H2, S2 }
  *(_WORD *)(*(_QWORD *)a3 + 4) = LOWORD(_S2);
  v28 = **a1;
  v30 = *v28;
  v29 = v28[1];
  v31 = (*(float *)(*(_QWORD *)a2 + 12) - **v30) * *v30[1];
  v32 = fmax(v31, 0.0);
  if (v31 > 1.0)
    v32 = 1.0;
  _S0 = **v29 + v32 * *v29[1];
  __asm { FCVT            H0, S0 }
  *(_WORD *)(*(_QWORD *)a3 + 6) = result;
  return result;
}

uint64_t sub_23980DC54(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  _QWORD v14[4];
  unint64_t v15;
  __int16 v16;
  __int16 v17;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    _Q0.n128_u64[0] = *(_QWORD *)a3;
    if (!*(_BYTE *)(a3 + 8))
      _Q0.n128_f64[0] = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 1.0;
    if (_Q0.n128_f64[0] < -65504.0)
      _Q0.n128_f64[0] = -65504.0;
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    if (v4 > 65504.0)
      v4 = 65504.0;
    _S1 = v4;
    v17 = _H0;
    __asm { FCVT            H1, S1 }
    v16 = LOWORD(_S1);
    __asm
    {
      FCVT            S2, H0
      FCVT            S0, H1
    }
    v15 = __PAIR64__(_S2, _Q0.n128_u32[0]);
  }
  else
  {
    v17 = 0;
    v16 = 15360;
    v15 = 1065353216;
  }
  v14[0] = (char *)&v15 + 4;
  v14[1] = &v17;
  v14[2] = &v15;
  v14[3] = &v16;
  return sub_23980DD20(a1, a2, (uint64_t)v14, _Q0);
}

uint64_t sub_23980DD20(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_23980DFC8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23980DF64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23980DFC8(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_23980E16C(&v26, (uint64_t)v33, a1, v13, v19);
  }
  return result;
}

double sub_23980E16C(_DWORD *a1, uint64_t a2, uint64_t **a3, float *a4, _WORD *a5)
{
  int v10;
  _WORD *v11;
  float *v12;
  int v13;
  __int16 *v14;
  uint64_t v16;
  uint64_t v23;
  __int16 *v25;
  uint64_t v27;
  __int16 *v29;
  uint64_t v31;
  unsigned int v33;
  double result;

  if (a1[8])
  {
    v10 = 0;
    while (1)
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      v11 = a5;
      v12 = a4;
      if (a1[5])
        break;
LABEL_3:
      *(_QWORD *)a2 = v12;
      *(_QWORD *)(a2 + 16) = v11;
      sub_23980E3E0(a3, (float **)a2, (uint64_t *)(a2 + 16));
      a4 += a1[9];
      a5 += a1[10];
      if (++v10 >= a1[8])
        goto LABEL_30;
    }
    v13 = 0;
    v12 = a4;
    v11 = a5;
    while (1)
    {
      *(_QWORD *)a2 = v12;
      *(_QWORD *)(a2 + 16) = v11;
      v16 = **a3;
      _S0 = *v12;
      if (*v12 >= **(float **)v16)
      {
        if (_S0 <= **(float **)(v16 + 16))
          __asm { FCVT            H0, S0 }
        else
          _H0 = **(_WORD **)(v16 + 24);
      }
      else
      {
        _H0 = **(_WORD **)(v16 + 8);
      }
      *v11 = _H0;
      v23 = **a3;
      _S0 = *(float *)(*(_QWORD *)a2 + 4);
      if (_S0 < **(float **)v23)
        break;
      if (_S0 > **(float **)(v23 + 16))
      {
        v25 = *(__int16 **)(v23 + 24);
        goto LABEL_18;
      }
      __asm { FCVT            H0, S0 }
LABEL_20:
      *(_WORD *)(*(_QWORD *)(a2 + 16) + 2) = _H0;
      v27 = **a3;
      _S0 = *(float *)(*(_QWORD *)a2 + 8);
      if (_S0 < **(float **)v27)
      {
        v29 = *(__int16 **)(v27 + 8);
LABEL_24:
        _H0 = *v29;
        goto LABEL_26;
      }
      if (_S0 > **(float **)(v27 + 16))
      {
        v29 = *(__int16 **)(v27 + 24);
        goto LABEL_24;
      }
      __asm { FCVT            H0, S0 }
LABEL_26:
      *(_WORD *)(*(_QWORD *)(a2 + 16) + 4) = _H0;
      v31 = **a3;
      _S0 = *(float *)(*(_QWORD *)a2 + 12);
      if (_S0 < **(float **)v31)
      {
        v14 = *(__int16 **)(v31 + 8);
      }
      else
      {
        if (_S0 <= **(float **)(v31 + 16))
        {
          __asm { FCVT            H0, S0 }
          goto LABEL_8;
        }
        v14 = *(__int16 **)(v31 + 24);
      }
      _H0 = *v14;
LABEL_8:
      *(_WORD *)(*(_QWORD *)(a2 + 16) + 6) = _H0;
      v12 += a1[6];
      v11 += a1[7];
      if (++v13 >= a1[5])
        goto LABEL_3;
    }
    v25 = *(__int16 **)(v23 + 8);
LABEL_18:
    _H0 = *v25;
    goto LABEL_20;
  }
LABEL_30:
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  if (a1[5])
  {
    v33 = 0;
    do
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      sub_23980E3E0(a3, (float **)a2, (uint64_t *)(a2 + 16));
      a4 += a1[6];
      a5 += a1[7];
      ++v33;
    }
    while (v33 < a1[5]);
  }
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  *(_QWORD *)&result = sub_23980E3E0(a3, (float **)a2, (uint64_t *)(a2 + 16));
  return result;
}

__int16 sub_23980E3E0@<H0>(uint64_t **a1@<X0>, float **a2@<X1>, uint64_t *a3@<X2>)
{
  uint64_t v3;
  uint64_t v10;
  __int16 *v12;
  uint64_t v14;
  __int16 *v16;
  uint64_t v18;
  uint64_t v19;
  __int16 *v21;
  __int16 result;
  __int16 *v23;

  v3 = **a1;
  _S0 = **a2;
  if (_S0 >= **(float **)v3)
  {
    if (_S0 <= **(float **)(v3 + 16))
      __asm { FCVT            H0, S0 }
    else
      _H0 = **(_WORD **)(v3 + 24);
  }
  else
  {
    _H0 = **(_WORD **)(v3 + 8);
  }
  *(_WORD *)*a3 = _H0;
  v10 = **a1;
  _S0 = (*a2)[1];
  if (_S0 < **(float **)v10)
  {
    v12 = *(__int16 **)(v10 + 8);
LABEL_10:
    _H0 = *v12;
    goto LABEL_12;
  }
  if (_S0 > **(float **)(v10 + 16))
  {
    v12 = *(__int16 **)(v10 + 24);
    goto LABEL_10;
  }
  __asm { FCVT            H0, S0 }
LABEL_12:
  *(_WORD *)(*a3 + 2) = _H0;
  v14 = **a1;
  _S0 = (*a2)[2];
  if (_S0 < **(float **)v14)
  {
    v16 = *(__int16 **)(v14 + 8);
LABEL_16:
    _H0 = *v16;
    goto LABEL_18;
  }
  if (_S0 > **(float **)(v14 + 16))
  {
    v16 = *(__int16 **)(v14 + 24);
    goto LABEL_16;
  }
  __asm { FCVT            H0, S0 }
LABEL_18:
  *(_WORD *)(*a3 + 4) = _H0;
  v18 = *a3;
  v19 = **a1;
  _S0 = (*a2)[3];
  if (_S0 >= **(float **)v19)
  {
    if (_S0 <= **(float **)(v19 + 16))
    {
      __asm { FCVT            H0, S0 }
      *(_WORD *)(v18 + 6) = result;
    }
    else
    {
      v23 = *(__int16 **)(v19 + 24);
      result = *v23;
      *(_WORD *)(v18 + 6) = *v23;
    }
  }
  else
  {
    v21 = *(__int16 **)(v19 + 8);
    result = *v21;
    *(_WORD *)(v18 + 6) = *v21;
  }
  return result;
}

double sub_23980E534@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239806714(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC260;
  sub_2397EDAFC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23980E680(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2397F0960((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23980E624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23980E648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23980E664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23980E680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_23980E824(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23980E7C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_23980E824(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_23980E97C(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_23980E97C(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E3CD4(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23980EAE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_23980EB48@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239806714(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6BC8;
  sub_23980ED50((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23980EC5C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23980EC24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23980EC40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23980EC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE5D10;
  sub_239768BB8(a2, &v12);
  sub_23980F3DC(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239768E24(a2, (uint64_t)(a3 + 1));
}

void sub_23980ED14(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23980ED28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975F87C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23980ED3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23980ED50(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_23980EE50(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 2) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_2398288A0(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_23980EE34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_23980EE50(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 40)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23980F090(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_23980F030(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_23980F090(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23980F108();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23980F108()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256933298);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933298))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_239741A0C();
    sub_23980F30C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23980F30C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256933280, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933280, &dword_23940C000);
          __cxa_guard_release(&qword_256933298);
          return &stru_256933280;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256933280;
}

void sub_23980F258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256933298);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256933298);
  _Unwind_Resume(a1);
}

void sub_23980F30C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23980F3A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23980F3DC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23980F674(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23980F610(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23980F674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  int32x4_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  int32x4_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(int32x4_t **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(int32x4_t **)(a2 + 24);
    }
    v19 = *(int32x4_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(int32x4_t **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_23980F85C(&v27, (int32x4_t **)v34, a1, v13, v19);
        v13 = (int32x4_t *)((char *)v13 + 4 * v33);
        v19 = (int32x4_t *)((char *)v19 + 4 * HIDWORD(v33));
      }
    }
    *(_QWORD *)&result = sub_23980F85C(&v27, (int32x4_t **)v34, a1, v13, v19).u64[0];
  }
  return result;
}

int32x4_t sub_23980F85C(_DWORD *a1, int32x4_t **a2, uint64_t a3, int32x4_t *a4, int32x4_t *a5)
{
  int v5;
  int32x4_t result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  if (v5)
  {
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
      *a5 = vtrn1q_s32(*a4, (int32x4_t)vextq_s8(*(int8x16_t *)a4, *(int8x16_t *)a4, 0xCuLL));
      a4 = (int32x4_t *)((char *)a4 + 4 * a1[6]);
      a5 = (int32x4_t *)((char *)a5 + 4 * a1[7]);
      --v5;
    }
    while (v5);
    *a2 = a4;
    a2[2] = a5;
    result = vtrn1q_s32(*a4, (int32x4_t)vextq_s8(*(int8x16_t *)a4, *(int8x16_t *)a4, 0xCuLL));
    *a5 = result;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
    result = vtrn1q_s32(*a4, (int32x4_t)vextq_s8(*(int8x16_t *)a4, *(int8x16_t *)a4, 0xCuLL));
    *a5 = result;
  }
  return result;
}

uint64_t sub_23980F8F0(uint64_t a1)
{
  sub_239916980(a1 + 40);
  return nullsub_4(a1);
}

void sub_23980F918(uint64_t a1)
{
  sub_239916980(a1 + 40);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_23980F954()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23980F9C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250ADB688;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 20) = *(_OWORD *)(a1 + 20);
  result = sub_23984973C(v4 + 40, a1 + 40);
  *a2 = v4;
  return result;
}

void sub_23980FA34(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

_QWORD *sub_23980FA5C(uint64_t a1, void *lpsrc)
{
  return sub_23980FA68(a1, a1, lpsrc);
}

_QWORD *sub_23980FA68(int a1, uint64_t a2, void *lpsrc)
{
  int *v5;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  int v15;
  _BYTE *v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  _BYTE *v21;
  _QWORD v22[3];
  __int128 v23;
  uint64_t v24;
  _QWORD v25[2];

  v5 = (int *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE3FD8, 0);
  if (v5)
    return (_QWORD *)sub_239849938(a2 + 8, v5 + 2);
  (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v22, lpsrc, 1);
  v7 = *(_QWORD *)(v22[0] + 16);
  v23 = *(_OWORD *)v22[0];
  v24 = v7;
  v22[0] = 0;
  result = (_QWORD *)MEMORY[0x23B83E31C]();
  if (*(_DWORD *)(a2 + 12))
    v9 = *(_DWORD *)(a2 + 8) == 0;
  else
    v9 = 1;
  v10 = *(_QWORD *)(a2 + 16);
  if (v9)
    v11 = 0;
  else
    v11 = *(_QWORD *)(a2 + 8);
  v12 = HIDWORD(v10);
  if (HIDWORD(v11) * HIDWORD(v10) == -1)
    sub_239EBFBC4((uint64_t)result, v8);
  v13 = *(_BYTE **)(a2 + 48);
  v22[0] = v13;
  v22[1] = v11;
  v22[2] = v10;
  v25[0] = &v23;
  v25[1] = v22;
  v14 = v24;
  if ((_DWORD)v24 == 1 && v10 == 1)
    return sub_23978E2A0(v25);
  if (DWORD2(v23) && HIDWORD(v23))
  {
    v15 = DWORD2(v23) - 1;
    v16 = (_BYTE *)v23;
    v17 = HIDWORD(v23) - 1;
    if (HIDWORD(v23) != 1)
    {
      v18 = HIDWORD(v24);
      if (DWORD2(v23) == 1)
      {
        do
        {
          *v13 = *v16;
          v16 += v18;
          v13 += v12;
          --v17;
        }
        while (v17);
      }
      else
      {
        v19 = 0;
        do
        {
          v20 = v15;
          v21 = v16;
          result = v13;
          do
          {
            *(_BYTE *)result = *v21;
            v21 += v14;
            result = (_QWORD *)((char *)result + v10);
            --v20;
          }
          while (v20);
          *(_BYTE *)result = *v21;
          v16 += v18;
          v13 += v12;
          ++v19;
        }
        while (v19 != v17);
      }
    }
    for (; v15; --v15)
    {
      *v13 = *v16;
      v16 += v14;
      v13 += v10;
    }
    *v13 = *v16;
  }
  return result;
}

uint64_t sub_23980FC3C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *sub_23980FC44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  if ((_DWORD)a2 != 1)
    sub_239EC2ED4(a1, a2);
  if (*(_DWORD *)(a1 + 12))
    v4 = *(_DWORD *)(a1 + 8) == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)(a1 + 16);
  if (v4)
    v6 = 0;
  else
    v6 = *(_QWORD *)(a1 + 8);
  if (HIDWORD(v6) * HIDWORD(v5) == -1)
    sub_239EBFBC4(a1, a2);
  v7 = *(_QWORD *)(a1 + 48);
  result = (_QWORD *)operator new();
  *result = v7;
  result[1] = v6;
  result[2] = v5;
  *a3 = result;
  return result;
}

_QWORD *sub_23980FCC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  if ((_DWORD)a2 != 1)
    sub_239EC2F00(a1, a2);
  if (*(_DWORD *)(a1 + 12))
    v4 = *(_DWORD *)(a1 + 8) == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)(a1 + 16);
  if (v4)
    v6 = 0;
  else
    v6 = *(_QWORD *)(a1 + 8);
  if (HIDWORD(v6) * HIDWORD(v5) == -1)
    sub_239EBFBC4(a1, a2);
  v7 = *(_QWORD *)(a1 + 48);
  result = (_QWORD *)operator new();
  *result = v7;
  result[1] = v6;
  result[2] = v5;
  *a3 = result;
  return result;
}

double sub_23980FD4C(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 40);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_23980FD74(uint64_t a1)
{
  sub_239916980(a1 + 40);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_23980FDB0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23980FE20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE42B8;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 20) = *(_OWORD *)(a1 + 20);
  result = sub_239849DC4(v4 + 40, a1 + 40);
  *a2 = v4;
  return result;
}

void sub_23980FE90(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

_QWORD *sub_23980FEB8(uint64_t a1, void *lpsrc)
{
  return sub_23980FEC4(a1, a1, lpsrc);
}

_QWORD *sub_23980FEC4(int a1, uint64_t a2, void *lpsrc)
{
  int *v5;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _WORD *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _WORD *v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _WORD *v23;
  _WORD *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  __int128 v29;
  uint64_t v30;
  _QWORD v31[2];

  v5 = (int *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE4328, 0);
  if (v5)
    return (_QWORD *)sub_239849FFC(a2 + 8, v5 + 2);
  (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v28, lpsrc, 2);
  v7 = *(_QWORD *)(v28[0] + 16);
  v29 = *(_OWORD *)v28[0];
  v30 = v7;
  v28[0] = 0;
  result = (_QWORD *)MEMORY[0x23B83E31C]();
  if (*(_DWORD *)(a2 + 12))
    v9 = *(_DWORD *)(a2 + 8) == 0;
  else
    v9 = 1;
  v10 = *(_QWORD *)(a2 + 16);
  if (v9)
    v11 = 0;
  else
    v11 = *(_QWORD *)(a2 + 8);
  v12 = HIDWORD(v10);
  if (HIDWORD(v11) * HIDWORD(v10) == -1)
    sub_239EBFBC4((uint64_t)result, v8);
  v13 = *(_WORD **)(a2 + 48);
  v28[0] = v13;
  v28[1] = v11;
  v28[2] = v10;
  v31[0] = &v29;
  v31[1] = v28;
  v14 = v30;
  v15 = v10;
  if ((_DWORD)v30 == 1 && v10 == 1)
    return sub_23978FC2C(v31);
  if (DWORD2(v29) && HIDWORD(v29))
  {
    v16 = DWORD2(v29) - 1;
    v17 = (_WORD *)v29;
    v18 = HIDWORD(v29) - 1;
    if (HIDWORD(v29) != 1)
    {
      v19 = HIDWORD(v30);
      if (DWORD2(v29) == 1)
      {
        do
        {
          *v13 = *v17;
          v17 += v19;
          v13 += v12;
          --v18;
        }
        while (v18);
LABEL_27:
        *v13 = *v17;
        return result;
      }
      v20 = 0;
      v21 = 2 * HIDWORD(v30);
      v22 = 2 * v12;
      result = (_QWORD *)(2 * v15);
      do
      {
        v23 = v13;
        v24 = v17;
        v25 = v16;
        do
        {
          *v23 = *v24;
          v24 += v14;
          v23 = (_WORD *)((char *)result + (_QWORD)v23);
          --v25;
        }
        while (v25);
        *v23 = *v24;
        v17 = (_WORD *)((char *)v17 + v21);
        v13 = (_WORD *)((char *)v13 + v22);
        ++v20;
      }
      while (v20 != v18);
    }
    if (v16)
    {
      v26 = 2 * v14;
      v27 = 2 * v15;
      do
      {
        *v13 = *v17;
        v17 = (_WORD *)((char *)v17 + v26);
        v13 = (_WORD *)((char *)v13 + v27);
        --v16;
      }
      while (v16);
    }
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_2398100B8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *sub_2398100C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  if ((_DWORD)a2 != 2)
    sub_239EC2ED4(a1, a2);
  if (*(_DWORD *)(a1 + 12))
    v4 = *(_DWORD *)(a1 + 8) == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)(a1 + 16);
  if (v4)
    v6 = 0;
  else
    v6 = *(_QWORD *)(a1 + 8);
  if (HIDWORD(v6) * HIDWORD(v5) == -1)
    sub_239EBFBC4(a1, a2);
  v7 = *(_QWORD *)(a1 + 48);
  result = (_QWORD *)operator new();
  *result = v7;
  result[1] = v6;
  result[2] = v5;
  *a3 = result;
  return result;
}

_QWORD *sub_239810144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  if ((_DWORD)a2 != 2)
    sub_239EC2F00(a1, a2);
  if (*(_DWORD *)(a1 + 12))
    v4 = *(_DWORD *)(a1 + 8) == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)(a1 + 16);
  if (v4)
    v6 = 0;
  else
    v6 = *(_QWORD *)(a1 + 8);
  if (HIDWORD(v6) * HIDWORD(v5) == -1)
    sub_239EBFBC4(a1, a2);
  v7 = *(_QWORD *)(a1 + 48);
  result = (_QWORD *)operator new();
  *result = v7;
  result[1] = v6;
  result[2] = v5;
  *a3 = result;
  return result;
}

double sub_2398101C8(uint64_t a1)
{
  BOOL v2;
  int v3;
  double result;

  if (*(_QWORD *)(a1 + 48))
  {
    if (*(_DWORD *)(a1 + 68))
      v2 = *(_DWORD *)(a1 + 64) == 0;
    else
      v2 = 1;
    if (v2)
      v3 = 0;
    else
      v3 = *(_DWORD *)(a1 + 68);
    if (v3 * (*(_QWORD *)(a1 + 72) >> 33) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_239916980(a1 + 40);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

uint64_t sub_23981024C(uint64_t a1)
{
  BOOL v2;
  int v3;

  if (*(_QWORD *)(a1 + 40))
  {
    if (*(_DWORD *)(a1 + 60))
      v2 = *(_DWORD *)(a1 + 56) == 0;
    else
      v2 = 1;
    if (v2)
      v3 = 0;
    else
      v3 = *(_DWORD *)(a1 + 60);
    if (v3 * (*(_QWORD *)(a1 + 64) >> 33) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_239916980(a1 + 32);
  return a1;
}

void sub_2398102D4(uint64_t a1)
{
  sub_2398101C8(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_2398102F8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239810368@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE5F58;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 20) = *(_OWORD *)(a1 + 20);
  result = sub_23984A55C(v4 + 40, a1 + 40);
  *a2 = v4;
  return result;
}

void sub_2398103D8(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

double sub_239810400(uint64_t a1, void *lpsrc)
{
  double result;

  *(_QWORD *)&result = sub_23981040C(a1, a1, lpsrc);
  return result;
}

__int16 sub_23981040C@<H0>(int a1@<W0>, uint64_t a2@<X1>, void *lpsrc@<X2>)
{
  void *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _WORD *v14;
  uint64_t v15;
  int v16;
  _WORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _WORD *v25;
  _WORD *v26;
  int v27;
  uint64_t v28;
  _QWORD v30[3];
  __int128 v31;
  uint64_t v32;
  _QWORD v33[2];

  v5 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE5FC8, 0);
  if (v5)
    return sub_23984A73C(a2 + 8, (uint64_t)v5 + 8);
  (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v30, lpsrc, 3);
  v7 = *(_QWORD *)(v30[0] + 16);
  v31 = *(_OWORD *)v30[0];
  v32 = v7;
  v30[0] = 0;
  v8 = MEMORY[0x23B83E31C]();
  if (*(_DWORD *)(a2 + 12))
    v10 = *(_DWORD *)(a2 + 8) == 0;
  else
    v10 = 1;
  v11 = *(_QWORD *)(a2 + 16);
  if (v10)
    v12 = 0;
  else
    v12 = *(_QWORD *)(a2 + 8);
  v13 = HIDWORD(v11);
  if (HIDWORD(v12) * HIDWORD(v11) == -1)
    sub_239EBFBC4(v8, v9);
  v14 = *(_WORD **)(a2 + 48);
  v30[0] = v14;
  v30[1] = v12;
  v30[2] = v11;
  v33[0] = &v31;
  v33[1] = v30;
  v15 = v11;
  if ((_DWORD)v32 == 1 && v11 == 1)
  {
    v6 = sub_2397912E0(v33, v9);
  }
  else if (DWORD2(v31) && HIDWORD(v31))
  {
    v16 = DWORD2(v31) - 1;
    v17 = (_WORD *)v31;
    v18 = 2 * v32;
    v19 = 2 * v15;
    v20 = HIDWORD(v31) - 1;
    if (HIDWORD(v31) != 1)
    {
      v21 = HIDWORD(v32);
      if (DWORD2(v31) == 1)
      {
        v28 = 2 * v13;
        do
        {
          *v14 = *v17;
          v17 += v21;
          v14 = (_WORD *)((char *)v14 + v28);
          --v20;
        }
        while (v20);
      }
      else
      {
        v22 = 0;
        v23 = 2 * HIDWORD(v32);
        v24 = 2 * v13;
        do
        {
          v25 = v14;
          v26 = v17;
          v27 = v16;
          do
          {
            *v25 = *v26;
            v26 = (_WORD *)((char *)v26 + v18);
            v25 = (_WORD *)((char *)v25 + v19);
            --v27;
          }
          while (v27);
          *v25 = *v26;
          v17 = (_WORD *)((char *)v17 + v23);
          v14 = (_WORD *)((char *)v14 + v24);
          ++v22;
        }
        while (v22 != v20);
      }
    }
    for (; v16; --v16)
    {
      *v14 = *v17;
      v17 = (_WORD *)((char *)v17 + v18);
      v14 = (_WORD *)((char *)v14 + v19);
    }
    LOWORD(v6) = *v17;
    *v14 = *v17;
  }
  return LOWORD(v6);
}

uint64_t sub_2398105F8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *sub_239810600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  if ((_DWORD)a2 != 3)
    sub_239EC2ED4(a1, a2);
  if (*(_DWORD *)(a1 + 12))
    v4 = *(_DWORD *)(a1 + 8) == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)(a1 + 16);
  if (v4)
    v6 = 0;
  else
    v6 = *(_QWORD *)(a1 + 8);
  if (HIDWORD(v6) * HIDWORD(v5) == -1)
    sub_239EBFBC4(a1, a2);
  v7 = *(_QWORD *)(a1 + 48);
  result = (_QWORD *)operator new();
  *result = v7;
  result[1] = v6;
  result[2] = v5;
  *a3 = result;
  return result;
}

_QWORD *sub_239810684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  if ((_DWORD)a2 != 3)
    sub_239EC2F00(a1, a2);
  if (*(_DWORD *)(a1 + 12))
    v4 = *(_DWORD *)(a1 + 8) == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)(a1 + 16);
  if (v4)
    v6 = 0;
  else
    v6 = *(_QWORD *)(a1 + 8);
  if (HIDWORD(v6) * HIDWORD(v5) == -1)
    sub_239EBFBC4(a1, a2);
  v7 = *(_QWORD *)(a1 + 48);
  result = (_QWORD *)operator new();
  *result = v7;
  result[1] = v6;
  result[2] = v5;
  *a3 = result;
  return result;
}

uint64_t sub_239810708(uint64_t a1)
{
  sub_239916980(a1 + 40);
  return nullsub_4(a1);
}

void sub_239810730(uint64_t a1)
{
  sub_239916980(a1 + 40);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_23981076C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_2398107DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250ADDAE8;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 20) = *(_OWORD *)(a1 + 20);
  result = sub_23984AB0C(v4 + 40, a1 + 40);
  *a2 = v4;
  return result;
}

void sub_23981084C(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

float sub_239810874(uint64_t a1, void *lpsrc)
{
  return sub_239810880(a1, a1, lpsrc);
}

float sub_239810880(int a1, uint64_t a2, void *lpsrc)
{
  int *v5;
  float result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  _DWORD *v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  _DWORD *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  __int128 v30;
  uint64_t v31;
  _QWORD v32[2];

  v5 = (int *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE6030, 0);
  if (v5)
    return sub_23984AD44(a2 + 8, v5 + 2);
  (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v29, lpsrc, 4);
  v7 = *(_QWORD *)(v29[0] + 16);
  v30 = *(_OWORD *)v29[0];
  v31 = v7;
  v29[0] = 0;
  v8 = MEMORY[0x23B83E31C]();
  if (*(_DWORD *)(a2 + 12))
    v10 = *(_DWORD *)(a2 + 8) == 0;
  else
    v10 = 1;
  v11 = *(_QWORD *)(a2 + 16);
  if (v10)
    v12 = 0;
  else
    v12 = *(_QWORD *)(a2 + 8);
  v13 = HIDWORD(v11);
  if (HIDWORD(v12) * HIDWORD(v11) == -1)
    sub_239EBFBC4(v8, v9);
  v14 = *(_DWORD **)(a2 + 48);
  v29[0] = v14;
  v29[1] = v12;
  v29[2] = v11;
  v32[0] = &v30;
  v32[1] = v29;
  v15 = v31;
  v16 = v11;
  if ((_DWORD)v31 == 1 && v11 == 1)
  {
    sub_239717504(v32);
    return result;
  }
  if (DWORD2(v30) && HIDWORD(v30))
  {
    v17 = DWORD2(v30) - 1;
    v18 = (_DWORD *)v30;
    v19 = HIDWORD(v30) - 1;
    if (HIDWORD(v30) != 1)
    {
      v20 = HIDWORD(v31);
      if (DWORD2(v30) == 1)
      {
        do
        {
          *v14 = *v18;
          v18 += v20;
          v14 += v13;
          --v19;
        }
        while (v19);
LABEL_27:
        result = *(float *)v18;
        *v14 = *v18;
        return result;
      }
      v21 = 0;
      v22 = 4 * HIDWORD(v31);
      v23 = 4 * v13;
      do
      {
        v24 = v14;
        v25 = v18;
        v26 = v17;
        do
        {
          *v24 = *v25;
          v25 += v15;
          v24 += v16;
          --v26;
        }
        while (v26);
        *v24 = *v25;
        v18 = (_DWORD *)((char *)v18 + v22);
        v14 = (_DWORD *)((char *)v14 + v23);
        ++v21;
      }
      while (v21 != v19);
    }
    if (v17)
    {
      v27 = 4 * v15;
      v28 = 4 * v16;
      do
      {
        *v14 = *v18;
        v18 = (_DWORD *)((char *)v18 + v27);
        v14 = (_DWORD *)((char *)v14 + v28);
        --v17;
      }
      while (v17);
    }
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_239810A74(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *sub_239810A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  if ((_DWORD)a2 != 4)
    sub_239EC2ED4(a1, a2);
  if (*(_DWORD *)(a1 + 12))
    v4 = *(_DWORD *)(a1 + 8) == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)(a1 + 16);
  if (v4)
    v6 = 0;
  else
    v6 = *(_QWORD *)(a1 + 8);
  if (HIDWORD(v6) * HIDWORD(v5) == -1)
    sub_239EBFBC4(a1, a2);
  v7 = *(_QWORD *)(a1 + 48);
  result = (_QWORD *)operator new();
  *result = v7;
  result[1] = v6;
  result[2] = v5;
  *a3 = result;
  return result;
}

_QWORD *sub_239810B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  if ((_DWORD)a2 != 4)
    sub_239EC2F00(a1, a2);
  if (*(_DWORD *)(a1 + 12))
    v4 = *(_DWORD *)(a1 + 8) == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)(a1 + 16);
  if (v4)
    v6 = 0;
  else
    v6 = *(_QWORD *)(a1 + 8);
  if (HIDWORD(v6) * HIDWORD(v5) == -1)
    sub_239EBFBC4(a1, a2);
  v7 = *(_QWORD *)(a1 + 48);
  result = (_QWORD *)operator new();
  *result = v7;
  result[1] = v6;
  result[2] = v5;
  *a3 = result;
  return result;
}

double sub_239810B84(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239810BAC(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239810BE8()
{
  return 5;
}

_UNKNOWN **sub_239810BF0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239810C60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECA18;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984B37C(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239810CE0(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

uint64_t *sub_239810D08(uint64_t *a1)
{
  uint64_t v2;
  __n128 v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    sub_239916980(v2 + 64);
    v3 = nullsub_4(v2);
    MEMORY[0x23B83E31C](v3);
  }
  return a1;
}

unsigned int *sub_239810D58(uint64_t a1, void *lpsrc)
{
  return sub_239810D64(a1, a1, lpsrc);
}

unsigned int *sub_239810D64(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  _QWORD v23[2];
  __int128 v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED488, 0);
  if (v5)
    return (unsigned int *)sub_23984B990(a2 + 8, (__int128 *)(v5 + 8));
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v24, lpsrc, 5);
  v7 = v24;
  v9 = *(_OWORD *)(v24 + 16);
  v8 = *(_OWORD *)(v24 + 32);
  v22[0] = *(_OWORD *)v24;
  v22[1] = v9;
  v22[2] = v8;
  *(_QWORD *)&v24 = 0;
  v14 = MEMORY[0x23B83E31C](v7, 0xC400A2AC0F1, v10, v11, v12, v13);
  v16 = *(_QWORD *)(a2 + 72);
  if (*(_DWORD *)(a2 + 36))
    v17 = *(_DWORD *)(a2 + 32) == 0;
  else
    v17 = 1;
  v18 = *(_QWORD *)(a2 + 32);
  if (v17)
    v18 = 0;
  *(_QWORD *)((char *)&v24 + 4) = v18;
  LODWORD(v24) = 2;
  v19 = v24;
  LODWORD(v24) = 1;
  v20 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)((char *)&v24 + 4) = v20;
  if (HIDWORD(v20) * HIDWORD(v18) == -1)
    sub_239EBFBC4(v14, v15);
  v21 = v24;
  *(_QWORD *)&v24 = v16;
  *((_QWORD *)&v24 + 1) = v19;
  v25 = HIDWORD(v18);
  v26 = v21;
  v27 = HIDWORD(v20);
  v28 = v18;
  v29 = v20;
  v23[0] = v22;
  v23[1] = &v24;
  return sub_23978E92C((unsigned int *)v23);
}

uint64_t sub_239810EEC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_239810EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 5)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 2;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239811010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 5)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 2;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_239811130()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332C8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569332C8))
  {
    v2 = sub_23984BE14();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569332B0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2569332C0 = *((_QWORD *)v2 + 2);
      xmmword_2569332B0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569332B0, &dword_23940C000);
    __cxa_guard_release(&qword_2569332C8);
  }
  if (byte_2569332C7 >= 0)
    return &xmmword_2569332B0;
  else
    return (__int128 *)xmmword_2569332B0;
}

void sub_2398111F0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569332C8);
  _Unwind_Resume(a1);
}

double sub_239811208(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239811230(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23981126C()
{
  return 6;
}

_UNKNOWN **sub_239811274()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_2398112E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECA98;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984C9F0(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239811364(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

uint64_t *sub_23981138C(uint64_t a1, void *lpsrc)
{
  return sub_239811398(a1, a1, lpsrc);
}

uint64_t *sub_239811398(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  uint64_t v23[2];
  __int128 v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED4A0, 0);
  if (v5)
    return (uint64_t *)sub_23984D1F4(a2 + 8, (__int128 *)(v5 + 8));
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v24, lpsrc, 6);
  v7 = v24;
  v9 = *(_OWORD *)(v24 + 16);
  v8 = *(_OWORD *)(v24 + 32);
  v22[0] = *(_OWORD *)v24;
  v22[1] = v9;
  v22[2] = v8;
  *(_QWORD *)&v24 = 0;
  v14 = MEMORY[0x23B83E31C](v7, 0xC400A2AC0F1, v10, v11, v12, v13);
  v16 = *(_QWORD *)(a2 + 72);
  if (*(_DWORD *)(a2 + 36))
    v17 = *(_DWORD *)(a2 + 32) == 0;
  else
    v17 = 1;
  v18 = *(_QWORD *)(a2 + 32);
  if (v17)
    v18 = 0;
  *(_QWORD *)((char *)&v24 + 4) = v18;
  LODWORD(v24) = 2;
  v19 = v24;
  LODWORD(v24) = 1;
  v20 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)((char *)&v24 + 4) = v20;
  if (HIDWORD(v20) * HIDWORD(v18) == -1)
    sub_239EBFBC4(v14, v15);
  v21 = v24;
  *(_QWORD *)&v24 = v16;
  *((_QWORD *)&v24 + 1) = v19;
  v25 = HIDWORD(v18);
  v26 = v21;
  v27 = HIDWORD(v20);
  v28 = v18;
  v29 = v20;
  v23[0] = (uint64_t)v22;
  v23[1] = (uint64_t)&v24;
  return sub_23984D6AC(v23);
}

uint64_t sub_239811520(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_239811528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 6)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 2;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239811644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 6)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 2;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_239811764()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933388);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933388))
  {
    v2 = sub_23984D864();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256933370, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933380 = *((_QWORD *)v2 + 2);
      xmmword_256933370 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933370, &dword_23940C000);
    __cxa_guard_release(&qword_256933388);
  }
  if (byte_256933387 >= 0)
    return &xmmword_256933370;
  else
    return (__int128 *)xmmword_256933370;
}

void sub_239811824(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933388);
  _Unwind_Resume(a1);
}

double sub_23981183C(uint64_t a1)
{
  BOOL v2;
  int v4;
  double result;

  if (*(_QWORD *)(a1 + 72))
  {
    if (*(_DWORD *)(a1 + 96))
      v2 = *(_DWORD *)(a1 + 92) == 0;
    else
      v2 = 1;
    if (v2 || *(_DWORD *)(a1 + 88) == 0)
      v4 = 0;
    else
      v4 = *(_DWORD *)(a1 + 96);
    if (v4 * (*(_DWORD *)(a1 + 108) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

uint64_t sub_2398118C8(uint64_t a1)
{
  BOOL v2;
  int v4;

  if (*(_QWORD *)(a1 + 64))
  {
    if (*(_DWORD *)(a1 + 88))
      v2 = *(_DWORD *)(a1 + 84) == 0;
    else
      v2 = 1;
    if (v2 || *(_DWORD *)(a1 + 80) == 0)
      v4 = 0;
    else
      v4 = *(_DWORD *)(a1 + 88);
    if (v4 * (*(_DWORD *)(a1 + 100) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_239916980(a1 + 56);
  return a1;
}

void sub_239811958(uint64_t a1)
{
  sub_23981183C(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23981197C()
{
  return 7;
}

_UNKNOWN **sub_239811984()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_2398119F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECB18;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984E418(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239811A74(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

uint64_t *sub_239811A9C(uint64_t *a1)
{
  uint64_t v2;
  double v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_23981183C(v2);
    MEMORY[0x23B83E31C](v3);
  }
  return a1;
}

double sub_239811AE0(uint64_t a1, void *lpsrc)
{
  return sub_239811AEC(a1, a1, lpsrc);
}

double sub_239811AEC(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  double result;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  uint64_t v23[2];
  __int128 v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED4B8, 0);
  if (v5)
  {
    sub_23984E854(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v24, lpsrc, 7);
    v7 = v24;
    v9 = *(_OWORD *)(v24 + 16);
    v8 = *(_OWORD *)(v24 + 32);
    v22[0] = *(_OWORD *)v24;
    v22[1] = v9;
    v22[2] = v8;
    *(_QWORD *)&v24 = 0;
    v14 = MEMORY[0x23B83E31C](v7, 0xC400A2AC0F1, v10, v11, v12, v13);
    v16 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v17 = *(_DWORD *)(a2 + 32) == 0;
    else
      v17 = 1;
    v18 = *(_QWORD *)(a2 + 32);
    if (v17)
      v18 = 0;
    *(_QWORD *)((char *)&v24 + 4) = v18;
    LODWORD(v24) = 2;
    v19 = v24;
    LODWORD(v24) = 1;
    v20 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v24 + 4) = v20;
    if (HIDWORD(v20) * HIDWORD(v18) == -1)
      sub_239EBFBC4(v14, v15);
    v21 = v24;
    *(_QWORD *)&v24 = v16;
    *((_QWORD *)&v24 + 1) = v19;
    v25 = HIDWORD(v18);
    v26 = v21;
    v27 = HIDWORD(v20);
    v28 = v18;
    v29 = v20;
    v23[0] = (uint64_t)v22;
    v23[1] = (uint64_t)&v24;
    *(_QWORD *)&result = sub_2397919D8(v23);
  }
  return result;
}

uint64_t sub_239811C74(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_239811C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 7)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 2;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239811D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 7)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 2;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_239811EB8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933448);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933448))
  {
    v2 = sub_23984EE34();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256933430, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933440 = *((_QWORD *)v2 + 2);
      xmmword_256933430 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933430, &dword_23940C000);
    __cxa_guard_release(&qword_256933448);
  }
  if (byte_256933447 >= 0)
    return &xmmword_256933430;
  else
    return (__int128 *)xmmword_256933430;
}

void sub_239811F78(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933448);
  _Unwind_Resume(a1);
}

double sub_239811F90(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239811FB8(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239811FF4()
{
  return 8;
}

_UNKNOWN **sub_239811FFC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23981206C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECB98;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984F618(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_2398120EC(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

float sub_239812114(uint64_t a1, void *lpsrc)
{
  return sub_239812120(a1, a1, lpsrc);
}

float sub_239812120(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  float result;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  uint64_t v23[2];
  __int128 v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED4D0, 0);
  if (v5)
  {
    sub_23984FA8C(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v24, lpsrc, 8);
    v7 = v24;
    v9 = *(_OWORD *)(v24 + 16);
    v8 = *(_OWORD *)(v24 + 32);
    v22[0] = *(_OWORD *)v24;
    v22[1] = v9;
    v22[2] = v8;
    *(_QWORD *)&v24 = 0;
    v14 = MEMORY[0x23B83E31C](v7, 0xC400A2AC0F1, v10, v11, v12, v13);
    v16 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v17 = *(_DWORD *)(a2 + 32) == 0;
    else
      v17 = 1;
    v18 = *(_QWORD *)(a2 + 32);
    if (v17)
      v18 = 0;
    *(_QWORD *)((char *)&v24 + 4) = v18;
    LODWORD(v24) = 2;
    v19 = v24;
    LODWORD(v24) = 1;
    v20 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v24 + 4) = v20;
    if (HIDWORD(v20) * HIDWORD(v18) == -1)
      sub_239EBFBC4(v14, v15);
    v21 = v24;
    *(_QWORD *)&v24 = v16;
    *((_QWORD *)&v24 + 1) = v19;
    v25 = HIDWORD(v18);
    v26 = v21;
    v27 = HIDWORD(v20);
    v28 = v18;
    v29 = v20;
    v23[0] = (uint64_t)v22;
    v23[1] = (uint64_t)&v24;
    return sub_239792D70(v23);
  }
  return result;
}

uint64_t sub_2398122A8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_2398122B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 8)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 2;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_2398123CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 8)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 2;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_2398124EC()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933508);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933508))
  {
    v2 = sub_23984FF34();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569334F0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933500 = *((_QWORD *)v2 + 2);
      xmmword_2569334F0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569334F0, &dword_23940C000);
    __cxa_guard_release(&qword_256933508);
  }
  if (byte_256933507 >= 0)
    return &xmmword_2569334F0;
  else
    return (__int128 *)xmmword_2569334F0;
}

void sub_2398125AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933508);
  _Unwind_Resume(a1);
}

double sub_2398125C4(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2398125EC(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239812628()
{
  return 9;
}

_UNKNOWN **sub_239812630()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_2398126A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECC18;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984B37C(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239812720(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_239812748(uint64_t a1, void *lpsrc)
{
  sub_239812754(a1, a1, lpsrc);
}

void sub_239812754(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED4E8, 0);
  if (v5)
  {
    sub_2398502E4(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 9);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 3;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_23978F020((uint64_t)v22);
  }
}

uint64_t sub_2398128DC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_2398128E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 9)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239812A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 9)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_239812B20()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569335C8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569335C8))
  {
    v2 = sub_2398505CC();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569335B0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2569335C0 = *((_QWORD *)v2 + 2);
      xmmword_2569335B0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569335B0, &dword_23940C000);
    __cxa_guard_release(&qword_2569335C8);
  }
  if (byte_2569335C7 >= 0)
    return &xmmword_2569335B0;
  else
    return (__int128 *)xmmword_2569335B0;
}

void sub_239812BE0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569335C8);
  _Unwind_Resume(a1);
}

double sub_239812BF8(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239812C20(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

