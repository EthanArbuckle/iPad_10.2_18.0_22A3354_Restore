uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV13RequestFailedV6ReasonOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F1A5DC4 + 4 * byte_23F2722BF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F1A5DF8 + 4 * byte_23F2722BA[v4]))();
}

uint64_t sub_23F1A5DFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F1A5E04);
  return result;
}

_BYTE *sub_23F1A5E0C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F1A5E14);
  return sub_23F1801B4((_BYTE *)a1, a2 + 3);
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.FinalTransactionPosted.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.SpanEnded.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.SpanEnded.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.SpanStarted.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.SpanStarted.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.DeferredTransactionPostAccepted.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionReady.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23F1A5EB0 + 4 * byte_23F2722C9[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23F1A5EE4 + 4 * byte_23F2722C4[v4]))();
}

uint64_t sub_23F1A5EE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1A5EEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F1A5EF4);
  return result;
}

uint64_t sub_23F1A5F00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F1A5F08);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23F1A5F0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1A5F14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.DeferredTransactionReady.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.DeferredTransactionStateChanged.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.InjectionResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F1A5F8C + 4 * byte_23F2722D3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F1A5FC0 + 4 * byte_23F2722CE[v4]))();
}

uint64_t sub_23F1A5FC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1A5FC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F1A5FD0);
  return result;
}

uint64_t sub_23F1A5FDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F1A5FE4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F1A5FE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1A5FF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.InjectionResponse.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.InjectionResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.DisableInjection.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.DisableInjection.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.EnableInjection.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.EnableInjection.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.TerminateSession.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.TerminateSession.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Sync.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Sync.CodingKeys;
}

uint64_t _s16IntelligenceFlow17SystemRequirementO21AuthenticationRequestV19AuthenticationLevelOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23F180230(-1);
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23F180230((*a1 | (v4 << 8)) - 2);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23F180230((*a1 | (v4 << 8)) - 2);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23F180230((*a1 | (v4 << 8)) - 2);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return sub_23F180230(v8);
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV25InjectionResponseAcceptedV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F1A611C + 4 * byte_23F2722DD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F1A6150 + 4 * byte_23F2722D8[v4]))();
}

uint64_t sub_23F1A6154(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F1A615CLL);
  return result;
}

_BYTE *sub_23F1A6164(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F1A616CLL);
  return sub_23F1801B4((_BYTE *)a1, a2 + 1);
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.ReplaceCurrentTranscript.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.RequestCurrentTranscript.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.RequestCurrentTranscript.CodingKeys;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV22InjectionValueCapturedV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23F1A61E8 + 4 * byte_23F2722E7[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23F1A621C + 4 * byte_23F2722E2[v4]))();
}

uint64_t sub_23F1A6220(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F1A6228);
  return result;
}

_BYTE *sub_23F1A6230(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F1A6238);
  return sub_23F1801B4((_BYTE *)a1, a2 + 5);
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.PostDeferredTransaction.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.DisableDeferredTransactions.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.DisableDeferredTransactions.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.EnableDeferredTransactions.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.Payload.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF3)
  {
    if (a2 + 13 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 13) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 14;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v5 = v6 - 14;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.Payload.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_23F1A634C + 4 * byte_23F2722F1[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_23F1A6380 + 4 * byte_23F2722EC[v4]))();
}

uint64_t sub_23F1A6380(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1A6388(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F1A6390);
  return result;
}

uint64_t sub_23F1A639C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F1A63A4);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_23F1A63A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1A63B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.DeferredTransactionStateChangedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionStateChangedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.DeferredTransactionReadyCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionReadyCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.DeferredTransactionPostAcceptedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionPostAcceptedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.SpanStartedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.SpanStartedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.SpanEndedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.SpanEndedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.FinalTransactionPostedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.FinalTransactionPostedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.CurrentTranscriptCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.CurrentTranscriptCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.SyncedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.SyncedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.TranscriptReplacementAcceptedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.TranscriptReplacementAcceptedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.RequestFailedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.RequestFailedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.InjectionStateChangedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.InjectionStateChangedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.InjectionRequestCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.InjectionRequestCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.InjectionResponseAcceptedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.InjectionResponseAcceptedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.InjectionValueCapturedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.InjectionValueCapturedCodingKeys;
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.Payload.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 9) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v5 = v6 - 10;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.Payload.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23F1A6580 + 4 * byte_23F2722FB[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23F1A65B4 + 4 * byte_23F2722F6[v4]))();
}

uint64_t sub_23F1A65B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1A65BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F1A65C4);
  return result;
}

uint64_t sub_23F1A65D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F1A65D8);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23F1A65DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1A65E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.EnableDeferredTransactionsCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.EnableDeferredTransactionsCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.DisableDeferredTransactionsCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.DisableDeferredTransactionsCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.PostDeferredTransactionCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.PostDeferredTransactionCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.RequestCurrentTranscriptCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.RequestCurrentTranscriptCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.ReplaceCurrentTranscriptCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.ReplaceCurrentTranscriptCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.SyncCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.SyncCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.TerminateSessionCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.TerminateSessionCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.EnableInjectionCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.EnableInjectionCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.DisableInjectionCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.DisableInjectionCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.InjectionResponseCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.InjectionResponseCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.CodingKeys;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV21InjectionStateChangedV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F1A66F0 + 4 * byte_23F272300[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F1A6710 + 4 * byte_23F272305[v4]))();
}

_BYTE *sub_23F1A66F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F1A6710(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F1A6718(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F1A6720(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F1A6728(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F1A6730(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.CodingKeys;
}

unint64_t sub_23F1A6750()
{
  unint64_t result;

  result = qword_256E02A00;
  if (!qword_256E02A00)
  {
    result = MEMORY[0x242667160](&unk_23F2742BC, &type metadata for SessionClientDebuggerEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A00);
  }
  return result;
}

unint64_t sub_23F1A6790()
{
  unint64_t result;

  result = qword_256E02A08;
  if (!qword_256E02A08)
  {
    result = MEMORY[0x242667160](&unk_23F274374, &type metadata for SessionServerDebuggerEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A08);
  }
  return result;
}

unint64_t sub_23F1A67D0()
{
  unint64_t result;

  result = qword_256E02A10;
  if (!qword_256E02A10)
  {
    result = MEMORY[0x242667160](&unk_23F27442C, &type metadata for SessionClientDebuggerEvent.Payload.InjectionResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A10);
  }
  return result;
}

unint64_t sub_23F1A6810()
{
  unint64_t result;

  result = qword_256E02A18;
  if (!qword_256E02A18)
  {
    result = MEMORY[0x242667160](&unk_23F2744E4, &type metadata for SessionClientDebuggerEvent.Payload.DisableInjectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A18);
  }
  return result;
}

unint64_t sub_23F1A6850()
{
  unint64_t result;

  result = qword_256E02A20;
  if (!qword_256E02A20)
  {
    result = MEMORY[0x242667160](&unk_23F27459C, &type metadata for SessionClientDebuggerEvent.Payload.EnableInjectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A20);
  }
  return result;
}

unint64_t sub_23F1A6890()
{
  unint64_t result;

  result = qword_256E02A28;
  if (!qword_256E02A28)
  {
    result = MEMORY[0x242667160](&unk_23F274654, &type metadata for SessionClientDebuggerEvent.Payload.TerminateSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A28);
  }
  return result;
}

unint64_t sub_23F1A68D0()
{
  unint64_t result;

  result = qword_256E02A30;
  if (!qword_256E02A30)
  {
    result = MEMORY[0x242667160](&unk_23F27470C, &type metadata for SessionClientDebuggerEvent.Payload.SyncCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A30);
  }
  return result;
}

unint64_t sub_23F1A6910()
{
  unint64_t result;

  result = qword_256E02A38;
  if (!qword_256E02A38)
  {
    result = MEMORY[0x242667160](&unk_23F2747C4, &type metadata for SessionClientDebuggerEvent.Payload.ReplaceCurrentTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A38);
  }
  return result;
}

unint64_t sub_23F1A6950()
{
  unint64_t result;

  result = qword_256E02A40;
  if (!qword_256E02A40)
  {
    result = MEMORY[0x242667160](&unk_23F27487C, &type metadata for SessionClientDebuggerEvent.Payload.RequestCurrentTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A40);
  }
  return result;
}

unint64_t sub_23F1A6990()
{
  unint64_t result;

  result = qword_256E02A48;
  if (!qword_256E02A48)
  {
    result = MEMORY[0x242667160](&unk_23F274934, &type metadata for SessionClientDebuggerEvent.Payload.PostDeferredTransactionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A48);
  }
  return result;
}

unint64_t sub_23F1A69D0()
{
  unint64_t result;

  result = qword_256E02A50;
  if (!qword_256E02A50)
  {
    result = MEMORY[0x242667160](&unk_23F2749EC, &type metadata for SessionClientDebuggerEvent.Payload.DisableDeferredTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A50);
  }
  return result;
}

unint64_t sub_23F1A6A10()
{
  unint64_t result;

  result = qword_256E02A58;
  if (!qword_256E02A58)
  {
    result = MEMORY[0x242667160](&unk_23F274AA4, &type metadata for SessionClientDebuggerEvent.Payload.EnableDeferredTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A58);
  }
  return result;
}

unint64_t sub_23F1A6A50()
{
  unint64_t result;

  result = qword_256E02A60;
  if (!qword_256E02A60)
  {
    result = MEMORY[0x242667160](&unk_23F274B5C, &type metadata for SessionClientDebuggerEvent.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A60);
  }
  return result;
}

unint64_t sub_23F1A6A90()
{
  unint64_t result;

  result = qword_256E02A68;
  if (!qword_256E02A68)
  {
    result = MEMORY[0x242667160](&unk_23F274C14, &type metadata for SessionServerDebuggerEvent.Payload.InjectionValueCapturedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A68);
  }
  return result;
}

unint64_t sub_23F1A6AD0()
{
  unint64_t result;

  result = qword_256E02A70;
  if (!qword_256E02A70)
  {
    result = MEMORY[0x242667160](&unk_23F274CCC, &type metadata for SessionServerDebuggerEvent.Payload.InjectionResponseAcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A70);
  }
  return result;
}

unint64_t sub_23F1A6B10()
{
  unint64_t result;

  result = qword_256E02A78;
  if (!qword_256E02A78)
  {
    result = MEMORY[0x242667160](&unk_23F274D84, &type metadata for SessionServerDebuggerEvent.Payload.InjectionRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A78);
  }
  return result;
}

unint64_t sub_23F1A6B50()
{
  unint64_t result;

  result = qword_256E02A80;
  if (!qword_256E02A80)
  {
    result = MEMORY[0x242667160](&unk_23F274E3C, &type metadata for SessionServerDebuggerEvent.Payload.InjectionStateChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A80);
  }
  return result;
}

unint64_t sub_23F1A6B90()
{
  unint64_t result;

  result = qword_256E02A88;
  if (!qword_256E02A88)
  {
    result = MEMORY[0x242667160](&unk_23F274EF4, &type metadata for SessionServerDebuggerEvent.Payload.RequestFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A88);
  }
  return result;
}

unint64_t sub_23F1A6BD0()
{
  unint64_t result;

  result = qword_256E02A90;
  if (!qword_256E02A90)
  {
    result = MEMORY[0x242667160](&unk_23F274FAC, &type metadata for SessionServerDebuggerEvent.Payload.TranscriptReplacementAcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A90);
  }
  return result;
}

unint64_t sub_23F1A6C10()
{
  unint64_t result;

  result = qword_256E02A98;
  if (!qword_256E02A98)
  {
    result = MEMORY[0x242667160](&unk_23F275064, &type metadata for SessionServerDebuggerEvent.Payload.SyncedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02A98);
  }
  return result;
}

unint64_t sub_23F1A6C50()
{
  unint64_t result;

  result = qword_256E02AA0;
  if (!qword_256E02AA0)
  {
    result = MEMORY[0x242667160](&unk_23F27511C, &type metadata for SessionServerDebuggerEvent.Payload.CurrentTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02AA0);
  }
  return result;
}

unint64_t sub_23F1A6C90()
{
  unint64_t result;

  result = qword_256E02AA8;
  if (!qword_256E02AA8)
  {
    result = MEMORY[0x242667160](&unk_23F2751D4, &type metadata for SessionServerDebuggerEvent.Payload.FinalTransactionPostedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02AA8);
  }
  return result;
}

unint64_t sub_23F1A6CD0()
{
  unint64_t result;

  result = qword_256E02AB0;
  if (!qword_256E02AB0)
  {
    result = MEMORY[0x242667160](&unk_23F27528C, &type metadata for SessionServerDebuggerEvent.Payload.SpanEndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02AB0);
  }
  return result;
}

unint64_t sub_23F1A6D10()
{
  unint64_t result;

  result = qword_256E02AB8;
  if (!qword_256E02AB8)
  {
    result = MEMORY[0x242667160](&unk_23F275344, &type metadata for SessionServerDebuggerEvent.Payload.SpanStartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02AB8);
  }
  return result;
}

unint64_t sub_23F1A6D50()
{
  unint64_t result;

  result = qword_256E02AC0;
  if (!qword_256E02AC0)
  {
    result = MEMORY[0x242667160](&unk_23F2753FC, &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionPostAcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02AC0);
  }
  return result;
}

unint64_t sub_23F1A6D90()
{
  unint64_t result;

  result = qword_256E02AC8;
  if (!qword_256E02AC8)
  {
    result = MEMORY[0x242667160](&unk_23F2754B4, &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionReadyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02AC8);
  }
  return result;
}

unint64_t sub_23F1A6DD0()
{
  unint64_t result;

  result = qword_256E02AD0;
  if (!qword_256E02AD0)
  {
    result = MEMORY[0x242667160](&unk_23F27556C, &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionStateChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02AD0);
  }
  return result;
}

unint64_t sub_23F1A6E10()
{
  unint64_t result;

  result = qword_256E02AD8;
  if (!qword_256E02AD8)
  {
    result = MEMORY[0x242667160](&unk_23F275624, &type metadata for SessionServerDebuggerEvent.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02AD8);
  }
  return result;
}

unint64_t sub_23F1A6E50()
{
  unint64_t result;

  result = qword_256E02AE0;
  if (!qword_256E02AE0)
  {
    result = MEMORY[0x242667160](&unk_23F2756DC, &type metadata for SessionClientDebuggerEvent.EnableDeferredTransactions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02AE0);
  }
  return result;
}

unint64_t sub_23F1A6E90()
{
  unint64_t result;

  result = qword_256E02AE8;
  if (!qword_256E02AE8)
  {
    result = MEMORY[0x242667160](&unk_23F275794, &type metadata for SessionClientDebuggerEvent.DisableDeferredTransactions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02AE8);
  }
  return result;
}

unint64_t sub_23F1A6ED0()
{
  unint64_t result;

  result = qword_256E02AF0;
  if (!qword_256E02AF0)
  {
    result = MEMORY[0x242667160](&unk_23F27584C, &type metadata for SessionClientDebuggerEvent.PostDeferredTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02AF0);
  }
  return result;
}

unint64_t sub_23F1A6F10()
{
  unint64_t result;

  result = qword_256E02AF8;
  if (!qword_256E02AF8)
  {
    result = MEMORY[0x242667160](&unk_23F275904, &type metadata for SessionClientDebuggerEvent.RequestCurrentTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02AF8);
  }
  return result;
}

unint64_t sub_23F1A6F50()
{
  unint64_t result;

  result = qword_256E02B00;
  if (!qword_256E02B00)
  {
    result = MEMORY[0x242667160](&unk_23F2759BC, &type metadata for SessionClientDebuggerEvent.ReplaceCurrentTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B00);
  }
  return result;
}

unint64_t sub_23F1A6F90()
{
  unint64_t result;

  result = qword_256E02B08;
  if (!qword_256E02B08)
  {
    result = MEMORY[0x242667160](&unk_23F275A74, &type metadata for SessionClientDebuggerEvent.Sync.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B08);
  }
  return result;
}

unint64_t sub_23F1A6FD0()
{
  unint64_t result;

  result = qword_256E02B10;
  if (!qword_256E02B10)
  {
    result = MEMORY[0x242667160](&unk_23F275B7C, &type metadata for SessionClientDebuggerEvent.EnableInjection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B10);
  }
  return result;
}

unint64_t sub_23F1A7010()
{
  unint64_t result;

  result = qword_256E02B18;
  if (!qword_256E02B18)
  {
    result = MEMORY[0x242667160](&unk_23F275C34, &type metadata for SessionClientDebuggerEvent.DisableInjection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B18);
  }
  return result;
}

unint64_t sub_23F1A7050()
{
  unint64_t result;

  result = qword_256E02B20;
  if (!qword_256E02B20)
  {
    result = MEMORY[0x242667160](&unk_23F275CEC, &type metadata for SessionClientDebuggerEvent.InjectionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B20);
  }
  return result;
}

unint64_t sub_23F1A7090()
{
  unint64_t result;

  result = qword_256E02B28;
  if (!qword_256E02B28)
  {
    result = MEMORY[0x242667160](&unk_23F275DA4, &type metadata for SessionServerDebuggerEvent.DeferredTransactionStateChanged.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B28);
  }
  return result;
}

unint64_t sub_23F1A70D0()
{
  unint64_t result;

  result = qword_256E02B30;
  if (!qword_256E02B30)
  {
    result = MEMORY[0x242667160](&unk_23F275E5C, &type metadata for SessionServerDebuggerEvent.DeferredTransactionReady.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B30);
  }
  return result;
}

unint64_t sub_23F1A7110()
{
  unint64_t result;

  result = qword_256E02B38;
  if (!qword_256E02B38)
  {
    result = MEMORY[0x242667160](&unk_23F275F14, &type metadata for SessionServerDebuggerEvent.DeferredTransactionPostAccepted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B38);
  }
  return result;
}

unint64_t sub_23F1A7150()
{
  unint64_t result;

  result = qword_256E02B40;
  if (!qword_256E02B40)
  {
    result = MEMORY[0x242667160](&unk_23F275FCC, &type metadata for SessionServerDebuggerEvent.SpanStarted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B40);
  }
  return result;
}

unint64_t sub_23F1A7190()
{
  unint64_t result;

  result = qword_256E02B48;
  if (!qword_256E02B48)
  {
    result = MEMORY[0x242667160](&unk_23F276084, &type metadata for SessionServerDebuggerEvent.SpanEnded.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B48);
  }
  return result;
}

unint64_t sub_23F1A71D0()
{
  unint64_t result;

  result = qword_256E02B50;
  if (!qword_256E02B50)
  {
    result = MEMORY[0x242667160](&unk_23F27613C, &type metadata for SessionServerDebuggerEvent.FinalTransactionPosted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B50);
  }
  return result;
}

unint64_t sub_23F1A7210()
{
  unint64_t result;

  result = qword_256E02B58;
  if (!qword_256E02B58)
  {
    result = MEMORY[0x242667160](&unk_23F2761F4, &type metadata for SessionServerDebuggerEvent.CurrentTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B58);
  }
  return result;
}

unint64_t sub_23F1A7250()
{
  unint64_t result;

  result = qword_256E02B60;
  if (!qword_256E02B60)
  {
    result = MEMORY[0x242667160](&unk_23F2762AC, &type metadata for SessionServerDebuggerEvent.Synced.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B60);
  }
  return result;
}

unint64_t sub_23F1A7290()
{
  unint64_t result;

  result = qword_256E02B68;
  if (!qword_256E02B68)
  {
    result = MEMORY[0x242667160](&unk_23F276364, &type metadata for SessionServerDebuggerEvent.TranscriptReplacementAccepted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B68);
  }
  return result;
}

unint64_t sub_23F1A72D0()
{
  unint64_t result;

  result = qword_256E02B70;
  if (!qword_256E02B70)
  {
    result = MEMORY[0x242667160](&unk_23F27655C, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B70);
  }
  return result;
}

unint64_t sub_23F1A7310()
{
  unint64_t result;

  result = qword_256E02B78;
  if (!qword_256E02B78)
  {
    result = MEMORY[0x242667160](&unk_23F276614, &type metadata for SessionServerDebuggerEvent.RequestFailed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B78);
  }
  return result;
}

unint64_t sub_23F1A7350()
{
  unint64_t result;

  result = qword_256E02B80;
  if (!qword_256E02B80)
  {
    result = MEMORY[0x242667160](&unk_23F2766CC, &type metadata for SessionServerDebuggerEvent.InjectionStateChanged.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B80);
  }
  return result;
}

unint64_t sub_23F1A7390()
{
  unint64_t result;

  result = qword_256E02B88;
  if (!qword_256E02B88)
  {
    result = MEMORY[0x242667160](&unk_23F276784, &type metadata for SessionServerDebuggerEvent.InjectionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B88);
  }
  return result;
}

unint64_t sub_23F1A73D0()
{
  unint64_t result;

  result = qword_256E02B90;
  if (!qword_256E02B90)
  {
    result = MEMORY[0x242667160](&unk_23F27683C, &type metadata for SessionServerDebuggerEvent.InjectionResponseAccepted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B90);
  }
  return result;
}

unint64_t sub_23F1A7410()
{
  unint64_t result;

  result = qword_256E02B98;
  if (!qword_256E02B98)
  {
    result = MEMORY[0x242667160](&unk_23F2768F4, &type metadata for SessionServerDebuggerEvent.InjectionValueCaptured.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02B98);
  }
  return result;
}

unint64_t sub_23F1A7450()
{
  unint64_t result;

  result = qword_256E02BA0;
  if (!qword_256E02BA0)
  {
    result = MEMORY[0x242667160](&unk_23F276864, &type metadata for SessionServerDebuggerEvent.InjectionValueCaptured.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02BA0);
  }
  return result;
}

unint64_t sub_23F1A7490()
{
  unint64_t result;

  result = qword_256E02BA8;
  if (!qword_256E02BA8)
  {
    result = MEMORY[0x242667160](&unk_23F27688C, &type metadata for SessionServerDebuggerEvent.InjectionValueCaptured.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02BA8);
  }
  return result;
}

unint64_t sub_23F1A74D0()
{
  unint64_t result;

  result = qword_256E02BB0;
  if (!qword_256E02BB0)
  {
    result = MEMORY[0x242667160](&unk_23F2767AC, &type metadata for SessionServerDebuggerEvent.InjectionResponseAccepted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02BB0);
  }
  return result;
}

unint64_t sub_23F1A7510()
{
  unint64_t result;

  result = qword_256E02BB8;
  if (!qword_256E02BB8)
  {
    result = MEMORY[0x242667160](&unk_23F2767D4, &type metadata for SessionServerDebuggerEvent.InjectionResponseAccepted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02BB8);
  }
  return result;
}

unint64_t sub_23F1A7550()
{
  unint64_t result;

  result = qword_256E02BC0;
  if (!qword_256E02BC0)
  {
    result = MEMORY[0x242667160](&unk_23F2766F4, &type metadata for SessionServerDebuggerEvent.InjectionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02BC0);
  }
  return result;
}

unint64_t sub_23F1A7590()
{
  unint64_t result;

  result = qword_256E02BC8;
  if (!qword_256E02BC8)
  {
    result = MEMORY[0x242667160](&unk_23F27671C, &type metadata for SessionServerDebuggerEvent.InjectionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02BC8);
  }
  return result;
}

unint64_t sub_23F1A75D0()
{
  unint64_t result;

  result = qword_256E02BD0;
  if (!qword_256E02BD0)
  {
    result = MEMORY[0x242667160](&unk_23F27663C, &type metadata for SessionServerDebuggerEvent.InjectionStateChanged.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02BD0);
  }
  return result;
}

unint64_t sub_23F1A7610()
{
  unint64_t result;

  result = qword_256E02BD8;
  if (!qword_256E02BD8)
  {
    result = MEMORY[0x242667160](&unk_23F276664, &type metadata for SessionServerDebuggerEvent.InjectionStateChanged.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02BD8);
  }
  return result;
}

unint64_t sub_23F1A7650()
{
  unint64_t result;

  result = qword_256E02BE0;
  if (!qword_256E02BE0)
  {
    result = MEMORY[0x242667160](&unk_23F276584, &type metadata for SessionServerDebuggerEvent.RequestFailed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02BE0);
  }
  return result;
}

unint64_t sub_23F1A7690()
{
  unint64_t result;

  result = qword_256E02BE8;
  if (!qword_256E02BE8)
  {
    result = MEMORY[0x242667160](&unk_23F2765AC, &type metadata for SessionServerDebuggerEvent.RequestFailed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02BE8);
  }
  return result;
}

unint64_t sub_23F1A76D0()
{
  unint64_t result;

  result = qword_256E02BF0;
  if (!qword_256E02BF0)
  {
    result = MEMORY[0x242667160](&unk_23F27647C, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.UnableToParseProtoDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02BF0);
  }
  return result;
}

unint64_t sub_23F1A7710()
{
  unint64_t result;

  result = qword_256E02BF8;
  if (!qword_256E02BF8)
  {
    result = MEMORY[0x242667160](&unk_23F2764A4, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.UnableToParseProtoDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02BF8);
  }
  return result;
}

unint64_t sub_23F1A7750()
{
  unint64_t result;

  result = qword_256E02C00;
  if (!qword_256E02C00)
  {
    result = MEMORY[0x242667160](&unk_23F27642C, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.UnableToEncodeProtoDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C00);
  }
  return result;
}

unint64_t sub_23F1A7790()
{
  unint64_t result;

  result = qword_256E02C08;
  if (!qword_256E02C08)
  {
    result = MEMORY[0x242667160](&unk_23F276454, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.UnableToEncodeProtoDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C08);
  }
  return result;
}

unint64_t sub_23F1A77D0()
{
  unint64_t result;

  result = qword_256E02C10;
  if (!qword_256E02C10)
  {
    result = MEMORY[0x242667160](&unk_23F2763DC, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.ProtoDataViolatesSecurityPolicyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C10);
  }
  return result;
}

unint64_t sub_23F1A7810()
{
  unint64_t result;

  result = qword_256E02C18;
  if (!qword_256E02C18)
  {
    result = MEMORY[0x242667160](&unk_23F276404, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.ProtoDataViolatesSecurityPolicyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C18);
  }
  return result;
}

unint64_t sub_23F1A7850()
{
  unint64_t result;

  result = qword_256E02C20;
  if (!qword_256E02C20)
  {
    result = MEMORY[0x242667160](&unk_23F27638C, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.ZeroEventsSentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C20);
  }
  return result;
}

unint64_t sub_23F1A7890()
{
  unint64_t result;

  result = qword_256E02C28;
  if (!qword_256E02C28)
  {
    result = MEMORY[0x242667160](&unk_23F2763B4, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.ZeroEventsSentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C28);
  }
  return result;
}

unint64_t sub_23F1A78D0()
{
  unint64_t result;

  result = qword_256E02C30;
  if (!qword_256E02C30)
  {
    result = MEMORY[0x242667160](&unk_23F2764CC, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C30);
  }
  return result;
}

unint64_t sub_23F1A7910()
{
  unint64_t result;

  result = qword_256E02C38;
  if (!qword_256E02C38)
  {
    result = MEMORY[0x242667160](&unk_23F2764F4, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C38);
  }
  return result;
}

unint64_t sub_23F1A7950()
{
  unint64_t result;

  result = qword_256E02C40;
  if (!qword_256E02C40)
  {
    result = MEMORY[0x242667160](&unk_23F2762D4, &type metadata for SessionServerDebuggerEvent.TranscriptReplacementAccepted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C40);
  }
  return result;
}

unint64_t sub_23F1A7990()
{
  unint64_t result;

  result = qword_256E02C48;
  if (!qword_256E02C48)
  {
    result = MEMORY[0x242667160](&unk_23F2762FC, &type metadata for SessionServerDebuggerEvent.TranscriptReplacementAccepted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C48);
  }
  return result;
}

unint64_t sub_23F1A79D0()
{
  unint64_t result;

  result = qword_256E02C50;
  if (!qword_256E02C50)
  {
    result = MEMORY[0x242667160](&unk_23F27621C, &type metadata for SessionServerDebuggerEvent.Synced.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C50);
  }
  return result;
}

unint64_t sub_23F1A7A10()
{
  unint64_t result;

  result = qword_256E02C58;
  if (!qword_256E02C58)
  {
    result = MEMORY[0x242667160](&unk_23F276244, &type metadata for SessionServerDebuggerEvent.Synced.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C58);
  }
  return result;
}

unint64_t sub_23F1A7A50()
{
  unint64_t result;

  result = qword_256E02C60;
  if (!qword_256E02C60)
  {
    result = MEMORY[0x242667160](&unk_23F276164, &type metadata for SessionServerDebuggerEvent.CurrentTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C60);
  }
  return result;
}

unint64_t sub_23F1A7A90()
{
  unint64_t result;

  result = qword_256E02C68;
  if (!qword_256E02C68)
  {
    result = MEMORY[0x242667160](&unk_23F27618C, &type metadata for SessionServerDebuggerEvent.CurrentTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C68);
  }
  return result;
}

unint64_t sub_23F1A7AD0()
{
  unint64_t result;

  result = qword_256E02C70;
  if (!qword_256E02C70)
  {
    result = MEMORY[0x242667160](&unk_23F2760AC, &type metadata for SessionServerDebuggerEvent.FinalTransactionPosted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C70);
  }
  return result;
}

unint64_t sub_23F1A7B10()
{
  unint64_t result;

  result = qword_256E02C78;
  if (!qword_256E02C78)
  {
    result = MEMORY[0x242667160](&unk_23F2760D4, &type metadata for SessionServerDebuggerEvent.FinalTransactionPosted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C78);
  }
  return result;
}

unint64_t sub_23F1A7B50()
{
  unint64_t result;

  result = qword_256E02C80;
  if (!qword_256E02C80)
  {
    result = MEMORY[0x242667160](&unk_23F275FF4, &type metadata for SessionServerDebuggerEvent.SpanEnded.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C80);
  }
  return result;
}

unint64_t sub_23F1A7B90()
{
  unint64_t result;

  result = qword_256E02C88;
  if (!qword_256E02C88)
  {
    result = MEMORY[0x242667160](&unk_23F27601C, &type metadata for SessionServerDebuggerEvent.SpanEnded.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C88);
  }
  return result;
}

unint64_t sub_23F1A7BD0()
{
  unint64_t result;

  result = qword_256E02C90;
  if (!qword_256E02C90)
  {
    result = MEMORY[0x242667160](&unk_23F275F3C, &type metadata for SessionServerDebuggerEvent.SpanStarted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C90);
  }
  return result;
}

unint64_t sub_23F1A7C10()
{
  unint64_t result;

  result = qword_256E02C98;
  if (!qword_256E02C98)
  {
    result = MEMORY[0x242667160](&unk_23F275F64, &type metadata for SessionServerDebuggerEvent.SpanStarted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02C98);
  }
  return result;
}

unint64_t sub_23F1A7C50()
{
  unint64_t result;

  result = qword_256E02CA0;
  if (!qword_256E02CA0)
  {
    result = MEMORY[0x242667160](&unk_23F275E84, &type metadata for SessionServerDebuggerEvent.DeferredTransactionPostAccepted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02CA0);
  }
  return result;
}

unint64_t sub_23F1A7C90()
{
  unint64_t result;

  result = qword_256E02CA8;
  if (!qword_256E02CA8)
  {
    result = MEMORY[0x242667160](&unk_23F275EAC, &type metadata for SessionServerDebuggerEvent.DeferredTransactionPostAccepted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02CA8);
  }
  return result;
}

unint64_t sub_23F1A7CD0()
{
  unint64_t result;

  result = qword_256E02CB0;
  if (!qword_256E02CB0)
  {
    result = MEMORY[0x242667160](&unk_23F275DCC, &type metadata for SessionServerDebuggerEvent.DeferredTransactionReady.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02CB0);
  }
  return result;
}

unint64_t sub_23F1A7D10()
{
  unint64_t result;

  result = qword_256E02CB8;
  if (!qword_256E02CB8)
  {
    result = MEMORY[0x242667160](&unk_23F275DF4, &type metadata for SessionServerDebuggerEvent.DeferredTransactionReady.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02CB8);
  }
  return result;
}

unint64_t sub_23F1A7D50()
{
  unint64_t result;

  result = qword_256E02CC0;
  if (!qword_256E02CC0)
  {
    result = MEMORY[0x242667160](&unk_23F275D14, &type metadata for SessionServerDebuggerEvent.DeferredTransactionStateChanged.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02CC0);
  }
  return result;
}

unint64_t sub_23F1A7D90()
{
  unint64_t result;

  result = qword_256E02CC8;
  if (!qword_256E02CC8)
  {
    result = MEMORY[0x242667160](&unk_23F275D3C, &type metadata for SessionServerDebuggerEvent.DeferredTransactionStateChanged.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02CC8);
  }
  return result;
}

unint64_t sub_23F1A7DD0()
{
  unint64_t result;

  result = qword_256E02CD0;
  if (!qword_256E02CD0)
  {
    result = MEMORY[0x242667160](&unk_23F275C5C, &type metadata for SessionClientDebuggerEvent.InjectionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02CD0);
  }
  return result;
}

unint64_t sub_23F1A7E10()
{
  unint64_t result;

  result = qword_256E02CD8;
  if (!qword_256E02CD8)
  {
    result = MEMORY[0x242667160](&unk_23F275C84, &type metadata for SessionClientDebuggerEvent.InjectionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02CD8);
  }
  return result;
}

unint64_t sub_23F1A7E50()
{
  unint64_t result;

  result = qword_256E02CE0;
  if (!qword_256E02CE0)
  {
    result = MEMORY[0x242667160](&unk_23F275BA4, &type metadata for SessionClientDebuggerEvent.DisableInjection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02CE0);
  }
  return result;
}

unint64_t sub_23F1A7E90()
{
  unint64_t result;

  result = qword_256E02CE8;
  if (!qword_256E02CE8)
  {
    result = MEMORY[0x242667160](&unk_23F275BCC, &type metadata for SessionClientDebuggerEvent.DisableInjection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02CE8);
  }
  return result;
}

unint64_t sub_23F1A7ED0()
{
  unint64_t result;

  result = qword_256E02CF0;
  if (!qword_256E02CF0)
  {
    result = MEMORY[0x242667160](&unk_23F275AEC, &type metadata for SessionClientDebuggerEvent.EnableInjection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02CF0);
  }
  return result;
}

unint64_t sub_23F1A7F10()
{
  unint64_t result;

  result = qword_256E02CF8;
  if (!qword_256E02CF8)
  {
    result = MEMORY[0x242667160](&unk_23F275B14, &type metadata for SessionClientDebuggerEvent.EnableInjection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02CF8);
  }
  return result;
}

unint64_t sub_23F1A7F50()
{
  unint64_t result;

  result = qword_256E02D00;
  if (!qword_256E02D00)
  {
    result = MEMORY[0x242667160](&unk_23F275A9C, &type metadata for SessionClientDebuggerEvent.TerminateSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D00);
  }
  return result;
}

unint64_t sub_23F1A7F90()
{
  unint64_t result;

  result = qword_256E02D08;
  if (!qword_256E02D08)
  {
    result = MEMORY[0x242667160](&unk_23F275AC4, &type metadata for SessionClientDebuggerEvent.TerminateSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D08);
  }
  return result;
}

unint64_t sub_23F1A7FD0()
{
  unint64_t result;

  result = qword_256E02D10;
  if (!qword_256E02D10)
  {
    result = MEMORY[0x242667160](&unk_23F2759E4, &type metadata for SessionClientDebuggerEvent.Sync.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D10);
  }
  return result;
}

unint64_t sub_23F1A8010()
{
  unint64_t result;

  result = qword_256E02D18;
  if (!qword_256E02D18)
  {
    result = MEMORY[0x242667160](&unk_23F275A0C, &type metadata for SessionClientDebuggerEvent.Sync.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D18);
  }
  return result;
}

unint64_t sub_23F1A8050()
{
  unint64_t result;

  result = qword_256E02D20;
  if (!qword_256E02D20)
  {
    result = MEMORY[0x242667160](&unk_23F27592C, &type metadata for SessionClientDebuggerEvent.ReplaceCurrentTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D20);
  }
  return result;
}

unint64_t sub_23F1A8090()
{
  unint64_t result;

  result = qword_256E02D28;
  if (!qword_256E02D28)
  {
    result = MEMORY[0x242667160](&unk_23F275954, &type metadata for SessionClientDebuggerEvent.ReplaceCurrentTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D28);
  }
  return result;
}

unint64_t sub_23F1A80D0()
{
  unint64_t result;

  result = qword_256E02D30;
  if (!qword_256E02D30)
  {
    result = MEMORY[0x242667160](&unk_23F275874, &type metadata for SessionClientDebuggerEvent.RequestCurrentTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D30);
  }
  return result;
}

unint64_t sub_23F1A8110()
{
  unint64_t result;

  result = qword_256E02D38;
  if (!qword_256E02D38)
  {
    result = MEMORY[0x242667160](&unk_23F27589C, &type metadata for SessionClientDebuggerEvent.RequestCurrentTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D38);
  }
  return result;
}

unint64_t sub_23F1A8150()
{
  unint64_t result;

  result = qword_256E02D40;
  if (!qword_256E02D40)
  {
    result = MEMORY[0x242667160](&unk_23F2757BC, &type metadata for SessionClientDebuggerEvent.PostDeferredTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D40);
  }
  return result;
}

unint64_t sub_23F1A8190()
{
  unint64_t result;

  result = qword_256E02D48;
  if (!qword_256E02D48)
  {
    result = MEMORY[0x242667160](&unk_23F2757E4, &type metadata for SessionClientDebuggerEvent.PostDeferredTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D48);
  }
  return result;
}

unint64_t sub_23F1A81D0()
{
  unint64_t result;

  result = qword_256E02D50;
  if (!qword_256E02D50)
  {
    result = MEMORY[0x242667160](&unk_23F275704, &type metadata for SessionClientDebuggerEvent.DisableDeferredTransactions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D50);
  }
  return result;
}

unint64_t sub_23F1A8210()
{
  unint64_t result;

  result = qword_256E02D58;
  if (!qword_256E02D58)
  {
    result = MEMORY[0x242667160](&unk_23F27572C, &type metadata for SessionClientDebuggerEvent.DisableDeferredTransactions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D58);
  }
  return result;
}

unint64_t sub_23F1A8250()
{
  unint64_t result;

  result = qword_256E02D60;
  if (!qword_256E02D60)
  {
    result = MEMORY[0x242667160](&unk_23F27564C, &type metadata for SessionClientDebuggerEvent.EnableDeferredTransactions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D60);
  }
  return result;
}

unint64_t sub_23F1A8290()
{
  unint64_t result;

  result = qword_256E02D68;
  if (!qword_256E02D68)
  {
    result = MEMORY[0x242667160](&unk_23F275674, &type metadata for SessionClientDebuggerEvent.EnableDeferredTransactions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D68);
  }
  return result;
}

unint64_t sub_23F1A82D0()
{
  unint64_t result;

  result = qword_256E02D70;
  if (!qword_256E02D70)
  {
    result = MEMORY[0x242667160](&unk_23F2754DC, &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionStateChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D70);
  }
  return result;
}

unint64_t sub_23F1A8310()
{
  unint64_t result;

  result = qword_256E02D78;
  if (!qword_256E02D78)
  {
    result = MEMORY[0x242667160](&unk_23F275504, &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionStateChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D78);
  }
  return result;
}

unint64_t sub_23F1A8350()
{
  unint64_t result;

  result = qword_256E02D80;
  if (!qword_256E02D80)
  {
    result = MEMORY[0x242667160](&unk_23F275424, &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionReadyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D80);
  }
  return result;
}

unint64_t sub_23F1A8390()
{
  unint64_t result;

  result = qword_256E02D88;
  if (!qword_256E02D88)
  {
    result = MEMORY[0x242667160](&unk_23F27544C, &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionReadyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D88);
  }
  return result;
}

unint64_t sub_23F1A83D0()
{
  unint64_t result;

  result = qword_256E02D90;
  if (!qword_256E02D90)
  {
    result = MEMORY[0x242667160](&unk_23F27536C, &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionPostAcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D90);
  }
  return result;
}

unint64_t sub_23F1A8410()
{
  unint64_t result;

  result = qword_256E02D98;
  if (!qword_256E02D98)
  {
    result = MEMORY[0x242667160](&unk_23F275394, &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionPostAcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02D98);
  }
  return result;
}

unint64_t sub_23F1A8450()
{
  unint64_t result;

  result = qword_256E02DA0;
  if (!qword_256E02DA0)
  {
    result = MEMORY[0x242667160](&unk_23F2752B4, &type metadata for SessionServerDebuggerEvent.Payload.SpanStartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02DA0);
  }
  return result;
}

unint64_t sub_23F1A8490()
{
  unint64_t result;

  result = qword_256E02DA8;
  if (!qword_256E02DA8)
  {
    result = MEMORY[0x242667160](&unk_23F2752DC, &type metadata for SessionServerDebuggerEvent.Payload.SpanStartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02DA8);
  }
  return result;
}

unint64_t sub_23F1A84D0()
{
  unint64_t result;

  result = qword_256E02DB0;
  if (!qword_256E02DB0)
  {
    result = MEMORY[0x242667160](&unk_23F2751FC, &type metadata for SessionServerDebuggerEvent.Payload.SpanEndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02DB0);
  }
  return result;
}

unint64_t sub_23F1A8510()
{
  unint64_t result;

  result = qword_256E02DB8;
  if (!qword_256E02DB8)
  {
    result = MEMORY[0x242667160](&unk_23F275224, &type metadata for SessionServerDebuggerEvent.Payload.SpanEndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02DB8);
  }
  return result;
}

unint64_t sub_23F1A8550()
{
  unint64_t result;

  result = qword_256E02DC0;
  if (!qword_256E02DC0)
  {
    result = MEMORY[0x242667160](&unk_23F275144, &type metadata for SessionServerDebuggerEvent.Payload.FinalTransactionPostedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02DC0);
  }
  return result;
}

unint64_t sub_23F1A8590()
{
  unint64_t result;

  result = qword_256E02DC8;
  if (!qword_256E02DC8)
  {
    result = MEMORY[0x242667160](&unk_23F27516C, &type metadata for SessionServerDebuggerEvent.Payload.FinalTransactionPostedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02DC8);
  }
  return result;
}

unint64_t sub_23F1A85D0()
{
  unint64_t result;

  result = qword_256E02DD0;
  if (!qword_256E02DD0)
  {
    result = MEMORY[0x242667160](&unk_23F27508C, &type metadata for SessionServerDebuggerEvent.Payload.CurrentTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02DD0);
  }
  return result;
}

unint64_t sub_23F1A8610()
{
  unint64_t result;

  result = qword_256E02DD8;
  if (!qword_256E02DD8)
  {
    result = MEMORY[0x242667160](&unk_23F2750B4, &type metadata for SessionServerDebuggerEvent.Payload.CurrentTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02DD8);
  }
  return result;
}

unint64_t sub_23F1A8650()
{
  unint64_t result;

  result = qword_256E02DE0;
  if (!qword_256E02DE0)
  {
    result = MEMORY[0x242667160](&unk_23F274FD4, &type metadata for SessionServerDebuggerEvent.Payload.SyncedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02DE0);
  }
  return result;
}

unint64_t sub_23F1A8690()
{
  unint64_t result;

  result = qword_256E02DE8;
  if (!qword_256E02DE8)
  {
    result = MEMORY[0x242667160](&unk_23F274FFC, &type metadata for SessionServerDebuggerEvent.Payload.SyncedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02DE8);
  }
  return result;
}

unint64_t sub_23F1A86D0()
{
  unint64_t result;

  result = qword_256E02DF0;
  if (!qword_256E02DF0)
  {
    result = MEMORY[0x242667160](&unk_23F274F1C, &type metadata for SessionServerDebuggerEvent.Payload.TranscriptReplacementAcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02DF0);
  }
  return result;
}

unint64_t sub_23F1A8710()
{
  unint64_t result;

  result = qword_256E02DF8;
  if (!qword_256E02DF8)
  {
    result = MEMORY[0x242667160](&unk_23F274F44, &type metadata for SessionServerDebuggerEvent.Payload.TranscriptReplacementAcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02DF8);
  }
  return result;
}

unint64_t sub_23F1A8750()
{
  unint64_t result;

  result = qword_256E02E00;
  if (!qword_256E02E00)
  {
    result = MEMORY[0x242667160](&unk_23F274E64, &type metadata for SessionServerDebuggerEvent.Payload.RequestFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E00);
  }
  return result;
}

unint64_t sub_23F1A8790()
{
  unint64_t result;

  result = qword_256E02E08;
  if (!qword_256E02E08)
  {
    result = MEMORY[0x242667160](&unk_23F274E8C, &type metadata for SessionServerDebuggerEvent.Payload.RequestFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E08);
  }
  return result;
}

unint64_t sub_23F1A87D0()
{
  unint64_t result;

  result = qword_256E02E10;
  if (!qword_256E02E10)
  {
    result = MEMORY[0x242667160](&unk_23F274DAC, &type metadata for SessionServerDebuggerEvent.Payload.InjectionStateChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E10);
  }
  return result;
}

unint64_t sub_23F1A8810()
{
  unint64_t result;

  result = qword_256E02E18;
  if (!qword_256E02E18)
  {
    result = MEMORY[0x242667160](&unk_23F274DD4, &type metadata for SessionServerDebuggerEvent.Payload.InjectionStateChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E18);
  }
  return result;
}

unint64_t sub_23F1A8850()
{
  unint64_t result;

  result = qword_256E02E20;
  if (!qword_256E02E20)
  {
    result = MEMORY[0x242667160](&unk_23F274CF4, &type metadata for SessionServerDebuggerEvent.Payload.InjectionRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E20);
  }
  return result;
}

unint64_t sub_23F1A8890()
{
  unint64_t result;

  result = qword_256E02E28;
  if (!qword_256E02E28)
  {
    result = MEMORY[0x242667160](&unk_23F274D1C, &type metadata for SessionServerDebuggerEvent.Payload.InjectionRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E28);
  }
  return result;
}

unint64_t sub_23F1A88D0()
{
  unint64_t result;

  result = qword_256E02E30;
  if (!qword_256E02E30)
  {
    result = MEMORY[0x242667160](&unk_23F274C3C, &type metadata for SessionServerDebuggerEvent.Payload.InjectionResponseAcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E30);
  }
  return result;
}

unint64_t sub_23F1A8910()
{
  unint64_t result;

  result = qword_256E02E38;
  if (!qword_256E02E38)
  {
    result = MEMORY[0x242667160](&unk_23F274C64, &type metadata for SessionServerDebuggerEvent.Payload.InjectionResponseAcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E38);
  }
  return result;
}

unint64_t sub_23F1A8950()
{
  unint64_t result;

  result = qword_256E02E40;
  if (!qword_256E02E40)
  {
    result = MEMORY[0x242667160](&unk_23F274B84, &type metadata for SessionServerDebuggerEvent.Payload.InjectionValueCapturedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E40);
  }
  return result;
}

unint64_t sub_23F1A8990()
{
  unint64_t result;

  result = qword_256E02E48;
  if (!qword_256E02E48)
  {
    result = MEMORY[0x242667160](&unk_23F274BAC, &type metadata for SessionServerDebuggerEvent.Payload.InjectionValueCapturedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E48);
  }
  return result;
}

unint64_t sub_23F1A89D0()
{
  unint64_t result;

  result = qword_256E02E50;
  if (!qword_256E02E50)
  {
    result = MEMORY[0x242667160](&unk_23F275594, &type metadata for SessionServerDebuggerEvent.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E50);
  }
  return result;
}

unint64_t sub_23F1A8A10()
{
  unint64_t result;

  result = qword_256E02E58;
  if (!qword_256E02E58)
  {
    result = MEMORY[0x242667160](&unk_23F2755BC, &type metadata for SessionServerDebuggerEvent.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E58);
  }
  return result;
}

unint64_t sub_23F1A8A50()
{
  unint64_t result;

  result = qword_256E02E60;
  if (!qword_256E02E60)
  {
    result = MEMORY[0x242667160](&unk_23F274A14, &type metadata for SessionClientDebuggerEvent.Payload.EnableDeferredTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E60);
  }
  return result;
}

unint64_t sub_23F1A8A90()
{
  unint64_t result;

  result = qword_256E02E68;
  if (!qword_256E02E68)
  {
    result = MEMORY[0x242667160](&unk_23F274A3C, &type metadata for SessionClientDebuggerEvent.Payload.EnableDeferredTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E68);
  }
  return result;
}

unint64_t sub_23F1A8AD0()
{
  unint64_t result;

  result = qword_256E02E70;
  if (!qword_256E02E70)
  {
    result = MEMORY[0x242667160](&unk_23F27495C, &type metadata for SessionClientDebuggerEvent.Payload.DisableDeferredTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E70);
  }
  return result;
}

unint64_t sub_23F1A8B10()
{
  unint64_t result;

  result = qword_256E02E78;
  if (!qword_256E02E78)
  {
    result = MEMORY[0x242667160](&unk_23F274984, &type metadata for SessionClientDebuggerEvent.Payload.DisableDeferredTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E78);
  }
  return result;
}

unint64_t sub_23F1A8B50()
{
  unint64_t result;

  result = qword_256E02E80;
  if (!qword_256E02E80)
  {
    result = MEMORY[0x242667160](&unk_23F2748A4, &type metadata for SessionClientDebuggerEvent.Payload.PostDeferredTransactionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E80);
  }
  return result;
}

unint64_t sub_23F1A8B90()
{
  unint64_t result;

  result = qword_256E02E88;
  if (!qword_256E02E88)
  {
    result = MEMORY[0x242667160](&unk_23F2748CC, &type metadata for SessionClientDebuggerEvent.Payload.PostDeferredTransactionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E88);
  }
  return result;
}

unint64_t sub_23F1A8BD0()
{
  unint64_t result;

  result = qword_256E02E90;
  if (!qword_256E02E90)
  {
    result = MEMORY[0x242667160](&unk_23F2747EC, &type metadata for SessionClientDebuggerEvent.Payload.RequestCurrentTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E90);
  }
  return result;
}

unint64_t sub_23F1A8C10()
{
  unint64_t result;

  result = qword_256E02E98;
  if (!qword_256E02E98)
  {
    result = MEMORY[0x242667160](&unk_23F274814, &type metadata for SessionClientDebuggerEvent.Payload.RequestCurrentTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02E98);
  }
  return result;
}

unint64_t sub_23F1A8C50()
{
  unint64_t result;

  result = qword_256E02EA0;
  if (!qword_256E02EA0)
  {
    result = MEMORY[0x242667160](&unk_23F274734, &type metadata for SessionClientDebuggerEvent.Payload.ReplaceCurrentTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02EA0);
  }
  return result;
}

unint64_t sub_23F1A8C90()
{
  unint64_t result;

  result = qword_256E02EA8;
  if (!qword_256E02EA8)
  {
    result = MEMORY[0x242667160](&unk_23F27475C, &type metadata for SessionClientDebuggerEvent.Payload.ReplaceCurrentTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02EA8);
  }
  return result;
}

unint64_t sub_23F1A8CD0()
{
  unint64_t result;

  result = qword_256E02EB0;
  if (!qword_256E02EB0)
  {
    result = MEMORY[0x242667160](&unk_23F27467C, &type metadata for SessionClientDebuggerEvent.Payload.SyncCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02EB0);
  }
  return result;
}

unint64_t sub_23F1A8D10()
{
  unint64_t result;

  result = qword_256E02EB8;
  if (!qword_256E02EB8)
  {
    result = MEMORY[0x242667160](&unk_23F2746A4, &type metadata for SessionClientDebuggerEvent.Payload.SyncCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02EB8);
  }
  return result;
}

unint64_t sub_23F1A8D50()
{
  unint64_t result;

  result = qword_256E02EC0;
  if (!qword_256E02EC0)
  {
    result = MEMORY[0x242667160](&unk_23F2745C4, &type metadata for SessionClientDebuggerEvent.Payload.TerminateSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02EC0);
  }
  return result;
}

unint64_t sub_23F1A8D90()
{
  unint64_t result;

  result = qword_256E02EC8;
  if (!qword_256E02EC8)
  {
    result = MEMORY[0x242667160](&unk_23F2745EC, &type metadata for SessionClientDebuggerEvent.Payload.TerminateSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02EC8);
  }
  return result;
}

unint64_t sub_23F1A8DD0()
{
  unint64_t result;

  result = qword_256E02ED0;
  if (!qword_256E02ED0)
  {
    result = MEMORY[0x242667160](&unk_23F27450C, &type metadata for SessionClientDebuggerEvent.Payload.EnableInjectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02ED0);
  }
  return result;
}

unint64_t sub_23F1A8E10()
{
  unint64_t result;

  result = qword_256E02ED8;
  if (!qword_256E02ED8)
  {
    result = MEMORY[0x242667160](&unk_23F274534, &type metadata for SessionClientDebuggerEvent.Payload.EnableInjectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02ED8);
  }
  return result;
}

unint64_t sub_23F1A8E50()
{
  unint64_t result;

  result = qword_256E02EE0;
  if (!qword_256E02EE0)
  {
    result = MEMORY[0x242667160](&unk_23F274454, &type metadata for SessionClientDebuggerEvent.Payload.DisableInjectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02EE0);
  }
  return result;
}

unint64_t sub_23F1A8E90()
{
  unint64_t result;

  result = qword_256E02EE8;
  if (!qword_256E02EE8)
  {
    result = MEMORY[0x242667160](&unk_23F27447C, &type metadata for SessionClientDebuggerEvent.Payload.DisableInjectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02EE8);
  }
  return result;
}

unint64_t sub_23F1A8ED0()
{
  unint64_t result;

  result = qword_256E02EF0;
  if (!qword_256E02EF0)
  {
    result = MEMORY[0x242667160](&unk_23F27439C, &type metadata for SessionClientDebuggerEvent.Payload.InjectionResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02EF0);
  }
  return result;
}

unint64_t sub_23F1A8F10()
{
  unint64_t result;

  result = qword_256E02EF8;
  if (!qword_256E02EF8)
  {
    result = MEMORY[0x242667160](&unk_23F2743C4, &type metadata for SessionClientDebuggerEvent.Payload.InjectionResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02EF8);
  }
  return result;
}

unint64_t sub_23F1A8F50()
{
  unint64_t result;

  result = qword_256E02F00;
  if (!qword_256E02F00)
  {
    result = MEMORY[0x242667160](&unk_23F274ACC, &type metadata for SessionClientDebuggerEvent.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02F00);
  }
  return result;
}

unint64_t sub_23F1A8F90()
{
  unint64_t result;

  result = qword_256E02F08;
  if (!qword_256E02F08)
  {
    result = MEMORY[0x242667160](&unk_23F274AF4, &type metadata for SessionClientDebuggerEvent.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02F08);
  }
  return result;
}

unint64_t sub_23F1A8FD0()
{
  unint64_t result;

  result = qword_256E02F10;
  if (!qword_256E02F10)
  {
    result = MEMORY[0x242667160](&unk_23F2742E4, &type metadata for SessionServerDebuggerEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02F10);
  }
  return result;
}

unint64_t sub_23F1A9010()
{
  unint64_t result;

  result = qword_256E02F18;
  if (!qword_256E02F18)
  {
    result = MEMORY[0x242667160](&unk_23F27430C, &type metadata for SessionServerDebuggerEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02F18);
  }
  return result;
}

unint64_t sub_23F1A9050()
{
  unint64_t result;

  result = qword_256E02F20;
  if (!qword_256E02F20)
  {
    result = MEMORY[0x242667160](&unk_23F27422C, &type metadata for SessionClientDebuggerEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02F20);
  }
  return result;
}

unint64_t sub_23F1A9090()
{
  unint64_t result;

  result = qword_256E02F28;
  if (!qword_256E02F28)
  {
    result = MEMORY[0x242667160](&unk_23F274254, &type metadata for SessionClientDebuggerEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02F28);
  }
  return result;
}

uint64_t sub_23F1A919C()
{
  return sub_23F268750();
}

uint64_t sub_23F1A91B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_23F1A91C8()
{
  return sub_23F26863C();
}

uint64_t sub_23F1A91E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F1A91F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_23F1A9208()
{
  return sub_23F2686B4();
}

uint64_t sub_23F1A9220()
{
  return 0;
}

uint64_t sub_23F1A922C()
{
  return sub_23F26863C();
}

void sub_23F1A9244(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(_QWORD);

  sub_23F195980(a1, *(_QWORD *)(a2 - 256), v2);
}

uint64_t sub_23F1A9254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v1, v0);
}

uint64_t sub_23F1A9268()
{
  return sub_23F26863C();
}

void sub_23F1A9274(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23F195980(a1, v2, v1);
}

uint64_t sub_23F1A9280()
{
  return sub_23F2686B4();
}

uint64_t sub_23F1A9298()
{
  return sub_23F2686B4();
}

uint64_t sub_23F1A92B4()
{
  return sub_23F268750();
}

void sub_23F1A92C4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F195980(a1, a2, v2);
}

uint64_t sub_23F1A92CC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F1A92D8(uint64_t a1)
{
  uint64_t v1;

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v1);
}

uint64_t sub_23F1A92F4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1A9308()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F1A931C()
{
  return sub_23F268720();
}

uint64_t sub_23F1A9328()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1A9338()
{
  return sub_23F2686B4();
}

uint64_t sub_23F1A934C()
{
  return sub_23F2686B4();
}

uint64_t sub_23F1A936C()
{
  return sub_23F26863C();
}

_QWORD *sub_23F1A9374(_QWORD *a1, uint64_t a2)
{
  return sub_23F12545C(a1, a2);
}

uint64_t sub_23F1A9388()
{
  return sub_23F268750();
}

uint64_t sub_23F1A9390()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F1A9398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 136));
}

uint64_t sub_23F1A93A8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F1A93C0()
{
  return sub_23F268750();
}

uint64_t sub_23F1A93CC()
{
  uint64_t v0;

  return v0;
}

void sub_23F1A93E4(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23F195980(a1, v2, v1);
}

void sub_23F1A93F0(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_23F195A8C(a1, *(_QWORD *)(a3 - 256), a2);
}

uint64_t sub_23F1A93FC@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
  return sub_23F268684();
}

uint64_t sub_23F1A9414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 128));
}

uint64_t sub_23F1A9424()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  sub_23F159FE4(v0, v1);
  sub_23F159FE4(v2, v3);
  sub_23F159FD0(v0, v1);
  return sub_23F159FD0(v2, v3);
}

uint64_t sub_23F1A945C()
{
  uint64_t v0;

  return v0;
}

void sub_23F1A9468(uint64_t a1)
{
  uint64_t *v1;

  sub_23F125E40(a1, v1);
}

uint64_t sub_23F1A9480()
{
  return 0;
}

void sub_23F1A949C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 248) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F1A94B8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 72) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F1A94D4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F1A94F0()
{
  return _s16IntelligenceFlow7EventIDV2eeoiySbAC_ACtFZ_0();
}

uint64_t sub_23F1A94F8()
{
  return sub_23F268684();
}

void sub_23F1A950C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  sub_23F159FE4(v0, v1);
  sub_23F159FE4(v2, v3);
  JUMPOUT(0x2426660F8);
}

uint64_t sub_23F1A9540()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F18C1CC(v1, v0);
}

uint64_t sub_23F1A9554()
{
  return sub_23F2686E4();
}

uint64_t sub_23F1A9568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, a3);
}

uint64_t sub_23F1A9570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, a2, a3, a4);
}

uint64_t sub_23F1A9590()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1A95AC()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  return swift_retain();
}

uint64_t sub_23F1A95C8()
{
  return sub_23F268768();
}

uint64_t sub_23F1A95D8()
{
  return swift_bridgeObjectRelease();
}

void sub_23F1A95E4(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F16D354(a1, v1);
}

uint64_t sub_23F1A95EC()
{
  uint64_t v0;

  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
}

uint64_t sub_23F1A95F4()
{
  return type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
}

uint64_t sub_23F1A9604()
{
  return swift_bridgeObjectRelease();
}

void sub_23F1A9614(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F195A8C(a1, a2, v2);
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV11SpanStartedV6spanIds6UInt64Vvg_0()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_23F1A9640(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F125E40(v2, a2);
}

void sub_23F1A9648(uint64_t a1)
{
  uint64_t *v1;

  sub_23F125E40(a1, v1);
}

uint64_t sub_23F1A9660()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23F1A9674()
{
  return sub_23F268888();
}

_QWORD *sub_23F1A968C(_QWORD *a1)
{
  uint64_t v1;

  return sub_23F12545C(a1, v1);
}

uint64_t sub_23F1A96A4()
{
  uint64_t v0;

  return v0;
}

void sub_23F1A96B4()
{
  uint64_t *v0;
  uint64_t *v1;

  sub_23F128DFC(*v1, *v0);
}

uint64_t sub_23F1A96E0()
{
  return type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
}

uint64_t sub_23F1A96E8()
{
  return type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
}

uint64_t sub_23F1A96F0()
{
  return type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
}

uint64_t sub_23F1A9708()
{
  return type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
}

uint64_t sub_23F1A9720()
{
  return sub_23F268750();
}

void sub_23F1A9734(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F195A8C(a1, v3, a3);
}

void sub_23F1A973C(uint64_t a1)
{
  uint64_t *v1;

  sub_23F125E40(a1, v1);
}

uint64_t sub_23F1A9744()
{
  return 0;
}

uint64_t sub_23F1A9750()
{
  return sub_23F2686B4();
}

void sub_23F1A9764(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_23F195980(a1, *(_QWORD *)(a3 - 256), a2);
}

uint64_t sub_23F1A9770()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F18C1CC(v0, v1);
}

uint64_t sub_23F1A977C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F1A9784@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t sub_23F1A9790()
{
  return type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
}

uint64_t sub_23F1A979C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F1A97B0()
{
  return sub_23F268138();
}

uint64_t sub_23F1A97C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_23F18C1CC(v1 + a1, v2);
}

uint64_t sub_23F1A97D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t sub_23F1A97E4()
{
  return sub_23F2686B4();
}

uint64_t sub_23F1A97EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_23F18C1CC(v1 + a1, v2);
}

uint64_t sub_23F1A97F8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1A9814()
{
  return sub_23F268888();
}

uint64_t sub_23F1A981C(uint64_t a1, uint64_t a2)
{
  return sub_23F1751F8(a1, a2);
}

uint64_t sub_23F1A9824(uint64_t a1, uint64_t a2)
{
  return sub_23F18C1CC(a1, a2);
}

void sub_23F1A982C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F1A9848(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F1A9864()
{
  return 0;
}

uint64_t sub_23F1A9880()
{
  return _s16IntelligenceFlow7EventIDV2eeoiySbAC_ACtFZ_0();
}

uint64_t sub_23F1A988C()
{
  return type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
}

uint64_t sub_23F1A9894()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  sub_23F159FD0(v2, v3);
  return sub_23F159FD0(v0, v1);
}

uint64_t sub_23F1A98B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F1A98D0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_23F1A990C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1A9924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 120));
}

_QWORD *sub_23F1A9934()
{
  uint64_t v0;
  _QWORD *v1;

  return sub_23F12545C(v1, v0);
}

uint64_t sub_23F1A9960(uint64_t a1)
{
  uint64_t v1;

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, 1, 1, v1);
}

uint64_t sub_23F1A9970()
{
  uint64_t v0;

  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(*(_QWORD *)(v0 - 112));
}

uint64_t sub_23F1A9978()
{
  return type metadata accessor for SessionServerDebuggerEvent.Payload(0);
}

uint64_t sub_23F1A9988()
{
  return type metadata accessor for SessionClientDebuggerEvent.Payload(0);
}

__n128 *sub_23F1A9998@<X0>(unint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  __n128 *v3;

  v3 = *(__n128 **)(v2 - 256);
  *v3 = a2;
  v3[1].n128_u64[0] = a1;
  return v3;
}

uint64_t sub_23F1A99B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F1A99C0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1A99CC()
{
  return sub_23F2688A0();
}

uint64_t sub_23F1A99DC()
{
  return sub_23F2688A0();
}

uint64_t sub_23F1A99EC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1A9A34()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F1A9A44()
{
  return 0;
}

uint64_t sub_23F1A9A54()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F1A9A64()
{
  return type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
}

void sub_23F1A9A6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F195980(a1, *(_QWORD *)(v3 - 640), a3);
}

void sub_23F1A9A8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F195980(v3, *(_QWORD *)(v4 - 96), a3);
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV11SpanStartedV6spanIds6UInt64Vvs_0(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

unint64_t sub_23F1A9AA0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = a1;
  return sub_23F146AE4();
}

unint64_t sub_23F1A9AA8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 9;
  return sub_23F198750();
}

unint64_t sub_23F1A9AB4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 176) = 9;
  return sub_23F19BC38();
}

uint64_t sub_23F1A9AC0()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_23F1A9ACC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 8;
  return sub_23F19878C();
}

unint64_t sub_23F1A9AD8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 176) = 8;
  return sub_23F19BC74();
}

unint64_t sub_23F1A9AE4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 7;
  return sub_23F1987C8();
}

unint64_t sub_23F1A9AF0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 176) = 7;
  return sub_23F19BCB0();
}

unint64_t sub_23F1A9B08()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 6;
  return sub_23F198804();
}

unint64_t sub_23F1A9B14()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 176) = 6;
  return sub_23F19BCEC();
}

unint64_t sub_23F1A9B20()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 69) = 5;
  return sub_23F19887C();
}

unint64_t sub_23F1A9B2C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 176) = 5;
  return sub_23F19BD28();
}

unint64_t sub_23F1A9B38()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 176) = 4;
  return sub_23F19BD64();
}

unint64_t sub_23F1A9B44()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 70) = 4;
  return sub_23F1988B8();
}

unint64_t sub_23F1A9B50()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 71) = 3;
  return sub_23F1988F4();
}

unint64_t sub_23F1A9B5C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_23F19C520();
}

unint64_t sub_23F1A9B68()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 176) = 3;
  return sub_23F19BDDC();
}

uint64_t sub_23F1A9B74@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return v1 - 72;
}

unint64_t sub_23F1A9B88()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 2;
  return sub_23F198930();
}

unint64_t sub_23F1A9B94()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_23F19C55C();
}

unint64_t sub_23F1A9BA0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 176) = 2;
  return sub_23F19BE54();
}

unint64_t sub_23F1A9BAC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 89) = 1;
  return sub_23F19896C();
}

void sub_23F1A9BB8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
}

unint64_t sub_23F1A9BC4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_23F19C598();
}

unint64_t sub_23F1A9BD0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 176) = 1;
  return sub_23F19BE90();
}

uint64_t sub_23F1A9BF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

uint64_t sub_23F1A9C00()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F1A9C08()
{
  uint64_t v0;

  return v0 - 96;
}

uint64_t sub_23F1A9C1C()
{
  uint64_t v0;

  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
}

uint64_t sub_23F1A9C24()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F18C1CC(v0, v1);
}

uint64_t sub_23F1A9C30@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
  return swift_bridgeObjectRetain();
}

void sub_23F1A9C3C(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
}

uint64_t sub_23F1A9C48()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F131170(v0, v1);
}

unint64_t sub_23F1A9C54()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 176) = 13;
  return sub_23F19BB0C();
}

void sub_23F1A9C74(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F195980(*(_QWORD *)(v4 - 72), v3, a3);
}

uint64_t sub_23F1A9C80()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1A9CA0()
{
  return sub_23F2688A0();
}

unint64_t sub_23F1A9CAC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 176) = 12;
  return sub_23F19BB84();
}

unint64_t sub_23F1A9CB8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 176) = 11;
  return sub_23F19BBC0();
}

unint64_t sub_23F1A9CC4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 176) = 10;
  return sub_23F19BBFC();
}

uint64_t sub_23F1A9CD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return 0;
}

uint64_t sub_23F1A9CF0()
{
  uint64_t v0;

  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
}

uint64_t sub_23F1A9CF8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t sub_23F1A9D10(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = result;
  return result;
}

void sub_23F1A9D24(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F16D354(v2, a2);
}

uint64_t sub_23F1A9D2C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1A9D7C(uint64_t a1, uint64_t *a2)
{
  return sub_23F1217E8(a2);
}

uint64_t sub_23F1A9D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(v0 + 20)) = *(_BYTE *)(v1 + *(int *)(v0 + 20));
  return v2;
}

void sub_23F1A9DB0()
{
  sub_23F122130();
}

uint64_t SessionStatusUpdate.payload.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_23F135CF4(v2, v3, v4, v5, v6, v7, v8);
}

__n128 SessionStatusUpdate.payload.setter(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_QWORD *)a1 + 7);
  sub_23F137288(*v1, v1[1], v1[2], v1[3], v1[4], v1[5], v1[6]);
  *(_OWORD *)v1 = v7;
  *((_OWORD *)v1 + 1) = v6;
  result = v5;
  *((__n128 *)v1 + 2) = v5;
  v1[6] = v2;
  v1[7] = v3;
  return result;
}

uint64_t (*SessionStatusUpdate.payload.modify())()
{
  return nullsub_1;
}

__n128 SessionStatusUpdate.init(payload:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __n128 result;
  __int128 v4;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  result = *(__n128 *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v4;
  return result;
}

uint64_t static SessionStatusUpdate.== infix(_:_:)(_OWORD *a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[4];
  _OWORD v14[4];

  v8 = a1[1];
  v14[0] = *a1;
  v14[1] = v8;
  v9 = a1[3];
  v14[2] = a1[2];
  v14[3] = v9;
  v10 = a2[1];
  v13[0] = *a2;
  v13[1] = v10;
  v11 = a2[3];
  v13[2] = a2[2];
  v13[3] = v11;
  return static SessionStatusUpdate.Payload.== infix(_:_:)((uint64_t *)v14, (uint64_t *)v13, a3, a4, a5, a6, a7, a8) & 1;
}

uint64_t static SessionStatusUpdate.Payload.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  float v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v8 = *a1;
  v9 = a1[1];
  v11 = a1[2];
  v10 = a1[3];
  v13 = a1[4];
  v12 = a1[5];
  v14 = a1[6];
  v15 = a1[7];
  v16 = *a2;
  v17 = a2[1];
  v18 = a2[2];
  v19 = a2[3];
  v20 = a2[4];
  v21 = a2[5];
  v22 = a2[6];
  v23 = a2[7];
  v121 = *a1;
  v122 = v9;
  v123 = v11;
  v124 = v10;
  v125 = v13;
  v126 = v12;
  v127 = v14;
  v128 = v15;
  v129 = v16;
  v130 = v17;
  v131 = v18;
  v132 = v19;
  v133 = v20;
  v134 = v21;
  v135 = v22;
  v136 = v23;
  if (v14 < 0)
  {
    v97 = v13;
    v101 = v12;
    v93 = v10;
    if (v22 < 0)
    {
      v113 = v8;
      v114 = v9;
      v115 = v11;
      v116 = v10;
      v117 = v13;
      v118 = v12;
      v84 = v11;
      v89 = v8;
      LOBYTE(v119) = v14 & 1;
      v120 = v15;
      v105 = v16;
      v106 = v17;
      v107 = v18;
      v108 = v19;
      v109 = v20;
      v110 = v21;
      LOBYTE(v111) = v22 & 1;
      v112 = v23;
      v36 = sub_23F1AE3F8();
      v79 = v37;
      v44 = sub_23F135CF4(v36, v38, v39, v40, v41, v42, v43);
      sub_23F1AE41C(v44, v45, v46, v47, v48, v49, v50, v51, v75, v79, v84, v89, v93, v97, v101);
      v52 = sub_23F1AE3C0();
      sub_23F1AE41C(v52, v53, v54, v55, v56, v57, v58, v59, v76, v80, v85, v90, v94, v98, v102);
      static SessionStatusUpdate.IntermediateQueryResult.== infix(_:_:)((uint64_t)&v113, (uint64_t)&v105);
      v77 = v15;
      v25 = v60;
      sub_23F1AE57C(v60, v61, v62, v63, v64, v65, v66, v67, v77, v81, v86, v91, v95, v99, v103, v105, v106, v107, v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121);
      v68 = sub_23F1AE3F8();
      sub_23F137288(v68, v69, v70, v71, v72, v73, v74);
      sub_23F137288(v92, v82, v87, v96, v100, v104, v14);
      return v25 & 1;
    }
    LODWORD(v88) = v14 & 1;
    v26 = v11;
    swift_bridgeObjectRetain();
    sub_23F135D60(v26, v93, v97, v101, v88);
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  if (v22 < 0)
  {
LABEL_7:
    v27 = sub_23F1AE3C0();
    sub_23F1AE57C(v27, v28, v29, v30, v31, v32, v33, v34, v75, v78, v83, v88, v93, v97, v101, v105, v106, v107, v108,
      v109,
      v110,
      v111,
      v112,
      v113,
      v114,
      v115,
      v116,
      v117,
      v118,
      v119,
      v120,
      v121);
    goto LABEL_8;
  }
  v24 = *(float *)&v8;
  sub_23F1AE57C((uint64_t)a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8, v75, v78, v83, v88, v93, v97, v101, v105, v106, v107, v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121);
  if (v24 != *(float *)&v16)
  {
LABEL_8:
    v25 = 0;
    return v25 & 1;
  }
  v25 = 1;
  return v25 & 1;
}

uint64_t *sub_23F1AA038(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  v5 = a1[11];
  v6 = a1[12];
  v7 = a1[13];
  v8 = a1[14];
  sub_23F137288(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_23F137288(v2, v3, v4, v5, v6, v7, v8);
  return a1;
}

uint64_t sub_23F1AA0C4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1AA148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1AA0C4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1AA170()
{
  sub_23F1AA454();
  return sub_23F2688B8();
}

uint64_t sub_23F1AA198()
{
  sub_23F1AA454();
  return sub_23F2688C4();
}

void SessionStatusUpdate.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F131874();
  v2 = v1;
  sub_23F1217E8(&qword_256E02F30);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F126058();
  sub_23F12545C(v2, v2[3]);
  sub_23F1AA454();
  sub_23F1AE3E4();
  sub_23F1AA490();
  sub_23F1AE450();
  sub_23F1AE36C(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void SessionStatusUpdate.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  sub_23F131874();
  sub_23F18AC78();
  sub_23F1217E8(&qword_256E02F48);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F15E498();
  sub_23F1AA454();
  sub_23F15E564();
  if (!v1)
  {
    sub_23F1AA4CC();
    sub_23F18ABC0();
    sub_23F1AE484();
    *v2 = v4;
    v2[1] = v5;
    v2[2] = v6;
    v2[3] = v7;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_23F1313FC();
}

void sub_23F1AA35C()
{
  SessionStatusUpdate.init(from:)();
}

void sub_23F1AA370()
{
  SessionStatusUpdate.encode(to:)();
}

BOOL static SessionStatusUpdate.ToolExecutionProgressUpdate.== infix(_:_:)(float *a1, float *a2)
{
  return *a1 == *a2;
}

void static SessionStatusUpdate.IntermediateQueryResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  char v4;
  __int128 v5;
  __int128 v6;
  char v7;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v14[2];
  char v15;
  _OWORD v16[2];
  char v17;

  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_OWORD *)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 48);
  v5 = *(_OWORD *)(a2 + 16);
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 48);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    goto LABEL_6;
  v12 = *(_OWORD *)(a1 + 32);
  v13 = *(_OWORD *)(a1 + 16);
  v10 = *(_OWORD *)(a2 + 32);
  v11 = *(_OWORD *)(a2 + 16);
  v9 = sub_23F268798();
  v6 = v10;
  v5 = v11;
  v3 = v12;
  v2 = v13;
  if ((v9 & 1) != 0)
  {
LABEL_6:
    v16[0] = v2;
    v16[1] = v3;
    v17 = v4;
    v14[0] = v5;
    v14[1] = v6;
    v15 = v7;
    if ((static SessionStatusUpdate.IntermediateQueryResult.Source.== infix(_:_:)((uint64_t)v16, (uint64_t)v14) & 1) != 0)
    {
      sub_23F1317E0();
      sub_23F1298E0();
    }
  }
}

unint64_t sub_23F1AA454()
{
  unint64_t result;

  result = qword_256E02F38;
  if (!qword_256E02F38)
  {
    result = MEMORY[0x242667160](&unk_23F278BEC, &type metadata for SessionStatusUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02F38);
  }
  return result;
}

unint64_t sub_23F1AA490()
{
  unint64_t result;

  result = qword_256E02F40;
  if (!qword_256E02F40)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate.Payload, &type metadata for SessionStatusUpdate.Payload);
    atomic_store(result, (unint64_t *)&qword_256E02F40);
  }
  return result;
}

unint64_t sub_23F1AA4CC()
{
  unint64_t result;

  result = qword_256E02F50;
  if (!qword_256E02F50)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate.Payload, &type metadata for SessionStatusUpdate.Payload);
    atomic_store(result, (unint64_t *)&qword_256E02F50);
  }
  return result;
}

uint64_t sub_23F1AA508(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000017 && a2 == 0x800000023F2941E0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023F294200)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23F1AA5F0()
{
  return 0xD000000000000017;
}

unint64_t sub_23F1AA624()
{
  return sub_23F1AA5F0();
}

uint64_t sub_23F1AA62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1AA508(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1AA650()
{
  sub_23F1ABC3C();
  return sub_23F2688B8();
}

uint64_t sub_23F1AA678()
{
  sub_23F1ABC3C();
  return sub_23F2688C4();
}

uint64_t sub_23F1AA6A0()
{
  sub_23F1ABCF0();
  return sub_23F2688B8();
}

uint64_t sub_23F1AA6C8()
{
  sub_23F1ABCF0();
  return sub_23F2688C4();
}

uint64_t sub_23F1AA6F0()
{
  sub_23F1ABC78();
  return sub_23F2688B8();
}

uint64_t sub_23F1AA718()
{
  sub_23F1ABC78();
  return sub_23F2688C4();
}

void SessionStatusUpdate.Payload.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F131874();
  sub_23F1AE598();
  v4 = sub_23F1217E8(&qword_256E02F58);
  v12 = *(_QWORD *)(v4 - 8);
  v13 = v4;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F125F70();
  v11 = v6;
  v7 = sub_23F1217E8(&qword_256E02F60);
  v14 = *(_QWORD *)(v7 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F15EB6C();
  v15 = *(_QWORD *)(sub_23F1217E8(&qword_256E02F68) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F15E50C();
  v10 = *(_QWORD *)(v0 + 48);
  sub_23F12545C(v3, v3[3]);
  sub_23F1ABC3C();
  sub_23F1AE498();
  if (v10 < 0)
  {
    sub_23F1ABC78();
    sub_23F18AB08();
    sub_23F1ABCB4();
    sub_23F1AE450();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  else
  {
    sub_23F1ABCF0();
    sub_23F18AB08();
    sub_23F1ABD2C();
    sub_23F1AE450();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v7);
  }
  sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void SessionStatusUpdate.Payload.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  unsigned __int8 v37;
  uint64_t v38;

  sub_23F131874();
  sub_23F1AE598();
  v31 = v12;
  sub_23F1217E8(&qword_256E02F98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F125F70();
  v32 = sub_23F1217E8(&qword_256E02FA0);
  v14 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  sub_23F126058();
  sub_23F1217E8(&qword_256E02FA8);
  sub_23F1AE470();
  MEMORY[0x24BDAC7A8](v15);
  v16 = v11[3];
  v17 = sub_23F12545C(v11, v16);
  sub_23F1ABC3C();
  sub_23F15E564();
  if (a10)
    goto LABEL_8;
  v18 = sub_23F1AE550();
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19
    || (v30 = *(_BYTE *)(v18 + 32), sub_23F15E2D0(1, v19, v18, v18 + 32, 0, (2 * v19) | 1),
                                    sub_23F1AE4C0(),
                                    v16 >> 1))
  {
    sub_23F268594();
    sub_23F131B30();
    v21 = v20;
    sub_23F1217E8(&qword_256DFF4B8);
    *v21 = &type metadata for SessionStatusUpdate.Payload;
    sub_23F268648();
    v22 = sub_23F15E6B4();
    sub_23F1AE4AC(v22, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_23F1A977C((uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
LABEL_8:
    v23 = (uint64_t)v11;
    goto LABEL_9;
  }
  if ((v30 & 1) != 0)
  {
    LOBYTE(v33) = 1;
    sub_23F1ABC78();
    sub_23F1AE458();
    sub_23F1ACC4C();
    sub_23F1AE540();
    sub_23F1AE4D4();
    sub_23F1AE3A8();
    sub_23F1A977C((uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v25 = v33;
    v24 = v34;
    v26 = v35;
    v27 = v36;
    v28 = v38;
    v29 = v37 | 0x8000000000000000;
  }
  else
  {
    LOBYTE(v33) = 0;
    sub_23F1ABCF0();
    sub_23F1AE458();
    sub_23F1ACC88();
    sub_23F1AE540();
    sub_23F1AE36C(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    sub_23F1AE3A8();
    sub_23F1A977C((uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v24 = 0;
    v29 = 0;
    v28 = 0;
    v25 = v33;
    v26 = 0uLL;
    v27 = 0uLL;
  }
  v23 = (uint64_t)v11;
  *(_QWORD *)v31 = v25;
  *(_QWORD *)(v31 + 8) = v24;
  *(_OWORD *)(v31 + 16) = v26;
  *(_OWORD *)(v31 + 32) = v27;
  *(_QWORD *)(v31 + 48) = v29;
  *(_QWORD *)(v31 + 56) = v28;
LABEL_9:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v23);
  sub_23F1313FC();
}

void sub_23F1AACAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  SessionStatusUpdate.Payload.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1AACC0()
{
  SessionStatusUpdate.Payload.encode(to:)();
}

float SessionStatusUpdate.ToolExecutionProgressUpdate.progress.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

IntelligenceFlow::SessionStatusUpdate::ToolExecutionProgressUpdate __swiftcall SessionStatusUpdate.ToolExecutionProgressUpdate.init(progress:)(IntelligenceFlow::SessionStatusUpdate::ToolExecutionProgressUpdate progress)
{
  IntelligenceFlow::SessionStatusUpdate::ToolExecutionProgressUpdate *v1;

  v1->progress = progress.progress;
  return progress;
}

uint64_t sub_23F1AACE8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x73736572676F7270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1AAD6C()
{
  return 0x73736572676F7270;
}

uint64_t sub_23F1AAD88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1AACE8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1AADB0()
{
  sub_23F1ACCC4();
  return sub_23F2688B8();
}

uint64_t sub_23F1AADD8()
{
  sub_23F1ACCC4();
  return sub_23F2688C4();
}

void SessionStatusUpdate.ToolExecutionProgressUpdate.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_23F1217E8(&qword_256E02FC0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F126058();
  sub_23F12545C(a1, a1[3]);
  sub_23F1ACCC4();
  sub_23F1AE3E4();
  sub_23F268738();
  sub_23F15E730(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F15EAFC();
}

uint64_t SessionStatusUpdate.ToolExecutionProgressUpdate.init(from:)()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  sub_23F18AC78();
  sub_23F1217E8(&qword_256E02FD0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F126058();
  sub_23F15E498();
  sub_23F1ACCC4();
  sub_23F15E564();
  if (!v0)
  {
    sub_23F26869C();
    v5 = v4;
    sub_23F15E730(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    *v1 = v5;
  }
  return sub_23F131BF4();
}

uint64_t sub_23F1AAF84()
{
  return SessionStatusUpdate.ToolExecutionProgressUpdate.init(from:)();
}

void sub_23F1AAF98(_QWORD *a1)
{
  SessionStatusUpdate.ToolExecutionProgressUpdate.encode(to:)(a1);
}

void SessionStatusUpdate.IntermediateQueryResult.query.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionStatusUpdate.IntermediateQueryResult.query.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*SessionStatusUpdate.IntermediateQueryResult.query.modify())()
{
  return nullsub_1;
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.source.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  return sub_23F135D60(v2, v3, v4, v5, v6);
}

__n128 SessionStatusUpdate.IntermediateQueryResult.source.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  v6 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *((_BYTE *)a1 + 32);
  sub_23F1372F4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
  *(_OWORD *)(v1 + 16) = v6;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 48) = v4;
  sub_23F131634();
  return result;
}

uint64_t (*SessionStatusUpdate.IntermediateQueryResult.source.modify())()
{
  return nullsub_1;
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.results.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.results.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*SessionStatusUpdate.IntermediateQueryResult.results.modify())()
{
  return nullsub_1;
}

__n128 SessionStatusUpdate.IntermediateQueryResult.init(query:source:results:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;
  __n128 result;
  __int128 v7;

  v5 = *(_BYTE *)(a3 + 32);
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  result = *(__n128 *)a3;
  v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a5 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(a5 + 32) = v7;
  *(_BYTE *)(a5 + 48) = v5;
  *(_QWORD *)(a5 + 56) = a4;
  return result;
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.associatedActionContext.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.associatedActionContext.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_bridgeObjectRelease();
  sub_23F1318B8();
  *(_OWORD *)v1 = v5;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  sub_23F131634();
  return result;
}

uint64_t (*SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.associatedActionContext.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::SessionStatusUpdate::IntermediateQueryResult::Source::AppEntityStringQuery __swiftcall SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.init(associatedActionContext:)(IntelligenceFlow::SessionStatusUpdate::IntermediateQueryResult::Source::AppEntityStringQuery associatedActionContext)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(associatedActionContext.associatedActionContext.toolId._countAndFlagsBits + 16);
  v3 = *(_QWORD *)(associatedActionContext.associatedActionContext.toolId._countAndFlagsBits + 24);
  *(_OWORD *)v1 = *(_OWORD *)associatedActionContext.associatedActionContext.toolId._countAndFlagsBits;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  return associatedActionContext;
}

void SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.toolId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.toolId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.toolId.modify())()
{
  return nullsub_1;
}

void SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.parameterId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.parameterId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  sub_23F12612C();
}

uint64_t (*SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.parameterId.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::SessionStatusUpdate::IntermediateQueryResult::Source::AppEntityStringQuery::ActionContext __swiftcall SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.init(toolId:parameterId:)(Swift::String toolId, Swift::String parameterId)
{
  Swift::String *v2;
  IntelligenceFlow::SessionStatusUpdate::IntermediateQueryResult::Source::AppEntityStringQuery::ActionContext result;

  *v2 = toolId;
  v2[1] = parameterId;
  result.parameterId = parameterId;
  result.toolId = toolId;
  return result;
}

void static SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;

  sub_23F15E6C4(a1);
  v7 = v7 && v5 == v6;
  if ((v7 || (sub_23F126148() & 1) != 0) && (v1 == v3 ? (v8 = v2 == v4) : (v8 = 0), !v8))
    sub_23F268798();
  else
    sub_23F12612C();
}

uint64_t sub_23F1AB288(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEB00000000644972)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1AB384(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6574656D61726170;
  else
    return 0x64496C6F6F74;
}

uint64_t sub_23F1AB3C0()
{
  char *v0;

  return sub_23F1AB384(*v0);
}

uint64_t sub_23F1AB3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1AB288(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1AB3EC()
{
  sub_23F1ACD00();
  return sub_23F2688B8();
}

uint64_t sub_23F1AB414()
{
  sub_23F1ACD00();
  return sub_23F2688C4();
}

void SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F131874();
  v3 = v2;
  v4 = sub_23F1217E8(&qword_256E02FD8);
  v6 = *(_QWORD *)(v4 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1319C8();
  sub_23F12545C(v3, v3[3]);
  sub_23F1ACD00();
  sub_23F1A99DC();
  sub_23F131644();
  if (!v0)
    sub_23F131644();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_23F1313FC();
}

void SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;

  sub_23F131874();
  v3 = v2;
  sub_23F1217E8(&qword_256E02FE8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F15E498();
  sub_23F1ACD00();
  sub_23F15E564();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    v5 = sub_23F15E704();
    v7 = v6;
    swift_bridgeObjectRetain();
    v8 = sub_23F15E704();
    v10 = v9;
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
    v12 = v8;
    sub_23F15E3EC(v11);
    *v3 = v5;
    v3[1] = v7;
    v3[2] = v12;
    v3[3] = v10;
    sub_23F1315C4();
    sub_23F131BF4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23F1313FC();
}

void sub_23F1AB644()
{
  SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.init(from:)();
}

void sub_23F1AB658()
{
  SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.encode(to:)();
}

void static SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  sub_23F15E6C4(a1);
  v7 = v7 && v5 == v6;
  if ((v7 || (sub_23F126148() & 1) != 0) && (v1 != v3 || v2 != v4))
    sub_23F126148();
  sub_23F12612C();
}

uint64_t sub_23F1AB6C8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000017 && a2 == 0x800000023F294220)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_23F1AB74C()
{
  return 0xD000000000000017;
}

uint64_t sub_23F1AB76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1AB6C8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1AB794()
{
  sub_23F1ACD3C();
  return sub_23F2688B8();
}

uint64_t sub_23F1AB7BC()
{
  sub_23F1ACD3C();
  return sub_23F2688C4();
}

void SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F131874();
  v2 = v1;
  sub_23F1217E8(&qword_256E02FF0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F126058();
  sub_23F12545C(v2, v2[3]);
  sub_23F1ACD3C();
  sub_23F1AE3E4();
  sub_23F1ACD78();
  sub_23F1AE450();
  sub_23F1AE36C(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F131874();
  sub_23F18AC78();
  sub_23F1217E8(&qword_256E03008);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F15E498();
  sub_23F1ACD3C();
  sub_23F15E564();
  if (!v1)
  {
    sub_23F1ACDB4();
    sub_23F18ABC0();
    sub_23F1AE484();
    *(_OWORD *)v2 = v4;
    *(_QWORD *)(v2 + 16) = v5;
    *(_QWORD *)(v2 + 24) = v6;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_23F1313FC();
}

void sub_23F1AB96C()
{
  SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.init(from:)();
}

void sub_23F1AB980()
{
  SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.encode(to:)();
}

uint64_t static SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_23F1AB9A0()
{
  sub_23F1ACDF0();
  return sub_23F2688B8();
}

uint64_t sub_23F1AB9C8()
{
  sub_23F1ACDF0();
  return sub_23F2688C4();
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23F1217E8(&qword_256E03018);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F15E50C();
  sub_23F12545C(a1, a1[3]);
  sub_23F1ACDF0();
  sub_23F1A99DC();
  return sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.init(from:)(uint64_t a1)
{
  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(a1);
}

uint64_t sub_23F1ABAB8(uint64_t a1)
{
  return SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.init(from:)(a1);
}

uint64_t sub_23F1ABACC(_QWORD *a1)
{
  return SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.encode(to:)(a1);
}

uint64_t static SessionStatusUpdate.IntermediateQueryResult.Source.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  if (v4 == 1)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v9 = *(_QWORD *)a1 == v6 && *(_QWORD *)(a1 + 8) == v5;
      if (v9 || (sub_23F126148() & 1) != 0)
      {
        if (v3 == v8 && v2 == v7)
        {
          v12 = 1;
          v37 = sub_23F1AE4F8();
          sub_23F135D60(v37, v38, v39, v40, v41);
          sub_23F1AE390();
          sub_23F1AE378();
          v42 = sub_23F1AE4F8();
          sub_23F1372F4(v42, v43, v44, v45, v46);
          return v12;
        }
        v11 = sub_23F126148();
        v12 = 1;
        sub_23F1AE438();
        sub_23F1AE390();
        sub_23F1AE378();
        v13 = sub_23F1AE510();
        sub_23F1372F4(v13, v14, v15, v16, v17);
        if ((v11 & 1) != 0)
          return v12;
        return 0;
      }
      sub_23F1AE438();
      sub_23F1AE390();
      sub_23F1AE378();
      v31 = sub_23F1AE510();
LABEL_18:
      sub_23F1372F4(v31, v32, v33, v34, v35);
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_17:
    v22 = sub_23F1AE528();
    sub_23F135D60(v22, v23, v24, v25, v26);
    v27 = sub_23F1AE5B8();
    sub_23F1372F4(v27, v28, v29, v30, v4);
    v31 = sub_23F1AE528();
    goto LABEL_18;
  }
  if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    goto LABEL_17;
  v18 = sub_23F1AE5B8();
  sub_23F1372F4(v18, v19, v20, v21, 0);
  sub_23F1372F4(v6, v5, v8, v7, 0);
  return 1;
}

unint64_t sub_23F1ABC3C()
{
  unint64_t result;

  result = qword_256E02F70;
  if (!qword_256E02F70)
  {
    result = MEMORY[0x242667160](&unk_23F278B9C, &type metadata for SessionStatusUpdate.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02F70);
  }
  return result;
}

unint64_t sub_23F1ABC78()
{
  unint64_t result;

  result = qword_256E02F78;
  if (!qword_256E02F78)
  {
    result = MEMORY[0x242667160](&unk_23F278B4C, &type metadata for SessionStatusUpdate.Payload.IntermediateQueryResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02F78);
  }
  return result;
}

unint64_t sub_23F1ABCB4()
{
  unint64_t result;

  result = qword_256E02F80;
  if (!qword_256E02F80)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate.IntermediateQueryResult, &type metadata for SessionStatusUpdate.IntermediateQueryResult);
    atomic_store(result, (unint64_t *)&qword_256E02F80);
  }
  return result;
}

unint64_t sub_23F1ABCF0()
{
  unint64_t result;

  result = qword_256E02F88;
  if (!qword_256E02F88)
  {
    result = MEMORY[0x242667160](&unk_23F278AFC, &type metadata for SessionStatusUpdate.Payload.ExecutionProgressUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02F88);
  }
  return result;
}

unint64_t sub_23F1ABD2C()
{
  unint64_t result;

  result = qword_256E02F90;
  if (!qword_256E02F90)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate.ToolExecutionProgressUpdate, &type metadata for SessionStatusUpdate.ToolExecutionProgressUpdate);
    atomic_store(result, (unint64_t *)&qword_256E02F90);
  }
  return result;
}

uint64_t sub_23F1ABD68(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72616553696E6D6FLL && a2 == 0xEA00000000006863;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023F294240)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1ABE60(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000014;
  else
    return 0x72616553696E6D6FLL;
}

uint64_t sub_23F1ABEA0()
{
  sub_23F1ACE68();
  return sub_23F2688B8();
}

uint64_t sub_23F1ABEC8()
{
  sub_23F1ACE68();
  return sub_23F2688C4();
}

uint64_t sub_23F1ABEF0()
{
  char *v0;

  return sub_23F1ABE60(*v0);
}

uint64_t sub_23F1ABEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1ABD68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1ABF1C()
{
  sub_23F1ACE2C();
  return sub_23F2688B8();
}

uint64_t sub_23F1ABF44()
{
  sub_23F1ACE2C();
  return sub_23F2688C4();
}

uint64_t sub_23F1ABF6C()
{
  sub_23F1ACEE0();
  return sub_23F2688B8();
}

uint64_t sub_23F1ABF94()
{
  sub_23F1ACEE0();
  return sub_23F2688C4();
}

void SessionStatusUpdate.IntermediateQueryResult.Source.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_23F131874();
  sub_23F1AE598();
  v4 = sub_23F1217E8(&qword_256E03028);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F1217E8(&qword_256E03030);
  v21 = *(_QWORD *)(v8 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F15EB6C();
  v10 = sub_23F1217E8(&qword_256E03038);
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F15E50C();
  v12 = *v0;
  v19 = v0[1];
  v20 = v12;
  v13 = v0[2];
  v17 = v0[3];
  v18 = v13;
  v14 = *((unsigned __int8 *)v0 + 32);
  sub_23F12545C(v3, v3[3]);
  sub_23F1ACE2C();
  sub_23F1AE498();
  if (v14 == 1)
  {
    sub_23F1AE570();
    sub_23F18AB08();
    v26 = v20;
    v27 = v19;
    v28 = v18;
    v29 = v17;
    sub_23F1ACEA4();
    v15 = v23;
    sub_23F1AE450();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v15);
  }
  else
  {
    LOBYTE(v26) = 0;
    sub_23F1ACEE0();
    sub_23F18AB08();
    sub_23F1ACF1C();
    sub_23F1AE450();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v2, v8);
  }
  sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void SessionStatusUpdate.IntermediateQueryResult.Source.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_23F131874();
  sub_23F1AE598();
  v32 = v13;
  v33 = *(_QWORD *)(sub_23F1217E8(&qword_256E03068) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F125F70();
  v35 = v15;
  v34 = sub_23F1217E8(&qword_256E03070);
  v16 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  sub_23F126058();
  sub_23F1217E8(&qword_256E03078);
  sub_23F1AE470();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23F12545C(v12, v12[3]);
  sub_23F1ACE2C();
  sub_23F15E564();
  if (a10)
    goto LABEL_7;
  v31 = (uint64_t)v12;
  v19 = sub_23F1AE550();
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20
    || (v21 = *(_BYTE *)(v19 + 32), sub_23F15E2D0(1, v20, v19, v19 + 32, 0, (2 * v20) | 1), sub_23F1AE4C0(), v11))
  {
    sub_23F268594();
    sub_23F131B30();
    v23 = v22;
    sub_23F1217E8(&qword_256DFF4B8);
    *v23 = &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source;
    sub_23F268648();
    v24 = sub_23F15E6B4();
    sub_23F1AE4AC(v24, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_23F15E44C((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v12 = (_QWORD *)v31;
LABEL_7:
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v12);
    goto LABEL_8;
  }
  if ((v21 & 1) != 0)
  {
    sub_23F1AE570();
    sub_23F1AE584();
    sub_23F26863C();
    sub_23F1ACF58();
    sub_23F2686B4();
    sub_23F1A977C(v35, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    sub_23F1AE3A8();
    sub_23F15E44C((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v25 = v36;
    v26 = v37;
    v27 = v38;
    v28 = v39;
  }
  else
  {
    sub_23F1ACEE0();
    sub_23F1AE584();
    sub_23F26863C();
    sub_23F1ACF94();
    sub_23F2686B4();
    sub_23F1AE36C(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    sub_23F1AE3A8();
    v29 = sub_23F1AE4E8();
    sub_23F15E44C(v29, v30);
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
  }
  *(_QWORD *)v32 = v25;
  *(_QWORD *)(v32 + 8) = v26;
  *(_QWORD *)(v32 + 16) = v27;
  *(_QWORD *)(v32 + 24) = v28;
  *(_BYTE *)(v32 + 32) = v21;
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v31);
LABEL_8:
  sub_23F1313FC();
}

uint64_t sub_23F1AC558(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F1AC694()
{
  sub_23F268834();
  sub_23F268840();
  return sub_23F268864();
}

uint64_t sub_23F1AC6D8(char a1)
{
  if (!a1)
    return 0x7972657571;
  if (a1 == 1)
    return 0x656372756F73;
  return 0x73746C75736572;
}

void sub_23F1AC72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  SessionStatusUpdate.IntermediateQueryResult.Source.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1AC740()
{
  SessionStatusUpdate.IntermediateQueryResult.Source.encode(to:)();
}

uint64_t sub_23F1AC754()
{
  return sub_23F1AC694();
}

uint64_t sub_23F1AC75C()
{
  char *v0;

  return sub_23F1AC6D8(*v0);
}

uint64_t sub_23F1AC764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1AC558(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1AC788()
{
  sub_23F1ACFD0();
  return sub_23F2688B8();
}

uint64_t sub_23F1AC7B0()
{
  sub_23F1ACFD0();
  return sub_23F2688C4();
}

void SessionStatusUpdate.IntermediateQueryResult.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  sub_23F131874();
  v5 = v4;
  sub_23F1217E8(&qword_256E03090);
  sub_23F1AE470();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1319C8();
  sub_23F12545C(v5, v5[3]);
  sub_23F1ACFD0();
  sub_23F2688A0();
  sub_23F268720();
  if (!v1)
  {
    sub_23F1AD00C();
    sub_23F1315CC();
    sub_23F1217E8(&qword_256E030A8);
    sub_23F1AD084((unint64_t *)&qword_256E030B0, &qword_256DFE598, MEMORY[0x24BEB9A28], MEMORY[0x24BEE12A0]);
    sub_23F1315CC();
  }
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v3);
  sub_23F1313FC();
}

void SessionStatusUpdate.IntermediateQueryResult.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  sub_23F131874();
  sub_23F18AC78();
  sub_23F1217E8(&qword_256E030B8);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F12545C(v0, v0[3]);
  sub_23F1ACFD0();
  sub_23F268888();
  if (v1)
  {
    sub_23F131BF4();
  }
  else
  {
    LOBYTE(v16) = 0;
    v4 = sub_23F268684();
    v6 = v5;
    v15 = v4;
    sub_23F1AD048();
    swift_bridgeObjectRetain();
    sub_23F2686B4();
    sub_23F1217E8(&qword_256E030A8);
    sub_23F135D60(v16, v17, v18, v19, v20);
    sub_23F1AD084((unint64_t *)&qword_256E030C8, &qword_256DFE5B8, MEMORY[0x24BEB9A40], MEMORY[0x24BEE12D0]);
    sub_23F2686B4();
    sub_23F1AE3B0();
    swift_bridgeObjectRetain();
    sub_23F135D60(v16, v17, v18, v19, v20);
    swift_bridgeObjectRetain();
    v7 = sub_23F1AE55C();
    sub_23F1372F4(v7, v8, v9, v10, v20);
    sub_23F1318DC();
    *(_QWORD *)v2 = v15;
    *(_QWORD *)(v2 + 8) = v6;
    *(_QWORD *)(v2 + 16) = v16;
    *(_QWORD *)(v2 + 24) = v17;
    *(_QWORD *)(v2 + 32) = v18;
    *(_QWORD *)(v2 + 40) = v19;
    *(_BYTE *)(v2 + 48) = v20;
    *(_QWORD *)(v2 + 56) = v16;
    sub_23F131BF4();
    sub_23F1318DC();
    v11 = sub_23F1AE55C();
    sub_23F1372F4(v11, v12, v13, v14, v20);
    swift_bridgeObjectRelease();
  }
  sub_23F1313FC();
}

void sub_23F1ACC24()
{
  SessionStatusUpdate.IntermediateQueryResult.init(from:)();
}

void sub_23F1ACC38()
{
  SessionStatusUpdate.IntermediateQueryResult.encode(to:)();
}

unint64_t sub_23F1ACC4C()
{
  unint64_t result;

  result = qword_256E02FB0;
  if (!qword_256E02FB0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate.IntermediateQueryResult, &type metadata for SessionStatusUpdate.IntermediateQueryResult);
    atomic_store(result, (unint64_t *)&qword_256E02FB0);
  }
  return result;
}

unint64_t sub_23F1ACC88()
{
  unint64_t result;

  result = qword_256E02FB8;
  if (!qword_256E02FB8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate.ToolExecutionProgressUpdate, &type metadata for SessionStatusUpdate.ToolExecutionProgressUpdate);
    atomic_store(result, (unint64_t *)&qword_256E02FB8);
  }
  return result;
}

unint64_t sub_23F1ACCC4()
{
  unint64_t result;

  result = qword_256E02FC8;
  if (!qword_256E02FC8)
  {
    result = MEMORY[0x242667160](&unk_23F278AAC, &type metadata for SessionStatusUpdate.ToolExecutionProgressUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02FC8);
  }
  return result;
}

unint64_t sub_23F1ACD00()
{
  unint64_t result;

  result = qword_256E02FE0;
  if (!qword_256E02FE0)
  {
    result = MEMORY[0x242667160](&unk_23F278A5C, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02FE0);
  }
  return result;
}

unint64_t sub_23F1ACD3C()
{
  unint64_t result;

  result = qword_256E02FF8;
  if (!qword_256E02FF8)
  {
    result = MEMORY[0x242667160](&unk_23F278A0C, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E02FF8);
  }
  return result;
}

unint64_t sub_23F1ACD78()
{
  unint64_t result;

  result = qword_256E03000;
  if (!qword_256E03000)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext);
    atomic_store(result, (unint64_t *)&qword_256E03000);
  }
  return result;
}

unint64_t sub_23F1ACDB4()
{
  unint64_t result;

  result = qword_256E03010;
  if (!qword_256E03010)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext);
    atomic_store(result, (unint64_t *)&qword_256E03010);
  }
  return result;
}

unint64_t sub_23F1ACDF0()
{
  unint64_t result;

  result = qword_256E03020;
  if (!qword_256E03020)
  {
    result = MEMORY[0x242667160](&unk_23F2789BC, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03020);
  }
  return result;
}

unint64_t sub_23F1ACE2C()
{
  unint64_t result;

  result = qword_256E03040;
  if (!qword_256E03040)
  {
    result = MEMORY[0x242667160](&unk_23F27896C, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03040);
  }
  return result;
}

unint64_t sub_23F1ACE68()
{
  unint64_t result;

  result = qword_256E03048;
  if (!qword_256E03048)
  {
    result = MEMORY[0x242667160](&unk_23F27891C, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03048);
  }
  return result;
}

unint64_t sub_23F1ACEA4()
{
  unint64_t result;

  result = qword_256E03050;
  if (!qword_256E03050)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery);
    atomic_store(result, (unint64_t *)&qword_256E03050);
  }
  return result;
}

unint64_t sub_23F1ACEE0()
{
  unint64_t result;

  result = qword_256E03058;
  if (!qword_256E03058)
  {
    result = MEMORY[0x242667160](&unk_23F2788CC, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03058);
  }
  return result;
}

unint64_t sub_23F1ACF1C()
{
  unint64_t result;

  result = qword_256E03060;
  if (!qword_256E03060)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery);
    atomic_store(result, (unint64_t *)&qword_256E03060);
  }
  return result;
}

unint64_t sub_23F1ACF58()
{
  unint64_t result;

  result = qword_256E03080;
  if (!qword_256E03080)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery);
    atomic_store(result, (unint64_t *)&qword_256E03080);
  }
  return result;
}

unint64_t sub_23F1ACF94()
{
  unint64_t result;

  result = qword_256E03088;
  if (!qword_256E03088)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery);
    atomic_store(result, (unint64_t *)&qword_256E03088);
  }
  return result;
}

unint64_t sub_23F1ACFD0()
{
  unint64_t result;

  result = qword_256E03098;
  if (!qword_256E03098)
  {
    result = MEMORY[0x242667160](&unk_23F27887C, &type metadata for SessionStatusUpdate.IntermediateQueryResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03098);
  }
  return result;
}

unint64_t sub_23F1AD00C()
{
  unint64_t result;

  result = qword_256E030A0;
  if (!qword_256E030A0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate.IntermediateQueryResult.Source, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source);
    atomic_store(result, (unint64_t *)&qword_256E030A0);
  }
  return result;
}

unint64_t sub_23F1AD048()
{
  unint64_t result;

  result = qword_256E030C0;
  if (!qword_256E030C0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate.IntermediateQueryResult.Source, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source);
    atomic_store(result, (unint64_t *)&qword_256E030C0);
  }
  return result;
}

uint64_t sub_23F1AD084(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = sub_23F125540(&qword_256E030A8);
    sub_23F1AD100(a2, a3);
    v11 = v10;
    result = MEMORY[0x242667160](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23F1AD100(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = sub_23F268078();
    atomic_store(MEMORY[0x242667160](a2, v4), a1);
  }
  sub_23F126078();
}

void type metadata accessor for SessionStatusUpdate()
{
  sub_23F131844();
}

uint64_t _s16IntelligenceFlow19SessionStatusUpdateV7PayloadOwxx_0(uint64_t *a1)
{
  return sub_23F137288(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
}

void _s16IntelligenceFlow19SessionStatusUpdateV7PayloadOwcp_0(uint64_t a1, uint64_t *a2)
{
  sub_23F1AE334(a1, a2);
  sub_23F1AE5A4();
  sub_23F125EFC();
}

void _s16IntelligenceFlow19SessionStatusUpdateV7PayloadOwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F1AE334(a1, a2);
  sub_23F1AE5A4();
  sub_23F137288(v2, v3, v4, v5, v6, v7, v8);
  sub_23F125EFC();
}

void _s16IntelligenceFlow19SessionStatusUpdateV7PayloadOwta_0(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v3 = *a1;
  v5 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v7 = a1[4];
  v8 = a1[5];
  v9 = a1[6];
  v10 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v10;
  v11 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v11;
  sub_23F137288(v3, v5, v4, v6, v7, v8, v9);
  sub_23F126078();
}

uint64_t _s16IntelligenceFlow19SessionStatusUpdateV7PayloadOwet_0(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48) >> 1;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

double sub_23F1AD27C(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 56) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 48) = 2 * -a2;
      *(_QWORD *)(a1 + 56) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_23F1AD2DC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48) >> 63;
}

uint64_t sub_23F1AD2E8(uint64_t result)
{
  *(_QWORD *)(result + 48) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_23F1AD2F8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 48) = *(_QWORD *)(result + 48) & 1 | (a2 << 63);
  return result;
}

void type metadata accessor for SessionStatusUpdate.Payload()
{
  sub_23F131844();
}

void type metadata accessor for SessionStatusUpdate.ToolExecutionProgressUpdate()
{
  sub_23F131844();
}

uint64_t destroy for SessionStatusUpdate.IntermediateQueryResult(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_23F1372F4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionStatusUpdate.IntermediateQueryResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_23F135D60(v5, v6, v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionStatusUpdate.IntermediateQueryResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  sub_23F135D60(v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  sub_23F1372F4(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SessionStatusUpdate.IntermediateQueryResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_BYTE *)(a1 + 48);
  v11 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v11;
  *(_BYTE *)(a1 + 48) = v5;
  sub_23F1372F4(v6, v7, v8, v9, v10);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for SessionStatusUpdate.IntermediateQueryResult()
{
  sub_23F131844();
}

uint64_t destroy for SessionStatusUpdate.IntermediateQueryResult.Source(uint64_t a1)
{
  return sub_23F1372F4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for SessionStatusUpdate.IntermediateQueryResult.Source(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_23F135D60(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for SessionStatusUpdate.IntermediateQueryResult.Source(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_23F135D60(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_23F1372F4(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for AppIntentsInvocationPreview.Parameter(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SessionStatusUpdate.IntermediateQueryResult.Source(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_23F1372F4(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionStatusUpdate.IntermediateQueryResult.Source(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionStatusUpdate.IntermediateQueryResult.Source(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_23F1AD6CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_23F1AD6D4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

void type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source()
{
  sub_23F131844();
}

void type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery()
{
  sub_23F131844();
}

uint64_t _s16IntelligenceFlow19SessionStatusUpdateV23IntermediateQueryResultV6SourceO20AppEntityStringQueryV13ActionContextVwxx_0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s16IntelligenceFlow19SessionStatusUpdateV23IntermediateQueryResultV6SourceO20AppEntityStringQueryV13ActionContextVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  sub_23F1318B8();
  return a1;
}

void type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext()
{
  sub_23F131844();
}

void type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery()
{
  sub_23F131844();
}

uint64_t storeEnumTagSinglePayload for SessionStatusUpdate.IntermediateQueryResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F1AD7F4 + 4 * byte_23F277AF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F1AD828 + 4 * byte_23F277AF0[v4]))();
}

uint64_t sub_23F1AD828(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1AD830(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F1AD838);
  return result;
}

uint64_t sub_23F1AD844(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F1AD84CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F1AD850(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1AD858(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.IntermediateQueryResult.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchCodingKeys()
{
  return &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchCodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQueryCodingKeys()
{
  return &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQueryCodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.ToolExecutionProgressUpdate.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.ToolExecutionProgressUpdate.CodingKeys;
}

uint64_t _s16IntelligenceFlow19SessionStatusUpdateV23IntermediateQueryResultV6SourceO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F1AD938 + 4 * byte_23F277AFF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F1AD96C + 4 * byte_23F277AFA[v4]))();
}

uint64_t sub_23F1AD96C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1AD974(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F1AD97CLL);
  return result;
}

uint64_t sub_23F1AD988(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F1AD990);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F1AD994(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1AD99C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.Payload.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.Payload.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.Payload.ExecutionProgressUpdateCodingKeys()
{
  return &type metadata for SessionStatusUpdate.Payload.ExecutionProgressUpdateCodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.Payload.IntermediateQueryResultCodingKeys()
{
  return &type metadata for SessionStatusUpdate.Payload.IntermediateQueryResultCodingKeys;
}

uint64_t _s16IntelligenceFlow19SessionStatusUpdateV23IntermediateQueryResultV6SourceO20OmniSearchCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F1ADA18 + 4 * byte_23F277B04[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F1ADA38 + 4 * byte_23F277B09[v4]))();
}

_BYTE *sub_23F1ADA18(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F1ADA38(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F1ADA40(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F1ADA48(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F1ADA50(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F1ADA58(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.CodingKeys;
}

unint64_t sub_23F1ADA78()
{
  unint64_t result;

  result = qword_256E030D0;
  if (!qword_256E030D0)
  {
    result = MEMORY[0x242667160](&unk_23F2780D4, &type metadata for SessionStatusUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E030D0);
  }
  return result;
}

unint64_t sub_23F1ADAB8()
{
  unint64_t result;

  result = qword_256E030D8;
  if (!qword_256E030D8)
  {
    result = MEMORY[0x242667160](&unk_23F27818C, &type metadata for SessionStatusUpdate.Payload.IntermediateQueryResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E030D8);
  }
  return result;
}

unint64_t sub_23F1ADAF8()
{
  unint64_t result;

  result = qword_256E030E0;
  if (!qword_256E030E0)
  {
    result = MEMORY[0x242667160](&unk_23F278244, &type metadata for SessionStatusUpdate.Payload.ExecutionProgressUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E030E0);
  }
  return result;
}

unint64_t sub_23F1ADB38()
{
  unint64_t result;

  result = qword_256E030E8;
  if (!qword_256E030E8)
  {
    result = MEMORY[0x242667160](&unk_23F2782FC, &type metadata for SessionStatusUpdate.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E030E8);
  }
  return result;
}

unint64_t sub_23F1ADB78()
{
  unint64_t result;

  result = qword_256E030F0;
  if (!qword_256E030F0)
  {
    result = MEMORY[0x242667160](&unk_23F2783B4, &type metadata for SessionStatusUpdate.ToolExecutionProgressUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E030F0);
  }
  return result;
}

unint64_t sub_23F1ADBB8()
{
  unint64_t result;

  result = qword_256E030F8;
  if (!qword_256E030F8)
  {
    result = MEMORY[0x242667160](&unk_23F27846C, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E030F8);
  }
  return result;
}

unint64_t sub_23F1ADBF8()
{
  unint64_t result;

  result = qword_256E03100;
  if (!qword_256E03100)
  {
    result = MEMORY[0x242667160](&unk_23F278524, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03100);
  }
  return result;
}

unint64_t sub_23F1ADC38()
{
  unint64_t result;

  result = qword_256E03108;
  if (!qword_256E03108)
  {
    result = MEMORY[0x242667160](&unk_23F27862C, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03108);
  }
  return result;
}

unint64_t sub_23F1ADC78()
{
  unint64_t result;

  result = qword_256E03110;
  if (!qword_256E03110)
  {
    result = MEMORY[0x242667160](&unk_23F2786E4, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03110);
  }
  return result;
}

unint64_t sub_23F1ADCB8()
{
  unint64_t result;

  result = qword_256E03118;
  if (!qword_256E03118)
  {
    result = MEMORY[0x242667160](&unk_23F27879C, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03118);
  }
  return result;
}

unint64_t sub_23F1ADCF8()
{
  unint64_t result;

  result = qword_256E03120;
  if (!qword_256E03120)
  {
    result = MEMORY[0x242667160](&unk_23F278854, &type metadata for SessionStatusUpdate.IntermediateQueryResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03120);
  }
  return result;
}

unint64_t sub_23F1ADD38()
{
  unint64_t result;

  result = qword_256E03128;
  if (!qword_256E03128)
  {
    result = MEMORY[0x242667160](&unk_23F2787C4, &type metadata for SessionStatusUpdate.IntermediateQueryResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03128);
  }
  return result;
}

unint64_t sub_23F1ADD78()
{
  unint64_t result;

  result = qword_256E03130;
  if (!qword_256E03130)
  {
    result = MEMORY[0x242667160](&unk_23F2787EC, &type metadata for SessionStatusUpdate.IntermediateQueryResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03130);
  }
  return result;
}

unint64_t sub_23F1ADDB8()
{
  unint64_t result;

  result = qword_256E03138;
  if (!qword_256E03138)
  {
    result = MEMORY[0x242667160](&unk_23F278654, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03138);
  }
  return result;
}

unint64_t sub_23F1ADDF8()
{
  unint64_t result;

  result = qword_256E03140;
  if (!qword_256E03140)
  {
    result = MEMORY[0x242667160](&unk_23F27867C, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03140);
  }
  return result;
}

unint64_t sub_23F1ADE38()
{
  unint64_t result;

  result = qword_256E03148;
  if (!qword_256E03148)
  {
    result = MEMORY[0x242667160](&unk_23F27859C, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03148);
  }
  return result;
}

unint64_t sub_23F1ADE78()
{
  unint64_t result;

  result = qword_256E03150;
  if (!qword_256E03150)
  {
    result = MEMORY[0x242667160](&unk_23F2785C4, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03150);
  }
  return result;
}

unint64_t sub_23F1ADEB8()
{
  unint64_t result;

  result = qword_256E03158;
  if (!qword_256E03158)
  {
    result = MEMORY[0x242667160](&unk_23F27870C, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03158);
  }
  return result;
}

unint64_t sub_23F1ADEF8()
{
  unint64_t result;

  result = qword_256E03160;
  if (!qword_256E03160)
  {
    result = MEMORY[0x242667160](&unk_23F278734, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03160);
  }
  return result;
}

unint64_t sub_23F1ADF38()
{
  unint64_t result;

  result = qword_256E03168;
  if (!qword_256E03168)
  {
    result = MEMORY[0x242667160](&unk_23F27854C, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03168);
  }
  return result;
}

unint64_t sub_23F1ADF78()
{
  unint64_t result;

  result = qword_256E03170;
  if (!qword_256E03170)
  {
    result = MEMORY[0x242667160](&unk_23F278574, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03170);
  }
  return result;
}

unint64_t sub_23F1ADFB8()
{
  unint64_t result;

  result = qword_256E03178;
  if (!qword_256E03178)
  {
    result = MEMORY[0x242667160](&unk_23F278494, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03178);
  }
  return result;
}

unint64_t sub_23F1ADFF8()
{
  unint64_t result;

  result = qword_256E03180;
  if (!qword_256E03180)
  {
    result = MEMORY[0x242667160](&unk_23F2784BC, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03180);
  }
  return result;
}

unint64_t sub_23F1AE038()
{
  unint64_t result;

  result = qword_256E03188;
  if (!qword_256E03188)
  {
    result = MEMORY[0x242667160](&unk_23F2783DC, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03188);
  }
  return result;
}

unint64_t sub_23F1AE078()
{
  unint64_t result;

  result = qword_256E03190;
  if (!qword_256E03190)
  {
    result = MEMORY[0x242667160](&unk_23F278404, &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03190);
  }
  return result;
}

unint64_t sub_23F1AE0B8()
{
  unint64_t result;

  result = qword_256E03198;
  if (!qword_256E03198)
  {
    result = MEMORY[0x242667160](&unk_23F278324, &type metadata for SessionStatusUpdate.ToolExecutionProgressUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03198);
  }
  return result;
}

unint64_t sub_23F1AE0F8()
{
  unint64_t result;

  result = qword_256E031A0;
  if (!qword_256E031A0)
  {
    result = MEMORY[0x242667160](&unk_23F27834C, &type metadata for SessionStatusUpdate.ToolExecutionProgressUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E031A0);
  }
  return result;
}

unint64_t sub_23F1AE138()
{
  unint64_t result;

  result = qword_256E031A8;
  if (!qword_256E031A8)
  {
    result = MEMORY[0x242667160](&unk_23F2781B4, &type metadata for SessionStatusUpdate.Payload.ExecutionProgressUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E031A8);
  }
  return result;
}

unint64_t sub_23F1AE178()
{
  unint64_t result;

  result = qword_256E031B0;
  if (!qword_256E031B0)
  {
    result = MEMORY[0x242667160](&unk_23F2781DC, &type metadata for SessionStatusUpdate.Payload.ExecutionProgressUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E031B0);
  }
  return result;
}

unint64_t sub_23F1AE1B8()
{
  unint64_t result;

  result = qword_256E031B8;
  if (!qword_256E031B8)
  {
    result = MEMORY[0x242667160](&unk_23F2780FC, &type metadata for SessionStatusUpdate.Payload.IntermediateQueryResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E031B8);
  }
  return result;
}

unint64_t sub_23F1AE1F8()
{
  unint64_t result;

  result = qword_256E031C0;
  if (!qword_256E031C0)
  {
    result = MEMORY[0x242667160](&unk_23F278124, &type metadata for SessionStatusUpdate.Payload.IntermediateQueryResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E031C0);
  }
  return result;
}

unint64_t sub_23F1AE238()
{
  unint64_t result;

  result = qword_256E031C8;
  if (!qword_256E031C8)
  {
    result = MEMORY[0x242667160](&unk_23F27826C, &type metadata for SessionStatusUpdate.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E031C8);
  }
  return result;
}

unint64_t sub_23F1AE278()
{
  unint64_t result;

  result = qword_256E031D0;
  if (!qword_256E031D0)
  {
    result = MEMORY[0x242667160](&unk_23F278294, &type metadata for SessionStatusUpdate.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E031D0);
  }
  return result;
}

unint64_t sub_23F1AE2B8()
{
  unint64_t result;

  result = qword_256E031D8;
  if (!qword_256E031D8)
  {
    result = MEMORY[0x242667160](&unk_23F278044, &type metadata for SessionStatusUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E031D8);
  }
  return result;
}

unint64_t sub_23F1AE2F8()
{
  unint64_t result;

  result = qword_256E031E0;
  if (!qword_256E031E0)
  {
    result = MEMORY[0x242667160](&unk_23F27806C, &type metadata for SessionStatusUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E031E0);
  }
  return result;
}

uint64_t sub_23F1AE334(uint64_t a1, uint64_t *a2)
{
  return sub_23F135CF4(*a2, a2[1], a2[2], a2[3], a2[4], a2[5], a2[6]);
}

uint64_t sub_23F1AE36C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F1AE378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23F1372F4(v3, v2, v1, v0, 1);
}

uint64_t sub_23F1AE390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23F135D60(v3, v2, v1, v0, 1);
}

uint64_t sub_23F1AE3A8()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F1AE3B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F1AE3C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return sub_23F135CF4(v3, v4, v5, v6, v0, v1, v2);
}

uint64_t sub_23F1AE3E4()
{
  return sub_23F2688A0();
}

uint64_t sub_23F1AE3F8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1AE41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;

  return sub_23F135CF4(a12, a10, a11, a13, a14, a15, v15);
}

uint64_t sub_23F1AE438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23F135D60(v1, v0, v3, v2, 1);
}

uint64_t sub_23F1AE450()
{
  return sub_23F268750();
}

uint64_t sub_23F1AE458()
{
  return sub_23F26863C();
}

uint64_t sub_23F1AE484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F1AE498()
{
  return sub_23F2688A0();
}

uint64_t sub_23F1AE4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t sub_23F1AE4C0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F1AE4D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 160) + 8))(v0, v1);
}

uint64_t sub_23F1AE4E8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1AE4F8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1AE510()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1AE528()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1AE540()
{
  return sub_23F2686B4();
}

uint64_t sub_23F1AE550()
{
  return sub_23F2686D8();
}

uint64_t sub_23F1AE55C()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F1AE570()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 1;
  return sub_23F1ACE68();
}

uint64_t *sub_23F1AE57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  return sub_23F1AA038(&a32);
}

void sub_23F1AE598()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

void sub_23F1AE5A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *v0 = v1;
  v0[1] = v2;
  v0[2] = v3;
  v0[3] = v4;
  v0[4] = v5;
  v0[5] = v6;
  v0[6] = v7;
  v0[7] = v8;
}

uint64_t sub_23F1AE5B8()
{
  uint64_t v0;

  return v0;
}

void MessagePayload.ClientEffectResolved.init(stepId:result:)(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23F131B8C();
  sub_23F126138(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  v3 = type metadata accessor for MessagePayload.ClientEffectResolved(0);
  sub_23F2501E4(v3, a1 + *(int *)(v3 + 20), type metadata accessor for MessagePayload.ClientEffectResolved.Result);
  sub_23F12612C();
}

uint64_t type metadata accessor for MessagePayload.ClientEffectResolved(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E05E80);
}

uint64_t type metadata accessor for MessagePayload.ClientEffectResolved.Result(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E05F28);
}

void SessionClientMessage.init(sessionId:clientRequestId:payload:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  _QWORD *v13;

  sub_23F125F3C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  sub_23F131B8C();
  v8 = sub_23F15EB40();
  v9(v8);
  v10 = type metadata accessor for SessionClientMessage(0);
  sub_23F1BE1A0(v1, v7 + *(int *)(v10 + 24), type metadata accessor for MessagePayload);
  if (!v3)
  {
    v5 = 0;
    v3 = 0xE000000000000000;
  }
  sub_23F1BE0BC(v1, type metadata accessor for MessagePayload);
  v11 = sub_23F2514CC();
  v12(v11);
  v13 = (_QWORD *)(v7 + *(int *)(v10 + 20));
  *v13 = v5;
  v13[1] = v3;
  sub_23F125EFC();
}

uint64_t type metadata accessor for SessionClientMessage(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E05680);
}

uint64_t type metadata accessor for MessagePayload(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E057D8);
}

void MessagePayload.ClientActionResult.init(eventId:outcome:response:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  _BYTE v11[192];
  _QWORD v12[24];
  _BYTE v13[192];

  sub_23F125F3C();
  v2 = v1;
  v4 = v3;
  sub_23F250200();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F15E660();
  sub_23F251490(v2, (uint64_t)v11);
  v6 = sub_23F251620();
  v7 = v4 + *(int *)(v6 + 24);
  sub_23F12EF30(v12);
  sub_23F251490((uint64_t)v12, v7);
  sub_23F131B8C();
  v8 = sub_23F24FAB0();
  v9(v8);
  ActionOutcome.asStatementOutcome.getter();
  sub_23F250838(v10, type metadata accessor for ActionOutcome);
  sub_23F1BE0F4(v0, v4 + *(int *)(v6 + 20), type metadata accessor for StatementOutcome);
  sub_23F251490(v7, (uint64_t)v13);
  sub_23F1F4F74((uint64_t)v13);
  sub_23F251490((uint64_t)v11, v7);
  sub_23F125EFC();
}

uint64_t type metadata accessor for StatementOutcome(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06908);
}

uint64_t type metadata accessor for MessagePayload.ClientActionResult(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E05FB8);
}

uint64_t MessagePayload.SessionError.init(error:hierarchy:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *(_BYTE *)(result + 8);
  *(_QWORD *)a3 = *(_QWORD *)result;
  *(_BYTE *)(a3 + 8) = v3;
  *(_QWORD *)(a3 + 16) = a2;
  return result;
}

uint64_t StatementID.init(index:name:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_DWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  return result;
}

void AnySessionMessage.inner.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F250D08();
  sub_23F1328E8(v0, v1);
}

void AnySessionMessage.sessionId.getter()
{
  sub_23F250CE8();
  sub_23F250CAC();
  sub_23F12612C();
}

void AnySessionMessage.clientRequestId.getter()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  sub_23F12545C(v0, v0[3]);
  v1 = sub_23F131BE8();
  v2(v1);
  sub_23F12612C();
}

void AnySessionMessage.payload.getter()
{
  sub_23F250CE8();
  sub_23F250CAC();
  sub_23F12612C();
}

uint64_t AnySessionMessage.init<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;

  sub_23F180250();
  v4[3] = v2;
  v4[4] = v3;
  v5 = sub_23F1BE128(v4);
  return sub_23F126180((uint64_t)v5, v1, v0, *(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 32));
}

uint64_t SessionClientMessage.sessionId.getter()
{
  return sub_23F1EF104();
}

void SessionClientMessage.clientRequestId.getter()
{
  sub_23F1B7BE8(type metadata accessor for SessionClientMessage);
}

void SessionClientMessage.payload.getter()
{
  sub_23F1D2490();
}

uint64_t sub_23F1AE970(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F1AEAEC(char a1)
{
  if (!a1)
    return 0x496E6F6973736573;
  if (a1 == 1)
    return 0x6552746E65696C63;
  return 0x64616F6C796170;
}

uint64_t sub_23F1AEB54()
{
  char *v0;

  return sub_23F1AEAEC(*v0);
}

uint64_t sub_23F1AEB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1AE970(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1AEB80()
{
  sub_23F1BE164();
  return sub_23F2688B8();
}

uint64_t sub_23F1AEBA8()
{
  sub_23F1BE164();
  return sub_23F2688C4();
}

void SessionClientMessage.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E03218);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F1BE164();
  sub_23F18A998();
  v5[15] = 0;
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&qword_256DFEF10);
  sub_23F126188();
  if (!v0)
  {
    type metadata accessor for SessionClientMessage(0);
    sub_23F24F18C();
    v5[13] = 2;
    sub_23F18C5EC();
    sub_23F12E488((uint64_t)&unk_256E03228);
    sub_23F17F99C();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void SessionClientMessage.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F131874();
  v4 = v3;
  v17[0] = v5;
  v17[1] = sub_23F18C5EC();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  v18 = (uint64_t)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23F131B8C();
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F1A982C(v9, v17[0]);
  v19 = sub_23F1217E8(&qword_256E03230);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F17FFA8();
  v12 = type metadata accessor for SessionClientMessage(v11);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F24ED3C(v4);
  sub_23F1BE164();
  v21 = v2;
  sub_23F18037C();
  if (v0)
  {
    sub_23F250744();
  }
  else
  {
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F17FE68();
    sub_23F2500E8();
    v14 = sub_23F24FBE0();
    v15 = (uint64_t *)(v1 + *(int *)(v12 + 20));
    *v15 = v14;
    v15[1] = v16;
    sub_23F180274();
    sub_23F12E488((uint64_t)&unk_256E03238);
    sub_23F17FE48();
    sub_23F24F900(v21, MEMORY[8]);
    sub_23F1BE0F4(v18, v1 + *(int *)(v12 + 24), type metadata accessor for MessagePayload);
    sub_23F24F0B8(v1, v17[0]);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
    sub_23F24F1B8(v1);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1AEF70()
{
  SessionClientMessage.init(from:)();
}

void sub_23F1AEF84()
{
  SessionClientMessage.encode(to:)();
}

uint64_t SessionServerMessage.sessionId.getter()
{
  return sub_23F1EF104();
}

uint64_t SessionServerMessage.eventId.getter()
{
  return sub_23F1B01AC(type metadata accessor for SessionServerMessage);
}

void SessionServerMessage.queryEventId.getter()
{
  sub_23F1D2490();
}

void SessionServerMessage.clientRequestId.getter()
{
  sub_23F16EB68(type metadata accessor for SessionServerMessage);
}

void SessionServerMessage.payload.getter()
{
  sub_23F1AF008();
}

void sub_23F1AF008()
{
  uint64_t v0;

  v0 = sub_23F24FB34();
  sub_23F2511A8(*(int *)(v0 + 32));
  sub_23F12612C();
}

void SessionServerMessage.clientSessionId.getter()
{
  type metadata accessor for SessionServerMessage(0);
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

uint64_t SessionServerMessage.timestamp.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = sub_23F1A9744();
  type metadata accessor for SessionServerMessage(v0);
  sub_23F25097C();
  v1 = sub_23F1317E0();
  return sub_23F126180(v1, v2, v3, v4);
}

uint64_t SessionServerMessage.init(sessionId:eventId:queryEventId:clientRequestId:clientSessionId:timestamp:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  int *v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;

  sub_23F1314D0();
  v41 = v29;
  v42 = v30;
  v32 = v31;
  sub_23F24FB84();
  v33 = sub_23F131B8C();
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32);
  v34(v28, v27, v33);
  v35 = (int *)type metadata accessor for SessionServerMessage(0);
  v34(v28 + v35[5], v26, v33);
  sub_23F17537C(v25, v28 + v35[6], &qword_256DFEB98);
  sub_23F1BE0F4(a23, v28 + v35[8], type metadata accessor for MessagePayload);
  v36 = (_QWORD *)(v28 + v35[7]);
  *v36 = v24;
  v36[1] = v23;
  v37 = (_QWORD *)(v28 + v35[9]);
  *v37 = v32;
  v37[1] = v41;
  v38 = v28 + v35[10];
  v39 = sub_23F25097C();
  return sub_23F17F90C(v38, v42, v39, *(uint64_t (**)(void))(*(_QWORD *)(v39 - 8) + 32));
}

uint64_t SessionServerMessage.init(sessionId:eventId:clientRequestId:clientSessionId:timestamp:payload:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, int *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  sub_23F1314D0();
  v19 = v6;
  v8 = v7;
  sub_23F24FB84();
  sub_23F131B8C();
  sub_23F2512AC();
  v10 = *(void (**)(uint64_t, int *, uint64_t))(v9 + 32);
  v10(v4, v3, v5);
  v11 = type metadata accessor for SessionServerMessage(0);
  v12 = sub_23F25112C(v11);
  ((void (*)(uint64_t))v10)(v12);
  v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v4 + v3[6], 1, 1, v5);
  sub_23F252370(v13, v4 + v3[8], type metadata accessor for MessagePayload);
  v14 = (_QWORD *)(v4 + v3[7]);
  *v14 = v2;
  v14[1] = v1;
  v15 = (_QWORD *)(v4 + v3[9]);
  *v15 = v0;
  v15[1] = v8;
  v16 = v4 + v3[10];
  v17 = sub_23F25097C();
  return sub_23F17F90C(v16, v19, v17, *(uint64_t (**)(void))(*(_QWORD *)(v17 - 8) + 32));
}

void SessionServerMessage.init(sessionId:clientRequestId:clientSessionId:timestamp:payload:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  int *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;

  sub_23F125F3C();
  v9 = v8;
  v20 = v10;
  sub_23F250B58();
  v11 = sub_23F131B8C();
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F1319B0();
  sub_23F2506C8(v3, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  sub_23F267D78();
  v13 = sub_23F2504D8();
  v14(v13);
  v15 = (int *)type metadata accessor for SessionServerMessage(0);
  sub_23F2506C8(v3 + v15[5], v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v3 + v15[6], 1, 1, v11);
  sub_23F1BE0F4(v9, v3 + v15[8], type metadata accessor for MessagePayload);
  v16 = (_QWORD *)(v3 + v15[7]);
  *v16 = v5;
  v16[1] = v4;
  v17 = (_QWORD *)(v3 + v15[9]);
  *v17 = v2;
  v17[1] = v1;
  sub_23F25097C();
  v18 = sub_23F25239C();
  v19(v18, v20);
  sub_23F125EFC();
}

uint64_t sub_23F1AF328(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6449746E657665 && a2 == 0xE700000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6576457972657571 && a2 == 0xEC0000006449746ELL;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x64616F6C796170 && a2 == 0xE700000000000000;
          if (v9 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x6553746E65696C63 && a2 == 0xEF64496E6F697373;
            if (v10 || (sub_23F268798() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = sub_23F268798();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_23F1AF664(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1AF69C + 4 * byte_23F278C40[a1]))(0x496E6F6973736573, 0xE900000000000064);
}

uint64_t sub_23F1AF69C()
{
  return 0x6449746E657665;
}

uint64_t sub_23F1AF70C()
{
  return 0x6553746E65696C63;
}

uint64_t sub_23F1AF730()
{
  return 0x6D617473656D6974;
}

uint64_t sub_23F1AF748()
{
  unsigned __int8 *v0;

  return sub_23F1AF664(*v0);
}

uint64_t sub_23F1AF750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1AF328(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1AF774()
{
  sub_23F1BE1E8();
  return sub_23F2688B8();
}

uint64_t sub_23F1AF79C()
{
  sub_23F1BE1E8();
  return sub_23F2688C4();
}

void SessionServerMessage.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  sub_23F131874();
  a26 = v29;
  a27 = v30;
  sub_23F1A9A7C();
  sub_23F1217E8(&qword_256E03240);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1BE1E8();
  sub_23F18A998();
  a17 = 0;
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&qword_256DFEF10);
  sub_23F1315CC();
  if (!v27)
  {
    type metadata accessor for SessionServerMessage(0);
    a16 = 1;
    sub_23F1315CC();
    a15 = 2;
    sub_23F15E5FC();
    a14 = 3;
    sub_23F131644();
    a13 = 4;
    sub_23F18C5EC();
    sub_23F12E488((uint64_t)&unk_256E03228);
    sub_23F1315CC();
    sub_23F251B7C();
    sub_23F131644();
    a11 = 6;
    sub_23F267D24();
    sub_23F12E488((uint64_t)&unk_256E03250);
    sub_23F1315CC();
  }
  sub_23F126038((uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void SessionServerMessage.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F131874();
  v4 = v3;
  v30 = v5;
  v29 = *(_QWORD *)(sub_23F267D24() - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F16BC34(v7, v26);
  sub_23F18C5EC();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F16BBFC(v9, v27);
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F1A9480();
  sub_23F267D84();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F24F254();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F1217E8(&qword_256E03258);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F15E9EC();
  v32 = (int *)type metadata accessor for SessionServerMessage(v14);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F24F044(v16, v28);
  v17 = *(_QWORD *)(v4 + 24);
  v18 = (_QWORD *)sub_23F250FE4();
  sub_23F12545C(v18, v17);
  sub_23F1BE1E8();
  sub_23F251E18();
  sub_23F1A9814();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v33);
  }
  else
  {
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F251A88();
    sub_23F1A97E4();
    sub_23F25212C(v34);
    sub_23F251324();
    sub_23F251A88();
    sub_23F24FDC8();
    sub_23F25212C(v34 + v32[5]);
    sub_23F2512E4();
    sub_23F268678();
    sub_23F17537C(v2, v34 + v32[6], &qword_256DFEB98);
    v19 = sub_23F250B24();
    v20 = (uint64_t *)(v34 + v32[7]);
    *v20 = v19;
    v20[1] = v21;
    sub_23F12E488((uint64_t)&unk_256E03238);
    v22 = sub_23F24FDC8();
    sub_23F251CA8(v22, v34 + v32[8], type metadata accessor for MessagePayload);
    sub_23F251B7C();
    v23 = sub_23F250B24();
    v24 = (uint64_t *)(v34 + v32[9]);
    *v24 = v23;
    v24[1] = v25;
    sub_23F12E488((uint64_t)&unk_256E03260);
    sub_23F24FDC8();
    sub_23F24FDBC(*(uint64_t (**)(_QWORD, _QWORD))(v1 + 8));
    sub_23F14EF80(v34 + v32[10], v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32));
    sub_23F2507E4(v34, v30);
    sub_23F250388();
    sub_23F24F0CC(v34);
  }
  sub_23F15E830();
  sub_23F1313FC();
}

void sub_23F1AFF24()
{
  SessionServerMessage.init(from:)();
}

#error "23F1AFF40: call analysis failed (funcsize=5)"

uint64_t sub_23F1AFF5C()
{
  sub_23F1BE224();
  return sub_23F2688B8();
}

uint64_t sub_23F1AFF84()
{
  sub_23F1BE224();
  return sub_23F2688C4();
}

void MessagePayload.Terminate.encode(to:)()
{
  sub_23F1D62E0();
}

void MessagePayload.Terminate.init(from:)(uint64_t a1)
{
  sub_23F24F884(a1);
  sub_23F24FF94();
}

void sub_23F1AFFF0(uint64_t a1)
{
  MessagePayload.RequestContent.StopContent.init(from:)(a1);
}

void sub_23F1B0004()
{
  MessagePayload.Terminate.encode(to:)();
}

uint64_t sub_23F1B0020()
{
  sub_23F1BE260();
  return sub_23F2688B8();
}

uint64_t sub_23F1B0048()
{
  sub_23F1BE260();
  return sub_23F2688C4();
}

void MessagePayload.EndOfPlan.encode(to:)()
{
  sub_23F1D62E0();
}

void MessagePayload.EndOfPlan.init(from:)(uint64_t a1)
{
  sub_23F24F884(a1);
  sub_23F24FF94();
}

void sub_23F1B00B4()
{
  MessagePayload.EndOfPlan.encode(to:)();
}

uint64_t sub_23F1B00D0()
{
  sub_23F1BE29C();
  return sub_23F2688B8();
}

uint64_t sub_23F1B00F8()
{
  sub_23F1BE29C();
  return sub_23F2688C4();
}

void MessagePayload.SessionSuspended.encode(to:)()
{
  sub_23F1D62E0();
}

void MessagePayload.SessionSuspended.init(from:)(uint64_t a1)
{
  sub_23F24F884(a1);
  sub_23F24FF94();
}

void sub_23F1B0164()
{
  MessagePayload.SessionSuspended.encode(to:)();
}

void MessagePayload.StepExecutedWithReturnedValue.outputVariableName.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

uint64_t MessagePayload.StepExecutedWithReturnedValue.value.getter()
{
  return sub_23F1B01AC(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue);
}

uint64_t sub_23F1B01AC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F24F3E8(a1);
  sub_23F2503D4();
  v1 = sub_23F24F288();
  return sub_23F24EEBC(v1, v2, v3, v4);
}

uint64_t MessagePayload.StepExecutedWithReturnedValue.init(outputVariableName:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_23F1E9208(a1, a2, (void (*)(_QWORD))type metadata accessor for MessagePayload.StepExecutedWithReturnedValue, a3);
}

void static MessagePayload.StepExecutedWithReturnedValue.== infix(_:_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  sub_23F180250();
  v3 = *(_QWORD *)(v2 + 8);
  v4 = v0[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *v1 == *v0 && v3 == v4;
      if (v5 || (sub_23F126148() & 1) != 0)
        goto LABEL_8;
    }
  }
  else if (!v4)
  {
LABEL_8:
    v6 = type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0);
    sub_23F24FD00(v6);
    _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
    return;
  }
  sub_23F126078();
}

uint64_t sub_23F1B0250(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000012 && a2 == 0x800000023F2943E0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1B0330(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 0xD000000000000012;
}

uint64_t sub_23F1B0368()
{
  char *v0;

  return sub_23F1B0330(*v0);
}

uint64_t sub_23F1B0370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B0250(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1B0394()
{
  sub_23F1BE2EC();
  return sub_23F2688B8();
}

uint64_t sub_23F1B03BC()
{
  sub_23F1BE2EC();
  return sub_23F2688C4();
}

void MessagePayload.StepExecutedWithReturnedValue.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E03298);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F1BE2EC();
  sub_23F18A998();
  v5[15] = 0;
  sub_23F2512F4();
  if (!v0)
  {
    type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0);
    v5[14] = 1;
    sub_23F125F84();
    sub_23F12E488((uint64_t)&qword_256DFE598);
    sub_23F17F99C();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void MessagePayload.StepExecutedWithReturnedValue.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F131874();
  v5 = v4;
  v15 = v6;
  v17 = *(_QWORD *)(sub_23F125F84() - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F17FBC8(v8, v14);
  sub_23F1217E8(&qword_256E032A8);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F15E9EC();
  v11 = type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(v10);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F15E660();
  sub_23F24F270(v5);
  sub_23F1BE2EC();
  sub_23F2506AC();
  if (v1)
  {
    sub_23F250744();
  }
  else
  {
    *v2 = sub_23F268654();
    v2[1] = v13;
    sub_23F1A9BB8();
    sub_23F12E488((uint64_t)&qword_256DFE5B8);
    sub_23F17FE68();
    sub_23F15E444(v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    sub_23F250DD4((uint64_t)v2 + *(int *)(v11 + 20), v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32));
    sub_23F24F0B8((uint64_t)v2, v15);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v5);
    sub_23F24F1B8((uint64_t)v2);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1B0690()
{
  MessagePayload.StepExecutedWithReturnedValue.init(from:)();
}

void sub_23F1B06A4()
{
  MessagePayload.StepExecutedWithReturnedValue.encode(to:)();
}

id MessagePayload.SessionError.error.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)v1;
  v3 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v3;
  return sub_23F131158(v2);
}

id MessagePayload.SessionError.init(error:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  char v4;
  uint64_t v5;

  v3 = *(void **)a1;
  v4 = *(_BYTE *)(a1 + 8);
  sub_23F1217E8(&qword_256DFE880);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F269B40;
  *(_QWORD *)(v5 + 32) = v3;
  *(_BYTE *)(v5 + 40) = v4;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  return sub_23F131158(v3);
}

void static MessagePayload.SessionError.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  char v4;
  void *v5;
  void *v6;
  char v7;

  sub_23F125F3C();
  v2 = *(id *)v0;
  v3 = *(id *)v1;
  v4 = *(_BYTE *)(v1 + 8);
  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
    sub_23F250B74(*(id *)v0);
    sub_23F131158(v3);
    sub_23F250B74(v2);
    v5 = v2;
  }
  else
  {
    sub_23F131158(*(id *)v1);
    sub_23F250F74(v2);
    v5 = (void *)sub_23F267CA0();
  }
  if ((v4 & 1) != 0)
  {
    sub_23F250B74(v3);
    v6 = v3;
  }
  else
  {
    sub_23F250F74(v3);
    v6 = (void *)sub_23F267CA0();
    sub_23F146BE8(v3);
  }
  sub_23F13111C();
  sub_23F2504D8();
  v7 = sub_23F268444();

  sub_23F131164(v3);
  sub_23F131164(v2);
  if ((v7 & 1) != 0)
  {
    sub_23F131BE8();
    sub_23F12A3E8();
  }
  else
  {
    sub_23F125EFC();
  }
}

uint64_t sub_23F1B0844(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x726F727265 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6863726172656968 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1B0934(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6863726172656968;
  else
    return 0x726F727265;
}

uint64_t sub_23F1B096C()
{
  char *v0;

  return sub_23F1B0934(*v0);
}

uint64_t sub_23F1B0974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B0844(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1B0998()
{
  sub_23F1BE328();
  return sub_23F2688B8();
}

uint64_t sub_23F1B09C0()
{
  sub_23F1BE328();
  return sub_23F2688C4();
}

void MessagePayload.SessionError.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256E032B0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1319C8();
  sub_23F18AA80(v4);
  sub_23F1BE328();
  sub_23F18A998();
  sub_23F1BE364();
  sub_23F24F620();
  if (!v0)
  {
    sub_23F15EC34();
    sub_23F12636C();
    sub_23F24F834((uint64_t)&unk_256E032D0);
    sub_23F18AD50();
    sub_23F1315CC();
  }
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void MessagePayload.SessionError.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  sub_23F131874();
  sub_23F250F24();
  sub_23F1217E8(&qword_256E032D8);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1BE328();
  sub_23F15E564();
  if (v1)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F1BE3A0();
    sub_23F15E79C();
    v12 = v3;
    v7 = v13;
    v8 = v14;
    sub_23F12636C();
    sub_23F15EC34();
    sub_23F2521BC();
    sub_23F24F834((uint64_t)&unk_256E032E8);
    sub_23F15E79C();
    sub_23F15E444((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v9 = v13;
    sub_23F2521BC();
    sub_23F1315C4();
    sub_23F2504E4();
    v10 = v12;
    *v12 = v7;
    *((_BYTE *)v10 + 8) = v8;
    v10[2] = v9;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
    sub_23F2504E4();
    sub_23F1317F8();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1B0C78()
{
  MessagePayload.SessionError.init(from:)();
}

void sub_23F1B0C8C()
{
  MessagePayload.SessionError.encode(to:)();
}

uint64_t (*MessagePayload.PlannerReturnedRawPlan.plan.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePayload.PlannerReturnedRawPlan.appIntentInvocationPreviews.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::MessagePayload::PlannerReturnedRawPlan __swiftcall MessagePayload.PlannerReturnedRawPlan.init(plan:)(Swift::String plan)
{
  Swift::String *v1;
  IntelligenceFlow::MessagePayload::PlannerReturnedRawPlan result;

  *v1 = plan;
  v1[1]._countAndFlagsBits = MEMORY[0x24BEE4AF8];
  result.plan = plan;
  return result;
}

uint64_t static MessagePayload.PlannerReturnedRawPlan.== infix(_:_:)(uint64_t a1)
{
  return sub_23F1C9184(a1);
}

uint64_t sub_23F1B0CE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1851878512 && a2 == 0xE400000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023F294400)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1B0DC0(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD00000000000001BLL;
  else
    return 1851878512;
}

uint64_t sub_23F1B0DF4()
{
  char *v0;

  return sub_23F1B0DC0(*v0);
}

uint64_t sub_23F1B0DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B0CE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1B0E20()
{
  sub_23F1BE3DC();
  return sub_23F2688B8();
}

uint64_t sub_23F1B0E48()
{
  sub_23F1BE3DC();
  return sub_23F2688C4();
}

void MessagePayload.PlannerReturnedRawPlan.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F131874();
  sub_23F250B2C();
  v8 = *(_QWORD *)(sub_23F1217E8(&qword_256E032F0) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v0 + 16);
  sub_23F24EE44(v2);
  sub_23F1BE3DC();
  sub_23F18ABDC();
  sub_23F131644();
  if (!v1)
  {
    v9 = v7;
    sub_23F1A9BB8();
    sub_23F12636C();
    sub_23F24F834((uint64_t)&unk_256E03308);
    sub_23F1315CC();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void MessagePayload.PlannerReturnedRawPlan.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  sub_23F131874();
  sub_23F250F24();
  sub_23F1217E8(&qword_256E03318);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1BE3DC();
  sub_23F15E564();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F24EF34();
    sub_23F251464();
    v10[0] = v4;
    sub_23F12636C();
    sub_23F1A9BB8();
    sub_23F24F834((uint64_t)&unk_256E03320);
    sub_23F24F52C();
    sub_23F15E79C();
    sub_23F15E444((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v8 = v10[0];
    v9 = v10[1];
    *(_QWORD *)v10[0] = v3;
    *(_QWORD *)(v8 + 8) = v2;
    *(_QWORD *)(v8 + 16) = v9;
    sub_23F1315C4();
    sub_23F24EE8C();
    sub_23F131790();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1B10C4()
{
  MessagePayload.PlannerReturnedRawPlan.init(from:)();
}

void sub_23F1B10D8()
{
  MessagePayload.PlannerReturnedRawPlan.encode(to:)();
}

uint64_t (*MessagePayload.Request.content.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.Request.variables.getter()
{
  type metadata accessor for MessagePayload.Request(0);
  return swift_bridgeObjectRetain();
}

void MessagePayload.Request.variables.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_23F251630() + 20);
  sub_23F1A98B8();
  *(_QWORD *)(v1 + v3) = a1;
  sub_23F12612C();
}

uint64_t (*MessagePayload.Request.variables.modify())()
{
  type metadata accessor for MessagePayload.Request(0);
  sub_23F180384();
  return nullsub_1;
}

uint64_t MessagePayload.Request.safetyMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MessagePayload.Request(0) + 24));
}

void MessagePayload.Request.safetyMode.setter(uint64_t a1)
{
  sub_23F1DFB5C(a1, type metadata accessor for MessagePayload.Request);
}

uint64_t (*MessagePayload.Request.safetyMode.modify())()
{
  type metadata accessor for MessagePayload.Request(0);
  sub_23F18030C();
  return nullsub_1;
}

uint64_t MessagePayload.Request.prescribedPlan.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;

  v0 = sub_23F2521A8();
  v1 = sub_23F251174(*(int *)(v0 + 28));
  return sub_23F1BE4B8(v1, v2, v3);
}

void MessagePayload.Request.prescribedPlan.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = v1 + *(int *)(type metadata accessor for MessagePayload.Request(0) + 28);
  sub_23F1BE4CC(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 16) = v4;
  sub_23F12612C();
}

uint64_t (*MessagePayload.Request.prescribedPlan.modify())()
{
  type metadata accessor for MessagePayload.Request(0);
  sub_23F1A9AFC();
  return nullsub_1;
}

void MessagePayload.Request.rewriteMetadataEventID.getter()
{
  sub_23F1AF008();
}

void MessagePayload.Request.rewriteMetadataEventID.setter(uint64_t a1)
{
  uint64_t v2;

  type metadata accessor for MessagePayload.Request(0);
  sub_23F2503E0();
  sub_23F1F86F4(a1, v2, &qword_256DFEB98);
  sub_23F126078();
}

uint64_t (*MessagePayload.Request.rewriteMetadataEventID.modify())()
{
  type metadata accessor for MessagePayload.Request(0);
  sub_23F2503E0();
  return nullsub_1;
}

void MessagePayload.Request.rewriteMetadataInlined.getter()
{
  uint64_t v0;

  v0 = sub_23F2521A8();
  sub_23F2506E8(*(int *)(v0 + 36));
  sub_23F126078();
}

void MessagePayload.Request.rewriteMetadataInlined.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;

  v0 = sub_23F250678();
  v1 = type metadata accessor for MessagePayload.Request(v0);
  v2 = sub_23F251154(*(int *)(v1 + 36));
  sub_23F250EEC(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_23F1A9BE8();
}

uint64_t (*MessagePayload.Request.rewriteMetadataInlined.modify())()
{
  type metadata accessor for MessagePayload.Request(0);
  sub_23F25118C();
  return nullsub_1;
}

__n128 MessagePayload.Request.init(content:variables:safetyMode:prescribedPlan:rewriteMetadataEventID:rewriteMetadataInlined:)@<Q0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t *a3@<X3>, uint64_t a4@<X4>, __int128 *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  __n128 result;
  char v22;
  uint64_t v25;
  __int128 v26;

  v8 = *a3;
  v9 = a3[1];
  v22 = *((_BYTE *)a3 + 16);
  v26 = *a5;
  v25 = *((_QWORD *)a5 + 2);
  v10 = (int *)sub_23F251630();
  v11 = v10[5];
  v12 = a6 + v10[7];
  v13 = a6 + v10[8];
  v14 = sub_23F131B8C();
  sub_23F126158(v13, v15, v16, v14);
  v17 = (uint64_t *)(a6 + v10[9]);
  *v17 = 0;
  v17[1] = 0;
  v17[2] = 0;
  v18 = sub_23F250180();
  sub_23F1BE0F4(v18, v19, v20);
  *(_QWORD *)(a6 + v11) = a1;
  *(_BYTE *)(a6 + v10[6]) = a2;
  *(_QWORD *)v12 = v8;
  *(_QWORD *)(v12 + 8) = v9;
  *(_BYTE *)(v12 + 16) = v22;
  sub_23F1F86F4(a4, v13, &qword_256DFEB98);
  sub_23F1F55A0(*v17, v17[1]);
  *(_OWORD *)v17 = v26;
  v17[2] = v25;
  sub_23F250234();
  return result;
}

void static MessagePayload.Request.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  void (*v73)(uint64_t);
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t *v80;
  uint64_t v81;
  char *v82;
  _QWORD v83[2];
  char v84;
  _QWORD v85[2];
  char v86;

  sub_23F125F3C();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F131B8C();
  sub_23F126048();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15E50C();
  v11 = sub_23F1217E8(&qword_256E01490);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23F251AB8();
  if ((static MessagePayload.RequestContent.== infix(_:_:)(v18, v6, v19, v20, v21, v22, v23, v24, v77, v78, (uint64_t)v79, (uint64_t)v80) & 1) == 0)goto LABEL_37;
  v81 = v2;
  v82 = v14;
  v25 = (int *)type metadata accessor for MessagePayload.Request(0);
  v26 = v25[5];
  v27 = *(_QWORD *)(v6 + v26);
  if (*(_QWORD *)(v8 + v26))
  {
    if (!v27)
      goto LABEL_37;
    v79 = (int *)v4;
    v80 = (uint64_t *)v9;
    v28 = v3;
    v29 = v8;
    v30 = v6;
    v31 = v1;
    v32 = v0;
    v33 = v25;
    sub_23F13184C();
    sub_23F1315C4();
    sub_23F121D9C();
    v35 = v34;
    sub_23F1317F8();
    sub_23F131930();
    v25 = v33;
    v0 = v32;
    v1 = v31;
    v6 = v30;
    v8 = v29;
    v3 = v28;
    v4 = (uint64_t)v79;
    if ((v35 & 1) == 0)
      goto LABEL_37;
  }
  else
  {
    v80 = (uint64_t *)v9;
    if (v27)
      goto LABEL_37;
  }
  if (*(unsigned __int8 *)(v8 + v25[6]) != *(unsigned __int8 *)(v6 + v25[6]))
    goto LABEL_37;
  v36 = v25[7];
  v38 = *(_QWORD *)(v8 + v36);
  v37 = *(_QWORD *)(v8 + v36 + 8);
  v39 = *(unsigned __int8 *)(v8 + v36 + 16);
  v40 = v6 + v36;
  v42 = *(_QWORD *)v40;
  v41 = *(_QWORD *)(v40 + 8);
  v43 = *(unsigned __int8 *)(v40 + 16);
  if (v39 > 0xFD)
  {
    if (v43 > 0xFD)
      goto LABEL_15;
LABEL_13:
    v47 = v41;
    v48 = v43;
    v49 = v42;
    sub_23F1BE4B8(v42, v41, v43);
    sub_23F25106C();
    sub_23F1BE4CC(v49, v47, v48);
    goto LABEL_37;
  }
  v85[0] = v38;
  v85[1] = v37;
  v86 = v39;
  if (v43 > 0xFD)
  {
    v44 = v41;
    v45 = v43;
    v46 = v42;
    sub_23F1BE4B8(v38, v37, v39);
    sub_23F25105C();
    sub_23F25104C();
    v42 = v46;
    v41 = v44;
    LOBYTE(v43) = v45;
    goto LABEL_13;
  }
  v83[0] = v42;
  v83[1] = v41;
  v84 = v43;
  v79 = v25;
  sub_23F1BE4B8(v38, v37, v39);
  sub_23F25105C();
  LODWORD(v78) = static MessagePayload.RequestPrescribedPlan.== infix(_:_:)((uint64_t)v85, (uint64_t)v83, v50, v51, v52, v53, v54, v55, v77, v78);
  sub_23F25104C();
  sub_23F25106C();
  v25 = v79;
  if ((v78 & 1) == 0)
    goto LABEL_37;
LABEL_15:
  v78 = v0;
  v56 = (uint64_t)v25;
  v57 = (uint64_t)&qword_256DFEB98;
  sub_23F2511C8(v8 + v25[8], v3);
  v79 = (int *)v56;
  sub_23F2511C8(v6 + *(int *)(v56 + 32), v4);
  v58 = (uint64_t)v82;
  v59 = (uint64_t)&v82[*(int *)(v11 + 48)];
  v60 = sub_23F25082C();
  sub_23F2511C8(v60, v61);
  v62 = sub_23F251120();
  sub_23F2511C8(v62, v63);
  v64 = v80;
  sub_23F1263A4(v58, 1, (uint64_t)v80);
  if (v68)
  {
    sub_23F2515C8(v4);
    sub_23F2515C8(v3);
    sub_23F1263A4(v59, 1, (uint64_t)v64);
    if (v68)
    {
      sub_23F125E40(v58, &qword_256DFEB98);
      goto LABEL_25;
    }
LABEL_23:
    sub_23F125E40(v58, &qword_256E01490);
    goto LABEL_37;
  }
  v65 = sub_23F250390();
  sub_23F1752C4(v65, v66, v67);
  sub_23F1263A4(v59, 1, (uint64_t)v64);
  if (v68)
  {
    sub_23F1A9648(v4);
    sub_23F1A9648(v3);
    (*(void (**)(uint64_t, uint64_t *))(v81 + 8))(v1, v64);
    goto LABEL_23;
  }
  v69 = sub_23F25229C();
  sub_23F1802E8(v69, v70, v71);
  sub_23F12E488((uint64_t)&qword_256DFEAF8);
  sub_23F126358();
  v57 = sub_23F268138();
  v72 = v58;
  v73 = *(void (**)(uint64_t))(v81 + 8);
  v74 = sub_23F15EB40();
  v73(v74);
  v56 = (uint64_t)v64;
  v64 = &qword_256DFEB98;
  sub_23F250DDC(v4);
  sub_23F250DDC(v3);
  v75 = sub_23F126358();
  v73(v75);
  sub_23F250DDC(v72);
  if ((v57 & 1) == 0)
    goto LABEL_37;
LABEL_25:
  sub_23F250A24();
  if (!v57)
  {
    if (!v1)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (!v1)
  {
    sub_23F24F07C();
LABEL_36:
    sub_23F24FCE0();
    sub_23F24FCB0();
    sub_23F24FCF0();
    goto LABEL_37;
  }
  v76 = v64 == (uint64_t *)v56 && v57 == v1;
  if (v76 || (sub_23F126148() & 1) != 0)
  {
    sub_23F2505CC();
    sub_23F24F07C();
    sub_23F131A30();
    sub_23F1317F8();
  }
  else
  {
    sub_23F24F07C();
    sub_23F131A30();
    sub_23F1317F8();
  }
LABEL_37:
  sub_23F125EFC();
}

uint64_t static MessagePayload.RequestContent.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23F125F3C();
  type metadata accessor for SystemPromptResolution(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F250D68();
  type metadata accessor for MessagePayload.RequestContent(v13);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F24F254();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F24F0A4();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F1217E8(&qword_256E03330);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F25086C();
  sub_23F251088();
  v18 = sub_23F126358();
  sub_23F1BE1A0(v18, v19, type metadata accessor for MessagePayload.RequestContent);
  sub_23F131BE8();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_23F1B1974 + 4 * byte_23F278C47[EnumCaseMultiPayload]))(EnumCaseMultiPayload, v21, v22, v23, v24, v25, v26, v27, a9, a10, a11, a12);
}

void sub_23F1B1974()
{
  uint64_t v0;

  v0 = sub_23F250588();
  if ((_DWORD)v0)
    sub_23F24F5EC(v0, &qword_256E03330);
  else
    sub_23F24F318(v0, type metadata accessor for MessagePayload.RequestContent);
  sub_23F125EFC();
}

uint64_t sub_23F1B1AC4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656C626169726176 && a2 == 0xE900000000000073;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6F4D797465666173 && a2 == 0xEA00000000006564;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6269726373657270 && a2 == 0xEE006E616C506465;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000016 && a2 == 0x800000023F294420 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000016 && a2 == 0x800000023F294440)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v9 = sub_23F268798();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 5;
          else
            return 6;
        }
      }
    }
  }
}

uint64_t sub_23F1B1D68(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1B1D9C + 4 * byte_23F278C4B[a1]))(0x746E65746E6F63, 0xE700000000000000);
}

uint64_t sub_23F1B1D9C()
{
  return 0x656C626169726176;
}

uint64_t sub_23F1B1DB8()
{
  return 0x6F4D797465666173;
}

uint64_t sub_23F1B1DD4()
{
  return 0x6269726373657270;
}

unint64_t sub_23F1B1DF8()
{
  return 0xD000000000000016;
}

uint64_t sub_23F1B1E20()
{
  unsigned __int8 *v0;

  return sub_23F1B1D68(*v0);
}

uint64_t sub_23F1B1E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B1AC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1B1E4C()
{
  sub_23F1C3CAC();
  return sub_23F2688B8();
}

uint64_t sub_23F1B1E74()
{
  sub_23F1C3CAC();
  return sub_23F2688C4();
}

void MessagePayload.Request.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  __int128 *v7;
  char v8;
  __int128 *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  sub_23F1A9358();
  sub_23F1A9A7C();
  sub_23F1217E8(&qword_256E03338);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1C3CAC();
  sub_23F18A998();
  LOBYTE(v11) = 0;
  type metadata accessor for MessagePayload.RequestContent(0);
  sub_23F12E488((uint64_t)&unk_256E03348);
  sub_23F1315CC();
  if (!v0)
  {
    v6 = (int *)type metadata accessor for MessagePayload.Request(0);
    *(_QWORD *)&v11 = *(_QWORD *)(v1 + v6[5]);
    sub_23F15EC34();
    sub_23F1217E8(&qword_256DFE588);
    sub_23F250E30();
    sub_23F18AD50();
    sub_23F15E5FC();
    sub_23F180268();
    sub_23F252068();
    v7 = (__int128 *)(v1 + v6[7]);
    v8 = *((_BYTE *)v7 + 16);
    v11 = *v7;
    LOBYTE(v12) = v8;
    sub_23F250B18();
    sub_23F1C3CE8();
    sub_23F15E5FC();
    LOBYTE(v11) = 4;
    sub_23F131B8C();
    sub_23F12E488((uint64_t)&qword_256DFEF10);
    sub_23F15E5FC();
    v9 = (__int128 *)(v1 + v6[9]);
    v10 = *((_QWORD *)v9 + 2);
    v11 = *v9;
    v12 = v10;
    sub_23F251B40();
    sub_23F1C3D24();
    sub_23F15E5FC();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F25102C();
  sub_23F18AB98();
}

void MessagePayload.Request.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  sub_23F131874();
  v5 = v4;
  v32 = v6;
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  v33 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23F251E8C();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F16BC18(v10, v32);
  v36 = sub_23F1217E8(&qword_256E03360);
  sub_23F126210();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F125FBC();
  v13 = type metadata accessor for MessagePayload.Request(v12);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F1319C8();
  v40 = v15[5];
  *(_QWORD *)(v1 + v40) = 0;
  v16 = v1 + v15[7];
  *(_QWORD *)v16 = 0;
  *(_QWORD *)(v16 + 8) = 0;
  *(_BYTE *)(v16 + 16) = -2;
  v17 = v1 + v15[8];
  v18 = sub_23F131B8C();
  v38 = v17;
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v17, 1, 1, v18);
  sub_23F2506BC(*(int *)(v13 + 36));
  v37 = v19;
  *(_QWORD *)(v19 + 16) = 0;
  v20 = v5[3];
  v39 = v5;
  sub_23F12545C(v5, v20);
  sub_23F1C3CAC();
  v35 = v2;
  sub_23F2509F4();
  sub_23F250614();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v39);
    swift_bridgeObjectRelease();
    v21 = sub_23F1BE4CC(*(_QWORD *)v16, *(_QWORD *)(v16 + 8), *(_BYTE *)(v16 + 16));
    sub_23F2522A8(v21, &qword_256DFEB98);
    sub_23F2517E8();
  }
  else
  {
    *(_QWORD *)&v41 = v3;
    LOBYTE(v42) = 0;
    sub_23F12E488((uint64_t)&unk_256E03368);
    sub_23F25207C();
    sub_23F17FE68();
    v22 = sub_23F15EB40();
    sub_23F1BE0F4(v22, v23, v24);
    sub_23F1217E8(&qword_256DFE588);
    sub_23F251670();
    sub_23F15EC34();
    sub_23F1255A4();
    sub_23F24F908();
    *(_QWORD *)(v1 + v40) = v42;
    sub_23F251F10();
    v25 = sub_23F268690();
    v26 = v41;
    *(_BYTE *)(v1 + *(int *)(v13 + 24)) = v25 & 1;
    sub_23F250B18();
    sub_23F1C3D60();
    sub_23F24F908();
    v27 = v43;
    *(_OWORD *)v16 = v42;
    *(_BYTE *)(v16 + 16) = v27;
    LOBYTE(v42) = 4;
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F25207C();
    v28 = (uint64_t)v33;
    sub_23F24F908();
    sub_23F1F86F4(v28, v38, &qword_256DFEB98);
    sub_23F251B40();
    sub_23F1C3D9C();
    v29 = v35;
    sub_23F24F908();
    sub_23F126038(v29, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
    v41 = v42;
    v30 = v43;
    v31 = v37;
    sub_23F2517E8();
    *(_OWORD *)v31 = v41;
    *(_QWORD *)(v31 + 16) = v30;
    sub_23F2507E4(v1, v32);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v39);
    sub_23F24F0CC(v1);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1B24A0()
{
  MessagePayload.Request.init(from:)();
}

void sub_23F1B24B4()
{
  MessagePayload.Request.encode(to:)();
}

uint64_t sub_23F1B24D4()
{
  sub_23F1C3DD8();
  return sub_23F2688B8();
}

uint64_t sub_23F1B24FC()
{
  sub_23F1C3DD8();
  return sub_23F2688C4();
}

void MessagePayload.RequestContent.StopContent.encode(to:)()
{
  sub_23F1D62E0();
}

void MessagePayload.RequestContent.StopContent.init(from:)(uint64_t a1)
{
  sub_23F24F884(a1);
  sub_23F24FF94();
}

void sub_23F1B2568()
{
  MessagePayload.RequestContent.StopContent.encode(to:)();
}

void MessagePayload.RequestContent.TextContent.text.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*MessagePayload.RequestContent.TextContent.text.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1B25B0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1954047348 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1B2624()
{
  return 1954047348;
}

uint64_t sub_23F1B2638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B25B0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1B2660()
{
  sub_23F1C3E14();
  return sub_23F2688B8();
}

uint64_t sub_23F1B2688()
{
  sub_23F1C3E14();
  return sub_23F2688C4();
}

void MessagePayload.RequestContent.TextContent.encode(to:)()
{
  sub_23F1EBEC8();
}

void MessagePayload.RequestContent.TextContent.init(from:)()
{
  sub_23F1EBFA0();
}

void sub_23F1B2710()
{
  MessagePayload.RequestContent.TextContent.init(from:)();
}

void sub_23F1B2724()
{
  MessagePayload.RequestContent.TextContent.encode(to:)();
}

uint64_t sub_23F1B2744()
{
  sub_23F1C3E50();
  return sub_23F2688B8();
}

uint64_t sub_23F1B276C()
{
  sub_23F1C3E50();
  return sub_23F2688C4();
}

void MessagePayload.RequestContent.SpeechContent.Candidate.encode(to:)()
{
  sub_23F1EBEC8();
}

void MessagePayload.RequestContent.SpeechContent.Candidate.init(from:)()
{
  sub_23F1EBFA0();
}

void sub_23F1B27F4()
{
  MessagePayload.RequestContent.SpeechContent.Candidate.init(from:)();
}

void sub_23F1B2808()
{
  MessagePayload.RequestContent.SpeechContent.Candidate.encode(to:)();
}

void MessagePayload.RequestContent.SpeechContent.candidates.setter()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F15ECF0();
  *v1 = v0;
  sub_23F126078();
}

uint64_t (*MessagePayload.RequestContent.SpeechContent.candidates.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::MessagePayload::RequestContent::SpeechContent __swiftcall MessagePayload.RequestContent.SpeechContent.init(candidates:)(IntelligenceFlow::MessagePayload::RequestContent::SpeechContent candidates)
{
  IntelligenceFlow::MessagePayload::RequestContent::SpeechContent *v1;

  v1->candidates._rawValue = candidates.candidates._rawValue;
  return candidates;
}

uint64_t static MessagePayload.RequestContent.SpeechContent.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_23F1298DC(*a1, *a2);
}

uint64_t sub_23F1B2860(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x74616469646E6163 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1B28F0()
{
  return 0x74616469646E6163;
}

uint64_t sub_23F1B2910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B2860(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1B2938()
{
  sub_23F1C3E8C();
  return sub_23F2688B8();
}

uint64_t sub_23F1B2960()
{
  sub_23F1C3E8C();
  return sub_23F2688C4();
}

void MessagePayload.RequestContent.SpeechContent.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F131874();
  v2 = v1;
  sub_23F1217E8(&qword_256E033C0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F18AA80(v2);
  sub_23F1C3E8C();
  sub_23F18A998();
  sub_23F12636C();
  sub_23F24F834((uint64_t)&unk_256E033D8);
  sub_23F2504B4();
  sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void MessagePayload.RequestContent.SpeechContent.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;

  sub_23F131874();
  a19 = v23;
  a20 = v24;
  sub_23F24F910();
  sub_23F1217E8(&qword_256E033E8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1C3E8C();
  sub_23F15E564();
  if (!v21)
  {
    sub_23F12636C();
    sub_23F24F834((uint64_t)&unk_256E033F0);
    sub_23F17FE68();
    sub_23F17FF08((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    sub_23F2523F4();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v20);
  sub_23F1A9634();
  sub_23F1313FC();
}

#error "23F1B2B40: call analysis failed (funcsize=5)"

void sub_23F1B2B4C()
{
  MessagePayload.RequestContent.SpeechContent.encode(to:)();
}

void static SystemPromptResolution.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  char v30;
  __int128 *v31;
  char v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  __int128 v36;
  char v37;

  sub_23F125F3C();
  v6 = v5;
  v8 = v7;
  sub_23F131B8C();
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F126058();
  v10 = sub_23F1217E8(&qword_256E01490);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1319C8();
  sub_23F251E78();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F14EFA0();
  v33 = v13;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F24F0A4();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F24F48C();
  sub_23F24F8D0(v8, v3);
  sub_23F24F8D0(v6, v4);
  v16 = v0 + *(int *)(v10 + 48);
  sub_23F24F8D0(v3, v0);
  sub_23F24F8D0(v4, v16);
  sub_23F1A92D8(v0);
  if (!v18)
  {
    sub_23F1752C4(v0, v33, &qword_256DFEB98);
    sub_23F1A92D8(v16);
    if (!v18)
    {
      sub_23F1263D8(v2, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
      sub_23F12E488((uint64_t)&qword_256DFEAF8);
      v19 = sub_23F2503EC();
      sub_23F250924(v2);
      sub_23F1A973C(v4);
      sub_23F1A973C(v3);
      sub_23F250924(v33);
      sub_23F1A973C(v0);
      if ((v19 & 1) == 0)
        goto LABEL_24;
      goto LABEL_11;
    }
    sub_23F1A9648(v4);
    sub_23F1A9648(v3);
    v17 = sub_23F126138(v33, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
LABEL_9:
    sub_23F1A9640(v17, &qword_256E01490);
    goto LABEL_24;
  }
  sub_23F1A973C(v4);
  sub_23F1A973C(v3);
  v17 = sub_23F1A92D8(v16);
  if (!v18)
    goto LABEL_9;
  sub_23F1A9640(v17, &qword_256DFEB98);
LABEL_11:
  v20 = sub_23F250E10();
  if ((_s16IntelligenceFlow7EventIDV2eeoiySbAC_ACtFZ_0() & 1) == 0)
    goto LABEL_24;
  static SystemPromptResolution.UserAction.== infix(_:_:)();
  if ((v21 & 1) == 0)
    goto LABEL_24;
  sub_23F24F944();
  if (!v18)
    goto LABEL_24;
  sub_23F251514();
  if (!v24)
  {
    if (v22)
      goto LABEL_24;
LABEL_25:
    v29 = *(int *)(v20 + 32);
    v30 = *(_BYTE *)(v8 + v29 + 16);
    v36 = *(_OWORD *)(v8 + v29);
    v37 = v30;
    v31 = (__int128 *)(v6 + v29);
    v32 = *((_BYTE *)v31 + 16);
    v34 = *v31;
    v35 = v32;
    static SystemPromptResolution.ResolutionInput.== infix(_:_:)((uint64_t)&v36, (uint64_t)&v34);
    goto LABEL_24;
  }
  if (v22)
  {
    sub_23F2500AC(v23);
    if (v18 && v25 == v26)
      goto LABEL_25;
    sub_23F126148();
    sub_23F15E5CC();
    if ((v28 & 1) != 0)
      goto LABEL_25;
  }
LABEL_24:
  sub_23F125EFC();
}

uint64_t sub_23F1B2E24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 1886352499 && a2 == 0xE400000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1954047348 && a2 == 0xE400000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x686365657073 && a2 == 0xE600000000000000;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x800000023F294460)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F1B2FB0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1B2FDC + 4 * byte_23F278C51[a1]))(1886352499, 0xE400000000000000);
}

uint64_t sub_23F1B2FDC()
{
  return 1954047348;
}

uint64_t sub_23F1B2FE8()
{
  return 0x686365657073;
}

unint64_t sub_23F1B2FFC()
{
  return 0xD000000000000010;
}

uint64_t sub_23F1B3018()
{
  unsigned __int8 *v0;

  return sub_23F1B2FB0(*v0);
}

uint64_t sub_23F1B3020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B2E24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1B3044()
{
  sub_23F1D46FC();
  return sub_23F2688B8();
}

uint64_t sub_23F1B306C()
{
  sub_23F1D46FC();
  return sub_23F2688C4();
}

uint64_t sub_23F1B3094()
{
  sub_23F1D4738();
  return sub_23F2688B8();
}

uint64_t sub_23F1B30BC()
{
  sub_23F1D4738();
  return sub_23F2688C4();
}

uint64_t sub_23F1B30E4()
{
  sub_23F1D4774();
  return sub_23F2688B8();
}

uint64_t sub_23F1B310C()
{
  sub_23F1D4774();
  return sub_23F2688C4();
}

uint64_t sub_23F1B3134()
{
  sub_23F1D4864();
  return sub_23F2688B8();
}

uint64_t sub_23F1B315C()
{
  sub_23F1D4864();
  return sub_23F2688C4();
}

uint64_t sub_23F1B3184()
{
  sub_23F1D47EC();
  return sub_23F2688B8();
}

uint64_t sub_23F1B31AC()
{
  sub_23F1D47EC();
  return sub_23F2688C4();
}

void MessagePayload.RequestContent.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28[16];

  sub_23F131874();
  sub_23F250DF0();
  v12 = sub_23F1217E8(&qword_256E03400);
  v28[9] = *(_QWORD *)(v12 - 8);
  v28[10] = v12;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  v28[8] = (uint64_t)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[6] = sub_23F250E10();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F24ED20(v16, v28[0]);
  v17 = sub_23F1217E8(&qword_256E03408);
  v28[4] = *(_QWORD *)(v17 - 8);
  v28[5] = v17;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F16BC18(v19, v28[0]);
  v20 = sub_23F1217E8(&qword_256E03410);
  v28[1] = *(_QWORD *)(v20 - 8);
  v28[2] = v20;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F126058();
  v28[0] = *(_QWORD *)(sub_23F1217E8(&qword_256E03418) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_23F1A9864();
  type metadata accessor for MessagePayload.RequestContent(v23);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F1319B0();
  v25 = sub_23F1217E8(&qword_256E03420);
  v28[11] = *(_QWORD *)(v25 - 8);
  v28[12] = v25;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F15E50C();
  sub_23F24EE44(v10);
  sub_23F1D46FC();
  sub_23F2509EC();
  sub_23F1BE1A0(a10, v11, type metadata accessor for MessagePayload.RequestContent);
  v27 = (char *)sub_23F1B337C + 4 * byte_23F278C55[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F1B337C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 96) = 0;
  sub_23F1D4864();
  sub_23F15E6E8();
  sub_23F1D48A0();
  sub_23F24F620();
  sub_23F15E7D4(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 208) + 8));
  sub_23F126038(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8));
  sub_23F24F920();
  sub_23F1313FC();
}

void MessagePayload.RequestContent.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  sub_23F131874();
  sub_23F252208();
  v13 = sub_23F1217E8(&qword_256E03470);
  sub_23F251AAC(v13);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F16BC34(v15, v43);
  sub_23F1217E8(&qword_256E03478);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F24ED84(v17, v44);
  sub_23F1217E8(&qword_256E03480);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F24F598(v19, v45);
  sub_23F1217E8(&qword_256E03488);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F16BC18(v21, v46);
  sub_23F1217E8(&qword_256E03490);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_23F15E9EC();
  v47 = type metadata accessor for MessagePayload.RequestContent(v23);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F24F388();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F1A9470();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F24F0A4();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F251ACC();
  v48 = (uint64_t)v10;
  sub_23F24FC14(v10);
  sub_23F1D46FC();
  sub_23F25049C();
  if (!a10)
  {
    sub_23F2686D8();
    sub_23F251290();
    if (v29)
    {
      v30 = *(unsigned __int8 *)(v12 + 32);
      v31 = sub_23F24F680();
      sub_23F15E2D0(v31, v32, v33, v34, v35, v36);
      v38 = v37;
      v11 = v39;
      sub_23F15EB24();
      if (v38 == (unint64_t)v11 >> 1)
        __asm { BR              X9 }
    }
    sub_23F15EDB8();
    sub_23F131B30();
    sub_23F2508FC();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F24F960();
    *v11 = v47;
    sub_23F268648();
    v40 = sub_23F24ECCC();
    sub_23F24FA28(v40, *MEMORY[0x24BEE26D0]);
    sub_23F250144();
    sub_23F15E96C();
    v41 = sub_23F2511E8();
    v42(v41);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v48);
  sub_23F15EAFC();
  sub_23F1313FC();
}

void sub_23F1B3BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  MessagePayload.RequestContent.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1B3BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  MessagePayload.RequestContent.encode(to:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void MessagePayload.RequestPrescribedPlan.SearchTool.query.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void MessagePayload.RequestPrescribedPlan.SearchTool.query.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*MessagePayload.RequestPrescribedPlan.SearchTool.query.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.RequestPrescribedPlan.SearchTool.isLowConfidenceKnowledge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MessagePayload.RequestPrescribedPlan.SearchTool.isLowConfidenceKnowledge.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.SearchTool.isLowConfidenceKnowledge.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::MessagePayload::RequestPrescribedPlan::SearchTool __swiftcall MessagePayload.RequestPrescribedPlan.SearchTool.init(query:isLowConfidenceKnowledge:)(Swift::String query, Swift::Bool isLowConfidenceKnowledge)
{
  uint64_t v2;
  IntelligenceFlow::MessagePayload::RequestPrescribedPlan::SearchTool result;

  *(Swift::String *)v2 = query;
  *(_BYTE *)(v2 + 16) = isLowConfidenceKnowledge;
  result.query = query;
  result.isLowConfidenceKnowledge = isLowConfidenceKnowledge;
  return result;
}

uint64_t sub_23F1B3C54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023F294480)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1B3D38(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000018;
  else
    return 0x7972657571;
}

uint64_t sub_23F1B3D70()
{
  char *v0;

  return sub_23F1B3D38(*v0);
}

uint64_t sub_23F1B3D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B3C54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1B3D9C()
{
  sub_23F1F3BF8();
  return sub_23F2688B8();
}

uint64_t sub_23F1B3DC4()
{
  sub_23F1F3BF8();
  return sub_23F2688C4();
}

void MessagePayload.RequestPrescribedPlan.SearchTool.encode(to:)()
{
  sub_23F1B4514();
}

void MessagePayload.RequestPrescribedPlan.SearchTool.init(from:)()
{
  sub_23F1B461C();
}

void sub_23F1B3E44()
{
  MessagePayload.RequestPrescribedPlan.SearchTool.init(from:)();
}

void sub_23F1B3E58()
{
  MessagePayload.RequestPrescribedPlan.SearchTool.encode(to:)();
}

uint64_t (*MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool.query.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1B3E84(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7972657571 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1B3F00()
{
  return 0x7972657571;
}

uint64_t sub_23F1B3F18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B3E84(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1B3F40()
{
  sub_23F1F3C34();
  return sub_23F2688B8();
}

uint64_t sub_23F1B3F68()
{
  sub_23F1F3C34();
  return sub_23F2688C4();
}

void MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool.encode(to:)()
{
  sub_23F1EBEC8();
}

void MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool.init(from:)()
{
  sub_23F1EBFA0();
}

void sub_23F1B3FF0()
{
  MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool.init(from:)();
}

void sub_23F1B4004()
{
  MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool.encode(to:)();
}

uint64_t (*MessagePayload.RequestPrescribedPlan.TextTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.TextTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1B403C()
{
  sub_23F1F3C70();
  return sub_23F2688B8();
}

uint64_t sub_23F1B4064()
{
  sub_23F1F3C70();
  return sub_23F2688C4();
}

void MessagePayload.RequestPrescribedPlan.TextTool.encode(to:)()
{
  sub_23F1B4514();
}

void MessagePayload.RequestPrescribedPlan.TextTool.init(from:)()
{
  sub_23F1B461C();
}

void sub_23F1B40E4()
{
  MessagePayload.RequestPrescribedPlan.TextTool.init(from:)();
}

void sub_23F1B40F8()
{
  MessagePayload.RequestPrescribedPlan.TextTool.encode(to:)();
}

uint64_t (*MessagePayload.RequestPrescribedPlan.ConvertTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.ConvertTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1B4130(char a1)
{
  if ((a1 & 1) != 0)
    return 0x63696C7078457369;
  else
    return 0x7972657571;
}

uint64_t sub_23F1B4168()
{
  char *v0;

  return sub_23F1B4130(*v0);
}

void sub_23F1B4170(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F1B43C0(a1, a2);
  *a3 = v4;
}

uint64_t sub_23F1B4194()
{
  sub_23F1F3CAC();
  return sub_23F2688B8();
}

uint64_t sub_23F1B41BC()
{
  sub_23F1F3CAC();
  return sub_23F2688C4();
}

void MessagePayload.RequestPrescribedPlan.ConvertTool.encode(to:)()
{
  sub_23F1B4514();
}

void MessagePayload.RequestPrescribedPlan.ConvertTool.init(from:)()
{
  sub_23F1B461C();
}

void sub_23F1B423C()
{
  MessagePayload.RequestPrescribedPlan.ConvertTool.init(from:)();
}

void sub_23F1B4250()
{
  MessagePayload.RequestPrescribedPlan.ConvertTool.encode(to:)();
}

uint64_t (*MessagePayload.RequestPrescribedPlan.DisplayTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.DisplayTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1B4288()
{
  sub_23F1F3CE8();
  return sub_23F2688B8();
}

uint64_t sub_23F1B42B0()
{
  sub_23F1F3CE8();
  return sub_23F2688C4();
}

void MessagePayload.RequestPrescribedPlan.DisplayTool.encode(to:)()
{
  sub_23F1B4514();
}

void MessagePayload.RequestPrescribedPlan.DisplayTool.init(from:)()
{
  sub_23F1B461C();
}

void sub_23F1B4330()
{
  MessagePayload.RequestPrescribedPlan.DisplayTool.init(from:)();
}

void sub_23F1B4344()
{
  MessagePayload.RequestPrescribedPlan.DisplayTool.encode(to:)();
}

uint64_t (*MessagePayload.RequestPrescribedPlan.KnowledgeTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.KnowledgeTool.isExplicit.modify())()
{
  return nullsub_1;
}

void _s16IntelligenceFlow14MessagePayloadO21RequestPrescribedPlanO10SearchToolV2eeoiySbAG_AGtFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = sub_23F250464(a1);
  if (v1 != *v3 || v2 != v3[1])
  {
    sub_23F126148();
    sub_23F15E5CC();
  }
  sub_23F126078();
}

void sub_23F1B43C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v4 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v4 || (sub_23F180250(), (sub_23F126148() & 1) != 0))
  {
    swift_bridgeObjectRelease();
  }
  else if (v3 == 0x63696C7078457369 && v2 == 0xEA00000000007469)
  {
    sub_23F251288();
  }
  else
  {
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F1B4498()
{
  sub_23F1F3D24();
  return sub_23F2688B8();
}

uint64_t sub_23F1B44C0()
{
  sub_23F1F3D24();
  return sub_23F2688C4();
}

void MessagePayload.RequestPrescribedPlan.KnowledgeTool.encode(to:)()
{
  sub_23F1B4514();
}

void sub_23F1B4514()
{
  uint64_t v0;
  void (*v1)(_QWORD *);
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(_QWORD *);
  uint64_t v11;
  uint64_t v12;

  sub_23F131874();
  v10 = v1;
  v11 = v0;
  v3 = (_QWORD *)v2;
  v12 = *(_QWORD *)(sub_23F1A9D7C(v2, v4) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F24ED3C(v3);
  v10(v8);
  sub_23F180304();
  sub_23F24FE44();
  if (!v0)
  {
    sub_23F251324();
    sub_23F18AC50();
  }
  sub_23F126038((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  sub_23F17FDF4();
  sub_23F1313FC();
}

void MessagePayload.RequestPrescribedPlan.KnowledgeTool.init(from:)()
{
  sub_23F1B461C();
}

void sub_23F1B461C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v14[2];

  sub_23F131874();
  v3 = v2;
  v14[0] = v4;
  v14[1] = sub_23F1A9D7C(v2, v5);
  sub_23F12611C();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F24FE24();
  sub_23F24F564();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    v9 = v14[0];
    v10 = sub_23F24EF34();
    v12 = v11;
    sub_23F24F790();
    v13 = sub_23F2514B4();
    sub_23F15E444((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *(_QWORD *)v9 = v10;
    *(_QWORD *)(v9 + 8) = v12;
    *(_BYTE *)(v9 + 16) = v13 & 1;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v3);
    sub_23F131790();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1B4724()
{
  MessagePayload.RequestPrescribedPlan.KnowledgeTool.init(from:)();
}

void sub_23F1B4738()
{
  MessagePayload.RequestPrescribedPlan.KnowledgeTool.encode(to:)();
}

uint64_t static MessagePayload.RequestPrescribedPlan.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F18039C();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_23F1B478C + 4 * byte_23F278C5D[*(unsigned __int8 *)(v10 + 16) >> 5]))(v10, v11, v12, v13, v14, v15, v16, v17, a9, a10);
}

void sub_23F1B478C()
{
  unsigned int v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (v0 < 0x20)
  {
    if (v3 == v5 && v2 == v4)
    {
      sub_23F135C9C(v3, v2, v0);
      sub_23F135C9C(v3, v2, v1);
      sub_23F137230(v3, v2, v1);
      sub_23F137230(v3, v2, v0);
    }
    else
    {
      sub_23F126148();
      sub_23F24EEE4();
    }
  }
  else
  {
    sub_23F24EEE4();
  }
  sub_23F131680();
}

uint64_t sub_23F1B48B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x6F54686372616573 && a2 == 0xEA00000000006C6FLL;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023F2944A0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x6C6F6F5474786574 && a2 == 0xE800000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x54747265766E6F63 && a2 == 0xEB000000006C6F6FLL;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x5479616C70736964 && a2 == 0xEB000000006C6F6FLL;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x6764656C776F6E6BLL && a2 == 0xED00006C6F6F5465)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v10 = sub_23F268798();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 5;
          else
            return 6;
        }
      }
    }
  }
}

uint64_t sub_23F1B4B78(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1B4BB0 + 4 * byte_23F278C63[a1]))(0x6F54686372616573, 0xEA00000000006C6FLL);
}

unint64_t sub_23F1B4BB0()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_23F1B4BCC()
{
  return 0x6C6F6F5474786574;
}

uint64_t sub_23F1B4BE4()
{
  return 0x54747265766E6F63;
}

uint64_t sub_23F1B4C18()
{
  return 0x6764656C776F6E6BLL;
}

uint64_t sub_23F1B4C3C()
{
  unsigned __int8 *v0;

  return sub_23F1B4B78(*v0);
}

uint64_t sub_23F1B4C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B48B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1B4C68()
{
  sub_23F1F3D60();
  return sub_23F2688B8();
}

uint64_t sub_23F1B4C90()
{
  sub_23F1F3D60();
  return sub_23F2688C4();
}

uint64_t sub_23F1B4CB8()
{
  sub_23F1F3E8C();
  return sub_23F2688B8();
}

uint64_t sub_23F1B4CE0()
{
  sub_23F1F3E8C();
  return sub_23F2688C4();
}

uint64_t sub_23F1B4D08()
{
  sub_23F1F3E14();
  return sub_23F2688B8();
}

uint64_t sub_23F1B4D30()
{
  sub_23F1F3E14();
  return sub_23F2688C4();
}

uint64_t sub_23F1B4D58()
{
  sub_23F1F3D9C();
  return sub_23F2688B8();
}

uint64_t sub_23F1B4D80()
{
  sub_23F1F3D9C();
  return sub_23F2688C4();
}

uint64_t sub_23F1B4DA8()
{
  sub_23F1F3F7C();
  return sub_23F2688B8();
}

uint64_t sub_23F1B4DD0()
{
  sub_23F1F3F7C();
  return sub_23F2688C4();
}

uint64_t sub_23F1B4DF8()
{
  sub_23F1F3FF4();
  return sub_23F2688B8();
}

uint64_t sub_23F1B4E20()
{
  sub_23F1F3FF4();
  return sub_23F2688C4();
}

uint64_t sub_23F1B4E48()
{
  sub_23F1F3F04();
  return sub_23F2688B8();
}

uint64_t sub_23F1B4E70()
{
  sub_23F1F3F04();
  return sub_23F2688C4();
}

void MessagePayload.RequestPrescribedPlan.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F131874();
  v2 = v1;
  sub_23F1217E8(&qword_256E03548);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F24ED84(v4, v15);
  sub_23F1217E8(&qword_256E03550);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F16BA8C(v6, v16);
  sub_23F1217E8(&qword_256E03558);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15E9B4(v8, v17);
  sub_23F1217E8(&qword_256E03560);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F180018(v10, v18);
  sub_23F1217E8(&qword_256E03568);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F15EB6C();
  sub_23F1217E8(&qword_256E03570);
  sub_23F2512AC();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F15E50C();
  sub_23F1217E8(&qword_256E03578);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F1316E4();
  v14 = *(unsigned __int8 *)(v0 + 16);
  sub_23F24F270(v2);
  sub_23F1F3D60();
  sub_23F251278();
  sub_23F2509EC();
  __asm { BR              X10 }
}

void sub_23F1B5028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  *(_BYTE *)(v1 - 112) = 0;
  sub_23F1F3FF4();
  sub_23F24F008();
  sub_23F24F8D8();
  sub_23F1F4030();
  sub_23F1AE450();
  sub_23F1A977C(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 264) + 8));
  v2 = sub_23F24FAB0();
  v3(v2);
  sub_23F24F920();
  sub_23F1313FC();
}

void MessagePayload.RequestPrescribedPlan.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_23F131874();
  sub_23F251470(v12);
  sub_23F1217E8(&qword_256E035E8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F24ED20(v14, v40);
  sub_23F1217E8(&qword_256E035F0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1A94D4(v16, v41);
  sub_23F1217E8(&qword_256E035F8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F17FFE0(v18, v42);
  sub_23F1217E8(&qword_256E03600);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F16BC34(v20, v43);
  sub_23F1217E8(&qword_256E03608);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F24ED84(v22, v44);
  sub_23F1217E8(&qword_256E03610);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F15E660();
  sub_23F1217E8(&qword_256E03618);
  sub_23F12611C();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F1319B0();
  v45 = (uint64_t)v10;
  sub_23F1A968C(v10);
  sub_23F1F3D60();
  sub_23F1A9DA4();
  sub_23F250614();
  v25 = a10;
  if (!a10)
  {
    sub_23F2686D8();
    sub_23F251290();
    if (v26)
    {
      v27 = *(unsigned __int8 *)(v11 + 32);
      v28 = sub_23F24F680();
      sub_23F15E2D0(v28, v29, v30, v31, v32, v33);
      v35 = v34;
      v25 = v36;
      sub_23F15EB24();
      if (v35 == v25 >> 1)
        __asm { BR              X9 }
    }
    v37 = sub_23F15EDB8();
    sub_23F131B30();
    sub_23F2508FC();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F24F960();
    *(_QWORD *)v25 = &type metadata for MessagePayload.RequestPrescribedPlan;
    sub_23F251CBC();
    sub_23F24ECCC();
    sub_23F24F678(v25, *MEMORY[0x24BEE26D0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104));
    sub_23F250144();
    sub_23F15E96C();
    v38 = sub_23F2500D8();
    v39(v38);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v45);
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1B5914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  unint64_t vars8;

  MessagePayload.RequestPrescribedPlan.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1B5928()
{
  MessagePayload.RequestPrescribedPlan.encode(to:)();
}

void MessagePayload.Query.query.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void MessagePayload.Query.query.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*MessagePayload.Query.query.modify())()
{
  return nullsub_1;
}

void MessagePayload.Query.variables.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F25039C();
  *(_QWORD *)(v1 + 16) = a1;
  sub_23F126078();
}

uint64_t (*MessagePayload.Query.variables.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.Query.safetyMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t MessagePayload.Query.safetyMode.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*MessagePayload.Query.safetyMode.modify())()
{
  return nullsub_1;
}

void MessagePayload.Query.clientQueryId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void MessagePayload.Query.clientQueryId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15E844();
  sub_23F251C94();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  sub_23F12612C();
}

uint64_t (*MessagePayload.Query.clientQueryId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.Query.init(query:safetyMode:clientQueryId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = 0;
  *(_BYTE *)(a6 + 24) = a3;
  *(_QWORD *)(a6 + 32) = a4;
  *(_QWORD *)(a6 + 40) = a5;
  return result;
}

uint64_t MessagePayload.Query.init(query:variables:safetyMode:clientQueryId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_BYTE *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  return result;
}

void MessagePayload.Query.init(query:safetyMode:)(uint64_t a1@<X8>, uint64_t a2@<X0>, uint64_t a3@<X1>, char a4@<W2>)
{
  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = a4;
  sub_23F25101C(a1);
}

void MessagePayload.Query.init(query:variables:safetyMode:)(uint64_t a1@<X8>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>, char a5@<W3>)
{
  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = a4;
  *(_BYTE *)(a1 + 24) = a5;
  sub_23F25101C(a1);
}

void MessagePayload.Query.init(query:variables:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F251650();
  swift_bridgeObjectRelease();
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = v0;
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  sub_23F12612C();
}

void MessagePayload.Query.init(query:)(uint64_t a1@<X8>, uint64_t a2@<X0>, uint64_t a3@<X1>)
{
  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  sub_23F25101C(a1);
}

void MessagePayload.Query.init(query:variables:)(uint64_t a1@<X8>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>)
{
  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = a4;
  *(_BYTE *)(a1 + 24) = 0;
  sub_23F25101C(a1);
}

void static MessagePayload.Query.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  char v12;
  char v13;

  sub_23F125F3C();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(unsigned __int8 *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(unsigned __int8 *)(v1 + 24);
  v9 = *(_QWORD *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v10 = *(_QWORD *)v0 == *(_QWORD *)v1 && *(_QWORD *)(v0 + 8) == *(_QWORD *)(v1 + 8);
  if (v10 || (sub_23F126148(), sub_23F15E5CC(), (v11 & 1) != 0))
  {
    if (v2)
    {
      if (!v6)
        goto LABEL_19;
      sub_23F126140();
      sub_23F126364();
      sub_23F121D9C();
      v13 = v12;
      sub_23F13190C();
      sub_23F1318DC();
      if ((v13 & 1) == 0)
        goto LABEL_19;
    }
    else if (v6)
    {
      goto LABEL_19;
    }
    if (((v3 ^ v7) & 1) == 0 && v5 && v8 && (v4 != v9 || v5 != v8))
      sub_23F126148();
  }
LABEL_19:
  sub_23F125EFC();
}

uint64_t sub_23F1B5BAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656C626169726176 && a2 == 0xE900000000000073;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6F4D797465666173 && a2 == 0xEA00000000006564;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F1B5D8C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1B5DBC + 4 * byte_23F278C75[a1]))(0x7972657571, 0xE500000000000000);
}

uint64_t sub_23F1B5DBC()
{
  return 0x656C626169726176;
}

uint64_t sub_23F1B5DD8()
{
  return 0x6F4D797465666173;
}

uint64_t sub_23F1B5DF4()
{
  return 0x7551746E65696C63;
}

uint64_t sub_23F1B5E18()
{
  unsigned __int8 *v0;

  return sub_23F1B5D8C(*v0);
}

uint64_t sub_23F1B5E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B5BAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1B5E44()
{
  sub_23F1F41D4();
  return sub_23F2688B8();
}

uint64_t sub_23F1B5E6C()
{
  sub_23F1F41D4();
  return sub_23F2688C4();
}

void MessagePayload.Query.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256E03650);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F25084C();
  sub_23F18AA80(v4);
  sub_23F1F41D4();
  sub_23F18A998();
  sub_23F24FE44();
  if (!v1)
  {
    sub_23F1A9BB8();
    sub_23F1217E8(&qword_256DFE588);
    sub_23F250E30();
    sub_23F15E5FC();
    sub_23F2512E4();
    sub_23F252068();
    sub_23F25107C();
    sub_23F24F89C();
  }
  sub_23F15E444(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void MessagePayload.Query.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char v18;

  sub_23F131874();
  v4 = v3;
  v6 = v5;
  sub_23F1217E8(&qword_256E03660);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15E660();
  sub_23F24FF3C(v4);
  sub_23F1F41D4();
  sub_23F250D14();
  sub_23F24EEA4();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    v8 = sub_23F268684();
    v10 = v9;
    sub_23F1217E8(&qword_256DFE588);
    v11 = sub_23F251638();
    sub_23F126140();
    sub_23F2518A0();
    if (!v11)
    {
      sub_23F180274();
      sub_23F131A54();
      v18 = sub_23F268690();
      sub_23F251C54();
      v12 = sub_23F15E764();
      v14 = v13;
      v15 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
      v16 = v12;
      sub_23F15E7D4(v1, v15);
      sub_23F1315C4();
      sub_23F14C66C();
      *(_QWORD *)v6 = v8;
      *(_QWORD *)(v6 + 8) = v10;
      *(_QWORD *)(v6 + 16) = v17;
      *(_BYTE *)(v6 + 24) = v18 & 1;
      *(_QWORD *)(v6 + 32) = v16;
      *(_QWORD *)(v6 + 40) = v14;
      sub_23F24EE8C();
      sub_23F13186C();
      goto LABEL_5;
    }
    sub_23F15E7D4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F1318DC();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
    sub_23F1318DC();
  }
  sub_23F14C66C();
LABEL_5:
  swift_bridgeObjectRelease();
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1B61A8()
{
  MessagePayload.Query.init(from:)();
}

void sub_23F1B61BC()
{
  MessagePayload.Query.encode(to:)();
}

void MessagePayload.SpeechQuery.Candidate.recognition.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void sub_23F1B61FC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x74696E676F636572 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F2509B4();
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F1B6288()
{
  return 0x74696E676F636572;
}

void sub_23F1B62A8(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F1B61FC(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F1B62D0()
{
  sub_23F1F4210();
  return sub_23F2688B8();
}

uint64_t sub_23F1B62F8()
{
  sub_23F1F4210();
  return sub_23F2688C4();
}

void MessagePayload.SpeechQuery.Candidate.encode(to:)()
{
  sub_23F1EBEC8();
}

void MessagePayload.SpeechQuery.Candidate.init(from:)()
{
  sub_23F1EBFA0();
}

void sub_23F1B6380()
{
  MessagePayload.SpeechQuery.Candidate.init(from:)();
}

void sub_23F1B6394()
{
  MessagePayload.SpeechQuery.Candidate.encode(to:)();
}

uint64_t MessagePayload.SpeechQuery.safetyMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

void MessagePayload.SpeechQuery.clientQueryId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void MessagePayload.SpeechQuery.clientQueryId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F250604();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  sub_23F12612C();
}

uint64_t (*MessagePayload.SpeechQuery.clientQueryId.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::MessagePayload::SpeechQuery __swiftcall MessagePayload.SpeechQuery.init(candidates:safetyMode:clientQueryId:)(Swift::OpaquePointer candidates, Swift::Bool safetyMode, Swift::String_optional clientQueryId)
{
  uint64_t v3;
  IntelligenceFlow::MessagePayload::SpeechQuery result;

  *(Swift::OpaquePointer *)v3 = candidates;
  *(_BYTE *)(v3 + 8) = safetyMode;
  *(Swift::String_optional *)(v3 + 16) = clientQueryId;
  result.clientQueryId = clientQueryId;
  result.candidates = candidates;
  result.safetyMode = safetyMode;
  return result;
}

IntelligenceFlow::MessagePayload::SpeechQuery __swiftcall MessagePayload.SpeechQuery.init(candidates:safetyMode:)(IntelligenceFlow::MessagePayload::SpeechQuery candidates, Swift::Bool safetyMode)
{
  uint64_t v2;

  *(_QWORD *)v2 = candidates.candidates._rawValue;
  *(_BYTE *)(v2 + 8) = safetyMode;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  candidates.safetyMode = safetyMode;
  return candidates;
}

IntelligenceFlow::MessagePayload::SpeechQuery __swiftcall MessagePayload.SpeechQuery.init(candidates:)(IntelligenceFlow::MessagePayload::SpeechQuery candidates)
{
  uint64_t v1;

  *(_QWORD *)v1 = candidates.candidates._rawValue;
  *(_BYTE *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  return candidates;
}

void static MessagePayload.SpeechQuery.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned __int8 *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  sub_23F1298DC(*(_QWORD *)a1, *(_QWORD *)a2);
  sub_23F15E5CC();
  if ((v8 & 1) != 0 && ((v2 ^ v5) & 1) == 0 && v3 && v6 && (v4 != v7 || v3 != v6))
    sub_23F126148();
  sub_23F131ABC();
}

uint64_t sub_23F1B64C0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  char v8;

  v3 = a1 == 0x74616469646E6163 && a2 == 0xEA00000000007365;
  if (v3 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F4D797465666173 && a2 == 0xEA00000000006564;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F1B6640(char a1)
{
  if (!a1)
    return 0x74616469646E6163;
  if (a1 == 1)
    return 0x6F4D797465666173;
  return 0x7551746E65696C63;
}

uint64_t sub_23F1B66A8()
{
  char *v0;

  return sub_23F1B6640(*v0);
}

uint64_t sub_23F1B66B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B64C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1B66D4()
{
  sub_23F1F424C();
  return sub_23F2688B8();
}

uint64_t sub_23F1B66FC()
{
  sub_23F1F424C();
  return sub_23F2688C4();
}

void MessagePayload.SpeechQuery.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256E03680);
  sub_23F12611C();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1319C8();
  sub_23F24F1D8(v4);
  sub_23F1F424C();
  sub_23F24FDB4();
  sub_23F12636C();
  sub_23F24F834((uint64_t)&unk_256E03698);
  sub_23F250C00();
  if (!v0)
  {
    sub_23F26872C();
    sub_23F15EA14();
  }
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F1A9634();
  sub_23F1313FC();
}

void MessagePayload.SpeechQuery.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  _BYTE v22[16];

  sub_23F131874();
  sub_23F15E7E8();
  sub_23F1217E8(&qword_256E036A8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F15E498();
  sub_23F1F424C();
  sub_23F15E564();
  if (v10)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F12636C();
    v22[15] = 0;
    sub_23F24F834((uint64_t)&unk_256E036B0);
    sub_23F15E79C();
    v22[14] = 1;
    sub_23F13174C();
    v16 = sub_23F2514B4();
    v22[13] = 2;
    v17 = sub_23F15E764();
    v19 = v18;
    v20 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    v21 = v17;
    sub_23F15E444((uint64_t)v15, v20);
    sub_23F1315C4();
    sub_23F14C66C();
    *(_QWORD *)v11 = a10;
    *(_BYTE *)(v11 + 8) = v16 & 1;
    *(_QWORD *)(v11 + 16) = v21;
    *(_QWORD *)(v11 + 24) = v19;
    sub_23F24EE8C();
  }
  swift_bridgeObjectRelease();
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1B69F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  MessagePayload.SpeechQuery.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1B6A08()
{
  MessagePayload.SpeechQuery.encode(to:)();
}

uint64_t sub_23F1B6A24(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1851878512 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1B6A98()
{
  return 1851878512;
}

uint64_t sub_23F1B6AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B6A24(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1B6AD4()
{
  sub_23F1F4300();
  return sub_23F2688B8();
}

uint64_t sub_23F1B6AFC()
{
  sub_23F1F4300();
  return sub_23F2688C4();
}

void MessagePayload.PrescribedPlan.encode(to:)()
{
  sub_23F1EBEC8();
}

void MessagePayload.PrescribedPlan.init(from:)()
{
  sub_23F1EBFA0();
}

void sub_23F1B6B84()
{
  MessagePayload.PrescribedPlan.init(from:)();
}

void sub_23F1B6B98()
{
  MessagePayload.PrescribedPlan.encode(to:)();
}

uint64_t sub_23F1B6BB0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x697263736E617274 && a2 == 0xEA00000000007470)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1B6C40()
{
  return 0x697263736E617274;
}

uint64_t sub_23F1B6C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B6BB0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1B6C88()
{
  sub_23F1F433C();
  return sub_23F2688B8();
}

uint64_t sub_23F1B6CB0()
{
  sub_23F1F433C();
  return sub_23F2688C4();
}

void MessagePayload.MockTranscript.encode(to:)()
{
  sub_23F1EBEC8();
}

void MessagePayload.MockTranscript.init(from:)()
{
  sub_23F1EBFA0();
}

void sub_23F1B6D38()
{
  MessagePayload.MockTranscript.init(from:)();
}

void sub_23F1B6D4C()
{
  MessagePayload.MockTranscript.encode(to:)();
}

uint64_t sub_23F1B6D60(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1B6DDC()
{
  return 0x736C6562616CLL;
}

uint64_t sub_23F1B6DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B6D60(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1B6E1C()
{
  sub_23F1F4378();
  return sub_23F2688B8();
}

uint64_t sub_23F1B6E44()
{
  sub_23F1F4378();
  return sub_23F2688C4();
}

void MessagePayload.DisambiguationNeeded.encode(to:)()
{
  sub_23F1B6E98();
}

void sub_23F1B6E98()
{
  uint64_t v0;
  void (*v1)(_QWORD *);
  void (*v2)(_QWORD *);
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  sub_23F131874();
  v2 = v1;
  v4 = (_QWORD *)v3;
  v8 = *(_QWORD *)(sub_23F1A9D7C(v3, v5) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F15E660();
  v7 = sub_23F24EE44(v4);
  v2(v7);
  sub_23F24F558();
  sub_23F1217E8(&qword_256DFE7C8);
  sub_23F12EA6C((uint64_t)&unk_256DFE7D0);
  sub_23F251E40();
  sub_23F126038(v0, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  sub_23F24F920();
  sub_23F1313FC();
}

void MessagePayload.DisambiguationNeeded.init(from:)()
{
  sub_23F1B6FA0();
}

void sub_23F1B6FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F131874();
  sub_23F252164();
  v8 = v2;
  v9 = *(_QWORD *)(sub_23F1A9D7C(v3, v4) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F251248();
  sub_23F24F564();
  if (!v1)
  {
    sub_23F1217E8(&qword_256DFE7C8);
    sub_23F12EA6C((uint64_t)&unk_256DFE7E0);
    sub_23F17FE68();
    sub_23F17FF08((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    sub_23F2523F4();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1B7094()
{
  MessagePayload.DisambiguationNeeded.init(from:)();
}

void sub_23F1B70A8()
{
  MessagePayload.DisambiguationNeeded.encode(to:)();
}

uint64_t MessagePayload.ClientEffectInvocation.stepId.getter()
{
  return sub_23F1EF104();
}

uint64_t MessagePayload.ClientEffectInvocation.sessionId.getter()
{
  return sub_23F1B01AC(type metadata accessor for MessagePayload.ClientEffectInvocation);
}

void MessagePayload.ClientEffectInvocation.clientRequestId.getter()
{
  sub_23F1D70D0(type metadata accessor for MessagePayload.ClientEffectInvocation);
}

void MessagePayload.ClientEffectInvocation.clientSessionId.getter()
{
  sub_23F16EB68(type metadata accessor for MessagePayload.ClientEffectInvocation);
}

void MessagePayload.ClientEffectInvocation.toolId.getter()
{
  sub_23F250E28();
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

uint64_t MessagePayload.ClientEffectInvocation.parameters.getter()
{
  sub_23F250E28();
  return swift_bridgeObjectRetain();
}

void MessagePayload.ClientEffectInvocation.init(stepId:sessionId:clientRequestId:clientSessionId:toolName:parameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, int *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F1314D0();
  v40 = v29;
  v41 = v30;
  v32 = v31;
  sub_23F24FB84();
  sub_23F131B8C();
  sub_23F2512AC();
  v34 = *(void (**)(uint64_t, int *, uint64_t))(v33 + 32);
  v34(v27, v26, v28);
  v35 = sub_23F250E28();
  v36 = sub_23F25112C(v35);
  ((void (*)(uint64_t))v34)(v36);
  v37 = (_QWORD *)(v27 + v26[6]);
  *v37 = v25;
  v37[1] = v24;
  v38 = (_QWORD *)(v27 + v26[7]);
  *v38 = v23;
  v38[1] = v32;
  v39 = (_QWORD *)(v27 + v26[8]);
  *v39 = v40;
  v39[1] = v41;
  *(_QWORD *)(v27 + v26[9]) = a23;
  sub_23F131500();
}

void static MessagePayload.ClientEffectInvocation.== infix(_:_:)()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  if ((sub_23F1A9880() & 1) == 0)
    goto LABEL_19;
  v0 = (int *)sub_23F250E28();
  sub_23F24FD00((uint64_t)v0);
  if ((_s16IntelligenceFlow7EventIDV2eeoiySbAC_ACtFZ_0() & 1) == 0)
    goto LABEL_19;
  sub_23F24F08C(v0[6]);
  v3 = v3 && v1 == v2;
  if ((v3 || (sub_23F126148() & 1) != 0)
    && ((sub_23F24F08C(v0[7]), v3) ? (v6 = v4 == v5) : (v6 = 0),
        (v6 || (sub_23F126148() & 1) != 0)
     && ((sub_23F24F08C(v0[8]), v3) ? (v9 = v7 == v8) : (v9 = 0), v9 || (sub_23F126148() & 1) != 0)))
  {
    sub_23F251830(v0[9]);
    sub_23F121D9C();
  }
  else
  {
LABEL_19:
    sub_23F12612C();
  }
}

uint64_t sub_23F1B7260(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x644970657473 && a2 == 0xE600000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6553746E65696C63 && a2 == 0xEF64496E6F697373;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
          if (v9 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_23F268798();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_23F1B751C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1B754C + 4 * byte_23F278C79[a1]))(0x644970657473, 0xE600000000000000);
}

uint64_t sub_23F1B754C()
{
  return 0x496E6F6973736573;
}

uint64_t sub_23F1B7568()
{
  return 0x6552746E65696C63;
}

uint64_t sub_23F1B758C()
{
  return 0x6553746E65696C63;
}

uint64_t sub_23F1B75B0()
{
  return 0x64496C6F6F74;
}

uint64_t sub_23F1B75C0()
{
  return 0x6574656D61726170;
}

uint64_t sub_23F1B75DC()
{
  unsigned __int8 *v0;

  return sub_23F1B751C(*v0);
}

uint64_t sub_23F1B75E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B7260(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1B7608()
{
  sub_23F1F43C8();
  return sub_23F2688B8();
}

uint64_t sub_23F1B7630()
{
  sub_23F1F43C8();
  return sub_23F2688C4();
}

void MessagePayload.ClientEffectInvocation.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v7[2];

  sub_23F131874();
  sub_23F1A9A7C();
  sub_23F1217E8(&qword_256E03708);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1F43C8();
  sub_23F18A998();
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&qword_256DFEF10);
  sub_23F1315CC();
  if (!v0)
  {
    v6 = type metadata accessor for MessagePayload.ClientEffectInvocation(0);
    sub_23F1315CC();
    sub_23F250798();
    sub_23F131644();
    sub_23F131644();
    sub_23F131644();
    v7[1] = *(_QWORD *)(v1 + *(int *)(v6 + 36));
    sub_23F251B7C();
    sub_23F1217E8(&qword_256DFE588);
    sub_23F250E30();
    sub_23F1315CC();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void MessagePayload.ClientEffectInvocation.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23F131874();
  v5 = v4;
  v23 = v6;
  v7 = sub_23F131B8C();
  v25 = *(_QWORD *)(v7 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F24F5D0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F251000();
  sub_23F1217E8(&qword_256E03718);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F1A9864();
  v24 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(v11);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F125F70();
  v26 = v13;
  sub_23F24FC14(v5);
  sub_23F1F43C8();
  sub_23F25049C();
  if (v0)
  {
    sub_23F250388();
  }
  else
  {
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F250B0C();
    sub_23F17FE68();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32);
    v14(v26, v1, v7);
    sub_23F251324();
    sub_23F250B0C();
    sub_23F17FE68();
    v14(v26 + v24[5], v3, v7);
    sub_23F2512D4();
    v15 = sub_23F24FBE0();
    v16 = (uint64_t *)(v26 + v24[6]);
    *v16 = v15;
    v16[1] = v17;
    v18 = sub_23F24FBE0();
    sub_23F251DCC(v18, v19, (_QWORD *)(v26 + v24[7]));
    v20 = sub_23F24FBE0();
    v21 = (uint64_t *)(v26 + v24[8]);
    *v21 = v20;
    v21[1] = v22;
    sub_23F1217E8(&qword_256DFE588);
    sub_23F251B7C();
    sub_23F1255A4();
    sub_23F17FE68();
    sub_23F24F76C(v2);
    *(_QWORD *)(v26 + v24[9]) = v27;
    sub_23F2507E4(v26, v23);
    sub_23F250388();
    sub_23F24F0CC(v26);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1B7B8C()
{
  MessagePayload.ClientEffectInvocation.init(from:)();
}

void sub_23F1B7BA0()
{
  MessagePayload.ClientEffectInvocation.encode(to:)();
}

uint64_t MessagePayload.ClientAction.eventId.getter()
{
  return sub_23F1EF104();
}

uint64_t MessagePayload.ClientAction.eventId.setter(uint64_t a1)
{
  return sub_23F1EF140(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*MessagePayload.ClientAction.eventId.modify())()
{
  return nullsub_1;
}

void MessagePayload.ClientAction.toolId.getter()
{
  sub_23F1B7BE8(type metadata accessor for MessagePayload.ClientAction);
}

void sub_23F1B7BE8(uint64_t (*a1)(_QWORD))
{
  sub_23F17FDCC(a1);
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void MessagePayload.ClientAction.toolId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F1D034C(a1, a2, type metadata accessor for MessagePayload.ClientAction);
}

uint64_t (*MessagePayload.ClientAction.toolId.modify())()
{
  sub_23F250208();
  sub_23F180384();
  return nullsub_1;
}

uint64_t MessagePayload.ClientAction.parameters.getter()
{
  type metadata accessor for MessagePayload.ClientAction(0);
  return swift_bridgeObjectRetain();
}

void MessagePayload.ClientAction.parameters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_23F250208() + 24);
  sub_23F1A98B8();
  *(_QWORD *)(v1 + v3) = a1;
  sub_23F12612C();
}

uint64_t (*MessagePayload.ClientAction.parameters.modify())()
{
  type metadata accessor for MessagePayload.ClientAction(0);
  sub_23F18030C();
  return nullsub_1;
}

uint64_t MessagePayload.ClientAction.shimParameterResolution.getter()
{
  type metadata accessor for MessagePayload.ClientAction(0);
  return swift_bridgeObjectRetain();
}

void MessagePayload.ClientAction.shimParameterResolution.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_23F250208() + 28);
  sub_23F1A98B8();
  *(_QWORD *)(v1 + v3) = a1;
  sub_23F12612C();
}

uint64_t (*MessagePayload.ClientAction.shimParameterResolution.modify())()
{
  type metadata accessor for MessagePayload.ClientAction(0);
  sub_23F1A9AFC();
  return nullsub_1;
}

void MessagePayload.ClientAction.clientQueryId.getter()
{
  sub_23F1DA314(type metadata accessor for MessagePayload.ClientAction);
}

void MessagePayload.ClientAction.clientQueryId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F1DA34C(a1, a2, type metadata accessor for MessagePayload.ClientAction);
}

uint64_t (*MessagePayload.ClientAction.clientQueryId.modify())()
{
  sub_23F250208();
  sub_23F2503E0();
  return nullsub_1;
}

void MessagePayload.ClientAction.init(eventId:toolId:parameters:shimParameterResolution:clientQueryId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  _QWORD *v11;

  sub_23F125F3C();
  sub_23F2502F4();
  v7 = (int *)sub_23F250208();
  v8 = (_QWORD *)(v6 + v7[8]);
  sub_23F131B8C();
  v9 = sub_23F25082C();
  v10(v9);
  v11 = (_QWORD *)(v6 + v7[5]);
  *v11 = v5;
  v11[1] = v4;
  *(_QWORD *)(v6 + v7[6]) = v3;
  *v8 = v1;
  v8[1] = v0;
  *(_QWORD *)(v6 + v7[7]) = v2;
  sub_23F125EFC();
}

void MessagePayload.ClientAction.init(eventId:toolId:parameters:clientQueryId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F1314D0();
  v19 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
  v14 = (_QWORD *)(v12 + v13[8]);
  v15 = *(_QWORD *)(sub_23F131B8C() - 8);
  sub_23F2506C8(v12, v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  v16 = (_QWORD *)(v12 + v13[5]);
  *v16 = v8;
  v16[1] = v6;
  *(_QWORD *)(v12 + v13[6]) = v4;
  *v14 = v2;
  v14[1] = v19;
  sub_23F13175C();
  sub_23F1F3870();
  v18 = v17;
  sub_23F1262C0();
  sub_23F15E44C(v10, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  *(_QWORD *)(v12 + v13[7]) = v18;
  sub_23F131500();
}

void MessagePayload.ClientAction.init(eventId:toolId:shimParameterResolution:clientQueryId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F1314D0();
  v20 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
  v14 = (_QWORD *)(v12 + v13[8]);
  v15 = sub_23F131B8C();
  *v14 = 0;
  v14[1] = 0;
  v16 = *(_QWORD *)(v15 - 8);
  sub_23F2506C8(v12, v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
  v17 = (_QWORD *)(v12 + v13[5]);
  *v17 = v8;
  v17[1] = v6;
  sub_23F1B7F1C(v4);
  v19 = v18;
  sub_23F15E44C(v10, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  *(_QWORD *)(v12 + v13[6]) = v19;
  *(_QWORD *)(v12 + v13[7]) = v4;
  sub_23F250F34();
  *v14 = v2;
  v14[1] = v20;
  sub_23F131500();
}

void sub_23F1B7F1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  BOOL v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD v58[2];
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  int64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  _QWORD v76[2];
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;

  v2 = type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_23F268078();
  v71 = *(_QWORD *)(v68 - 8);
  v6 = MEMORY[0x24BDAC7A8](v68);
  v67 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v64 = (char *)v58 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v63 = (char *)v58 - v10;
  v11 = &qword_256DFE6B8;
  v72 = sub_23F1217E8(&qword_256DFE6B8);
  v12 = MEMORY[0x24BDAC7A8](v72);
  v62 = (_QWORD *)((char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v12);
  v70 = (_QWORD *)((char *)v58 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v69 = (char *)v58 - v16;
  v80 = MEMORY[0x24BEE4B00];
  sub_23F1F3B0C(a1, v76);
  v73 = v76[0];
  v65 = v76[1];
  v74 = v78;
  v17 = v79;
  v58[0] = v77;
  v66 = (unint64_t)(v77 + 64) >> 6;
  swift_bridgeObjectRetain();
  v61 = v2;
  v60 = v3;
  v59 = v5;
  while (1)
  {
    while (1)
    {
      if (v17)
      {
        v75 = (v17 - 1) & v17;
        v18 = __clz(__rbit64(v17)) | (v74 << 6);
      }
      else
      {
        v19 = v74 + 1;
        if (__OFADD__(v74, 1))
          goto LABEL_37;
        if (v19 >= v66)
          goto LABEL_35;
        v20 = *(_QWORD *)(v65 + 8 * v19);
        v21 = v74 + 1;
        if (!v20)
        {
          v21 = v74 + 2;
          if (v74 + 2 >= v66)
            goto LABEL_35;
          v20 = *(_QWORD *)(v65 + 8 * v21);
          if (!v20)
          {
            v21 = v74 + 3;
            if (v74 + 3 >= v66)
              goto LABEL_35;
            v20 = *(_QWORD *)(v65 + 8 * v21);
            if (!v20)
            {
              v21 = v74 + 4;
              if (v74 + 4 >= v66)
                goto LABEL_35;
              v20 = *(_QWORD *)(v65 + 8 * v21);
              if (!v20)
              {
                v21 = v74 + 5;
                if (v74 + 5 >= v66)
                  goto LABEL_35;
                v20 = *(_QWORD *)(v65 + 8 * v21);
                if (!v20)
                {
                  v22 = v74 + 6;
                  while (v22 < v66)
                  {
                    v20 = *(_QWORD *)(v65 + 8 * v22++);
                    if (v20)
                    {
                      v21 = v22 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_35:
                  sub_23F125E20();
                  return;
                }
              }
            }
          }
        }
LABEL_19:
        v74 = v21;
        v75 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      v23 = v72;
      v24 = (uint64_t *)(*(_QWORD *)(v73 + 48) + 16 * v18);
      v26 = *v24;
      v25 = v24[1];
      v27 = v69;
      sub_23F1BE1A0(*(_QWORD *)(v73 + 56) + *(_QWORD *)(v3 + 72) * v18, (uint64_t)&v69[*(int *)(v72 + 48)], type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
      *v27 = v26;
      v27[1] = v25;
      v28 = (uint64_t)v27;
      v29 = v70;
      sub_23F17537C(v28, (uint64_t)v70, v11);
      v30 = v11;
      v31 = (uint64_t)v29 + *(int *)(v23 + 48);
      sub_23F1BE1A0(v31, (uint64_t)v5, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
      if (swift_getEnumCaseMultiPayload() != 1)
        break;
      swift_bridgeObjectRetain();
      sub_23F1BE0BC((uint64_t)v5, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
      sub_23F125E40((uint64_t)v29, v30);
      v11 = v30;
      v17 = v75;
    }
    v32 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
    v33 = v64;
    v34 = v5;
    v35 = v68;
    v32(v64, v34, v68);
    v36 = v63;
    v32(v63, v33, v35);
    v37 = *(int *)(v23 + 48);
    v38 = v62;
    v39 = (uint64_t)v62 + v37;
    v40 = *v29;
    v41 = v29[1];
    *v62 = v40;
    v38[1] = v41;
    v42 = (uint64_t)v38 + v37;
    sub_23F1BE0F4(v31, v39, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
    v32(v67, v36, v35);
    v43 = v80;
    v44 = *(_QWORD *)(v80 + 16);
    if (*(_QWORD *)(v80 + 24) <= v44)
    {
      v45 = v44 + 1;
      swift_bridgeObjectRetain();
      sub_23F1F324C(v45, 1);
      v43 = v80;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_23F268834();
    sub_23F2681A4();
    v46 = sub_23F268864();
    v47 = v43 + 64;
    v48 = -1 << *(_BYTE *)(v43 + 32);
    v49 = v46 & ~v48;
    v50 = v49 >> 6;
    v51 = v71;
    if (((-1 << v49) & ~*(_QWORD *)(v43 + 64 + 8 * (v49 >> 6))) == 0)
      break;
    v52 = __clz(__rbit64((-1 << v49) & ~*(_QWORD *)(v43 + 64 + 8 * (v49 >> 6)))) | v49 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v47 + ((v52 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v52;
    v57 = (_QWORD *)(*(_QWORD *)(v43 + 48) + 16 * v52);
    *v57 = v40;
    v57[1] = v41;
    v32((char *)(*(_QWORD *)(v43 + 56) + *(_QWORD *)(v51 + 72) * v52), v67, v68);
    ++*(_QWORD *)(v43 + 16);
    sub_23F1BE0BC(v42, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
    v3 = v60;
    v5 = v59;
    v11 = &qword_256DFE6B8;
    v17 = v75;
  }
  v53 = 0;
  v54 = (unint64_t)(63 - v48) >> 6;
  while (++v50 != v54 || (v53 & 1) == 0)
  {
    v55 = v50 == v54;
    if (v50 == v54)
      v50 = 0;
    v53 |= v55;
    v56 = *(_QWORD *)(v47 + 8 * v50);
    if (v56 != -1)
    {
      v52 = __clz(__rbit64(~v56)) + (v50 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
}

void MessagePayload.ClientAction.init(eventId:toolId:parameters:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);

  v10 = (int *)sub_23F250208();
  v11 = (_QWORD *)(a5 + v10[8]);
  v12 = sub_23F131B8C();
  *v11 = 0;
  v11[1] = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a5, a1, v12);
  v13 = (_QWORD *)(a5 + v10[5]);
  *v13 = a2;
  v13[1] = a3;
  *(_QWORD *)(a5 + v10[6]) = a4;
  sub_23F1263B8();
  sub_23F1F3870();
  v15 = v14;
  sub_23F1318B8();
  v16 = sub_23F24FAB0();
  v17(v16);
  *(_QWORD *)(a5 + v10[7]) = v15;
  sub_23F25088C();
}

void static MessagePayload.ClientAction.ShimParameterResolution.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;

  sub_23F125F3C();
  v26 = v5;
  v27 = v6;
  v25[1] = type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F125F84();
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F1A9864();
  type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution(v12);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F24F388();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F24F48C();
  sub_23F1217E8(&qword_256DFE6A8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F24F238();
  v17 = v0 + v16;
  sub_23F2514F0(v26, v0);
  sub_23F2514F0(v27, v17);
  if (sub_23F24EDA0() != 1)
  {
    sub_23F250D20(v0, v18, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
    if (sub_23F24EDA0() != 1)
    {
      sub_23F1263D8(v4, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
      sub_23F25107C();
      _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
      v21 = *(void (**)(uint64_t))(v1 + 8);
      v22 = sub_23F2504F0();
      v21(v22);
      v23 = ((uint64_t (*)(uint64_t, uint64_t))v21)(v3, v10);
      sub_23F24F318(v23, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
      goto LABEL_11;
    }
    v20 = sub_23F126138(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    goto LABEL_8;
  }
  sub_23F250ED4(v0, v18, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
  v19 = sub_23F24EDA0();
  if ((_DWORD)v19 != 1)
  {
    sub_23F252280(v19, type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue);
LABEL_8:
    sub_23F24F5EC(v20, &qword_256DFE6A8);
    goto LABEL_11;
  }
  sub_23F1BE0F4(v17, (uint64_t)v9, type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue);
  sub_23F25229C();
  if ((_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0() & 1) != 0)
    sub_23F1298E0();
  sub_23F24F1B8((uint64_t)v9);
  sub_23F24F1B8(v2);
  sub_23F24F318(v24, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
LABEL_11:
  sub_23F250F0C();
  sub_23F125EFC();
}

uint64_t static MessagePayload.ClientAction.UnresolvedParameterValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_23F1C3298(a1, a2, (uint64_t)MEMORY[0x24BEB99D0], type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue, (uint64_t (*)(uint64_t))sub_23F1298E0);
}

uint64_t sub_23F1B882C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6465766C6F736572 && a2 == 0xE800000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x766C6F7365726E75 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1B8924(char a1)
{
  if ((a1 & 1) != 0)
    return 0x766C6F7365726E75;
  else
    return 0x6465766C6F736572;
}

uint64_t sub_23F1B8960()
{
  char *v0;

  return sub_23F1B8924(*v0);
}

uint64_t sub_23F1B8968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B882C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1B898C()
{
  sub_23F1F4440();
  return sub_23F2688B8();
}

uint64_t sub_23F1B89B4()
{
  sub_23F1F4440();
  return sub_23F2688C4();
}

uint64_t sub_23F1B89DC()
{
  sub_23F1F44B8();
  return sub_23F2688B8();
}

uint64_t sub_23F1B8A04()
{
  sub_23F1F44B8();
  return sub_23F2688C4();
}

uint64_t sub_23F1B8A2C()
{
  sub_23F1F447C();
  return sub_23F2688B8();
}

uint64_t sub_23F1B8A54()
{
  sub_23F1F447C();
  return sub_23F2688C4();
}

void MessagePayload.ClientAction.ShimParameterResolution.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_23F131874();
  v32 = v1;
  v29 = v0;
  v6 = v5;
  v7 = sub_23F1217E8(&qword_256E03720);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  v26 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F1A9220();
  v11 = type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(v10);
  sub_23F251010(v11);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F16BBFC(v13, v22);
  v24 = sub_23F1217E8(&qword_256E03728);
  v22 = *(_QWORD *)(v24 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F24F060();
  v23 = sub_23F268078();
  v30 = *(_QWORD *)(v23 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F250540();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F15EB6C();
  v31 = sub_23F1217E8(&qword_256E03730);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F1A968C(v6);
  sub_23F1F4440();
  sub_23F15EBF0();
  sub_23F1BE1A0(v29, v3, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = v25;
    sub_23F24EE5C(v3, v25);
    sub_23F251FC4();
    v19 = (uint64_t)v26;
    sub_23F15E6E8();
    sub_23F24EE74((uint64_t)&unk_256E03748);
    sub_23F1A99C0();
    sub_23F251E40();
    sub_23F15E444(v19, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
    sub_23F24F0CC(v18);
  }
  else
  {
    sub_23F250DD4(v2, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 32));
    sub_23F1F44B8();
    sub_23F15E6E8();
    sub_23F12E488((uint64_t)&qword_256DFE598);
    sub_23F251E40();
    v20 = sub_23F24F11C();
    sub_23F15E7D4(v20, v21);
    sub_23F15E694(v2, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
  }
  sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F24F920();
  sub_23F1313FC();
}

void MessagePayload.ClientAction.ShimParameterResolution.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;

  sub_23F131874();
  v5 = v4;
  v48 = v6;
  v7 = sub_23F1217E8(&qword_256E03758);
  v51 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F17FBC8(v9, v44);
  v10 = sub_23F1217E8(&qword_256E03760);
  v49 = *(_QWORD *)(v10 - 8);
  v50 = v10;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1A982C(v12, v44);
  v13 = sub_23F1217E8(&qword_256E03768);
  v55 = *(_QWORD *)(v13 - 8);
  v56 = v13;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F250540();
  sub_23F125F30();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  sub_23F1A9470();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F251000();
  sub_23F24ED3C(v5);
  sub_23F1F4440();
  sub_23F15EB10();
  sub_23F15E564();
  if (v0)
    goto LABEL_8;
  v45 = v19;
  v46 = v3;
  v44 = v1;
  v47 = v15;
  v57 = v5;
  sub_23F2522FC();
  sub_23F251290();
  v21 = v2;
  if (!v22
    || (v23 = sub_23F24F368(),
        sub_23F15E2D0(v23, v24, v25, v26, v27, v28),
        v30 = v29,
        v32 = v31,
        sub_23F15EB24(),
        v30 != v32 >> 1))
  {
    v36 = v55;
    v37 = v47;
    sub_23F15EDB8();
    sub_23F131B30();
    v39 = v38;
    sub_23F1217E8(&qword_256DFF4B8);
    *v39 = v37;
    sub_23F268648();
    v40 = sub_23F15E6B4();
    sub_23F24EF6C(v40, *MEMORY[0x24BEE26D0]);
    sub_23F250144();
    sub_23F15E96C();
    sub_23F126038(v2, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    v5 = v57;
LABEL_8:
    v42 = (uint64_t)v5;
    goto LABEL_9;
  }
  if ((v2 & 1) != 0)
  {
    sub_23F251FC4();
    v33 = v54;
    sub_23F1A936C();
    type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0);
    sub_23F12E488((uint64_t)&unk_256E03770);
    v34 = (uint64_t)v45;
    sub_23F251E54();
    sub_23F1A97E4();
    v35 = v55;
    sub_23F15E588(v33, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
  }
  else
  {
    sub_23F1F44B8();
    v41 = v53;
    sub_23F1A936C();
    sub_23F125F84();
    sub_23F12E488((uint64_t)&qword_256DFE5B8);
    v34 = v46;
    sub_23F251E54();
    sub_23F1A97E4();
    v35 = v55;
    sub_23F15E588(v41, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
  }
  sub_23F15E96C();
  sub_23F126038(v21, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
  swift_storeEnumTagMultiPayload();
  v43 = v44;
  sub_23F1BE0F4(v34, v44, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
  sub_23F1BE0F4(v43, v48, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
  v42 = (uint64_t)v57;
LABEL_9:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v42);
  sub_23F24F9F8();
  sub_23F1313FC();
}

void sub_23F1B911C()
{
  MessagePayload.ClientAction.ShimParameterResolution.init(from:)();
}

void sub_23F1B9130()
{
  MessagePayload.ClientAction.ShimParameterResolution.encode(to:)();
}

uint64_t MessagePayload.ClientAction.UnresolvedParameterValue.raw.getter()
{
  return sub_23F1EF104();
}

uint64_t MessagePayload.ClientAction.UnresolvedParameterValue.raw.setter(uint64_t a1)
{
  return sub_23F1EF140(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t (*MessagePayload.ClientAction.UnresolvedParameterValue.raw.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ClientAction.UnresolvedParameterValue.candidates.getter()
{
  return sub_23F1C2F40(type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue);
}

void MessagePayload.ClientAction.UnresolvedParameterValue.candidates.setter(uint64_t a1)
{
  sub_23F1C2F68(a1, type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue);
}

uint64_t (*MessagePayload.ClientAction.UnresolvedParameterValue.candidates.modify())()
{
  type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0);
  sub_23F180384();
  return nullsub_1;
}

void MessagePayload.ClientAction.UnresolvedParameterValue.init(raw:candidates:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23F125F84();
  sub_23F126138(a2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  *(_QWORD *)(a2 + *(int *)(type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0) + 20)) = a1;
  sub_23F12612C();
}

uint64_t sub_23F1B91F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 7823730 && a2 == 0xE300000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616469646E6163 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1B92DC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x74616469646E6163;
  else
    return 7823730;
}

uint64_t sub_23F1B9310()
{
  char *v0;

  return sub_23F1B92DC(*v0);
}

uint64_t sub_23F1B9318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B91F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1B933C()
{
  sub_23F1F44F4();
  return sub_23F2688B8();
}

uint64_t sub_23F1B9364()
{
  sub_23F1F44F4();
  return sub_23F2688C4();
}

void MessagePayload.ClientAction.UnresolvedParameterValue.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v6[3];
  char v7;

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E03778);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1F44F4();
  sub_23F18A998();
  v7 = 0;
  sub_23F125F84();
  sub_23F12E488((uint64_t)&qword_256DFE598);
  sub_23F126188();
  if (!v0)
  {
    v6[2] = *(_QWORD *)(v1
                      + *(int *)(type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0)
                               + 20));
    sub_23F250C40();
    sub_23F1217E8(&qword_256E030A8);
    sub_23F2523C0();
    sub_23F126188();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void MessagePayload.ClientAction.UnresolvedParameterValue.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F131874();
  v4 = v3;
  v16 = v5;
  v19 = sub_23F125F84();
  v17 = *(_QWORD *)(v19 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F17FBC8(v7, (uint64_t)v14);
  v18 = sub_23F1217E8(&qword_256E03788);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F125FBC();
  v10 = type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(v9);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v14 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F24F1D8(v4);
  sub_23F1F44F4();
  sub_23F1A9814();
  if (v0)
  {
    sub_23F24FB7C();
  }
  else
  {
    v14 = v4;
    v15 = v1;
    sub_23F12E488((uint64_t)&qword_256DFE5B8);
    sub_23F1A9D04();
    sub_23F17FE68();
    sub_23F24FDA0();
    sub_23F1217E8(&qword_256E030A8);
    sub_23F1A9BB8();
    sub_23F1F45AC();
    sub_23F250C4C();
    sub_23F17FE68();
    sub_23F15E444(v2, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
    *(_QWORD *)&v13[*(int *)(v10 + 20)] = v20;
    sub_23F24F0B8((uint64_t)v13, v16);
    sub_23F1802FC();
    sub_23F24F1B8((uint64_t)v13);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1B9678()
{
  MessagePayload.ClientAction.UnresolvedParameterValue.init(from:)();
}

void sub_23F1B968C()
{
  MessagePayload.ClientAction.UnresolvedParameterValue.encode(to:)();
}

void static MessagePayload.ClientAction.== infix(_:_:)()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((sub_23F1A9880() & 1) != 0)
  {
    v0 = (int *)sub_23F250208();
    sub_23F24F08C(v0[5]);
    v3 = v3 && v1 == v2;
    if (v3 || (sub_23F126148(), sub_23F15E5CC(), (v4 & 1) != 0))
    {
      sub_23F251830(v0[6]);
      sub_23F121D9C();
      if ((v5 & 1) != 0)
      {
        sub_23F251830(v0[7]);
        sub_23F122B9C();
        if ((v6 & 1) != 0)
        {
          sub_23F24FF54();
          if (v9)
          {
            if (v7)
            {
              sub_23F24F854(v8);
              if (!v3 || v10 != v11)
                sub_23F126148();
            }
          }
        }
      }
    }
  }
  sub_23F12612C();
}

uint64_t sub_23F1B973C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x6449746E657665 && a2 == 0xE700000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000017 && a2 == 0x800000023F2944C0 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v9 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_23F1B996C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1B99A0 + 4 * byte_23F278C7F[a1]))(0x6449746E657665, 0xE700000000000000);
}

uint64_t sub_23F1B99A0()
{
  return 0x64496C6F6F74;
}

uint64_t sub_23F1B99B4()
{
  return 0x6574656D61726170;
}

unint64_t sub_23F1B99D0()
{
  return 0xD000000000000017;
}

uint64_t sub_23F1B99EC()
{
  return 0x7551746E65696C63;
}

uint64_t sub_23F1B9A10()
{
  unsigned __int8 *v0;

  return sub_23F1B996C(*v0);
}

uint64_t sub_23F1B9A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B973C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1B9A3C()
{
  sub_23F1F4628();
  return sub_23F2688B8();
}

uint64_t sub_23F1B9A64()
{
  sub_23F1F4628();
  return sub_23F2688C4();
}

void MessagePayload.ClientAction.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E03790);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1F4628();
  sub_23F18A998();
  LOBYTE(v8) = 0;
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&qword_256DFEF10);
  sub_23F126188();
  if (!v0)
  {
    v6 = type metadata accessor for MessagePayload.ClientAction(0);
    LOBYTE(v8) = 1;
    sub_23F24F308();
    v8 = *(_QWORD *)(v1 + *(int *)(v6 + 24));
    HIBYTE(v7) = 2;
    sub_23F1217E8(&qword_256DFE588);
    sub_23F250E30();
    sub_23F126188();
    v8 = *(_QWORD *)(v1 + *(int *)(v6 + 28));
    HIBYTE(v7) = 3;
    sub_23F1217E8(&qword_256E037A0);
    sub_23F1F4664();
    sub_23F126188();
    LOBYTE(v8) = 4;
    sub_23F2512F4();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void MessagePayload.ClientAction.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;

  sub_23F131874();
  v16 = v15;
  v33 = v17;
  v34 = sub_23F131B8C();
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F1A94D4(v19, v32);
  sub_23F1217E8(&qword_256E037B8);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F17FFA8();
  v22 = (int *)type metadata accessor for MessagePayload.ClientAction(v21);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F126058();
  v25 = (uint64_t *)(v13 + *(int *)(v24 + 32));
  *v25 = 0;
  v25[1] = 0;
  v36 = v25;
  sub_23F24FF3C(v16);
  sub_23F1F4628();
  sub_23F24EEA4();
  if (v11)
  {
    sub_23F250744();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F17FE68();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, v35, v34);
    LOBYTE(a10) = 1;
    v26 = sub_23F24FBE0();
    v27 = (uint64_t *)(v13 + v22[5]);
    *v27 = v26;
    v27[1] = v28;
    sub_23F1217E8(&qword_256DFE588);
    sub_23F1255A4();
    sub_23F17FE68();
    *(_QWORD *)(v13 + v22[6]) = a10;
    sub_23F1217E8(&qword_256E037A0);
    sub_23F1F46E8();
    sub_23F17FE68();
    *(_QWORD *)(v13 + v22[7]) = a10;
    v29 = sub_23F268654();
    v31 = v30;
    sub_23F1A977C(v14, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    swift_bridgeObjectRelease();
    *v36 = v29;
    v36[1] = v31;
    sub_23F24F0B8(v13, v33);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v16);
    sub_23F24F1B8(v13);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1B9F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  MessagePayload.ClientAction.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1B9FA0()
{
  MessagePayload.ClientAction.encode(to:)();
}

uint64_t sub_23F1B9FBC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x656C626169726176 && a2 == 0xEC000000656D614ELL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1BA058()
{
  return 0x656C626169726176;
}

uint64_t sub_23F1BA07C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1B9FBC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1BA0A4()
{
  sub_23F1F476C();
  return sub_23F2688B8();
}

uint64_t sub_23F1BA0CC()
{
  sub_23F1F476C();
  return sub_23F2688C4();
}

void MessagePayload.ActionWillExecute.ToolParameterValue.Reference.encode(to:)()
{
  sub_23F1EBEC8();
}

void MessagePayload.ActionWillExecute.ToolParameterValue.Reference.init(from:)()
{
  sub_23F1EBFA0();
}

void sub_23F1BA154()
{
  MessagePayload.ActionWillExecute.ToolParameterValue.Reference.init(from:)();
}

void sub_23F1BA168()
{
  MessagePayload.ActionWillExecute.ToolParameterValue.Reference.encode(to:)();
}

uint64_t MessagePayload.ActionWillExecute.ToolParameterValue.Value.init(value:)(uint64_t a1)
{
  return sub_23F1EF188(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

void sub_23F1BA18C(_BYTE *a1@<X8>)
{
  char v2;

  sub_23F1EC09C();
  *a1 = v2 & 1;
}

uint64_t sub_23F1BA1B4()
{
  sub_23F1F47A8();
  return sub_23F2688B8();
}

uint64_t sub_23F1BA1DC()
{
  sub_23F1F47A8();
  return sub_23F2688C4();
}

void MessagePayload.ActionWillExecute.ToolParameterValue.Value.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;

  sub_23F1A9358();
  a17 = v19;
  a18 = v20;
  sub_23F1A9340();
  sub_23F1217E8(&qword_256E037E8);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1F47A8();
  sub_23F18A998();
  sub_23F125F84();
  sub_23F12E488((uint64_t)&qword_256DFE598);
  sub_23F1A919C();
  sub_23F15E588((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  sub_23F1A93B4();
  sub_23F18AB98();
}

void MessagePayload.ActionWillExecute.ToolParameterValue.Value.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F131874();
  v4 = v3;
  sub_23F125F84();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F24F044(v6, v12);
  sub_23F1217E8(&qword_256E037F8);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F15E9EC();
  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value(v8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F1A968C(v4);
  sub_23F1F47A8();
  sub_23F24F4C4();
  if (!v0)
  {
    sub_23F12E488((uint64_t)&qword_256DFE5B8);
    sub_23F24F138();
    sub_23F15E7D4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v10 = sub_23F24F474();
    sub_23F24FE84(v10, v11, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
  sub_23F250228();
  sub_23F1313FC();
}

void sub_23F1BA3CC()
{
  MessagePayload.ActionWillExecute.ToolParameterValue.Value.init(from:)();
}

#error "23F1BA3E8: call analysis failed (funcsize=5)"

void static MessagePayload.ActionWillExecute.ToolParameterValue.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_23F125F3C();
  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23F250D68();
  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(v5);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F24FB6C();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F1A9A0C();
  sub_23F1217E8(&qword_256DFE690);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F24F238();
  v10 = (_QWORD *)(v0 + v9);
  sub_23F251088();
  v11 = sub_23F15EB34();
  sub_23F1BE1A0(v11, v12, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
  if (sub_23F250580() == 1)
  {
    sub_23F24EF2C(v0, v13, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
    if (sub_23F250580() == 1)
    {
      sub_23F1BE0F4((uint64_t)v10, v1, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value);
      sub_23F24F288();
      _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
      v14 = sub_23F250CFC();
      sub_23F1BE0BC(v14, v15);
      sub_23F252378();
      sub_23F24F318(v16, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
      goto LABEL_15;
    }
    sub_23F1BE0BC(v2, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value);
LABEL_7:
    sub_23F24F5EC(v19, &qword_256DFE690);
    goto LABEL_15;
  }
  sub_23F250DB8(v0, v13, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
  v18 = *v3;
  v17 = v3[1];
  if (sub_23F250580() == 1)
  {
    v19 = sub_23F1317F8();
    goto LABEL_7;
  }
  if (v18 == *v10 && v17 == v10[1])
  {
    v21 = sub_23F250EA4();
  }
  else
  {
    sub_23F24F288();
    sub_23F126148();
    sub_23F1317F8();
    v21 = sub_23F1262C0();
  }
  sub_23F24F318(v21, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
LABEL_15:
  sub_23F125EFC();
}

uint64_t sub_23F1BA5CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x636E657265666572 && a2 == 0xE900000000000065;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1BA6BC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 0x636E657265666572;
}

uint64_t sub_23F1BA6F4()
{
  char *v0;

  return sub_23F1BA6BC(*v0);
}

uint64_t sub_23F1BA6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1BA5CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1BA720()
{
  sub_23F1F480C();
  return sub_23F2688B8();
}

uint64_t sub_23F1BA748()
{
  sub_23F1F480C();
  return sub_23F2688C4();
}

uint64_t sub_23F1BA770()
{
  sub_23F1F4884();
  return sub_23F2688B8();
}

uint64_t sub_23F1BA798()
{
  sub_23F1F4884();
  return sub_23F2688C4();
}

uint64_t sub_23F1BA7C0()
{
  sub_23F1F4848();
  return sub_23F2688B8();
}

uint64_t sub_23F1BA7E8()
{
  sub_23F1F4848();
  return sub_23F2688C4();
}

void MessagePayload.ActionWillExecute.ToolParameterValue.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F131874();
  v34 = v12;
  sub_23F250DF0();
  v16 = sub_23F1217E8(&qword_256E03800);
  v31 = *(_QWORD *)(v16 - 8);
  v32 = v16;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v17);
  v30 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F1A9220();
  v29[2] = type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value(v19);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F15E660();
  v21 = sub_23F1217E8(&qword_256E03808);
  v29[0] = *(_QWORD *)(v21 - 8);
  v29[1] = v21;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_23F24F060();
  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(v23);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F15EB6C();
  v33 = *(_QWORD *)(sub_23F1217E8(&qword_256E03810) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F1316E4();
  sub_23F24F270(v11);
  sub_23F1F480C();
  sub_23F251278();
  sub_23F24F864();
  sub_23F1BE1A0(a10, (uint64_t)v15, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
  sub_23F251D44();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23F24EE5C((uint64_t)v15, v14);
    sub_23F251F88();
    v26 = (uint64_t)v30;
    sub_23F24F0C0();
    sub_23F24EE74((uint64_t)&unk_256E03828);
    sub_23F1A99C0();
    sub_23F24F620();
    sub_23F15E588(v26, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
    sub_23F24F0CC(v14);
    sub_23F17FF08(v13, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
  }
  else
  {
    v28 = *v15;
    v27 = v15[1];
    LOBYTE(v35) = 0;
    sub_23F1F4884();
    sub_23F24F0C0();
    v35 = v28;
    v36 = v27;
    sub_23F1F48C0();
    sub_23F24F620();
    sub_23F15E444(v10, *(uint64_t (**)(uint64_t, uint64_t))(v29[0] + 8));
    sub_23F17FF08(v13, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    sub_23F1262C0();
  }
  sub_23F24F920();
  sub_23F1313FC();
}

void MessagePayload.ActionWillExecute.ToolParameterValue.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  sub_23F131874();
  sub_23F1AE598();
  v44 = v15;
  v46 = *(_QWORD *)(sub_23F1217E8(&qword_256E03840) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F1A982C(v17, v41);
  v45 = *(_QWORD *)(sub_23F1217E8(&qword_256E03848) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F1A94D4(v19, v42);
  v47 = *(_QWORD *)(sub_23F1217E8(&qword_256E03850) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F17FFC4();
  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(v21);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F24F254();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F1A96CC();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F251000();
  sub_23F24EE44((_QWORD *)v14);
  sub_23F1F480C();
  sub_23F1A9814();
  if (a10)
    goto LABEL_8;
  v43 = v12;
  sub_23F2522FC();
  sub_23F251290();
  if (!v25
    || (v26 = *(_BYTE *)(v14 + 32),
        v27 = sub_23F24F680(),
        sub_23F15E2D0(v27, v28, v29, v30, v31, v32),
        v34 = v33,
        v36 = v35,
        sub_23F15EB24(),
        v34 != v36 >> 1))
  {
    sub_23F15EDB8();
    sub_23F131B30();
    sub_23F251E98();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F250628();
    v37 = sub_23F15E6B4();
    sub_23F24EF6C(v37, *MEMORY[0x24BEE26D0]);
    sub_23F251024();
    sub_23F15E96C();
    sub_23F126038(v13, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
LABEL_8:
    v38 = v14;
    goto LABEL_9;
  }
  if ((v26 & 1) != 0)
  {
    sub_23F251F88();
    sub_23F24F3FC();
    type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value(0);
    sub_23F12E488((uint64_t)&unk_256E03858);
    sub_23F251E54();
    sub_23F1A97E4();
    sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
    sub_23F15E96C();
    sub_23F126038(v13, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
    sub_23F251D1C();
    v40 = v11;
  }
  else
  {
    LOBYTE(v48) = 0;
    sub_23F1F4884();
    sub_23F24F3FC();
    sub_23F1F48FC();
    sub_23F1A97E4();
    sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));
    sub_23F15E96C();
    sub_23F126038(v13, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
    *v10 = v48;
    v10[1] = v49;
    sub_23F251354();
    v40 = (uint64_t)v10;
  }
  sub_23F2504D0(v40, v39, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
  sub_23F1BE0F4(v43, v44, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
  v38 = v14;
LABEL_9:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v38);
  sub_23F24F9F8();
  sub_23F1313FC();
}

void sub_23F1BADF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  MessagePayload.ActionWillExecute.ToolParameterValue.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1BAE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  MessagePayload.ActionWillExecute.ToolParameterValue.encode(to:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_23F1BAE24()
{
  sub_23F1F4938();
  return sub_23F2688B8();
}

uint64_t sub_23F1BAE4C()
{
  sub_23F1F4938();
  return sub_23F2688C4();
}

void MessagePayload.ActionWillExecute.PromptSelection.Confirmed.encode(to:)()
{
  sub_23F1D62E0();
}

void MessagePayload.ActionWillExecute.PromptSelection.Confirmed.init(from:)(uint64_t a1)
{
  sub_23F24F884(a1);
  sub_23F24FF94();
}

void sub_23F1BAEB8()
{
  MessagePayload.ActionWillExecute.PromptSelection.Confirmed.encode(to:)();
}

IntelligenceFlow::MessagePayload::ActionWillExecute::PromptSelection::SelectedInDisambiguation __swiftcall MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation.init(index:)(IntelligenceFlow::MessagePayload::ActionWillExecute::PromptSelection::SelectedInDisambiguation index)
{
  IntelligenceFlow::MessagePayload::ActionWillExecute::PromptSelection::SelectedInDisambiguation *v1;

  v1->index = index.index;
  return index;
}

BOOL static MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23F1BAEE8()
{
  return 0x7865646E69;
}

void sub_23F1BAF00(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F1E8A38(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F1BAF28()
{
  sub_23F1F4974();
  return sub_23F2688B8();
}

uint64_t sub_23F1BAF50()
{
  sub_23F1F4974();
  return sub_23F2688C4();
}

void MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation.encode(to:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F131874();
  sub_23F2519E8();
  sub_23F1217E8(&qword_256E03878);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F126058();
  sub_23F12545C(v0, v0[3]);
  sub_23F1F4974();
  sub_23F24FC04();
  sub_23F268744();
  sub_23F17FF08(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  sub_23F131874();
  a19 = v24;
  a20 = v25;
  sub_23F24F910();
  sub_23F1217E8(&qword_256E03888);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1F4974();
  sub_23F15E564();
  if (!v22)
  {
    sub_23F250EDC();
    v29 = sub_23F2686A8();
    sub_23F17FF08((uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    *v21 = v29;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v20);
  sub_23F1A9634();
  sub_23F1313FC();
}

#error "23F1BB0CC: call analysis failed (funcsize=5)"

void sub_23F1BB0D8()
{
  MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation.encode(to:)();
}

uint64_t sub_23F1BB0F8()
{
  sub_23F1F49B0();
  return sub_23F2688B8();
}

uint64_t sub_23F1BB120()
{
  sub_23F1F49B0();
  return sub_23F2688C4();
}

void MessagePayload.ActionWillExecute.PromptSelection.Denied.encode(to:)()
{
  sub_23F1D62E0();
}

void MessagePayload.ActionWillExecute.PromptSelection.Denied.init(from:)(uint64_t a1)
{
  sub_23F24F884(a1);
  sub_23F24FF94();
}

void sub_23F1BB18C()
{
  MessagePayload.ActionWillExecute.PromptSelection.Denied.encode(to:)();
}

uint64_t static MessagePayload.ActionWillExecute.PromptSelection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;

  v2 = *(unsigned __int8 *)(a2 + 8);
  if (!*(_BYTE *)(a1 + 8))
  {
    if (!*(_BYTE *)(a2 + 8))
      return _s16IntelligenceFlow14MessagePayloadO9TerminateV2eeoiySbAE_AEtFZ_0();
    return 0;
  }
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    if (v2 == 1)
      return *(_QWORD *)a1 == *(_QWORD *)a2;
    return 0;
  }
  if (v2 != 2)
    return 0;
  return _s16IntelligenceFlow14MessagePayloadO9TerminateV2eeoiySbAE_AEtFZ_0();
}

uint64_t sub_23F1BB1E8(char a1)
{
  if (!a1)
    return 0x656D7269666E6F63;
  if (a1 == 1)
    return 0xD000000000000018;
  return 0x6465696E6564;
}

uint64_t sub_23F1BB244()
{
  char *v0;

  return sub_23F1BB1E8(*v0);
}

void sub_23F1BB24C(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F1E890C(a1, a2);
  *a3 = v4;
}

uint64_t sub_23F1BB270()
{
  sub_23F1F49EC();
  return sub_23F2688B8();
}

uint64_t sub_23F1BB298()
{
  sub_23F1F49EC();
  return sub_23F2688C4();
}

uint64_t sub_23F1BB2C0()
{
  sub_23F1F4B18();
  return sub_23F2688B8();
}

uint64_t sub_23F1BB2E8()
{
  sub_23F1F4B18();
  return sub_23F2688C4();
}

uint64_t sub_23F1BB310()
{
  sub_23F1F4A28();
  return sub_23F2688B8();
}

uint64_t sub_23F1BB338()
{
  sub_23F1F4A28();
  return sub_23F2688C4();
}

uint64_t sub_23F1BB360()
{
  sub_23F1F4AA0();
  return sub_23F2688B8();
}

uint64_t sub_23F1BB388()
{
  sub_23F1F4AA0();
  return sub_23F2688C4();
}

void MessagePayload.ActionWillExecute.PromptSelection.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;

  sub_23F131874();
  sub_23F24FA04();
  sub_23F1217E8(&qword_256E038A0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F1316E4();
  sub_23F1217E8(&qword_256E038A8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F15EB6C();
  sub_23F1217E8(&qword_256E038B0);
  sub_23F2512AC();
  v13 = v5;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F15E524();
  sub_23F1217E8(&qword_256E038B8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15E50C();
  v8 = *(unsigned __int8 *)(v2 + 8);
  sub_23F24F270(v1);
  sub_23F1F49EC();
  sub_23F15EBF0();
  if (v8)
  {
    if (v8 == 1)
    {
      sub_23F252024();
      sub_23F15E6E8();
      sub_23F1F4ADC();
      sub_23F251AA4();
      v9 = sub_23F24FA10();
    }
    else
    {
      sub_23F251EF8();
      sub_23F15E6E8();
      sub_23F1F4A64();
      sub_23F251AA4();
      v9 = sub_23F2500BC();
    }
    sub_23F15E588(v9, v10);
    v11 = sub_23F24FBB0();
  }
  else
  {
    sub_23F1F4B18();
    sub_23F15E6E8();
    sub_23F1F4B54();
    sub_23F251AA4();
    sub_23F1A977C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    v11 = sub_23F15EB40();
  }
  v12(v11);
  sub_23F24F920();
  sub_23F1313FC();
}

void MessagePayload.ActionWillExecute.PromptSelection.init(from:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;

  sub_23F131874();
  v61 = v1;
  v5 = v4;
  v57 = v6;
  v7 = sub_23F1217E8(&qword_256E038F8);
  sub_23F251E80(v7);
  v55 = v8;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F1A982C(v10, v48);
  v56 = sub_23F1217E8(&qword_256E03900);
  v54 = *(_QWORD *)(v56 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1A94D4(v12, v48);
  v13 = sub_23F1217E8(&qword_256E03908);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F1319C8();
  v15 = sub_23F1217E8(&qword_256E03910);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = v5;
  sub_23F24EE44(v5);
  sub_23F1F49EC();
  v19 = v61;
  sub_23F18037C();
  if (v19)
    goto LABEL_10;
  v51 = v13;
  v52 = v2;
  v50 = v0;
  v21 = v58;
  v20 = v59;
  v53 = v3;
  v61 = v18;
  sub_23F2514C4();
  sub_23F250B7C();
  v22 = v15;
  if (!v23)
  {
LABEL_9:
    v38 = v61;
    v39 = v53;
    v40 = sub_23F15EDB8();
    sub_23F131B30();
    v42 = v41;
    sub_23F1217E8(&qword_256DFF4B8);
    *v42 = &type metadata for MessagePayload.ActionWillExecute.PromptSelection;
    sub_23F2503CC();
    sub_23F15E6B4();
    sub_23F24F678((uint64_t)v42, *MEMORY[0x24BEE26D0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104));
    swift_willThrow();
    sub_23F15E96C();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v22);
    goto LABEL_10;
  }
  v49 = 0;
  v24 = v15;
  sub_23F24FC44();
  v26 = *(unsigned __int8 *)(v25 + 32);
  v27 = sub_23F24FC34();
  sub_23F15E2D0(v27, v28, v29, v30, v31, v32);
  v34 = v33;
  v36 = v35;
  sub_23F131790();
  if (v34 != v36 >> 1)
  {
    v22 = v24;
    goto LABEL_9;
  }
  if (v26)
  {
    if (v26 == 1)
    {
      sub_23F252024();
      sub_23F2503A4();
      sub_23F1F4BCC();
      sub_23F24ECC0();
      v37 = v53;
      sub_23F126038(v21, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
      sub_23F17FAB4();
      sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
      v46 = v62;
    }
    else
    {
      sub_23F251EF8();
      sub_23F2503A4();
      sub_23F1F4B90();
      sub_23F2686B4();
      sub_23F250EC4();
      sub_23F15E444(v20, *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8));
      sub_23F17FAB4();
      sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
      v46 = 0;
    }
    goto LABEL_15;
  }
  sub_23F1F4B18();
  v43 = v52;
  v44 = (uint64_t)v61;
  v45 = v49;
  sub_23F26863C();
  if (!v45)
  {
    sub_23F1F4C08();
    sub_23F18012C();
    sub_23F15E588(v43, *(uint64_t (**)(uint64_t, uint64_t))(v50 + 8));
    sub_23F15E5EC();
    sub_23F15E444(v44, *(uint64_t (**)(uint64_t, uint64_t))(v53 + 8));
    v46 = 0;
LABEL_15:
    v47 = v57;
    *v57 = v46;
    *((_BYTE *)v47 + 8) = v26;
    goto LABEL_10;
  }
  sub_23F15E5EC();
  sub_23F15E444(v44, *(uint64_t (**)(uint64_t, uint64_t))(v53 + 8));
LABEL_10:
  sub_23F1A9CF0();
  sub_23F17FDF4();
  sub_23F1313FC();
}

void sub_23F1BBA68()
{
  MessagePayload.ActionWillExecute.PromptSelection.init(from:)();
}

void sub_23F1BBA7C()
{
  MessagePayload.ActionWillExecute.PromptSelection.encode(to:)();
}

void MessagePayload.ActionWillExecute.ParameterValue.value.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F250D08();
  sub_23F1BE1A0(v0, v1, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
}

void MessagePayload.ActionWillExecute.ParameterValue.value.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F1F4C44(a1, v1, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
}

uint64_t (*MessagePayload.ActionWillExecute.ParameterValue.value.modify())()
{
  return nullsub_1;
}

void MessagePayload.ActionWillExecute.ParameterValue.promptSelection.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v2 = sub_23F1A9744();
  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(v2) + 20));
  v4 = *v3;
  LOBYTE(v3) = *((_BYTE *)v3 + 8);
  *(_QWORD *)v0 = v4;
  *(_BYTE *)(v0 + 8) = (_BYTE)v3;
  sub_23F126078();
}

void MessagePayload.ActionWillExecute.ParameterValue.promptSelection.setter()
{
  uint64_t v0;

  v0 = type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(0);
  sub_23F252320(v0);
  sub_23F12612C();
}

uint64_t (*MessagePayload.ActionWillExecute.ParameterValue.promptSelection.modify())()
{
  type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(0);
  sub_23F180384();
  return nullsub_1;
}

void MessagePayload.ActionWillExecute.ParameterValue.init(value:promptSelection:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);

  sub_23F2520C0();
  v3 = v0 + *(int *)(type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(0) + 20);
  v4 = sub_23F1317E0();
  sub_23F1BE0F4(v4, v5, v6);
  *(_QWORD *)v3 = v1;
  *(_BYTE *)(v3 + 8) = v2;
  sub_23F131ABC();
}

void static MessagePayload.ActionWillExecute.ParameterValue.== infix(_:_:)()
{
  char v0;

  sub_23F180250();
  static MessagePayload.ActionWillExecute.ToolParameterValue.== infix(_:_:)();
  if ((v0 & 1) != 0)
    type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(0);
  sub_23F126078();
}

uint64_t sub_23F1BBC48(char a1)
{
  if ((a1 & 1) != 0)
    return 0x655374706D6F7270;
  else
    return 0x65756C6176;
}

uint64_t sub_23F1BBC88()
{
  char *v0;

  return sub_23F1BBC48(*v0);
}

void sub_23F1BBC90(_BYTE *a1@<X8>)
{
  char v2;

  sub_23F1E8484();
  *a1 = v2;
}

uint64_t sub_23F1BBCB4()
{
  sub_23F1F4C8C();
  return sub_23F2688B8();
}

uint64_t sub_23F1BBCDC()
{
  sub_23F1F4C8C();
  return sub_23F2688C4();
}

void MessagePayload.ActionWillExecute.ParameterValue.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[3];
  char v8;
  char v9;

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E03930);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1F4C8C();
  sub_23F18A998();
  v9 = 0;
  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(0);
  sub_23F12E488((uint64_t)&unk_256E03940);
  sub_23F126188();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(0);
    sub_23F2515A0();
    LOBYTE(v5) = *(_BYTE *)(v5 + 8);
    v7[2] = v6;
    v8 = v5;
    sub_23F250C40();
    sub_23F1F4CC8();
    sub_23F17FAD8();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void MessagePayload.ActionWillExecute.ParameterValue.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  sub_23F131874();
  v5 = v4;
  v17 = v6;
  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F17FBC8(v8, v16);
  sub_23F1217E8(&qword_256E03950);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F1A9864();
  type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(v10);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1319B0();
  v13 = v3 + *(int *)(v12 + 20);
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = -1;
  sub_23F1A968C(v5);
  sub_23F1F4C8C();
  sub_23F18037C();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F12E488((uint64_t)&unk_256E03958);
    sub_23F1A9D04();
    sub_23F17FE68();
    sub_23F1BE0F4(v18, v3, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
    sub_23F1A9BB8();
    sub_23F1F4D04();
    sub_23F24F908();
    sub_23F15E444(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *(_QWORD *)v13 = v19;
    *(_BYTE *)(v13 + 8) = v20;
    sub_23F24F0B8(v3, v17);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v5);
    v14 = sub_23F251508();
    sub_23F1BE0BC(v14, v15);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1BBFF0()
{
  MessagePayload.ActionWillExecute.ParameterValue.init(from:)();
}

void sub_23F1BC004()
{
  MessagePayload.ActionWillExecute.ParameterValue.encode(to:)();
}

uint64_t MessagePayload.ActionWillExecute.statementId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F25061C(*(_QWORD *)(v1 + 16), a1);
}

void MessagePayload.ActionWillExecute.statementId.setter()
{
  sub_23F25039C();
  sub_23F25168C();
  sub_23F12612C();
}

uint64_t (*MessagePayload.ActionWillExecute.statementId.modify())()
{
  return nullsub_1;
}

void MessagePayload.ActionWillExecute.toolId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void MessagePayload.ActionWillExecute.toolId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15E844();
  sub_23F25167C();
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v0;
  sub_23F12612C();
}

uint64_t (*MessagePayload.ActionWillExecute.toolId.modify())()
{
  return nullsub_1;
}

void MessagePayload.ActionWillExecute.bundleId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void MessagePayload.ActionWillExecute.bundleId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15E844();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v0;
  sub_23F12612C();
}

uint64_t (*MessagePayload.ActionWillExecute.bundleId.modify())()
{
  return nullsub_1;
}

void MessagePayload.ActionWillExecute.deviceId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void MessagePayload.ActionWillExecute.deviceId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15E844();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v0;
  sub_23F12612C();
}

uint64_t (*MessagePayload.ActionWillExecute.deviceId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ActionWillExecute.isConfirmed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t MessagePayload.ActionWillExecute.isConfirmed.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = result;
  return result;
}

uint64_t (*MessagePayload.ActionWillExecute.isConfirmed.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ActionWillExecute.parameterValues.getter()
{
  return swift_bridgeObjectRetain();
}

void MessagePayload.ActionWillExecute.parameterValues.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = a1;
  sub_23F126078();
}

uint64_t (*MessagePayload.ActionWillExecute.parameterValues.modify())()
{
  return nullsub_1;
}

void MessagePayload.ActionWillExecute.planEventId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void MessagePayload.ActionWillExecute.planEventId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15E844();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 88) = v2;
  *(_QWORD *)(v1 + 96) = v0;
  sub_23F12612C();
}

uint64_t (*MessagePayload.ActionWillExecute.planEventId.modify())()
{
  return nullsub_1;
}

__n128 MessagePayload.ActionWillExecute.init(statementId:toolId:bundleId:deviceId:isConfirmed:parameterValues:planEventId:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10, uint64_t a11)
{
  __n128 result;

  result = a10;
  *(_DWORD *)a9 = *(_DWORD *)a1;
  *(_OWORD *)(a9 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a9 + 24) = a2;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = a5;
  *(_QWORD *)(a9 + 56) = a6;
  *(_QWORD *)(a9 + 64) = a7;
  *(_BYTE *)(a9 + 72) = a8;
  *(__n128 *)(a9 + 80) = a10;
  *(_QWORD *)(a9 + 96) = a11;
  return result;
}

uint64_t static MessagePayload.ActionWillExecute.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t result;
  char v17;
  char v19;
  char v21;
  char v23;
  char v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;

  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    return 0;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a2 + 48);
  v14 = *(_QWORD *)(a2 + 64);
  if (!v3)
  {
    v30 = *(_QWORD *)(a2 + 56);
    v31 = *(_QWORD *)(a1 + 56);
    v32 = *(unsigned __int8 *)(a2 + 72);
    v33 = *(unsigned __int8 *)(a1 + 72);
    v26 = *(_QWORD *)(a2 + 88);
    v27 = *(_QWORD *)(a2 + 96);
    v28 = *(_QWORD *)(a1 + 96);
    v29 = *(_QWORD *)(a1 + 88);
    if (v9)
      return 0;
    goto LABEL_11;
  }
  if (!v9)
    return 0;
  v30 = *(_QWORD *)(a2 + 56);
  v31 = *(_QWORD *)(a1 + 56);
  v32 = *(unsigned __int8 *)(a2 + 72);
  v33 = *(unsigned __int8 *)(a1 + 72);
  v26 = *(_QWORD *)(a2 + 88);
  v27 = *(_QWORD *)(a2 + 96);
  v28 = *(_QWORD *)(a1 + 96);
  v29 = *(_QWORD *)(a1 + 88);
  v15 = *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && v3 == v9;
  if (v15 || (sub_23F126148(), result = sub_23F15E5CC(), (v17 & 1) != 0))
  {
LABEL_11:
    if (v4 != v10 || v6 != v12)
    {
      sub_23F126148();
      result = sub_23F15E5CC();
      if ((v19 & 1) == 0)
        return result;
    }
    if (v7)
    {
      if (!v13)
        return 0;
      if (v5 != v11 || v7 != v13)
      {
        sub_23F126148();
        result = sub_23F15E5CC();
        if ((v21 & 1) == 0)
          return result;
      }
    }
    else if (v13)
    {
      return 0;
    }
    if (v8)
    {
      if (!v14)
        return 0;
      if (v31 == v30 && v8 == v14)
      {
        if (v33 != v32)
          return 0;
      }
      else
      {
        sub_23F126148();
        result = sub_23F15E5CC();
        if ((v23 & 1) == 0 || ((v33 ^ v32) & 1) != 0)
          return result;
      }
    }
    else
    {
      result = 0;
      if (v14 || ((v33 ^ v32) & 1) != 0)
        return result;
    }
    sub_23F122610();
    if ((v24 & 1) != 0)
    {
      if (v28)
      {
        if (v27)
        {
          v25 = v29 == v26 && v28 == v27;
          if (v25 || (sub_23F126148() & 1) != 0)
            return 1;
        }
      }
      else if (!v27)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t static StatementID.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  if (*(_DWORD *)a1 == *(_DWORD *)a2)
  {
    v3 = *(_QWORD *)(a1 + 16);
    v4 = *(_QWORD *)(a2 + 16);
    if (v3)
    {
      if (v4)
      {
        v5 = *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && v3 == v4;
        if (v5 || (sub_23F126148() & 1) != 0)
          return 1;
      }
    }
    else if (!v4)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_23F1BC494(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6449656369766564 && a2 == 0xE800000000000000;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x7269666E6F437369 && a2 == 0xEB0000000064656DLL;
          if (v9 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x6574656D61726170 && a2 == 0xEF7365756C615672;
            if (v10 || (sub_23F268798() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x6E6576456E616C70 && a2 == 0xEB00000000644974)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = sub_23F268798();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_23F1BC7C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1BC7FC + 4 * byte_23F278C84[a1]))(0x6E656D6574617473, 0xEB00000000644974);
}

uint64_t sub_23F1BC7FC()
{
  return 0x64496C6F6F74;
}

uint64_t sub_23F1BC810()
{
  return 0x6449656C646E7562;
}

uint64_t sub_23F1BC83C()
{
  return 0x7269666E6F437369;
}

uint64_t sub_23F1BC85C()
{
  return 0x6574656D61726170;
}

uint64_t sub_23F1BC880()
{
  return 0x6E6576456E616C70;
}

uint64_t sub_23F1BC894()
{
  unsigned __int8 *v0;

  return sub_23F1BC7C0(*v0);
}

uint64_t sub_23F1BC89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1BC494(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1BC8C0()
{
  sub_23F1F4D40();
  return sub_23F2688B8();
}

uint64_t sub_23F1BC8E8()
{
  sub_23F1F4D40();
  return sub_23F2688C4();
}

void MessagePayload.ActionWillExecute.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  sub_23F131874();
  v3 = v2;
  v6 = *(_QWORD *)(sub_23F1217E8(&qword_256E03968) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F1316E4();
  sub_23F24F270(v3);
  sub_23F1F4D40();
  sub_23F251278();
  sub_23F24FDB4();
  sub_23F163BDC();
  sub_23F250AE0();
  if (v0)
  {
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  }
  else
  {
    sub_23F2504A8();
    sub_23F250F18();
    sub_23F268720();
    sub_23F2512C8();
    sub_23F24F89C();
    sub_23F251C00();
    sub_23F2504D8();
    sub_23F24F89C();
    sub_23F250F18();
    sub_23F26872C();
    sub_23F251B40();
    sub_23F1217E8(&qword_256E03978);
    sub_23F1F4D7C();
    sub_23F250F18();
    sub_23F268750();
    sub_23F24F89C();
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  }
  sub_23F126038(v1, v5);
  sub_23F15E830();
  sub_23F1313FC();
}

void MessagePayload.ActionWillExecute.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;

  sub_23F131874();
  v4 = v3;
  v6 = v5;
  sub_23F1217E8(&qword_256E03990);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F1319C8();
  v8 = (_QWORD *)sub_23F126358();
  sub_23F12545C(v8, v9);
  sub_23F1F4D40();
  sub_23F24FFB4();
  if (v0)
  {
    sub_23F250D3C();
    sub_23F131930();
    sub_23F131790();
  }
  else
  {
    sub_23F163D7C();
    sub_23F2507CC();
    sub_23F18012C();
    v31 = v28;
    sub_23F2504A8();
    sub_23F126140();
    sub_23F2516B4();
    v26 = sub_23F268684();
    sub_23F2512C8();
    v11 = v10;
    sub_23F130928();
    v27 = v11;
    v12 = sub_23F24FD38();
    v14 = v13;
    v24 = v12;
    v25 = v6;
    sub_23F251C00();
    sub_23F130928();
    v15 = sub_23F24FD38();
    v17 = v16;
    LOBYTE(v28) = 4;
    sub_23F130928();
    sub_23F2516B4();
    v23 = sub_23F268690();
    sub_23F1217E8(&qword_256E03978);
    sub_23F251B40();
    sub_23F1F4E00();
    sub_23F2507CC();
    sub_23F18012C();
    sub_23F126140();
    v18 = sub_23F24FD38();
    v20 = v19;
    v21 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
    v22 = v18;
    sub_23F15E44C(v1, v21);
    sub_23F1315C4();
    sub_23F14C66C();
    *(_DWORD *)v25 = v31;
    *(_QWORD *)(v25 + 8) = v29;
    *(_QWORD *)(v25 + 16) = v30;
    *(_QWORD *)(v25 + 24) = v26;
    *(_QWORD *)(v25 + 32) = v27;
    *(_QWORD *)(v25 + 40) = v24;
    *(_QWORD *)(v25 + 48) = v14;
    *(_QWORD *)(v25 + 56) = v15;
    *(_QWORD *)(v25 + 64) = v17;
    *(_BYTE *)(v25 + 72) = v23 & 1;
    *(_QWORD *)(v25 + 80) = v28;
    *(_QWORD *)(v25 + 88) = v22;
    *(_QWORD *)(v25 + 96) = v20;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v4);
    sub_23F1317F8();
    sub_23F1318DC();
    sub_23F131790();
    sub_23F131930();
    sub_23F1262C0();
  }
  swift_bridgeObjectRelease();
  sub_23F15EAFC();
  sub_23F1313FC();
}

void sub_23F1BCE88()
{
  MessagePayload.ActionWillExecute.init(from:)();
}

void sub_23F1BCE9C()
{
  MessagePayload.ActionWillExecute.encode(to:)();
}

void static MessagePayload.ClientEffectResolved.Result.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  void *v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;

  sub_23F125F3C();
  v30 = v1;
  v2 = sub_23F125F84();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = sub_23F17FFC4();
  type metadata accessor for MessagePayload.ClientEffectResolved.Result(v4);
  sub_23F125F30();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v29 - v9;
  sub_23F1217E8(&qword_256E039A8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F24F238();
  v13 = v0 + v12;
  v14 = sub_23F251450();
  sub_23F1BE1A0(v14, v15, type metadata accessor for MessagePayload.ClientEffectResolved.Result);
  sub_23F1BE1A0(v30, v13, type metadata accessor for MessagePayload.ClientEffectResolved.Result);
  if (sub_23F24EF64() == 1)
  {
    sub_23F250BE4(v0, v16, type metadata accessor for MessagePayload.ClientEffectResolved.Result);
    v17 = *(void **)v8;
    v18 = v8[8];
    if (sub_23F24EF64() == 1)
    {
      v19 = *(void **)v13;
      v20 = *(_BYTE *)(v13 + 8);
      if ((v18 & 1) != 0)
      {
        sub_23F250B74(v17);
        v21 = v17;
      }
      else
      {
        sub_23F250F74(v17);
        v21 = (void *)sub_23F267CA0();
        sub_23F146BE8(v17);
      }
      if ((v20 & 1) != 0)
      {
        sub_23F250B74(v19);
        v28 = v19;
      }
      else
      {
        sub_23F250F74(v19);
        v28 = (void *)sub_23F267CA0();
        sub_23F146BE8(v19);
      }
      sub_23F13111C();
      sub_23F268444();

      sub_23F252288();
      sub_23F252384();
      goto LABEL_15;
    }
    sub_23F252384();
  }
  else
  {
    sub_23F24FE90(v0, v16, type metadata accessor for MessagePayload.ClientEffectResolved.Result);
    if (sub_23F24EF64() != 1)
    {
      v23 = sub_23F2514A8();
      v24(v23);
      sub_23F2514CC();
      _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
      v25 = *(void (**)(uint64_t))(v3 + 8);
      v26 = sub_23F250840();
      v25(v26);
      v27 = ((uint64_t (*)(char *, uint64_t))v25)(v10, v2);
LABEL_15:
      sub_23F24F318(v27, type metadata accessor for MessagePayload.ClientEffectResolved.Result);
      goto LABEL_16;
    }
    v22 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  sub_23F24F5EC(v22, &qword_256E039A8);
LABEL_16:
  sub_23F125EFC();
}

uint64_t sub_23F1BD0EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6574656C706D6F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1BD1D0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726F727265;
  else
    return 0x6574656C706D6F63;
}

uint64_t sub_23F1BD204(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x74757074756FLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1BD280()
{
  return 0x74757074756FLL;
}

uint64_t sub_23F1BD294()
{
  char *v0;

  return sub_23F1BD1D0(*v0);
}

uint64_t sub_23F1BD29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1BD0EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1BD2C0()
{
  sub_23F1F4E84();
  return sub_23F2688B8();
}

uint64_t sub_23F1BD2E8()
{
  sub_23F1F4E84();
  return sub_23F2688C4();
}

uint64_t sub_23F1BD314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1BD204(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1BD33C()
{
  sub_23F1F4EFC();
  return sub_23F2688B8();
}

uint64_t sub_23F1BD364()
{
  sub_23F1F4EFC();
  return sub_23F2688C4();
}

uint64_t sub_23F1BD38C()
{
  sub_23F1F4EC0();
  return sub_23F2688B8();
}

uint64_t sub_23F1BD3B4()
{
  sub_23F1F4EC0();
  return sub_23F2688C4();
}

void MessagePayload.ClientEffectResolved.Result.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;

  sub_23F131874();
  v34 = v2;
  v32 = v1;
  v7 = v6;
  v8 = sub_23F1217E8(&qword_256E039B0);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F24ED84(v10, v27[0]);
  v11 = sub_23F1217E8(&qword_256E039B8);
  sub_23F251AAC(v11);
  v28 = v12;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F1A9480();
  v29 = sub_23F268078();
  v27[0] = *(_QWORD *)(v29 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F24F060();
  type metadata accessor for MessagePayload.ClientEffectResolved.Result(v15);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F126058();
  v33 = sub_23F1217E8(&qword_256E039C0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F1A968C(v7);
  sub_23F1F4E84();
  sub_23F15EBF0();
  sub_23F1BE1A0(v32, v3, type metadata accessor for MessagePayload.ClientEffectResolved.Result);
  sub_23F2514A8();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = *(void **)v3;
    v21 = *(_BYTE *)(v3 + 8);
    sub_23F251FD0();
    v22 = v27[1];
    sub_23F15E6E8();
    v35 = v20;
    LOBYTE(v36) = v21;
    sub_23F1BE364();
    sub_23F24F620();
    sub_23F15E7D4(v22, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    sub_23F15E444((uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_23F131164(v20);
  }
  else
  {
    v23 = v27[0];
    v24 = sub_23F2522E4();
    sub_23F1263C0(v24, v25, v26);
    sub_23F1F4EFC();
    sub_23F15E6E8();
    sub_23F12E488((uint64_t)&qword_256DFE598);
    sub_23F24F620();
    sub_23F15E444(v5, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  sub_23F24F920();
  sub_23F1313FC();
}

void MessagePayload.ClientEffectResolved.Result.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  sub_23F131874();
  v6 = v5;
  v37 = v7;
  v39 = *(_QWORD *)(sub_23F1217E8(&qword_256E039E0) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F1A94D4(v9, v34);
  v38 = *(_QWORD *)(sub_23F1217E8(&qword_256E039E8) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F17FFE0(v11, v35);
  v40 = *(_QWORD *)(sub_23F1217E8(&qword_256E039F0) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F125FBC();
  type metadata accessor for MessagePayload.ClientEffectResolved.Result(v13);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F24F5D0();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1A96CC();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F250FF0();
  sub_23F24EE44(v6);
  sub_23F1F4E84();
  sub_23F2509F4();
  sub_23F1A9814();
  if (v1)
    goto LABEL_8;
  v36 = v3;
  sub_23F252400();
  sub_23F251290();
  v17 = v2;
  if (!v18
    || (v19 = *(_BYTE *)(v4 + 32),
        v20 = sub_23F24F680(),
        sub_23F15E2D0(v20, v21, v22, v23, v24, v25),
        v27 = v26,
        v29 = v28,
        sub_23F15EB24(),
        v27 != v29 >> 1))
  {
    sub_23F15EDB8();
    sub_23F131B30();
    sub_23F251E98();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F250628();
    v30 = sub_23F15E6B4();
    sub_23F24EF6C(v30, *MEMORY[0x24BEE26D0]);
    sub_23F251024();
    sub_23F15E96C();
    sub_23F126038(v17, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
LABEL_8:
    v31 = (uint64_t)v6;
    goto LABEL_9;
  }
  if ((v19 & 1) != 0)
  {
    sub_23F251FD0();
    sub_23F24F3FC();
    sub_23F1BE3A0();
    sub_23F1A97E4();
    sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
    sub_23F15E96C();
    sub_23F126038(v17, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
    *(_QWORD *)v4 = v41;
    *(_BYTE *)(v4 + 8) = v42;
    sub_23F251D1C();
    v33 = v4;
  }
  else
  {
    sub_23F1F4EFC();
    sub_23F24F3FC();
    sub_23F125F84();
    sub_23F12E488((uint64_t)&qword_256DFE5B8);
    sub_23F251E54();
    sub_23F1A97E4();
    sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
    sub_23F15E96C();
    sub_23F126038(v17, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
    sub_23F251354();
    v33 = v0;
  }
  sub_23F2504D0(v33, v32, type metadata accessor for MessagePayload.ClientEffectResolved.Result);
  sub_23F1BE0F4(v36, v37, type metadata accessor for MessagePayload.ClientEffectResolved.Result);
  v31 = (uint64_t)v6;
LABEL_9:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v31);
  sub_23F24F9F8();
  sub_23F1313FC();
}

void sub_23F1BD9F0()
{
  MessagePayload.ClientEffectResolved.Result.init(from:)();
}

void sub_23F1BDA04()
{
  MessagePayload.ClientEffectResolved.Result.encode(to:)();
}

uint64_t MessagePayload.ClientEffectResolved.stepId.getter()
{
  return sub_23F1EF104();
}

void MessagePayload.ClientEffectResolved.result.getter()
{
  sub_23F1BDFB4(type metadata accessor for MessagePayload.ClientEffectResolved);
}

void static MessagePayload.ClientEffectResolved.== infix(_:_:)()
{
  uint64_t v0;

  if ((sub_23F1A9880() & 1) != 0)
  {
    v0 = type metadata accessor for MessagePayload.ClientEffectResolved(0);
    sub_23F24FD00(v0);
    static MessagePayload.ClientEffectResolved.Result.== infix(_:_:)();
  }
  else
  {
    sub_23F126078();
  }
}

uint64_t sub_23F1BDA74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x644970657473 && a2 == 0xE600000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1BDB58(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746C75736572;
  else
    return 0x644970657473;
}

uint64_t sub_23F1BDB80()
{
  char *v0;

  return sub_23F1BDB58(*v0);
}

uint64_t sub_23F1BDB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1BDA74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1BDBAC()
{
  sub_23F1F4F38();
  return sub_23F2688B8();
}

uint64_t sub_23F1BDBD4()
{
  sub_23F1F4F38();
  return sub_23F2688C4();
}

void MessagePayload.ClientEffectResolved.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v6[16];

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E039F8);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F1F4F38();
  sub_23F18A998();
  v6[15] = 0;
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&qword_256DFEF10);
  sub_23F126188();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ClientEffectResolved(0);
    v5 = sub_23F2515B0();
    type metadata accessor for MessagePayload.ClientEffectResolved.Result(v5);
    sub_23F12E488((uint64_t)&unk_256E03A08);
    sub_23F17F99C();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void MessagePayload.ClientEffectResolved.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23F131874();
  v5 = v4;
  v21 = v6;
  v22 = type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  v24 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23F131B8C();
  v23 = *(_QWORD *)(v26 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F24F044(v10, v18);
  v25 = sub_23F1217E8(&qword_256E03A10);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F1A9480();
  v13 = type metadata accessor for MessagePayload.ClientEffectResolved(v12);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F15E524();
  sub_23F24EE44(v5);
  sub_23F1F4F38();
  sub_23F2506AC();
  if (v1)
  {
    sub_23F1A9CF0();
  }
  else
  {
    v19 = v2;
    v20 = v5;
    v15 = v23;
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F1A9D04();
    v16 = v26;
    sub_23F1A97E4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v0, v27, v16);
    sub_23F1A9BB8();
    sub_23F12E488((uint64_t)&unk_256E03A18);
    sub_23F1A97E4();
    v17 = sub_23F126038(v3, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    sub_23F251CA8(v17, v0 + *(int *)(v13 + 20), type metadata accessor for MessagePayload.ClientEffectResolved.Result);
    sub_23F24F0B8(v0, v21);
    sub_23F1802FC();
    sub_23F24F1B8(v0);
  }
  sub_23F24F9F8();
  sub_23F1313FC();
}

void sub_23F1BDF4C()
{
  MessagePayload.ClientEffectResolved.init(from:)();
}

void sub_23F1BDF60()
{
  MessagePayload.ClientEffectResolved.encode(to:)();
}

uint64_t MessagePayload.ClientActionResult.eventId.getter()
{
  return sub_23F1EF104();
}

uint64_t MessagePayload.ClientActionResult.eventId.setter(uint64_t a1)
{
  return sub_23F1EF140(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*MessagePayload.ClientActionResult.eventId.modify())()
{
  return nullsub_1;
}

void MessagePayload.ClientActionResult.statementOutcome.getter()
{
  sub_23F1BDFB4(type metadata accessor for MessagePayload.ClientActionResult);
}

void sub_23F1BDFB4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = sub_23F24F3E8(a1);
  sub_23F251198(*(int *)(v1 + 20));
  sub_23F12612C();
}

void MessagePayload.ClientActionResult.statementOutcome.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F2507D8();
  type metadata accessor for MessagePayload.ClientActionResult(v1);
  sub_23F180384();
  sub_23F1F4C44(v0, v2, type metadata accessor for StatementOutcome);
  sub_23F126078();
}

uint64_t (*MessagePayload.ClientActionResult.statementOutcome.modify())()
{
  type metadata accessor for MessagePayload.ClientActionResult(0);
  sub_23F180384();
  return nullsub_1;
}

void MessagePayload.ClientActionResult.outcome.getter()
{
  sub_23F25219C();
  sub_23F251D50();
  sub_23F126078();
}

void MessagePayload.ClientActionResult.outcome.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F250200();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F250508();
  sub_23F250838(v3, type metadata accessor for ActionOutcome);
  v4 = type metadata accessor for MessagePayload.ClientActionResult(0);
  sub_23F1F4C44(v1, v0 + *(int *)(v4 + 20), type metadata accessor for StatementOutcome);
  sub_23F12612C();
}

void sub_23F1BE0BC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F24F690(a1, a2);
  sub_23F1261A8(v2);
  sub_23F126078();
}

uint64_t type metadata accessor for ActionOutcome(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06860);
}

void sub_23F1BE0F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F2505FC(a1, a2, a3);
  sub_23F143964(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23F126078();
}

uint64_t *sub_23F1BE128(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_23F1BE164()
{
  unint64_t result;

  result = qword_256E03220;
  if (!qword_256E03220)
  {
    result = MEMORY[0x242667160](&unk_23F290D04, &type metadata for SessionClientMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03220);
  }
  return result;
}

void sub_23F1BE1A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F2505FC(a1, a2, a3);
  sub_23F143964(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23F126078();
}

uint64_t type metadata accessor for SessionServerMessage(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E05718);
}

unint64_t sub_23F1BE1E8()
{
  unint64_t result;

  result = qword_256E03248;
  if (!qword_256E03248)
  {
    result = MEMORY[0x242667160](&unk_23F290CB4, &type metadata for SessionServerMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03248);
  }
  return result;
}

unint64_t sub_23F1BE224()
{
  unint64_t result;

  result = qword_256E03270;
  if (!qword_256E03270)
  {
    result = MEMORY[0x242667160](&unk_23F290C64, &type metadata for MessagePayload.Terminate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03270);
  }
  return result;
}

unint64_t sub_23F1BE260()
{
  unint64_t result;

  result = qword_256E03280;
  if (!qword_256E03280)
  {
    result = MEMORY[0x242667160](&unk_23F290C14, &type metadata for MessagePayload.EndOfPlan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03280);
  }
  return result;
}

unint64_t sub_23F1BE29C()
{
  unint64_t result;

  result = qword_256E03290;
  if (!qword_256E03290)
  {
    result = MEMORY[0x242667160](&unk_23F290BC4, &type metadata for MessagePayload.SessionSuspended.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03290);
  }
  return result;
}

uint64_t type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E05868);
}

unint64_t sub_23F1BE2EC()
{
  unint64_t result;

  result = qword_256E032A0;
  if (!qword_256E032A0)
  {
    result = MEMORY[0x242667160](&unk_23F290B74, &type metadata for MessagePayload.StepExecutedWithReturnedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E032A0);
  }
  return result;
}

unint64_t sub_23F1BE328()
{
  unint64_t result;

  result = qword_256E032B8;
  if (!qword_256E032B8)
  {
    result = MEMORY[0x242667160](&unk_23F290B24, &type metadata for MessagePayload.SessionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E032B8);
  }
  return result;
}

unint64_t sub_23F1BE364()
{
  unint64_t result;

  result = qword_256E032C0;
  if (!qword_256E032C0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for IntelligenceFlowError, &type metadata for IntelligenceFlowError);
    atomic_store(result, (unint64_t *)&qword_256E032C0);
  }
  return result;
}

unint64_t sub_23F1BE3A0()
{
  unint64_t result;

  result = qword_256E032E0;
  if (!qword_256E032E0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for IntelligenceFlowError, &type metadata for IntelligenceFlowError);
    atomic_store(result, (unint64_t *)&qword_256E032E0);
  }
  return result;
}

unint64_t sub_23F1BE3DC()
{
  unint64_t result;

  result = qword_256E032F8;
  if (!qword_256E032F8)
  {
    result = MEMORY[0x242667160](&unk_23F290AD4, &type metadata for MessagePayload.PlannerReturnedRawPlan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E032F8);
  }
  return result;
}

unint64_t sub_23F1BE418()
{
  unint64_t result;

  result = qword_256E03310;
  if (!qword_256E03310)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AppIntentsInvocationPreview, &type metadata for AppIntentsInvocationPreview);
    atomic_store(result, (unint64_t *)&qword_256E03310);
  }
  return result;
}

unint64_t sub_23F1BE454()
{
  unint64_t result;

  result = qword_256E03328;
  if (!qword_256E03328)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AppIntentsInvocationPreview, &type metadata for AppIntentsInvocationPreview);
    atomic_store(result, (unint64_t *)&qword_256E03328);
  }
  return result;
}

uint64_t type metadata accessor for MessagePayload.RequestContent(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E059B0);
}

uint64_t type metadata accessor for MessagePayload.Request(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E058F8);
}

uint64_t sub_23F1BE4B8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu)
    return sub_23F135C9C(a1, a2, a3);
  return a1;
}

uint64_t sub_23F1BE4CC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu)
    return sub_23F137230(a1, a2, a3);
  return a1;
}

void MessagePayload.ClientActionResult.outcome.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = type metadata accessor for StatementOutcome(0);
  v3[1] = sub_23F24FAD4(v4);
  v5 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ActionOutcome(0) - 8) + 64);
  v3[2] = malloc(v5);
  v3[3] = malloc(v5);
  *((_DWORD *)v3 + 8) = *(_DWORD *)(type metadata accessor for MessagePayload.ClientActionResult(0) + 20);
  sub_23F251D50();
  sub_23F12612C();
}

void sub_23F1BE56C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F18039C();
  v1 = *(void **)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v3 = *(void **)(*(_QWORD *)v0 + 24);
  if ((v4 & 1) != 0)
  {
    sub_23F252268(*(_QWORD *)(*(_QWORD *)v0 + 24), v2);
    ActionOutcome.asStatementOutcome.getter();
    sub_23F25145C(v2);
    sub_23F252358(v5, v6, type metadata accessor for StatementOutcome);
    sub_23F25145C((uint64_t)v3);
  }
  else
  {
    ActionOutcome.asStatementOutcome.getter();
    sub_23F252280(v7, type metadata accessor for ActionOutcome);
    sub_23F252358(v8, v9, type metadata accessor for StatementOutcome);
  }
  free(v3);
  sub_23F252260();
  sub_23F2515E0();
  sub_23F250130(v1);
}

void MessagePayload.ClientActionResult.response.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[192];

  v2 = sub_23F25219C();
  sub_23F2503F4(v1 + *(int *)(v2 + 24), (uint64_t)v3);
  sub_23F2503F4((uint64_t)v3, v0);
  sub_23F1F4F74((uint64_t)v3);
  sub_23F250C90();
}

void MessagePayload.ClientActionResult.response.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[192];
  _BYTE v4[192];

  sub_23F24FE50(a1, (uint64_t)v3);
  v2 = v1 + *(int *)(type metadata accessor for MessagePayload.ClientActionResult(0) + 24);
  sub_23F24FE50(v2, (uint64_t)v4);
  sub_23F1F4F74((uint64_t)v4);
  sub_23F24FE50((uint64_t)v3, v2);
}

uint64_t (*MessagePayload.ClientActionResult.response.modify())()
{
  type metadata accessor for MessagePayload.ClientActionResult(0);
  sub_23F18030C();
  return nullsub_1;
}

void MessagePayload.ClientActionResult.init(eventId:statementOutcome:response:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[192];

  sub_23F251650();
  sub_23F17537C(v1, (uint64_t)v6, &qword_256DFE888);
  v2 = sub_23F251620();
  v3 = v0 + *(int *)(v2 + 24);
  v4 = sub_23F131B8C();
  v5 = sub_23F126138(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  sub_23F2501E4(v5, v0 + *(int *)(v2 + 20), type metadata accessor for StatementOutcome);
  sub_23F17537C((uint64_t)v6, v3, &qword_256DFE888);
}

void static MessagePayload.ClientActionResult.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[192];
  _QWORD v6[24];
  _QWORD v7[24];
  _BYTE v8[192];
  uint64_t v9[24];
  uint64_t v10;
  _BYTE v11[192];
  _BYTE v12[192];
  uint64_t v13[24];

  if ((sub_23F1A9880() & 1) != 0)
  {
    v1 = sub_23F251620();
    sub_23F24FD00(v1);
    static StatementOutcome.== infix(_:_:)();
    if ((v2 & 1) != 0)
    {
      v3 = sub_23F25198C();
      sub_23F2503F4(v3, (uint64_t)v11);
      sub_23F2503F4(v0 + *(int *)(v1 + 24), (uint64_t)v12);
      sub_23F2503F4((uint64_t)v11, (uint64_t)v13);
      if (sub_23F1F50F8(v13) == 1)
      {
        sub_23F17537C((uint64_t)v12, (uint64_t)v9, &qword_256DFE888);
        if (sub_23F1F50F8(v9) == 1)
          goto LABEL_10;
      }
      else
      {
        sub_23F24FE50((uint64_t)v11, (uint64_t)v8);
        sub_23F24FE50((uint64_t)v12, (uint64_t)v9);
        if (sub_23F1F50F8(v9) != 1)
        {
          sub_23F24FE50((uint64_t)v12, (uint64_t)v5);
          sub_23F24F57C(&v4, v5);
          sub_23F24FE50((uint64_t)v11, (uint64_t)v6);
          sub_23F252074();
          sub_23F15AD38(v6);
          static ResponseManifest.== infix(_:_:)();
          sub_23F24F57C(v7, v8);
          sub_23F15AB50(v7);
          sub_23F252074();
          goto LABEL_10;
        }
        sub_23F24F57C(v6, v8);
        sub_23F17537C((uint64_t)v11, (uint64_t)v7, &qword_256DFE888);
        sub_23F252074();
        sub_23F15AD38(v7);
        sub_23F15AB50(v6);
      }
      sub_23F24FE50((uint64_t)v11, (uint64_t)v9);
      sub_23F24FE50((uint64_t)v12, (uint64_t)&v10);
      sub_23F1F4F74((uint64_t)v12);
      sub_23F1F511C((uint64_t)v9);
    }
  }
LABEL_10:
  sub_23F12612C();
}

void static StatementOutcome.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28[34];

  sub_23F125F3C();
  v28[13] = v0;
  v28[14] = v1;
  v28[2] = type metadata accessor for ParameterCandidatesNotFound(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v2);
  v28[7] = (uint64_t)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[5] = type metadata accessor for ParameterNotAllowed(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  v28[6] = (uint64_t)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ParameterConfirmation(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  v28[3] = (uint64_t)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[1] = type metadata accessor for ParameterNeedsValue(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  v28[4] = (uint64_t)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionSuccess(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  v12 = sub_23F18016C((uint64_t)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for StatementOutcome(v12);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F24F5D0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1A96CC();
  MEMORY[0x24BDAC7A8](v16);
  v28[12] = (uint64_t)v28 - v17;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F24FB6C();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F24F48C();
  sub_23F1217E8(&qword_256E03A20);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F24FA58(v26, v28[0]);
  sub_23F25074C();
  v27 = (char *)sub_23F1BEC08 + 4 * byte_23F278C8B[sub_23F250580()];
  __asm { BR              X10 }
}

void sub_23F1BEC08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v4 - 224);
  sub_23F250D20(v5, a2, type metadata accessor for StatementOutcome);
  if (sub_23F24EDD0())
  {
    sub_23F1BE0BC(v3, type metadata accessor for ActionSuccess);
    sub_23F125E40(v5, &qword_256E03A20);
  }
  else
  {
    v6 = *(_QWORD *)(v4 - 352);
    sub_23F24EE5C(v2, v6);
    sub_23F251CB0();
    sub_23F24F0CC(v6);
    sub_23F24F0CC(v3);
    sub_23F1BE0BC(v5, type metadata accessor for StatementOutcome);
  }
  sub_23F250F0C();
  sub_23F125EFC();
}

uint64_t sub_23F1BF1E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6449746E657665 && a2 == 0xE700000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023F294500 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F1BF328(char a1)
{
  if (!a1)
    return 0x6449746E657665;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0x65736E6F70736572;
}

uint64_t sub_23F1BF384()
{
  char *v0;

  return sub_23F1BF328(*v0);
}

uint64_t sub_23F1BF38C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1BF1E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1BF3B0()
{
  sub_23F1F52F8();
  return sub_23F2688B8();
}

uint64_t sub_23F1BF3D8()
{
  sub_23F1F52F8();
  return sub_23F2688C4();
}

void MessagePayload.ClientActionResult.encode(to:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[200];

  sub_23F131874();
  sub_23F24FA04();
  sub_23F1217E8(&qword_256E03A28);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F15E50C();
  sub_23F24ED3C(v0);
  sub_23F1F52F8();
  sub_23F24FC04();
  v7[0] = 0;
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&qword_256DFEF10);
  sub_23F250C00();
  if (!v1)
  {
    v5 = type metadata accessor for MessagePayload.ClientActionResult(0);
    sub_23F15EC34();
    sub_23F250200();
    sub_23F12E488((uint64_t)&unk_256E03A38);
    sub_23F250C00();
    sub_23F2503F4(v2 + *(int *)(v5 + 24), (uint64_t)v7);
    sub_23F2503F4((uint64_t)v7, (uint64_t)&v6);
    sub_23F1F5334();
    sub_23F268714();
  }
  sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F1A9634();
  sub_23F1313FC();
}

void MessagePayload.ClientActionResult.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[24];
  _BYTE v19[192];
  _BYTE v20[192];
  _QWORD v21[25];

  sub_23F131874();
  v3 = v2;
  v16 = v4;
  sub_23F250200();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F125F70();
  v17 = v6;
  sub_23F131B8C();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F125F70();
  sub_23F1217E8(&qword_256E03A48);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F1A9864();
  v10 = type metadata accessor for MessagePayload.ClientActionResult(v9);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F15E50C();
  v13 = v1 + *(int *)(v12 + 24);
  sub_23F12EF30(v21);
  sub_23F17537C((uint64_t)v21, v13, &qword_256DFE888);
  sub_23F18AA80(v3);
  sub_23F1F52F8();
  sub_23F250D14();
  sub_23F24F86C();
  if (v0)
  {
    sub_23F1A9C1C();
    sub_23F17537C(v13, (uint64_t)v20, &qword_256DFE888);
    sub_23F1F4F74((uint64_t)v20);
  }
  else
  {
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F17FE68();
    v14 = sub_23F25229C();
    v15(v14);
    v20[0] = 1;
    sub_23F12E488((uint64_t)&unk_256E03A50);
    sub_23F17FE68();
    sub_23F1BE0F4(v17, v1 + *(int *)(v10 + 20), type metadata accessor for StatementOutcome);
    sub_23F250C34();
    sub_23F15AE64();
    sub_23F268678();
    sub_23F250DAC();
    sub_23F2503F4((uint64_t)v20, (uint64_t)v18);
    sub_23F2503F4(v13, (uint64_t)v19);
    sub_23F1F4F74((uint64_t)v19);
    sub_23F2503F4((uint64_t)v18, v13);
    sub_23F24F0B8(v1, v16);
    sub_23F1A9C1C();
    sub_23F24F1B8(v1);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1BF894()
{
  MessagePayload.ClientActionResult.init(from:)();
}

void sub_23F1BF8A8()
{
  MessagePayload.ClientActionResult.encode(to:)();
}

void MessagePayload.ClientCustom.tag.getter()
{
  sub_23F1A9C48();
  sub_23F1317E0();
  sub_23F126078();
}

void MessagePayload.ClientCustom.value.getter()
{
  sub_23F1A9C48();
  sub_23F1317E0();
  sub_23F126078();
}

void MessagePayload.ClientCustom.debugDescription.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void static MessagePayload.ClientCustom.== infix(_:_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;

  sub_23F18039C();
  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v6 = v5[2];
  v7 = v5[3];
  v8 = v5[4];
  v9 = v5[5];
  if ((MEMORY[0x2426660F8](*v0, v0[1], *v5, v5[1]) & 1) != 0
    && (MEMORY[0x2426660F8](v1, v2, v6, v7) & 1) != 0
    && (v3 == v8 ? (v10 = v4 == v9) : (v10 = 0), !v10))
  {
    sub_23F15E648();
    sub_23F268798();
  }
  else
  {
    sub_23F131680();
  }
}

uint64_t sub_23F1BF9B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 6775156 && a2 == 0xE300000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000023F294520)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F1BFAE4(char a1)
{
  if (!a1)
    return 6775156;
  if (a1 == 1)
    return 0x65756C6176;
  return 0xD000000000000010;
}

uint64_t sub_23F1BFB34()
{
  char *v0;

  return sub_23F1BFAE4(*v0);
}

uint64_t sub_23F1BFB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1BF9B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1BFB60()
{
  sub_23F1F5370();
  return sub_23F2688B8();
}

uint64_t sub_23F1BFB88()
{
  sub_23F1F5370();
  return sub_23F2688C4();
}

void MessagePayload.ClientCustom.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256E03A58);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1319C8();
  sub_23F24EE44(v4);
  sub_23F1F5370();
  sub_23F18ABDC();
  sub_23F146B94();
  sub_23F250F3C();
  sub_23F24F620();
  if (!v0)
  {
    sub_23F15EC34();
    sub_23F250F3C();
    sub_23F250C00();
    sub_23F180268();
    sub_23F268720();
  }
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F1A9634();
  sub_23F1313FC();
}

void MessagePayload.ClientCustom.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F131874();
  sub_23F250F24();
  sub_23F1217E8(&qword_256E03A68);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F15EB6C();
  sub_23F18AA80(v0);
  sub_23F1F5370();
  sub_23F1A9814();
  if (v1)
  {
    sub_23F131BF4();
  }
  else
  {
    v16 = v4;
    sub_23F146AE4();
    sub_23F180318();
    sub_23F15EC34();
    sub_23F251C9C();
    sub_23F180318();
    sub_23F180268();
    v14 = v7;
    v15 = v6;
    sub_23F131170(v6, v7);
    v8 = sub_23F2516FC();
    v10 = v9;
    v11 = v8;
    sub_23F15E444(v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F251C9C();
    v12 = sub_23F15EB34();
    sub_23F131170(v12, v13);
    sub_23F1315C4();
    sub_23F252238(v15);
    sub_23F24FDD0();
    *v16 = v17;
    v16[1] = v18;
    v16[2] = v15;
    v16[3] = v14;
    v16[4] = v11;
    v16[5] = v10;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
    sub_23F24FDD0();
    sub_23F252238(v15);
    sub_23F1317F8();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1BFE98()
{
  MessagePayload.ClientCustom.init(from:)();
}

void sub_23F1BFEAC()
{
  MessagePayload.ClientCustom.encode(to:)();
}

uint64_t sub_23F1BFEC8()
{
  return 0x696669746E656469;
}

void sub_23F1BFEE8(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F1EF218(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F1BFF10()
{
  sub_23F1F53AC();
  return sub_23F2688B8();
}

uint64_t sub_23F1BFF38()
{
  sub_23F1F53AC();
  return sub_23F2688C4();
}

void MessagePayload.ClientIdentifier.encode(to:)()
{
  sub_23F1EBEC8();
}

void MessagePayload.ClientIdentifier.init(from:)()
{
  sub_23F1EBFA0();
}

void sub_23F1BFFC0()
{
  MessagePayload.ClientIdentifier.init(from:)();
}

void sub_23F1BFFD4()
{
  MessagePayload.ClientIdentifier.encode(to:)();
}

void MessagePayload.ClientInitiatedClientAction.toolId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void MessagePayload.ClientInitiatedClientAction.toolId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*MessagePayload.ClientInitiatedClientAction.toolId.modify())()
{
  return nullsub_1;
}

void MessagePayload.ClientInitiatedClientAction.parameters.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F25039C();
  *(_QWORD *)(v1 + 16) = a1;
  sub_23F126078();
}

uint64_t (*MessagePayload.ClientInitiatedClientAction.parameters.modify())()
{
  return nullsub_1;
}

uint64_t static MessagePayload.ClientInitiatedClientAction.== infix(_:_:)(uint64_t a1)
{
  return sub_23F1C9184(a1);
}

uint64_t sub_23F1C007C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6574656D61726170;
  else
    return 0x64496C6F6F74;
}

uint64_t sub_23F1C00B4()
{
  char *v0;

  return sub_23F1C007C(*v0);
}

void sub_23F1C00BC(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F1F2204(a1, a2);
  *a3 = v4;
}

uint64_t sub_23F1C00E0()
{
  sub_23F1F53E8();
  return sub_23F2688B8();
}

uint64_t sub_23F1C0108()
{
  sub_23F1F53E8();
  return sub_23F2688C4();
}

void MessagePayload.ClientInitiatedClientAction.encode(to:)()
{
  sub_23F1C015C();
}

void sub_23F1C015C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F131874();
  v7[2] = v1;
  v8 = v0;
  v9 = *(_QWORD *)(sub_23F1A9D7C(v2, v3) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F24FFBC();
  sub_23F2505D8();
  sub_23F25014C();
  if (!v0)
  {
    v10 = v7[1];
    sub_23F1A9BB8();
    sub_23F1217E8(&qword_256DFE588);
    sub_23F250E30();
    sub_23F1315CC();
  }
  sub_23F126038((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void MessagePayload.ClientInitiatedClientAction.init(from:)()
{
  sub_23F1C0248();
}

void sub_23F1C0248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F131874();
  v12 = v3;
  v13 = sub_23F1A9D7C(v4, v5);
  sub_23F12611C();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F24FE24();
  sub_23F24F564();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    v9 = v12;
    sub_23F24EF34();
    sub_23F251464();
    sub_23F1217E8(&qword_256DFE588);
    sub_23F251638();
    sub_23F24F52C();
    sub_23F24EF80();
    sub_23F15E444((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v10 = v14;
    *v9 = v2;
    v9[1] = 0;
    v9[2] = v10;
    sub_23F1315C4();
    sub_23F24EE8C();
    sub_23F131790();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1C0358()
{
  MessagePayload.ClientInitiatedClientAction.init(from:)();
}

void sub_23F1C036C()
{
  MessagePayload.ClientInitiatedClientAction.encode(to:)();
}

uint64_t (*MessagePayload.ContextPrewarmRequest.prewarmRequestId.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1C0398(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023F294540)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_23F1C041C()
{
  return 0xD000000000000010;
}

uint64_t sub_23F1C043C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C0398(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1C0464()
{
  sub_23F1F5424();
  return sub_23F2688B8();
}

uint64_t sub_23F1C048C()
{
  sub_23F1F5424();
  return sub_23F2688C4();
}

void MessagePayload.ContextPrewarmRequest.encode(to:)()
{
  sub_23F1EBEC8();
}

void MessagePayload.ContextPrewarmRequest.init(from:)()
{
  sub_23F1EBFA0();
}

void sub_23F1C0514()
{
  MessagePayload.ContextPrewarmRequest.init(from:)();
}

void sub_23F1C0528()
{
  MessagePayload.ContextPrewarmRequest.encode(to:)();
}

uint64_t (*MessagePayload.ContextPrewarmCompleted.originatingPrewarmRequestId.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1C0550(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001BLL && a2 == 0x800000023F294560)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_23F1C05D4()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_23F1C05F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C0550(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1C061C()
{
  sub_23F1F5460();
  return sub_23F2688B8();
}

uint64_t sub_23F1C0644()
{
  sub_23F1F5460();
  return sub_23F2688C4();
}

void MessagePayload.ContextPrewarmCompleted.encode(to:)()
{
  sub_23F1EBEC8();
}

void MessagePayload.ContextPrewarmCompleted.init(from:)()
{
  sub_23F1EBFA0();
}

void sub_23F1C06CC()
{
  MessagePayload.ContextPrewarmCompleted.init(from:)();
}

void sub_23F1C06E0()
{
  MessagePayload.ContextPrewarmCompleted.encode(to:)();
}

uint64_t sub_23F1C06FC()
{
  sub_23F1F549C();
  return sub_23F2688B8();
}

uint64_t sub_23F1C0724()
{
  sub_23F1F549C();
  return sub_23F2688C4();
}

void MessagePayload.SafetyModeRelease.encode(to:)()
{
  sub_23F1D62E0();
}

void MessagePayload.SafetyModeRelease.init(from:)(uint64_t a1)
{
  sub_23F24F884(a1);
  sub_23F24FF94();
}

void sub_23F1C0790()
{
  MessagePayload.SafetyModeRelease.encode(to:)();
}

void MessagePayload.SafetyModeException.clientQueryId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void MessagePayload.SafetyModeException.clientQueryId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*MessagePayload.SafetyModeException.clientQueryId.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::MessagePayload::SafetyModeException __swiftcall MessagePayload.SafetyModeException.init()()
{
  _QWORD *v0;
  IntelligenceFlow::MessagePayload::SafetyModeException result;

  *v0 = 0;
  v0[1] = 0;
  return result;
}

uint64_t static MessagePayload.SafetyModeException.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_23F126148() & 1) != 0)
        return 1;
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_23F1C0850(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1C08F8()
{
  return 0x7551746E65696C63;
}

uint64_t sub_23F1C0920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C0850(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1C0948()
{
  sub_23F1F54D8();
  return sub_23F2688B8();
}

uint64_t sub_23F1C0970()
{
  sub_23F1F54D8();
  return sub_23F2688C4();
}

void MessagePayload.SafetyModeException.encode(to:)()
{
  sub_23F1EBEC8();
}

void MessagePayload.SafetyModeException.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F131874();
  a19 = v24;
  a20 = v25;
  sub_23F24F910();
  sub_23F1217E8(&qword_256E03AF0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1F54D8();
  sub_23F15E564();
  if (!v22)
  {
    sub_23F250EDC();
    v29 = sub_23F268654();
    v31 = v30;
    sub_23F17FF08((uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    *v21 = v29;
    v21[1] = v31;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v20);
  sub_23F1A9634();
  sub_23F1313FC();
}

#error "23F1C0A98: call analysis failed (funcsize=5)"

void sub_23F1C0AA4()
{
  MessagePayload.SafetyModeException.encode(to:)();
}

void MessagePayload.ExternalAgentRequest.content.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F250D08();
  sub_23F1BE1A0(v0, v1, type metadata accessor for MessagePayload.RequestContent);
}

void MessagePayload.ExternalAgentRequest.content.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F1F4C44(a1, v1, type metadata accessor for MessagePayload.RequestContent);
}

uint64_t (*MessagePayload.ExternalAgentRequest.content.modify())()
{
  return nullsub_1;
}

void MessagePayload.ExternalAgentRequest.rewriteMetadataEventID.getter()
{
  sub_23F1C0B20(type metadata accessor for MessagePayload.ExternalAgentRequest);
}

void sub_23F1C0B20(uint64_t (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = sub_23F24F3E8(a1);
  sub_23F1752C4(v2 + *(int *)(v4 + 20), v3, v1);
  sub_23F12612C();
}

void MessagePayload.ExternalAgentRequest.rewriteMetadataEventID.setter(uint64_t a1)
{
  sub_23F1C0B64(a1, type metadata accessor for MessagePayload.ExternalAgentRequest, &qword_256DFEB98);
}

void sub_23F1C0B64(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v5;

  sub_23F24F690(a1, a2);
  sub_23F180384();
  sub_23F1F86F4(a1, v5, a3);
  sub_23F12612C();
}

uint64_t (*MessagePayload.ExternalAgentRequest.rewriteMetadataEventID.modify())()
{
  sub_23F250E08();
  sub_23F180384();
  return nullsub_1;
}

void MessagePayload.ExternalAgentRequest.rewriteMetadataInlined.getter()
{
  sub_23F1C15EC();
}

void MessagePayload.ExternalAgentRequest.rewriteMetadataInlined.setter(uint64_t a1)
{
  sub_23F1C1620(a1, type metadata accessor for MessagePayload.ExternalAgentRequest);
}

uint64_t (*MessagePayload.ExternalAgentRequest.rewriteMetadataInlined.modify())()
{
  sub_23F250E08();
  sub_23F18030C();
  return nullsub_1;
}

__n128 MessagePayload.ExternalAgentRequest.init(content:rewriteMetadataEventID:rewriteMetadataInlined:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  __n128 result;
  __int128 v12;

  v12 = *a3;
  v3 = *((_QWORD *)a3 + 2);
  v4 = sub_23F250E08();
  v5 = sub_23F131B8C();
  sub_23F250714(v5);
  v6 = sub_23F14C64C();
  sub_23F1BE0F4(v6, v7, v8);
  sub_23F252308(v9, v10, &qword_256DFEB98);
  sub_23F251A70();
  *(_OWORD *)v4 = v12;
  *(_QWORD *)(v4 + 16) = v3;
  sub_23F14C28C();
  return result;
}

void static MessagePayload.ExternalAgentRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23F125F3C();
  v7 = v6;
  v8 = sub_23F131B8C();
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F15E50C();
  v10 = sub_23F1217E8(&qword_256E01490);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1319C8();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F251AB8();
  if ((static MessagePayload.RequestContent.== infix(_:_:)(v15, v7, v16, v17, v18, v19, v20, v21, v30, v31, v32, v33) & 1) == 0)
    goto LABEL_24;
  v22 = sub_23F250E08();
  v23 = sub_23F2520D4(v22);
  sub_23F24F7B4(v23, v4);
  sub_23F24F7B4(v7 + *(int *)(v0 + 20), v5);
  v24 = (uint64_t)v1 + *(int *)(v10 + 48);
  sub_23F24F7B4(v4, (uint64_t)v1);
  sub_23F24F7B4(v5, v24);
  v25 = sub_23F1A92D8((uint64_t)v1);
  if (v28)
  {
    sub_23F1A973C(v5);
    sub_23F1A973C(v4);
    v27 = sub_23F1A92D8(v24);
    if (v28)
    {
      sub_23F1A9640(v27, &qword_256DFEB98);
      goto LABEL_12;
    }
LABEL_10:
    sub_23F1A9640(v27, &qword_256E01490);
    goto LABEL_24;
  }
  sub_23F25055C(v25, v26, &qword_256DFEB98);
  sub_23F1A92D8(v24);
  if (v28)
  {
    sub_23F24FC2C(v5);
    sub_23F24FC2C(v4);
    v27 = sub_23F24FBC0(v0);
    goto LABEL_10;
  }
  sub_23F1263D8(v2, v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
  sub_23F12E488((uint64_t)&qword_256DFEAF8);
  sub_23F24F77C();
  sub_23F250BD0();
  sub_23F1A973C(v5);
  sub_23F1A973C(v4);
  sub_23F252214();
  sub_23F1A973C((uint64_t)v1);
  if ((v7 & 1) == 0)
    goto LABEL_24;
LABEL_12:
  sub_23F25000C();
  if (!v8)
  {
    if (!v3)
      goto LABEL_24;
    goto LABEL_23;
  }
  if (!v3)
  {
    sub_23F1315C4();
    sub_23F131798();
LABEL_23:
    sub_23F24FCE0();
    sub_23F24FCB0();
    sub_23F24FCF0();
    goto LABEL_24;
  }
  v29 = v1 == &qword_256DFEB98 && v8 == v3;
  if (v29 || (sub_23F126148() & 1) != 0)
  {
    sub_23F2505CC();
    sub_23F24F07C();
    sub_23F131A30();
    sub_23F1317F8();
  }
  else
  {
    sub_23F24F07C();
    sub_23F131A30();
    sub_23F1317F8();
  }
LABEL_24:
  sub_23F125EFC();
}

uint64_t sub_23F1C0EEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023F294420 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023F294440)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F1C1034(char a1)
{
  if (a1)
    return 0xD000000000000016;
  else
    return 0x746E65746E6F63;
}

uint64_t sub_23F1C1094()
{
  char *v0;

  return sub_23F1C1034(*v0);
}

uint64_t sub_23F1C109C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C0EEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1C10C0()
{
  sub_23F1F5528();
  return sub_23F2688B8();
}

uint64_t sub_23F1C10E8()
{
  sub_23F1F5528();
  return sub_23F2688C4();
}

void MessagePayload.ExternalAgentRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E03AF8);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1F5528();
  sub_23F18A998();
  v6 = 0;
  type metadata accessor for MessagePayload.RequestContent(0);
  sub_23F12E488((uint64_t)&unk_256E03348);
  sub_23F126188();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ExternalAgentRequest(0);
    v6 = 1;
    sub_23F131B8C();
    sub_23F12E488((uint64_t)&qword_256DFEF10);
    sub_23F17FAD8();
    sub_23F250478();
    sub_23F1C3D24();
    sub_23F17FAD8();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void MessagePayload.ExternalAgentRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;

  sub_23F131874();
  v5 = v4;
  v25 = v6;
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  v26 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23F251E8C();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F24ED20(v10, v25);
  v30 = sub_23F1217E8(&qword_256E03B08);
  sub_23F12611C();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F1A9480();
  v13 = type metadata accessor for MessagePayload.ExternalAgentRequest(v12);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F24FC64();
  v16 = v2 + v15;
  v17 = sub_23F131B8C();
  *(_QWORD *)&v31 = v16;
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v16, 1, 1, v17);
  v18 = (_QWORD *)(v2 + *(int *)(v13 + 24));
  *v18 = 0;
  v18[1] = 0;
  v18[2] = 0;
  sub_23F24ED3C(v5);
  sub_23F1F5528();
  v29 = v3;
  sub_23F1A9DA4();
  sub_23F24FFB4();
  if (v0)
  {
    sub_23F1A9C1C();
    sub_23F125E40(v31, &qword_256DFEB98);
    sub_23F251A0C();
  }
  else
  {
    v32 = v2;
    v19 = (uint64_t)v26;
    v20 = v1;
    LOBYTE(v33) = 0;
    sub_23F12E488((uint64_t)&unk_256E03368);
    sub_23F2507AC();
    v21 = v28;
    sub_23F17FE68();
    sub_23F1BE0F4(v21, v32, type metadata accessor for MessagePayload.RequestContent);
    sub_23F2504A8();
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F2507AC();
    sub_23F24F908();
    sub_23F1F86F4(v19, v31, &qword_256DFEB98);
    sub_23F250C34();
    sub_23F1C3D9C();
    sub_23F2507CC();
    v22 = v29;
    sub_23F24F908();
    sub_23F1A977C(v22, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    v31 = v33;
    v23 = v34;
    sub_23F251A0C();
    *(_OWORD *)v18 = v31;
    v18[2] = v23;
    v24 = v32;
    sub_23F24F0B8(v32, v25);
    sub_23F1A9C1C();
    sub_23F24F1B8(v24);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1C151C()
{
  MessagePayload.ExternalAgentRequest.init(from:)();
}

void sub_23F1C1530()
{
  MessagePayload.ExternalAgentRequest.encode(to:)();
}

void MessagePayload.ExternalAgentTextQuery.query.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void MessagePayload.ExternalAgentTextQuery.query.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*MessagePayload.ExternalAgentTextQuery.query.modify())()
{
  return nullsub_1;
}

void MessagePayload.ExternalAgentTextQuery.queryRewriteMetadataEventId.getter()
{
  sub_23F1C0B20(type metadata accessor for MessagePayload.ExternalAgentTextQuery);
}

void MessagePayload.ExternalAgentTextQuery.queryRewriteMetadataEventId.setter(uint64_t a1)
{
  sub_23F1C0B64(a1, type metadata accessor for MessagePayload.ExternalAgentTextQuery, &qword_256DFEB98);
}

uint64_t (*MessagePayload.ExternalAgentTextQuery.queryRewriteMetadataEventId.modify())()
{
  sub_23F250974();
  sub_23F180384();
  return nullsub_1;
}

void MessagePayload.ExternalAgentTextQuery.queryRewriteMetadataInlined.getter()
{
  sub_23F1C15EC();
}

void sub_23F1C15EC()
{
  uint64_t v0;

  v0 = sub_23F24FB34();
  sub_23F2506E8(*(int *)(v0 + 24));
  sub_23F126078();
}

void MessagePayload.ExternalAgentTextQuery.queryRewriteMetadataInlined.setter(uint64_t a1)
{
  sub_23F1C1620(a1, type metadata accessor for MessagePayload.ExternalAgentTextQuery);
}

void sub_23F1C1620(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;

  v2 = sub_23F24F690(a1, a2);
  v3 = sub_23F251154(*(int *)(v2 + 24));
  sub_23F250EEC(v3, v4, v5, v6, v7, v8, v9, v10, v11);
  sub_23F1A9BE8();
}

uint64_t (*MessagePayload.ExternalAgentTextQuery.queryRewriteMetadataInlined.modify())()
{
  sub_23F250974();
  sub_23F18030C();
  return nullsub_1;
}

void MessagePayload.ExternalAgentTextQuery.init(query:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v3 = sub_23F24FF00();
  v4 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(v3);
  v5 = (uint64_t)v2 + *(int *)(v4 + 20);
  v6 = sub_23F131B8C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v5, 1, 1, v6);
  v7 = (_QWORD *)((char *)v2 + *(int *)(v4 + 24));
  *v7 = 0;
  v7[1] = 0;
  v7[2] = 0;
  *v2 = v1;
  v2[1] = v0;
  sub_23F131ABC();
}

__n128 MessagePayload.ExternalAgentTextQuery.init(query:queryRewriteMetadataEventId:queryRewriteMetadataInlined:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  __n128 result;
  __int128 v14;

  sub_23F24F8EC();
  v14 = *v3;
  v4 = *((_QWORD *)v3 + 2);
  v5 = sub_23F250974();
  v6 = (uint64_t)v2 + *(int *)(v5 + 20);
  v7 = sub_23F131B8C();
  v10 = sub_23F126158(v6, v8, v9, v7);
  v11 = (_QWORD *)((char *)v2 + *(int *)(v5 + 24));
  *v11 = 0;
  v11[1] = 0;
  v11[2] = 0;
  *v2 = v1;
  v2[1] = v0;
  sub_23F2522F0(v10, v12, &qword_256DFEB98);
  sub_23F1F55A0(*v11, v11[1]);
  *(_OWORD *)v11 = v14;
  v11[2] = v4;
  sub_23F25088C();
  return result;
}

void static MessagePayload.ExternalAgentTextQuery.== infix(_:_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  sub_23F125F3C();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F131B8C();
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F1A9848(v11, v29);
  v12 = sub_23F1217E8(&qword_256E01490);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F1319C8();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F24F0A4();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F24F48C();
  v17 = *v8 == *v6 && v8[1] == v6[1];
  if (!v17 && (sub_23F126148() & 1) == 0)
    goto LABEL_28;
  v18 = sub_23F250974();
  sub_23F251440((uint64_t)v8 + *(int *)(v18 + 20), v3);
  sub_23F251440((uint64_t)v6 + *(int *)(v18 + 20), v4);
  v19 = (uint64_t)v0 + *(int *)(v12 + 48);
  v20 = sub_23F251040();
  sub_23F251440(v20, v21);
  sub_23F251440(v4, v19);
  v22 = sub_23F1A92D8((uint64_t)v0);
  if (v17)
  {
    sub_23F1A973C(v4);
    sub_23F1A973C(v3);
    v24 = sub_23F1A92D8(v19);
    if (v17)
    {
      sub_23F1A9640(v24, &qword_256DFEB98);
      goto LABEL_16;
    }
LABEL_14:
    sub_23F1A9640(v24, &qword_256E01490);
    goto LABEL_28;
  }
  sub_23F25055C(v22, v23, &qword_256DFEB98);
  sub_23F1A92D8(v19);
  if (v25)
  {
    sub_23F1A9648(v4);
    sub_23F1A9648(v3);
    v24 = sub_23F24FBC0(v1);
    goto LABEL_14;
  }
  sub_23F1263D8(v31, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  sub_23F12E488((uint64_t)&qword_256DFEAF8);
  v30 = sub_23F24F77C();
  v26 = *(void (**)(uint64_t))(v1 + 8);
  v27 = sub_23F251508();
  v26(v27);
  sub_23F1A973C(v4);
  sub_23F1A973C(v3);
  ((void (*)(uint64_t, uint64_t))v26)(v2, v9);
  sub_23F1A973C((uint64_t)v0);
  if ((v30 & 1) == 0)
    goto LABEL_28;
LABEL_16:
  sub_23F250A24();
  if (!v9)
  {
    if (!v2)
      goto LABEL_28;
    goto LABEL_27;
  }
  if (!v2)
  {
    sub_23F1315C4();
    sub_23F131798();
LABEL_27:
    sub_23F24FCE0();
    sub_23F24FCB0();
    sub_23F24FCF0();
    goto LABEL_28;
  }
  v28 = v0 == &qword_256DFEB98 && v9 == v2;
  if (v28 || (sub_23F126148() & 1) != 0)
  {
    sub_23F2505CC();
    sub_23F24F07C();
    sub_23F131A30();
    sub_23F1317F8();
  }
  else
  {
    sub_23F24F07C();
    sub_23F131A30();
    sub_23F1317F8();
  }
LABEL_28:
  sub_23F125EFC();
}

uint64_t sub_23F1C1A0C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023F294580 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023F2945A0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F1C1B4C(char a1)
{
  if (a1)
    return 0xD00000000000001BLL;
  else
    return 0x7972657571;
}

uint64_t sub_23F1C1BA8()
{
  char *v0;

  return sub_23F1C1B4C(*v0);
}

uint64_t sub_23F1C1BB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C1A0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1C1BD4()
{
  sub_23F1F55CC();
  return sub_23F2688B8();
}

uint64_t sub_23F1C1BFC()
{
  sub_23F1F55CC();
  return sub_23F2688C4();
}

void MessagePayload.ExternalAgentTextQuery.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E03B10);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1F55CC();
  sub_23F18A998();
  v6 = 0;
  sub_23F24F308();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
    v6 = 1;
    sub_23F131B8C();
    sub_23F12E488((uint64_t)&qword_256DFEF10);
    sub_23F17FAD8();
    sub_23F250478();
    sub_23F1F5608();
    sub_23F17FAD8();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void MessagePayload.ExternalAgentTextQuery.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;

  sub_23F131874();
  v5 = v4;
  v19 = v6;
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F16BBFC(v8, v18);
  v20 = *(_QWORD *)(sub_23F1217E8(&qword_256E03B28) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F17FFA8();
  type metadata accessor for MessagePayload.ExternalAgentTextQuery(v10);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F24FC64();
  v13 = (uint64_t)v3 + v12;
  v14 = sub_23F131B8C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v13, 1, 1, v14);
  sub_23F2522C4();
  sub_23F24F1D8(v5);
  sub_23F1F55CC();
  sub_23F251268();
  sub_23F18037C();
  if (v0)
  {
    v15 = sub_23F1A9C1C();
    sub_23F1A9640(v15, &qword_256DFEB98);
    sub_23F250250();
  }
  else
  {
    LOBYTE(v22) = 0;
    *v3 = sub_23F24FBE0();
    v3[1] = v16;
    sub_23F2504A8();
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F2507AC();
    sub_23F24F908();
    sub_23F250AB8(v21, v17, &qword_256DFEB98);
    sub_23F251EEC();
    sub_23F2507CC();
    sub_23F24F908();
    sub_23F1A977C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    sub_23F250250();
    *(_OWORD *)v2 = v22;
    *(_QWORD *)(v2 + 16) = v23;
    sub_23F24F0B8((uint64_t)v3, v19);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v5);
    sub_23F24F1B8((uint64_t)v3);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1C1F9C()
{
  MessagePayload.ExternalAgentTextQuery.init(from:)();
}

void sub_23F1C1FB0()
{
  MessagePayload.ExternalAgentTextQuery.encode(to:)();
}

uint64_t MessagePayload.ExternalAgentSpeechQuery.Candidate.statementId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F25061C(*(_QWORD *)(v1 + 32), a1);
}

uint64_t MessagePayload.ExternalAgentSpeechQuery.Candidate.init(recognition:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

__n128 MessagePayload.ExternalAgentSpeechQuery.Candidate.init(recognition:statementId:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  __n128 result;

  v4 = *a3;
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_DWORD *)(a4 + 16) = v4;
  result = *(__n128 *)(a3 + 2);
  *(__n128 *)(a4 + 24) = result;
  return result;
}

void static MessagePayload.ExternalAgentSpeechQuery.Candidate.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char v12;

  v1 = sub_23F250464(a1);
  v5 = *(_DWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  v8 = *(_DWORD *)(v3 + 16);
  v10 = *(_QWORD *)(v3 + 24);
  v9 = *(_QWORD *)(v3 + 32);
  v11 = v1 == *(_QWORD *)v3 && v2 == *(_QWORD *)(v3 + 8);
  if (v11 || (sub_23F126148(), sub_23F15E5CC(), (v12 & 1) != 0))
  {
    if (v5 == v8 && v6 && v9 && (v7 != v10 || v6 != v9))
      sub_23F126148();
  }
  sub_23F131ABC();
}

uint64_t sub_23F1C208C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x74696E676F636572 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1C21A8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E656D6574617473;
  else
    return 0x74696E676F636572;
}

uint64_t sub_23F1C21F0()
{
  char *v0;

  return sub_23F1C21A8(*v0);
}

uint64_t sub_23F1C21F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C208C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1C221C()
{
  sub_23F1F5680();
  return sub_23F2688B8();
}

uint64_t sub_23F1C2244()
{
  sub_23F1F5680();
  return sub_23F2688C4();
}

void MessagePayload.ExternalAgentSpeechQuery.Candidate.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F131874();
  sub_23F250B2C();
  v4 = *(_QWORD *)(sub_23F1217E8(&qword_256E03B38) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F250D4C();
  sub_23F24EE44(v2);
  sub_23F1F5680();
  sub_23F18ABDC();
  sub_23F131644();
  if (!v0)
  {
    sub_23F250F8C();
    sub_23F251FB8();
    sub_23F1315CC();
  }
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void MessagePayload.ExternalAgentSpeechQuery.Candidate.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F131874();
  sub_23F15E7E8();
  sub_23F1217E8(&qword_256E03B48);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1F5680();
  sub_23F15E564();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    LOBYTE(v13) = 0;
    v6 = sub_23F15E704();
    v8 = v7;
    sub_23F250AEC(1);
    sub_23F24F52C();
    sub_23F15E79C();
    sub_23F15E444((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v9 = v13;
    v10 = v14;
    v11 = v15;
    *(_QWORD *)v1 = v6;
    *(_QWORD *)(v1 + 8) = v8;
    *(_DWORD *)(v1 + 16) = v9;
    *(_QWORD *)(v1 + 24) = v10;
    *(_QWORD *)(v1 + 32) = v11;
    sub_23F1315C4();
    sub_23F24EE8C();
    sub_23F131790();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1C2480()
{
  MessagePayload.ExternalAgentSpeechQuery.Candidate.init(from:)();
}

void sub_23F1C2494()
{
  MessagePayload.ExternalAgentSpeechQuery.Candidate.encode(to:)();
}

void MessagePayload.ExternalAgentSpeechQuery.candidates.setter()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F15ECF0();
  *v1 = v0;
  sub_23F126078();
}

uint64_t (*MessagePayload.ExternalAgentSpeechQuery.candidates.modify())()
{
  return nullsub_1;
}

void MessagePayload.ExternalAgentSpeechQuery.queryRewriteMetadataEventId.getter()
{
  sub_23F1C0B20(type metadata accessor for MessagePayload.ExternalAgentSpeechQuery);
}

void MessagePayload.ExternalAgentSpeechQuery.queryRewriteMetadataEventId.setter(uint64_t a1)
{
  sub_23F1C0B64(a1, type metadata accessor for MessagePayload.ExternalAgentSpeechQuery, &qword_256DFEB98);
}

uint64_t (*MessagePayload.ExternalAgentSpeechQuery.queryRewriteMetadataEventId.modify())()
{
  sub_23F25099C();
  sub_23F180384();
  return nullsub_1;
}

void MessagePayload.ExternalAgentSpeechQuery.queryRewriteMetadataInlined.getter()
{
  sub_23F1C15EC();
}

void MessagePayload.ExternalAgentSpeechQuery.queryRewriteMetadataInlined.setter(uint64_t a1)
{
  sub_23F1C1620(a1, type metadata accessor for MessagePayload.ExternalAgentSpeechQuery);
}

uint64_t (*MessagePayload.ExternalAgentSpeechQuery.queryRewriteMetadataInlined.modify())()
{
  sub_23F25099C();
  sub_23F18030C();
  return nullsub_1;
}

void MessagePayload.ExternalAgentSpeechQuery.init(candidates:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = sub_23F25099C();
  v5 = (uint64_t)a2 + *(int *)(v4 + 20);
  v6 = sub_23F131B8C();
  sub_23F126158(v5, v7, v8, v6);
  v9 = (_QWORD *)((char *)a2 + *(int *)(v4 + 24));
  *v9 = 0;
  v9[1] = 0;
  v9[2] = 0;
  *a2 = a1;
  sub_23F12612C();
}

__n128 MessagePayload.ExternalAgentSpeechQuery.init(candidates:queryRewriteMetadataEventId:queryRewriteMetadataInlined:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 result;
  __int128 v11;

  v11 = *a2;
  v5 = *((_QWORD *)a2 + 2);
  v6 = sub_23F25099C();
  v7 = sub_23F131B8C();
  v8 = sub_23F250714(v7);
  *a3 = a1;
  sub_23F252308(v8, v9, &qword_256DFEB98);
  sub_23F251A70();
  *(_OWORD *)v6 = v11;
  *(_QWORD *)(v6 + 16) = v5;
  sub_23F14C28C();
  return result;
}

void static MessagePayload.ExternalAgentSpeechQuery.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  BOOL v23;

  sub_23F125F3C();
  v7 = v6;
  v8 = sub_23F131B8C();
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F15E50C();
  v10 = sub_23F1217E8(&qword_256E01490);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1319C8();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F1A9A0C();
  sub_23F129F7C();
  if ((v15 & 1) == 0)
    goto LABEL_24;
  v16 = sub_23F25099C();
  v17 = sub_23F2520D4(v16);
  sub_23F24F7B4(v17, v4);
  sub_23F24F7B4(v7 + *(int *)(v0 + 20), v5);
  v18 = (uint64_t)v1 + *(int *)(v10 + 48);
  sub_23F24F7B4(v4, (uint64_t)v1);
  sub_23F24F7B4(v5, v18);
  v19 = sub_23F1A92D8((uint64_t)v1);
  if (v22)
  {
    sub_23F1A973C(v5);
    sub_23F1A973C(v4);
    v21 = sub_23F1A92D8(v18);
    if (v22)
    {
      sub_23F1A9640(v21, &qword_256DFEB98);
      goto LABEL_12;
    }
LABEL_10:
    sub_23F1A9640(v21, &qword_256E01490);
    goto LABEL_24;
  }
  sub_23F25055C(v19, v20, &qword_256DFEB98);
  sub_23F1A92D8(v18);
  if (v22)
  {
    sub_23F24FC2C(v5);
    sub_23F24FC2C(v4);
    v21 = sub_23F24FBC0(v0);
    goto LABEL_10;
  }
  sub_23F1263D8(v2, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
  sub_23F12E488((uint64_t)&qword_256DFEAF8);
  sub_23F24F77C();
  sub_23F250BD0();
  sub_23F1A973C(v5);
  sub_23F1A973C(v4);
  sub_23F252214();
  sub_23F1A973C((uint64_t)v1);
  if ((v7 & 1) == 0)
    goto LABEL_24;
LABEL_12:
  sub_23F25000C();
  if (!v8)
  {
    if (!v3)
      goto LABEL_24;
    goto LABEL_23;
  }
  if (!v3)
  {
    sub_23F1315C4();
    sub_23F131798();
LABEL_23:
    sub_23F24FCE0();
    sub_23F24FCB0();
    sub_23F24FCF0();
    goto LABEL_24;
  }
  v23 = v1 == &qword_256DFEB98 && v8 == v3;
  if (v23 || (sub_23F126148() & 1) != 0)
  {
    sub_23F2505CC();
    sub_23F24F07C();
    sub_23F131A30();
    sub_23F1317F8();
  }
  else
  {
    sub_23F24F07C();
    sub_23F131A30();
    sub_23F1317F8();
  }
LABEL_24:
  sub_23F125EFC();
}

uint64_t sub_23F1C28A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74616469646E6163 && a2 == 0xEA00000000007365;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023F294580 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023F2945A0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F1C29F8(char a1)
{
  if (a1)
    return 0xD00000000000001BLL;
  else
    return 0x74616469646E6163;
}

uint64_t sub_23F1C2A5C()
{
  char *v0;

  return sub_23F1C29F8(*v0);
}

uint64_t sub_23F1C2A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C28A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1C2A88()
{
  sub_23F1F56D0();
  return sub_23F2688B8();
}

uint64_t sub_23F1C2AB0()
{
  sub_23F1F56D0();
  return sub_23F2688C4();
}

void MessagePayload.ExternalAgentSpeechQuery.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char v11;

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E03B50);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1F56D0();
  sub_23F18A998();
  *(_QWORD *)&v9 = *v1;
  v11 = 0;
  sub_23F12636C();
  sub_23F24F834((uint64_t)&unk_256E03B68);
  sub_23F18AD50();
  sub_23F17F99C();
  if (!v0)
  {
    v6 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
    LOBYTE(v9) = 1;
    sub_23F131B8C();
    sub_23F12E488((uint64_t)&qword_256DFEF10);
    sub_23F17FAD8();
    v7 = (char *)v1 + *(int *)(v6 + 24);
    v8 = *((_QWORD *)v7 + 2);
    v9 = *(_OWORD *)v7;
    v10 = v8;
    sub_23F250C34();
    sub_23F1F5608();
    sub_23F17FAD8();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void MessagePayload.ExternalAgentSpeechQuery.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;

  sub_23F131874();
  v6 = v5;
  v20 = v7;
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F16BC34(v9, v19);
  sub_23F1217E8(&qword_256E03B78);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F24F060();
  type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(v11);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F24FC64();
  v13 = sub_23F131B8C();
  v14 = sub_23F2508EC();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v14, v15, v16, v13);
  sub_23F2522C4();
  sub_23F24F1D8(v6);
  sub_23F1F56D0();
  sub_23F2506AC();
  if (v1)
  {
    v17 = _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v6);
    sub_23F1A9640(v17, &qword_256DFEB98);
    sub_23F250250();
  }
  else
  {
    sub_23F12636C();
    sub_23F24F834((uint64_t)&unk_256E03B80);
    sub_23F2507CC();
    sub_23F17FE68();
    *v4 = v22;
    sub_23F2504A8();
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F24F908();
    sub_23F250AB8(v21, v18, &qword_256DFEB98);
    sub_23F251EEC();
    sub_23F2507CC();
    sub_23F24F908();
    sub_23F17FF08(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F250250();
    *(_OWORD *)v3 = v22;
    *(_QWORD *)(v3 + 16) = v23;
    sub_23F24F0B8((uint64_t)v4, v20);
    sub_23F17FF68();
    sub_23F24F1B8((uint64_t)v4);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1C2EB8()
{
  MessagePayload.ExternalAgentSpeechQuery.init(from:)();
}

void sub_23F1C2ECC()
{
  MessagePayload.ExternalAgentSpeechQuery.encode(to:)();
}

void MessagePayload.ExternalAgentOutcome.statementOutcome.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F250D08();
  sub_23F1BE1A0(v0, v1, type metadata accessor for StatementOutcome);
}

void MessagePayload.ExternalAgentOutcome.statementOutcome.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F1F4C44(a1, v1, type metadata accessor for StatementOutcome);
}

uint64_t (*MessagePayload.ExternalAgentOutcome.statementOutcome.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ExternalAgentOutcome.responseText.getter()
{
  return sub_23F1C2F40(type metadata accessor for MessagePayload.ExternalAgentOutcome);
}

uint64_t sub_23F1C2F40(uint64_t (*a1)(_QWORD))
{
  sub_23F17FDCC(a1);
  return swift_bridgeObjectRetain();
}

void MessagePayload.ExternalAgentOutcome.responseText.setter(uint64_t a1)
{
  sub_23F1C2F68(a1, type metadata accessor for MessagePayload.ExternalAgentOutcome);
}

void sub_23F1C2F68(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(sub_23F24F690(a1, a2) + 20);
  sub_23F1A98B8();
  *(_QWORD *)(v2 + v4) = a1;
  sub_23F12612C();
}

uint64_t (*MessagePayload.ExternalAgentOutcome.responseText.modify())()
{
  type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
  sub_23F180384();
  return nullsub_1;
}

void sub_23F1C2FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);

  type metadata accessor for ActionOutcome(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F1319C8();
  sub_23F24FE90(a1, v9, v10);
  a5(v5);
  sub_23F12612C();
}

void MessagePayload.ExternalAgentOutcome.outcome.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F250200();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F250508();
  sub_23F250838(v1, type metadata accessor for ActionOutcome);
  v2 = sub_23F250574();
  sub_23F1F4C44(v2, v3, type metadata accessor for StatementOutcome);
  sub_23F12612C();
}

void MessagePayload.ExternalAgentOutcome.outcome.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;

  *a1 = v1;
  v3 = type metadata accessor for StatementOutcome(0);
  a1[1] = sub_23F24FAD4(v3);
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ActionOutcome(0) - 8) + 64);
  a1[2] = malloc(v4);
  a1[3] = malloc(v4);
  StatementOutcome.asActionOutcome.getter();
  sub_23F12612C();
}

void sub_23F1C30EC(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  v3 = a1[3];
  v4 = (void *)a1[1];
  if ((a2 & 1) != 0)
  {
    sub_23F2514F0(a1[3], v2);
    ActionOutcome.asStatementOutcome.getter();
    sub_23F2508A4(v2);
    sub_23F252314(v5, v6, type metadata accessor for StatementOutcome);
    sub_23F2508A4(v3);
  }
  else
  {
    ActionOutcome.asStatementOutcome.getter();
    sub_23F252240(v7, type metadata accessor for ActionOutcome);
    sub_23F252314(v8, v9, type metadata accessor for StatementOutcome);
  }
  sub_23F252260();
  sub_23F2515E0();
  sub_23F250368(v4);
}

void MessagePayload.ExternalAgentOutcome.init(statementOutcome:responseText:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23F1BE0F4(a1, a3, type metadata accessor for StatementOutcome);
  *(_QWORD *)(a3 + *(int *)(type metadata accessor for MessagePayload.ExternalAgentOutcome(0) + 20)) = a2;
  sub_23F126078();
}

void MessagePayload.ExternalAgentOutcome.init(outcome:)(uint64_t a1@<X8>)
{
  uint64_t v2;

  ActionOutcome.asStatementOutcome.getter();
  sub_23F250838(v2, type metadata accessor for ActionOutcome);
  *(_QWORD *)(a1 + *(int *)(type metadata accessor for MessagePayload.ExternalAgentOutcome(0) + 20)) = MEMORY[0x24BEE4AF8];
  sub_23F126078();
}

void MessagePayload.ExternalAgentOutcome.init(outcome:responseText:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_23F24FF00();
  type metadata accessor for StatementOutcome(v3);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F15E50C();
  ActionOutcome.asStatementOutcome.getter();
  sub_23F250838(v5, type metadata accessor for ActionOutcome);
  sub_23F251A9C(v2, v1);
  *(_QWORD *)(v1 + *(int *)(type metadata accessor for MessagePayload.ExternalAgentOutcome(0) + 20)) = v0;
  sub_23F131ABC();
}

uint64_t static MessagePayload.ExternalAgentOutcome.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_23F1C3298(a1, a2, (uint64_t)static StatementOutcome.== infix(_:_:), type metadata accessor for MessagePayload.ExternalAgentOutcome, (uint64_t (*)(uint64_t))sub_23F129820);
}

uint64_t sub_23F1C3298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t))
{
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;

  sub_23F180250();
  if ((v6() & 1) == 0)
    return 0;
  v7 = a4(0);
  v8 = sub_23F251830(*(int *)(v7 + 20));
  return a5(v8);
}

uint64_t sub_23F1C3300(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023F294500 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEC00000074786554)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1C3400(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65736E6F70736572;
  else
    return 0xD000000000000010;
}

uint64_t sub_23F1C3444()
{
  char *v0;

  return sub_23F1C3400(*v0);
}

uint64_t sub_23F1C344C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C3300(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1C3470()
{
  sub_23F1F5798();
  return sub_23F2688B8();
}

uint64_t sub_23F1C3498()
{
  sub_23F1F5798();
  return sub_23F2688C4();
}

void MessagePayload.ExternalAgentOutcome.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v6[3];
  char v7;

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E03B90);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1F5798();
  sub_23F18A998();
  v7 = 0;
  sub_23F250200();
  sub_23F12E488((uint64_t)&unk_256E03A38);
  sub_23F126188();
  if (!v0)
  {
    v6[2] = *(_QWORD *)(v1 + *(int *)(type metadata accessor for MessagePayload.ExternalAgentOutcome(0) + 20));
    sub_23F250C40();
    sub_23F1217E8(&qword_256DFE7C8);
    sub_23F12EA6C((uint64_t)&unk_256DFE7D0);
    sub_23F126188();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void MessagePayload.ExternalAgentOutcome.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F131874();
  v5 = v4;
  v17 = v6;
  v7 = sub_23F250200();
  sub_23F251E80(v7);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F18ABFC(v9, v16);
  sub_23F1217E8(&qword_256E03BA0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F1A9864();
  v12 = type metadata accessor for MessagePayload.ExternalAgentOutcome(v11);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F126058();
  sub_23F24EE44(v5);
  sub_23F1F5798();
  sub_23F24FFB4();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F12E488((uint64_t)&unk_256E03A50);
    sub_23F1A9D04();
    sub_23F24FDC8();
    sub_23F1BE0F4(v18, v1, type metadata accessor for StatementOutcome);
    sub_23F1217E8(&qword_256DFE7C8);
    sub_23F1A9BB8();
    sub_23F12EA6C((uint64_t)&unk_256DFE7E0);
    sub_23F250C4C();
    sub_23F24FDC8();
    sub_23F15E444(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    *(_QWORD *)(v1 + *(int *)(v12 + 20)) = v19;
    sub_23F24F0B8(v1, v17);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v5);
    v14 = sub_23F252248();
    sub_23F1BE0BC(v14, v15);
  }
  sub_23F15E830();
  sub_23F1313FC();
}

void sub_23F1C37B4()
{
  MessagePayload.ExternalAgentOutcome.init(from:)();
}

void sub_23F1C37C8()
{
  MessagePayload.ExternalAgentOutcome.encode(to:)();
}

uint64_t (*MessagePayload.ExternalAgentQueryRewriteMetadata.originalQuery.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePayload.ExternalAgentQueryRewriteMetadata.rewrites.modify())()
{
  return nullsub_1;
}

uint64_t static MessagePayload.ExternalAgentQueryRewriteMetadata.== infix(_:_:)(uint64_t a1)
{
  return sub_23F1C9184(a1);
}

uint64_t sub_23F1C380C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6C616E696769726FLL && a2 == 0xED00007972657551;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365746972776572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1C391C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7365746972776572;
  else
    return 0x6C616E696769726FLL;
}

uint64_t sub_23F1C3960()
{
  char *v0;

  return sub_23F1C391C(*v0);
}

uint64_t sub_23F1C3968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C380C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1C398C()
{
  sub_23F1F57D4();
  return sub_23F2688B8();
}

uint64_t sub_23F1C39B4()
{
  sub_23F1F57D4();
  return sub_23F2688C4();
}

void MessagePayload.ExternalAgentQueryRewriteMetadata.encode(to:)()
{
  sub_23F1C3A08();
}

void sub_23F1C3A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F131874();
  v7[2] = v1;
  v8 = v0;
  v9 = *(_QWORD *)(sub_23F1A9D7C(v2, v3) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F24FFBC();
  sub_23F2505D8();
  sub_23F25014C();
  if (!v0)
  {
    v10 = v7[1];
    sub_23F1A9BB8();
    sub_23F1217E8(&qword_256DFE7C8);
    sub_23F12EA6C((uint64_t)&unk_256DFE7D0);
    sub_23F1315CC();
  }
  sub_23F126038((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void MessagePayload.ExternalAgentQueryRewriteMetadata.init(from:)()
{
  sub_23F1C3B10();
}

void sub_23F1C3B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F131874();
  v12 = v3;
  v13 = sub_23F1A9D7C(v4, v5);
  sub_23F12611C();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F24FE24();
  sub_23F24F564();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    v9 = v12;
    sub_23F24EF34();
    sub_23F251464();
    sub_23F1217E8(&qword_256DFE7C8);
    sub_23F1A9BB8();
    sub_23F12EA6C((uint64_t)&unk_256DFE7E0);
    sub_23F24F52C();
    sub_23F24EF80();
    sub_23F15E444((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v10 = v14;
    *v9 = v2;
    v9[1] = 0;
    v9[2] = v10;
    sub_23F1315C4();
    sub_23F24EE8C();
    sub_23F131790();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1C3C40()
{
  MessagePayload.ExternalAgentQueryRewriteMetadata.init(from:)();
}

void sub_23F1C3C54()
{
  MessagePayload.ExternalAgentQueryRewriteMetadata.encode(to:)();
}

uint64_t (*MessagePayload.ExternalAgentRequestRewriteMetadata.originalRequest.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePayload.ExternalAgentRequestRewriteMetadata.rewrites.modify())()
{
  return nullsub_1;
}

uint64_t static MessagePayload.ExternalAgentRequestRewriteMetadata.== infix(_:_:)(uint64_t a1)
{
  return sub_23F1C9184(a1);
}

uint64_t type metadata accessor for SystemPromptResolution(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06510);
}

unint64_t sub_23F1C3CAC()
{
  unint64_t result;

  result = qword_256E03340;
  if (!qword_256E03340)
  {
    result = MEMORY[0x242667160](&unk_23F290A84, &type metadata for MessagePayload.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03340);
  }
  return result;
}

unint64_t sub_23F1C3CE8()
{
  unint64_t result;

  result = qword_256E03350;
  if (!qword_256E03350)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestPrescribedPlan, &type metadata for MessagePayload.RequestPrescribedPlan);
    atomic_store(result, (unint64_t *)&qword_256E03350);
  }
  return result;
}

unint64_t sub_23F1C3D24()
{
  unint64_t result;

  result = qword_256E03358;
  if (!qword_256E03358)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ExternalAgentRequestRewriteMetadata, &type metadata for MessagePayload.ExternalAgentRequestRewriteMetadata);
    atomic_store(result, (unint64_t *)&qword_256E03358);
  }
  return result;
}

unint64_t sub_23F1C3D60()
{
  unint64_t result;

  result = qword_256E03370;
  if (!qword_256E03370)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestPrescribedPlan, &type metadata for MessagePayload.RequestPrescribedPlan);
    atomic_store(result, (unint64_t *)&qword_256E03370);
  }
  return result;
}

unint64_t sub_23F1C3D9C()
{
  unint64_t result;

  result = qword_256E03378;
  if (!qword_256E03378)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ExternalAgentRequestRewriteMetadata, &type metadata for MessagePayload.ExternalAgentRequestRewriteMetadata);
    atomic_store(result, (unint64_t *)&qword_256E03378);
  }
  return result;
}

unint64_t sub_23F1C3DD8()
{
  unint64_t result;

  result = qword_256E03388;
  if (!qword_256E03388)
  {
    result = MEMORY[0x242667160](&unk_23F290A34, &type metadata for MessagePayload.RequestContent.StopContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03388);
  }
  return result;
}

unint64_t sub_23F1C3E14()
{
  unint64_t result;

  result = qword_256E03398;
  if (!qword_256E03398)
  {
    result = MEMORY[0x242667160](&unk_23F2909E4, &type metadata for MessagePayload.RequestContent.TextContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03398);
  }
  return result;
}

unint64_t sub_23F1C3E50()
{
  unint64_t result;

  result = qword_256E033B0;
  if (!qword_256E033B0)
  {
    result = MEMORY[0x242667160](&unk_23F290994, &type metadata for MessagePayload.RequestContent.SpeechContent.Candidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E033B0);
  }
  return result;
}

unint64_t sub_23F1C3E8C()
{
  unint64_t result;

  result = qword_256E033C8;
  if (!qword_256E033C8)
  {
    result = MEMORY[0x242667160](&unk_23F290944, &type metadata for MessagePayload.RequestContent.SpeechContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E033C8);
  }
  return result;
}

unint64_t sub_23F1C3EC8()
{
  unint64_t result;

  result = qword_256E033E0;
  if (!qword_256E033E0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestContent.SpeechContent.Candidate, &type metadata for MessagePayload.RequestContent.SpeechContent.Candidate);
    atomic_store(result, (unint64_t *)&qword_256E033E0);
  }
  return result;
}

unint64_t sub_23F1C3F04()
{
  unint64_t result;

  result = qword_256E033F8;
  if (!qword_256E033F8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestContent.SpeechContent.Candidate, &type metadata for MessagePayload.RequestContent.SpeechContent.Candidate);
    atomic_store(result, (unint64_t *)&qword_256E033F8);
  }
  return result;
}

uint64_t sub_23F1C3F40(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6C616E696769726FLL && a2 == 0xEF74736575716552;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365746972776572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1C4050(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7365746972776572;
  else
    return 0x6C616E696769726FLL;
}

uint64_t sub_23F1C4094()
{
  char *v0;

  return sub_23F1C4050(*v0);
}

uint64_t sub_23F1C409C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C3F40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1C40C0()
{
  sub_23F1F5810();
  return sub_23F2688B8();
}

uint64_t sub_23F1C40E8()
{
  sub_23F1F5810();
  return sub_23F2688C4();
}

void MessagePayload.ExternalAgentRequestRewriteMetadata.encode(to:)()
{
  sub_23F1C3A08();
}

void MessagePayload.ExternalAgentRequestRewriteMetadata.init(from:)()
{
  sub_23F1C3B10();
}

void sub_23F1C4168()
{
  MessagePayload.ExternalAgentRequestRewriteMetadata.init(from:)();
}

void sub_23F1C417C()
{
  MessagePayload.ExternalAgentRequestRewriteMetadata.encode(to:)();
}

uint64_t MessagePayload.ClientUndoRedoRequest.token.getter()
{
  return sub_23F1EF104();
}

uint64_t MessagePayload.ClientUndoRedoRequest.token.setter(uint64_t a1)
{
  return sub_23F1EF140(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*MessagePayload.ClientUndoRedoRequest.token.modify())()
{
  return nullsub_1;
}

void MessagePayload.ClientUndoRedoRequest.operation.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F1A9744();
  *v0 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for MessagePayload.ClientUndoRedoRequest(v2) + 20));
  sub_23F126078();
}

void MessagePayload.ClientUndoRedoRequest.operation.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for MessagePayload.ClientUndoRedoRequest(0) + 20)) = v2;
  sub_23F126078();
}

uint64_t (*MessagePayload.ClientUndoRedoRequest.operation.modify())()
{
  type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
  sub_23F180384();
  return nullsub_1;
}

uint64_t MessagePayload.ClientUndoRedoRequest.statementId.getter()
{
  return sub_23F1DA1EC();
}

void MessagePayload.ClientUndoRedoRequest.statementId.setter(uint64_t a1)
{
  sub_23F1DA220(a1, type metadata accessor for MessagePayload.ClientUndoRedoRequest);
}

uint64_t (*MessagePayload.ClientUndoRedoRequest.statementId.modify())()
{
  type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
  sub_23F18030C();
  return nullsub_1;
}

void MessagePayload.ClientUndoRedoRequest.init(token:operation:statementId:)(char *a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  v5 = *a2;
  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a2 + 2);
  v8 = sub_23F131B8C();
  sub_23F24F1C0(v8);
  v9 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
  *(_BYTE *)(a3 + *(int *)(v9 + 20)) = v4;
  v10 = a3 + *(int *)(v9 + 24);
  *(_DWORD *)v10 = v5;
  *(_QWORD *)(v10 + 8) = v6;
  *(_QWORD *)(v10 + 16) = v7;
  sub_23F131ABC();
}

void MessagePayload.ClientUndoRedoRequest.UndoOperation.hash(into:)()
{
  sub_23F18AC30();
  sub_23F126078();
}

uint64_t sub_23F1C42DC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 1868852853 && a2 == 0xE400000000000000;
  if (v3 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1868850546 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1C43A4(char a1)
{
  if ((a1 & 1) != 0)
    return 1868850546;
  else
    return 1868852853;
}

uint64_t sub_23F1C43C0()
{
  char *v0;

  return sub_23F1C43A4(*v0);
}

uint64_t sub_23F1C43C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C42DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1C43EC()
{
  sub_23F1F5860();
  return sub_23F2688B8();
}

uint64_t sub_23F1C4414()
{
  sub_23F1F5860();
  return sub_23F2688C4();
}

uint64_t sub_23F1C443C()
{
  sub_23F1F589C();
  return sub_23F2688B8();
}

uint64_t sub_23F1C4464()
{
  sub_23F1F589C();
  return sub_23F2688C4();
}

uint64_t sub_23F1C448C()
{
  sub_23F1F58D8();
  return sub_23F2688B8();
}

uint64_t sub_23F1C44B4()
{
  sub_23F1F58D8();
  return sub_23F2688C4();
}

void MessagePayload.ClientUndoRedoRequest.UndoOperation.encode(to:)()
{
  char *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  _QWORD v14[4];
  uint64_t v15;
  uint64_t v16;

  sub_23F131874();
  v16 = v1;
  v3 = v2;
  v4 = sub_23F1217E8(&qword_256E03BD8);
  v14[2] = *(_QWORD *)(v4 - 8);
  v14[3] = v4;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1316E4();
  v6 = sub_23F1217E8(&qword_256E03BE0);
  v14[0] = *(_QWORD *)(v6 - 8);
  v14[1] = v6;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15EB6C();
  v15 = *(_QWORD *)(sub_23F1217E8(&qword_256E03BE8) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v0;
  sub_23F24FC14(v3);
  sub_23F1F5860();
  sub_23F24FDB4();
  if ((v11 & 1) != 0)
  {
    sub_23F1F589C();
    sub_23F24EE10();
    v12 = sub_23F2500BC();
  }
  else
  {
    sub_23F1F58D8();
    sub_23F24EE10();
    v12 = sub_23F24FA10();
  }
  v13(v12);
  sub_23F15E588((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  sub_23F251E48();
  sub_23F1313FC();
}

void MessagePayload.ClientUndoRedoRequest.UndoOperation.init(from:)()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F131874();
  sub_23F2512B8(v3);
  v31 = sub_23F1217E8(&qword_256E03C08);
  v33 = *(_QWORD *)(v31 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F18ABFC(v5, v29[0]);
  v32 = sub_23F1217E8(&qword_256E03C10);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F15E524();
  sub_23F1217E8(&qword_256E03C18);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F24ED3C(v2);
  sub_23F1F5860();
  v10 = v34;
  sub_23F15E564();
  if (v10)
    goto LABEL_7;
  sub_23F24F6CC();
  sub_23F25129C();
  if (!v11
    || (v29[0] = 0,
        v12 = sub_23F24F368(),
        v18 = sub_23F15E2D0(v12, v13, v14, v15, v16, v17),
        v20 = v19,
        v22 = v21,
        sub_23F15EB24(),
        v20 != v22 >> 1))
  {
    sub_23F15EDB8();
    sub_23F131B30();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F250EB8();
    sub_23F2502A0((uint64_t)&type metadata for MessagePayload.ClientUndoRedoRequest.UndoOperation);
    v24 = sub_23F15E6B4();
    sub_23F24EF6C(v24, *MEMORY[0x24BEE26D0]);
    sub_23F2519E0();
    sub_23F15E96C();
    v25 = sub_23F2500C8();
    v26(v25);
    v2 = v30;
LABEL_7:
    v27 = (uint64_t)v2;
    goto LABEL_8;
  }
  if ((v2 & 1) != 0)
  {
    sub_23F250EFC();
    sub_23F1F589C();
    sub_23F24F3C4();
    v23 = v34;
    sub_23F250DC0();
    sub_23F2502BC();
    sub_23F15E96C();
    sub_23F15E588(v18, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    LOBYTE(v2) = v32;
  }
  else
  {
    sub_23F1F58D8();
    sub_23F24F538();
    v28 = v34;
    sub_23F250DC0();
    sub_23F24F9F0(v1, *(uint64_t (**)(uint64_t, _QWORD))(v29[1] + 8));
    sub_23F15E96C();
    sub_23F15E7D4((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
  }
  *v0 = (_BYTE)v2;
  v27 = (uint64_t)v30;
LABEL_8:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v27);
  sub_23F24F9F8();
  sub_23F1313FC();
}

void sub_23F1C48A8()
{
  MessagePayload.ClientUndoRedoRequest.UndoOperation.init(from:)();
}

void sub_23F1C48BC()
{
  MessagePayload.ClientUndoRedoRequest.UndoOperation.encode(to:)();
}

void static MessagePayload.ClientUndoRedoRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  if ((sub_23F1A9880() & 1) != 0)
  {
    v2 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
    if (*(unsigned __int8 *)(v1 + *(int *)(v2 + 20)) == *(unsigned __int8 *)(v0 + *(int *)(v2 + 20)))
    {
      sub_23F24F944();
      if (v8)
      {
        sub_23F251514();
        if (v5)
        {
          if (v3)
          {
            sub_23F2500AC(v4);
            v8 = v8 && v6 == v7;
            if (!v8)
              sub_23F126148();
          }
        }
      }
    }
  }
  sub_23F126078();
}

uint64_t sub_23F1C494C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E656B6F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F1C4AB4(char a1)
{
  if (!a1)
    return 0x6E656B6F74;
  if (a1 == 1)
    return 0x6F6974617265706FLL;
  return 0x6E656D6574617473;
}

uint64_t sub_23F1C4B14()
{
  char *v0;

  return sub_23F1C4AB4(*v0);
}

uint64_t sub_23F1C4B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C494C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1C4B40()
{
  sub_23F1F5914();
  return sub_23F2688B8();
}

uint64_t sub_23F1C4B68()
{
  sub_23F1F5914();
  return sub_23F2688C4();
}

void MessagePayload.ClientUndoRedoRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  int v8;
  __int128 v9;

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E03C20);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1F5914();
  sub_23F18A998();
  LOBYTE(v8) = 0;
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&qword_256DFEF10);
  sub_23F126188();
  if (!v0)
  {
    v6 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
    LOBYTE(v8) = *(_BYTE *)(v1 + *(int *)(v6 + 20));
    sub_23F15EC34();
    sub_23F1F5950();
    sub_23F17F99C();
    v7 = (int *)(v1 + *(int *)(v6 + 24));
    v8 = *v7;
    v9 = *(_OWORD *)(v7 + 2);
    sub_23F250C34();
    sub_23F163BDC();
    sub_23F17F99C();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void MessagePayload.ClientUndoRedoRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  sub_23F131874();
  v6 = v5;
  v15 = v7;
  sub_23F131B8C();
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F17FFE0(v9, v14);
  sub_23F1217E8(&qword_256E03C38);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F17FFA8();
  v12 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(v11);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F15E50C();
  sub_23F24F270(v6);
  sub_23F1F5914();
  sub_23F251268();
  sub_23F24F86C();
  if (v1)
  {
    sub_23F24FB7C();
  }
  else
  {
    LOBYTE(v17) = 0;
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F2507AC();
    sub_23F17FE68();
    sub_23F250DD4(v3, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    sub_23F15EC34();
    sub_23F1F598C();
    sub_23F17FE68();
    *(_BYTE *)(v3 + *(int *)(v12 + 20)) = 0;
    sub_23F250AEC(2);
    sub_23F17FE68();
    sub_23F17FF08(v4, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    sub_23F24FD60(v17);
    sub_23F24F0B8(v3, v15);
    sub_23F24FB7C();
    sub_23F24F1B8(v3);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1C4EF0()
{
  MessagePayload.ClientUndoRedoRequest.init(from:)();
}

void sub_23F1C4F04()
{
  MessagePayload.ClientUndoRedoRequest.encode(to:)();
}

uint64_t MessagePayload.ActionSummaryUpdate.originActionRequestId.getter()
{
  return sub_23F1EF104();
}

uint64_t MessagePayload.ActionSummaryUpdate.originActionRequestId.setter(uint64_t a1)
{
  return sub_23F1EF140(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*MessagePayload.ActionSummaryUpdate.originActionRequestId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ActionSummaryUpdate.summary.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_23F1A9744();
  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(v2) + 20));
  v4 = v3[1];
  v5 = v3[2];
  *v0 = *v3;
  v0[1] = v4;
  v0[2] = v5;
  swift_bridgeObjectRetain();
  return sub_23F14C284();
}

void MessagePayload.ActionSummaryUpdate.summary.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = v1 + *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
  swift_bridgeObjectRelease();
  sub_23F1317F8();
  *(_QWORD *)v4 = v3;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 1);
  sub_23F12612C();
}

uint64_t (*MessagePayload.ActionSummaryUpdate.summary.modify())()
{
  type metadata accessor for MessagePayload.ActionSummaryUpdate(0);
  sub_23F180384();
  return nullsub_1;
}

__n128 MessagePayload.ActionSummaryUpdate.init(originActionRequestId:summary:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;
  __int128 v7;

  sub_23F251650();
  v3 = *v2;
  v4 = sub_23F131B8C();
  v7 = *(_OWORD *)(v0 + 8);
  sub_23F126138(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  v5 = v1 + *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
  *(_QWORD *)v5 = v3;
  *(_OWORD *)(v5 + 8) = v7;
  sub_23F131634();
  return result;
}

void static MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.== infix(_:_:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  sub_23F18039C();
  v2 = *v0;
  v3 = v0[1];
  v4 = *v1;
  v5 = v1[1];
  v6 = *((unsigned __int8 *)v1 + 16);
  if (*((_BYTE *)v0 + 16))
  {
    if (*((_BYTE *)v0 + 16) == 1)
    {
      if (v6 == 1)
        sub_23F2522D8();
      goto LABEL_17;
    }
    if (v6 == 2 && (v2 != v4 || v3 != v5))
LABEL_10:
      sub_23F126148();
  }
  else if (!*((_BYTE *)v1 + 16) && (v2 != v4 || v3 != v5))
  {
    goto LABEL_10;
  }
LABEL_17:
  sub_23F250DE4();
  sub_23F125D18(v9, v10, v11);
  sub_23F252158();
  sub_23F125D18(v12, v13, v14);
  sub_23F252158();
  sub_23F125D40(v15, v16, v17);
  sub_23F250DE4();
  sub_23F125D40(v18, v19, v20);
  sub_23F131680();
}

void static MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues.== infix(_:_:)(_QWORD **a1, _QWORD **a2)
{
  sub_23F129820(*a1, *a2);
}

uint64_t sub_23F1C516C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7365756C6176 && a2 == 0xE600000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6C6F686563616C70 && a2 == 0xEB00000000726564)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F1C52C0(char a1)
{
  if (!a1)
    return 0x65756C6176;
  if (a1 == 1)
    return 0x7365756C6176;
  return 0x6C6F686563616C70;
}

uint64_t sub_23F1C5318()
{
  char *v0;

  return sub_23F1C52C0(*v0);
}

uint64_t sub_23F1C5320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C516C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1C5344()
{
  sub_23F1F59DC();
  return sub_23F2688B8();
}

uint64_t sub_23F1C536C()
{
  sub_23F1F59DC();
  return sub_23F2688C4();
}

uint64_t sub_23F1C5394()
{
  sub_23F1F5A18();
  return sub_23F2688B8();
}

uint64_t sub_23F1C53BC()
{
  sub_23F1F5A18();
  return sub_23F2688C4();
}

uint64_t sub_23F1C53E4()
{
  sub_23F1F5B08();
  return sub_23F2688B8();
}

uint64_t sub_23F1C540C()
{
  sub_23F1F5B08();
  return sub_23F2688C4();
}

uint64_t sub_23F1C5434()
{
  sub_23F1F5A90();
  return sub_23F2688B8();
}

uint64_t sub_23F1C545C()
{
  sub_23F1F5A90();
  return sub_23F2688C4();
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F131874();
  v3 = v2;
  v18 = *(_QWORD *)(sub_23F1217E8(&qword_256E03C48) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F24ED20(v5, v15);
  sub_23F1217E8(&qword_256E03C50);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F15EB6C();
  sub_23F1217E8(&qword_256E03C58);
  sub_23F2512AC();
  v16 = v7;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F15E524();
  sub_23F1217E8(&qword_256E03C60);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F15E50C();
  v10 = *(unsigned __int8 *)(v1 + 16);
  sub_23F1A968C(v3);
  sub_23F1F59DC();
  sub_23F15EBF0();
  if (v10)
  {
    if (v10 == 1)
    {
      sub_23F251FAC();
      sub_23F15E6E8();
      sub_23F1F5ACC();
      sub_23F1AE450();
      v11 = sub_23F24FA10();
    }
    else
    {
      sub_23F251EC8();
      sub_23F15E6E8();
      sub_23F250F8C();
      sub_23F1F5A54();
      sub_23F1AE450();
      v12 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
      v11 = v17;
    }
    sub_23F15E588(v11, v12);
    v13 = sub_23F24FBB0();
  }
  else
  {
    sub_23F1F5B08();
    sub_23F15E6E8();
    sub_23F250F8C();
    sub_23F1F5B44();
    sub_23F1AE450();
    sub_23F1A977C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    v13 = sub_23F15EB40();
  }
  v14(v13);
  sub_23F24F920();
  sub_23F1313FC();
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_23F131874();
  sub_23F252208();
  v48 = v14;
  v47 = sub_23F1217E8(&qword_256E03CA0);
  v45 = *(_QWORD *)(v47 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F17FBC8(v16, v41[0]);
  v46 = sub_23F1217E8(&qword_256E03CA8);
  v44 = *(_QWORD *)(v46 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F1A982C(v18, v41[0]);
  v19 = sub_23F1217E8(&qword_256E03CB0);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F1316E4();
  sub_23F1217E8(&qword_256E03CB8);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v11;
  sub_23F24EE44(v11);
  sub_23F1F59DC();
  sub_23F250D14();
  sub_23F18037C();
  if (a10)
    goto LABEL_8;
  v41[1] = v19;
  v42 = v13;
  v41[0] = v10;
  v24 = v50;
  v43 = v12;
  v54 = (uint64_t)v23;
  v25 = sub_23F2514C4();
  v26 = *(_QWORD *)(v25 + 16);
  if (!v26
    || (v27 = *(unsigned __int8 *)(v25 + 32),
        sub_23F15E2D0(1, v26, v25, v25 + 32, 0, (2 * v26) | 1),
        v29 = v28,
        v31 = v30,
        sub_23F131930(),
        v29 != v31 >> 1))
  {
    v33 = v43;
    v34 = sub_23F15EDB8();
    sub_23F131B30();
    v36 = v35;
    sub_23F1217E8(&qword_256DFF4B8);
    *v36 = &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary;
    sub_23F2503CC();
    sub_23F15E6B4();
    sub_23F24F678((uint64_t)v36, *MEMORY[0x24BEE26D0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104));
    swift_willThrow();
    sub_23F15E96C();
    sub_23F15E44C(v54, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
LABEL_8:
    sub_23F1A9CF0();
    goto LABEL_9;
  }
  if (v27)
  {
    if (v27 == 1)
    {
      sub_23F251FAC();
      v32 = v49;
      sub_23F24EC60();
      sub_23F1F5BBC();
      sub_23F18012C();
      sub_23F250EC4();
      sub_23F24EEAC(v44);
      sub_23F24F164();
      sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
      v38 = 0;
      v39 = v52;
    }
    else
    {
      sub_23F251EC8();
      sub_23F24EC60();
      sub_23F1F5B80();
      sub_23F18012C();
      sub_23F250EC4();
      sub_23F24EEAC(v45);
      sub_23F24F164();
      sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
      v39 = v52;
      v38 = v53;
    }
  }
  else
  {
    LOBYTE(v52) = 0;
    sub_23F1F5B08();
    v37 = v42;
    sub_23F24EDE0();
    sub_23F1F5BF8();
    sub_23F18012C();
    sub_23F15E588(v37, *(uint64_t (**)(uint64_t, uint64_t))(v41[0] + 8));
    sub_23F1AE3A8();
    sub_23F15E444((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));
    v39 = v52;
    v38 = v53;
  }
  v40 = v48;
  *v48 = v39;
  v40[1] = v38;
  *((_BYTE *)v40 + 16) = v27;
  sub_23F1A9CF0();
LABEL_9:
  sub_23F17FDF4();
  sub_23F1313FC();
}

void sub_23F1C5B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1C5B60()
{
  MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.encode(to:)();
}

uint64_t (*MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue.summary.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1C5B88()
{
  sub_23F1F5C34();
  return sub_23F2688B8();
}

uint64_t sub_23F1C5BB0()
{
  sub_23F1F5C34();
  return sub_23F2688C4();
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue.encode(to:)()
{
  sub_23F1EBEC8();
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue.init(from:)()
{
  sub_23F1EBFA0();
}

void sub_23F1C5C38()
{
  MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue.init(from:)();
}

void sub_23F1C5C4C()
{
  MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue.encode(to:)();
}

uint64_t (*MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues.summaries.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1C5C70(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x656972616D6D7573 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1C5D00()
{
  return 0x656972616D6D7573;
}

uint64_t sub_23F1C5D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C5C70(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1C5D48()
{
  sub_23F1F5C70();
  return sub_23F2688B8();
}

uint64_t sub_23F1C5D70()
{
  sub_23F1F5C70();
  return sub_23F2688C4();
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues.encode(to:)()
{
  sub_23F1B6E98();
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues.init(from:)()
{
  sub_23F1B6FA0();
}

void sub_23F1C5DF0()
{
  MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues.init(from:)();
}

void sub_23F1C5E04()
{
  MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues.encode(to:)();
}

uint64_t (*MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder.summary.modify())()
{
  return nullsub_1;
}

void sub_23F1C5E28(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7972616D6D7573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F2509B4();
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F1C5E9C()
{
  return 0x7972616D6D7573;
}

void sub_23F1C5EB4(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F1C5E28(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F1C5EDC()
{
  sub_23F1F5CAC();
  return sub_23F2688B8();
}

uint64_t sub_23F1C5F04()
{
  sub_23F1F5CAC();
  return sub_23F2688C4();
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder.encode(to:)()
{
  sub_23F1EBEC8();
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder.init(from:)()
{
  sub_23F1EBFA0();
}

void sub_23F1C5F8C()
{
  MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder.init(from:)();
}

void sub_23F1C5FA0()
{
  MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder.encode(to:)();
}

uint64_t (*MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.formatString.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.parameterSummaries.modify())()
{
  return nullsub_1;
}

void sub_23F1C5FD4(uint64_t a1)
{
  sub_23F1C6030(a1, &qword_256E03D20, qword_256E031E8, MEMORY[0x24BEB9388]);
}

uint64_t static MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.formatStringVariableCaptureReference.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F1C6098(&qword_256DFE4C8, (uint64_t)qword_256E031E8, a1);
}

void sub_23F1C6014(uint64_t a1)
{
  sub_23F1C6030(a1, &qword_256E03D28, qword_256E03200, MEMORY[0x24BEB9390]);
}

void sub_23F1C6030(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F1217E8(a2);
  sub_23F1470EC(v6, a3);
  v7 = sub_23F24F288();
  sub_23F146E30(v7, v8);
  a4();
  sub_23F12612C();
}

uint64_t static MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.formatStringVariableRegex.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23F1C6098(&qword_256DFE4D0, (uint64_t)qword_256E03200, a1);
}

uint64_t sub_23F1C6098@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_23F126388();
  v6 = sub_23F146E30(v5, a2);
  return sub_23F24EEBC(a3, v6, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 16));
}

uint64_t static MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.== infix(_:_:)(uint64_t a1)
{
  return sub_23F1C9184(a1);
}

uint64_t sub_23F1C6104(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x745374616D726F66 && a2 == 0xEC000000676E6972;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023F2945C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1C6208(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000012;
  else
    return 0x745374616D726F66;
}

uint64_t sub_23F1C624C()
{
  char *v0;

  return sub_23F1C6208(*v0);
}

uint64_t sub_23F1C6254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C6104(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1C6278()
{
  sub_23F1F5CE8();
  return sub_23F2688B8();
}

uint64_t sub_23F1C62A0()
{
  sub_23F1F5CE8();
  return sub_23F2688C4();
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F131874();
  sub_23F250B2C();
  v8 = *(_QWORD *)(sub_23F1217E8(&qword_256E03D30) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v0 + 16);
  sub_23F24EE44(v2);
  sub_23F1F5CE8();
  sub_23F18ABDC();
  sub_23F131644();
  if (!v1)
  {
    v9 = v7;
    sub_23F1A9BB8();
    sub_23F1217E8(&qword_256E03D40);
    sub_23F1F5D60((uint64_t)&unk_256E03D48);
    sub_23F1315CC();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  sub_23F131874();
  sub_23F15E7E8();
  sub_23F1217E8(&qword_256E03D58);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1F5CE8();
  sub_23F15E564();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F24EF34();
    sub_23F251464();
    sub_23F1217E8(&qword_256E03D40);
    sub_23F1A9BB8();
    sub_23F1F5D60((uint64_t)&unk_256E03D60);
    sub_23F24F52C();
    sub_23F24EF80();
    sub_23F15E444((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    v8 = v9[1];
    *v1 = v3;
    v1[1] = v2;
    v1[2] = v8;
    sub_23F1315C4();
    sub_23F24EE8C();
    sub_23F131790();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1C6514()
{
  MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.init(from:)();
}

void sub_23F1C6528()
{
  MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.encode(to:)();
}

void static MessagePayload.ActionSummaryUpdate.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;

  if ((sub_23F1A9880() & 1) != 0)
  {
    v2 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
    v3 = *(_QWORD *)(v1 + v2);
    v4 = *(_QWORD *)(v1 + v2 + 8);
    v5 = (_QWORD *)(v0 + v2);
    v6 = v3 == *v5 && v4 == v5[1];
    if (v6 || (sub_23F126148() & 1) != 0)
    {
      sub_23F1315C4();
      sub_23F13175C();
      sub_23F1263B8();
      sub_23F131798();
      v7 = sub_23F14C3A8();
      sub_23F122280(v7, v8);
      sub_23F1262C0();
      sub_23F1317F8();
      sub_23F131A30();
      sub_23F1318B8();
    }
  }
  sub_23F131ABC();
}

uint64_t sub_23F1C65DC(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000015 && a2 == 0x800000023F2945E0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7972616D6D7573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1C66C4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7972616D6D7573;
  else
    return 0xD000000000000015;
}

uint64_t sub_23F1C6700()
{
  char *v0;

  return sub_23F1C66C4(*v0);
}

uint64_t sub_23F1C6708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C65DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1C672C()
{
  sub_23F1F5E08();
  return sub_23F2688B8();
}

uint64_t sub_23F1C6754()
{
  sub_23F1F5E08();
  return sub_23F2688C4();
}

void MessagePayload.ActionSummaryUpdate.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[8];
  uint64_t v8;
  __int128 v9;

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E03D70);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F1F5E08();
  sub_23F18A998();
  LOBYTE(v8) = 0;
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&qword_256DFEF10);
  sub_23F126188();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ActionSummaryUpdate(0);
    sub_23F2515A0();
    v8 = v5;
    v9 = *(_OWORD *)(v6 + 8);
    v7[7] = 1;
    sub_23F1F5E44();
    sub_23F17F99C();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void MessagePayload.ActionSummaryUpdate.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  sub_23F131874();
  v5 = v4;
  v15 = v6;
  sub_23F131B8C();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F1A94D4(v8, v14);
  sub_23F1217E8(&qword_256E03D88);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F125FBC();
  v11 = type metadata accessor for MessagePayload.ActionSummaryUpdate(v10);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F1316E4();
  sub_23F24F1D8(v5);
  sub_23F1F5E08();
  sub_23F2509F4();
  sub_23F1A9814();
  if (v0)
  {
    sub_23F24FB7C();
  }
  else
  {
    LOBYTE(v16) = 0;
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F2507AC();
    sub_23F17FABC();
    sub_23F24FDA0();
    sub_23F15EC34();
    sub_23F1F5E80();
    sub_23F2507CC();
    sub_23F17FABC();
    sub_23F15E7D4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v13 = v3 + *(int *)(v11 + 20);
    *(_QWORD *)v13 = v16;
    *(_OWORD *)(v13 + 8) = v17;
    sub_23F24F0B8(v3, v15);
    sub_23F2516AC();
    sub_23F24F1B8(v3);
  }
  sub_23F17FDF4();
  sub_23F1313FC();
}

void sub_23F1C6A68()
{
  MessagePayload.ActionSummaryUpdate.init(from:)();
}

void sub_23F1C6A7C()
{
  MessagePayload.ActionSummaryUpdate.encode(to:)();
}

void static MessagePayload.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  _QWORD v99[57];
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  sub_23F125F3C();
  v101 = v1;
  v100 = v2;
  type metadata accessor for SessionServerDebuggerEvent(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  v5 = sub_23F18016C((uint64_t)v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SessionClientDebuggerEvent(v5);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_23F18016C((uint64_t)v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v99[4] = type metadata accessor for MessagePayload.ActionSummaryUpdate(v8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  v11 = sub_23F18016C((uint64_t)v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for MessagePayload.ClientUndoRedoRequest(v11);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F125F70();
  v14 = sub_23F18016C(v13);
  v99[3] = type metadata accessor for MessagePayload.ExternalAgentOutcome(v14);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F125F70();
  v17 = sub_23F18016C(v16);
  type metadata accessor for MessagePayload.ExternalAgentRequest(v17);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F125F70();
  v20 = sub_23F18016C(v19);
  type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(v20);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F125F70();
  v23 = sub_23F18016C(v22);
  type metadata accessor for MessagePayload.ExternalAgentTextQuery(v23);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v24);
  v26 = sub_23F18016C((uint64_t)v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SystemResponse(v26);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F125F70();
  v29 = sub_23F18016C(v28);
  type metadata accessor for ActionResponse(v29);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F125F70();
  v32 = sub_23F18016C(v31);
  type metadata accessor for SystemPromptResolution(v32);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v33);
  v35 = sub_23F18016C((uint64_t)v99 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v99[6] = type metadata accessor for SystemPrompt(v35);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F125F70();
  v38 = sub_23F18016C(v37);
  type metadata accessor for MessagePayload.ClientActionResult(v38);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v39);
  v41 = sub_23F18016C((uint64_t)v99 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for MessagePayload.ClientAction(v41);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F125F70();
  v44 = sub_23F18016C(v43);
  v99[2] = type metadata accessor for MessagePayload.ClientEffectResolved(v44);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F125F70();
  v47 = sub_23F18016C(v46);
  type metadata accessor for MessagePayload.ClientEffectInvocation(v47);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v48);
  v50 = sub_23F18016C((uint64_t)v99 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  v99[1] = type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(v50);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F125F70();
  v53 = sub_23F18016C(v52);
  type metadata accessor for MessagePayload.Request(v53);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F125F70();
  v56 = sub_23F18016C(v55);
  v99[54] = type metadata accessor for MessagePayload(v56);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F14EFA0();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v59);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v67);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v71);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v72);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v74);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v77);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v79);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v81);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v82);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v83);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v84);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v85);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v86);
  sub_23F24F388();
  MEMORY[0x24BDAC7A8](v87);
  sub_23F24F0A4();
  MEMORY[0x24BDAC7A8](v88);
  sub_23F1A9470();
  MEMORY[0x24BDAC7A8](v89);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v90);
  sub_23F1A96CC();
  MEMORY[0x24BDAC7A8](v91);
  sub_23F24F358();
  MEMORY[0x24BDAC7A8](v92);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v93);
  sub_23F1217E8(&qword_256E03D98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v94);
  sub_23F15EB6C();
  v96 = v0 + *(int *)(v95 + 48);
  sub_23F1BE1A0(v100, v0, type metadata accessor for MessagePayload);
  v97 = v101;
  v101 = v96;
  sub_23F1BE1A0(v97, v96, type metadata accessor for MessagePayload);
  v102 = v0;
  v98 = (char *)sub_23F1C71D8 + 4 * word_23F278C96[sub_23F24EDA0()];
  __asm { BR              X10 }
}

void sub_23F1C71D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_23F24ED10();
  sub_23F1BE1A0(v3, v0, v4);
  v5 = *(_QWORD *)(v2 - 320);
  if (sub_23F24EDA0())
  {
    sub_23F1BE0BC(v0, type metadata accessor for MessagePayload.Request);
    sub_23F125E40(v1, &qword_256E03D98);
  }
  else
  {
    v6 = v5;
    v7 = *(_QWORD *)(v2 - 744);
    sub_23F24EE5C(v6, v7);
    sub_23F14C64C();
    static MessagePayload.Request.== infix(_:_:)();
    sub_23F24F0CC(v7);
    sub_23F24F0CC(v0);
    sub_23F1BE0BC(v1, type metadata accessor for MessagePayload);
  }
  sub_23F125EFC();
}

void static SystemPrompt.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;

  if ((sub_23F1A9880() & 1) != 0
    && ((v0 = type metadata accessor for SystemPrompt(0), sub_23F24F08C(*(int *)(v0 + 20)), v3)
      ? (v3 = v1 == v2)
      : (v3 = 0),
        v3 || (sub_23F126148() & 1) != 0))
  {
    sub_23F25198C();
    static SystemPrompt.Prompt.== infix(_:_:)();
  }
  else
  {
    sub_23F12612C();
  }
}

void static ActionResponse.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  char v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  uint64_t v60;
  unsigned __int8 v61;
  uint64_t v62;
  unsigned __int8 v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  unsigned __int8 v76;
  unsigned __int8 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  unsigned __int8 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned __int8 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD v105[3];
  char v106;
  uint64_t v107;
  uint64_t v108;
  __int16 v109;
  uint64_t v110;
  uint64_t v111[3];
  unsigned __int8 v112;
  uint64_t v113;
  uint64_t v114;
  unsigned __int8 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  sub_23F125F3C();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F131B8C();
  v104 = *(_QWORD *)(v8 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F125F70();
  v100 = v10;
  v11 = sub_23F1217E8(&qword_256E01490);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F15E50C();
  sub_23F126388();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F1A9470();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1A9A0C();
  v103 = v7;
  sub_23F24F7B4(v7, v2);
  v102 = v5;
  sub_23F24F7B4(v5, v3);
  v16 = v0 + *(int *)(v11 + 48);
  v17 = sub_23F2504F0();
  sub_23F24F7B4(v17, v18);
  sub_23F24F7B4(v3, v16);
  sub_23F1A92D8(v0);
  if (v19)
  {
    sub_23F24FC2C(v3);
    sub_23F24FC2C(v2);
    sub_23F1A92D8(v16);
    if (v19)
    {
      sub_23F125E40(v0, &qword_256DFEB98);
      goto LABEL_11;
    }
LABEL_9:
    sub_23F125E40(v0, &qword_256E01490);
    goto LABEL_41;
  }
  sub_23F1752C4(v0, v1, &qword_256DFEB98);
  sub_23F1A92D8(v16);
  if (v19)
  {
    sub_23F24FC2C(v3);
    sub_23F24FC2C(v2);
    v20 = sub_23F2500BC();
    sub_23F126138(v20, v21);
    goto LABEL_9;
  }
  v22 = sub_23F250840();
  sub_23F1263D8(v22, v23, v24);
  sub_23F12E488((uint64_t)&qword_256DFEAF8);
  sub_23F250390();
  v25 = sub_23F2503EC();
  v26 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
  v26(v100, v8);
  v27 = sub_23F251114();
  sub_23F125E40(v27, v28);
  sub_23F125E40(v2, &qword_256DFEB98);
  v26(v1, v8);
  v29 = sub_23F15EB34();
  sub_23F125E40(v29, v30);
  if ((v25 & 1) == 0)
    goto LABEL_41;
LABEL_11:
  v31 = sub_23F251628();
  sub_23F2522B0();
  if (v34)
  {
    if (!v32)
      goto LABEL_41;
    sub_23F24F854(v33);
    if (!v19 || v35 != v36)
    {
      sub_23F126148();
      sub_23F15E5CC();
      if ((v38 & 1) == 0)
        goto LABEL_41;
    }
  }
  else if (v32)
  {
    goto LABEL_41;
  }
  sub_23F24FBF8();
  if (v19)
    v41 = v39 == v40;
  else
    v41 = 0;
  if (!v41)
  {
    sub_23F126148();
    sub_23F15E5CC();
    if ((v42 & 1) == 0)
      goto LABEL_41;
  }
  static ActionOutcome.== infix(_:_:)();
  if ((v43 & 1) == 0)
    goto LABEL_41;
  sub_23F24F57C(v111, (const void *)(v7 + *(int *)(v31 + 32)));
  sub_23F24F57C(v105, (const void *)(v102 + *(int *)(v31 + 32)));
  static ResponseManifest.== infix(_:_:)();
  if ((v44 & 1) == 0)
    goto LABEL_41;
  v45 = *(int *)(v31 + 36);
  v47 = *(_QWORD *)(v7 + v45);
  v46 = *(_QWORD *)(v7 + v45 + 8);
  v48 = *(_QWORD *)(v103 + v45 + 16);
  v49 = *(_QWORD *)(v103 + v45 + 40);
  v50 = (uint64_t *)(v102 + v45);
  v51 = *v50;
  v52 = v50[6];
  if (v47)
  {
    sub_23F25135C();
    v101 = v61;
    if (v51)
    {
      v105[0] = v51;
      v105[1] = v53;
      v105[2] = v54;
      v106 = v55;
      v107 = v56;
      v108 = v57;
      v109 = v52;
      v110 = v58;
      v62 = v47;
      v98 = v48;
      v99 = v47;
      v63 = v61;
      v64 = v60;
      v97 = v60;
      v65 = v59;
      sub_23F1F5EF8(v62, v46, v48, v61, v60, v49, v59);
      sub_23F131798();
      v66 = sub_23F250840();
      sub_23F163B00(v66, v67, v63);
      v68 = v65;
      sub_23F163B00(v64, v49, v65);
      swift_bridgeObjectRetain();
      static ResponseOutput.== infix(_:_:)((uint64_t)v111, (uint64_t)v105, v69, v70, v71, v72, v73, v74);
      v96 = v75;
      v94 = v114;
      v95 = v113;
      v76 = v112;
      v77 = v115;
      swift_bridgeObjectRelease();
      v78 = sub_23F25107C();
      sub_23F163B14(v78, v79, v76);
      sub_23F163B14(v95, v94, v77);
      swift_bridgeObjectRelease();
      sub_23F1F6000(v99, v46, v98, v101, v97, v49, v68);
      if ((v96 & 1) == 0)
        goto LABEL_41;
      goto LABEL_32;
    }
    v86 = v60;
    v87 = v59;
    sub_23F1F5EF8(v47, v46, v48, v61, v60, v49, v59);
    sub_23F131A54();
    sub_23F163B00(v46, v48, v101);
    sub_23F163B00(v86, v49, v87);
    sub_23F126140();
    sub_23F13186C();
    sub_23F163B14(v46, v48, v101);
    sub_23F163B14(v86, v49, v87);
    sub_23F1318DC();
LABEL_40:
    sub_23F25135C();
    v116 = v51;
    v117 = v88;
    v118 = v89;
    v119 = v90;
    v120 = v91;
    v121 = v92;
    v122 = v52;
    v123 = v93;
    sub_23F1F5EF8(v51, v88, v89, v90, v91, v92, v52);
    sub_23F1F5F74(v111);
    goto LABEL_41;
  }
  if (v51)
    goto LABEL_40;
LABEL_32:
  sub_23F2522B0();
  if (v82 && v80)
  {
    sub_23F24F854(v81);
    if (v19)
      v85 = v83 == v84;
    else
      v85 = 0;
    if (!v85)
      sub_23F126148();
  }
LABEL_41:
  sub_23F125EFC();
}

void static SystemResponse.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  unsigned __int8 v64;
  unsigned __int8 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD v110[3];
  char v111;
  uint64_t v112;
  uint64_t v113;
  __int16 v114;
  uint64_t v115;
  uint64_t v116[3];
  unsigned __int8 v117;
  unsigned __int8 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  sub_23F125F3C();
  v6 = v5;
  v8 = v7;
  v109 = *(_QWORD *)(sub_23F131B8C() - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F15E50C();
  v10 = sub_23F1217E8(&qword_256E01490);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1319C8();
  sub_23F251E78();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F24F0A4();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F24F48C();
  sub_23F24F8D0(v8, v3);
  sub_23F24F8D0(v6, v4);
  v15 = v0 + *(int *)(v10 + 48);
  sub_23F24F8D0(v3, v0);
  sub_23F24F8D0(v4, v15);
  v16 = sub_23F1A92D8(v0);
  if (v19)
  {
    sub_23F1A973C(v4);
    sub_23F1A973C(v3);
    v18 = sub_23F1A92D8(v15);
    if (v19)
    {
      sub_23F1A9640(v18, &qword_256DFEB98);
      goto LABEL_11;
    }
LABEL_9:
    sub_23F1A9640(v18, &qword_256E01490);
    goto LABEL_49;
  }
  sub_23F25055C(v16, v17, &qword_256DFEB98);
  sub_23F1A92D8(v15);
  if (v19)
  {
    sub_23F1A9648(v4);
    sub_23F1A9648(v3);
    v18 = sub_23F24FBC0(v109);
    goto LABEL_9;
  }
  sub_23F1263D8(v1, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v109 + 32));
  sub_23F12E488((uint64_t)&qword_256DFEAF8);
  v20 = sub_23F24F77C();
  sub_23F250924(v1);
  sub_23F1A973C(v4);
  sub_23F1A973C(v3);
  sub_23F250924(v2);
  sub_23F1A973C(v0);
  if ((v20 & 1) == 0)
    goto LABEL_49;
LABEL_11:
  v21 = (int *)sub_23F2501F8();
  v22 = v21[5];
  v24 = *(_QWORD *)(v8 + v22);
  v23 = *(_QWORD *)(v8 + v22 + 8);
  v25 = *(_QWORD *)(v8 + v22 + 16);
  v26 = (uint64_t *)(v6 + v22);
  v28 = *v26;
  v27 = v26[1];
  v29 = v26[2];
  if (v25 == 1)
  {
    if (v29 == 1)
      goto LABEL_13;
LABEL_25:
    sub_23F1F607C(v28, v27, v29);
    sub_23F1F6090(v24, v23, v25);
    sub_23F1F6090(v28, v27, v29);
    goto LABEL_49;
  }
  if (v29 == 1)
  {
    sub_23F13175C();
    goto LABEL_25;
  }
  if ((_DWORD)v24 != (_DWORD)v28)
    goto LABEL_49;
  if (v25)
  {
    if (!v29)
    {
      sub_23F1F607C(v24, v23, v25);
      sub_23F1262C0();
      goto LABEL_49;
    }
    if (v23 == v27 && v25 == v29)
    {
      sub_23F1F607C(v24, v23, v25);
      sub_23F1262C0();
    }
    else
    {
      sub_23F15EB40();
      v71 = sub_23F126148();
      sub_23F1F607C(v24, v23, v25);
      sub_23F1262C0();
      if ((v71 & 1) == 0)
        goto LABEL_49;
    }
  }
  else if (v29)
  {
    goto LABEL_49;
  }
LABEL_13:
  sub_23F24FBF8();
  if (v19)
    v32 = v30 == v31;
  else
    v32 = 0;
  if (!v32)
  {
    sub_23F126148();
    sub_23F15E5CC();
    if ((v33 & 1) == 0)
      goto LABEL_49;
  }
  sub_23F2516A0();
  if ((v34 & 1) == 0)
    goto LABEL_49;
  v35 = v21[8];
  v37 = *(_QWORD *)(v8 + v35);
  v36 = *(_QWORD *)(v8 + v35 + 8);
  v38 = *(_QWORD *)(v8 + v35 + 16);
  v40 = *(_QWORD *)(v8 + v35 + 32);
  v39 = *(_QWORD *)(v8 + v35 + 40);
  v108 = *(_QWORD *)(v8 + v35 + 48);
  v41 = (uint64_t *)(v6 + v35);
  v42 = *v41;
  v43 = v41[6];
  if (!v37)
  {
    if (!v42)
      goto LABEL_38;
LABEL_48:
    sub_23F25040C();
    v120 = v42;
    v121 = v93;
    v122 = v94;
    v123 = v95;
    v124 = v96;
    v125 = v97;
    v126 = v43;
    v127 = v98;
    sub_23F1F5EF8(v42, v93, v94, v95, v96, v97, v43);
    sub_23F1F5F74(v116);
    goto LABEL_49;
  }
  sub_23F25040C();
  v107 = v36;
  v106 = v50;
  if (!v42)
  {
    swift_bridgeObjectRetain();
    sub_23F163B00(v36, v38, v106);
    sub_23F163B00(v40, v39, v108);
    sub_23F13175C();
    sub_23F250C2C();
    v83 = sub_23F251208();
    sub_23F163B00(v83, v84, v85);
    v86 = sub_23F25082C();
    sub_23F163B00(v86, v87, v108);
    sub_23F13175C();
    sub_23F15EB24();
    v88 = sub_23F251208();
    sub_23F163B14(v88, v89, v90);
    v91 = sub_23F25082C();
    sub_23F163B14(v91, v92, v108);
    sub_23F1262C0();
    goto LABEL_48;
  }
  v110[0] = v42;
  v110[1] = v44;
  v110[2] = v45;
  v111 = v46;
  v112 = v47;
  v113 = v48;
  v114 = v43;
  v115 = v49;
  v51 = v50;
  swift_bridgeObjectRetain();
  v104 = v38;
  sub_23F250DE4();
  sub_23F163B00(v52, v53, v54);
  v105 = v40;
  v102 = v39;
  sub_23F163B00(v40, v39, v108);
  sub_23F13175C();
  sub_23F250C2C();
  v55 = sub_23F251114();
  sub_23F163B00(v55, v56, v51);
  sub_23F163B00(v40, v39, v108);
  sub_23F13175C();
  static ResponseOutput.== infix(_:_:)((uint64_t)v116, (uint64_t)v110, v57, v58, v59, v60, v61, v62);
  LODWORD(v103) = v63;
  v101 = v119;
  v64 = v117;
  v65 = v118;
  swift_bridgeObjectRelease();
  v66 = sub_23F126358();
  sub_23F163B14(v66, v67, v64);
  v68 = sub_23F25082C();
  sub_23F163B14(v68, v69, v65);
  sub_23F251698();
  sub_23F1F6000(v37, v107, v104, v106, v40, v39, v108);
  if ((v103 & 1) == 0)
    goto LABEL_49;
LABEL_38:
  sub_23F24FF54();
  if (v79)
  {
    if (v73)
    {
      sub_23F24F854(v78);
      if (v19 && v80 == v73)
        goto LABEL_52;
      sub_23F126148();
      sub_23F15E5CC();
      if ((v82 & 1) != 0)
        goto LABEL_52;
    }
  }
  else if (!v73)
  {
LABEL_52:
    sub_23F129F68(*(_QWORD *)(v8 + v21[10]), *(_QWORD *)(v6 + v21[10]), v72, v73, v74, v75, v76, v77, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108, v8,
      v6);
  }
LABEL_49:
  sub_23F125EFC();
}

void static PlannerPromptData.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_23F1298FC();
  if ((v20 & 1) != 0)
  {
    v21 = sub_23F1317E0();
    sub_23F129A0C(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
  }
  else
  {
    sub_23F126078();
  }
}

uint64_t static ActionResolutionUpdate.== infix(_:_:)(uint64_t a1)
{
  return sub_23F1C9184(a1);
}

uint64_t sub_23F1C9184(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  BOOL v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);

  v1 = sub_23F250784(a1);
  v4 = v1 == *v3 && v2 == v3[1];
  if (!v4 && (sub_23F126148() & 1) == 0)
    return 0;
  v5 = sub_23F1317E0();
  return v6(v5);
}

uint64_t sub_23F1C91E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  char v18;

  v2 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x74616E696D726574 && a2 == 0xE900000000000065;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000023F294600 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x616C50664F646E65 && a2 == 0xE90000000000006ELL;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023F294620 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = a1 == 0x726F727265 && a2 == 0xE500000000000000;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000016 && a2 == 0x800000023F294640 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          v9 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
          if (v9 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            v10 = a1 == 0x7551686365657073 && a2 == 0xEB00000000797265;
            if (v10 || (sub_23F268798() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023F294660 || (sub_23F268798() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else
            {
              v11 = a1 == 0x6269726373657270 && a2 == 0xEE006E616C506465;
              if (v11 || (sub_23F268798() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else
              {
                v12 = a1 == 0x6E6172546B636F6DLL && a2 == 0xEE00747069726373;
                if (v12 || (sub_23F268798() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 11;
                }
                else if (a1 == 0xD000000000000014 && a2 == 0x800000023F294680 || (sub_23F268798() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 12;
                }
                else if (a1 == 0xD000000000000016 && a2 == 0x800000023F2946A0 || (sub_23F268798() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 13;
                }
                else if (a1 == 0xD000000000000014 && a2 == 0x800000023F2946C0 || (sub_23F268798() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 14;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x800000023F2946E0 || (sub_23F268798() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 15;
                }
                else
                {
                  v13 = a1 == 0x6341746E65696C63 && a2 == 0xEC0000006E6F6974;
                  if (v13 || (sub_23F268798() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 16;
                  }
                  else if (a1 == 0xD000000000000012 && a2 == 0x800000023F294700 || (sub_23F268798() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 17;
                  }
                  else
                  {
                    v14 = a1 == 0x7543746E65696C63 && a2 == 0xEC0000006D6F7473;
                    if (v14 || (sub_23F268798() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 18;
                    }
                    else if (a1 == 0xD000000000000010 && a2 == 0x800000023F294720 || (sub_23F268798() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 19;
                    }
                    else if (a1 == 0xD000000000000015 && a2 == 0x800000023F294740 || (sub_23F268798() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 20;
                    }
                    else if (a1 == 0xD000000000000014 && a2 == 0x800000023F294760 || (sub_23F268798() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 21;
                    }
                    else
                    {
                      v15 = a1 == 0x65526E6F69746361 && a2 == 0xEE0065736E6F7073;
                      if (v15 || (sub_23F268798() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 22;
                      }
                      else
                      {
                        v16 = a1 == 0x65526D6574737973 && a2 == 0xEE0065736E6F7073;
                        if (v16 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 23;
                        }
                        else if (a1 == 0xD000000000000015 && a2 == 0x800000023F294780 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 24;
                        }
                        else if (a1 == 0xD000000000000017 && a2 == 0x800000023F2947A0 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 25;
                        }
                        else if (a1 == 0xD000000000000011 && a2 == 0x800000023F2947C0 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 26;
                        }
                        else if (a1 == 0xD000000000000013 && a2 == 0x800000023F2947E0 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 27;
                        }
                        else if (a1 == 0xD000000000000016 && a2 == 0x800000023F294800 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 28;
                        }
                        else if (a1 == 0xD000000000000018 && a2 == 0x800000023F294820 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 29;
                        }
                        else if (a1 == 0xD000000000000014 && a2 == 0x800000023F294840 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 30;
                        }
                        else if (a1 == 0xD000000000000014 && a2 == 0x800000023F294860 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 31;
                        }
                        else if (a1 == 0xD000000000000021 && a2 == 0x800000023F294880 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 32;
                        }
                        else if (a1 == 0xD000000000000023 && a2 == 0x800000023F2948B0 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 33;
                        }
                        else if (a1 == 0xD000000000000015 && a2 == 0x800000023F2948E0 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 34;
                        }
                        else if (a1 == 0xD000000000000013 && a2 == 0x800000023F294900 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 35;
                        }
                        else if (a1 == 0xD000000000000013 && a2 == 0x800000023F294920 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 36;
                        }
                        else if (a1 == 0xD000000000000013 && a2 == 0x800000023F294940 || (sub_23F268798() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 37;
                        }
                        else
                        {
                          v17 = a1 == 0x7055737574617473 && a2 == 0xEC00000065746164;
                          if (v17 || (sub_23F268798() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 38;
                          }
                          else if (a1 == 0xD000000000000011 && a2 == 0x800000023F294960
                                 || (sub_23F268798() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 39;
                          }
                          else if (a1 == 0xD000000000000016 && a2 == 0x800000023F294980)
                          {
                            swift_bridgeObjectRelease();
                            return 40;
                          }
                          else
                          {
                            v18 = sub_23F268798();
                            swift_bridgeObjectRelease();
                            if ((v18 & 1) != 0)
                              return 40;
                            else
                              return 41;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_23F1CA11C()
{
  return 41;
}

uint64_t sub_23F1CA124(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1CA158 + 4 * byte_23F278CE8[a1]))(0x74736575716572, 0xE700000000000000);
}

uint64_t sub_23F1CA158()
{
  return 0x74616E696D726574;
}

unint64_t sub_23F1CA174()
{
  return 0xD000000000000010;
}

uint64_t sub_23F1CA538()
{
  sub_23F1F60E0();
  return sub_23F2688B8();
}

uint64_t sub_23F1CA560()
{
  sub_23F1F60E0();
  return sub_23F2688C4();
}

uint64_t sub_23F1CA588()
{
  sub_23F1F66BC();
  return sub_23F2688B8();
}

uint64_t sub_23F1CA5B0()
{
  sub_23F1F66BC();
  return sub_23F2688C4();
}

uint64_t sub_23F1CA5D8()
{
  sub_23F1F62C0();
  return sub_23F2688B8();
}

uint64_t sub_23F1CA600()
{
  sub_23F1F62C0();
  return sub_23F2688C4();
}

uint64_t sub_23F1CA628()
{
  sub_23F1F68D8();
  return sub_23F2688B8();
}

uint64_t sub_23F1CA650()
{
  sub_23F1F68D8();
  return sub_23F2688C4();
}

uint64_t sub_23F1CA678()
{
  sub_23F1F689C();
  return sub_23F2688B8();
}

uint64_t sub_23F1CA6A0()
{
  sub_23F1F689C();
  return sub_23F2688C4();
}

uint64_t sub_23F1CA6C8()
{
  sub_23F1F6860();
  return sub_23F2688B8();
}

uint64_t sub_23F1CA6F0()
{
  sub_23F1F6860();
  return sub_23F2688C4();
}

uint64_t sub_23F1CA718()
{
  sub_23F1F67E8();
  return sub_23F2688B8();
}

uint64_t sub_23F1CA740()
{
  sub_23F1F67E8();
  return sub_23F2688C4();
}

uint64_t sub_23F1CA768()
{
  sub_23F1F6284();
  return sub_23F2688B8();
}

uint64_t sub_23F1CA790()
{
  sub_23F1F6284();
  return sub_23F2688C4();
}

uint64_t sub_23F1CA7B8()
{
  sub_23F1F698C();
  return sub_23F2688B8();
}

uint64_t sub_23F1CA7E0()
{
  sub_23F1F698C();
  return sub_23F2688C4();
}

uint64_t sub_23F1CA808()
{
  sub_23F1F6950();
  return sub_23F2688B8();
}

uint64_t sub_23F1CA830()
{
  sub_23F1F6950();
  return sub_23F2688C4();
}

uint64_t sub_23F1CA858()
{
  sub_23F1F6770();
  return sub_23F2688B8();
}

uint64_t sub_23F1CA880()
{
  sub_23F1F6770();
  return sub_23F2688C4();
}

uint64_t sub_23F1CA8A8()
{
  sub_23F1F6B30();
  return sub_23F2688B8();
}

uint64_t sub_23F1CA8D0()
{
  sub_23F1F6B30();
  return sub_23F2688C4();
}

uint64_t sub_23F1CA8F8()
{
  sub_23F1F62FC();
  return sub_23F2688B8();
}

uint64_t sub_23F1CA920()
{
  sub_23F1F62FC();
  return sub_23F2688C4();
}

uint64_t sub_23F1CA948()
{
  unsigned __int8 *v0;

  return sub_23F1CA124(*v0);
}

uint64_t sub_23F1CA950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1C91E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1CA974@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F1CA11C();
  *a1 = result;
  return result;
}

uint64_t sub_23F1CA998()
{
  sub_23F1F60A4();
  return sub_23F2688B8();
}

uint64_t sub_23F1CA9C0()
{
  sub_23F1F60A4();
  return sub_23F2688C4();
}

uint64_t sub_23F1CA9E8()
{
  sub_23F1F6590();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAA10()
{
  sub_23F1F6590();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAA38()
{
  sub_23F1F6608();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAA60()
{
  sub_23F1F6608();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAA88()
{
  sub_23F1F69C8();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAAB0()
{
  sub_23F1F69C8();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAAD8()
{
  sub_23F1F6DC4();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAB00()
{
  sub_23F1F6DC4();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAB28()
{
  sub_23F1F6D10();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAB50()
{
  sub_23F1F6D10();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAB78()
{
  sub_23F1F63B0();
  return sub_23F2688B8();
}

uint64_t sub_23F1CABA0()
{
  sub_23F1F63B0();
  return sub_23F2688C4();
}

uint64_t sub_23F1CABC8()
{
  sub_23F1F6374();
  return sub_23F2688B8();
}

uint64_t sub_23F1CABF0()
{
  sub_23F1F6374();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAC18()
{
  sub_23F1F63EC();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAC40()
{
  sub_23F1F63EC();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAC68()
{
  sub_23F1F6338();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAC90()
{
  sub_23F1F6338();
  return sub_23F2688C4();
}

uint64_t sub_23F1CACB8()
{
  sub_23F1F6428();
  return sub_23F2688B8();
}

uint64_t sub_23F1CACE0()
{
  sub_23F1F6428();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAD08()
{
  sub_23F1F6464();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAD30()
{
  sub_23F1F6464();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAD58()
{
  sub_23F1F6A40();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAD80()
{
  sub_23F1F6A40();
  return sub_23F2688C4();
}

uint64_t sub_23F1CADA8()
{
  sub_23F1F6158();
  return sub_23F2688B8();
}

uint64_t sub_23F1CADD0()
{
  sub_23F1F6158();
  return sub_23F2688C4();
}

uint64_t sub_23F1CADF8()
{
  sub_23F1F6C98();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAE20()
{
  sub_23F1F6C98();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAE48()
{
  sub_23F1F6AB8();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAE70()
{
  sub_23F1F6AB8();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAE98()
{
  sub_23F1F6C20();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAEC0()
{
  sub_23F1F6C20();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAEE8()
{
  sub_23F1F6F2C();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAF10()
{
  sub_23F1F6F2C();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAF38()
{
  sub_23F1F64A0();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAF60()
{
  sub_23F1F64A0();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAF88()
{
  sub_23F1F6518();
  return sub_23F2688B8();
}

uint64_t sub_23F1CAFB0()
{
  sub_23F1F6518();
  return sub_23F2688C4();
}

uint64_t sub_23F1CAFD8()
{
  sub_23F1F6248();
  return sub_23F2688B8();
}

uint64_t sub_23F1CB000()
{
  sub_23F1F6248();
  return sub_23F2688C4();
}

uint64_t sub_23F1CB028()
{
  sub_23F1F6E3C();
  return sub_23F2688B8();
}

uint64_t sub_23F1CB050()
{
  sub_23F1F6E3C();
  return sub_23F2688C4();
}

uint64_t sub_23F1CB078()
{
  sub_23F1F6BA8();
  return sub_23F2688B8();
}

uint64_t sub_23F1CB0A0()
{
  sub_23F1F6BA8();
  return sub_23F2688C4();
}

uint64_t sub_23F1CB0C8()
{
  sub_23F1F61D0();
  return sub_23F2688B8();
}

uint64_t sub_23F1CB0F0()
{
  sub_23F1F61D0();
  return sub_23F2688C4();
}

uint64_t sub_23F1CB118()
{
  sub_23F1F6D88();
  return sub_23F2688B8();
}

uint64_t sub_23F1CB140()
{
  sub_23F1F6D88();
  return sub_23F2688C4();
}

uint64_t sub_23F1CB168()
{
  sub_23F1F6734();
  return sub_23F2688B8();
}

uint64_t sub_23F1CB190()
{
  sub_23F1F6734();
  return sub_23F2688C4();
}

uint64_t sub_23F1CB1B8()
{
  sub_23F1F66F8();
  return sub_23F2688B8();
}

uint64_t sub_23F1CB1E0()
{
  sub_23F1F66F8();
  return sub_23F2688C4();
}

uint64_t sub_23F1CB208()
{
  sub_23F1F6680();
  return sub_23F2688B8();
}

uint64_t sub_23F1CB230()
{
  sub_23F1F6680();
  return sub_23F2688C4();
}

uint64_t sub_23F1CB258()
{
  sub_23F1F6EB4();
  return sub_23F2688B8();
}

uint64_t sub_23F1CB280()
{
  sub_23F1F6EB4();
  return sub_23F2688C4();
}

void MessagePayload.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196[32];
  uint64_t v197;
  uint64_t v198;
  _QWORD v199[2];
  _QWORD v200[3];
  _QWORD v201[3];
  _QWORD v202[5];
  _QWORD v203[2];
  uint64_t v204;
  _QWORD v205[3];
  uint64_t v206;
  uint64_t v207;
  _QWORD v208[2];
  uint64_t v209;
  _QWORD v210[6];
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD v215[3];
  uint64_t v216;
  _QWORD v217[7];
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD v223[3];
  uint64_t v224;
  uint64_t v225;
  _QWORD v226[6];
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD v230[9];
  _QWORD v231[6];
  _QWORD v232[6];
  _QWORD v233[5];
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD v238[3];
  uint64_t v239;
  _QWORD v240[4];
  uint64_t v241;
  uint64_t v242;
  _QWORD v243[4];
  uint64_t v244;

  sub_23F131874();
  sub_23F250DF0();
  v12 = sub_23F1217E8(&qword_256E03DA0);
  v242 = *(_QWORD *)(v12 - 8);
  v243[0] = v12;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F1A949C(v14, v196[0]);
  v241 = sub_23F1217E8(&qword_256E03DA8);
  v240[2] = *(_QWORD *)(v241 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F17FBBC((uint64_t)v196 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_23F1217E8(&qword_256E03DB0);
  sub_23F251430(v17);
  v240[1] = v18;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F17FBBC((uint64_t)v196 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v239 = sub_23F1217E8(&qword_256E03DB8);
  v238[2] = *(_QWORD *)(v239 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v21);
  v23 = sub_23F18016C((uint64_t)v196 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v236 = type metadata accessor for SessionServerDebuggerEvent(v23);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F17FBBC((uint64_t)v196 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v237 = sub_23F1217E8(&qword_256E03DC0);
  v235 = *(_QWORD *)(v237 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v26);
  v28 = sub_23F18016C((uint64_t)v196 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v233[4] = type metadata accessor for SessionClientDebuggerEvent(v28);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F17FBBC((uint64_t)v196 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v234 = sub_23F1217E8(&qword_256E03DC8);
  v233[3] = *(_QWORD *)(v234 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v31);
  v33 = sub_23F18016C((uint64_t)v196 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v232[5] = type metadata accessor for MessagePayload.ActionSummaryUpdate(v33);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F17FBBC((uint64_t)v196 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v233[0] = sub_23F1217E8(&qword_256E03DD0);
  v232[4] = *(_QWORD *)(v233[0] - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v36);
  v38 = sub_23F18016C((uint64_t)v196 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v232[1] = type metadata accessor for MessagePayload.ClientUndoRedoRequest(v38);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F17FBBC((uint64_t)v196 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v232[0] = sub_23F1217E8(&qword_256E03DD8);
  v231[5] = *(_QWORD *)(v232[0] - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F17FBBC((uint64_t)v196 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = sub_23F1217E8(&qword_256E03DE0);
  sub_23F17FB48(v43, (uint64_t)v243);
  v231[2] = v44;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F17FBBC((uint64_t)v196 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v231[0] = sub_23F1217E8(&qword_256E03DE8);
  v230[8] = *(_QWORD *)(v231[0] - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v47);
  v49 = sub_23F18016C((uint64_t)v196 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v230[4] = type metadata accessor for MessagePayload.ExternalAgentOutcome(v49);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F17FBBC((uint64_t)v196 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = sub_23F1217E8(&qword_256E03DF0);
  sub_23F17FB48(v52, (uint64_t)v240);
  v230[3] = v53;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v54);
  v56 = sub_23F18016C((uint64_t)v196 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  v229 = type metadata accessor for MessagePayload.ExternalAgentRequest(v56);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F17FBBC((uint64_t)v196 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = sub_23F1217E8(&qword_256E03DF8);
  sub_23F17FB48(v59, (uint64_t)v238);
  v228 = v60;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v61);
  v63 = sub_23F18016C((uint64_t)v196 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  v226[5] = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(v63);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F17FBBC((uint64_t)v196 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  v227 = sub_23F1217E8(&qword_256E03E00);
  v226[4] = *(_QWORD *)(v227 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v66);
  v68 = sub_23F18016C((uint64_t)v196 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0));
  v226[1] = type metadata accessor for MessagePayload.ExternalAgentTextQuery(v68);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F17FBBC((uint64_t)v196 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = sub_23F1217E8(&qword_256E03E08);
  sub_23F17FB48(v71, (uint64_t)v233);
  v225 = v72;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F17FBBC((uint64_t)v196 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
  v224 = sub_23F1217E8(&qword_256E03E10);
  v223[2] = *(_QWORD *)(v224 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F17FBBC((uint64_t)v196 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0));
  v77 = sub_23F1217E8(&qword_256E03E18);
  sub_23F17FB48(v77, (uint64_t)v232);
  v222 = v78;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v79);
  sub_23F125F70();
  sub_23F17FBBC(v80);
  v221 = sub_23F1217E8(&qword_256E03E20);
  v220 = *(_QWORD *)(v221 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v81);
  sub_23F125F70();
  sub_23F17FBBC(v82);
  v83 = sub_23F1217E8(&qword_256E03E28);
  sub_23F17FB48(v83, (uint64_t)v231);
  v219 = v84;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v85);
  sub_23F125F70();
  v87 = sub_23F18016C(v86);
  v217[6] = type metadata accessor for SystemResponse(v87);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v88);
  sub_23F125F70();
  sub_23F17FBBC(v89);
  v218 = sub_23F1217E8(&qword_256E03E30);
  v217[5] = *(_QWORD *)(v218 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v90);
  sub_23F125F70();
  v92 = sub_23F18016C(v91);
  v217[1] = type metadata accessor for ActionResponse(v92);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v93);
  sub_23F125F70();
  sub_23F17FBBC(v94);
  v95 = sub_23F1217E8(&qword_256E03E38);
  sub_23F17FB48(v95, (uint64_t)v230);
  v217[0] = v96;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v97);
  sub_23F125F70();
  v99 = sub_23F18016C(v98);
  v215[2] = type metadata accessor for SystemPromptResolution(v99);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v100);
  sub_23F125F70();
  sub_23F17FBBC(v101);
  v216 = sub_23F1217E8(&qword_256E03E40);
  v215[1] = *(_QWORD *)(v216 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v102);
  sub_23F125F70();
  v104 = sub_23F18016C(v103);
  v214 = type metadata accessor for SystemPrompt(v104);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v105);
  sub_23F125F70();
  sub_23F17FBBC(v106);
  v107 = sub_23F1217E8(&qword_256E03E48);
  sub_23F17FB48(v107, (uint64_t)v226);
  v213 = v108;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v109);
  sub_23F125F70();
  sub_23F17FBBC(v110);
  v212 = sub_23F1217E8(&qword_256E03E50);
  v210[5] = *(_QWORD *)(v212 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v111);
  sub_23F125F70();
  sub_23F17FBBC(v112);
  v113 = sub_23F1217E8(&qword_256E03E58);
  sub_23F17FB48(v113, (uint64_t)v223);
  v210[2] = v114;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v115);
  sub_23F125F70();
  v117 = sub_23F18016C(v116);
  v208[1] = type metadata accessor for MessagePayload.ClientActionResult(v117);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v118);
  sub_23F125F70();
  sub_23F17FBBC(v119);
  v209 = sub_23F1217E8(&qword_256E03E60);
  v208[0] = *(_QWORD *)(v209 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v120);
  sub_23F125F70();
  v122 = sub_23F18016C(v121);
  v205[0] = type metadata accessor for MessagePayload.ClientAction(v122);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v123);
  sub_23F125F70();
  sub_23F17FBBC(v124);
  v207 = sub_23F1217E8(&qword_256E03E68);
  v205[2] = *(_QWORD *)(v207 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v125);
  sub_23F125F70();
  sub_23F17FBBC(v126);
  v204 = sub_23F1217E8(&qword_256E03E70);
  v203[1] = *(_QWORD *)(v204 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v127);
  sub_23F125F70();
  v129 = sub_23F18016C(v128);
  v202[2] = type metadata accessor for MessagePayload.ClientEffectResolved(v129);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v130);
  sub_23F125F70();
  sub_23F17FBBC(v131);
  v132 = sub_23F1217E8(&qword_256E03E78);
  sub_23F17FB48(v132, (uint64_t)v217);
  v202[1] = v133;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v134);
  sub_23F125F70();
  v136 = sub_23F18016C(v135);
  v201[1] = type metadata accessor for MessagePayload.ClientEffectInvocation(v136);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v137);
  sub_23F125F70();
  sub_23F17FBBC(v138);
  v139 = sub_23F1217E8(&qword_256E03E80);
  sub_23F17FB48(v139, (uint64_t)v215);
  v200[2] = v140;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v141);
  sub_23F125F70();
  sub_23F17FBBC(v142);
  v200[0] = sub_23F1217E8(&qword_256E03E88);
  v199[1] = *(_QWORD *)(v200[0] - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v143);
  sub_23F125F70();
  sub_23F17FBBC(v144);
  v145 = sub_23F1217E8(&qword_256E03E90);
  sub_23F17FB48(v145, (uint64_t)&v211);
  v198 = v146;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v147);
  sub_23F125F70();
  sub_23F17FBBC(v148);
  v197 = sub_23F1217E8(&qword_256E03E98);
  v196[31] = *(_QWORD *)(v197 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v149);
  sub_23F125F70();
  sub_23F17FBBC(v150);
  v151 = sub_23F1217E8(&qword_256E03EA0);
  sub_23F17FB48(v151, (uint64_t)v210);
  v196[28] = v152;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v153);
  sub_23F125F70();
  sub_23F17FBBC(v154);
  v155 = sub_23F1217E8(&qword_256E03EA8);
  sub_23F17FB48(v155, (uint64_t)v208);
  v196[25] = v156;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v157);
  sub_23F125F70();
  sub_23F17FBBC(v158);
  v159 = sub_23F1217E8(&qword_256E03EB0);
  sub_23F17FB48(v159, (uint64_t)&v206);
  v196[22] = v160;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v161);
  sub_23F125F70();
  sub_23F17FBBC(v162);
  v163 = sub_23F1217E8(&qword_256E03EB8);
  sub_23F17FB48(v163, (uint64_t)v205);
  v196[19] = v164;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v165);
  sub_23F125F70();
  sub_23F17FBBC(v166);
  v167 = sub_23F1217E8(&qword_256E03EC0);
  sub_23F17FB48(v167, (uint64_t)v203);
  v196[16] = v168;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v169);
  sub_23F125F70();
  v171 = sub_23F18016C(v170);
  v196[13] = type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(v171);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v172);
  sub_23F125F70();
  sub_23F17FBBC(v173);
  v174 = sub_23F1217E8(&qword_256E03EC8);
  sub_23F17FB48(v174, (uint64_t)v202);
  v196[11] = v175;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v176);
  sub_23F125F70();
  sub_23F17FBBC(v177);
  v178 = sub_23F1217E8(&qword_256E03ED0);
  sub_23F17FB48(v178, (uint64_t)v201);
  v196[8] = v179;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v180);
  sub_23F125F70();
  sub_23F17FBBC(v181);
  v182 = sub_23F1217E8(&qword_256E03ED8);
  sub_23F17FB48(v182, (uint64_t)v200);
  v196[5] = v183;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v184);
  sub_23F125F70();
  sub_23F17FBBC(v185);
  v186 = sub_23F1217E8(&qword_256E03EE0);
  sub_23F17FB48(v186, (uint64_t)v199);
  v196[2] = v187;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v188);
  sub_23F125F70();
  v190 = sub_23F18016C(v189);
  type metadata accessor for MessagePayload.Request(v190);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v191);
  v192 = sub_23F24F060();
  type metadata accessor for MessagePayload(v192);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v193);
  sub_23F15EB6C();
  v244 = sub_23F1217E8(&qword_256E03EE8);
  v243[1] = *(_QWORD *)(v244 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v194);
  sub_23F1316E4();
  sub_23F1A968C(v10);
  sub_23F1F60A4();
  sub_23F251E60();
  sub_23F24F864();
  sub_23F1BE1A0(a10, v11, type metadata accessor for MessagePayload);
  sub_23F251114();
  v195 = (char *)sub_23F1CC0B8 + 4 * word_23F278D12[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F1CC0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F251A9C(v2, v0);
  *(_BYTE *)(v3 - 192) = 0;
  sub_23F1F6F2C();
  sub_23F250FB4();
  v5 = *(_QWORD *)(v3 - 208);
  v4 = *(_QWORD *)(v3 - 200);
  sub_23F250448();
  sub_23F252278((uint64_t)&unk_256E04168);
  sub_23F24EE08();
  sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 1472) + 8));
  sub_23F1BE0BC(v0, type metadata accessor for MessagePayload.Request);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 224) + 8))(v5, v4);
  sub_23F24F920();
  sub_23F1313FC();
}

void MessagePayload.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void (*v213)(uint64_t);
  uint64_t v214[43];
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD v238[4];
  _QWORD v239[3];
  _QWORD v240[2];
  _QWORD v241[2];
  _QWORD v242[2];
  _QWORD v243[4];
  _QWORD v244[4];
  _QWORD v245[4];
  _QWORD v246[2];
  _QWORD v247[2];
  _QWORD v248[2];
  uint64_t v249;
  uint64_t v250;
  _QWORD v251[2];
  _QWORD v252[2];
  _QWORD v253[2];
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  _QWORD v269[12];
  uint64_t v270;
  uint64_t v271;
  uint64_t *v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  uint64_t v276;

  sub_23F131874();
  v8 = v7;
  v269[9] = v9;
  v10 = sub_23F1217E8(&qword_256E04170);
  sub_23F17FB48(v10, (uint64_t)v269);
  v269[11] = v11;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F17FBBC((uint64_t)v214 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_23F1217E8(&qword_256E04178);
  sub_23F17FB48(v14, (uint64_t)&v268);
  v255 = v15;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F17FBBC((uint64_t)v214 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v254 = sub_23F1217E8(&qword_256E04180);
  v253[1] = *(_QWORD *)(v254 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F17FBBC((uint64_t)v214 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_23F1217E8(&qword_256E04188);
  sub_23F17FB48(v20, (uint64_t)&v267);
  v252[1] = v21;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F17FBBC((uint64_t)v214 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = sub_23F1217E8(&qword_256E04190);
  sub_23F17FB48(v24, (uint64_t)&v266);
  v251[1] = v25;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F17FBBC((uint64_t)v214 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = sub_23F1217E8(&qword_256E04198);
  sub_23F17FB48(v28, (uint64_t)&v265);
  v250 = v29;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F17FBBC((uint64_t)v214 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v249 = sub_23F1217E8(&qword_256E041A0);
  v248[1] = *(_QWORD *)(v249 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F125F70();
  sub_23F17FBBC(v33);
  v34 = sub_23F1217E8(&qword_256E041A8);
  sub_23F17FB48(v34, (uint64_t)&v264);
  v247[1] = v35;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F17FBBC((uint64_t)v214 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = sub_23F1217E8(&qword_256E041B0);
  sub_23F17FB48(v38, (uint64_t)&v263);
  v246[1] = v39;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F17FBBC((uint64_t)v214 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v246[0] = sub_23F1217E8(&qword_256E041B8);
  v245[3] = *(_QWORD *)(v246[0] - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F17FBBC((uint64_t)v214 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = sub_23F1217E8(&qword_256E041C0);
  sub_23F17FB48(v44, (uint64_t)&v262);
  v245[1] = v45;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F17FBBC((uint64_t)v214 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  v48 = sub_23F1217E8(&qword_256E041C8);
  sub_23F17FB48(v48, (uint64_t)&v261);
  v244[3] = v49;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F125F70();
  sub_23F17FBBC(v51);
  v52 = sub_23F1217E8(&qword_256E041D0);
  sub_23F17FB48(v52, (uint64_t)&v260);
  v244[1] = v53;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F17FBBC((uint64_t)v214 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  v244[0] = sub_23F1217E8(&qword_256E041D8);
  v243[3] = *(_QWORD *)(v244[0] - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F17FBBC((uint64_t)v214 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  v58 = sub_23F1217E8(&qword_256E041E0);
  sub_23F17FB48(v58, (uint64_t)&v259);
  v243[1] = v59;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F17FBBC((uint64_t)v214 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = sub_23F1217E8(&qword_256E041E8);
  sub_23F17FB48(v62, (uint64_t)&v258);
  v242[1] = v63;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F17FBBC((uint64_t)v214 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = sub_23F1217E8(&qword_256E041F0);
  sub_23F17FB48(v66, (uint64_t)&v257);
  v241[1] = v67;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F17FBBC((uint64_t)v214 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = sub_23F1217E8(&qword_256E041F8);
  sub_23F17FB48(v70, (uint64_t)&v256);
  v240[1] = v71;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v72);
  sub_23F17FBBC((uint64_t)v214 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
  v240[0] = sub_23F1217E8(&qword_256E04200);
  v239[2] = *(_QWORD *)(v240[0] - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v74);
  sub_23F17FBBC((uint64_t)v214 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0));
  v76 = sub_23F1217E8(&qword_256E04208);
  sub_23F17FB48(v76, (uint64_t)v253);
  v239[0] = v77;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F17FBBC((uint64_t)v214 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80 = sub_23F1217E8(&qword_256E04210);
  sub_23F17FB48(v80, (uint64_t)v252);
  v238[2] = v81;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v82);
  sub_23F17FBBC((uint64_t)v214 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0));
  v84 = sub_23F1217E8(&qword_256E04218);
  sub_23F17FB48(v84, (uint64_t)v251);
  v238[0] = v85;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v86);
  sub_23F125F70();
  sub_23F17FBBC(v87);
  v237 = sub_23F1217E8(&qword_256E04220);
  v236 = *(_QWORD *)(v237 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v88);
  sub_23F17FBBC((uint64_t)v214 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = sub_23F1217E8(&qword_256E04228);
  sub_23F17FB48(v90, (uint64_t)v248);
  v235 = v91;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v92);
  sub_23F125F70();
  sub_23F17FBBC(v93);
  v94 = sub_23F1217E8(&qword_256E04230);
  sub_23F17FB48(v94, (uint64_t)v247);
  v234 = v95;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v96);
  sub_23F17FBBC((uint64_t)v214 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0));
  v98 = sub_23F1217E8(&qword_256E04238);
  sub_23F17FB48(v98, (uint64_t)v246);
  v233 = v99;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v100);
  sub_23F17FBBC((uint64_t)v214 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0));
  v232 = sub_23F1217E8(&qword_256E04240);
  v231 = *(_QWORD *)(v232 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v102);
  sub_23F125F70();
  sub_23F17FBBC(v103);
  v104 = sub_23F1217E8(&qword_256E04248);
  sub_23F17FB48(v104, (uint64_t)v245);
  v230 = v105;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v106);
  sub_23F17FBBC((uint64_t)v214 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0));
  v229 = sub_23F1217E8(&qword_256E04250);
  v228 = *(_QWORD *)(v229 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v108);
  sub_23F17FBBC((uint64_t)v214 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0));
  v110 = sub_23F1217E8(&qword_256E04258);
  sub_23F17FB48(v110, (uint64_t)v244);
  v227 = v111;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v112);
  sub_23F125F70();
  sub_23F17FBBC(v113);
  v226 = sub_23F1217E8(&qword_256E04260);
  v225 = *(_QWORD *)(v226 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v114);
  sub_23F17FBBC((uint64_t)v214 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0));
  v116 = sub_23F1217E8(&qword_256E04268);
  sub_23F17FB48(v116, (uint64_t)v243);
  v224 = v117;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v118);
  sub_23F17FBBC((uint64_t)v214 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120 = sub_23F1217E8(&qword_256E04270);
  sub_23F17FB48(v120, (uint64_t)v242);
  v223 = v121;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v122);
  sub_23F125F70();
  sub_23F17FBBC(v123);
  v124 = sub_23F1217E8(&qword_256E04278);
  sub_23F17FB48(v124, (uint64_t)v241);
  v222 = v125;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v126);
  sub_23F125F70();
  sub_23F17FBBC(v127);
  v128 = sub_23F1217E8(&qword_256E04280);
  sub_23F17FB48(v128, (uint64_t)v240);
  v221 = v129;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v130);
  sub_23F125F70();
  sub_23F17FBBC(v131);
  v220 = sub_23F1217E8(&qword_256E04288);
  v269[10] = *(_QWORD *)(v220 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v132);
  sub_23F17FBBC((uint64_t)v214 - ((v133 + 15) & 0xFFFFFFFFFFFFFFF0));
  v134 = sub_23F1217E8(&qword_256E04290);
  sub_23F17FB48(v134, (uint64_t)v239);
  v219 = v135;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v136);
  sub_23F17FBBC((uint64_t)v214 - ((v137 + 15) & 0xFFFFFFFFFFFFFFF0));
  v218 = sub_23F1217E8(&qword_256E04298);
  v217 = *(_QWORD *)(v218 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v138);
  sub_23F125F70();
  sub_23F17FBBC(v139);
  v140 = sub_23F1217E8(&qword_256E042A0);
  sub_23F17FB48(v140, (uint64_t)v238);
  v216 = v141;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v142);
  sub_23F24F21C(v143, v214[0]);
  v144 = sub_23F1217E8(&qword_256E042A8);
  sub_23F17FB48(v144, (uint64_t)&v236);
  v214[42] = v145;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v146);
  sub_23F125F70();
  sub_23F17FBBC(v147);
  v215 = sub_23F1217E8(&qword_256E042B0);
  v214[41] = *(_QWORD *)(v215 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v148);
  sub_23F17FBBC((uint64_t)v214 - ((v149 + 15) & 0xFFFFFFFFFFFFFFF0));
  v274 = sub_23F1217E8(&qword_256E042B8);
  v271 = *(_QWORD *)(v274 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v150);
  sub_23F1A94B8(v151, v214[0]);
  v270 = sub_23F18C5EC();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v152);
  sub_23F14EFA0();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v153);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v154);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v155);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v156);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v157);
  sub_23F18033C();
  v273 = v158;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v159);
  sub_23F18033C();
  v272 = v160;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v161);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v162);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v163);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v164);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v165);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v166);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v167);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v168);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v169);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v170);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v171);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v172);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v173);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v174);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v175);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v176);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v177);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v178);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v179);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v180);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v181);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v182);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v183);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v184);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v185);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v186);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v187);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v188);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v189);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v190);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v191);
  sub_23F24F874();
  MEMORY[0x24BDAC7A8](v192);
  sub_23F24F388();
  MEMORY[0x24BDAC7A8](v193);
  sub_23F24F358();
  MEMORY[0x24BDAC7A8](v194);
  sub_23F1A9470();
  MEMORY[0x24BDAC7A8](v195);
  sub_23F1A9A0C();
  v275 = v8;
  sub_23F24F270(v8);
  sub_23F1F60A4();
  sub_23F250614();
  if (!v0)
  {
    v214[2] = v1;
    v214[5] = v3;
    v214[3] = v2;
    v214[4] = v6;
    v214[6] = v5;
    v196 = v272;
    v276 = v4;
    sub_23F2686D8();
    sub_23F250B7C();
    if (v197)
    {
      v214[1] = 0;
      sub_23F24FC44();
      v199 = *(unsigned __int8 *)(v198 + 32);
      v200 = sub_23F24FC34();
      sub_23F15E2D0(v200, v201, v202, v203, v204, v205);
      v207 = v206;
      v209 = v208;
      sub_23F131790();
      if (v207 == v209 >> 1)
        __asm { BR              X9 }
    }
    v210 = v270;
    sub_23F15EDB8();
    sub_23F131B30();
    sub_23F2508FC();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F24F960();
    *v196 = v210;
    sub_23F251CBC();
    v211 = sub_23F24ECCC();
    sub_23F1A97D0(v211, *MEMORY[0x24BEE26D0]);
    sub_23F250144();
    sub_23F17FAB4();
    v212 = sub_23F2500D8();
    v213(v212);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v275);
  sub_23F17FDF4();
  sub_23F1313FC();
}

void sub_23F1CFA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F251764();
  sub_23F24EC20();
  if (!v1)
  {
    sub_23F1F6FE0();
    sub_23F24ECA8();
    sub_23F24F158();
    sub_23F17F988(v2 - 384);
    sub_23F17FAB4();
    sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v3 = *(_OWORD *)(v2 - 176);
    v4 = *(_OWORD **)(v2 - 1368);
    *v4 = *(_OWORD *)(v2 - 192);
    v4[1] = v3;
    v5 = *(_OWORD *)(v2 - 144);
    v4[2] = *(_OWORD *)(v2 - 160);
    v4[3] = v5;
    sub_23F24F0D4();
    swift_storeEnumTagMultiPayload();
    v6 = (uint64_t)v4;
    v7 = *(_QWORD *)(v2 - 200);
    sub_23F2504D0(v6, v8, type metadata accessor for MessagePayload);
    sub_23F1BE0F4(v7, *(_QWORD *)(v2 - 280), type metadata accessor for MessagePayload);
    JUMPOUT(0x23F1CFA64);
  }
  JUMPOUT(0x23F1CFA4CLL);
}

void sub_23F1CFADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F251758();
  v3 = *(_QWORD *)(v2 - 72);
  sub_23F24EDE0();
  if (v1)
    JUMPOUT(0x23F1CFB1CLL);
  sub_23F1F6FA4();
  sub_23F24ECA8();
  sub_23F24F158();
  sub_23F17F988(v2 - 368);
  sub_23F17FAB4();
  sub_23F15E588(v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  *(_OWORD *)*(_QWORD *)(v2 - 1376) = *(_OWORD *)(v2 - 192);
  sub_23F24F0D4();
  JUMPOUT(0x23F1CFDE4);
}

void sub_23F1CFB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F251738();
  v4 = *(_QWORD *)(v3 - 288);
  sub_23F24EC44();
  if (!v1)
  {
    sub_23F1F6F68();
    sub_23F17FABC();
    sub_23F24F158();
    sub_23F15E7D4(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F17FAB4();
    sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v5 = *(_QWORD *)(v3 - 1360);
    *(_QWORD *)v5 = *(_QWORD *)(v3 - 192);
    *(_OWORD *)(v5 + 8) = *(_OWORD *)(v3 - 184);
    sub_23F24F0D4();
    swift_storeEnumTagMultiPayload();
    v6 = v5;
    v7 = *(_QWORD *)(v3 - 200);
    sub_23F2504D0(v6, v8, type metadata accessor for MessagePayload);
    sub_23F1BE0F4(v7, *(_QWORD *)(v3 - 280), type metadata accessor for MessagePayload);
    JUMPOUT(0x23F1CFA64);
  }
  JUMPOUT(0x23F1CFA4CLL);
}

void sub_23F1CFE18()
{
  MessagePayload.init(from:)();
}

void sub_23F1CFE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  MessagePayload.encode(to:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void MessagePayload.init(query:requiredContextProviders:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  _QWORD *v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  unint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  char v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  void (*v49)(uint64_t, unint64_t, uint64_t);
  _QWORD *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60[2];
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  char *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[5];
  uint64_t v77;

  sub_23F125F3C();
  sub_23F2511B8();
  v7 = v6;
  v8 = (int *)sub_23F251630();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F15EB6C();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  v68 = (uint64_t)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F1A9220();
  v13 = type metadata accessor for MessagePayload.RequestContent(v12);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F15E9D0(v15, v60[0]);
  sub_23F1217E8(&qword_256DFE550);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F1319B0();
  v71 = sub_23F1217E8(&qword_256DFE560);
  sub_23F12611C();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F14EFA0();
  v70 = v18;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v19);
  if (!v0)
    goto LABEL_20;
  v72 = (char *)v60 - v20;
  v64 = v1;
  v77 = MEMORY[0x24BEE4AF8];
  v21 = *(_QWORD *)(v0 + 16);
  v65 = v13;
  v66 = v2;
  if (v21)
  {
    v75 = v5;
    v22 = v0 + 32;
    do
    {
      sub_23F1328E8(v22, (uint64_t)v76);
      sub_23F12545C(v76, v76[3]);
      v23 = sub_23F250180();
      v25 = (_QWORD *)v24(v23);
      _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v76);
      sub_23F1F23B0(v25);
      v22 += 40;
      --v21;
    }
    while (v21);
    sub_23F1318B8();
    v26 = v77;
    v2 = v66;
    v5 = v75;
  }
  else
  {
    sub_23F1318B8();
    v26 = MEMORY[0x24BEE4AF8];
  }
  v27 = (uint64_t *)v72;
  if (!*(_QWORD *)(v26 + 16))
  {
LABEL_19:
    sub_23F1317F8();
    sub_23F1318B8();
    v1 = v64;
LABEL_20:
    v54 = (uint64_t)v67;
    *v67 = v2;
    *(_QWORD *)(v54 + 8) = v1;
    sub_23F251040();
    swift_storeEnumTagMultiPayload();
    sub_23F131B8C();
    v55 = v68;
    sub_23F1A9960(v68);
    v56 = v8[5];
    v57 = v4 + v8[7];
    v58 = v4 + v8[8];
    sub_23F1A9960(v58);
    v59 = (uint64_t *)(v4 + v8[9]);
    *v59 = 0;
    v59[1] = 0;
    v59[2] = 0;
    sub_23F1BE0F4(v54, v4, type metadata accessor for MessagePayload.RequestContent);
    *(_QWORD *)(v4 + v56) = 0;
    *(_BYTE *)(v4 + v8[6]) = 0;
    *(_QWORD *)v57 = 0;
    *(_QWORD *)(v57 + 8) = 0;
    *(_BYTE *)(v57 + 16) = -2;
    sub_23F1F86F4(v55, v58, &qword_256DFEB98);
    sub_23F1F55A0(*v59, v59[1]);
    *v59 = 0;
    v59[1] = 0;
    v59[2] = 0;
    sub_23F1BE0F4(v4, v7, type metadata accessor for MessagePayload.Request);
    type metadata accessor for MessagePayload(0);
    swift_storeEnumTagMultiPayload();
    sub_23F125EFC();
    return;
  }
  v75 = *(_QWORD *)(v26 + 16);
  v61 = v8;
  v62 = v4;
  v63 = v7;
  v28 = v26 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v69 = *(_QWORD *)(v3 + 72);
  v60[1] = v26;
  sub_23F1263B8();
  v29 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    v73 = v28;
    v30 = sub_23F24FAB0();
    sub_23F1752C4(v30, v31, &qword_256DFE560);
    v32 = v70;
    v33 = *(int *)(v71 + 48);
    v34 = (uint64_t)v70 + v33;
    v35 = (uint64_t)v27 + v33;
    v37 = *v27;
    v36 = v27[1];
    *v70 = *v27;
    v32[1] = v36;
    v38 = sub_23F125F84();
    v39 = *(_QWORD *)(v38 - 8);
    v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
    v74 = v34;
    sub_23F1802E8(v34, v35, v40);
    swift_isUniquelyReferenced_nonNull_native();
    v76[0] = v29;
    v41 = sub_23F2521D4();
    if (__OFADD__(v29[2], (v42 & 1) == 0))
      break;
    v43 = v41;
    v44 = v42;
    sub_23F1217E8(&qword_256E043F0);
    v45 = sub_23F2685B8();
    v27 = (uint64_t *)v72;
    if ((v45 & 1) != 0)
    {
      v46 = sub_23F2521D4();
      if ((v44 & 1) != (v47 & 1))
        goto LABEL_23;
      v43 = v46;
    }
    v29 = (_QWORD *)v76[0];
    if ((v44 & 1) != 0)
    {
      v48 = *(_QWORD *)(v39 + 72) * v43;
      v49 = *(void (**)(uint64_t, unint64_t, uint64_t))(v39 + 32);
      v49(v5, *(_QWORD *)(v76[0] + 56) + v48, v38);
      v49(v29[7] + v48, v74, v38);
      sub_23F17FC00(v5, 0);
    }
    else
    {
      *(_QWORD *)(v76[0] + 8 * (v43 >> 6) + 64) |= 1 << v43;
      v50 = (_QWORD *)(v29[6] + 16 * v43);
      *v50 = v37;
      v50[1] = v36;
      sub_23F1802E8(v29[7] + *(_QWORD *)(v39 + 72) * v43, v74, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 32));
      v51 = v29[2];
      v52 = __OFADD__(v51, 1);
      v53 = v51 + 1;
      if (v52)
        goto LABEL_22;
      v29[2] = v53;
      sub_23F17FC00(v5, 1);
      sub_23F1263B8();
    }
    swift_bridgeObjectRelease();
    sub_23F125E40(v5, &qword_256DFE550);
    sub_23F1A9648((uint64_t)v27);
    v28 = v73 + v69;
    if (!--v75)
    {
      sub_23F1318B8();
      v4 = v62;
      v7 = v63;
      v8 = v61;
      v2 = v66;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  sub_23F2687D4();
  __break(1u);
}

uint64_t SystemPrompt.stepId.getter()
{
  return sub_23F1EF104();
}

uint64_t SystemPrompt.stepId.setter(uint64_t a1)
{
  return sub_23F1EF140(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*SystemPrompt.stepId.modify())()
{
  return nullsub_1;
}

void SystemPrompt.toolId.getter()
{
  sub_23F1B7BE8(type metadata accessor for SystemPrompt);
}

void SystemPrompt.toolId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F1D034C(a1, a2, type metadata accessor for SystemPrompt);
}

void sub_23F1D034C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t *v6;

  v6 = (uint64_t *)(v3 + *(int *)(sub_23F2505FC(a1, a2, a3) + 20));
  sub_23F18ADB4();
  *v6 = a1;
  v6[1] = a2;
  sub_23F12612C();
}

uint64_t (*SystemPrompt.toolId.modify())()
{
  type metadata accessor for SystemPrompt(0);
  sub_23F180384();
  return nullsub_1;
}

void SystemPrompt.prompt.getter()
{
  sub_23F1D2490();
}

void SystemPrompt.prompt.setter(uint64_t a1)
{
  sub_23F1D24D8(a1, type metadata accessor for SystemPrompt);
}

uint64_t (*SystemPrompt.prompt.modify())()
{
  type metadata accessor for SystemPrompt(0);
  sub_23F18030C();
  return nullsub_1;
}

unint64_t SystemPrompt.description.getter()
{
  sub_23F26851C();
  swift_bridgeObjectRelease();
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&unk_256E043F8);
  sub_23F268780();
  sub_23F2681BC();
  sub_23F131A30();
  sub_23F25222C();
  type metadata accessor for SystemPrompt(0);
  sub_23F126140();
  sub_23F250180();
  sub_23F2681BC();
  sub_23F1318DC();
  sub_23F25222C();
  SystemPrompt.Prompt.description.getter();
  sub_23F2681BC();
  sub_23F1318B8();
  sub_23F24F7BC();
  return 0xD000000000000015;
}

uint64_t sub_23F1D052C()
{
  sub_23F26851C();
  swift_bridgeObjectRelease();
  sub_23F2681BC();
  swift_bridgeObjectRelease();
  sub_23F2681BC();
  sub_23F2681BC();
  return swift_bridgeObjectRelease();
}

void SystemPrompt.init(stepId:toolId:prompt:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  _QWORD *v9;

  sub_23F131B8C();
  v6 = sub_23F15EB40();
  v7(v6);
  v8 = type metadata accessor for SystemPrompt(0);
  v9 = (_QWORD *)(a3 + *(int *)(v8 + 20));
  *v9 = a1;
  v9[1] = a2;
  sub_23F2501E4(v8, a3 + *(int *)(v8 + 24), type metadata accessor for SystemPrompt.Prompt);
  sub_23F131ABC();
}

void SystemPrompt.Prompt.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;

  type metadata accessor for SystemPrompt.Prompt(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23F24F288();
  sub_23F1BE1A0(v1, v2, v3);
  v4 = (char *)sub_23F1D06F8 + 4 * byte_23F278DB6[sub_23F250580()];
  __asm { BR              X10 }
}

void sub_23F1D06F8(uint64_t a1)
{
  sub_23F250838(a1, type metadata accessor for SystemPrompt.Prompt);
  sub_23F131BE8();
  sub_23F12612C();
}

void static SystemPrompt.Prompt.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16[22];

  sub_23F125F3C();
  v2 = v1;
  type metadata accessor for ParameterConfirmation(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F1A949C(v4, v16[0]);
  v16[0] = type metadata accessor for ParameterNeedsValue(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  v16[2] = (uint64_t)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F1A9220();
  type metadata accessor for SystemPrompt.Prompt(v7);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F24FB6C();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1217E8(&qword_256E04400);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F25086C();
  sub_23F1BE1A0(v2, v0, type metadata accessor for SystemPrompt.Prompt);
  v13 = sub_23F2504F0();
  sub_23F1BE1A0(v13, v14, type metadata accessor for SystemPrompt.Prompt);
  v15 = (char *)sub_23F1D0898 + 4 * byte_23F278DBA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F1D0898(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  uint64_t v14;

  sub_23F24FE90(v2, a2, type metadata accessor for SystemPrompt.Prompt);
  v6 = *v3;
  v5 = v3[1];
  v8 = v3[2];
  v7 = v3[3];
  if (sub_23F250594())
  {
    sub_23F131790();
    swift_bridgeObjectRelease();
    v9 = sub_23F1317F8();
    sub_23F24F5EC(v9, &qword_256E04400);
  }
  else
  {
    v11 = v4[2];
    v10 = v4[3];
    v12 = v6 == *v4 && v5 == v4[1];
    if ((v12 || (sub_23F126148() & 1) != 0)
      && (v8 == v11 ? (v13 = v7 == v10) : (v13 = 0), v13 || (sub_23F251114(), (sub_23F126148() & 1) != 0)))
    {
      sub_23F2504F0();
      sub_23F123100();
      sub_23F131790();
      sub_23F13190C();
      sub_23F1317F8();
      sub_23F1318DC();
      sub_23F1262C0();
      v14 = sub_23F131A30();
    }
    else
    {
      sub_23F131790();
      sub_23F13190C();
      sub_23F1317F8();
      sub_23F1318DC();
      sub_23F1262C0();
      v14 = sub_23F131A30();
    }
    sub_23F24F318(v14, type metadata accessor for SystemPrompt.Prompt);
  }
  sub_23F125EFC();
}

uint64_t static ActionConfirmation.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_23F1ED040(a1, a2, (uint64_t (*)(uint64_t))sub_23F123100);
}

void static ParameterNeedsValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_23F1DB5F8(a1, a2, type metadata accessor for ParameterNeedsValue);
}

void static ParameterConfirmation.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F131914(a1);
  v5 = v5 && v3 == v4;
  if (!v5)
  {
    sub_23F126148();
    sub_23F15E5CC();
    if ((v6 & 1) == 0)
      goto LABEL_29;
  }
  v7 = *(_BYTE *)(v1 + 24);
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(v1 + 24))
      goto LABEL_29;
  }
  else
  {
    if (*(_QWORD *)(v2 + 16) != *(_QWORD *)(v1 + 16))
      v7 = 1;
    if ((v7 & 1) != 0)
      goto LABEL_29;
  }
  sub_23F250E20();
  if ((_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0() & 1) == 0)
    goto LABEL_29;
  sub_23F24FF54();
  if (v10)
  {
    if (!v8)
      goto LABEL_29;
    sub_23F24F854(v9);
    if (!v5 || v11 != v12)
    {
      sub_23F126148();
      sub_23F15E5CC();
      if ((v14 & 1) == 0)
        goto LABEL_29;
    }
  }
  else if (v8)
  {
    goto LABEL_29;
  }
  sub_23F24FF54();
  if (v17 && v15)
  {
    sub_23F24F854(v16);
    if (!v5 || v18 != v19)
      sub_23F126148();
  }
LABEL_29:
  sub_23F12612C();
}

void static ParameterDisambiguation.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  _QWORD *v14;
  _QWORD *v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  sub_23F1314D0();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 40);
  v18 = *(_QWORD *)(v0 + 48);
  v19 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(unsigned __int8 *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)v0 == *(_QWORD *)v1 && *(_QWORD *)(v0 + 8) == *(_QWORD *)(v1 + 8);
  v9 = *(_QWORD *)(v1 + 48);
  v10 = *(_QWORD *)(v1 + 56);
  if (!v8)
  {
    sub_23F126148();
    sub_23F15E5CC();
    if ((v11 & 1) == 0)
      goto LABEL_26;
  }
  if ((v3 & 1) != 0)
  {
    if (!v6)
      goto LABEL_26;
  }
  else
  {
    if (v2 == v5)
      v12 = v6;
    else
      v12 = 1;
    if ((v12 & 1) != 0)
      goto LABEL_26;
  }
  sub_23F25107C();
  sub_23F1298E0();
  if ((v13 & 1) == 0)
    goto LABEL_26;
  if (v4)
  {
    if (!v7)
      goto LABEL_26;
    v14 = (_QWORD *)sub_23F15EB34();
    sub_23F129820(v14, v15);
    if ((v16 & 1) == 0)
      goto LABEL_26;
  }
  else if (v7)
  {
    goto LABEL_26;
  }
  if (v19 && v10 && (v18 != v9 || v19 != v10))
    sub_23F126148();
LABEL_26:
  sub_23F131500();
}

uint64_t sub_23F1D0D68(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x800000023F2949A0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023F2949C0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023F2949E0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023F294A00)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23F1D0F00(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F1D0F38 + 4 * byte_23F278DBE[a1]))(0xD000000000000012, 0x800000023F2949A0);
}

uint64_t sub_23F1D0F38(uint64_t a1)
{
  return a1 + 1;
}

void sub_23F1D0F70(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F1F0CF8(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F1D0F98()
{
  sub_23F1F7594();
  return sub_23F2688B8();
}

uint64_t sub_23F1D0FC0()
{
  sub_23F1F7594();
  return sub_23F2688C4();
}

uint64_t sub_23F1D0FE8()
{
  unsigned __int8 *v0;

  return sub_23F1D0F00(*v0);
}

uint64_t sub_23F1D0FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1D0D68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1D1014()
{
  sub_23F1F7468();
  return sub_23F2688B8();
}

uint64_t sub_23F1D103C()
{
  sub_23F1F7468();
  return sub_23F2688C4();
}

uint64_t sub_23F1D1064()
{
  sub_23F1F751C();
  return sub_23F2688B8();
}

uint64_t sub_23F1D108C()
{
  sub_23F1F751C();
  return sub_23F2688C4();
}

uint64_t sub_23F1D10B4()
{
  sub_23F1F74A4();
  return sub_23F2688B8();
}

uint64_t sub_23F1D10DC()
{
  sub_23F1F74A4();
  return sub_23F2688C4();
}

uint64_t sub_23F1D1104()
{
  sub_23F1F7558();
  return sub_23F2688B8();
}

uint64_t sub_23F1D112C()
{
  sub_23F1F7558();
  return sub_23F2688C4();
}

void SystemPrompt.Prompt.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29[26];

  sub_23F131874();
  sub_23F250DF0();
  v11 = sub_23F1217E8(&qword_256E04408);
  v29[12] = *(_QWORD *)(v11 - 8);
  v29[13] = v11;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F24F5B4(v13, v29[0]);
  v14 = sub_23F1217E8(&qword_256E04410);
  v29[9] = *(_QWORD *)(v14 - 8);
  v29[10] = v14;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  v29[8] = (uint64_t)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[6] = sub_23F250E20();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F17FFFC(v18, v29[0]);
  v19 = sub_23F1217E8(&qword_256E04418);
  v29[4] = *(_QWORD *)(v19 - 8);
  v29[5] = v19;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v20);
  v29[3] = (uint64_t)v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[2] = type metadata accessor for ParameterNeedsValue(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F1316E4();
  v29[1] = *(_QWORD *)(sub_23F1217E8(&qword_256E04420) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v23);
  v24 = sub_23F15E9EC();
  type metadata accessor for SystemPrompt.Prompt(v24);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F126058();
  v26 = sub_23F1217E8(&qword_256E04428);
  v29[14] = *(_QWORD *)(v26 - 8);
  v29[15] = v26;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F2521E0();
  sub_23F15EBF0();
  sub_23F1BE1A0(a10, v10, type metadata accessor for SystemPrompt.Prompt);
  sub_23F250840();
  v28 = (char *)sub_23F1D1344 + 4 * byte_23F278DC2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F1D1344()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = v1[1];
  *(_QWORD *)(v3 - 184) = *v1;
  *(_QWORD *)(v3 - 72) = v4;
  v6 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  *(_BYTE *)(v3 - 152) = 0;
  sub_23F1F7594();
  sub_23F15E6E8();
  *(_QWORD *)(v3 - 152) = *(_QWORD *)(v3 - 184);
  *(_QWORD *)(v3 - 144) = v4;
  *(_QWORD *)(v3 - 136) = v6;
  *(_QWORD *)(v3 - 128) = v5;
  *(_QWORD *)(v3 - 120) = v7;
  sub_23F1F75D0();
  sub_23F17FC90();
  sub_23F15E588(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 280) + 8));
  sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 176) + 8));
  sub_23F13190C();
  sub_23F131790();
  sub_23F250DCC();
  sub_23F15EAFC();
  sub_23F1313FC();
}

void SystemPrompt.Prompt.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_23F131874();
  sub_23F251480(v12);
  sub_23F1217E8(&qword_256E04478);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F15E9D0(v14, v38);
  sub_23F1217E8(&qword_256E04480);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F15E9B4(v16, v39);
  sub_23F1217E8(&qword_256E04488);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F24F21C(v18, v40);
  sub_23F1217E8(&qword_256E04490);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F17FFFC(v20, v41);
  v21 = sub_23F1217E8(&qword_256E04498);
  sub_23F251010(v21);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_23F125FBC();
  v42 = type metadata accessor for SystemPrompt.Prompt(v23);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F1A9470();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F24F0A4();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F251ACC();
  v43 = v10;
  sub_23F2521E0();
  sub_23F2509F4();
  sub_23F25049C();
  if (!a10)
  {
    v29 = sub_23F252400();
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
    {
      v31 = *(unsigned __int8 *)(v29 + 32);
      sub_23F15E2D0(1, v30, v29, v29 + 32, 0, (2 * v30) | 1);
      v33 = v32;
      v11 = v34;
      sub_23F13186C();
      if (v33 == (unint64_t)v11 >> 1)
        __asm { BR              X9 }
    }
    sub_23F15EDB8();
    sub_23F131B30();
    sub_23F2508FC();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F24F960();
    *v11 = v42;
    sub_23F268648();
    v35 = sub_23F24ECCC();
    sub_23F24FA28(v35, *MEMORY[0x24BEE26D0]);
    sub_23F250144();
    sub_23F15E5EC();
    v36 = sub_23F2500D8();
    v37(v36);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v43);
  sub_23F15EAFC();
  sub_23F1313FC();
}

void sub_23F1D1934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F251F70();
  sub_23F24F184();
  if (!v0)
  {
    type metadata accessor for ParameterNeedsValue(0);
    sub_23F12E488((uint64_t)&unk_256E044B0);
    sub_23F17FABC();
    v3 = *(_QWORD *)(v2 - 192);
    v4 = sub_23F2521C8();
    sub_23F1A977C(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8));
    sub_23F15E5EC();
    sub_23F17FB40(v1, *(uint64_t (**)(uint64_t, _QWORD))(v3 + 8));
    sub_23F24FAB0();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F1D1C88);
  }
  sub_23F15E5EC();
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8));
  JUMPOUT(0x23F1D1924);
}

void sub_23F1D19F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F251EB0();
  v4 = *(_QWORD *)(v3 - 216);
  sub_23F24F184();
  if (v0)
    JUMPOUT(0x23F1D1A28);
  sub_23F250E20();
  sub_23F12E488((uint64_t)&unk_256E044A8);
  sub_23F17FABC();
  sub_23F1A977C(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F15E5EC();
  sub_23F17FB40(v1, *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 192) + 8));
  sub_23F24FAB0();
  JUMPOUT(0x23F1D1C00);
}

void sub_23F1D1A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F251BF4();
  v3 = *(_QWORD *)(v2 - 208);
  sub_23F24F184();
  if (v0)
  {
    sub_23F15E5EC();
    sub_23F252088();
    JUMPOUT(0x23F1D1B50);
  }
  sub_23F1F760C();
  sub_23F1A97E4();
  v4 = *(_QWORD *)(v2 - 192);
  sub_23F15E444(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 248) + 8));
  sub_23F15E5EC();
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v5 = *(_QWORD *)(v2 - 136);
  v6 = *(_BYTE *)(v2 - 128);
  v7 = *(_QWORD *)(v2 - 120);
  v8 = *(_QWORD *)(v2 - 96);
  v9 = *(_QWORD *)(v2 - 320);
  *(_OWORD *)v9 = *(_OWORD *)(v2 - 152);
  *(_QWORD *)(v9 + 16) = v5;
  *(_BYTE *)(v9 + 24) = v6;
  *(_QWORD *)(v9 + 32) = v7;
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v2 - 112);
  *(_QWORD *)(v9 + 56) = v8;
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x23F1D1C88);
}

uint64_t sub_23F1D1CB4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x644970657473 && a2 == 0xE600000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F1D1DEC(char a1)
{
  return *(_QWORD *)&aStepid_0[8 * a1];
}

void sub_23F1D1E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  SystemPrompt.Prompt.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1D1E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  SystemPrompt.Prompt.encode(to:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_23F1D1E34()
{
  char *v0;

  return sub_23F1D1DEC(*v0);
}

uint64_t sub_23F1D1E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1D1CB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1D1E60()
{
  sub_23F1F7684();
  return sub_23F2688B8();
}

uint64_t sub_23F1D1E88()
{
  sub_23F1F7684();
  return sub_23F2688C4();
}

void SystemPrompt.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E044C0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F1F7684();
  sub_23F18A998();
  v5[15] = 0;
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&qword_256DFEF10);
  sub_23F126188();
  if (!v0)
  {
    type metadata accessor for SystemPrompt(0);
    sub_23F24F18C();
    v5[13] = 2;
    type metadata accessor for SystemPrompt.Prompt(0);
    sub_23F12E488((uint64_t)&unk_256E044D0);
    sub_23F17F99C();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void SystemPrompt.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F131874();
  v4 = v3;
  v17[0] = v5;
  v17[1] = type metadata accessor for SystemPrompt.Prompt(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  v18 = (uint64_t)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23F131B8C();
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F1A982C(v9, v17[0]);
  v19 = sub_23F1217E8(&qword_256E044D8);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F17FFA8();
  v12 = type metadata accessor for SystemPrompt(v11);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F24ED3C(v4);
  sub_23F1F7684();
  v21 = v2;
  sub_23F18037C();
  if (v0)
  {
    sub_23F250744();
  }
  else
  {
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F17FE68();
    sub_23F2500E8();
    v14 = sub_23F24FBE0();
    v15 = (uint64_t *)(v1 + *(int *)(v12 + 20));
    *v15 = v14;
    v15[1] = v16;
    sub_23F180274();
    sub_23F12E488((uint64_t)&unk_256E044E0);
    sub_23F17FE48();
    sub_23F24F900(v21, MEMORY[8]);
    sub_23F1BE0F4(v18, v1 + *(int *)(v12 + 24), type metadata accessor for SystemPrompt.Prompt);
    sub_23F24F0B8(v1, v17[0]);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
    sub_23F24F1B8(v1);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1D2258()
{
  SystemPrompt.init(from:)();
}

void sub_23F1D226C()
{
  SystemPrompt.encode(to:)();
}

uint64_t (*SystemPromptResolution.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t SystemPromptResolution.systemResponseEventId.getter()
{
  return sub_23F1B01AC(type metadata accessor for SystemPromptResolution);
}

uint64_t SystemPromptResolution.systemResponseEventId.setter(uint64_t a1)
{
  return sub_23F1D230C(a1, type metadata accessor for SystemPromptResolution);
}

uint64_t (*SystemPromptResolution.systemResponseEventId.modify())()
{
  type metadata accessor for SystemPromptResolution(0);
  sub_23F180384();
  return nullsub_1;
}

uint64_t SystemPromptResolution.actionResponseEventId.getter()
{
  return sub_23F1B01AC(type metadata accessor for SystemPromptResolution);
}

uint64_t SystemPromptResolution.actionResponseEventId.setter(uint64_t a1)
{
  return sub_23F1D230C(a1, type metadata accessor for SystemPromptResolution);
}

uint64_t sub_23F1D230C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F24F690(a1, a2);
  sub_23F2503D4();
  v2 = sub_23F14C64C();
  return sub_23F24EEBC(v2, v3, v4, v5);
}

void SystemPromptResolution.actionResponseEventId.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t, uint64_t);

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_23F131B8C();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v7 = malloc(v6);
  v3[4] = v7;
  v8 = *(int *)(type metadata accessor for SystemPromptResolution(0) + 20);
  *((_DWORD *)v3 + 12) = v8;
  v9 = v1 + v8;
  v10 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 16);
  v3[5] = v10;
  v10(v7, v9, v4);
  sub_23F131ABC();
}

void sub_23F1D23E4(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[2];
    v4 = v2[3];
    v6 = *v2 + *((int *)v2 + 12);
    ((void (*)(uint64_t, _QWORD, _QWORD))v2[5])(v4, v2[4], v2[1]);
    sub_23F1802E8(v6, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 40));
    sub_23F250CDC(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }
  else
  {
    sub_23F126138(*v2 + *((int *)v2 + 12), *(uint64_t (**)(uint64_t, uint64_t))(v2[2] + 40));
  }
  free(v3);
  sub_23F2515E0();
  sub_23F250368(v2);
}

void SystemPromptResolution.userAction.getter()
{
  sub_23F1D2490();
}

void sub_23F1D2490()
{
  uint64_t v0;

  v0 = sub_23F24FB34();
  sub_23F2511A8(*(int *)(v0 + 24));
  sub_23F12612C();
}

void SystemPromptResolution.userAction.setter(uint64_t a1)
{
  sub_23F1D24D8(a1, type metadata accessor for SystemPromptResolution);
}

void sub_23F1D24D8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;

  sub_23F24F690(a1, a2);
  sub_23F18030C();
  sub_23F252340(v2, v3);
  sub_23F12612C();
}

uint64_t (*SystemPromptResolution.userAction.modify())()
{
  sub_23F250E10();
  sub_23F18030C();
  return nullsub_1;
}

uint64_t SystemPromptResolution.statementId.getter()
{
  return sub_23F1DA280();
}

void SystemPromptResolution.statementId.setter(uint64_t a1)
{
  sub_23F1DA2B4(a1, type metadata accessor for SystemPromptResolution);
}

uint64_t (*SystemPromptResolution.statementId.modify())()
{
  sub_23F250E10();
  sub_23F1A9AFC();
  return nullsub_1;
}

void SystemPromptResolution.inputModality.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SystemPromptResolution(0) + 32));
  if (*((_BYTE *)v3 + 16) == 2)
  {
    v5 = *v3;
    v4 = v3[1];
    v6 = *v3 | v4;
    if (v6)
      LOBYTE(v6) = (v5 ^ 1 | v4) == 0;
  }
  else
  {
    LOBYTE(v6) = 0;
  }
  *a1 = v6;
  sub_23F126078();
}

void sub_23F1D25BC(_BYTE *a1@<X8>)
{
  char v2;

  SystemPromptResolution.inputModality.getter(&v2);
  *a1 = v2;
}

void sub_23F1D25F4(unsigned __int8 *a1)
{
  unsigned __int8 v1;

  v1 = *a1;
  SystemPromptResolution.inputModality.setter(&v1);
}

void SystemPromptResolution.inputModality.setter(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = type metadata accessor for SystemPromptResolution(0);
  sub_23F250B88(v3);
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = 0;
  *(_BYTE *)(v1 + 16) = 2;
  sub_23F126078();
}

void SystemPromptResolution.inputModality.modify(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_BYTE *)(a1 + 12);
  *(_QWORD *)a1 = v1;
  v4 = *(int *)(type metadata accessor for SystemPromptResolution(0) + 32);
  *(_DWORD *)(a1 + 8) = v4;
  v5 = (uint64_t *)(v1 + v4);
  if (*((_BYTE *)v5 + 16) == 2)
  {
    v7 = *v5;
    v6 = v5[1];
    v8 = *v5 | v6;
    if (v8)
      LOBYTE(v8) = (v7 ^ 1 | v6) == 0;
  }
  else
  {
    LOBYTE(v8) = 0;
  }
  *v3 = v8;
  sub_23F12612C();
}

void sub_23F1D26D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)a1 + *(int *)(a1 + 8);
  v2 = *(unsigned __int8 *)(a1 + 12);
  sub_23F137210(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = 0;
  *(_BYTE *)(v1 + 16) = 2;
  sub_23F126078();
}

uint64_t SystemPromptResolution.input.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;

  v0 = type metadata accessor for SystemPromptResolution(0);
  v1 = sub_23F251174(*(int *)(v0 + 32));
  return sub_23F135C7C(v1, v2, v3);
}

void SystemPromptResolution.input.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = type metadata accessor for SystemPromptResolution(0);
  sub_23F250B88(v5);
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  sub_23F12612C();
}

uint64_t (*SystemPromptResolution.input.modify())()
{
  type metadata accessor for SystemPromptResolution(0);
  sub_23F2503E0();
  return nullsub_1;
}

void SystemPromptResolution.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  sub_23F126388();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F1319C8();
  sub_23F26851C();
  sub_23F2681BC();
  sub_23F24F7B4(v0, v1);
  v3 = sub_23F131B8C();
  v4 = sub_23F1263A4(v1, 1, v3);
  if (v5)
  {
    sub_23F1A9640(v4, &qword_256DFEB98);
  }
  else
  {
    sub_23F267D30();
    v6 = sub_23F24F3AC();
    v7(v6, v3);
  }
  sub_23F126358();
  sub_23F2681BC();
  sub_23F1318DC();
  sub_23F2681BC();
  sub_23F250E10();
  sub_23F12E488((uint64_t)&unk_256E043F8);
  sub_23F268780();
  sub_23F250DFC();
  sub_23F131A30();
  sub_23F2681BC();
  SystemPromptResolution.UserAction.description.getter();
  sub_23F250DFC();
  sub_23F131A30();
  sub_23F2681BC();
  sub_23F1263B8();
  StatementID.description.getter();
  sub_23F250DFC();
  sub_23F1318B8();
  sub_23F131A30();
  sub_23F24F7BC();
  sub_23F131ABC();
}

void SystemPromptResolution.init(actionEventId:systemResponseEventId:userAction:statementId:input:)()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  int v8;
  uint64_t *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23F14C4D8();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = *v7;
  v21 = *((_QWORD *)v7 + 2);
  v22 = *((_QWORD *)v7 + 1);
  v23 = v9[1];
  v24 = *v9;
  v10 = *((unsigned __int8 *)v9 + 16);
  v11 = sub_23F131B8C();
  sub_23F24F8A4(v6);
  v13 = v6 + v12;
  *(_QWORD *)v13 = 0;
  *(_QWORD *)(v13 + 8) = 0;
  *(_BYTE *)(v13 + 16) = 2;
  v14 = sub_23F250574();
  sub_23F1F86F4(v14, v15, v16);
  sub_23F126250(v6 + v0[5], v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32));
  sub_23F1BE0F4(v2, v6 + v0[6], type metadata accessor for SystemPromptResolution.UserAction);
  v17 = v6 + v0[7];
  *(_DWORD *)v17 = v8;
  *(_QWORD *)(v17 + 8) = v22;
  *(_QWORD *)(v17 + 16) = v21;
  if (v10 == 255)
    v18 = 0;
  else
    v18 = v24;
  if (v10 == 255)
    v19 = 0;
  else
    v19 = v23;
  if (v10 == 255)
    v20 = 2;
  else
    v20 = v10;
  sub_23F137210(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), *(_BYTE *)(v13 + 16));
  *(_QWORD *)v13 = v18;
  *(_QWORD *)(v13 + 8) = v19;
  *(_BYTE *)(v13 + 16) = v20;
  sub_23F24F71C();
}

void _s16IntelligenceFlow22SystemPromptResolutionV13actionEventId014systemResponsegH010userAction09statementH013inputModalityAC10Foundation4UUIDVSg_AkC04UserL0OAA11StatementIDVAC05InputO0OSgtcfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int v22;

  sub_23F14C4D8();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v22 = *v8;
  v9 = *((_QWORD *)v8 + 2);
  v20 = *v10;
  v21 = *((_QWORD *)v8 + 1);
  v11 = sub_23F131B8C();
  v12 = sub_23F2508EC();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v12, v13, v14, v11);
  v15 = (int *)type metadata accessor for SystemPromptResolution(0);
  v16 = v7 + v15[8];
  *(_QWORD *)v16 = 0;
  *(_QWORD *)(v16 + 8) = 0;
  *(_BYTE *)(v16 + 16) = 2;
  sub_23F175240(v5, v7);
  v17 = *(_QWORD *)(v11 - 8);
  sub_23F1802E8(v7 + v15[5], v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16));
  sub_23F252268(v1, v7 + v15[6]);
  v18 = v7 + v15[7];
  *(_DWORD *)v18 = v22;
  *(_QWORD *)(v18 + 8) = v21;
  *(_QWORD *)(v18 + 16) = v9;
  sub_23F137210(*(_QWORD *)v16, *(_QWORD *)(v16 + 8), *(_BYTE *)(v16 + 16));
  *(_QWORD *)v16 = v20 & 1;
  *(_QWORD *)(v16 + 8) = 0;
  *(_BYTE *)(v16 + 16) = 2;
  sub_23F25145C(v1);
  v19 = sub_23F250CDC(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  sub_23F24F5EC(v19, &qword_256DFEB98);
  sub_23F24F71C();
}

void SystemPromptResolution.init(actionEventId:actionResponseEventId:userAction:statementId:)()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  int *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F125F3C();
  sub_23F24F8EC();
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  v7 = sub_23F131B8C();
  sub_23F24F8A4(v1);
  sub_23F2506BC(v8);
  *(_BYTE *)(v9 + 16) = 2;
  v10 = sub_23F2505B0();
  sub_23F1F86F4(v10, v11, v12);
  v13 = sub_23F126250(v1 + v2[5], v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
  sub_23F2501E4(v13, v1 + v2[6], type metadata accessor for SystemPromptResolution.UserAction);
  v14 = v1 + v2[7];
  *(_DWORD *)v14 = v4;
  *(_QWORD *)(v14 + 8) = v5;
  *(_QWORD *)(v14 + 16) = v6;
  sub_23F125EFC();
}

void SystemPromptResolution.init(actionEventId:actionResponseEventId:userAction:)()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;

  sub_23F18039C();
  v2 = v1;
  v4 = v3;
  v5 = sub_23F131B8C();
  sub_23F24F8A4(v4);
  sub_23F2516C8(v6);
  sub_23F250CD0();
  v7 = sub_23F126250(v4 + v0[5], v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16));
  sub_23F252370(v7, v4 + v0[6], type metadata accessor for SystemPromptResolution.UserAction);
  v8 = sub_23F250180();
  v10 = v9(v8);
  sub_23F250CC8(v10, &qword_256DFEB98);
  v11 = v4 + v0[7];
  *(_DWORD *)v11 = 0;
  *(_QWORD *)(v11 + 8) = 0;
  *(_QWORD *)(v11 + 16) = 0;
  sub_23F131680();
}

void _s16IntelligenceFlow22SystemPromptResolutionV7eventId10userActionAC10Foundation4UUIDV_AC04UserI0OtcfC_0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_23F131B8C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a2, 1, 1, v4);
  v5 = (int *)sub_23F250E10();
  sub_23F2516C8(v5[8]);
  sub_23F24F5EC(v6, &qword_256DFEB98);
  v7 = *(_QWORD *)(v4 - 8);
  sub_23F1802E8(a2, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  sub_23F17FC00(a2, 0);
  v8 = sub_23F267D78();
  sub_23F252370(v8, a2 + v5[6], type metadata accessor for SystemPromptResolution.UserAction);
  sub_23F250CDC(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  v9 = a2 + v5[7];
  *(_DWORD *)v9 = 0;
  *(_QWORD *)(v9 + 8) = 0;
  *(_QWORD *)(v9 + 16) = 0;
  sub_23F131ABC();
}

uint64_t SystemPromptResolution.InputModality.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x7365672064616568;
  else
    return 0x6863756F74;
}

uint64_t sub_23F1D2DA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6863756F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7473654764616568 && a2 == 0xEB00000000657275)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1D2EA4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7473654764616568;
  else
    return 0x6863756F74;
}

uint64_t sub_23F1D2EE0()
{
  char *v0;

  return sub_23F1D2EA4(*v0);
}

uint64_t sub_23F1D2EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1D2DA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1D2F0C()
{
  sub_23F1F76D4();
  return sub_23F2688B8();
}

uint64_t sub_23F1D2F34()
{
  sub_23F1F76D4();
  return sub_23F2688C4();
}

uint64_t sub_23F1D2F5C()
{
  sub_23F1F7710();
  return sub_23F2688B8();
}

uint64_t sub_23F1D2F84()
{
  sub_23F1F7710();
  return sub_23F2688C4();
}

uint64_t sub_23F1D2FAC()
{
  sub_23F1F774C();
  return sub_23F2688B8();
}

uint64_t sub_23F1D2FD4()
{
  sub_23F1F774C();
  return sub_23F2688C4();
}

void SystemPromptResolution.InputModality.encode(to:)()
{
  char *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  _QWORD v14[4];
  uint64_t v15;
  uint64_t v16;

  sub_23F131874();
  v16 = v1;
  v3 = v2;
  v4 = sub_23F1217E8(&qword_256E044E8);
  v14[2] = *(_QWORD *)(v4 - 8);
  v14[3] = v4;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1316E4();
  v6 = sub_23F1217E8(&qword_256E044F0);
  v14[0] = *(_QWORD *)(v6 - 8);
  v14[1] = v6;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15EB6C();
  v15 = *(_QWORD *)(sub_23F1217E8(&qword_256E044F8) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v0;
  sub_23F24FC14(v3);
  sub_23F1F76D4();
  sub_23F24FDB4();
  if ((v11 & 1) != 0)
  {
    sub_23F1F7710();
    sub_23F24EE10();
    v12 = sub_23F2500BC();
  }
  else
  {
    sub_23F1F774C();
    sub_23F24EE10();
    v12 = sub_23F24FA10();
  }
  v13(v12);
  sub_23F15E588((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  sub_23F251E48();
  sub_23F1313FC();
}

void SystemPromptResolution.InputModality.init(from:)()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F131874();
  sub_23F2512B8(v3);
  v31 = sub_23F1217E8(&qword_256E04518);
  v33 = *(_QWORD *)(v31 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F18ABFC(v5, v29[0]);
  v32 = sub_23F1217E8(&qword_256E04520);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F15E524();
  sub_23F1217E8(&qword_256E04528);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F24ED3C(v2);
  sub_23F1F76D4();
  v10 = v34;
  sub_23F15E564();
  if (v10)
    goto LABEL_7;
  sub_23F24F6CC();
  sub_23F25129C();
  if (!v11
    || (v29[0] = 0,
        v12 = sub_23F24F368(),
        v18 = sub_23F15E2D0(v12, v13, v14, v15, v16, v17),
        v20 = v19,
        v22 = v21,
        sub_23F15EB24(),
        v20 != v22 >> 1))
  {
    sub_23F15EDB8();
    sub_23F131B30();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F250EB8();
    sub_23F2502A0((uint64_t)&type metadata for SystemPromptResolution.InputModality);
    v24 = sub_23F15E6B4();
    sub_23F24EF6C(v24, *MEMORY[0x24BEE26D0]);
    sub_23F2519E0();
    sub_23F15E96C();
    v25 = sub_23F2500C8();
    v26(v25);
    v2 = v30;
LABEL_7:
    v27 = (uint64_t)v2;
    goto LABEL_8;
  }
  if ((v2 & 1) != 0)
  {
    sub_23F250EFC();
    sub_23F1F7710();
    sub_23F24F3C4();
    v23 = v34;
    sub_23F250DC0();
    sub_23F2502BC();
    sub_23F15E96C();
    sub_23F15E588(v18, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    LOBYTE(v2) = v32;
  }
  else
  {
    sub_23F1F774C();
    sub_23F24F538();
    v28 = v34;
    sub_23F250DC0();
    sub_23F24F9F0(v1, *(uint64_t (**)(uint64_t, _QWORD))(v29[1] + 8));
    sub_23F15E96C();
    sub_23F15E7D4((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
  }
  *v0 = (_BYTE)v2;
  v27 = (uint64_t)v30;
LABEL_8:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v27);
  sub_23F24F9F8();
  sub_23F1313FC();
}

void sub_23F1D33C0()
{
  SystemPromptResolution.InputModality.init(from:)();
}

void sub_23F1D33D4()
{
  SystemPromptResolution.InputModality.encode(to:)();
}

void SystemPromptResolution.ResolutionInput.description.getter()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 16) || *(_BYTE *)(v0 + 16) == 1)
  {
    sub_23F2681BC();
    sub_23F2685AC();
    sub_23F24F7BC();
  }
  sub_23F250454();
}

void static SystemPromptResolution.ResolutionInput.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v6 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
    if (*(_BYTE *)(a2 + 16))
      goto LABEL_25;
    if (v3 != v5 || v2 != v4)
    {
      sub_23F14C3A8();
      sub_23F126148();
    }
    sub_23F252114();
    sub_23F135C7C(v28, v29, v30);
    sub_23F135C7C(v3, v2, 0);
    sub_23F137210(v3, v2, 0);
    sub_23F252114();
    goto LABEL_27;
  }
  if (*(_BYTE *)(a1 + 16) != 1)
  {
    if (!(v3 | v2))
    {
      if (v6 == 2 && (v4 | v5) == 0)
      {
        sub_23F2514D8();
        v31 = sub_23F24FEF4();
        sub_23F137210(v31, v32, 2u);
        goto LABEL_29;
      }
      goto LABEL_25;
    }
    if (v6 != 2 || v5 != 1 || v4 != 0)
    {
LABEL_25:
      sub_23F252120();
      sub_23F135C7C(v16, v17, v18);
      sub_23F252158();
      sub_23F135C7C(v19, v20, v21);
      sub_23F252158();
      sub_23F137210(v22, v23, v24);
      sub_23F252120();
      sub_23F137210(v25, v26, v27);
      goto LABEL_29;
    }
    sub_23F2514D8();
    v12 = sub_23F251C80();
LABEL_27:
    sub_23F137210(v12, v13, v14);
    goto LABEL_29;
  }
  if (v6 != 1)
    goto LABEL_25;
  v7 = sub_23F252248();
  sub_23F1298DC(v7, v8);
  sub_23F135C7C(v5, v4, 1u);
  sub_23F135C7C(v3, v2, 1u);
  sub_23F137210(v3, v2, 1u);
  sub_23F137210(v5, v4, 1u);
LABEL_29:
  sub_23F131ABC();
}

uint64_t sub_23F1D3664(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x6863756F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7473654764616568 && a2 == 0xEB00000000657275;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1954047348 && a2 == 0xE400000000000000;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x686365657073 && a2 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F1D3808(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1D3838 + 4 * byte_23F278DCA[a1]))(0x6863756F74, 0xE500000000000000);
}

uint64_t sub_23F1D3838()
{
  return 0x7473654764616568;
}

uint64_t sub_23F1D3858()
{
  return 1954047348;
}

uint64_t sub_23F1D3868()
{
  return 0x686365657073;
}

uint64_t sub_23F1D387C()
{
  unsigned __int8 *v0;

  return sub_23F1D3808(*v0);
}

uint64_t sub_23F1D3884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1D3664(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1D38A8()
{
  sub_23F1F7788();
  return sub_23F2688B8();
}

uint64_t sub_23F1D38D0()
{
  sub_23F1F7788();
  return sub_23F2688C4();
}

uint64_t sub_23F1D38F8()
{
  sub_23F1F783C();
  return sub_23F2688B8();
}

uint64_t sub_23F1D3920()
{
  sub_23F1F783C();
  return sub_23F2688C4();
}

uint64_t sub_23F1D3948()
{
  sub_23F1F77C4();
  return sub_23F2688B8();
}

uint64_t sub_23F1D3970()
{
  sub_23F1F77C4();
  return sub_23F2688C4();
}

uint64_t sub_23F1D3998()
{
  sub_23F1F7800();
  return sub_23F2688B8();
}

uint64_t sub_23F1D39C0()
{
  sub_23F1F7800();
  return sub_23F2688C4();
}

uint64_t sub_23F1D39E8()
{
  sub_23F1F7878();
  return sub_23F2688B8();
}

uint64_t sub_23F1D3A10()
{
  sub_23F1F7878();
  return sub_23F2688C4();
}

void SystemPromptResolution.ResolutionInput.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_23F131874();
  sub_23F1AE598();
  sub_23F1217E8(&qword_256E04530);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F1A982C(v4, v22);
  sub_23F1217E8(&qword_256E04538);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F16BBFC(v6, v23);
  v29 = *(_QWORD *)(sub_23F1217E8(&qword_256E04540) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F24ED84(v8, v24);
  v27 = *(_QWORD *)(sub_23F1217E8(&qword_256E04548) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F16BA8C(v10, v25);
  sub_23F1217E8(&qword_256E04550);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F24F92C();
  v13 = *v0;
  v12 = v0[1];
  v14 = *((unsigned __int8 *)v0 + 16);
  v15 = v2;
  v17 = v16;
  sub_23F1A968C(v15);
  sub_23F1F7788();
  sub_23F1A9DA4();
  sub_23F180304();
  if (!v14)
  {
    sub_23F251ED4();
    sub_23F24FA1C();
    sub_23F1D4828();
    sub_23F1AE450();
    goto LABEL_5;
  }
  if (v14 == 1)
  {
    sub_23F251C18();
    sub_23F24FA1C();
    sub_23F1D47B0();
    sub_23F268750();
LABEL_5:
    v18 = sub_23F250390();
    goto LABEL_10;
  }
  if (v13 | v12)
  {
    sub_23F251FA0();
    v20 = v28;
    sub_23F24FA1C();
    v21 = v29;
  }
  else
  {
    sub_23F1F7878();
    v20 = v26;
    sub_23F24FA1C();
    v21 = v27;
  }
  v19 = *(void (**)(uint64_t))(v21 + 8);
  v18 = v20;
LABEL_10:
  v19(v18);
  sub_23F126038(v17, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F15E910();
  sub_23F1313FC();
}

void SystemPromptResolution.ResolutionInput.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_23F131874();
  sub_23F252208();
  sub_23F1217E8(&qword_256E04580);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F17FFE0(v3, v28);
  v4 = sub_23F1217E8(&qword_256E04588);
  sub_23F251010(v4);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F16BBFC(v6, v29);
  sub_23F1217E8(&qword_256E04590);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F24ED20(v8, v30);
  sub_23F1217E8(&qword_256E04598);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F15EB6C();
  sub_23F1217E8(&qword_256E045A0);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15E524();
  v11 = (_QWORD *)sub_23F250FE4();
  sub_23F24F270(v11);
  sub_23F1F7788();
  sub_23F2513C8();
  sub_23F24FFB4();
  if (!v0)
  {
    sub_23F25185C();
    sub_23F2520E8();
    if (v12)
    {
      sub_23F2513F0();
      v14 = *(unsigned __int8 *)(v13 + 32);
      v15 = sub_23F25081C();
      sub_23F15E2D0(v15, v16, v17, v18, v19, v20);
      v22 = v21;
      v24 = v23;
      sub_23F1318B8();
      if (v22 == v24 >> 1)
        __asm { BR              X9 }
    }
    sub_23F15EDB8();
    sub_23F131B30();
    sub_23F2508FC();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F24F960();
    *v1 = &type metadata for SystemPromptResolution.ResolutionInput;
    sub_23F268648();
    v25 = sub_23F24ECCC();
    sub_23F1A97D0(v25, *MEMORY[0x24BEE26D0]);
    sub_23F250144();
    sub_23F17FAB4();
    v26 = sub_23F2500D8();
    v27(v26);
  }
  sub_23F250388();
  sub_23F17FDF4();
  sub_23F1313FC();
}

void sub_23F1D4130()
{
  SystemPromptResolution.ResolutionInput.init(from:)();
}

void sub_23F1D4144()
{
  SystemPromptResolution.ResolutionInput.encode(to:)();
}

void SystemPromptResolution.UserAction.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;

  sub_23F125F84();
  sub_23F12611C();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for SystemPromptResolution.UserAction(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F15E50C();
  v2 = sub_23F250CFC();
  sub_23F1BE1A0(v2, v3, v4);
  sub_23F15EB40();
  v5 = (char *)sub_23F1D421C + 4 * byte_23F278DD2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F1D421C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F24FCD0();
  sub_23F26851C();
  sub_23F250FD0();
  sub_23F250FC0();
  *(_QWORD *)(v0 - 64) = v2;
  *(_QWORD *)(v0 - 56) = v1;
  sub_23F2681BC();
  sub_23F1318B8();
  sub_23F24F7BC();
  sub_23F250174();
  sub_23F131ABC();
}

void sub_23F1D43FC()
{
  JUMPOUT(0x23F1D43ECLL);
}

void static SystemPromptResolution.UserAction.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[3];
  uint64_t v19;

  sub_23F125F3C();
  v19 = v1;
  v2 = sub_23F125F84();
  v18[1] = *(_QWORD *)(v2 - 8);
  v18[2] = v2;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  v18[0] = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F1A9220();
  type metadata accessor for SystemPromptResolution.UserAction(v5);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1A9470();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F24F874();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F24FB6C();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F24F388();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F250FF0();
  sub_23F1217E8(&qword_256E045A8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F24F238();
  v14 = v0 + v13;
  v15 = sub_23F251450();
  sub_23F1BE1A0(v15, v16, type metadata accessor for SystemPromptResolution.UserAction);
  sub_23F1BE1A0(v19, v14, type metadata accessor for SystemPromptResolution.UserAction);
  sub_23F1317E0();
  v17 = (char *)sub_23F1D456C + 4 * byte_23F278DDA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F1D456C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F2508AC(v2, a2, type metadata accessor for SystemPromptResolution.UserAction);
  v3 = sub_23F16BAEC();
  if ((_DWORD)v3)
    sub_23F24F5EC(v3, &qword_256E045A8);
  else
    sub_23F24F318(v3, type metadata accessor for SystemPromptResolution.UserAction);
  sub_23F250F0C();
  sub_23F125EFC();
}

unint64_t sub_23F1D46FC()
{
  unint64_t result;

  result = qword_256E03428;
  if (!qword_256E03428)
  {
    result = MEMORY[0x242667160](&unk_23F2908F4, &type metadata for MessagePayload.RequestContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03428);
  }
  return result;
}

unint64_t sub_23F1D4738()
{
  unint64_t result;

  result = qword_256E03430;
  if (!qword_256E03430)
  {
    result = MEMORY[0x242667160](&unk_23F2908A4, &type metadata for MessagePayload.RequestContent.PromptResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03430);
  }
  return result;
}

unint64_t sub_23F1D4774()
{
  unint64_t result;

  result = qword_256E03440;
  if (!qword_256E03440)
  {
    result = MEMORY[0x242667160](&unk_23F290854, &type metadata for MessagePayload.RequestContent.SpeechCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03440);
  }
  return result;
}

unint64_t sub_23F1D47B0()
{
  unint64_t result;

  result = qword_256E03448;
  if (!qword_256E03448)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestContent.SpeechContent, &type metadata for MessagePayload.RequestContent.SpeechContent);
    atomic_store(result, (unint64_t *)&qword_256E03448);
  }
  return result;
}

unint64_t sub_23F1D47EC()
{
  unint64_t result;

  result = qword_256E03450;
  if (!qword_256E03450)
  {
    result = MEMORY[0x242667160](&unk_23F290804, &type metadata for MessagePayload.RequestContent.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03450);
  }
  return result;
}

unint64_t sub_23F1D4828()
{
  unint64_t result;

  result = qword_256E03458;
  if (!qword_256E03458)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestContent.TextContent, &type metadata for MessagePayload.RequestContent.TextContent);
    atomic_store(result, (unint64_t *)&qword_256E03458);
  }
  return result;
}

unint64_t sub_23F1D4864()
{
  unint64_t result;

  result = qword_256E03460;
  if (!qword_256E03460)
  {
    result = MEMORY[0x242667160](&unk_23F2907B4, &type metadata for MessagePayload.RequestContent.StopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03460);
  }
  return result;
}

unint64_t sub_23F1D48A0()
{
  unint64_t result;

  result = qword_256E03468;
  if (!qword_256E03468)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestContent.StopContent, &type metadata for MessagePayload.RequestContent.StopContent);
    atomic_store(result, (unint64_t *)&qword_256E03468);
  }
  return result;
}

uint64_t sub_23F1D48E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6F436E6F69746361 && a2 == 0xEF64656D7269666ELL;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E55656369766564 && a2 == 0xEE0064656B636F6CLL;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x800000023F294A20 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x800000023F294A40 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x800000023F294A60 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023F294A80 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x800000023F294AA0 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0x61436E6F69746361 && a2 == 0xEE0064656C65636ELL)
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 7;
      else
        return 8;
    }
  }
}

uint64_t sub_23F1D4C5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1D4C9C + 4 * byte_23F278DE2[a1]))(0x6F436E6F69746361, 0xEF64656D7269666ELL);
}

uint64_t sub_23F1D4C9C()
{
  return 0x6E55656369766564;
}

unint64_t sub_23F1D4CC0()
{
  return 0xD000000000000016;
}

uint64_t sub_23F1D4D48()
{
  return 0x61436E6F69746361;
}

uint64_t sub_23F1D4D6C()
{
  sub_23F1F78F0();
  return sub_23F2688B8();
}

uint64_t sub_23F1D4D94()
{
  sub_23F1F78F0();
  return sub_23F2688C4();
}

uint64_t sub_23F1D4DBC()
{
  sub_23F1F7B0C();
  return sub_23F2688B8();
}

uint64_t sub_23F1D4DE4()
{
  sub_23F1F7B0C();
  return sub_23F2688C4();
}

uint64_t sub_23F1D4E0C()
{
  unsigned __int8 *v0;

  return sub_23F1D4C5C(*v0);
}

uint64_t sub_23F1D4E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1D48E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1D4E38()
{
  sub_23F1F78B4();
  return sub_23F2688B8();
}

uint64_t sub_23F1D4E60()
{
  sub_23F1F78B4();
  return sub_23F2688C4();
}

uint64_t sub_23F1D4E88()
{
  sub_23F1F7AD0();
  return sub_23F2688B8();
}

uint64_t sub_23F1D4EB0()
{
  sub_23F1F7AD0();
  return sub_23F2688C4();
}

uint64_t sub_23F1D4ED8()
{
  sub_23F1F79E0();
  return sub_23F2688B8();
}

uint64_t sub_23F1D4F00()
{
  sub_23F1F79E0();
  return sub_23F2688C4();
}

uint64_t sub_23F1D4F28()
{
  sub_23F1F7A58();
  return sub_23F2688B8();
}

uint64_t sub_23F1D4F50()
{
  sub_23F1F7A58();
  return sub_23F2688C4();
}

uint64_t sub_23F1D4F78()
{
  sub_23F1F7A1C();
  return sub_23F2688B8();
}

uint64_t sub_23F1D4FA0()
{
  sub_23F1F7A1C();
  return sub_23F2688C4();
}

uint64_t sub_23F1D4FC8()
{
  sub_23F1F7A94();
  return sub_23F2688B8();
}

uint64_t sub_23F1D4FF0()
{
  sub_23F1F7A94();
  return sub_23F2688C4();
}

uint64_t sub_23F1D5018()
{
  sub_23F1F7968();
  return sub_23F2688B8();
}

uint64_t sub_23F1D5040()
{
  sub_23F1F7968();
  return sub_23F2688C4();
}

void SystemPromptResolution.UserAction.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52[11];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  sub_23F131874();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v25 = sub_23F1217E8(&qword_256E045B0);
  v61 = *(_QWORD *)(v25 - 8);
  v62 = v25;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F16BC34(v27, v52[0]);
  v28 = sub_23F1217E8(&qword_256E045B8);
  v59 = *(_QWORD *)(v28 - 8);
  v60 = v28;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F16BC18(v30, v52[0]);
  v31 = sub_23F1217E8(&qword_256E045C0);
  v57 = *(_QWORD *)(v31 - 8);
  v58 = v31;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F15E9D0(v33, v52[0]);
  v34 = sub_23F1217E8(&qword_256E045C8);
  v55 = *(_QWORD *)(v34 - 8);
  v56 = v34;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F17FFFC(v36, v52[0]);
  v53 = sub_23F1217E8(&qword_256E045D0);
  v52[8] = *(_QWORD *)(v53 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F17FBBC((uint64_t)v52 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = sub_23F1217E8(&qword_256E045D8);
  v52[10] = *(_QWORD *)(v54 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F18016C((uint64_t)v52 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = sub_23F268078();
  sub_23F251430(v41);
  v52[6] = v42;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F17FBBC((uint64_t)v52 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45 = sub_23F1217E8(&qword_256E045E0);
  sub_23F17FB48(v45, (uint64_t)&a12);
  v52[2] = v46;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F15E524();
  v52[1] = *(_QWORD *)(sub_23F1217E8(&qword_256E045E8) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F250524();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F1319C8();
  v64 = sub_23F1217E8(&qword_256E045F0);
  v63 = *(_QWORD *)(v64 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F1316E4();
  sub_23F24FF3C(v24);
  sub_23F1F78B4();
  sub_23F251E60();
  sub_23F2688A0();
  sub_23F1BE1A0(v65, v20, type metadata accessor for SystemPromptResolution.UserAction);
  v51 = (char *)sub_23F1D52F4 + 4 * byte_23F278DEA[sub_23F252270()];
  __asm { BR              X10 }
}

void sub_23F1D52F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 89) = 0;
  sub_23F1F7B0C();
  sub_23F15E6E8();
  sub_23F26872C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 328) + 8))(v1, v0);
  sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void sub_23F1D55AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_23F25205C();
  v1 = *(_QWORD *)(v0 - 128);
  sub_23F251A7C();
  v2 = sub_23F251230();
  sub_23F24F2C8(v2, v3);
  sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 136) + 8));
  JUMPOUT(0x23F1D55A0);
}

void SystemPromptResolution.UserAction.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78[12];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;

  sub_23F131874();
  a19 = v26;
  a20 = v27;
  v29 = v28;
  v92 = v30;
  v88 = sub_23F1217E8(&qword_256E04650);
  v91 = *(_QWORD *)(v88 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F16BC18(v32, v78[0]);
  v87 = sub_23F1217E8(&qword_256E04658);
  v90 = *(_QWORD *)(v87 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F1A94D4(v34, v78[0]);
  v86 = sub_23F1217E8(&qword_256E04660);
  v85 = *(_QWORD *)(v86 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F16BA8C(v36, v78[0]);
  v84 = sub_23F1217E8(&qword_256E04668);
  v83 = *(_QWORD *)(v84 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F24F5B4(v38, v78[0]);
  v82 = sub_23F1217E8(&qword_256E04670);
  v80 = *(_QWORD *)(v82 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F15E9B4(v40, v78[0]);
  v41 = sub_23F1217E8(&qword_256E04678);
  sub_23F17FB48(v41, (uint64_t)&a15);
  v81 = v42;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F15E9D0(v44, v78[0]);
  v89 = sub_23F1217E8(&qword_256E04680);
  v78[11] = *(_QWORD *)(v89 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F17FFFC(v46, v78[0]);
  v79 = sub_23F1217E8(&qword_256E04688);
  v78[10] = *(_QWORD *)(v79 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F24F21C(v48, v78[0]);
  v95 = sub_23F1217E8(&qword_256E04690);
  v94 = *(_QWORD *)(v95 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v49);
  v93 = sub_23F250524();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F14EFA0();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F24F388();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F24F358();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v57);
  v59 = (char *)v78 - v58;
  v96 = v29;
  sub_23F18AA80(v29);
  sub_23F1F78B4();
  sub_23F1A9DA4();
  sub_23F1A9814();
  if (!v20)
  {
    v78[2] = v24;
    v78[3] = v23;
    v78[4] = v22;
    v78[5] = v21;
    v78[6] = (uint64_t)v59;
    v60 = v95;
    sub_23F2686D8();
    sub_23F2520E8();
    if (v61)
    {
      v97 = v25;
      v78[1] = 0;
      sub_23F2513F0();
      v63 = *(unsigned __int8 *)(v62 + 32);
      v64 = sub_23F25081C();
      sub_23F15E2D0(v64, v65, v66, v67, v68, v69);
      v71 = v70;
      v73 = v72;
      sub_23F1318B8();
      if (v71 == v73 >> 1)
        __asm { BR              X9 }
      v60 = v95;
      v25 = v97;
    }
    v74 = v93;
    sub_23F15EDB8();
    sub_23F131B30();
    v76 = v75;
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F24F960();
    *v76 = v74;
    sub_23F268648();
    v77 = sub_23F24ECCC();
    sub_23F1A97D0(v77, *MEMORY[0x24BEE26D0]);
    sub_23F251E10();
    sub_23F17FAB4();
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v25, v60);
  }
  sub_23F1A9970();
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1D5A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F25205C();
  sub_23F24EE28();
  if (!v1)
  {
    sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 328) + 8));
    sub_23F24F164();
    sub_23F126038(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8));
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F1D5EC4);
  }
  sub_23F24F164();
  sub_23F17FE50();
  JUMPOUT(0x23F1D5A20);
}

void sub_23F1D5A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F251F28();
  sub_23F24EE28();
  if (!v0)
  {
    sub_23F125F84();
    sub_23F12E488((uint64_t)&qword_256DFE5B8);
    sub_23F250EAC();
    sub_23F17FE68();
    v2 = *(_QWORD *)(v1 - 136);
    sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 304) + 8));
    sub_23F24F164();
    sub_23F24F710(*(uint64_t (**)(_QWORD, _QWORD))(v2 + 8));
    sub_23F251D1C();
    JUMPOUT(0x23F1D5EB8);
  }
  sub_23F24F164();
  sub_23F17FE50();
  JUMPOUT(0x23F1D5A20);
}

void sub_23F1D5B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F251C48();
  sub_23F24EE28();
  if (!v0)
  {
    v3 = sub_23F250BEC();
    sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 312) + 8));
    sub_23F24F164();
    sub_23F24F710(*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 136) + 8));
    sub_23F250700(v3 & 1);
    swift_storeEnumTagMultiPayload();
    v4 = v3;
    v5 = *(_QWORD *)(v2 - 368);
    sub_23F2504D0(v4, v6, type metadata accessor for SystemPromptResolution.UserAction);
    sub_23F1BE0F4(v5, v1, type metadata accessor for SystemPromptResolution.UserAction);
    JUMPOUT(0x23F1D5A24);
  }
  sub_23F24F164();
  sub_23F17FE50();
  JUMPOUT(0x23F1D5A20);
}

void sub_23F1D5B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F251BDC();
  v3 = *(_QWORD *)(v2 - 200);
  sub_23F250FD8();
  sub_23F26863C();
  if (v0)
  {
    sub_23F24F164();
    sub_23F250174();
    JUMPOUT(0x23F1D5A20);
  }
  v4 = sub_23F252408();
  sub_23F126038(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 280) + 8));
  sub_23F24F164();
  sub_23F24F710(*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 136) + 8));
  v5 = *(uint64_t **)(v2 - 384);
  *v5 = v4;
  swift_storeEnumTagMultiPayload();
  v6 = (uint64_t)v5;
  v7 = *(_QWORD *)(v2 - 368);
  sub_23F2504D0(v6, v8, type metadata accessor for SystemPromptResolution.UserAction);
  sub_23F1BE0F4(v7, v1, type metadata accessor for SystemPromptResolution.UserAction);
  JUMPOUT(0x23F1D5A24);
}

void sub_23F1D5BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F251B88();
  sub_23F24EE28();
  if (!v0)
  {
    v2 = sub_23F252408();
    v3 = *(_QWORD *)(v1 - 136);
    v4 = v2;
    sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 264) + 8));
    sub_23F24F164();
    sub_23F24F710(*(uint64_t (**)(_QWORD, _QWORD))(v3 + 8));
    **(_QWORD **)(v1 - 360) = v4;
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F1D5EB8);
  }
  sub_23F24F164();
  sub_23F17FE50();
  JUMPOUT(0x23F1D5A20);
}

void sub_23F1D5C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F251B10();
  sub_23F24EE28();
  if (!v0)
  {
    sub_23F1F7B84();
    sub_23F17FE68();
    v4 = *(_QWORD *)(v3 - 136);
    sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F24F164();
    sub_23F24F710(*(uint64_t (**)(_QWORD, _QWORD))(v4 + 8));
    sub_23F250700(*(_BYTE *)(v3 - 67));
    swift_storeEnumTagMultiPayload();
    v5 = v4;
    v6 = *(_QWORD *)(v3 - 368);
    sub_23F2504D0(v5, v7, type metadata accessor for SystemPromptResolution.UserAction);
    sub_23F1BE0F4(v6, v1, type metadata accessor for SystemPromptResolution.UserAction);
    JUMPOUT(0x23F1D5A24);
  }
  sub_23F24F164();
  sub_23F17FE50();
  JUMPOUT(0x23F1D5A20);
}

void sub_23F1D5C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F2519C8();
  sub_23F24EE28();
  if (v0)
    JUMPOUT(0x23F1D5C90);
  sub_23F1F7B48();
  sub_23F17FE68();
  v3 = *(_QWORD *)(v2 - 136);
  sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F24F164();
  sub_23F24F710(*(uint64_t (**)(_QWORD, _QWORD))(v3 + 8));
  JUMPOUT(0x23F1D5EA8);
}

#error "23F1D5EE4: call analysis failed (funcsize=5)"

#error "23F1D5EF8: call analysis failed (funcsize=5)"

uint64_t SystemPromptResolution.RequirementResolution.isRequirementSatisfied.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t SystemPromptResolution.RequirementResolution.isRequirementSatisfied.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*SystemPromptResolution.RequirementResolution.isRequirementSatisfied.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::SystemPromptResolution::RequirementResolution __swiftcall SystemPromptResolution.RequirementResolution.init(isRequirementSatisfied:)(IntelligenceFlow::SystemPromptResolution::RequirementResolution isRequirementSatisfied)
{
  IntelligenceFlow::SystemPromptResolution::RequirementResolution *v1;

  v1->isRequirementSatisfied = isRequirementSatisfied.isRequirementSatisfied;
  return isRequirementSatisfied;
}

void SystemPromptResolution.RequirementResolution.description.getter()
{
  sub_23F26851C();
  swift_bridgeObjectRelease();
  sub_23F250FC0();
  sub_23F2681BC();
  sub_23F1318B8();
  sub_23F24F7BC();
  sub_23F1A9BE8();
}

uint64_t sub_23F1D5FC4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x800000023F294AC0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_23F1D6048()
{
  return 0xD000000000000016;
}

uint64_t sub_23F1D6068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1D5FC4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1D6090()
{
  sub_23F1F7BC0();
  return sub_23F2688B8();
}

uint64_t sub_23F1D60B8()
{
  sub_23F1F7BC0();
  return sub_23F2688C4();
}

void SystemPromptResolution.RequirementResolution.encode(to:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F131874();
  sub_23F2519E8();
  sub_23F1217E8(&qword_256E046A8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F126058();
  sub_23F12545C(v0, v0[3]);
  sub_23F1F7BC0();
  sub_23F24FC04();
  sub_23F26872C();
  sub_23F17FF08(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void SystemPromptResolution.RequirementResolution.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;

  sub_23F131874();
  a19 = v24;
  a20 = v25;
  sub_23F24F910();
  sub_23F1217E8(&qword_256E046B8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1F7BC0();
  sub_23F15E564();
  if (!v22)
  {
    sub_23F250EDC();
    v29 = sub_23F268690();
    sub_23F17FF08((uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    *v21 = v29 & 1;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v20);
  sub_23F1A9634();
  sub_23F1313FC();
}

#error "23F1D6238: call analysis failed (funcsize=5)"

void sub_23F1D6244()
{
  SystemPromptResolution.RequirementResolution.encode(to:)();
}

uint64_t sub_23F1D6264()
{
  sub_23F1F7BFC();
  return sub_23F2688B8();
}

uint64_t sub_23F1D628C()
{
  sub_23F1F7BFC();
  return sub_23F2688C4();
}

void SystemPromptResolution.ActionCancellation.encode(to:)()
{
  sub_23F1D62E0();
}

void sub_23F1D62E0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  void (*v3)(void);
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;

  sub_23F131874();
  v3 = v2;
  v5 = (_QWORD *)v4;
  sub_23F1A9D7C(v4, v6);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F1316E4();
  sub_23F12545C(v5, v5[3]);
  v3();
  sub_23F2688A0();
  sub_23F15E444(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F15E910();
  sub_23F1313FC();
}

void SystemPromptResolution.ActionCancellation.init(from:)(uint64_t a1)
{
  sub_23F24F884(a1);
  sub_23F24FF94();
}

void sub_23F1D6388()
{
  SystemPromptResolution.ActionCancellation.encode(to:)();
}

void SystemPromptResolution.stepId.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;

  sub_23F18039C();
  v2 = sub_23F24FBA0();
  sub_23F250774(v2);
  v3 = sub_23F250D44();
  v4 = sub_23F24FAD4(v3);
  *(_QWORD *)(v1 + 8) = v4;
  v5 = sub_23F131B8C();
  *(_QWORD *)(v1 + 32) = sub_23F24F2AC(v5);
  v6 = sub_23F25016C();
  sub_23F24F514((uint64_t)v6);
  sub_23F1263A4((uint64_t)v4, 1, v0);
  if (v7)
  {
    v8 = sub_23F250F7C();
    sub_23F24F5EC(v8, &qword_256DFEB98);
  }
  else
  {
    sub_23F24F6E8();
  }
  sub_23F131680();
}

void _s16IntelligenceFlow22SystemPromptResolutionV6stepId10Foundation4UUIDVvg_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F1752C4(v2, (uint64_t)v6, &qword_256DFEB98);
  v7 = sub_23F131B8C();
  sub_23F1263A4((uint64_t)v6, 1, v7);
  if (v8)
  {
    v9 = sub_23F267D78();
    sub_23F250CC8(v9, &qword_256DFEB98);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, v6, v7);
  }
  sub_23F12612C();
}

uint64_t _s16IntelligenceFlow22SystemPromptResolutionV6stepId10Foundation4UUIDVvs_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_23F250CC8(a1, &qword_256DFEB98);
  v3 = sub_23F131B8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v1, a1, v3);
  return sub_23F126098(v1, 0, 1, v3);
}

void SystemPromptResolution.eventId.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;

  sub_23F18039C();
  v2 = sub_23F24FBA0();
  sub_23F250774(v2);
  v3 = sub_23F250D44();
  v4 = sub_23F24FAD4(v3);
  *(_QWORD *)(v1 + 8) = v4;
  v5 = sub_23F131B8C();
  *(_QWORD *)(v1 + 32) = sub_23F24F2AC(v5);
  v6 = sub_23F25016C();
  sub_23F24F514((uint64_t)v6);
  sub_23F1263A4((uint64_t)v4, 1, v0);
  if (v7)
  {
    v8 = sub_23F250F7C();
    sub_23F24F5EC(v8, &qword_256DFEB98);
  }
  else
  {
    sub_23F24F6E8();
  }
  sub_23F131680();
}

void sub_23F1D65D0()
{
  uint64_t **v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_23F18039C();
  v1 = *v0;
  v2 = (void *)(*v0)[4];
  v3 = (*v0)[5];
  v4 = (*v0)[2];
  v5 = (*v0)[3];
  v6 = **v0;
  if ((v7 & 1) != 0)
  {
    sub_23F126250((*v0)[4], v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    sub_23F125E40(v6, &qword_256DFEB98);
    sub_23F126250(v6, (uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    sub_23F250D28();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  else
  {
    sub_23F125E40(**v0, &qword_256DFEB98);
    sub_23F126250(v6, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    sub_23F250D28();
  }
  sub_23F2515E0();
  free(v2);
  sub_23F252260();
  sub_23F250130(v1);
}

uint64_t sub_23F1D6680(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023F293B40 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x6974634172657375 && a2 == 0xEA00000000006E6FLL;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x7475706E69 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v9 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_23F1D68C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1D6908 + 4 * byte_23F278DFA[a1]))(0x76456E6F69746361, 0xED00006449746E65);
}

unint64_t sub_23F1D6908()
{
  return 0xD000000000000015;
}

uint64_t sub_23F1D6924()
{
  return 0x6974634172657375;
}

uint64_t sub_23F1D6940()
{
  return 0x6E656D6574617473;
}

uint64_t sub_23F1D6960()
{
  return 0x7475706E69;
}

uint64_t sub_23F1D6974()
{
  unsigned __int8 *v0;

  return sub_23F1D68C8(*v0);
}

uint64_t sub_23F1D697C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1D6680(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1D69A0()
{
  sub_23F1F7C38();
  return sub_23F2688B8();
}

uint64_t sub_23F1D69C8()
{
  sub_23F1F7C38();
  return sub_23F2688C4();
}

void SystemPromptResolution.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BYTE v10[24];

  sub_23F131874();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E046D0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F1F7C38();
  sub_23F18A998();
  v10[0] = 0;
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&qword_256DFEF10);
  sub_23F17FAD8();
  if (!v0)
  {
    v6 = sub_23F250E10();
    v10[0] = 1;
    sub_23F17F99C();
    sub_23F251F10();
    type metadata accessor for SystemPromptResolution.UserAction(0);
    sub_23F12E488((uint64_t)&unk_256E046E0);
    sub_23F25207C();
    sub_23F17F99C();
    v7 = v1 + *(int *)(v6 + 28);
    *(_DWORD *)v10 = *(_DWORD *)v7;
    *(_OWORD *)&v10[8] = *(_OWORD *)(v7 + 8);
    sub_23F250B18();
    sub_23F163BDC();
    sub_23F17F99C();
    v8 = v1 + *(int *)(v6 + 32);
    v9 = *(_BYTE *)(v8 + 16);
    *(_OWORD *)v10 = *(_OWORD *)v8;
    v10[16] = v9;
    sub_23F17FF24();
    sub_23F1F7C74();
    sub_23F17F99C();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F17FDF4();
  sub_23F1313FC();
}

void SystemPromptResolution.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;

  sub_23F131874();
  v42 = v0;
  v5 = v4;
  v33 = v6;
  v34 = type metadata accessor for SystemPromptResolution.UserAction(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  v35 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F131B8C();
  v37 = *(_QWORD *)(v9 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15EB6C();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F16BC34(v12, v32);
  v38 = sub_23F1217E8(&qword_256E046F0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F17FFA8();
  v15 = type metadata accessor for SystemPromptResolution(v14);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F1319C8();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 1, 1, v9);
  v40 = v15;
  v41 = v1;
  v17 = v1 + *(int *)(v15 + 32);
  *(_QWORD *)v17 = 0;
  *(_QWORD *)(v17 + 8) = 0;
  *(_BYTE *)(v17 + 16) = 2;
  v19 = v5[3];
  v18 = v5[4];
  v39 = v5;
  sub_23F1A968C(v5);
  sub_23F1F7C38();
  sub_23F251268();
  sub_23F250614();
  if (v0)
  {
    v22 = sub_23F251A40();
    v23 = v41;
    v24 = _s16IntelligenceFlow17AnySessionMessageVwxx_0(v22);
    sub_23F2522A8(v24, &qword_256DFEB98);
    if ((_DWORD)v19)
    {
      sub_23F15E444(v23 + *(int *)(v2 + 20), *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
      if (!(_DWORD)v5)
      {
LABEL_5:
        if (!(_DWORD)v18)
        {
LABEL_7:
          sub_23F25172C();
          goto LABEL_8;
        }
LABEL_6:
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    else if (!(_DWORD)v5)
    {
      goto LABEL_5;
    }
    sub_23F1BE0BC(v23 + *(int *)(v2 + 24), type metadata accessor for SystemPromptResolution.UserAction);
    if (!(_DWORD)v18)
      goto LABEL_7;
    goto LABEL_6;
  }
  v42 = v3;
  LOBYTE(v43) = 0;
  sub_23F12E488((uint64_t)&qword_256DFEF20);
  v20 = v36;
  sub_23F24F908();
  v21 = v9;
  v25 = v41;
  sub_23F1F86F4(v20, v41, &qword_256DFEB98);
  sub_23F2504A8();
  v26 = v2;
  sub_23F17FE68();
  v27 = v40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v25 + *(int *)(v40 + 20), v26, v21);
  sub_23F2512C8();
  sub_23F12E488((uint64_t)&unk_256E046F8);
  sub_23F2507AC();
  v28 = (uint64_t)v35;
  sub_23F17FE68();
  sub_23F1BE0F4(v28, v25 + *(int *)(v27 + 24), type metadata accessor for SystemPromptResolution.UserAction);
  sub_23F250AEC(3);
  sub_23F17FE68();
  v29 = v25 + *(int *)(v27 + 28);
  *(_DWORD *)v29 = v43;
  *(_OWORD *)(v29 + 8) = v44;
  sub_23F17FF24();
  sub_23F1F7CB0();
  sub_23F17FE68();
  sub_23F24F4B4(v42);
  v30 = v43;
  v31 = v44;
  LOBYTE(v28) = BYTE8(v44);
  sub_23F25172C();
  *(_QWORD *)v17 = v30;
  *(_QWORD *)(v17 + 8) = v31;
  *(_BYTE *)(v17 + 16) = v28;
  sub_23F2507E4(v25, v33);
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v39);
  sub_23F24F0CC(v25);
LABEL_8:
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1D6FC4()
{
  SystemPromptResolution.init(from:)();
}

void sub_23F1D6FD8()
{
  SystemPromptResolution.encode(to:)();
}

void ActionResponse.actionEventId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F250D08();
  sub_23F1752C4(v0, v1, &qword_256DFEB98);
}

void ActionResponse.actionEventId.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F1F86F4(a1, v1, &qword_256DFEB98);
}

uint64_t (*ActionResponse.actionEventId.modify())()
{
  return nullsub_1;
}

void ActionResponse.exprId.getter()
{
  type metadata accessor for ActionResponse(0);
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ActionResponse.exprId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(sub_23F251660() + 20));
  sub_23F18ADB4();
  *v3 = v2;
  v3[1] = v0;
  sub_23F12612C();
}

uint64_t (*ActionResponse.exprId.modify())()
{
  type metadata accessor for ActionResponse(0);
  sub_23F180384();
  return nullsub_1;
}

void ActionResponse.toolId.getter()
{
  sub_23F1D70D0(type metadata accessor for ActionResponse);
}

void sub_23F1D70D0(uint64_t (*a1)(_QWORD))
{
  sub_23F17FDCC(a1);
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ActionResponse.toolId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F1D8E28(a1, a2, type metadata accessor for ActionResponse);
}

uint64_t (*ActionResponse.toolId.modify())()
{
  sub_23F251628();
  sub_23F18030C();
  return nullsub_1;
}

void ActionResponse.outcome.getter()
{
  sub_23F1D8E90(type metadata accessor for ActionResponse);
}

void ActionResponse.outcome.setter(uint64_t a1)
{
  sub_23F1D8EC8(a1, type metadata accessor for ActionResponse);
}

uint64_t (*ActionResponse.outcome.modify())()
{
  sub_23F251628();
  sub_23F1A9AFC();
  return nullsub_1;
}

void ActionResponse.response.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  const void *v3;
  _QWORD v4[24];

  v1 = sub_23F252178();
  sub_23F24F57C(v4, (const void *)(v0 + *(int *)(v1 + 32)));
  v2 = (void *)sub_23F1317E0();
  sub_23F24F57C(v2, v3);
  sub_23F15AD38(v4);
  sub_23F250C90();
}

void ActionResponse.response.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  const void *v4;
  _QWORD v5[24];

  v1 = sub_23F2507D8();
  v2 = type metadata accessor for ActionResponse(v1);
  sub_23F24F57C(v5, (const void *)(v0 + *(int *)(v2 + 32)));
  sub_23F15AB50(v5);
  v3 = (void *)sub_23F17FE50();
  sub_23F24F57C(v3, v4);
  sub_23F250C90();
}

uint64_t (*ActionResponse.response.modify())()
{
  type metadata accessor for ActionResponse(0);
  sub_23F2503E0();
  return nullsub_1;
}

uint64_t ActionResponse.responseOutput.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v0 = sub_23F252178();
  v1 = sub_23F25005C(*(int *)(v0 + 36));
  return sub_23F250C9C(v1, v2, v3, v4, v5, v6, v7);
}

void ActionResponse.responseOutput.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __int128 v11;
  __int128 v12;

  v0 = sub_23F25068C();
  v1 = type metadata accessor for ActionResponse(v0);
  v2 = sub_23F2506D0(*(int *)(v1 + 36));
  sub_23F250AC4(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  sub_23F15EA9C();
}

uint64_t (*ActionResponse.responseOutput.modify())()
{
  type metadata accessor for ActionResponse(0);
  sub_23F25118C();
  return nullsub_1;
}

void ActionResponse.clientQueryId.getter()
{
  type metadata accessor for ActionResponse(0);
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ActionResponse.clientQueryId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(sub_23F251660() + 40));
  sub_23F18ADB4();
  *v3 = v2;
  v3[1] = v0;
  sub_23F12612C();
}

uint64_t (*ActionResponse.clientQueryId.modify())()
{
  type metadata accessor for ActionResponse(0);
  return nullsub_1;
}

void ActionResponse.init(actionEventId:exprId:toolId:outcome:responseOutput:clientQueryId:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, __int128 *a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  int *v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _WORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;

  v35 = *a6;
  v33 = *((unsigned __int8 *)a6 + 24);
  v34 = *((_QWORD *)a6 + 2);
  v30 = *((_QWORD *)a6 + 5);
  v31 = *((_QWORD *)a6 + 4);
  v32 = *((_QWORD *)a6 + 7);
  v29 = *((unsigned __int16 *)a6 + 24);
  v15 = sub_23F131B8C();
  v18 = sub_23F2510D4(a8, v16, v17, v15);
  v20 = (_QWORD *)(a8 + v19);
  *v20 = 0;
  v20[1] = 0;
  v21 = (_WORD *)(a8 + *(int *)(v18 + 32));
  sub_23F15EBE8(v21);
  v21[92] = 514;
  v22 = a8 + v9[9];
  *(_OWORD *)(v22 + 32) = 0u;
  *(_OWORD *)(v22 + 48) = 0u;
  *(_OWORD *)v22 = 0u;
  *(_OWORD *)(v22 + 16) = 0u;
  v23 = (_QWORD *)(a8 + v9[10]);
  *v23 = 0;
  v23[1] = 0;
  v24 = sub_23F2504F0();
  sub_23F1F86F4(v24, v25, v26);
  sub_23F18ADB4();
  *v20 = a1;
  v20[1] = a2;
  v27 = (_QWORD *)(a8 + v9[6]);
  *v27 = a3;
  v27[1] = a4;
  sub_23F1BE0F4(a5, a8 + v9[7], type metadata accessor for ActionOutcome);
  sub_23F1F6000(*(_QWORD *)v22, *(_QWORD *)(v22 + 8), *(_QWORD *)(v22 + 16), *(_QWORD *)(v22 + 24), *(_QWORD *)(v22 + 32), *(_QWORD *)(v22 + 40), *(_QWORD *)(v22 + 48));
  *(_OWORD *)v22 = v35;
  *(_QWORD *)(v22 + 16) = v34;
  *(_QWORD *)(v22 + 24) = v33;
  *(_QWORD *)(v22 + 32) = v31;
  *(_QWORD *)(v22 + 40) = v30;
  *(_QWORD *)(v22 + 48) = v29;
  *(_QWORD *)(v22 + 56) = v32;
  sub_23F24FF64();
  *v23 = a7;
  v23[1] = a9;
  sub_23F250278();
}

__n128 ActionResponse.init(actionEventId:exprId:toolId:outcome:responseOutput:)()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  sub_23F250658();
  v14 = *v2;
  v12 = *((unsigned __int8 *)v2 + 24);
  v13 = *((_QWORD *)v2 + 2);
  v9 = *((_QWORD *)v2 + 5);
  v10 = *((_QWORD *)v2 + 4);
  v11 = *((_QWORD *)v2 + 7);
  v8 = *((unsigned __int16 *)v2 + 24);
  v3 = sub_23F131B8C();
  sub_23F24F630(v3);
  sub_23F24FD74();
  sub_23F2508E4(v0, v4, &qword_256DFEB98);
  sub_23F250F34();
  sub_23F250A74();
  sub_23F2501E4(v5, v6, type metadata accessor for ActionOutcome);
  sub_23F24FD4C();
  *(_OWORD *)v1 = v14;
  *(_QWORD *)(v1 + 16) = v13;
  *(_QWORD *)(v1 + 24) = v12;
  *(_QWORD *)(v1 + 32) = v10;
  *(_QWORD *)(v1 + 40) = v9;
  *(_QWORD *)(v1 + 48) = v8;
  *(_QWORD *)(v1 + 56) = v11;
  sub_23F1317C4();
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  sub_23F250658();
  v11 = v2[1];
  v12 = *v2;
  v10 = v2[2];
  v8 = *((_QWORD *)v2 + 7);
  v9 = *((_QWORD *)v2 + 6);
  v3 = sub_23F131B8C();
  sub_23F24F630(v3);
  sub_23F24FD74();
  sub_23F2508E4(v0, v4, &qword_256DFEB98);
  sub_23F250F34();
  sub_23F250A74();
  sub_23F2501E4(v5, v6, type metadata accessor for ActionOutcome);
  sub_23F24FD4C();
  *(_OWORD *)v1 = v12;
  *(_OWORD *)(v1 + 16) = v11;
  *(_OWORD *)(v1 + 32) = v10;
  *(_QWORD *)(v1 + 48) = v9;
  *(_QWORD *)(v1 + 56) = v8;
  sub_23F1317C4();
  return result;
}

void *ActionResponse.init(actionEventId:exprId:toolId:outcome:response:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _WORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _BYTE v20[192];
  _QWORD v21[25];

  sub_23F250B58();
  sub_23F24F57C(v20, v7);
  v8 = sub_23F131B8C();
  v11 = sub_23F2510D4(v2, v9, v10, v8);
  v13 = (_QWORD *)(v2 + v12);
  *v13 = 0;
  v13[1] = 0;
  v14 = (_WORD *)(v2 + *(int *)(v11 + 32));
  sub_23F15EBE8(v14);
  v14[92] = 514;
  v15 = (_OWORD *)(v2 + v6[9]);
  v15[2] = 0u;
  v15[3] = 0u;
  *v15 = 0u;
  v15[1] = 0u;
  sub_23F2506BC(v6[10]);
  sub_23F2508E4(v5, v16, &qword_256DFEB98);
  v17 = sub_23F250F34();
  *v13 = v4;
  v13[1] = v3;
  v18 = (_QWORD *)(v2 + v6[6]);
  *v18 = v1;
  v18[1] = v0;
  sub_23F2501E4(v17, v2 + v6[7], type metadata accessor for ActionOutcome);
  sub_23F24F57C(v21, v14);
  sub_23F15AB50(v21);
  return sub_23F24F57C(v14, v20);
}

void *_s16IntelligenceFlow14ActionResponseV7eventId04toolF07outcome8responseAC10Foundation4UUIDV_SSAA0C7OutcomeOAA0D8ManifestVtcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, const void *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  int *v10;
  _QWORD *v11;
  _WORD *v12;
  _OWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _BYTE v18[192];
  _QWORD v19[24];

  sub_23F24F57C(v18, a4);
  v9 = sub_23F131B8C();
  sub_23F2503C0(a5, 1);
  v10 = (int *)type metadata accessor for ActionResponse(0);
  v11 = (_QWORD *)(a5 + v10[5]);
  *v11 = 0;
  v11[1] = 0;
  v12 = (_WORD *)(a5 + v10[8]);
  sub_23F15EBE8(v12);
  v12[92] = 514;
  v13 = (_OWORD *)(a5 + v10[9]);
  v13[2] = 0u;
  v13[3] = 0u;
  *v13 = 0u;
  v13[1] = 0u;
  v14 = (_QWORD *)(a5 + v10[10]);
  *v14 = 0;
  v14[1] = 0;
  sub_23F125E40(a5, &qword_256DFEB98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a5, a1, v9);
  v15 = sub_23F2503C0(a5, 0);
  v16 = (_QWORD *)(a5 + v10[6]);
  *v16 = a2;
  v16[1] = a3;
  sub_23F2501E4(v15, a5 + v10[7], type metadata accessor for ActionOutcome);
  sub_23F24F57C(v19, v12);
  sub_23F15AB50(v19);
  return sub_23F24F57C(v12, v18);
}

void ActionResponse.stepId.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;

  sub_23F18039C();
  v2 = sub_23F24FBA0();
  sub_23F250774(v2);
  v3 = sub_23F250D44();
  v4 = sub_23F24FAD4(v3);
  *(_QWORD *)(v1 + 8) = v4;
  v5 = sub_23F131B8C();
  *(_QWORD *)(v1 + 32) = sub_23F24F2AC(v5);
  v6 = sub_23F25016C();
  sub_23F24F514((uint64_t)v6);
  sub_23F1263A4((uint64_t)v4, 1, v0);
  if (v7)
  {
    v8 = sub_23F250F7C();
    sub_23F24F5EC(v8, &qword_256DFEB98);
  }
  else
  {
    sub_23F24F6E8();
  }
  sub_23F131680();
}

void sub_23F1D77F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v7 = sub_23F131B8C();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F1319C8();
  sub_23F126040(v5, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 16));
  a5(v5);
  sub_23F12612C();
}

void ActionResponse.eventId.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;

  sub_23F18039C();
  v2 = sub_23F24FBA0();
  sub_23F250774(v2);
  v3 = sub_23F250D44();
  v4 = sub_23F24FAD4(v3);
  *(_QWORD *)(v1 + 8) = v4;
  v5 = sub_23F131B8C();
  *(_QWORD *)(v1 + 32) = sub_23F24F2AC(v5);
  v6 = sub_23F25016C();
  sub_23F24F514((uint64_t)v6);
  sub_23F1263A4((uint64_t)v4, 1, v0);
  if (v7)
  {
    v8 = sub_23F250F7C();
    sub_23F24F5EC(v8, &qword_256DFEB98);
  }
  else
  {
    sub_23F24F6E8();
  }
  sub_23F131680();
}

void static ActionOutcome.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28[34];

  sub_23F125F3C();
  v28[13] = v0;
  v28[14] = v1;
  v28[2] = type metadata accessor for ParameterCandidatesNotFound(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v2);
  v28[7] = (uint64_t)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[5] = type metadata accessor for ParameterNotAllowed(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  v28[6] = (uint64_t)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ParameterConfirmation(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  v28[3] = (uint64_t)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[1] = type metadata accessor for ParameterNeedsValue(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  v28[4] = (uint64_t)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionSuccess(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  v12 = sub_23F18016C((uint64_t)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ActionOutcome(v12);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F24F5D0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1A96CC();
  MEMORY[0x24BDAC7A8](v16);
  v28[12] = (uint64_t)v28 - v17;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F24FB6C();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F24F48C();
  sub_23F1217E8(&qword_256E04708);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F24FA58(v26, v28[0]);
  sub_23F25074C();
  v27 = (char *)sub_23F1D7C24 + 4 * byte_23F278DFF[sub_23F250580()];
  __asm { BR              X10 }
}

void sub_23F1D7C24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v4 - 224);
  sub_23F250D20(v5, a2, type metadata accessor for ActionOutcome);
  if (sub_23F24EDD0())
  {
    sub_23F1BE0BC(v3, type metadata accessor for ActionSuccess);
    sub_23F125E40(v5, &qword_256E04708);
  }
  else
  {
    v6 = *(_QWORD *)(v4 - 352);
    sub_23F24EE5C(v2, v6);
    sub_23F251CB0();
    sub_23F24F0CC(v6);
    sub_23F24F0CC(v3);
    sub_23F1BE0BC(v5, type metadata accessor for ActionOutcome);
  }
  sub_23F250F0C();
  sub_23F125EFC();
}

uint64_t sub_23F1D81FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x644972707865 && a2 == 0xE600000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000;
          if (v9 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x65736E6F70736572 && a2 == 0xEE0074757074754FLL;
            if (v10 || (sub_23F268798() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = sub_23F268798();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_23F1D851C()
{
  return 7;
}

uint64_t sub_23F1D8524(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1D8564 + 4 * byte_23F278E0A[a1]))(0x76456E6F69746361, 0xED00006449746E65);
}

uint64_t sub_23F1D8564()
{
  return 0x644972707865;
}

uint64_t sub_23F1D8588()
{
  return 0x656D6F6374756FLL;
}

uint64_t sub_23F1D85A0()
{
  return 0x65736E6F70736572;
}

uint64_t sub_23F1D85CC()
{
  return 0x7551746E65696C63;
}

uint64_t sub_23F1D85F0()
{
  unsigned __int8 *v0;

  return sub_23F1D8524(*v0);
}

uint64_t sub_23F1D85F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1D81FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1D861C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F1D851C();
  *a1 = result;
  return result;
}

uint64_t sub_23F1D8640()
{
  sub_23F1F7CEC();
  return sub_23F2688B8();
}

uint64_t sub_23F1D8668()
{
  sub_23F1F7CEC();
  return sub_23F2688C4();
}

void ActionResponse.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v12[5];

  sub_23F131874();
  sub_23F1A9A7C();
  sub_23F1217E8(&qword_256E04710);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1F7CEC();
  sub_23F18A998();
  LOBYTE(v12[0]) = 0;
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&qword_256DFEF10);
  sub_23F15E5FC();
  if (!v0)
  {
    v6 = type metadata accessor for ActionResponse(0);
    LOBYTE(v12[0]) = 1;
    sub_23F24F128();
    sub_23F250798();
    LOBYTE(v12[0]) = v7;
    sub_23F131644();
    sub_23F250B18();
    type metadata accessor for ActionOutcome(0);
    sub_23F12E488((uint64_t)&unk_256E04720);
    sub_23F1315CC();
    sub_23F24F57C(v12, (const void *)(v1 + *(int *)(v6 + 32)));
    sub_23F1F5334();
    sub_23F1315CC();
    v8 = (_OWORD *)(v1 + *(int *)(v6 + 36));
    v9 = v8[1];
    v12[0] = *v8;
    v10 = v8[2];
    v11 = v8[3];
    v12[1] = v9;
    v12[2] = v10;
    v12[3] = v11;
    sub_23F1F7D28();
    sub_23F15E5FC();
    LOBYTE(v12[0]) = 6;
    sub_23F24F128();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void ActionResponse.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t *v57;
  __int128 v58;
  int *v59;
  uint64_t *v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[192];
  _QWORD v67[24];
  _QWORD v68[25];

  sub_23F131874();
  v4 = v3;
  v49 = v5;
  v50 = type metadata accessor for ActionOutcome(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F125F70();
  *(_QWORD *)&v51 = v7;
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F125F70();
  *(_QWORD *)&v52 = v9;
  v53 = sub_23F1217E8(&qword_256E04730);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F17FFC4();
  v12 = (int *)type metadata accessor for ActionResponse(v11);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F131B8C();
  v17 = sub_23F2508EC();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v17, v18, v19, v16);
  sub_23F250DA0(v12[5]);
  v60 = v20;
  v21 = &v15[v12[8]];
  bzero(v21, 0xB8uLL);
  *((_WORD *)v21 + 92) = 514;
  v22 = &v15[v12[9]];
  *((_OWORD *)v22 + 2) = 0u;
  *((_OWORD *)v22 + 3) = 0u;
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  v59 = v12;
  sub_23F250DA0(v12[10]);
  v56 = v21;
  v57 = v23;
  v55 = v4;
  sub_23F1A968C(v4);
  sub_23F1F7CEC();
  v54 = v1;
  sub_23F15EB10();
  sub_23F24EEA4();
  if (v0)
  {
    v24 = sub_23F251A18();
    v25 = v59;
    v26 = _s16IntelligenceFlow17AnySessionMessageVwxx_0(v24);
    sub_23F2522A8(v26, &qword_256DFEB98);
    sub_23F24F628();
    if ((_DWORD)v4)
      sub_23F24F628();
    if ((_DWORD)v16)
      sub_23F1BE0BC((uint64_t)&v15[v25[7]], type metadata accessor for ActionOutcome);
    sub_23F24F57C(v68, v2);
    sub_23F15AB50(v68);
    sub_23F250A54();
    sub_23F250A1C();
  }
  else
  {
    v48[1] = v2;
    LOBYTE(v68[0]) = 0;
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F2518A0();
    v27 = sub_23F126358();
    sub_23F1F86F4(v27, v28, v29);
    LOBYTE(v68[0]) = 1;
    v30 = sub_23F15E764();
    v31 = v59;
    v32 = v30;
    v34 = v33;
    v35 = v60;
    sub_23F250A1C();
    *v35 = v32;
    v35[1] = v34;
    LOBYTE(v68[0]) = 2;
    v36 = sub_23F268684();
    v38 = v56;
    v37 = v57;
    v39 = (uint64_t *)&v15[v31[6]];
    *v39 = v36;
    v39[1] = v40;
    LOBYTE(v68[0]) = 3;
    sub_23F12E488((uint64_t)&unk_256E04738);
    v41 = sub_23F180318();
    sub_23F251CA8(v41, (uint64_t)&v15[v31[7]], type metadata accessor for ActionOutcome);
    sub_23F17FF24();
    sub_23F15AE64();
    sub_23F180318();
    sub_23F24F57C(v66, v68);
    sub_23F24F57C(v67, v38);
    sub_23F15AB50(v67);
    sub_23F24F57C(v38, v66);
    sub_23F1F7D64();
    sub_23F2518A0();
    v58 = v61;
    v51 = v63;
    v52 = v62;
    v42 = v64;
    v43 = v65;
    sub_23F250A54();
    v44 = v52;
    *(_OWORD *)v22 = v58;
    *((_OWORD *)v22 + 1) = v44;
    *((_OWORD *)v22 + 2) = v51;
    *((_QWORD *)v22 + 6) = v42;
    *((_QWORD *)v22 + 7) = v43;
    LOBYTE(v61) = 6;
    v45 = sub_23F15E764();
    v47 = v46;
    sub_23F2510A0();
    sub_23F250A1C();
    *v37 = v45;
    v37[1] = v47;
    sub_23F24F0B8((uint64_t)v15, v49);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v55);
    sub_23F24F1B8((uint64_t)v15);
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1D8D4C()
{
  ActionResponse.init(from:)();
}

void sub_23F1D8D60()
{
  ActionResponse.encode(to:)();
}

uint64_t (*SystemResponse.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t SystemResponse.statementId.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)(v1 + *(int *)(sub_23F252190() + 20));
  v3 = *v2;
  v4 = v2[1];
  v5 = v2[2];
  *v0 = *v2;
  v0[1] = v4;
  v0[2] = v5;
  return sub_23F1F607C(v3, v4, v5);
}

void SystemResponse.statementId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;

  v0 = sub_23F250678();
  type metadata accessor for SystemResponse(v0);
  v1 = sub_23F2517DC();
  sub_23F250EEC(v1, v2, v3, v4, v5, v6, v7, v8, v9);
  sub_23F1A9BE8();
}

uint64_t (*SystemResponse.statementId.modify())()
{
  type metadata accessor for SystemResponse(0);
  sub_23F180384();
  return nullsub_1;
}

void SystemResponse.toolId.getter()
{
  sub_23F1D70D0(type metadata accessor for SystemResponse);
}

void SystemResponse.toolId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F1D8E28(a1, a2, type metadata accessor for SystemResponse);
}

void sub_23F1D8E28(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t *v6;

  v6 = (uint64_t *)(v3 + *(int *)(sub_23F2505FC(a1, a2, a3) + 24));
  sub_23F18ADB4();
  *v6 = a1;
  v6[1] = a2;
  sub_23F12612C();
}

uint64_t (*SystemResponse.toolId.modify())()
{
  sub_23F2501F8();
  sub_23F18030C();
  return nullsub_1;
}

void SystemResponse.outcome.getter()
{
  sub_23F1D8E90(type metadata accessor for SystemResponse);
}

void sub_23F1D8E90(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = sub_23F24F3E8(a1);
  sub_23F251198(*(int *)(v1 + 28));
  sub_23F12612C();
}

void SystemResponse.outcome.setter(uint64_t a1)
{
  sub_23F1D8EC8(a1, type metadata accessor for SystemResponse);
}

void sub_23F1D8EC8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;

  sub_23F24F690(a1, a2);
  sub_23F1A9AFC();
  sub_23F252340(v2, v3);
  sub_23F12612C();
}

uint64_t (*SystemResponse.outcome.modify())()
{
  sub_23F2501F8();
  sub_23F1A9AFC();
  return nullsub_1;
}

uint64_t SystemResponse.responseOutput.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v0 = sub_23F252190();
  v1 = sub_23F25005C(*(int *)(v0 + 32));
  return sub_23F250C9C(v1, v2, v3, v4, v5, v6, v7);
}

void SystemResponse.responseOutput.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __int128 v11;
  __int128 v12;

  v0 = sub_23F25068C();
  v1 = type metadata accessor for SystemResponse(v0);
  v2 = sub_23F2506D0(*(int *)(v1 + 32));
  sub_23F250AC4(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  sub_23F15EA9C();
}

uint64_t (*SystemResponse.responseOutput.modify())()
{
  type metadata accessor for SystemResponse(0);
  sub_23F2503E0();
  return nullsub_1;
}

void SystemResponse.clientQueryId.getter()
{
  type metadata accessor for SystemResponse(0);
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SystemResponse.clientQueryId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SystemResponse(0) + 36));
  sub_23F18ADB4();
  *v5 = a1;
  v5[1] = a2;
  sub_23F12612C();
}

uint64_t (*SystemResponse.clientQueryId.modify())()
{
  type metadata accessor for SystemResponse(0);
  sub_23F25118C();
  return nullsub_1;
}

uint64_t SystemResponse.interpretedStatementResults.getter()
{
  sub_23F2501F8();
  return swift_bridgeObjectRetain();
}

void SystemResponse.init(responseOutput:clientQueryId:interpretedStatementResults:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unsigned int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  sub_23F125F3C();
  v3 = v2;
  v46 = v4;
  v47 = v5;
  v7 = v6;
  v9 = v8;
  v41 = sub_23F250200();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F24ED20(v11, v41);
  sub_23F1217E8(&qword_256E04748);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F1A9480();
  v14 = (int *)type metadata accessor for InterpretedStatementResult(v13);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F15E50C();
  v44 = v7[1];
  v45 = *v7;
  v43 = v7[2];
  v16 = *((_QWORD *)v7 + 6);
  v17 = *((_QWORD *)v7 + 7);
  v18 = sub_23F131B8C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v9, 1, 1, v18);
  v19 = (int *)sub_23F2501F8();
  v20 = (_QWORD *)(v9 + v19[5]);
  *v20 = 0;
  v20[1] = 0;
  v20[2] = 1;
  v21 = v9 + v19[8];
  v22 = (_QWORD *)(v9 + v19[9]);
  *(_OWORD *)v21 = v45;
  *(_OWORD *)(v21 + 16) = v44;
  *(_OWORD *)(v21 + 32) = v43;
  *(_QWORD *)(v21 + 48) = v16;
  *(_QWORD *)(v21 + 56) = v17;
  *v22 = v46;
  v22[1] = v47;
  *(_QWORD *)(v9 + v19[10]) = v3;
  sub_23F1D9298(v3, v1);
  v23 = sub_23F1263A4(v1, 1, (uint64_t)v14);
  if (v25)
  {
    sub_23F125E40(v1, &qword_256E04748);
    sub_23F24F5EC(v26, &qword_256DFEB98);
    sub_23F17FC00(v9, 1);
    sub_23F2517DC();
    *v20 = 0;
    v20[1] = 0;
    v20[2] = 1;
    v27 = (_QWORD *)(v9 + v19[6]);
    *v27 = 0;
    v27[1] = 0xE000000000000000;
    v28 = v9 + v19[7];
    *(_OWORD *)v28 = xmmword_23F290D70;
    *(_QWORD *)(v28 + 24) = 0;
    *(_QWORD *)(v28 + 32) = 0;
    *(_QWORD *)(v28 + 16) = 0;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_23F251E6C(v23, v24, type metadata accessor for InterpretedStatementResult);
    sub_23F175240(v0, v9);
    v29 = (unsigned int *)(v0 + v14[6]);
    v31 = *((_QWORD *)v29 + 1);
    v30 = *((_QWORD *)v29 + 2);
    v32 = v20[2];
    *v20 = *v29;
    v20[1] = v31;
    sub_23F251684(v30);
    v33 = sub_23F24FAB0();
    sub_23F1F6090(v33, v34, v32);
    v35 = (uint64_t *)(v0 + v14[8]);
    v36 = v35[1];
    if (v36)
    {
      v37 = *v35;
      v38 = v36;
    }
    else
    {
      v37 = 0;
      v38 = 0xE000000000000000;
    }
    v39 = (_QWORD *)(v9 + v19[6]);
    *v39 = v37;
    v39[1] = v38;
    sub_23F2514F0(v0 + v14[9], v42);
    v40 = sub_23F13175C();
    sub_23F252280(v40, type metadata accessor for InterpretedStatementResult);
    sub_23F1BE0F4(v42, v9 + v19[7], type metadata accessor for StatementOutcome);
  }
  sub_23F125EFC();
}

uint64_t sub_23F1D9298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = type metadata accessor for InterpretedStatementResult(0);
  v6 = v5;
  if (v4)
  {
    v7 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
    sub_23F1BE1A0(a1 + ((v7 + 32) & ~v7), a2, type metadata accessor for InterpretedStatementResult);
    v8 = 0;
  }
  else
  {
    v8 = 1;
  }
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a2, v8, 1, v6);
}

__n128 ActionFailure.init(failure:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *(_QWORD *)(a1 + 32);
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 32) = v2;
  return result;
}

void SystemResponse.init(actionEventId:statementId:toolId:outcome:responseOutput:clientQueryId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 *v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  sub_23F2523C8(a1, a2);
  v13 = *(_QWORD *)(v12 + 16);
  sub_23F250E70(v14, v12, v15, v16, v17, v18);
  v28 = *(_QWORD *)(v19 + 56);
  v29 = *(_QWORD *)(v19 + 48);
  v20 = sub_23F131B8C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v8, 1, 1, v20);
  v21 = (int *)sub_23F2501F8();
  v22 = (uint64_t *)(v8 + v21[5]);
  *v22 = 0;
  v22[1] = 0;
  v22[2] = 1;
  v23 = v8 + v21[8];
  *(_OWORD *)(v23 + 32) = 0u;
  *(_OWORD *)(v23 + 48) = 0u;
  *(_OWORD *)v23 = 0u;
  *(_OWORD *)(v23 + 16) = 0u;
  v24 = (_QWORD *)(v8 + v21[9]);
  *v24 = 0;
  v24[1] = 0;
  sub_23F250CD0();
  sub_23F1F6090(*v22, v22[1], v22[2]);
  *(_OWORD *)v22 = v27;
  v22[2] = v13;
  v25 = (_QWORD *)(v8 + v21[6]);
  *v25 = a3;
  v25[1] = a4;
  sub_23F252268(a5, v8 + v21[7]);
  sub_23F1F6000(*(_QWORD *)v23, *(_QWORD *)(v23 + 8), *(_QWORD *)(v23 + 16), *(_QWORD *)(v23 + 24), *(_QWORD *)(v23 + 32), *(_QWORD *)(v23 + 40), *(_QWORD *)(v23 + 48));
  *(_OWORD *)v23 = v32;
  *(_OWORD *)(v23 + 16) = v31;
  *(_OWORD *)(v23 + 32) = v30;
  *(_QWORD *)(v23 + 48) = v29;
  *(_QWORD *)(v23 + 56) = v28;
  swift_bridgeObjectRelease();
  *v24 = a7;
  v24[1] = a8;
  sub_23F25145C(a5);
  sub_23F250CC8(v26, &qword_256DFEB98);
  *(_QWORD *)(v8 + v21[10]) = MEMORY[0x24BEE4AF8];
  sub_23F250278();
}

void SystemResponse.init(actionEventId:statementId:toolId:outcome:responseOutput:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  sub_23F2523C8(a1, a2);
  v10 = *(_QWORD *)(v9 + 16);
  sub_23F250E70(v11, v9, v12, v13, v14, v15);
  v17 = *(_QWORD *)(v16 + 56);
  v26 = *(_QWORD *)(v16 + 48);
  v18 = sub_23F131B8C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v5, 1, 1, v18);
  v19 = (int *)sub_23F2501F8();
  v20 = (uint64_t *)(v5 + v19[5]);
  *v20 = 0;
  v20[1] = 0;
  v20[2] = 1;
  v21 = v5 + v19[8];
  *(_OWORD *)(v21 + 32) = 0u;
  *(_OWORD *)(v21 + 48) = 0u;
  *(_OWORD *)v21 = 0u;
  *(_OWORD *)(v21 + 16) = 0u;
  v22 = (_QWORD *)(v5 + v19[9]);
  *v22 = 0;
  v22[1] = 0;
  sub_23F250CD0();
  sub_23F1F6090(*v20, v20[1], v20[2]);
  *(_OWORD *)v20 = v25;
  v20[2] = v10;
  v23 = (_QWORD *)(v5 + v19[6]);
  *v23 = a3;
  v23[1] = a4;
  sub_23F2521B4(a5, v5 + v19[7]);
  sub_23F24FD4C();
  *(_OWORD *)v21 = v29;
  *(_OWORD *)(v21 + 16) = v28;
  *(_OWORD *)(v21 + 32) = v27;
  *(_QWORD *)(v21 + 48) = v26;
  *(_QWORD *)(v21 + 56) = v17;
  sub_23F252378();
  sub_23F250CC8(v24, &qword_256DFEB98);
  *(_QWORD *)(v5 + v19[10]) = MEMORY[0x24BEE4AF8];
}

uint64_t sub_23F1D95A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v11;

  v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x65736E6F70736572 && a2 == 0xEE0074757074754FLL;
          if (v9 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265;
            if (v10 || (sub_23F268798() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023F294AE0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v11 = sub_23F268798();
              swift_bridgeObjectRelease();
              if ((v11 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_23F1D98F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1D9930 + 4 * byte_23F278E11[a1]))(0x76456E6F69746361, 0xED00006449746E65);
}

uint64_t sub_23F1D9930()
{
  return 0x6E656D6574617473;
}

uint64_t sub_23F1D9950()
{
  return 0x64496C6F6F74;
}

uint64_t sub_23F1D9964()
{
  return 0x656D6F6374756FLL;
}

uint64_t sub_23F1D997C()
{
  return 0x65736E6F70736572;
}

uint64_t sub_23F1D99A0()
{
  return 0x7551746E65696C63;
}

unint64_t sub_23F1D99C4()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_23F1D99E0()
{
  unsigned __int8 *v0;

  return sub_23F1D98F0(*v0);
}

uint64_t sub_23F1D99E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1D95A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1D9A0C()
{
  sub_23F1F7DB4();
  return sub_23F2688B8();
}

uint64_t sub_23F1D9A34()
{
  sub_23F1F7DB4();
  return sub_23F2688C4();
}

void SystemResponse.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  __int128 *v7;
  uint64_t v8;
  char v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  sub_23F1A9358();
  sub_23F1A9A7C();
  sub_23F1217E8(&qword_256E04750);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1F7DB4();
  sub_23F18A998();
  LOBYTE(v13) = 0;
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&qword_256DFEF10);
  sub_23F15E5FC();
  if (!v0)
  {
    v6 = (int *)type metadata accessor for SystemResponse(0);
    v7 = (__int128 *)(v1 + v6[5]);
    v8 = *((_QWORD *)v7 + 2);
    v13 = *v7;
    *(_QWORD *)&v14 = v8;
    sub_23F251FB8();
    sub_23F15E5FC();
    sub_23F250798();
    LOBYTE(v13) = v9;
    sub_23F131644();
    LOBYTE(v13) = 3;
    type metadata accessor for StatementOutcome(0);
    sub_23F12E488((uint64_t)&unk_256E03A38);
    sub_23F1315CC();
    v10 = (__int128 *)(v1 + v6[8]);
    v11 = v10[1];
    v13 = *v10;
    v14 = v11;
    v12 = v10[3];
    v15 = v10[2];
    v16 = v12;
    sub_23F17FF24();
    sub_23F1F7D28();
    sub_23F15E5FC();
    LOBYTE(v13) = 5;
    sub_23F24F128();
    *(_QWORD *)&v13 = *(_QWORD *)(v1 + v6[10]);
    HIBYTE(v17) = 6;
    sub_23F1217E8(&qword_256E04760);
    sub_23F1F7DF0();
    sub_23F1315CC();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F25102C();
  sub_23F18AB98();
}

void SystemResponse.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  int *v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;

  sub_23F131874();
  v4 = v3;
  v43 = v5;
  v6 = sub_23F250200();
  sub_23F251430(v6);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F24EEC8(v8, v43);
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F180018(v10, v43);
  v46 = sub_23F1217E8(&qword_256E04778);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F17FFC4();
  v13 = (int *)type metadata accessor for SystemResponse(v12);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F131B8C();
  v18 = sub_23F2508EC();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v18, v19, v20, v17);
  sub_23F250DA0(v13[5]);
  v50 = v13;
  v51 = v21;
  *(_QWORD *)(v21 + 16) = 1;
  v22 = &v16[v13[8]];
  *((_OWORD *)v22 + 2) = 0u;
  *((_OWORD *)v22 + 3) = 0u;
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  v23 = (uint64_t)v16;
  sub_23F250DA0(v13[9]);
  v48 = v4;
  v49 = v24;
  sub_23F12545C(v4, v4[3]);
  sub_23F1F7DB4();
  v47 = v1;
  sub_23F15EB10();
  sub_23F250614();
  if (v0)
  {
    v26 = _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v48);
    sub_23F1A9640(v26, &qword_256DFEB98);
    sub_23F251980();
    sub_23F24FD4C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = v2;
    LOBYTE(v53) = 0;
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F25134C();
    v27 = sub_23F15EB40();
    sub_23F1F86F4(v27, v28, v29);
    sub_23F250AEC(1);
    sub_23F2513AC();
    sub_23F25134C();
    v30 = v51;
    v52 = v53;
    v31 = v54;
    sub_23F251980();
    *(_OWORD *)v30 = v52;
    *(_QWORD *)(v30 + 16) = v31;
    LOBYTE(v53) = 2;
    v32 = sub_23F268684();
    v34 = v49;
    v33 = v50;
    v35 = (uint64_t *)(v23 + v50[6]);
    *v35 = v32;
    v35[1] = v36;
    LOBYTE(v53) = 3;
    sub_23F12E488((uint64_t)&unk_256E03A50);
    sub_23F17FABC();
    sub_23F1BE0F4(v44, v23 + v33[7], type metadata accessor for StatementOutcome);
    sub_23F17FF24();
    sub_23F1F7D64();
    sub_23F25134C();
    v52 = v53;
    v44 = v55;
    v45 = v54;
    v37 = v56;
    v38 = v57;
    sub_23F24FD4C();
    v39 = v45;
    *(_OWORD *)v22 = v52;
    *((_OWORD *)v22 + 1) = v39;
    *((_OWORD *)v22 + 2) = v44;
    *((_QWORD *)v22 + 6) = v37;
    *((_QWORD *)v22 + 7) = v38;
    LOBYTE(v53) = 5;
    v40 = sub_23F251344();
    v42 = v41;
    swift_bridgeObjectRelease();
    *v34 = v40;
    v34[1] = v42;
    sub_23F1217E8(&qword_256E04760);
    sub_23F1F7E6C();
    sub_23F17FABC();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v47, v46);
    *(_QWORD *)(v23 + v33[10]) = v53;
    sub_23F2507E4(v23, v43);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v48);
    sub_23F24F0CC(v23);
  }
  sub_23F17FDF4();
  sub_23F1313FC();
}

void sub_23F1DA128()
{
  SystemResponse.init(from:)();
}

void sub_23F1DA13C()
{
  SystemResponse.encode(to:)();
}

uint64_t (*InterpretedStatementResult.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t InterpretedStatementResult.resultStatementID.getter()
{
  uint64_t v0;

  v0 = sub_23F252184();
  sub_23F250034(*(int *)(v0 + 20));
  return sub_23F14C284();
}

void InterpretedStatementResult.resultStatementID.setter()
{
  type metadata accessor for InterpretedStatementResult(0);
  sub_23F25039C();
  sub_23F25168C();
  sub_23F12612C();
}

uint64_t (*InterpretedStatementResult.resultStatementID.modify())()
{
  type metadata accessor for InterpretedStatementResult(0);
  sub_23F180384();
  return nullsub_1;
}

uint64_t InterpretedStatementResult.originProgramStatementID.getter()
{
  return sub_23F1DA1EC();
}

uint64_t sub_23F1DA1EC()
{
  uint64_t v0;

  v0 = sub_23F24FB34();
  sub_23F250034(*(int *)(v0 + 24));
  return sub_23F14C284();
}

void InterpretedStatementResult.originProgramStatementID.setter(uint64_t a1)
{
  sub_23F1DA220(a1, type metadata accessor for InterpretedStatementResult);
}

void sub_23F1DA220(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  sub_23F24F690(a1, a2);
  sub_23F25039C();
  sub_23F25168C();
  sub_23F12612C();
}

uint64_t (*InterpretedStatementResult.originProgramStatementID.modify())()
{
  sub_23F250E18();
  sub_23F18030C();
  return nullsub_1;
}

uint64_t InterpretedStatementResult.originTaskStatementID.getter()
{
  return sub_23F1DA280();
}

uint64_t sub_23F1DA280()
{
  uint64_t v0;

  v0 = sub_23F24FB34();
  sub_23F250034(*(int *)(v0 + 28));
  return sub_23F14C284();
}

void InterpretedStatementResult.originTaskStatementID.setter(uint64_t a1)
{
  sub_23F1DA2B4(a1, type metadata accessor for InterpretedStatementResult);
}

void sub_23F1DA2B4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  sub_23F24F690(a1, a2);
  sub_23F25039C();
  sub_23F25168C();
  sub_23F12612C();
}

uint64_t (*InterpretedStatementResult.originTaskStatementID.modify())()
{
  sub_23F250E18();
  sub_23F1A9AFC();
  return nullsub_1;
}

void InterpretedStatementResult.toolId.getter()
{
  sub_23F1DA314(type metadata accessor for InterpretedStatementResult);
}

void sub_23F1DA314(uint64_t (*a1)(_QWORD))
{
  sub_23F17FDCC(a1);
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void InterpretedStatementResult.toolId.setter(uint64_t a1, uint64_t a2)
{
  sub_23F1DA34C(a1, a2, type metadata accessor for InterpretedStatementResult);
}

void sub_23F1DA34C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t *v6;

  v6 = (uint64_t *)(v3 + *(int *)(sub_23F2505FC(a1, a2, a3) + 32));
  sub_23F18ADB4();
  *v6 = a1;
  v6[1] = a2;
  sub_23F12612C();
}

uint64_t (*InterpretedStatementResult.toolId.modify())()
{
  sub_23F250E18();
  sub_23F2503E0();
  return nullsub_1;
}

void InterpretedStatementResult.outcome.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F252184();
  sub_23F24F584(v0 + *(int *)(v1 + 36), v2, type metadata accessor for StatementOutcome);
  sub_23F126078();
}

void InterpretedStatementResult.outcome.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F2507D8();
  type metadata accessor for InterpretedStatementResult(v1);
  sub_23F25118C();
  sub_23F1F4C44(v0, v2, type metadata accessor for StatementOutcome);
  sub_23F126078();
}

uint64_t (*InterpretedStatementResult.outcome.modify())()
{
  type metadata accessor for InterpretedStatementResult(0);
  sub_23F25118C();
  return nullsub_1;
}

void InterpretedStatementResult.init(actionEventId:resultStatementID:originProgramStatementID:toolId:outcome:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23F14C4D8();
  v23 = v0;
  v24 = v1;
  v22 = v2;
  v4 = v3;
  v6 = v5;
  v8 = *v7;
  v9 = *((_QWORD *)v7 + 1);
  v10 = *((_QWORD *)v7 + 2);
  v12 = *v11;
  v13 = *((_QWORD *)v11 + 1);
  v14 = *((_QWORD *)v11 + 2);
  v15 = sub_23F131B8C();
  v16 = (int *)sub_23F250C08(v15);
  v17 = (_QWORD *)(v6 + v16[8]);
  *v17 = 0;
  v17[1] = 0;
  sub_23F2508E4(v4, v18, &qword_256DFEB98);
  v19 = v6 + v16[5];
  *(_DWORD *)v19 = v8;
  *(_QWORD *)(v19 + 8) = v9;
  *(_QWORD *)(v19 + 16) = v10;
  v20 = v6 + v16[6];
  *(_DWORD *)v20 = v12;
  *(_QWORD *)(v20 + 8) = v13;
  *(_QWORD *)(v20 + 16) = v14;
  v21 = v6 + v16[7];
  *(_DWORD *)v21 = v12;
  *(_QWORD *)(v21 + 8) = v13;
  *(_QWORD *)(v21 + 16) = v14;
  sub_23F126364();
  sub_23F1318DC();
  *v17 = v22;
  v17[1] = v23;
  sub_23F1BE0F4(v24, v6 + v16[9], type metadata accessor for StatementOutcome);
  sub_23F24F71C();
}

void InterpretedStatementResult.init(actionEventId:resultStatementID:originProgramStatementID:originTaskStatementID:toolId:outcome:)(uint64_t a1@<X0>, int *a2@<X1>, int *a3@<X2>, int *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;

  v10 = *a2;
  v11 = *((_QWORD *)a2 + 1);
  v12 = *((_QWORD *)a2 + 2);
  v13 = *a3;
  v14 = *((_QWORD *)a3 + 1);
  v15 = *((_QWORD *)a3 + 2);
  v25 = *a4;
  v23 = *((_QWORD *)a4 + 2);
  v24 = *((_QWORD *)a4 + 1);
  v16 = sub_23F131B8C();
  v17 = (int *)sub_23F250C08(v16);
  v18 = (_QWORD *)(a8 + v17[8]);
  *v18 = 0;
  v18[1] = 0;
  sub_23F2508E4(a1, v19, &qword_256DFEB98);
  v20 = a8 + v17[5];
  *(_DWORD *)v20 = v10;
  *(_QWORD *)(v20 + 8) = v11;
  *(_QWORD *)(v20 + 16) = v12;
  v21 = a8 + v17[6];
  *(_DWORD *)v21 = v13;
  *(_QWORD *)(v21 + 8) = v14;
  *(_QWORD *)(v21 + 16) = v15;
  v22 = a8 + v17[7];
  *(_DWORD *)v22 = v25;
  *(_QWORD *)(v22 + 8) = v24;
  *(_QWORD *)(v22 + 16) = v23;
  swift_bridgeObjectRelease();
  *v18 = a5;
  v18[1] = a6;
  sub_23F1BE0F4(a7, a8 + v17[9], type metadata accessor for StatementOutcome);
  sub_23F250234();
}

void static InterpretedStatementResult.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v49;
  uint64_t v50;

  sub_23F125F3C();
  v6 = v5;
  v8 = v7;
  v50 = *(_QWORD *)(sub_23F131B8C() - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F126058();
  v10 = sub_23F1217E8(&qword_256E01490);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1319C8();
  sub_23F251E78();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F24F388();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F24F0A4();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F24F48C();
  sub_23F24F8D0(v8, v3);
  sub_23F24F8D0(v6, v4);
  v15 = v0 + *(int *)(v10 + 48);
  sub_23F24F8D0(v3, v0);
  sub_23F24F8D0(v4, v15);
  sub_23F1A92D8(v0);
  if (v20)
  {
    sub_23F1A973C(v4);
    sub_23F1A973C(v3);
    v16 = sub_23F1A92D8(v15);
    if (v20)
    {
      sub_23F1A9640(v16, &qword_256DFEB98);
      goto LABEL_11;
    }
LABEL_9:
    sub_23F1A9640(v16, &qword_256E01490);
    goto LABEL_53;
  }
  v17 = sub_23F250180();
  sub_23F1752C4(v17, v18, v19);
  sub_23F1A92D8(v15);
  if (v20)
  {
    sub_23F1A9648(v4);
    sub_23F1A9648(v3);
    v16 = sub_23F126138(v1, *(uint64_t (**)(uint64_t, uint64_t))(v50 + 8));
    goto LABEL_9;
  }
  sub_23F1263D8(v2, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 32));
  sub_23F12E488((uint64_t)&qword_256DFEAF8);
  sub_23F15EB34();
  v21 = sub_23F2503EC();
  sub_23F250924(v2);
  sub_23F1A9648(v4);
  sub_23F1A9648(v3);
  sub_23F250924(v1);
  sub_23F1A9648(v0);
  if ((v21 & 1) == 0)
    goto LABEL_53;
LABEL_11:
  sub_23F250E18();
  sub_23F24F944();
  if (!v20)
    goto LABEL_53;
  sub_23F251514();
  if (!v24)
  {
    if (v22)
      goto LABEL_53;
LABEL_22:
    sub_23F24F944();
    if (!v20)
      goto LABEL_53;
    sub_23F251514();
    if (v31)
    {
      if (!v29)
        goto LABEL_53;
      sub_23F2500AC(v30);
      if (!v20 || v32 != v33)
      {
        sub_23F126148();
        sub_23F15E5CC();
        if ((v35 & 1) == 0)
          goto LABEL_53;
      }
    }
    else if (v29)
    {
      goto LABEL_53;
    }
    sub_23F24F944();
    if (!v20)
      goto LABEL_53;
    sub_23F251514();
    if (v38)
    {
      if (!v36)
        goto LABEL_53;
      sub_23F2500AC(v37);
      if (!v20 || v39 != v40)
      {
        sub_23F126148();
        sub_23F15E5CC();
        if ((v42 & 1) == 0)
          goto LABEL_53;
      }
    }
    else if (v36)
    {
      goto LABEL_53;
    }
    sub_23F24FF54();
    if (v45)
    {
      if (!v43)
        goto LABEL_53;
      sub_23F24F854(v44);
      if (!v20 || v46 != v47)
      {
        sub_23F126148();
        sub_23F15E5CC();
        if ((v49 & 1) == 0)
          goto LABEL_53;
      }
    }
    else if (v43)
    {
      goto LABEL_53;
    }
    sub_23F2516A0();
    goto LABEL_53;
  }
  if (v22)
  {
    sub_23F2500AC(v23);
    if (v20 && v25 == v26)
      goto LABEL_22;
    sub_23F126148();
    sub_23F15E5CC();
    if ((v28 & 1) != 0)
      goto LABEL_22;
  }
LABEL_53:
  sub_23F125EFC();
}

uint64_t sub_23F1DA8E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023F294B00 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023F294B20 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023F294B40 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 5;
      else
        return 6;
    }
  }
}

uint64_t sub_23F1DAB5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1DAB9C + 4 * byte_23F278E18[a1]))(0x76456E6F69746361, 0xED00006449746E65);
}

unint64_t sub_23F1DAB9C()
{
  return 0xD000000000000011;
}

unint64_t sub_23F1DABB8()
{
  return 0xD000000000000018;
}

uint64_t sub_23F1DABF0()
{
  return 0x64496C6F6F74;
}

uint64_t sub_23F1DAC04()
{
  return 0x656D6F6374756FLL;
}

uint64_t sub_23F1DAC1C()
{
  unsigned __int8 *v0;

  return sub_23F1DAB5C(*v0);
}

uint64_t sub_23F1DAC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1DA8E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1DAC48()
{
  sub_23F1F7EE8();
  return sub_23F2688B8();
}

uint64_t sub_23F1DAC70()
{
  sub_23F1F7EE8();
  return sub_23F2688C4();
}

void InterpretedStatementResult.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  char v7;

  sub_23F1A9358();
  sub_23F1A9A7C();
  sub_23F1217E8(&qword_256E04790);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1F7EE8();
  sub_23F18A998();
  v7 = 0;
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&qword_256DFEF10);
  sub_23F15E5FC();
  if (!v0)
  {
    v5 = (int *)type metadata accessor for InterpretedStatementResult(0);
    sub_23F24FFF4(v5[5]);
    HIBYTE(v6) = 1;
    sub_23F163BDC();
    sub_23F1315CC();
    sub_23F24FFF4(v5[6]);
    HIBYTE(v6) = 2;
    sub_23F1315CC();
    sub_23F24FFF4(v5[7]);
    HIBYTE(v6) = 3;
    sub_23F1315CC();
    v7 = 4;
    sub_23F24F128();
    v7 = 5;
    sub_23F250200();
    sub_23F12E488((uint64_t)&unk_256E03A38);
    sub_23F1315CC();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F25102C();
  sub_23F18AB98();
}

void InterpretedStatementResult.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  int v29;

  sub_23F131874();
  v7 = v6;
  v25 = v8;
  v9 = sub_23F250200();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15E50C();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F15E660();
  sub_23F1217E8(&qword_256E047A0);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F17FFC4();
  v14 = type metadata accessor for InterpretedStatementResult(v13);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F15E9EC();
  v16 = sub_23F267D84();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v5, 1, 1, v16);
  v27 = v14;
  v17 = (uint64_t *)(v5 + *(int *)(v14 + 32));
  *v17 = 0;
  v17[1] = 0;
  v28 = v17;
  v18 = v7[4];
  v26 = (uint64_t)v7;
  sub_23F24EE44(v7);
  sub_23F1F7EE8();
  sub_23F15EB10();
  sub_23F250614();
  if (v0)
  {
    v19 = sub_23F251A2C();
    v20 = _s16IntelligenceFlow17AnySessionMessageVwxx_0(v19);
    sub_23F1A9640(v20, &qword_256DFEB98);
    if ((_DWORD)v7)
    {
      sub_23F250B38();
      if (!v9)
      {
LABEL_5:
        if (!(_DWORD)v18)
        {
LABEL_7:
          sub_23F24F628();
          goto LABEL_8;
        }
LABEL_6:
        sub_23F250B38();
        goto LABEL_7;
      }
    }
    else if (!v9)
    {
      goto LABEL_5;
    }
    sub_23F250B38();
    if (!(_DWORD)v18)
      goto LABEL_7;
    goto LABEL_6;
  }
  LOBYTE(v29) = 0;
  sub_23F12E488((uint64_t)&qword_256DFEF20);
  sub_23F2507AC();
  sub_23F25134C();
  sub_23F250AB8(v4, v21, &qword_256DFEB98);
  sub_23F250AEC(1);
  sub_23F17FABC();
  sub_23F24FD60(v29);
  sub_23F250C34();
  sub_23F17FABC();
  sub_23F24FD60(v29);
  sub_23F250B18();
  sub_23F17FABC();
  sub_23F24FD60(v29);
  v22 = sub_23F251344();
  v24 = v23;
  sub_23F250F84();
  *v28 = v22;
  v28[1] = v24;
  sub_23F12E488((uint64_t)&unk_256E03A50);
  sub_23F17FABC();
  sub_23F17FF08(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F1BE0F4(v2, v1 + *(int *)(v27 + 36), type metadata accessor for StatementOutcome);
  sub_23F2507E4(v1, v25);
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v26);
  sub_23F24F0CC(v1);
LABEL_8:
  sub_23F17FDF4();
  sub_23F1313FC();
}

void sub_23F1DB250()
{
  InterpretedStatementResult.init(from:)();
}

void sub_23F1DB264()
{
  InterpretedStatementResult.encode(to:)();
}

void static ActionSuccess.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;

  sub_23F125F3C();
  v6 = v5;
  v8 = v7;
  v9 = type metadata accessor for ActionSuccess.UndoContext(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15E50C();
  v11 = sub_23F1217E8(&qword_256E047A8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F15E524();
  sub_23F1217E8(&qword_256DFEBA0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F24F254();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F24F48C();
  if ((_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0() & 1) != 0)
  {
    v16 = sub_23F2523B0();
    sub_23F2514E8(v8 + *(int *)(v16 + 20), v3);
    sub_23F2514E8(v6 + *(int *)(v16 + 20), v4);
    v17 = v0 + *(int *)(v11 + 48);
    sub_23F2514E8(v3, v0);
    v18 = sub_23F251120();
    sub_23F2514E8(v18, v19);
    sub_23F1263A4(v0, 1, v9);
    if (v21)
    {
      sub_23F250DDC(v4);
      sub_23F250DDC(v3);
      v20 = sub_23F1263A4(v17, 1, v9);
      if (v21)
        goto LABEL_23;
    }
    else
    {
      sub_23F1752C4(v0, v1, &qword_256DFEBA0);
      v22 = sub_23F1263A4(v17, 1, v9);
      if (!v21)
      {
        sub_23F251E6C(v22, v23, type metadata accessor for ActionSuccess.UndoContext);
        sub_23F250180();
        v27 = _s16IntelligenceFlow7EventIDV2eeoiySbAC_ACtFZ_0();
        if ((v27 & 1) != 0)
        {
          sub_23F24FBF8();
          v30 = v21 && v28 == v29;
          if (v30 || (sub_23F126148() & 1) != 0)
          {
            sub_23F24FBF8();
            v33 = v21 && v31 == v32;
            if (v33 || (sub_23F126148() & 1) != 0)
            {
              sub_23F2508A4(v2);
              sub_23F1A973C(v4);
              sub_23F1A973C(v3);
              sub_23F2508A4(v1);
LABEL_23:
              sub_23F24F5EC(v20, &qword_256DFEBA0);
              goto LABEL_26;
            }
          }
        }
        sub_23F24F1B8(v2);
        sub_23F24FC2C(v4);
        sub_23F24FC2C(v3);
        sub_23F24F1B8(v1);
        v26 = sub_23F131BE8();
LABEL_25:
        sub_23F125E40(v26, v25);
        goto LABEL_26;
      }
      sub_23F2515C8(v4);
      sub_23F2515C8(v3);
      sub_23F252240(v24, type metadata accessor for ActionSuccess.UndoContext);
    }
    v25 = &qword_256E047A8;
    v26 = v0;
    goto LABEL_25;
  }
LABEL_26:
  sub_23F125EFC();
}

void static ToolDisambiguation.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_23F126148() & 1) != 0)
        goto LABEL_8;
    }
  }
  else if (!v4)
  {
LABEL_8:
    sub_23F1317E0();
    sub_23F12A5A0();
    return;
  }
  sub_23F126078();
}

void static ParameterNotAllowed.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  char v4;
  uint64_t v5;

  sub_23F131914(a1);
  v3 = v3 && v1 == v2;
  if (v3 || (sub_23F126148(), sub_23F15E5CC(), (v4 & 1) != 0))
  {
    v5 = sub_23F251618();
    sub_23F24FD00(v5);
    if ((_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0() & 1) != 0)
      sub_23F251848(*(int *)(v5 + 24));
  }
  sub_23F12612C();
}

void static ParameterCandidatesNotFound.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_23F1DB5F8(a1, a2, type metadata accessor for ParameterCandidatesNotFound);
}

void sub_23F1DB5F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  sub_23F131914(a1);
  v6 = v6 && v4 == v5;
  if (v6 || (sub_23F126148() & 1) != 0)
  {
    v7 = a3(0);
    sub_23F24FD00(v7);
    _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
  }
  else
  {
    sub_23F12612C();
  }
}

void static ActionRequirement.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23F1DB690()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  _QWORD v9[2];
  char v10;
  uint64_t v11[2];
  char v12;

  if (v2 > 0x3F)
  {
    sub_23F135CC8(v0, v5, v3);
    sub_23F135CB4(v1, v4, v2);
    sub_23F24F80C();
    v7 = 0;
  }
  else
  {
    v11[0] = v0;
    v11[1] = v5;
    v12 = v3;
    v9[0] = v1;
    v9[1] = v4;
    v10 = v2;
    sub_23F135CB4(v1, v4, v2);
    sub_23F251580();
    sub_23F251580();
    sub_23F135CB4(v1, v4, v2);
    static SystemRequirement.== infix(_:_:)(v11, (uint64_t)v9);
    v7 = v6;
    sub_23F24F80C();
    sub_23F137248(v1, v4, v2);
    sub_23F251570();
  }
  return v7 & 1;
}

void static ValueDisambiguation.== infix(_:_:)()
{
  sub_23F1298E0();
}

uint64_t static ActionFailure.== infix(_:_:)()
{
  char v0;

  static ActionFailure.Failure.== infix(_:_:)();
  return v0 & 1;
}

uint64_t sub_23F1DB7F8()
{
  return 11;
}

uint64_t sub_23F1DB800()
{
  sub_23F1F8280();
  return sub_23F2688B8();
}

uint64_t sub_23F1DB828()
{
  sub_23F1F8280();
  return sub_23F2688C4();
}

uint64_t sub_23F1DB850()
{
  sub_23F1F8064();
  return sub_23F2688B8();
}

uint64_t sub_23F1DB878()
{
  sub_23F1F8064();
  return sub_23F2688C4();
}

uint64_t sub_23F1DB8A0()
{
  unsigned __int8 *v0;

  return sub_23F1DD754(*v0);
}

void sub_23F1DB8B8(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F1DD3DC(a1, a2);
  *a3 = v4;
}

uint64_t sub_23F1DB8DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F1DB7F8();
  *a1 = result;
  return result;
}

uint64_t sub_23F1DB900()
{
  sub_23F1F7F38();
  return sub_23F2688B8();
}

uint64_t sub_23F1DB928()
{
  sub_23F1F7F38();
  return sub_23F2688C4();
}

uint64_t sub_23F1DB950()
{
  sub_23F1F7F74();
  return sub_23F2688B8();
}

uint64_t sub_23F1DB978()
{
  sub_23F1F7F74();
  return sub_23F2688C4();
}

uint64_t sub_23F1DB9A0()
{
  sub_23F1F80DC();
  return sub_23F2688B8();
}

uint64_t sub_23F1DB9C8()
{
  sub_23F1F80DC();
  return sub_23F2688C4();
}

uint64_t sub_23F1DB9F0()
{
  sub_23F1F8190();
  return sub_23F2688B8();
}

uint64_t sub_23F1DBA18()
{
  sub_23F1F8190();
  return sub_23F2688C4();
}

uint64_t sub_23F1DBA40()
{
  sub_23F1F8154();
  return sub_23F2688B8();
}

uint64_t sub_23F1DBA68()
{
  sub_23F1F8154();
  return sub_23F2688C4();
}

uint64_t sub_23F1DBA90()
{
  sub_23F1F81CC();
  return sub_23F2688B8();
}

uint64_t sub_23F1DBAB8()
{
  sub_23F1F81CC();
  return sub_23F2688C4();
}

uint64_t sub_23F1DBAE0()
{
  sub_23F1F8118();
  return sub_23F2688B8();
}

uint64_t sub_23F1DBB08()
{
  sub_23F1F8118();
  return sub_23F2688C4();
}

uint64_t sub_23F1DBB30()
{
  sub_23F1F82BC();
  return sub_23F2688B8();
}

uint64_t sub_23F1DBB58()
{
  sub_23F1F82BC();
  return sub_23F2688C4();
}

uint64_t sub_23F1DBB80()
{
  sub_23F1F8208();
  return sub_23F2688B8();
}

uint64_t sub_23F1DBBA8()
{
  sub_23F1F8208();
  return sub_23F2688C4();
}

uint64_t sub_23F1DBBD0()
{
  sub_23F1F7FEC();
  return sub_23F2688B8();
}

uint64_t sub_23F1DBBF8()
{
  sub_23F1F7FEC();
  return sub_23F2688C4();
}

void ActionOutcome.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  sub_23F131874();
  sub_23F250DF0();
  v12 = sub_23F1217E8(&qword_256E047B0);
  v77 = *(_QWORD *)(v12 - 8);
  v78 = v12;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F15E9D0(v14, v49[0]);
  v15 = sub_23F1217E8(&qword_256E047B8);
  v75 = *(_QWORD *)(v15 - 8);
  v76 = v15;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F17FFFC(v17, v49[0]);
  v18 = sub_23F1217E8(&qword_256E047C0);
  v73 = *(_QWORD *)(v18 - 8);
  v74 = v18;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F24EEC8(v20, v49[0]);
  v72 = sub_23F1217E8(&qword_256E047C8);
  v71 = *(_QWORD *)(v72 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v21);
  v70 = (char *)v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for ParameterCandidatesNotFound(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F17FBBC((uint64_t)v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = sub_23F1217E8(&qword_256E047D0);
  v67 = *(_QWORD *)(v69 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v25);
  v66 = (char *)v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for ParameterNotAllowed(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F17FBBC((uint64_t)v49 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = sub_23F1217E8(&qword_256E047D8);
  v64 = *(_QWORD *)(v65 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F17FBBC((uint64_t)v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = sub_23F1217E8(&qword_256E047E0);
  v61 = *(_QWORD *)(v62 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v31);
  v60 = (char *)v49 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for ParameterConfirmation(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F17FBBC((uint64_t)v49 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = sub_23F1217E8(&qword_256E047E8);
  v57 = *(_QWORD *)(v59 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v35);
  v56 = (char *)v49 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for ParameterNeedsValue(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F17FBBC((uint64_t)v49 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = sub_23F1217E8(&qword_256E047F0);
  v53 = *(_QWORD *)(v54 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F17FBBC((uint64_t)v49 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = sub_23F1217E8(&qword_256E047F8);
  v51 = *(_QWORD *)(v52 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F17FBBC((uint64_t)v49 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v50 = sub_23F1217E8(&qword_256E04800);
  v49[1] = *(_QWORD *)(v50 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v43);
  type metadata accessor for ActionSuccess(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v44);
  v45 = sub_23F17FFA8();
  type metadata accessor for ActionOutcome(v45);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F15E50C();
  v80 = sub_23F1217E8(&qword_256E04808);
  v79 = *(_QWORD *)(v80 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F24F1D8(v10);
  sub_23F1F7F38();
  sub_23F250804();
  sub_23F1BE1A0(a10, v11, type metadata accessor for ActionOutcome);
  v48 = (char *)sub_23F1DC0CC + 4 * word_23F278E22[sub_23F252270()];
  __asm { BR              X10 }
}

void sub_23F1DC0CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  sub_23F24ED68(v1);
  *(_BYTE *)(v3 - 152) = 0;
  sub_23F1F82BC();
  sub_23F250448();
  sub_23F24EE74((uint64_t)&unk_256E048A0);
  sub_23F17FC90();
  sub_23F15E44C(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 504) + 8));
  sub_23F24F0CC(v2);
  v4 = sub_23F2504F0();
  v5(v4);
  sub_23F24F920();
  sub_23F1313FC();
}

void ActionOutcome.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t);
  uint64_t v64[10];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;

  sub_23F131874();
  sub_23F251480(v13);
  v75 = sub_23F1217E8(&qword_256E048A8);
  v86 = *(_QWORD *)(v75 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F1A949C(v15, v64[0]);
  v74 = sub_23F1217E8(&qword_256E048B0);
  v85 = *(_QWORD *)(v74 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F24EEC8(v17, v64[0]);
  v73 = sub_23F1217E8(&qword_256E048B8);
  v84 = *(_QWORD *)(v73 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F17FBBC((uint64_t)v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v72 = sub_23F1217E8(&qword_256E048C0);
  v83 = *(_QWORD *)(v72 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F17FBBC((uint64_t)v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = sub_23F1217E8(&qword_256E048C8);
  v82 = *(_QWORD *)(v71 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F17FBBC((uint64_t)v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = sub_23F1217E8(&qword_256E048D0);
  v81 = *(_QWORD *)(v70 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F17FBBC((uint64_t)v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = sub_23F1217E8(&qword_256E048D8);
  v80 = *(_QWORD *)(v69 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F17FBBC((uint64_t)v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = sub_23F1217E8(&qword_256E048E0);
  v79 = *(_QWORD *)(v68 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F17FBBC((uint64_t)v64 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = sub_23F1217E8(&qword_256E048E8);
  v78 = *(_QWORD *)(v67 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F17FBBC((uint64_t)v64 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = sub_23F1217E8(&qword_256E048F0);
  v77 = *(_QWORD *)(v66 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F17FBBC((uint64_t)v64 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = sub_23F1217E8(&qword_256E048F8);
  v76 = *(_QWORD *)(v65 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F17FBBC((uint64_t)v64 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = sub_23F1217E8(&qword_256E04900);
  v88 = *(_QWORD *)(v90 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v36);
  v37 = sub_23F15E9EC();
  v87 = type metadata accessor for ActionOutcome(v37);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v39);
  v89 = (char *)v64 - v40;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F24F388();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F24F358();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F1A96CC();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v50);
  v92 = v11;
  sub_23F24ED3C(v11);
  sub_23F1F7F38();
  v91 = v12;
  sub_23F24F86C();
  if (!a10)
  {
    if (*(_QWORD *)(sub_23F24F7C8() + 16))
    {
      v51 = sub_23F25018C();
      sub_23F15E2D0(v51, v52, v53, v54, v55, v56);
      v58 = v57;
      v60 = v59;
      sub_23F1262C0();
      if (v58 == v60 >> 1)
        __asm { BR              X9 }
    }
    sub_23F15EDB8();
    sub_23F131B30();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F250A08();
    v61 = sub_23F24ECCC();
    sub_23F1A97D0(v61, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F15E96C();
    v62 = sub_23F2504FC();
    v63(v62);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v92);
  sub_23F24F9F8();
  sub_23F1313FC();
}

void sub_23F1DD3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v4 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v4)
    goto LABEL_6;
  sub_23F180250();
  if ((sub_23F126148() & 1) != 0)
    goto LABEL_6;
  if (v3 == 0xD000000000000012)
  {
    sub_23F24FBE8((uint64_t)"actionConfirmation");
    if (v4)
      goto LABEL_6;
  }
  if ((sub_23F126148() & 1) != 0)
    goto LABEL_6;
  if (v3 == 0xD000000000000012)
  {
    sub_23F24FBE8((uint64_t)"toolDisambiguation");
    if (v4)
      goto LABEL_6;
  }
  if ((sub_23F126148() & 1) != 0)
    goto LABEL_6;
  if (v3 == 0xD000000000000013)
  {
    sub_23F24FBE8((uint64_t)"parameterNeedsValue");
    if (v4)
      goto LABEL_6;
  }
  if ((sub_23F126148() & 1) != 0
    || v3 == 0xD000000000000015 && (sub_23F250764(), v4)
    || (sub_23F126148() & 1) != 0
    || v3 == 0xD000000000000017 && (sub_23F250764(), v4)
    || (sub_23F126148() & 1) != 0
    || v3 == 0xD000000000000013 && (sub_23F24FBE8((uint64_t)"parameterNotAllowed"), v4)
    || (sub_23F126148() & 1) != 0
    || v3 == 0xD00000000000001BLL && (sub_23F250764(), v4)
    || (sub_23F126148() & 1) != 0
    || v3 == 0xD000000000000011 && (sub_23F250764(), v4)
    || (sub_23F126148() & 1) != 0
    || v3 == 0xD000000000000013 && (sub_23F24FBE8((uint64_t)"valueDisambiguation"), v4)
    || (sub_23F126148() & 1) != 0
    || (v3 == 0x6572756C696166 ? (v5 = v2 == 0xE700000000000000) : (v5 = 0), v5))
  {
LABEL_6:
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F12612C();
}

uint64_t sub_23F1DD754(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1DD788 + 4 * byte_23F278E4E[a1]))(0x73736563637573, 0xE700000000000000);
}

unint64_t sub_23F1DD788()
{
  return 0xD000000000000012;
}

void sub_23F1DD868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ActionOutcome.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1DD87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ActionOutcome.encode(to:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_23F1DD894()
{
  sub_23F1F8640();
  return sub_23F2688B8();
}

uint64_t sub_23F1DD8BC()
{
  sub_23F1F8640();
  return sub_23F2688C4();
}

uint64_t sub_23F1DD8E4()
{
  sub_23F1F849C();
  return sub_23F2688B8();
}

uint64_t sub_23F1DD90C()
{
  sub_23F1F849C();
  return sub_23F2688C4();
}

uint64_t sub_23F1DD934()
{
  sub_23F1F83E8();
  return sub_23F2688B8();
}

uint64_t sub_23F1DD95C()
{
  sub_23F1F83E8();
  return sub_23F2688C4();
}

uint64_t sub_23F1DD984()
{
  sub_23F1F8424();
  return sub_23F2688B8();
}

uint64_t sub_23F1DD9AC()
{
  sub_23F1F8424();
  return sub_23F2688C4();
}

uint64_t sub_23F1DD9D4()
{
  sub_23F1F84D8();
  return sub_23F2688B8();
}

uint64_t sub_23F1DD9FC()
{
  sub_23F1F84D8();
  return sub_23F2688C4();
}

uint64_t sub_23F1DDA24()
{
  sub_23F1F858C();
  return sub_23F2688B8();
}

uint64_t sub_23F1DDA4C()
{
  sub_23F1F858C();
  return sub_23F2688C4();
}

uint64_t sub_23F1DDA74()
{
  sub_23F1F8550();
  return sub_23F2688B8();
}

uint64_t sub_23F1DDA9C()
{
  sub_23F1F8550();
  return sub_23F2688C4();
}

uint64_t sub_23F1DDAC4()
{
  sub_23F1F85C8();
  return sub_23F2688B8();
}

uint64_t sub_23F1DDAEC()
{
  sub_23F1F85C8();
  return sub_23F2688C4();
}

uint64_t sub_23F1DDB14()
{
  sub_23F1F8514();
  return sub_23F2688B8();
}

uint64_t sub_23F1DDB3C()
{
  sub_23F1F8514();
  return sub_23F2688C4();
}

uint64_t sub_23F1DDB64()
{
  sub_23F1F867C();
  return sub_23F2688B8();
}

uint64_t sub_23F1DDB8C()
{
  sub_23F1F867C();
  return sub_23F2688C4();
}

uint64_t sub_23F1DDBB4()
{
  sub_23F1F8604();
  return sub_23F2688B8();
}

uint64_t sub_23F1DDBDC()
{
  sub_23F1F8604();
  return sub_23F2688C4();
}

uint64_t sub_23F1DDC04()
{
  sub_23F1F8460();
  return sub_23F2688B8();
}

uint64_t sub_23F1DDC2C()
{
  sub_23F1F8460();
  return sub_23F2688C4();
}

void StatementOutcome.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  sub_23F131874();
  sub_23F250DF0();
  v12 = sub_23F1217E8(&qword_256E04940);
  v77 = *(_QWORD *)(v12 - 8);
  v78 = v12;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F15E9D0(v14, v49[0]);
  v15 = sub_23F1217E8(&qword_256E04948);
  v75 = *(_QWORD *)(v15 - 8);
  v76 = v15;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F17FFFC(v17, v49[0]);
  v18 = sub_23F1217E8(&qword_256E04950);
  v73 = *(_QWORD *)(v18 - 8);
  v74 = v18;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F24EEC8(v20, v49[0]);
  v72 = sub_23F1217E8(&qword_256E04958);
  v71 = *(_QWORD *)(v72 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v21);
  v70 = (char *)v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for ParameterCandidatesNotFound(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F17FBBC((uint64_t)v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = sub_23F1217E8(&qword_256E04960);
  v67 = *(_QWORD *)(v69 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v25);
  v66 = (char *)v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for ParameterNotAllowed(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F17FBBC((uint64_t)v49 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = sub_23F1217E8(&qword_256E04968);
  v64 = *(_QWORD *)(v65 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F17FBBC((uint64_t)v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = sub_23F1217E8(&qword_256E04970);
  v61 = *(_QWORD *)(v62 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v31);
  v60 = (char *)v49 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for ParameterConfirmation(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F17FBBC((uint64_t)v49 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = sub_23F1217E8(&qword_256E04978);
  v57 = *(_QWORD *)(v59 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v35);
  v56 = (char *)v49 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for ParameterNeedsValue(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F17FBBC((uint64_t)v49 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = sub_23F1217E8(&qword_256E04980);
  v53 = *(_QWORD *)(v54 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F17FBBC((uint64_t)v49 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = sub_23F1217E8(&qword_256E04988);
  v51 = *(_QWORD *)(v52 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F17FBBC((uint64_t)v49 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v50 = sub_23F1217E8(&qword_256E04990);
  v49[1] = *(_QWORD *)(v50 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v43);
  type metadata accessor for ActionSuccess(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v44);
  v45 = sub_23F17FFA8();
  type metadata accessor for StatementOutcome(v45);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F15E50C();
  v80 = sub_23F1217E8(&qword_256E04998);
  v79 = *(_QWORD *)(v80 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F24F1D8(v10);
  sub_23F1F83E8();
  sub_23F250804();
  sub_23F1BE1A0(a10, v11, type metadata accessor for StatementOutcome);
  v48 = (char *)sub_23F1DE100 + 4 * word_23F278E5A[sub_23F252270()];
  __asm { BR              X10 }
}

void sub_23F1DE100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  sub_23F24ED68(v1);
  *(_BYTE *)(v3 - 152) = 0;
  sub_23F1F867C();
  sub_23F250448();
  sub_23F24EE74((uint64_t)&unk_256E048A0);
  sub_23F17FC90();
  sub_23F15E44C(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 504) + 8));
  sub_23F24F0CC(v2);
  v4 = sub_23F2504F0();
  v5(v4);
  sub_23F24F920();
  sub_23F1313FC();
}

void StatementOutcome.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t);
  uint64_t v64[10];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;

  sub_23F131874();
  sub_23F251480(v13);
  v75 = sub_23F1217E8(&qword_256E04A00);
  v86 = *(_QWORD *)(v75 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F1A949C(v15, v64[0]);
  v74 = sub_23F1217E8(&qword_256E04A08);
  v85 = *(_QWORD *)(v74 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F24EEC8(v17, v64[0]);
  v73 = sub_23F1217E8(&qword_256E04A10);
  v84 = *(_QWORD *)(v73 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F17FBBC((uint64_t)v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v72 = sub_23F1217E8(&qword_256E04A18);
  v83 = *(_QWORD *)(v72 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F17FBBC((uint64_t)v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = sub_23F1217E8(&qword_256E04A20);
  v82 = *(_QWORD *)(v71 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F17FBBC((uint64_t)v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = sub_23F1217E8(&qword_256E04A28);
  v81 = *(_QWORD *)(v70 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F17FBBC((uint64_t)v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = sub_23F1217E8(&qword_256E04A30);
  v80 = *(_QWORD *)(v69 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F17FBBC((uint64_t)v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = sub_23F1217E8(&qword_256E04A38);
  v79 = *(_QWORD *)(v68 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F17FBBC((uint64_t)v64 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = sub_23F1217E8(&qword_256E04A40);
  v78 = *(_QWORD *)(v67 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F17FBBC((uint64_t)v64 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = sub_23F1217E8(&qword_256E04A48);
  v77 = *(_QWORD *)(v66 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F17FBBC((uint64_t)v64 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = sub_23F1217E8(&qword_256E04A50);
  v76 = *(_QWORD *)(v65 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F17FBBC((uint64_t)v64 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = sub_23F1217E8(&qword_256E04A58);
  v88 = *(_QWORD *)(v90 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v36);
  v37 = sub_23F15E9EC();
  v87 = type metadata accessor for StatementOutcome(v37);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v39);
  v89 = (char *)v64 - v40;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F24F388();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F24F358();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F1A96CC();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v50);
  v92 = v11;
  sub_23F24ED3C(v11);
  sub_23F1F83E8();
  v91 = v12;
  sub_23F24F86C();
  if (!a10)
  {
    if (*(_QWORD *)(sub_23F24F7C8() + 16))
    {
      v51 = sub_23F25018C();
      sub_23F15E2D0(v51, v52, v53, v54, v55, v56);
      v58 = v57;
      v60 = v59;
      sub_23F1262C0();
      if (v58 == v60 >> 1)
        __asm { BR              X9 }
    }
    sub_23F15EDB8();
    sub_23F131B30();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F250A08();
    v61 = sub_23F24ECCC();
    sub_23F1A97D0(v61, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F15E96C();
    v62 = sub_23F2504FC();
    v63(v62);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v92);
  sub_23F24F9F8();
  sub_23F1313FC();
}

void sub_23F1DF410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  StatementOutcome.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1DF424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  StatementOutcome.encode(to:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t StatementID.index.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t StatementID.index.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*StatementID.index.modify())()
{
  return nullsub_1;
}

void StatementID.name.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void StatementID.name.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15E844();
  sub_23F25039C();
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v0;
  sub_23F12612C();
}

uint64_t (*StatementID.name.modify())()
{
  return nullsub_1;
}

uint64_t StatementID.init(integerLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  return result;
}

BOOL static StatementID.< infix(_:_:)(_DWORD *a1, _DWORD *a2)
{
  return *a1 < *a2;
}

uint64_t StatementID.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 16))
    sub_23F2681BC();
  sub_23F26851C();
  swift_bridgeObjectRelease();
  sub_23F250FC0();
  v3 = v1;
  sub_23F268780();
  sub_23F2681BC();
  sub_23F1262C0();
  sub_23F2681BC();
  sub_23F1318B8();
  sub_23F24F7BC();
  return v3;
}

void StatementID.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_23F268858();
  sub_23F26884C();
  if (v1)
  {
    sub_23F1263B8();
    sub_23F14C64C();
    sub_23F2681A4();
    sub_23F250908();
  }
  else
  {
    sub_23F12612C();
  }
}

uint64_t sub_23F1DF618(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7865646E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1DF6EC(char a1)
{
  if ((a1 & 1) != 0)
    return 1701667182;
  else
    return 0x7865646E69;
}

uint64_t sub_23F1DF718()
{
  char *v0;

  return sub_23F1DF6EC(*v0);
}

uint64_t sub_23F1DF720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1DF618(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1DF744()
{
  sub_23F1F86B8();
  return sub_23F2688B8();
}

uint64_t sub_23F1DF76C()
{
  sub_23F1F86B8();
  return sub_23F2688C4();
}

void StatementID.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256E04A60);
  sub_23F12611C();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1319C8();
  sub_23F24F1D8(v4);
  sub_23F1F86B8();
  sub_23F24FDB4();
  sub_23F26875C();
  if (!v0)
  {
    sub_23F251334();
    sub_23F15EA14();
  }
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F1A9634();
  sub_23F1313FC();
}

void StatementID.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_23F1317B8();
  sub_23F268858();
  sub_23F26884C();
  if (v1)
  {
    sub_23F1263B8();
    sub_23F2681A4();
    sub_23F1318B8();
  }
  sub_23F1318A0();
  sub_23F131A5C();
}

void StatementID.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_23F131874();
  a22 = v27;
  a23 = v28;
  sub_23F18AC78();
  sub_23F1217E8(&qword_256E04A70);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1F86B8();
  sub_23F251E60();
  sub_23F15E564();
  if (v24)
  {
    sub_23F131BF4();
  }
  else
  {
    a13 = 0;
    sub_23F250F18();
    v32 = sub_23F2686C0();
    sub_23F251314();
    sub_23F250F18();
    v33 = sub_23F268654();
    v35 = v34;
    sub_23F15E444((uint64_t)v31, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
    sub_23F1315C4();
    sub_23F14C66C();
    *(_DWORD *)v25 = v32;
    *(_QWORD *)(v25 + 8) = v33;
    *(_QWORD *)(v25 + 16) = v35;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v23);
  }
  swift_bridgeObjectRelease();
  sub_23F15E830();
  sub_23F1313FC();
}

#error "23F1DF9DC: call analysis failed (funcsize=5)"

void sub_23F1DF9E8()
{
  StatementID.encode(to:)();
}

uint64_t sub_23F1DFA08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_23F268834();
  sub_23F268858();
  sub_23F26884C();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23F2681A4();
    swift_bridgeObjectRelease();
  }
  return sub_23F268864();
}

uint64_t sub_23F1DFA90@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  return StatementID.init(integerLiteral:)(*a1, a2);
}

uint64_t sub_23F1DFA9C(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  return sub_23F1DFAD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23F1DFAA8);
}

BOOL sub_23F1DFAA8(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return a4 >= a1;
}

uint64_t sub_23F1DFAB4(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  return sub_23F1DFAD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23F1DFAC0);
}

BOOL sub_23F1DFAC0(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return a1 >= a4;
}

uint64_t sub_23F1DFACC(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  return sub_23F1DFAD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23F1DFAF8);
}

uint64_t sub_23F1DFAD8(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, *((_QWORD *)a1 + 1), *((_QWORD *)a1 + 2), *a2, *((_QWORD *)a2 + 1), *((_QWORD *)a2 + 2));
}

BOOL sub_23F1DFAF8(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return a4 < a1;
}

uint64_t ActionSuccess.returnValue.getter()
{
  return sub_23F1EF104();
}

uint64_t ActionSuccess.returnValue.setter(uint64_t a1)
{
  return sub_23F1EF140(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t (*ActionSuccess.returnValue.modify())()
{
  return nullsub_1;
}

uint64_t ActionSuccess.appLaunched.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionSuccess(0) + 24));
}

void ActionSuccess.appLaunched.setter(uint64_t a1)
{
  sub_23F1DFB5C(a1, type metadata accessor for ActionSuccess);
}

void sub_23F1DFB5C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(sub_23F24F690(a1, a2) + 24)) = a1;
  sub_23F126078();
}

void ActionSuccess.appLaunched.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for ActionSuccess(0) + 24);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v3;
  sub_23F126078();
}

uint64_t sub_23F1DFBC0(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)result + *(int *)(result + 8)) = *(_BYTE *)(result + 12);
  return result;
}

void ActionSuccess.undoContext.getter()
{
  sub_23F1C0B20(type metadata accessor for ActionSuccess);
}

void ActionSuccess.undoContext.setter(uint64_t a1)
{
  sub_23F1C0B64(a1, type metadata accessor for ActionSuccess, &qword_256DFEBA0);
}

uint64_t (*ActionSuccess.undoContext.modify())()
{
  type metadata accessor for ActionSuccess(0);
  sub_23F180384();
  return nullsub_1;
}

void ActionSuccess.didShowInAppResult.setter(uint64_t a1)
{
  sub_23F1DFB5C(a1, type metadata accessor for ActionSuccess);
}

uint64_t (*ActionSuccess.didShowInAppResult.modify())()
{
  type metadata accessor for ActionSuccess(0);
  sub_23F18030C();
  return nullsub_1;
}

void ActionSuccess.init(returnValue:didShowInAppResult:undoContext:)(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_23F2523B0();
  v5 = a2 + *(int *)(v4 + 20);
  v6 = type metadata accessor for ActionSuccess.UndoContext(0);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v5, 1, 1, v6);
  v7 = sub_23F125F84();
  v8 = sub_23F17FEF0(v7);
  *(_BYTE *)(a2 + *(int *)(v4 + 24)) = a1;
  sub_23F2522F0(v8, v9, &qword_256DFEBA0);
  sub_23F131ABC();
}

void ActionSuccess.init(returnValue:appLaunched:undoContext:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  sub_23F125F3C();
  v4 = v3;
  HIDWORD(v24) = v5;
  v7 = v6;
  v25 = v8;
  v9 = sub_23F2523B0();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15E660();
  sub_23F250D44();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F125F84();
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F1319C8();
  v15 = sub_23F250574();
  sub_23F2506C8(v15, v16, v17);
  sub_23F1752C4(v4, (uint64_t)v13, &qword_256DFEBA0);
  v18 = v2 + *(int *)(v9 + 20);
  v19 = type metadata accessor for ActionSuccess.UndoContext(0);
  sub_23F126158(v18, v20, v21, v19);
  sub_23F2506C8(v2, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  *(_BYTE *)(v2 + *(int *)(v9 + 24)) = BYTE4(v24);
  sub_23F1F86F4((uint64_t)v13, v18, &qword_256DFEBA0);
  sub_23F1BE0F4(v2, v25, type metadata accessor for ActionSuccess);
  v22 = sub_23F2504FC();
  sub_23F125E40(v22, v23);
  sub_23F15E44C(v7, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F125EFC();
}

void ActionSuccess.init(returnValue:appLaunched:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F18039C();
  a17 = v20;
  a18 = v21;
  v23 = v22;
  sub_23F1217E8(&qword_256DFEBA0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23F125F84();
  sub_23F126048();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F126058();
  sub_23F126250(v18, v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16));
  v29 = type metadata accessor for ActionSuccess.UndoContext(0);
  sub_23F126158((uint64_t)v26, v30, v31, v29);
  ActionSuccess.init(returnValue:appLaunched:undoContext:)();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v27);
  sub_23F131680();
}

uint64_t ActionSuccess.UndoContext.token.getter()
{
  return sub_23F1EF104();
}

uint64_t ActionSuccess.UndoContext.token.setter(uint64_t a1)
{
  return sub_23F1EF140(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*ActionSuccess.UndoContext.token.modify())()
{
  return nullsub_1;
}

void ActionSuccess.UndoContext.bundleIdentifier.getter()
{
  sub_23F1B7BE8(type metadata accessor for ActionSuccess.UndoContext);
}

void ActionSuccess.UndoContext.bundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  sub_23F1D034C(a1, a2, type metadata accessor for ActionSuccess.UndoContext);
}

uint64_t (*ActionSuccess.UndoContext.bundleIdentifier.modify())()
{
  type metadata accessor for ActionSuccess.UndoContext(0);
  sub_23F180384();
  return nullsub_1;
}

void ActionSuccess.UndoContext.actionDescription.getter()
{
  sub_23F1D70D0(type metadata accessor for ActionSuccess.UndoContext);
}

void ActionSuccess.UndoContext.actionDescription.setter(uint64_t a1, uint64_t a2)
{
  sub_23F1D8E28(a1, a2, type metadata accessor for ActionSuccess.UndoContext);
}

uint64_t (*ActionSuccess.UndoContext.actionDescription.modify())()
{
  sub_23F2523B8();
  sub_23F18030C();
  return nullsub_1;
}

void ActionSuccess.UndoContext.init(token:bundleIdentifier:actionDescription:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v10 = sub_23F131B8C();
  sub_23F250954(v10);
  v11 = type metadata accessor for ActionSuccess.UndoContext(0);
  v12 = (_QWORD *)(a5 + *(int *)(v11 + 20));
  *v12 = a1;
  v12[1] = a2;
  v13 = (_QWORD *)(a5 + *(int *)(v11 + 24));
  *v13 = a3;
  v13[1] = a4;
  sub_23F131ABC();
}

void static ActionSuccess.UndoContext.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  if ((sub_23F1A9880() & 1) != 0
    && ((v0 = sub_23F2523B8(), sub_23F24F08C(*(int *)(v0 + 20)), v3) ? (v3 = v1 == v2) : (v3 = 0),
        (v3 || (sub_23F126148(), sub_23F15E5CC(), (v4 & 1) != 0))
     && ((sub_23F24F08C(*(int *)(v0 + 24)), v3) ? (v7 = v5 == v6) : (v7 = 0), !v7)))
  {
    sub_23F15E7DC();
  }
  else
  {
    sub_23F12612C();
  }
}

uint64_t sub_23F1E001C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E656B6F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023F293AE0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023F294C00)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F1E015C(char a1)
{
  if (!a1)
    return 0x6E656B6F74;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0xD000000000000011;
}

uint64_t sub_23F1E01B4()
{
  char *v0;

  return sub_23F1E015C(*v0);
}

uint64_t sub_23F1E01BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E001C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1E01E0()
{
  sub_23F1F8720();
  return sub_23F2688B8();
}

uint64_t sub_23F1E0208()
{
  sub_23F1F8720();
  return sub_23F2688C4();
}

void ActionSuccess.UndoContext.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E04A78);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F1F8720();
  sub_23F18A998();
  v5[15] = 0;
  sub_23F131B8C();
  sub_23F12E488((uint64_t)&qword_256DFEF10);
  sub_23F126188();
  if (!v0)
  {
    type metadata accessor for ActionSuccess.UndoContext(0);
    sub_23F24F18C();
    v5[13] = 2;
    sub_23F24F308();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void ActionSuccess.UndoContext.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23F131874();
  v4 = v3;
  v21 = v5;
  sub_23F131B8C();
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F17FBC8(v7, v21);
  v24 = sub_23F1217E8(&qword_256E04A88);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F1A9864();
  v10 = type metadata accessor for ActionSuccess.UndoContext(v9);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F15E50C();
  sub_23F12545C(v4, v4[3]);
  sub_23F1F8720();
  sub_23F250D14();
  sub_23F24EEA4();
  if (v0)
  {
    sub_23F250D3C();
  }
  else
  {
    sub_23F12E488((uint64_t)&qword_256DFEF20);
    sub_23F1A9D04();
    sub_23F17FE48();
    sub_23F250DD4(v2, v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
    sub_23F251314();
    v12 = sub_23F268684();
    v13 = (uint64_t *)(v2 + *(int *)(v10 + 20));
    *v13 = v12;
    v13[1] = v14;
    sub_23F2512D4();
    v15 = sub_23F250B24();
    v16 = sub_23F15EAE0();
    v18 = v17;
    v19(v16, v24);
    v20 = (uint64_t *)*(int *)(v10 + 24);
    *v20 = v15;
    v20[1] = v18;
    sub_23F24F0B8(0, v22);
    sub_23F250D3C();
    sub_23F24F1B8(0);
  }
  sub_23F251DB4();
  sub_23F1313FC();
}

uint64_t sub_23F1E0520(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x61566E7275746572 && a2 == 0xEB0000000065756CLL;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x746E6F436F646E75 && a2 == 0xEB00000000747865;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x800000023F294C20)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F1E069C(char a1)
{
  if (!a1)
    return 0x61566E7275746572;
  if (a1 == 1)
    return 0x746E6F436F646E75;
  return 0xD000000000000012;
}

void sub_23F1E0708()
{
  ActionSuccess.UndoContext.init(from:)();
}

void sub_23F1E071C()
{
  ActionSuccess.UndoContext.encode(to:)();
}

uint64_t sub_23F1E0734()
{
  char *v0;

  return sub_23F1E069C(*v0);
}

uint64_t sub_23F1E073C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E0520(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1E0760()
{
  sub_23F1F875C();
  return sub_23F2688B8();
}

uint64_t sub_23F1E0788()
{
  sub_23F1F875C();
  return sub_23F2688C4();
}

void ActionSuccess.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v6[16];

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E04A90);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F1F875C();
  sub_23F18A998();
  v6[15] = 0;
  sub_23F125F84();
  sub_23F12E488((uint64_t)&qword_256DFE598);
  sub_23F126188();
  if (!v0)
  {
    type metadata accessor for ActionSuccess(0);
    v5 = sub_23F2515B0();
    type metadata accessor for ActionSuccess.UndoContext(v5);
    sub_23F12E488((uint64_t)&unk_256E04AA0);
    sub_23F17FAD8();
    v6[13] = 2;
    sub_23F18AC50();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void ActionSuccess.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F131874();
  v33 = v1;
  v4 = v3;
  v26 = v5;
  sub_23F1217E8(&qword_256DFEBA0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F125F84();
  sub_23F251AAC(v8);
  v27 = v9;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F17FBC8(v11, v25);
  v32 = sub_23F1217E8(&qword_256E04AA8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F15E9EC();
  v14 = type metadata accessor for ActionSuccess(v13);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F15E524();
  v17 = v0 + *(int *)(v16 + 20);
  v18 = type metadata accessor for ActionSuccess.UndoContext(0);
  v34 = v17;
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v17, 1, 1, v18);
  sub_23F12545C(v4, v4[3]);
  sub_23F1F875C();
  v30 = v2;
  sub_23F251E18();
  sub_23F18037C();
  if (v1)
  {
    sub_23F251448();
    sub_23F125E40(v34, &qword_256DFEBA0);
  }
  else
  {
    v33 = v14;
    v20 = v27;
    v19 = (uint64_t)v28;
    sub_23F12E488((uint64_t)&qword_256DFE5B8);
    sub_23F1A9D04();
    v21 = v29;
    sub_23F17FE48();
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
    v25 = v0;
    v22(v0, v31, v21);
    sub_23F1A9BB8();
    sub_23F12E488((uint64_t)&unk_256E04AB0);
    sub_23F268678();
    sub_23F1F86F4(v19, v34, &qword_256DFEBA0);
    sub_23F2512D4();
    LOBYTE(v19) = sub_23F268690();
    sub_23F250358();
    v24 = v25;
    v23 = v26;
    *(_BYTE *)(v25 + *(int *)(v33 + 24)) = v19 & 1;
    sub_23F24F0B8(v24, v23);
    sub_23F251448();
    sub_23F24F1B8(v24);
  }
  sub_23F251DB4();
  sub_23F1313FC();
}

void sub_23F1E0B58()
{
  ActionSuccess.init(from:)();
}

void sub_23F1E0B6C()
{
  ActionSuccess.encode(to:)();
}

void static SystemRequirement.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v2 = *a1;
  v3 = *((unsigned __int8 *)a1 + 16);
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  if (*((_BYTE *)a1 + 16))
  {
    if (v3 != 1)
      __asm { BR              X9 }
    if (*(_BYTE *)(a2 + 16) == 1)
    {
      v6 = sub_23F250914();
      sub_23F13725C(v6, v7, v8);
      v9 = sub_23F2505B0();
      sub_23F13725C(v9, v10, 1);
      goto LABEL_8;
    }
LABEL_7:
    sub_23F250DE4();
    sub_23F135CC8(v11, v12, v13);
    v14 = sub_23F1317E0();
    sub_23F13725C(v14, v15, v3);
    sub_23F250DE4();
    sub_23F13725C(v16, v17, v18);
    goto LABEL_8;
  }
  if (*(_BYTE *)(a2 + 16))
  {
    sub_23F1315C4();
    goto LABEL_7;
  }
  if (v2 != v4 || a1[1] != v5)
    sub_23F126148();
  sub_23F135CC8(v4, v5, 0);
  sub_23F2501EC();
  sub_23F135CC8(v20, v21, v22);
  sub_23F2501EC();
  sub_23F13725C(v23, v24, v25);
  sub_23F13725C(v4, v5, 0);
LABEL_8:
  sub_23F131ABC();
}

BOOL static AppRequirement.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23F1E0D4C(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v7;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023F294C40 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x6975716552707061 && a2 == 0xEE00746E656D6572;
    if (v5 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x800000023F294C60 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x726F707075736E75 && a2 == 0xEB00000000646574)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_23F1E0F30(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F1E0F68 + 4 * byte_23F278E8B[a1]))(0xD000000000000011, 0x800000023F294C40);
}

uint64_t sub_23F1E0F68()
{
  return 0x6975716552707061;
}

uint64_t sub_23F1E0F8C(uint64_t a1)
{
  return a1 + 5;
}

uint64_t sub_23F1E0FA4()
{
  return 0x726F707075736E75;
}

uint64_t sub_23F1E0FC4()
{
  sub_23F1F8888();
  return sub_23F2688B8();
}

uint64_t sub_23F1E0FEC()
{
  sub_23F1F8888();
  return sub_23F2688C4();
}

uint64_t sub_23F1E1014()
{
  unsigned __int8 *v0;

  return sub_23F1E0F30(*v0);
}

uint64_t sub_23F1E101C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E0D4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1E1040()
{
  sub_23F1F8798();
  return sub_23F2688B8();
}

uint64_t sub_23F1E1068()
{
  sub_23F1F8798();
  return sub_23F2688C4();
}

uint64_t sub_23F1E1090()
{
  sub_23F1F8810();
  return sub_23F2688B8();
}

uint64_t sub_23F1E10B8()
{
  sub_23F1F8810();
  return sub_23F2688C4();
}

uint64_t sub_23F1E10E0()
{
  sub_23F1F8900();
  return sub_23F2688B8();
}

uint64_t sub_23F1E1108()
{
  sub_23F1F8900();
  return sub_23F2688C4();
}

uint64_t sub_23F1E1130()
{
  sub_23F1F87D4();
  return sub_23F2688B8();
}

uint64_t sub_23F1E1158()
{
  sub_23F1F87D4();
  return sub_23F2688C4();
}

void ActionRequirement.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F131874();
  v2 = v1;
  sub_23F1217E8(&qword_256E04AB8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F24F598(v4, v11);
  sub_23F1217E8(&qword_256E04AC0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F24ED84(v6, v12);
  sub_23F1217E8(&qword_256E04AC8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15E524();
  sub_23F1217E8(&qword_256E04AD0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F15EB6C();
  sub_23F1217E8(&qword_256E04AD8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F250D84();
  v10 = *(unsigned __int8 *)(v0 + 16);
  sub_23F1A968C(v2);
  sub_23F1F8798();
  sub_23F24F864();
  __asm { BR              X10 }
}

void sub_23F1E12CC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  void (*v6)(uint64_t);

  *(_BYTE *)(v1 - 104) = 0;
  sub_23F1F8900();
  sub_23F15E6E8();
  v2 = *(_QWORD *)(v1 - 208);
  *(_QWORD *)(v1 - 104) = *(_QWORD *)(v1 - 128);
  *(_QWORD *)(v1 - 96) = v2;
  *(_BYTE *)(v1 - 88) = v0;
  sub_23F1F893C();
  sub_23F1AE450();
  v3 = sub_23F2511E8();
  v4(v3);
  v5 = sub_23F24FBB0();
  v6(v5);
  sub_23F24F920();
  sub_23F1313FC();
}

void ActionRequirement.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F131874();
  sub_23F251470(v2);
  v3 = sub_23F1217E8(&qword_256E04B20);
  sub_23F251AAC(v3);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F16BC34(v5, v24);
  sub_23F1217E8(&qword_256E04B28);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F24ED20(v7, v25);
  sub_23F1217E8(&qword_256E04B30);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F24ED84(v9, v26);
  sub_23F1217E8(&qword_256E04B38);
  sub_23F12611C();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15E50C();
  sub_23F1217E8(&qword_256E04B40);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F15E524();
  sub_23F24F1D8(v0);
  sub_23F1F8798();
  sub_23F2513C8();
  sub_23F24FFB4();
  if (!v1)
  {
    v12 = sub_23F25185C();
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      v14 = *(unsigned __int8 *)(v12 + 32);
      sub_23F15E2D0(1, v13, v12, v12 + 32, 0, (2 * v13) | 1);
      v16 = v15;
      v18 = v17;
      sub_23F1262C0();
      if (v16 == v18 >> 1)
        __asm { BR              X9 }
    }
    sub_23F15EDB8();
    sub_23F131B30();
    v20 = v19;
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F24F960();
    *v20 = &type metadata for ActionRequirement;
    sub_23F268648();
    v21 = sub_23F24ECCC();
    sub_23F1A97D0(v21, *MEMORY[0x24BEE26D0]);
    sub_23F251E10();
    swift_unknownObjectRelease();
    sub_23F250E38();
    v22 = sub_23F2504D8();
    v23(v22);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1E1700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 - 112) = 1;
  sub_23F1F8888();
  v3 = *(_QWORD *)(v2 - 168);
  sub_23F2513AC();
  sub_23F24FFEC();
  if (v0)
  {
    sub_23F24F164();
    sub_23F250E38();
    sub_23F15EB40();
    JUMPOUT(0x23F1E16E8);
  }
  sub_23F1F89B4();
  sub_23F17FE68();
  v4 = *(_QWORD *)(v2 - 72);
  sub_23F15E694(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8));
  sub_23F24F164();
  sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  *(_OWORD *)v1 = *(unsigned __int8 *)(v2 - 112);
  *(_BYTE *)(v1 + 16) = 64;
  JUMPOUT(0x23F1E16ECLL);
}

void sub_23F1E1750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 - 128) = v1;
  sub_23F251F10();
  sub_23F1F8810();
  v4 = *(_QWORD *)(v3 - 152);
  sub_23F2513AC();
  sub_23F24FFEC();
  if (v0)
  {
    sub_23F251D84();
    sub_23F250E38();
    sub_23F250180();
    JUMPOUT(0x23F1E16E8);
  }
  sub_23F1F8978();
  sub_23F17FE68();
  v5 = *(_QWORD *)(v3 - 72);
  sub_23F15E444(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 176) + 8));
  sub_23F251D84();
  sub_23F17FF08(v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  JUMPOUT(0x23F1E19A4);
}

void sub_23F1E179C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 112) = 3;
  sub_23F1F87D4();
  v4 = *(_QWORD *)(v3 - 160);
  sub_23F24FFEC();
  if (v0)
  {
    sub_23F15EB1C();
    sub_23F251450();
    JUMPOUT(0x23F1E16E8);
  }
  sub_23F1A977C(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 184) + 8));
  sub_23F15EB1C();
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 72) + 8));
  *(_OWORD *)v2 = 0u;
  *(_BYTE *)(v2 + 16) = -64;
  JUMPOUT(0x23F1E16ECLL);
}

void sub_23F1E19B0()
{
  ActionRequirement.init(from:)();
}

void sub_23F1E19C4()
{
  ActionRequirement.encode(to:)();
}

uint64_t (*SystemRequirement.ProtectedAppRequest.bundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1E19F0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023F293AE0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_23F1E1A74()
{
  return 0xD000000000000010;
}

uint64_t sub_23F1E1A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E19F0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1E1ABC()
{
  sub_23F1F8A2C();
  return sub_23F2688B8();
}

uint64_t sub_23F1E1AE4()
{
  sub_23F1F8A2C();
  return sub_23F2688C4();
}

void SystemRequirement.ProtectedAppRequest.encode(to:)()
{
  sub_23F1EBEC8();
}

void SystemRequirement.ProtectedAppRequest.init(from:)()
{
  sub_23F1EBFA0();
}

void sub_23F1E1B6C()
{
  SystemRequirement.ProtectedAppRequest.init(from:)();
}

void sub_23F1E1B80()
{
  SystemRequirement.ProtectedAppRequest.encode(to:)();
}

uint64_t sub_23F1E1B94(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000022 && a2 == 0x800000023F294C80 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x800000023F294CB0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23F1E1C7C()
{
  return 0xD000000000000022;
}

uint64_t sub_23F1E1CB0()
{
  sub_23F1F8AE0();
  return sub_23F2688B8();
}

uint64_t sub_23F1E1CD8()
{
  sub_23F1F8AE0();
  return sub_23F2688C4();
}

unint64_t sub_23F1E1D00()
{
  return sub_23F1E1C7C();
}

uint64_t sub_23F1E1D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E1B94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1E1D2C()
{
  sub_23F1F8A68();
  return sub_23F2688B8();
}

uint64_t sub_23F1E1D54()
{
  sub_23F1F8A68();
  return sub_23F2688C4();
}

uint64_t sub_23F1E1D7C()
{
  sub_23F1F8AA4();
  return sub_23F2688B8();
}

uint64_t sub_23F1E1DA4()
{
  sub_23F1F8AA4();
  return sub_23F2688C4();
}

void SystemRequirement.AuthenticationRequest.AuthenticationLevel.encode(to:)()
{
  char *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  _QWORD v14[4];
  uint64_t v15;
  uint64_t v16;

  sub_23F131874();
  v16 = v1;
  v3 = v2;
  v4 = sub_23F1217E8(&qword_256E04B78);
  v14[2] = *(_QWORD *)(v4 - 8);
  v14[3] = v4;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1316E4();
  v6 = sub_23F1217E8(&qword_256E04B80);
  v14[0] = *(_QWORD *)(v6 - 8);
  v14[1] = v6;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15EB6C();
  v15 = *(_QWORD *)(sub_23F1217E8(&qword_256E04B88) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v0;
  sub_23F24FC14(v3);
  sub_23F1F8A68();
  sub_23F24FDB4();
  if ((v11 & 1) != 0)
  {
    sub_23F1F8AA4();
    sub_23F24EE10();
    v12 = sub_23F2500BC();
  }
  else
  {
    sub_23F1F8AE0();
    sub_23F24EE10();
    v12 = sub_23F24FA10();
  }
  v13(v12);
  sub_23F15E588((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  sub_23F251E48();
  sub_23F1313FC();
}

void _s16IntelligenceFlow14MessagePayloadO21ClientUndoRedoRequestV0F9OperationO9hashValueSivg_0()
{
  sub_23F1317B8();
  sub_23F15EA08();
  sub_23F1318A0();
  sub_23F1318E4();
}

void SystemRequirement.AuthenticationRequest.AuthenticationLevel.init(from:)()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F131874();
  sub_23F2512B8(v3);
  v31 = sub_23F1217E8(&qword_256E04BA8);
  v33 = *(_QWORD *)(v31 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F18ABFC(v5, v29[0]);
  v32 = sub_23F1217E8(&qword_256E04BB0);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F15E524();
  sub_23F1217E8(&qword_256E04BB8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F24ED3C(v2);
  sub_23F1F8A68();
  v10 = v34;
  sub_23F15E564();
  if (v10)
    goto LABEL_7;
  sub_23F24F6CC();
  sub_23F25129C();
  if (!v11
    || (v29[0] = 0,
        v12 = sub_23F24F368(),
        v18 = sub_23F15E2D0(v12, v13, v14, v15, v16, v17),
        v20 = v19,
        v22 = v21,
        sub_23F15EB24(),
        v20 != v22 >> 1))
  {
    sub_23F15EDB8();
    sub_23F131B30();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F250EB8();
    sub_23F2502A0((uint64_t)&type metadata for SystemRequirement.AuthenticationRequest.AuthenticationLevel);
    v24 = sub_23F15E6B4();
    sub_23F24EF6C(v24, *MEMORY[0x24BEE26D0]);
    sub_23F2519E0();
    sub_23F15E96C();
    v25 = sub_23F2500C8();
    v26(v25);
    v2 = v30;
LABEL_7:
    v27 = (uint64_t)v2;
    goto LABEL_8;
  }
  if ((v2 & 1) != 0)
  {
    sub_23F250EFC();
    sub_23F1F8AA4();
    sub_23F24F3C4();
    v23 = v34;
    sub_23F250DC0();
    sub_23F2502BC();
    sub_23F15E96C();
    sub_23F15E588(v18, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    LOBYTE(v2) = v32;
  }
  else
  {
    sub_23F1F8AE0();
    sub_23F24F538();
    v28 = v34;
    sub_23F250DC0();
    sub_23F24F9F0(v1, *(uint64_t (**)(uint64_t, _QWORD))(v29[1] + 8));
    sub_23F15E96C();
    sub_23F15E7D4((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
  }
  *v0 = (_BYTE)v2;
  v27 = (uint64_t)v30;
LABEL_8:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v27);
  sub_23F24F9F8();
  sub_23F1313FC();
}

void sub_23F1E21B8()
{
  SystemRequirement.AuthenticationRequest.AuthenticationLevel.init(from:)();
}

void sub_23F1E21CC()
{
  SystemRequirement.AuthenticationRequest.AuthenticationLevel.encode(to:)();
}

void SystemRequirement.AuthenticationRequest.authenticationLevel.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SystemRequirement.AuthenticationRequest.authenticationLevel.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SystemRequirement.AuthenticationRequest.authenticationLevel.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::SystemRequirement::AuthenticationRequest __swiftcall SystemRequirement.AuthenticationRequest.init(authenticationLevel:)(IntelligenceFlow::SystemRequirement::AuthenticationRequest authenticationLevel)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)authenticationLevel.authenticationLevel;
  return authenticationLevel;
}

uint64_t sub_23F1E2218(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000013 && a2 == 0x800000023F294CE0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_23F1E229C()
{
  return 0xD000000000000013;
}

uint64_t sub_23F1E22BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E2218(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1E22E4()
{
  sub_23F1F8B1C();
  return sub_23F2688B8();
}

uint64_t sub_23F1E230C()
{
  sub_23F1F8B1C();
  return sub_23F2688C4();
}

void SystemRequirement.AuthenticationRequest.encode(to:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F131874();
  sub_23F2519E8();
  sub_23F1217E8(&qword_256E04BC0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F126058();
  sub_23F18AA80(v0);
  sub_23F1F8B1C();
  sub_23F18A998();
  sub_23F1F8B58();
  sub_23F24F614();
  sub_23F17FF08(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void SystemRequirement.AuthenticationRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;

  sub_23F131874();
  a22 = v27;
  a23 = v28;
  sub_23F24F910();
  sub_23F1217E8(&qword_256E04BD8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1F8B1C();
  sub_23F15E564();
  if (!v25)
  {
    sub_23F1F8B94();
    sub_23F17FE68();
    sub_23F17FF08((uint64_t)v31, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
    *v24 = a13;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v23);
  sub_23F1A9634();
  sub_23F1313FC();
}

uint64_t sub_23F1E24A0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x800000023F294D00 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023F294D20 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023F294D40 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023F294D60 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023F294D80 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000023F294DA0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023F294DC0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_23F1E2740(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F1E277C + 4 * byte_23F278E97[a1]))(0xD000000000000014, 0x800000023F294D00);
}

uint64_t sub_23F1E277C()
{
  uint64_t v0;

  return v0 + 5;
}

#error "23F1E27F8: call analysis failed (funcsize=5)"

void sub_23F1E2804()
{
  SystemRequirement.AuthenticationRequest.encode(to:)();
}

uint64_t sub_23F1E281C()
{
  sub_23F1F8D74();
  return sub_23F2688B8();
}

uint64_t sub_23F1E2844()
{
  sub_23F1F8D74();
  return sub_23F2688C4();
}

uint64_t sub_23F1E286C()
{
  sub_23F1F8DB0();
  return sub_23F2688B8();
}

uint64_t sub_23F1E2894()
{
  sub_23F1F8DB0();
  return sub_23F2688C4();
}

uint64_t sub_23F1E28BC()
{
  sub_23F1F8CFC();
  return sub_23F2688B8();
}

uint64_t sub_23F1E28E4()
{
  sub_23F1F8CFC();
  return sub_23F2688C4();
}

uint64_t sub_23F1E290C()
{
  sub_23F1F8D38();
  return sub_23F2688B8();
}

uint64_t sub_23F1E2934()
{
  sub_23F1F8D38();
  return sub_23F2688C4();
}

uint64_t sub_23F1E295C()
{
  unsigned __int8 *v0;

  return sub_23F1E2740(*v0);
}

uint64_t sub_23F1E2964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E24A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1E2988()
{
  sub_23F1F8BD0();
  return sub_23F2688B8();
}

uint64_t sub_23F1E29B0()
{
  sub_23F1F8BD0();
  return sub_23F2688C4();
}

uint64_t sub_23F1E29D8()
{
  sub_23F1F8DEC();
  return sub_23F2688B8();
}

uint64_t sub_23F1E2A00()
{
  sub_23F1F8DEC();
  return sub_23F2688C4();
}

uint64_t sub_23F1E2A28()
{
  sub_23F1F8C84();
  return sub_23F2688B8();
}

uint64_t sub_23F1E2A50()
{
  sub_23F1F8C84();
  return sub_23F2688C4();
}

uint64_t sub_23F1E2A78()
{
  sub_23F1F8C0C();
  return sub_23F2688B8();
}

uint64_t sub_23F1E2AA0()
{
  sub_23F1F8C0C();
  return sub_23F2688C4();
}

void SystemRequirement.encode(to:)()
{
  uint64_t *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[14];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_23F131874();
  v2 = v1;
  v3 = sub_23F1217E8(&qword_256E04BE8);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F16BBFC(v5, v32[0]);
  v6 = sub_23F1217E8(&qword_256E04BF0);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F24ED84(v8, v32[0]);
  v9 = sub_23F1217E8(&qword_256E04BF8);
  v32[11] = *(_QWORD *)(v9 - 8);
  v32[12] = v9;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F16BA8C(v11, v32[0]);
  v12 = sub_23F1217E8(&qword_256E04C00);
  v32[8] = *(_QWORD *)(v12 - 8);
  v32[9] = v12;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F15E9B4(v14, v32[0]);
  v15 = sub_23F1217E8(&qword_256E04C08);
  v32[5] = *(_QWORD *)(v15 - 8);
  v32[6] = v15;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F180018(v17, v32[0]);
  v18 = sub_23F1217E8(&qword_256E04C10);
  v32[2] = *(_QWORD *)(v18 - 8);
  v32[3] = v18;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F17FBBC((uint64_t)v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32[0] = sub_23F1217E8(&qword_256E04C18);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F1316E4();
  v38 = *(_QWORD *)(sub_23F1217E8(&qword_256E04C20) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F24F92C();
  v23 = *v0;
  v24 = v0[1];
  v25 = *((unsigned __int8 *)v0 + 16);
  v26 = v2;
  v28 = v27;
  sub_23F1A968C(v26);
  sub_23F1F8BD0();
  sub_23F15EB10();
  sub_23F2509EC();
  if (v25)
  {
    if (v25 != 1)
      __asm { BR              X9 }
    sub_23F251AEC();
    v29 = v35;
    sub_23F24EE10();
    LOBYTE(v39) = v23 & 1;
    sub_23F1F8C48();
    v30 = v37;
    sub_23F268750();
    v31 = v36;
  }
  else
  {
    sub_23F251B34();
    v29 = v32[13];
    sub_23F24EE10();
    v39 = v23;
    v40 = v24;
    sub_23F1F8CC0();
    v30 = v34;
    sub_23F268750();
    v31 = v33;
  }
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
  sub_23F15E588(v28, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void SystemRequirement.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_23F131874();
  sub_23F251470(v13);
  sub_23F1217E8(&qword_256E04C78);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F1A982C(v15, v46);
  sub_23F1217E8(&qword_256E04C80);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F1A94D4(v17, v47);
  sub_23F1217E8(&qword_256E04C88);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F24ED20(v19, v48);
  sub_23F1217E8(&qword_256E04C90);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F16BC34(v21, v49);
  sub_23F1217E8(&qword_256E04C98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F24ED84(v23, v50);
  sub_23F1217E8(&qword_256E04CA0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F24F598(v25, v51);
  sub_23F1217E8(&qword_256E04CA8);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F1319C8();
  v27 = sub_23F1217E8(&qword_256E04CB0);
  sub_23F126210();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F126058();
  sub_23F24EE44(v10);
  sub_23F1F8BD0();
  sub_23F24F564();
  if (!a10)
  {
    v52 = v11;
    sub_23F2686D8();
    sub_23F250B7C();
    v29 = v27;
    if (v30)
    {
      sub_23F24FC44();
      v32 = *(unsigned __int8 *)(v31 + 32);
      v33 = sub_23F24FC34();
      sub_23F15E2D0(v33, v34, v35, v36, v37, v38);
      v40 = v39;
      v42 = v41;
      sub_23F131790();
      if (v40 == v42 >> 1)
        __asm { BR              X9 }
      v29 = v27;
    }
    sub_23F15EDB8();
    sub_23F131B30();
    v44 = v43;
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F24F960();
    *v44 = &type metadata for SystemRequirement;
    sub_23F268648();
    v45 = sub_23F24ECCC();
    sub_23F1A97D0(v45, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F17FAB4();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v52, v29);
  }
  sub_23F250D3C();
  sub_23F251DB4();
  sub_23F1313FC();
}

void sub_23F1E31D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  sub_23F251F7C();
  v3 = *(_QWORD *)(v2 - 72);
  sub_23F24F184();
  if (!v0)
  {
    v4 = sub_23F251418();
    v5(v4);
    sub_23F17FAB4();
    sub_23F17FF08(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8));
    v8 = *(_QWORD *)(v2 - 144);
    *(_QWORD *)v8 = 1;
    *(_QWORD *)(v8 + 8) = 0;
    *(_BYTE *)(v8 + 16) = 2;
    JUMPOUT(0x23F1E31C4);
  }
  sub_23F17FAB4();
  v6 = sub_23F15EAE0();
  v7(v6, v1);
  JUMPOUT(0x23F1E3020);
}

void sub_23F1E323C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  sub_23F251EBC();
  v3 = *(_QWORD *)(v2 - 72);
  sub_23F24F184();
  if (!v0)
  {
    sub_23F251DA8(*(_QWORD *)(v2 - 248));
    sub_23F17FAB4();
    sub_23F17FF08(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8));
    JUMPOUT(0x23F1E329CLL);
  }
  sub_23F17FAB4();
  v4 = sub_23F15EAE0();
  v5(v4, v1);
  JUMPOUT(0x23F1E3020);
}

void sub_23F1E32A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  sub_23F251C0C();
  v3 = *(_QWORD *)(v2 - 72);
  sub_23F24F184();
  if (!v0)
  {
    sub_23F251DA8(*(_QWORD *)(v2 - 232));
    sub_23F17FAB4();
    sub_23F17FF08(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8));
    v6 = *(_QWORD *)(v2 - 144);
    *(_QWORD *)v6 = 3;
    *(_QWORD *)(v6 + 8) = 0;
    *(_BYTE *)(v6 + 16) = 2;
    JUMPOUT(0x23F1E31C4);
  }
  sub_23F17FAB4();
  v4 = sub_23F15EAE0();
  v5(v4, v1);
  JUMPOUT(0x23F1E3020);
}

void sub_23F1E330C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F251BA0();
  v2 = *(_QWORD *)(v1 - 152);
  v3 = *(_QWORD *)(v1 - 72);
  sub_23F24F184();
  if (v0)
    JUMPOUT(0x23F1E3348);
  sub_23F15E444(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 216) + 8));
  sub_23F17FAB4();
  sub_23F17FF08(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 272) + 8));
  JUMPOUT(0x23F1E3438);
}

void sub_23F1E3364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F251B34();
  v3 = *(_QWORD *)(v2 - 72);
  sub_23F24F184();
  if (v0)
  {
    sub_23F17FAB4();
    sub_23F250574();
    JUMPOUT(0x23F1E335CLL);
  }
  sub_23F1F8E64();
  sub_23F17FE48();
  sub_23F251DE8();
  sub_23F17FF08(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8));
  sub_23F17FAB4();
  sub_23F126038(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  JUMPOUT(0x23F1E343CLL);
}

void sub_23F1E33B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F251AEC();
  v3 = *(_QWORD *)(v2 - 72);
  sub_23F24F184();
  if (v1)
  {
    sub_23F17FAB4();
    sub_23F24F1F0();
    JUMPOUT(0x23F1E3358);
  }
  sub_23F1F8E28();
  sub_23F17FE48();
  sub_23F251DE8();
  sub_23F126038(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8));
  sub_23F17FAB4();
  sub_23F17FF08(v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  JUMPOUT(0x23F1E343CLL);
}

void sub_23F1E3548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  SystemRequirement.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1E355C()
{
  SystemRequirement.encode(to:)();
}

void AppRequirement.hash(into:)()
{
  sub_23F18AC30();
  sub_23F126078();
}

uint64_t sub_23F1E358C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65526E496E676973 && a2 == 0xEE00646572697571;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023F294DE0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023F294E00)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F1E36F8(char a1)
{
  if (!a1)
    return 0x65526E496E676973;
  if (a1 == 1)
    return 0xD000000000000014;
  return 0xD000000000000018;
}

uint64_t sub_23F1E3760()
{
  sub_23F1F8F18();
  return sub_23F2688B8();
}

uint64_t sub_23F1E3788()
{
  sub_23F1F8F18();
  return sub_23F2688C4();
}

uint64_t sub_23F1E37B0()
{
  char *v0;

  return sub_23F1E36F8(*v0);
}

uint64_t sub_23F1E37B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E358C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1E37DC()
{
  sub_23F1F8EA0();
  return sub_23F2688B8();
}

uint64_t sub_23F1E3804()
{
  sub_23F1F8EA0();
  return sub_23F2688C4();
}

uint64_t sub_23F1E382C()
{
  sub_23F1F8F54();
  return sub_23F2688B8();
}

uint64_t sub_23F1E3854()
{
  sub_23F1F8F54();
  return sub_23F2688C4();
}

uint64_t sub_23F1E387C()
{
  sub_23F1F8EDC();
  return sub_23F2688B8();
}

uint64_t sub_23F1E38A4()
{
  sub_23F1F8EDC();
  return sub_23F2688C4();
}

void AppRequirement.encode(to:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F131874();
  v3 = v0;
  v5 = v4;
  sub_23F1217E8(&qword_256E04CC8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1A982C(v7, v15);
  sub_23F1217E8(&qword_256E04CD0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F15EB6C();
  v16 = sub_23F1217E8(&qword_256E04CD8);
  sub_23F126048();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F126058();
  v17 = *(_QWORD *)(sub_23F1217E8(&qword_256E04CE0) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15E50C();
  v11 = *v3;
  sub_23F24FC14(v5);
  sub_23F1F8EA0();
  sub_23F15EBF0();
  if (v11)
  {
    if (v11 == 1)
    {
      sub_23F252044();
      sub_23F15E6E8();
      v12 = sub_23F24FA10();
    }
    else
    {
      sub_23F251EE0();
      sub_23F15E6E8();
      v12 = sub_23F24F11C();
    }
    v14(v12, v13);
  }
  else
  {
    sub_23F1F8F54();
    sub_23F15E6E8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v16);
  }
  sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  sub_23F251E48();
  sub_23F1313FC();
}

void AppRequirement.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  char v40;

  sub_23F131874();
  v4 = v3;
  v38 = v5;
  v37 = sub_23F1217E8(&qword_256E04D08);
  v36 = *(_QWORD *)(v37 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1A9848(v7, v33);
  sub_23F1217E8(&qword_256E04D10);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F18ABFC(v9, v34);
  v35 = sub_23F1217E8(&qword_256E04D18);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15EB6C();
  sub_23F1217E8(&qword_256E04D20);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1319C8();
  sub_23F24F1D8(v4);
  sub_23F1F8EA0();
  sub_23F24FFB4();
  v12 = v1;
  if (v1)
    goto LABEL_10;
  v13 = v2;
  sub_23F2686D8();
  sub_23F2520E8();
  if (!v14
    || (sub_23F2513F0(),
        v16 = *(unsigned __int8 *)(v15 + 32),
        v17 = sub_23F25081C(),
        sub_23F15E2D0(v17, v18, v19, v20, v21, v22),
        v12 = v23,
        v25 = v24,
        sub_23F1318B8(),
        v12 != (_QWORD *)(v25 >> 1)))
  {
    v30 = sub_23F15EDB8();
    sub_23F131B30();
    sub_23F251E98();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F250EB8();
    *v12 = &type metadata for AppRequirement;
    sub_23F268648();
    sub_23F15E6B4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v12, *MEMORY[0x24BEE26D0], v30);
    sub_23F251024();
    sub_23F16BDC0();
    sub_23F15E444(v13, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
LABEL_10:
    sub_23F251448();
    goto LABEL_11;
  }
  if (v16)
  {
    v40 = v16;
    if (v16 == 1)
    {
      sub_23F252044();
      sub_23F16BAF8();
      v26 = v38;
      v27 = sub_23F24FA10();
    }
    else
    {
      sub_23F251EE0();
      sub_23F16BAF8();
      v26 = v38;
      v29 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v27 = v39;
      v28 = v37;
    }
    v29(v27, v28);
    sub_23F24F164();
    sub_23F15E7D4(v13, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  }
  else
  {
    sub_23F1F8F54();
    sub_23F16BAF8();
    v40 = 0;
    v31 = sub_23F15ECE4();
    v32(v31, v35);
    sub_23F16BDC0();
    sub_23F15E7D4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v26 = v38;
  }
  *v26 = v40;
  sub_23F251A54();
LABEL_11:
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1E3DA8()
{
  AppRequirement.init(from:)();
}

void sub_23F1E3DBC()
{
  AppRequirement.encode(to:)();
}

uint64_t sub_23F1E3DD4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x800000023F294E20 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023F294E40 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x800000023F294E60 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023F294E90 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023F294EB0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023F294ED0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023F294EF0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023F294F10)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v5 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_23F1E40BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F1E40F4 + 4 * byte_23F278EAA[a1]))(0xD000000000000016, 0x800000023F294E20);
}

uint64_t sub_23F1E40F4(uint64_t a1)
{
  return a1 + 5;
}

uint64_t sub_23F1E4168()
{
  sub_23F1F9044();
  return sub_23F2688B8();
}

uint64_t sub_23F1E4190()
{
  sub_23F1F9044();
  return sub_23F2688C4();
}

uint64_t sub_23F1E41B8()
{
  unsigned __int8 *v0;

  return sub_23F1E40BC(*v0);
}

uint64_t sub_23F1E41C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E3DD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1E41E4()
{
  sub_23F1F8F90();
  return sub_23F2688B8();
}

uint64_t sub_23F1E420C()
{
  sub_23F1F8F90();
  return sub_23F2688C4();
}

uint64_t sub_23F1E4234()
{
  sub_23F1F8FCC();
  return sub_23F2688B8();
}

uint64_t sub_23F1E425C()
{
  sub_23F1F8FCC();
  return sub_23F2688C4();
}

uint64_t sub_23F1E4284()
{
  sub_23F1F90BC();
  return sub_23F2688B8();
}

uint64_t sub_23F1E42AC()
{
  sub_23F1F90BC();
  return sub_23F2688C4();
}

uint64_t sub_23F1E42D4()
{
  sub_23F1F9008();
  return sub_23F2688B8();
}

uint64_t sub_23F1E42FC()
{
  sub_23F1F9008();
  return sub_23F2688C4();
}

uint64_t sub_23F1E4324()
{
  sub_23F1F90F8();
  return sub_23F2688B8();
}

uint64_t sub_23F1E434C()
{
  sub_23F1F90F8();
  return sub_23F2688C4();
}

uint64_t sub_23F1E4374()
{
  sub_23F1F9134();
  return sub_23F2688B8();
}

uint64_t sub_23F1E439C()
{
  sub_23F1F9134();
  return sub_23F2688C4();
}

uint64_t sub_23F1E43C4()
{
  sub_23F1F9170();
  return sub_23F2688B8();
}

uint64_t sub_23F1E43EC()
{
  sub_23F1F9170();
  return sub_23F2688C4();
}

uint64_t sub_23F1E4414()
{
  sub_23F1F9080();
  return sub_23F2688B8();
}

uint64_t sub_23F1E443C()
{
  sub_23F1F9080();
  return sub_23F2688C4();
}

void PermissionRequirement.encode(to:)()
{
  unsigned __int8 *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23F131874();
  v2 = v1;
  sub_23F1217E8(&qword_256E04D28);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F17FFE0(v4, v19);
  sub_23F1217E8(&qword_256E04D30);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F16BC34(v6, v20);
  sub_23F1217E8(&qword_256E04D38);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F16BC18(v8, v21);
  sub_23F1217E8(&qword_256E04D40);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F15E9D0(v10, v22);
  sub_23F1217E8(&qword_256E04D48);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F17FFFC(v12, v23);
  sub_23F1217E8(&qword_256E04D50);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F24EEC8(v14, v24);
  sub_23F1217E8(&qword_256E04D58);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F15E524();
  sub_23F1217E8(&qword_256E04D60);
  sub_23F12611C();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F1319C8();
  sub_23F1217E8(&qword_256E04D68);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F24F92C();
  v18 = *v0;
  sub_23F24EE44(v2);
  sub_23F1F8F90();
  sub_23F24F558();
  __asm { BR              X9 }
}

void sub_23F1E463C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  void (*v4)(uint64_t);

  *(_BYTE *)(v0 - 72) = 0;
  sub_23F1F9170();
  sub_23F15E6E8();
  v1 = sub_23F24FAB0();
  v2(v1);
  v3 = sub_23F24FBB0();
  v4(v3);
  sub_23F1313FC();
}

void PermissionRequirement.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_23F131874();
  v3 = sub_23F1217E8(&qword_256E04DB8);
  sub_23F251E80(v3);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F1A982C(v5, v32);
  sub_23F1217E8(&qword_256E04DC0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1A94D4(v7, v33);
  sub_23F1217E8(&qword_256E04DC8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F16BBFC(v9, v34);
  sub_23F1217E8(&qword_256E04DD0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F24ED20(v11, v35);
  sub_23F1217E8(&qword_256E04DD8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F16BC34(v13, v36);
  sub_23F1217E8(&qword_256E04DE0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F24ED84(v15, v37);
  sub_23F1217E8(&qword_256E04DE8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F24F598(v17, v38);
  sub_23F1217E8(&qword_256E04DF0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F1319B0();
  sub_23F1217E8(&qword_256E04DF8);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F15E660();
  v20 = (_QWORD *)sub_23F250FE4();
  sub_23F1A968C(v20);
  sub_23F1F8F90();
  sub_23F24FFB4();
  if (v0)
  {
    v21 = v40;
  }
  else
  {
    v22 = sub_23F2514C4();
    v23 = *(_QWORD *)(v22 + 16);
    v39 = v2;
    if (v23)
    {
      v24 = *(unsigned __int8 *)(v22 + 32);
      sub_23F15E2D0(1, v23, v22, v22 + 32, 0, (2 * v23) | 1);
      v26 = v25;
      v28 = v27;
      sub_23F1318DC();
      if (v26 == v28 >> 1)
        __asm { BR              X9 }
    }
    v21 = v40;
    v29 = sub_23F15EDB8();
    sub_23F131B30();
    v31 = v30;
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F24F960();
    *v31 = &type metadata for PermissionRequirement;
    sub_23F268648();
    sub_23F24ECCC();
    sub_23F24F678((uint64_t)v31, *MEMORY[0x24BEE26D0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104));
    sub_23F251E10();
    sub_23F15E96C();
    sub_23F15E694(v39, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v21);
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1E4B64()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  sub_23F251FE8();
  sub_23F24F030();
  if (!v1)
  {
    v4 = sub_23F24EE7C();
    v5(v4, *(_QWORD *)(v3 - 256));
    sub_23F252294();
    sub_23F15E444(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x23F1E4B54);
  }
  sub_23F252294();
  sub_23F15E444(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
  JUMPOUT(0x23F1E49C8);
}

void sub_23F1E4B98()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  sub_23F251F4C();
  sub_23F24F030();
  if (!v1)
  {
    v4 = sub_23F24F11C();
    v5(v4);
    sub_23F252294();
    sub_23F15E444(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x23F1E4B54);
  }
  sub_23F252294();
  sub_23F15E444(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
  JUMPOUT(0x23F1E49C8);
}

void sub_23F1E4C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F251B1C();
  sub_23F24F030();
  if (!v1)
  {
    sub_23F24EE7C();
    JUMPOUT(0x23F1E4C78);
  }
  sub_23F252294();
  sub_23F15E444(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8));
  JUMPOUT(0x23F1E49C8);
}

void sub_23F1E4C80()
{
  uint64_t v0;

  sub_23F2519BC();
  sub_23F1A936C();
  if (v0)
    JUMPOUT(0x23F1E4CB4);
  sub_23F2511E8();
  JUMPOUT(0x23F1E4CD4);
}

void sub_23F1E4CFC()
{
  PermissionRequirement.init(from:)();
}

void sub_23F1E4D10()
{
  PermissionRequirement.encode(to:)();
}

uint64_t ActionFailure.failure.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return sub_23F1F91AC(v2, v3);
}

__n128 ActionFailure.failure.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  __n128 result;
  __n128 v4;
  __n128 v5;

  v4 = a1[1];
  v5 = *a1;
  v2 = a1[2].n128_u64[0];
  sub_23F1F52C4(v1->n128_u64[0], v1->n128_u64[1]);
  result = v4;
  *v1 = v5;
  v1[1] = v4;
  v1[2].n128_u64[0] = v2;
  return result;
}

uint64_t (*ActionFailure.failure.modify())()
{
  return nullsub_1;
}

void static ActionFailure.Failure.== infix(_:_:)()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  sub_23F1314D0();
  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v6 = *v5;
  v7 = v5[1];
  v9 = v5[2];
  v8 = v5[3];
  switch(v2)
  {
    case 0uLL:
      if (v7)
        goto LABEL_46;
      sub_23F24ED74(*v0, 0);
      v10 = v6;
      v11 = 0;
      goto LABEL_45;
    case 1uLL:
      if (v7 != 1)
        goto LABEL_46;
      sub_23F24ED74(*v0, 1uLL);
      sub_23F24FC54(v6, 1uLL);
      break;
    case 2uLL:
      if (v7 != 2)
        goto LABEL_46;
      sub_23F24ED74(*v0, 2uLL);
      v10 = v6;
      v11 = 2;
      goto LABEL_45;
    case 3uLL:
      if (v7 != 3)
        goto LABEL_46;
      sub_23F24ED74(*v0, 3uLL);
      v10 = v6;
      v11 = 3;
      goto LABEL_45;
    case 4uLL:
      if (v7 != 4)
        goto LABEL_46;
      sub_23F24ED74(*v0, 4uLL);
      v10 = v6;
      v11 = 4;
      goto LABEL_45;
    case 5uLL:
      if (v7 != 5)
        goto LABEL_46;
      sub_23F24ED74(*v0, 5uLL);
      v10 = v6;
      v11 = 5;
      goto LABEL_45;
    case 6uLL:
      if (v7 != 6)
        goto LABEL_46;
      sub_23F24ED74(*v0, 6uLL);
      v10 = v6;
      v11 = 6;
      goto LABEL_45;
    case 7uLL:
      if (v7 != 7)
        goto LABEL_46;
      sub_23F24ED74(*v0, 7uLL);
      v10 = v6;
      v11 = 7;
      goto LABEL_45;
    case 8uLL:
      if (v7 != 8)
        goto LABEL_46;
      sub_23F24ED74(*v0, 8uLL);
      v10 = v6;
      v11 = 8;
      goto LABEL_45;
    case 9uLL:
      if (v7 != 9)
        goto LABEL_46;
      sub_23F24ED74(*v0, 9uLL);
      v10 = v6;
      v11 = 9;
      goto LABEL_45;
    case 0xAuLL:
      if (v7 != 10)
        goto LABEL_46;
      sub_23F24ED74(*v0, 0xAuLL);
      v10 = v6;
      v11 = 10;
      goto LABEL_45;
    case 0xBuLL:
      if (v7 != 11)
        goto LABEL_46;
      sub_23F24ED74(*v0, 0xBuLL);
      v10 = v6;
      v11 = 11;
      goto LABEL_45;
    case 0xCuLL:
      if (v7 != 12)
        goto LABEL_46;
      sub_23F24ED74(*v0, 0xCuLL);
      v10 = v6;
      v11 = 12;
      goto LABEL_45;
    case 0xDuLL:
      if (v7 != 13)
        goto LABEL_46;
      sub_23F24ED74(*v0, 0xDuLL);
      v10 = v6;
      v11 = 13;
      goto LABEL_45;
    case 0xEuLL:
      if (v7 != 14)
        goto LABEL_46;
      sub_23F24ED74(*v0, 0xEuLL);
      v10 = v6;
      v11 = 14;
      goto LABEL_45;
    case 0xFuLL:
      if (v7 != 15)
        goto LABEL_46;
      sub_23F24ED74(*v0, 0xFuLL);
      v10 = v6;
      v11 = 15;
LABEL_45:
      sub_23F24FC54(v10, v11);
      break;
    default:
      if (v7 >= 0x10 && (v1 == v6 ? (v12 = v2 == v7) : (v12 = 0), v12 || (sub_23F126148() & 1) != 0))
      {
        if (v4 == v9 && v3 == v8)
        {
          sub_23F250B0C();
          sub_23F1F91AC(v14, v15);
          sub_23F24FA40();
          sub_23F24ED74(v1, v2);
          sub_23F250B0C();
          sub_23F1F52C4(v16, v17);
        }
        else
        {
          sub_23F250390();
          sub_23F126148();
          sub_23F2508B4();
          sub_23F24FA40();
          sub_23F24ED74(v1, v2);
          sub_23F24FC54(v6, v7);
        }
      }
      else
      {
LABEL_46:
        sub_23F2508B4();
        sub_23F24FA40();
        sub_23F24ED74(v1, v2);
        sub_23F24FC54(v6, v7);
      }
      break;
  }
  sub_23F131500();
}

void static ActionFailure.DeveloperDefinedError.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;

  v2 = sub_23F250784(a1);
  v6 = *(_QWORD *)(v5 + 24);
  v7 = v4[2];
  v8 = v4[3];
  v9 = v2 == *v4 && v3 == v4[1];
  if (v9 || (sub_23F126148(), sub_23F15E5CC(), (v10 & 1) != 0))
  {
    if (v1 != v7 || v6 != v8)
    {
      sub_23F126148();
      sub_23F15E5CC();
    }
  }
  sub_23F131ABC();
}

uint64_t sub_23F1E5158(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  if (a1 == 0xD000000000000015 && a2 == 0x800000023F294F30 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023F294F50 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023F294F70 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = a1 == 0x6173694469666977 && a2 == 0xEC00000064656C62;
    if (v5 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x800000023F294F90 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      v6 = a1 == 0x466B726F7774656ELL && a2 == 0xEE006572756C6961;
      if (v6 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v7 = a1 == 0x466C616974726170 && a2 == 0xEE006572756C6961;
        if (v7 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x800000023F294FB0 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023F294FD0 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else
        {
          v8 = a1 == 0x6F4E797469746E65 && a2 == 0xEE00646E756F4674;
          if (v8 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else if (a1 == 0xD000000000000010 && a2 == 0x800000023F294FF0 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023F295010 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 11;
          }
          else
          {
            v9 = a1 == 0x69686374614D6F6ELL && a2 == 0xEE006C6F6F54676ELL;
            if (v9 || (sub_23F268798() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 12;
            }
            else
            {
              v10 = a1 == 0x6F54656C62616E75 && a2 == 0xEC0000006F646E55;
              if (v10 || (sub_23F268798() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 13;
              }
              else
              {
                v11 = a1 == 0x61436E6F69746361 && a2 == 0xEE0064656C65636ELL;
                if (v11 || (sub_23F268798() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 14;
                }
                else if (a1 == 0xD000000000000015 && a2 == 0x800000023F295030 || (sub_23F268798() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 15;
                }
                else if (a1 == 0x6F54656C62616E75 && a2 == 0xEE006C65636E6143)
                {
                  swift_bridgeObjectRelease();
                  return 16;
                }
                else
                {
                  v13 = sub_23F268798();
                  swift_bridgeObjectRelease();
                  if ((v13 & 1) != 0)
                    return 16;
                  else
                    return 17;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_23F1E588C()
{
  return 17;
}

uint64_t sub_23F1E5894(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F1E58D4 + 4 * byte_23F278ED2[a1]))(0xD000000000000015, 0x800000023F294F30);
}

uint64_t sub_23F1E58D4()
{
  uint64_t v0;

  return v0 + 7;
}

uint64_t sub_23F1E5A5C()
{
  sub_23F1F92D0();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5A84()
{
  sub_23F1F92D0();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5AAC()
{
  sub_23F1F93C0();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5AD4()
{
  sub_23F1F93C0();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5AFC()
{
  sub_23F1F9528();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5B24()
{
  sub_23F1F9528();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5B4C()
{
  unsigned __int8 *v0;

  return sub_23F1E5894(*v0);
}

uint64_t sub_23F1E5B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E5158(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1E5B78@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F1E588C();
  *a1 = result;
  return result;
}

uint64_t sub_23F1E5B9C()
{
  sub_23F1F91E0();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5BC4()
{
  sub_23F1F91E0();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5BEC()
{
  sub_23F1F9258();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5C14()
{
  sub_23F1F9258();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5C3C()
{
  sub_23F1F93FC();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5C64()
{
  sub_23F1F93FC();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5C8C()
{
  sub_23F1F9438();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5CB4()
{
  sub_23F1F9438();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5CDC()
{
  sub_23F1F95A0();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5D04()
{
  sub_23F1F95A0();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5D2C()
{
  sub_23F1F94EC();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5D54()
{
  sub_23F1F94EC();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5D7C()
{
  sub_23F1F9348();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5DA4()
{
  sub_23F1F9348();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5DCC()
{
  sub_23F1F94B0();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5DF4()
{
  sub_23F1F94B0();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5E1C()
{
  sub_23F1F95DC();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5E44()
{
  sub_23F1F95DC();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5E6C()
{
  sub_23F1F9618();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5E94()
{
  sub_23F1F9618();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5EBC()
{
  sub_23F1F921C();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5EE4()
{
  sub_23F1F921C();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5F0C()
{
  sub_23F1F930C();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5F34()
{
  sub_23F1F930C();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5F5C()
{
  sub_23F1F9474();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5F84()
{
  sub_23F1F9474();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5FAC()
{
  sub_23F1F9384();
  return sub_23F2688B8();
}

uint64_t sub_23F1E5FD4()
{
  sub_23F1F9384();
  return sub_23F2688C4();
}

uint64_t sub_23F1E5FFC()
{
  sub_23F1F9564();
  return sub_23F2688B8();
}

uint64_t sub_23F1E6024()
{
  sub_23F1F9564();
  return sub_23F2688C4();
}

void ActionFailure.Failure.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[3];
  _QWORD v102[3];
  _QWORD v103[2];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[3];
  uint64_t v112;

  sub_23F131874();
  a19 = v25;
  a20 = v26;
  a10 = v22;
  v28 = v27;
  v105 = sub_23F1217E8(&qword_256E04E00);
  v103[1] = *(_QWORD *)(v105 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F24F5B4(v30, v73);
  v106 = sub_23F1217E8(&qword_256E04E08);
  v104 = *(_QWORD *)(v106 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F16BA8C(v32, v73);
  v33 = sub_23F1217E8(&qword_256E04E10);
  v102[0] = *(_QWORD *)(v33 - 8);
  v102[1] = v33;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F24F21C(v35, v73);
  v36 = sub_23F1217E8(&qword_256E04E18);
  v101[0] = *(_QWORD *)(v36 - 8);
  v101[1] = v36;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F1A949C(v38, v73);
  v100 = sub_23F1217E8(&qword_256E04E20);
  v99 = *(_QWORD *)(v100 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F17FBBC((uint64_t)&v73 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v98 = sub_23F1217E8(&qword_256E04E28);
  v97 = *(_QWORD *)(v98 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F17FBBC((uint64_t)&v73 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v96 = sub_23F1217E8(&qword_256E04E30);
  v95 = *(_QWORD *)(v96 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F17FBBC((uint64_t)&v73 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  v94 = sub_23F1217E8(&qword_256E04E38);
  v93 = *(_QWORD *)(v94 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F17FBBC((uint64_t)&v73 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v92 = sub_23F1217E8(&qword_256E04E40);
  v91 = *(_QWORD *)(v92 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F17FBBC((uint64_t)&v73 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = sub_23F1217E8(&qword_256E04E48);
  v89 = *(_QWORD *)(v90 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F17FBBC((uint64_t)&v73 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  v88 = sub_23F1217E8(&qword_256E04E50);
  v87 = *(_QWORD *)(v88 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F17FBBC((uint64_t)&v73 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86 = sub_23F1217E8(&qword_256E04E58);
  v85 = *(_QWORD *)(v86 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F17FBBC((uint64_t)&v73 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  v84 = sub_23F1217E8(&qword_256E04E60);
  v83 = *(_QWORD *)(v84 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F17FBBC((uint64_t)&v73 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  v82 = sub_23F1217E8(&qword_256E04E68);
  v81 = *(_QWORD *)(v82 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F17FBBC((uint64_t)&v73 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80 = sub_23F1217E8(&qword_256E04E70);
  v79 = *(_QWORD *)(v80 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v59);
  sub_23F17FBBC((uint64_t)&v73 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  v78 = sub_23F1217E8(&qword_256E04E78);
  v77 = *(_QWORD *)(v78 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F1319C8();
  sub_23F1217E8(&qword_256E04E80);
  sub_23F12611C();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F15E524();
  v109 = sub_23F1217E8(&qword_256E04E88);
  v107 = *(_QWORD *)(v109 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F1319B0();
  v64 = v21[1];
  v76 = *v21;
  v75 = v21[2];
  v74 = v21[3];
  v73 = v21[4];
  sub_23F24EE44(v28);
  sub_23F1F91E0();
  v108 = v24;
  sub_23F1A9DA4();
  sub_23F15EBF0();
  switch(v64)
  {
    case 0:
      LOBYTE(v110) = 0;
      sub_23F1F9618();
      sub_23F251A7C();
      sub_23F15E7D4(v20, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
      v65 = sub_23F250174();
      goto LABEL_17;
    case 1:
      sub_23F25200C();
      sub_23F24ED54();
      v69 = sub_23F24F1F0();
      v71 = &v99;
      goto LABEL_15;
    case 2:
      sub_23F251F34();
      sub_23F24ED54();
      v69 = sub_23F24F1F0();
      v71 = v101;
      goto LABEL_15;
    case 3:
      sub_23F251C3C();
      sub_23F24ED54();
      v69 = sub_23F24F1F0();
      v71 = v102;
      goto LABEL_15;
    case 4:
      sub_23F251BB8();
      sub_23F24ED54();
      v69 = sub_23F24F1F0();
      v71 = v103;
      goto LABEL_15;
    case 5:
      sub_23F251B58();
      sub_23F24ED54();
      v69 = sub_23F250E58();
      goto LABEL_15;
    case 6:
      sub_23F251B04();
      sub_23F24ED54();
      v69 = sub_23F24F1F0();
      v71 = &v108;
      goto LABEL_15;
    case 7:
      sub_23F2519D4();
      sub_23F24ED54();
      v69 = sub_23F24F1F0();
      v71 = v111;
      goto LABEL_15;
    case 8:
      sub_23F2519A4();
      sub_23F24ED54();
      v69 = sub_23F24F1F0();
      v71 = &v112;
      goto LABEL_15;
    case 9:
      sub_23F251974();
      sub_23F24ED54();
      v69 = sub_23F24F1F0();
      v71 = &a10;
      goto LABEL_15;
    case 10:
      sub_23F25195C();
      sub_23F24ED54();
      v69 = sub_23F24F1F0();
      v71 = &a13;
      goto LABEL_15;
    case 11:
      sub_23F251944();
      sub_23F24ED54();
      v69 = sub_23F24F1F0();
      v71 = &a16;
LABEL_15:
      v72 = *(v71 - 32);
      goto LABEL_16;
    case 12:
      sub_23F25192C();
      sub_23F24ED54();
      v69 = sub_23F251418();
      goto LABEL_16;
    case 13:
      sub_23F251914();
      sub_23F24ED54();
      goto LABEL_22;
    case 14:
      sub_23F2518FC();
      sub_23F24ED54();
LABEL_22:
      v69 = sub_23F24F3AC();
      goto LABEL_16;
    case 15:
      sub_23F2518CC();
      sub_23F24ED54();
      v69 = sub_23F24F3AC();
      v72 = v105;
LABEL_16:
      v70(v69, v72);
      v65 = sub_23F17FE50();
LABEL_17:
      v66(v65);
      break;
    default:
      sub_23F2518E4();
      v67 = v103[0];
      v68 = v108;
      sub_23F24EE10();
      v110 = v76;
      v111[0] = v64;
      v111[1] = v75;
      v111[2] = v74;
      v112 = v73;
      sub_23F1F9294();
      sub_23F1AE450();
      sub_23F17FF08(v67, *(uint64_t (**)(uint64_t, uint64_t))(v104 + 8));
      sub_23F15E588(v68, *(uint64_t (**)(uint64_t, uint64_t))(v107 + 8));
      break;
  }
  sub_23F15EAFC();
  sub_23F1313FC();
}

void ActionFailure.Failure.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t, uint64_t);
  uint64_t v82[8];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[11];
  _QWORD *v110;
  uint64_t v111;

  sub_23F131874();
  a19 = v25;
  a20 = v26;
  sub_23F252208();
  v109[6] = v27;
  v28 = sub_23F1217E8(&qword_256E04F28);
  sub_23F251010(v28);
  v107 = v29;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F16BA8C(v31, v82[0]);
  v108 = sub_23F1217E8(&qword_256E04F30);
  v82[6] = *(_QWORD *)(v108 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F16BC18(v33, v82[0]);
  v106 = sub_23F1217E8(&qword_256E04F38);
  v105 = *(_QWORD *)(v106 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F24F5B4(v35, v82[0]);
  v36 = sub_23F1217E8(&qword_256E04F40);
  sub_23F17FB48(v36, (uint64_t)&a11);
  v104 = v37;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F15E9D0(v39, v82[0]);
  v103 = sub_23F1217E8(&qword_256E04F48);
  v102 = *(_QWORD *)(v103 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F15E9B4(v41, v82[0]);
  v101 = sub_23F1217E8(&qword_256E04F50);
  v100 = *(_QWORD *)(v101 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F24F21C(v43, v82[0]);
  v99 = sub_23F1217E8(&qword_256E04F58);
  v98 = *(_QWORD *)(v99 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F16BBFC(v45, v82[0]);
  v46 = sub_23F1217E8(&qword_256E04F60);
  sub_23F17FB48(v46, (uint64_t)&v111);
  v91 = v47;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F17FFFC(v49, v82[0]);
  v97 = sub_23F1217E8(&qword_256E04F68);
  v94 = *(_QWORD *)(v97 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F180018(v51, v82[0]);
  v96 = sub_23F1217E8(&qword_256E04F70);
  v95 = *(_QWORD *)(v96 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F24ED20(v53, v82[0]);
  v93 = sub_23F1217E8(&qword_256E04F78);
  v92 = *(_QWORD *)(v93 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F16BC34(v55, v82[0]);
  v90 = sub_23F1217E8(&qword_256E04F80);
  v89 = *(_QWORD *)(v90 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F1A949C(v57, v82[0]);
  v88 = sub_23F1217E8(&qword_256E04F88);
  v87 = *(_QWORD *)(v88 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F24EEC8(v59, v82[0]);
  v60 = sub_23F1217E8(&qword_256E04F90);
  sub_23F17FB48(v60, (uint64_t)v109);
  v86 = v61;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F17FBBC((uint64_t)v82 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  v85 = sub_23F1217E8(&qword_256E04F98);
  v84 = *(_QWORD *)(v85 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F17FBBC((uint64_t)v82 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  v83 = sub_23F1217E8(&qword_256E04FA0);
  v82[7] = *(_QWORD *)(v83 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F17FBBC((uint64_t)v82 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = sub_23F1217E8(&qword_256E04FA8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F15E50C();
  sub_23F1217E8(&qword_256E04FB0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F15E524();
  v110 = v21;
  sub_23F24ED3C(v21);
  sub_23F1F91E0();
  sub_23F2513C8();
  sub_23F18037C();
  if (!v22)
  {
    v82[4] = v23;
    v82[2] = v24;
    v82[3] = v68;
    v71 = (_QWORD *)v109[8];
    v82[5] = v20;
    v72 = sub_23F25185C();
    v73 = *(_QWORD *)(v72 + 16);
    if (v73)
    {
      v82[1] = 0;
      v74 = *(unsigned __int8 *)(v72 + 32);
      sub_23F15E2D0(1, v73, v72, v72 + 32, 0, (2 * v73) | 1);
      v76 = v75;
      v78 = v77;
      sub_23F13186C();
      if (v76 == v78 >> 1)
        __asm { BR              X9 }
    }
    sub_23F15EDB8();
    sub_23F131B30();
    sub_23F2508FC();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F24F960();
    *v71 = &type metadata for ActionFailure.Failure;
    sub_23F268648();
    v79 = sub_23F24ECCC();
    sub_23F1A97D0(v79, *MEMORY[0x24BEE26D0]);
    sub_23F250144();
    sub_23F15E5EC();
    v80 = sub_23F15EAE0();
    sub_23F15E7D4(v80, v81);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v110);
  sub_23F17FDF4();
  sub_23F1313FC();
}

void sub_23F1E6E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F25200C();
  sub_23F251400();
  sub_23F24ECE8();
  if (!v1)
  {
    v3 = sub_23F24EE7C();
    sub_23F24F2C8(v3, v4);
    sub_23F15E5EC();
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8));
    sub_23F24EDF4();
    v5 = *(_QWORD **)(v2 - 176);
    *v5 = v6;
    v5[1] = 1;
    v5[2] = v7;
    v5[3] = v8;
    v5[4] = v9;
    JUMPOUT(0x23F1E6E5CLL);
  }
  JUMPOUT(0x23F1E6E48);
}

void sub_23F1E6EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F251F34();
  sub_23F24ECE8();
  if (!v1)
  {
    v3 = sub_23F24EE7C();
    sub_23F24F2C8(v3, v4);
    sub_23F15E5EC();
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8));
    sub_23F24EDF4();
    v5 = *(_QWORD **)(v2 - 176);
    *v5 = v6;
    v5[1] = 2;
    v5[2] = v7;
    v5[3] = v8;
    v5[4] = v9;
    JUMPOUT(0x23F1E6E5CLL);
  }
  JUMPOUT(0x23F1E6E48);
}

void sub_23F1E6F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F251C3C();
  sub_23F24ECE8();
  if (!v1)
  {
    v3 = sub_23F24EE7C();
    sub_23F24F2C8(v3, v4);
    sub_23F15E5EC();
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8));
    sub_23F24EDF4();
    v5 = *(_QWORD **)(v2 - 176);
    *v5 = v6;
    v5[1] = 3;
    v5[2] = v7;
    v5[3] = v8;
    v5[4] = v9;
    JUMPOUT(0x23F1E6E5CLL);
  }
  JUMPOUT(0x23F1E6E48);
}

void sub_23F1E6F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F251BB8();
  sub_23F24ECE8();
  if (!v1)
  {
    v3 = sub_23F24EE7C();
    sub_23F24F2C8(v3, v4);
    sub_23F15E5EC();
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8));
    sub_23F24EDF4();
    v5 = *(_QWORD **)(v2 - 176);
    *v5 = v6;
    v5[1] = 4;
    v5[2] = v7;
    v5[3] = v8;
    v5[4] = v9;
    JUMPOUT(0x23F1E6E5CLL);
  }
  JUMPOUT(0x23F1E6E48);
}

void sub_23F1E6FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F251B58();
  sub_23F24ECE8();
  if (!v1)
  {
    v3 = sub_23F24EE7C();
    sub_23F24F2C8(v3, v4);
    sub_23F15E5EC();
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8));
    sub_23F24EDF4();
    v5 = *(_QWORD **)(v2 - 176);
    *v5 = v6;
    v5[1] = 5;
    v5[2] = v7;
    v5[3] = v8;
    v5[4] = v9;
    JUMPOUT(0x23F1E6E5CLL);
  }
  JUMPOUT(0x23F1E6E48);
}

void sub_23F1E7028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F251B04();
  sub_23F24ECE8();
  if (!v1)
  {
    v3 = sub_23F250E58();
    sub_23F24F2C8(v3, v4);
    sub_23F15E5EC();
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8));
    sub_23F24EDF4();
    v5 = *(_QWORD **)(v2 - 176);
    *v5 = v6;
    v5[1] = 6;
    v5[2] = v7;
    v5[3] = v8;
    v5[4] = v9;
    JUMPOUT(0x23F1E6E5CLL);
  }
  JUMPOUT(0x23F1E6E48);
}

void sub_23F1E7074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F2519D4();
  sub_23F24ECE8();
  if (!v1)
  {
    v3 = sub_23F15ECE4();
    sub_23F24F2C8(v3, v4);
    sub_23F15E5EC();
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8));
    sub_23F24EDF4();
    v5 = *(_QWORD **)(v2 - 176);
    *v5 = v6;
    v5[1] = 7;
    v5[2] = v7;
    v5[3] = v8;
    v5[4] = v9;
    JUMPOUT(0x23F1E6E5CLL);
  }
  JUMPOUT(0x23F1E6E48);
}

void sub_23F1E70CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F2519A4();
  sub_23F24ECE8();
  if (!v1)
  {
    v3 = sub_23F24EE7C();
    sub_23F24F2C8(v3, v4);
    sub_23F15E5EC();
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8));
    sub_23F24EDF4();
    v5 = *(_QWORD **)(v2 - 176);
    *v5 = v6;
    v5[1] = 8;
    v5[2] = v7;
    v5[3] = v8;
    v5[4] = v9;
    JUMPOUT(0x23F1E6E5CLL);
  }
  JUMPOUT(0x23F1E6E48);
}

void sub_23F1E7124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F251974();
  sub_23F24ECE8();
  if (!v1)
  {
    v3 = sub_23F24EE7C();
    sub_23F24F2C8(v3, v4);
    sub_23F15E5EC();
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8));
    sub_23F24EDF4();
    v5 = *(_QWORD **)(v2 - 176);
    *v5 = v6;
    v5[1] = 9;
    v5[2] = v7;
    v5[3] = v8;
    v5[4] = v9;
    JUMPOUT(0x23F1E6E5CLL);
  }
  JUMPOUT(0x23F1E6E48);
}

void sub_23F1E717C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F25195C();
  sub_23F24ECE8();
  if (!v1)
  {
    v3 = sub_23F24EE7C();
    sub_23F24F2C8(v3, v4);
    sub_23F15E5EC();
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8));
    sub_23F24EDF4();
    v5 = *(_QWORD **)(v2 - 176);
    *v5 = v6;
    v5[1] = 10;
    v5[2] = v7;
    v5[3] = v8;
    v5[4] = v9;
    JUMPOUT(0x23F1E6E5CLL);
  }
  JUMPOUT(0x23F1E6E48);
}

void sub_23F1E71D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F251944();
  sub_23F24ECE8();
  if (!v1)
  {
    v3 = sub_23F24EE7C();
    sub_23F24F2C8(v3, v4);
    sub_23F15E5EC();
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8));
    sub_23F24EDF4();
    v5 = *(_QWORD **)(v2 - 176);
    *v5 = v6;
    v5[1] = 11;
    v5[2] = v7;
    v5[3] = v8;
    v5[4] = v9;
    JUMPOUT(0x23F1E6E5CLL);
  }
  JUMPOUT(0x23F1E6E48);
}

void sub_23F1E722C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F25192C();
  sub_23F24ECE8();
  if (!v1)
  {
    v3 = sub_23F24EE7C();
    sub_23F24F2C8(v3, v4);
    sub_23F15E5EC();
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8));
    sub_23F24EDF4();
    v5 = *(_QWORD **)(v2 - 176);
    *v5 = v6;
    v5[1] = 12;
    v5[2] = v7;
    v5[3] = v8;
    v5[4] = v9;
    JUMPOUT(0x23F1E6E5CLL);
  }
  JUMPOUT(0x23F1E6E48);
}

void sub_23F1E7284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F251914();
  sub_23F24ECE8();
  if (!v1)
  {
    v3 = sub_23F24EE7C();
    sub_23F24F2C8(v3, v4);
    sub_23F15E5EC();
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8));
    sub_23F24EDF4();
    v5 = *(_QWORD **)(v2 - 176);
    *v5 = v6;
    v5[1] = 13;
    v5[2] = v7;
    v5[3] = v8;
    v5[4] = v9;
    JUMPOUT(0x23F1E6E5CLL);
  }
  JUMPOUT(0x23F1E6E48);
}

void sub_23F1E72DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F2518FC();
  sub_23F24ECE8();
  if (!v1)
  {
    v3 = sub_23F24EE7C();
    sub_23F24F2C8(v3, v4);
    sub_23F15E5EC();
    sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8));
    sub_23F24EDF4();
    v5 = *(_QWORD **)(v2 - 176);
    *v5 = v6;
    v5[1] = 14;
    v5[2] = v7;
    v5[3] = v8;
    v5[4] = v9;
    JUMPOUT(0x23F1E6E5CLL);
  }
  JUMPOUT(0x23F1E6E48);
}

void sub_23F1E7334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  sub_23F2518E4();
  v2 = *(_QWORD *)(v1 - 536);
  sub_23F26863C();
  if (v0)
  {
    sub_23F15E5EC();
    sub_23F250E38();
    JUMPOUT(0x23F1E6E54);
  }
  sub_23F1F9654();
  sub_23F17FABC();
  v3 = *(_QWORD *)(v1 - 72);
  sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 528) + 8));
  sub_23F15E5EC();
  sub_23F15E7D4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v4 = *(_QWORD *)(v1 - 120);
  v5 = *(_QWORD *)(v1 - 112);
  v6 = *(_QWORD *)(v1 - 104);
  v7 = *(_QWORD *)(v1 - 96);
  v8 = *(_QWORD **)(v1 - 176);
  *v8 = *(_QWORD *)(v1 - 128);
  v8[1] = v4;
  v8[2] = v5;
  v8[3] = v6;
  v8[4] = v7;
  JUMPOUT(0x23F1E6E5CLL);
}

#error "23F1E747C: call analysis failed (funcsize=5)"

#error "23F1E7490: call analysis failed (funcsize=5)"

void ActionFailure.DeveloperDefinedError.localizedString.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ActionFailure.DeveloperDefinedError.localizedString.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*ActionFailure.DeveloperDefinedError.localizedString.modify())()
{
  return nullsub_1;
}

void ActionFailure.DeveloperDefinedError.domain.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ActionFailure.DeveloperDefinedError.domain.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F250604();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  sub_23F12612C();
}

uint64_t (*ActionFailure.DeveloperDefinedError.domain.modify())()
{
  return nullsub_1;
}

uint64_t ActionFailure.DeveloperDefinedError.code.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t ActionFailure.DeveloperDefinedError.code.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*ActionFailure.DeveloperDefinedError.code.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1E7564(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x657A696C61636F6CLL && a2 == 0xEF676E6972745364;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1701080931 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F1E76BC(char a1)
{
  if (!a1)
    return 0x657A696C61636F6CLL;
  if (a1 == 1)
    return 0x6E69616D6F64;
  return 1701080931;
}

uint64_t sub_23F1E7714()
{
  char *v0;

  return sub_23F1E76BC(*v0);
}

uint64_t sub_23F1E771C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E7564(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1E7740()
{
  sub_23F1F9690();
  return sub_23F2688B8();
}

uint64_t sub_23F1E7768()
{
  sub_23F1F9690();
  return sub_23F2688C4();
}

void ActionFailure.DeveloperDefinedError.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256E04FC0);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F25084C();
  sub_23F18AA80(v4);
  sub_23F1F9690();
  sub_23F18A998();
  sub_23F268720();
  if (!v1)
  {
    sub_23F251334();
    sub_23F1A931C();
    sub_23F2512E4();
    sub_23F268744();
  }
  sub_23F15E444(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void ActionFailure.DeveloperDefinedError.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F131874();
  v3 = v2;
  v5 = v4;
  sub_23F1217E8(&qword_256E04FD0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1F9690();
  sub_23F15E564();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    v9 = sub_23F24F16C();
    v11 = v10;
    v20 = v9;
    sub_23F24F790();
    v12 = sub_23F24F16C();
    v14 = v13;
    v18 = v12;
    sub_23F180274();
    sub_23F1315C4();
    v19 = v14;
    v15 = sub_23F2686A8();
    sub_23F17FF08((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v16 = v19;
    *v5 = v20;
    v5[1] = v11;
    v5[2] = v18;
    v5[3] = v16;
    v5[4] = v15;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v3);
    sub_23F1318DC();
    swift_bridgeObjectRelease();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

uint64_t sub_23F1E7A0C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1E7A90()
{
  return 0x6572756C696166;
}

void sub_23F1E7AA8()
{
  ActionFailure.DeveloperDefinedError.init(from:)();
}

void sub_23F1E7ABC()
{
  ActionFailure.DeveloperDefinedError.encode(to:)();
}

uint64_t sub_23F1E7AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E7A0C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1E7B00()
{
  sub_23F1F96CC();
  return sub_23F2688B8();
}

uint64_t sub_23F1E7B28()
{
  sub_23F1F96CC();
  return sub_23F2688C4();
}

void ActionFailure.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_23F131874();
  v3 = v2;
  sub_23F1217E8(&qword_256E04FD8);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F126058();
  sub_23F18AA80(v3);
  sub_23F1F96CC();
  sub_23F18A998();
  sub_23F1F9708();
  sub_23F24F614();
  sub_23F15E588(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void ActionFailure.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v7;
  _OWORD v8[2];
  uint64_t v9;

  sub_23F131874();
  sub_23F18AC78();
  sub_23F1217E8(&qword_256E04FF0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1F96CC();
  sub_23F251E60();
  sub_23F15E564();
  if (!v0)
  {
    sub_23F1F9744();
    sub_23F17FABC();
    sub_23F17FF08((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v6 = v9;
    v7 = v8[1];
    *(_OWORD *)v1 = v8[0];
    *(_OWORD *)(v1 + 16) = v7;
    *(_QWORD *)(v1 + 32) = v6;
  }
  sub_23F131BF4();
  sub_23F17FDF4();
  sub_23F1313FC();
}

void sub_23F1E7CE8()
{
  ActionFailure.init(from:)();
}

void sub_23F1E7CFC()
{
  ActionFailure.encode(to:)();
}

void __swiftcall ActionConfirmation.init(parameterValues:)(IntelligenceFlow::ActionConfirmation *__return_ptr retstr, Swift::OpaquePointer parameterValues)
{
  retstr->affirmative._countAndFlagsBits = 0;
  retstr->affirmative._object = (void *)0xE000000000000000;
  retstr->negative._countAndFlagsBits = 0;
  retstr->negative._object = (void *)0xE000000000000000;
  retstr->parameterValues = parameterValues;
}

void __swiftcall ActionConfirmation.init(affirmative:negative:)(IntelligenceFlow::ActionConfirmation *__return_ptr retstr, Swift::String affirmative, Swift::String negative)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v5;
  uint64_t v6;
  void *v8;

  object = negative._object;
  countAndFlagsBits = negative._countAndFlagsBits;
  v5 = affirmative._object;
  v6 = affirmative._countAndFlagsBits;
  type metadata accessor for ParameterValue(0);
  v8 = (void *)sub_23F268108();
  retstr->affirmative._countAndFlagsBits = v6;
  retstr->affirmative._object = v5;
  retstr->negative._countAndFlagsBits = countAndFlagsBits;
  retstr->negative._object = object;
  retstr->parameterValues._rawValue = v8;
  sub_23F131ABC();
}

uint64_t sub_23F1E7D94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x74616D7269666661 && a2 == 0xEB00000000657669;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x657669746167656ELL && a2 == 0xE800000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6574656D61726170 && a2 == 0xEF7365756C615672)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F1E7F1C(char a1)
{
  if (!a1)
    return 0x74616D7269666661;
  if (a1 == 1)
    return 0x657669746167656ELL;
  return 0x6574656D61726170;
}

uint64_t sub_23F1E7F88()
{
  char *v0;

  return sub_23F1E7F1C(*v0);
}

uint64_t sub_23F1E7F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E7D94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1E7FB4()
{
  sub_23F1F9794();
  return sub_23F2688B8();
}

uint64_t sub_23F1E7FDC()
{
  sub_23F1F9794();
  return sub_23F2688C4();
}

void ActionConfirmation.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256E05000);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F24FC80();
  sub_23F24F270(v4);
  sub_23F1F9794();
  sub_23F251374();
  sub_23F180304();
  sub_23F251120();
  sub_23F24FE44();
  if (!v1)
  {
    sub_23F252030();
    sub_23F1A931C();
    sub_23F180274();
    sub_23F1217E8(&qword_256E05010);
    sub_23F1F97D0();
    sub_23F1315CC();
  }
  sub_23F15E444(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void ActionConfirmation.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F131874();
  sub_23F18AC78();
  sub_23F1217E8(&qword_256E05028);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F18AA80(v0);
  sub_23F1F9794();
  sub_23F24EEA4();
  if (v1)
  {
    sub_23F131BF4();
  }
  else
  {
    v7 = sub_23F250B24();
    v9 = v8;
    v15 = v7;
    sub_23F24F790();
    v13 = sub_23F250B24();
    sub_23F1217E8(&qword_256E05010);
    sub_23F1A9340();
    sub_23F180274();
    v10 = sub_23F1F9854();
    v14 = 0;
    sub_23F126140();
    sub_23F17FE48();
    sub_23F15E444((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    if (v10)
    {
      sub_23F131930();
      sub_23F1317F8();
      _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
      sub_23F131930();
    }
    else
    {
      v11 = v16;
      sub_23F13184C();
      sub_23F1315C4();
      sub_23F131930();
      v12 = v14;
      *v2 = v15;
      v2[1] = v9;
      v2[2] = v13;
      v2[3] = v12;
      v2[4] = v11;
      sub_23F24EE8C();
      sub_23F13190C();
    }
    swift_bridgeObjectRelease();
  }
  sub_23F15E830();
  sub_23F1313FC();
}

void sub_23F1E82BC()
{
  ActionConfirmation.init(from:)();
}

void sub_23F1E82D0()
{
  ActionConfirmation.encode(to:)();
}

uint64_t ParameterValue.value.getter()
{
  return sub_23F1EF104();
}

uint64_t ParameterValue.value.setter(uint64_t a1)
{
  return sub_23F1EF140(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t (*ParameterValue.value.modify())()
{
  return nullsub_1;
}

void ParameterValue.promptSelection.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  char v5;

  v2 = sub_23F1A9744();
  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ParameterValue(v2) + 20));
  v4 = *v3;
  v5 = *((_BYTE *)v3 + 8);
  LOBYTE(v3) = *((_BYTE *)v3 + 9);
  *(_QWORD *)v0 = v4;
  *(_BYTE *)(v0 + 8) = v5;
  *(_BYTE *)(v0 + 9) = (_BYTE)v3;
  sub_23F126078();
}

void ParameterValue.promptSelection.setter(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_BYTE *)(a1 + 9);
  v2 = type metadata accessor for ParameterValue(0);
  sub_23F252320(v2);
  *(_BYTE *)(v3 + 9) = v1;
  sub_23F12612C();
}

uint64_t (*ParameterValue.promptSelection.modify())()
{
  type metadata accessor for ParameterValue(0);
  sub_23F180384();
  return nullsub_1;
}

void ParameterValue.init(value:promptSelection:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F2520C0();
  v4 = *(_BYTE *)(v3 + 9);
  v5 = v0 + *(int *)(type metadata accessor for ParameterValue(0) + 20);
  v6 = sub_23F125F84();
  sub_23F24F1C0(v6);
  *(_QWORD *)v5 = v1;
  *(_BYTE *)(v5 + 8) = v2;
  *(_BYTE *)(v5 + 9) = v4;
  sub_23F131ABC();
}

void static ParameterValue.== infix(_:_:)()
{
  if ((sub_23F2523E8() & 1) != 0)
    type metadata accessor for ParameterValue(0);
  sub_23F126078();
}

void sub_23F1E8484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  BOOL v4;

  sub_23F251744();
  v3 = v3 && v2 == 0xE500000000000000;
  if (v3
    || (sub_23F180250(), sub_23F143D08(), (sub_23F126148() & 1) != 0)
    || (v1 == 0x655374706D6F7270 ? (v4 = v0 == 0xEF6E6F697463656CLL) : (v4 = 0), v4))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F1E8560()
{
  sub_23F1F98D8();
  return sub_23F2688B8();
}

uint64_t sub_23F1E8588()
{
  sub_23F1F98D8();
  return sub_23F2688C4();
}

void ParameterValue.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD v8[3];
  char v9;
  char v10;
  char v11;

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E05040);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1F98D8();
  sub_23F18A998();
  v11 = 0;
  sub_23F125F84();
  sub_23F12E488((uint64_t)&qword_256DFE598);
  sub_23F126188();
  if (!v0)
  {
    type metadata accessor for ParameterValue(0);
    sub_23F2515A0();
    v6 = *(_BYTE *)(v5 + 8);
    LOBYTE(v5) = *(_BYTE *)(v5 + 9);
    v8[2] = v7;
    v9 = v6;
    v10 = v5;
    sub_23F250C40();
    sub_23F1F9914();
    sub_23F17FAD8();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void ParameterValue.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  sub_23F131874();
  v3 = v2;
  v15 = v4;
  sub_23F125F84();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1A982C(v6, v14);
  sub_23F1217E8(&qword_256E05058);
  sub_23F126048();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F1A9480();
  type metadata accessor for ParameterValue(v8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F126058();
  v11 = v1 + *(int *)(v10 + 20);
  *(_QWORD *)v11 = 0;
  *(_WORD *)(v11 + 8) = 256;
  sub_23F1A968C(v3);
  sub_23F1F98D8();
  sub_23F2506AC();
  if (v0)
  {
    sub_23F24FB7C();
  }
  else
  {
    sub_23F12E488((uint64_t)&qword_256DFE5B8);
    sub_23F1A9D04();
    sub_23F1A97E4();
    v12 = sub_23F2514CC();
    v13(v12);
    sub_23F1A9BB8();
    sub_23F1F9950();
    sub_23F268678();
    sub_23F2502AC();
    *(_QWORD *)v11 = v16;
    *(_BYTE *)(v11 + 8) = v17;
    *(_BYTE *)(v11 + 9) = v18;
    sub_23F24F0B8(v1, v15);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
    sub_23F24F1B8(v1);
  }
  sub_23F24F9F8();
  sub_23F1313FC();
}

void sub_23F1E88A4()
{
  ParameterValue.init(from:)();
}

void sub_23F1E88B8()
{
  ParameterValue.encode(to:)();
}

uint64_t static PromptSelection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned __int8 *)(a2 + 8);
  v3 = (*(_QWORD *)a1 == *(_QWORD *)a2) & ~v2;
  if (*(_QWORD *)a2)
    v4 = *(unsigned __int8 *)(a2 + 8);
  else
    v4 = 0;
  if (*(_QWORD *)a2)
    v2 = 0;
  if (*(_QWORD *)a1)
    v5 = v4;
  else
    v5 = v2;
  if (*(_BYTE *)(a1 + 8) == 1)
    return v5;
  else
    return v3;
}

void sub_23F1E890C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v4 = a1 == 0x656D7269666E6F63 && a2 == 0xE900000000000064;
  if (v4
    || (sub_23F180250(), (sub_23F126148() & 1) != 0)
    || v3 == 0xD000000000000018 && (sub_23F24FBE8((uint64_t)"selectedInDisambiguation"), v4)
    || (sub_23F126148() & 1) != 0
    || (v3 == 0x6465696E6564 ? (v5 = v2 == 0xE600000000000000) : (v5 = 0), v5))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

void sub_23F1E8A38(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7865646E69 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F2509B4();
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F1E8AA4()
{
  sub_23F1F998C();
  return sub_23F2688B8();
}

uint64_t sub_23F1E8ACC()
{
  sub_23F1F998C();
  return sub_23F2688C4();
}

uint64_t sub_23F1E8AF4()
{
  sub_23F1F9A40();
  return sub_23F2688B8();
}

uint64_t sub_23F1E8B1C()
{
  sub_23F1F9A40();
  return sub_23F2688C4();
}

uint64_t sub_23F1E8B44()
{
  sub_23F1F99C8();
  return sub_23F2688B8();
}

uint64_t sub_23F1E8B6C()
{
  sub_23F1F99C8();
  return sub_23F2688C4();
}

uint64_t sub_23F1E8B98()
{
  sub_23F1F9A04();
  return sub_23F2688B8();
}

uint64_t sub_23F1E8BC0()
{
  sub_23F1F9A04();
  return sub_23F2688C4();
}

void PromptSelection.encode(to:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F131874();
  sub_23F24FA04();
  v5 = sub_23F1217E8(&qword_256E05068);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1A94D4(v7, v18);
  v26 = *(_QWORD *)(sub_23F1217E8(&qword_256E05070) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F15EB6C();
  v9 = sub_23F1217E8(&qword_256E05078);
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F24ED20(v11, v19);
  sub_23F1217E8(&qword_256E05080);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F15E50C();
  v13 = *v3;
  v14 = *((unsigned __int8 *)v3 + 8);
  sub_23F24F270(v0);
  sub_23F1F998C();
  sub_23F24F864();
  if (v14 == 1)
  {
    if (v13)
    {
      sub_23F251F04();
      v15 = v23;
      sub_23F15E6E8();
      v17 = v24;
      v16 = v25;
    }
    else
    {
      sub_23F1F9A40();
      v15 = v20;
      sub_23F15E6E8();
      v17 = v21;
      v16 = v22;
    }
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    sub_23F15E7D4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  else
  {
    sub_23F252018();
    sub_23F15E6E8();
    sub_23F268744();
    sub_23F15E444(v4, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
    sub_23F15E7D4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  sub_23F15EAFC();
  sub_23F1313FC();
}

void PromptSelection.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_23F131874();
  v4 = v3;
  v42 = v5;
  v41 = sub_23F1217E8(&qword_256E050A8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F17FBC8(v7, v37);
  v39 = *(_QWORD *)(sub_23F1217E8(&qword_256E050B0) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F18ABFC(v9, v38);
  v40 = sub_23F1217E8(&qword_256E050B8);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F1319C8();
  v11 = sub_23F1217E8(&qword_256E050C0);
  sub_23F126210();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F15E50C();
  sub_23F24EE44(v4);
  sub_23F1F998C();
  sub_23F2509F4();
  sub_23F24F564();
  if (!v1)
  {
    sub_23F252400();
    sub_23F250B7C();
    v13 = v11;
    if (v14)
    {
      sub_23F24FC44();
      v16 = *(unsigned __int8 *)(v15 + 32);
      v17 = sub_23F24FC34();
      sub_23F15E2D0(v17, v18, v19, v20, v21, v22);
      v24 = v23;
      v26 = v25;
      sub_23F131790();
      if (v24 == v26 >> 1)
      {
        if (v16)
        {
          if (v16 == 1)
          {
            sub_23F252018();
            sub_23F2506B4();
            v35 = sub_23F2686A8();
            sub_23F15E7D4(v43, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
            sub_23F17FAB4();
            sub_23F15E44C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
            v36 = 0;
LABEL_14:
            *(_QWORD *)v42 = v35;
            *(_BYTE *)(v42 + 8) = v36;
            v30 = (uint64_t)v4;
            goto LABEL_10;
          }
          sub_23F251F04();
          sub_23F2506B4();
          v33 = sub_23F251CD4();
          v34(v33, v41);
          sub_23F17FAB4();
          sub_23F15E444(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
          v35 = 1;
        }
        else
        {
          sub_23F1F9A40();
          sub_23F2506B4();
          v31 = sub_23F24F11C();
          v32(v31, v40);
          sub_23F17FAB4();
          sub_23F15E444(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
          v35 = 0;
        }
        v36 = 1;
        goto LABEL_14;
      }
      v13 = v11;
    }
    v27 = sub_23F15EDB8();
    sub_23F131B30();
    v29 = v28;
    sub_23F1217E8(&qword_256DFF4B8);
    *v29 = &type metadata for PromptSelection;
    sub_23F2503CC();
    sub_23F15E6B4();
    sub_23F24F678((uint64_t)v29, *MEMORY[0x24BEE26D0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104));
    swift_willThrow();
    sub_23F17FAB4();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v13);
  }
  v30 = (uint64_t)v4;
LABEL_10:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v30);
  sub_23F250228();
  sub_23F1313FC();
}

void sub_23F1E9160()
{
  PromptSelection.init(from:)();
}

void sub_23F1E9174()
{
  PromptSelection.encode(to:)();
}

uint64_t (*ParameterNeedsValue.parameterId.modify())()
{
  return nullsub_1;
}

uint64_t ParameterNeedsValue.currentValue.getter()
{
  return sub_23F1B01AC(type metadata accessor for ParameterNeedsValue);
}

uint64_t ParameterNeedsValue.currentValue.setter(uint64_t a1)
{
  return sub_23F1D230C(a1, type metadata accessor for ParameterNeedsValue);
}

uint64_t (*ParameterNeedsValue.currentValue.modify())()
{
  type metadata accessor for ParameterNeedsValue(0);
  sub_23F180384();
  return nullsub_1;
}

uint64_t ParameterNeedsValue.currentValue_.getter()
{
  return sub_23F1B01AC(type metadata accessor for ParameterNeedsValue);
}

uint64_t ParameterNeedsValue.init(parameterId:currentValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_23F1E9208(a1, a2, (void (*)(_QWORD))type metadata accessor for ParameterNeedsValue, a3);
}

uint64_t sub_23F1E9208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(_QWORD)@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  *a4 = a1;
  a4[1] = a2;
  a3(0);
  sub_23F125F84();
  v4 = sub_23F24F294();
  return sub_23F126180(v4, v5, v6, v7);
}

uint64_t ParameterNeedsValue.init(parameterId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  *a3 = a1;
  a3[1] = a2;
  v4 = sub_23F268054();
  v5 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v6, *MEMORY[0x24BEB9940], v4);
  v7 = (_QWORD *)((char *)a3 + *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20));
  *v7 = v5;
  v8 = *MEMORY[0x24BEB9A00];
  v9 = sub_23F125F84();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
}

uint64_t sub_23F1E92D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6574656D61726170 && a2 == 0xEB00000000644972;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x56746E6572727563 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1E93F0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x56746E6572727563;
  else
    return 0x6574656D61726170;
}

uint64_t sub_23F1E9438()
{
  char *v0;

  return sub_23F1E93F0(*v0);
}

uint64_t sub_23F1E9440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E92D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1E9464()
{
  sub_23F1F9A7C();
  return sub_23F2688B8();
}

uint64_t sub_23F1E948C()
{
  sub_23F1F9A7C();
  return sub_23F2688C4();
}

void ParameterNeedsValue.encode(to:)()
{
  sub_23F1E94E8();
}

void sub_23F1E94E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD);
  void (*v4)(_QWORD *);
  void (*v5)(_QWORD *);
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(_QWORD);
  uint64_t v11;

  sub_23F131874();
  v10 = v3;
  v5 = v4;
  sub_23F24FA04();
  v11 = *(_QWORD *)(sub_23F1A9D7C(v6, v7) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F1319C8();
  v9 = sub_23F24F1D8(v0);
  v5(v9);
  sub_23F24FDB4();
  sub_23F268720();
  if (!v1)
  {
    v10(0);
    sub_23F125F84();
    sub_23F12E488((uint64_t)&qword_256DFE598);
    sub_23F250C00();
  }
  sub_23F126038(v2, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  sub_23F1A9634();
  sub_23F1313FC();
}

void ParameterNeedsValue.init(from:)()
{
  sub_23F1EB6DC();
}

void sub_23F1E9634()
{
  ParameterNeedsValue.init(from:)();
}

void sub_23F1E9648()
{
  ParameterNeedsValue.encode(to:)();
}

uint64_t (*ParameterConfirmation.parameterId.modify())()
{
  return nullsub_1;
}

uint64_t (*ParameterConfirmation.parameterIndex.modify())()
{
  return nullsub_1;
}

uint64_t ParameterConfirmation.item.getter()
{
  return sub_23F1E9798(type metadata accessor for ParameterConfirmation);
}

uint64_t ParameterConfirmation.item.setter(uint64_t a1)
{
  return sub_23F1EF654(a1, type metadata accessor for ParameterConfirmation);
}

uint64_t (*ParameterConfirmation.item.modify())()
{
  sub_23F250E20();
  sub_23F18030C();
  return nullsub_1;
}

void ParameterConfirmation.itemDescription.getter()
{
  sub_23F250984();
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ParameterConfirmation.itemDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;

  sub_23F250984();
  v6 = (_QWORD *)(v2 + v5);
  sub_23F18ADB4();
  *v6 = a1;
  v6[1] = a2;
  sub_23F12612C();
}

uint64_t (*ParameterConfirmation.itemDescription.modify())()
{
  type metadata accessor for ParameterConfirmation(0);
  sub_23F1A9AFC();
  return nullsub_1;
}

void ParameterConfirmation.propertyIdForItemDescription.getter()
{
  sub_23F1DA314(type metadata accessor for ParameterConfirmation);
}

void ParameterConfirmation.propertyIdForItemDescription.setter(uint64_t a1, uint64_t a2)
{
  sub_23F1DA34C(a1, a2, type metadata accessor for ParameterConfirmation);
}

uint64_t (*ParameterConfirmation.propertyIdForItemDescription.modify())()
{
  sub_23F250E20();
  sub_23F2503E0();
  return nullsub_1;
}

uint64_t ParameterConfirmation.item_.getter()
{
  return sub_23F1E9798(type metadata accessor for ParameterConfirmation);
}

uint64_t sub_23F1E9798(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F24F3E8(a1);
  sub_23F2503D4();
  v1 = sub_23F24F288();
  return sub_23F24EEBC(v1, v2, v3, v4);
}

uint64_t ParameterConfirmation.init(parameterId:parameterIndex:item:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);

  v10 = sub_23F250984();
  v12 = (_QWORD *)(a5 + v11);
  *v12 = 0;
  v12[1] = 0;
  v13 = (_QWORD *)(a5 + *(int *)(v10 + 32));
  *v13 = 0;
  v13[1] = 0;
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 24) = a4 & 1;
  sub_23F125F84();
  v14 = sub_23F24F294();
  return v15(v14);
}

uint64_t ParameterConfirmation.init(parameterId:item:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  sub_23F24F8EC();
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 1;
  sub_23F250984();
  sub_23F2506BC(v4);
  sub_23F2506BC(*(int *)(v5 + 32));
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = v0;
  sub_23F125F84();
  v6 = sub_23F24F294();
  return sub_23F24EEBC(v6, v7, v8, v9);
}

void ParameterConfirmation.init(parameterId:item:itemDescription:propertyIdForItemDescription:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  sub_23F125F3C();
  sub_23F2502F4();
  *(_QWORD *)(v7 + 16) = 0;
  *(_BYTE *)(v6 + 24) = 1;
  v8 = sub_23F250E20();
  v9 = (_QWORD *)(v6 + *(int *)(v8 + 28));
  v10 = (_QWORD *)(v6 + *(int *)(v8 + 32));
  *(_QWORD *)v6 = v5;
  *(_QWORD *)(v6 + 8) = v4;
  v11 = sub_23F125F84();
  sub_23F250954(v11);
  *v9 = v3;
  v9[1] = v2;
  *v10 = v1;
  v10[1] = v0;
  sub_23F125EFC();
}

uint64_t sub_23F1E98E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 0x6574656D61726170 && a2 == 0xEB00000000644972;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6574656D61726170 && a2 == 0xEE007865646E4972;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1835365481 && a2 == 0xE400000000000000;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x637365446D657469 && a2 == 0xEF6E6F6974706972;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD00000000000001CLL && a2 == 0x800000023F295050)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = sub_23F268798();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_23F1E9B3C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1E9B78 + 4 * byte_23F278F16[a1]))(0x6574656D61726170, 0xEB00000000644972);
}

uint64_t sub_23F1E9B8C()
{
  return 1835365481;
}

uint64_t sub_23F1E9B9C()
{
  return 0x637365446D657469;
}

unint64_t sub_23F1E9BC0()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_23F1E9BDC()
{
  unsigned __int8 *v0;

  return sub_23F1E9B3C(*v0);
}

uint64_t sub_23F1E9BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1E98E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1E9C08()
{
  sub_23F1F9AB8();
  return sub_23F2688B8();
}

uint64_t sub_23F1E9C30()
{
  sub_23F1F9AB8();
  return sub_23F2688C4();
}

void ParameterConfirmation.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F1A9358();
  sub_23F1A9A7C();
  sub_23F1217E8(&qword_256E050E0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F1F9AB8();
  sub_23F18A998();
  v5[15] = 0;
  sub_23F131644();
  if (!v0)
  {
    v5[14] = 1;
    sub_23F251304();
    sub_23F250E20();
    v5[13] = 2;
    sub_23F125F84();
    sub_23F12E488((uint64_t)&qword_256DFE598);
    sub_23F1315CC();
    v5[12] = 3;
    sub_23F24F128();
    v5[11] = 4;
    sub_23F24F128();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F25102C();
  sub_23F18AB98();
}

void ParameterConfirmation.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  _QWORD *v28;

  sub_23F131874();
  v6 = v5;
  v25 = v7;
  v26 = *(_QWORD *)(sub_23F125F84() - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F15EB6C();
  sub_23F1217E8(&qword_256E050F0);
  sub_23F126048();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F17FFC4();
  v11 = type metadata accessor for ParameterConfirmation(v10);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F15E50C();
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  sub_23F250DA0(*(int *)(v13 + 28));
  v28 = v14;
  sub_23F250DA0(*(int *)(v15 + 32));
  v27 = v16;
  sub_23F1A968C(v6);
  sub_23F1F9AB8();
  sub_23F15EB10();
  sub_23F1A9814();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v6);
    sub_23F24F628();
    sub_23F250A1C();
  }
  else
  {
    v17 = v3;
    *(_QWORD *)v1 = sub_23F268684();
    *(_QWORD *)(v1 + 8) = v18;
    sub_23F251314();
    *(_QWORD *)(v1 + 16) = sub_23F26866C();
    *(_BYTE *)(v1 + 24) = v19 & 1;
    sub_23F180274();
    sub_23F12E488((uint64_t)&qword_256DFE5B8);
    sub_23F17FABC();
    sub_23F250DD4(v1 + *(int *)(v11 + 24), v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 32));
    sub_23F251C54();
    v20 = sub_23F251344();
    sub_23F251DCC(v20, v21, v28);
    v22 = sub_23F251344();
    v24 = v23;
    sub_23F126038(v2, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    sub_23F250A1C();
    *v27 = v22;
    v27[1] = v24;
    sub_23F24F0B8(v1, v25);
    sub_23F1A9970();
    sub_23F24F1B8(v1);
  }
  sub_23F17FDF4();
  sub_23F1313FC();
}

void sub_23F1EA068()
{
  ParameterConfirmation.init(from:)();
}

void sub_23F1EA07C()
{
  ParameterConfirmation.encode(to:)();
}

void ParameterDisambiguation.parameterId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ParameterDisambiguation.parameterId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*ParameterDisambiguation.parameterId.modify())()
{
  return nullsub_1;
}

uint64_t (*ParameterDisambiguation.parameterIndex.modify())()
{
  return nullsub_1;
}

void ParameterDisambiguation.items.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F25167C();
  *(_QWORD *)(v1 + 32) = a1;
  sub_23F126078();
}

uint64_t (*ParameterDisambiguation.items.modify())()
{
  return nullsub_1;
}

uint64_t ParameterDisambiguation.itemDescriptions.getter()
{
  return swift_bridgeObjectRetain();
}

void ParameterDisambiguation.itemDescriptions.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F251C94();
  *(_QWORD *)(v1 + 40) = a1;
  sub_23F126078();
}

uint64_t (*ParameterDisambiguation.itemDescriptions.modify())()
{
  return nullsub_1;
}

void ParameterDisambiguation.propertyIdForItemDescriptions.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ParameterDisambiguation.propertyIdForItemDescriptions.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15E844();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  sub_23F12612C();
}

uint64_t (*ParameterDisambiguation.propertyIdForItemDescriptions.modify())()
{
  return nullsub_1;
}

uint64_t ParameterDisambiguation.init(parameterId:parameterIndex:items:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_BYTE *)(a6 + 24) = a4 & 1;
  *(_QWORD *)(a6 + 32) = a5;
  *(_QWORD *)(a6 + 40) = 0;
  *(_QWORD *)(a6 + 48) = 0;
  *(_QWORD *)(a6 + 56) = 0;
  return result;
}

uint64_t ParameterDisambiguation.init(parameterId:items:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 24) = 1;
  *(_QWORD *)(a4 + 32) = a3;
  *(_QWORD *)(a4 + 40) = 0;
  *(_QWORD *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = 0;
  return result;
}

uint64_t ParameterDisambiguation.init(parameterId:items:itemDescriptions:propertyIdForItemDescription:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = 0;
  *(_BYTE *)(a7 + 24) = 1;
  *(_QWORD *)(a7 + 32) = a3;
  *(_QWORD *)(a7 + 40) = a4;
  *(_QWORD *)(a7 + 48) = a5;
  *(_QWORD *)(a7 + 56) = a6;
  return result;
}

uint64_t sub_23F1EA214(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x6574656D61726170 && a2 == 0xEB00000000644972;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6574656D61726170 && a2 == 0xEE007865646E4972;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x736D657469 && a2 == 0xE500000000000000;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x800000023F295070 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023F295090)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_23F1EA440(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1EA47C + 4 * byte_23F278F1B[a1]))(0x6574656D61726170, 0xEB00000000644972);
}

uint64_t sub_23F1EA490()
{
  return 0x736D657469;
}

unint64_t sub_23F1EA4A4()
{
  return 0xD000000000000010;
}

unint64_t sub_23F1EA4C0()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_23F1EA4E4()
{
  unsigned __int8 *v0;

  return sub_23F1EA440(*v0);
}

uint64_t sub_23F1EA4EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1EA214(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1EA510()
{
  sub_23F1F9AF4();
  return sub_23F2688B8();
}

uint64_t sub_23F1EA538()
{
  sub_23F1F9AF4();
  return sub_23F2688C4();
}

void ParameterDisambiguation.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256E050F8);
  sub_23F12611C();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1319C8();
  sub_23F24ED3C(v4);
  sub_23F1F9AF4();
  sub_23F24FC04();
  sub_23F24FE44();
  if (!v0)
  {
    sub_23F251304();
    sub_23F1217E8(&qword_256E030A8);
    sub_23F2523C0();
    sub_23F1315CC();
    sub_23F1217E8(&qword_256DFE7C8);
    sub_23F12EA6C((uint64_t)&unk_256DFE7D0);
    sub_23F15E5FC();
    sub_23F24F128();
  }
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void ParameterDisambiguation.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  char v27;
  uint64_t v28;

  sub_23F131874();
  sub_23F2519E8();
  v15 = v14;
  sub_23F1217E8(&qword_256E05108);
  sub_23F126048();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F15E660();
  sub_23F24FF3C(v11);
  sub_23F1F9AF4();
  sub_23F250D14();
  sub_23F24EEA4();
  if (v10)
  {
    sub_23F1A9C1C();
    sub_23F14C66C();
  }
  else
  {
    sub_23F2509D8();
    v17 = sub_23F268684();
    v19 = v18;
    LOBYTE(a10) = 1;
    sub_23F130928();
    sub_23F2509D8();
    v20 = sub_23F26866C();
    v27 = v21;
    v28 = v20;
    sub_23F1217E8(&qword_256E030A8);
    sub_23F1F45AC();
    sub_23F250210();
    sub_23F18012C();
    sub_23F1217E8(&qword_256DFE7C8);
    sub_23F12EA6C((uint64_t)&unk_256DFE7E0);
    sub_23F1315C4();
    sub_23F268678();
    sub_23F250C2C();
    sub_23F2509D8();
    v22 = sub_23F268654();
    v24 = v23;
    v25 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    v26 = v22;
    sub_23F15E444(v13, v25);
    sub_23F1315C4();
    sub_23F14C66C();
    *(_QWORD *)v15 = v17;
    *(_QWORD *)(v15 + 8) = v19;
    *(_QWORD *)(v15 + 16) = v28;
    *(_BYTE *)(v15 + 24) = v27 & 1;
    *(_QWORD *)(v15 + 32) = a10;
    *(_QWORD *)(v15 + 40) = a10;
    *(_QWORD *)(v15 + 48) = v26;
    *(_QWORD *)(v15 + 56) = v24;
    sub_23F1A9C1C();
    sub_23F1317F8();
    sub_23F15EB24();
    sub_23F13190C();
  }
  swift_bridgeObjectRelease();
  sub_23F15EAFC();
  sub_23F1313FC();
}

void sub_23F1EA978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ParameterDisambiguation.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1EA98C()
{
  ParameterDisambiguation.encode(to:)();
}

uint64_t (*ValueDisambiguation.items.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1EA9B4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1EAA30()
{
  return 0x736D657469;
}

uint64_t sub_23F1EAA48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1EA9B4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1EAA70()
{
  sub_23F1F9B30();
  return sub_23F2688B8();
}

uint64_t sub_23F1EAA98()
{
  sub_23F1F9B30();
  return sub_23F2688C4();
}

void ValueDisambiguation.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_23F131874();
  v3 = v2;
  sub_23F1217E8(&qword_256E05110);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F126058();
  sub_23F18AA80(v3);
  sub_23F1F9B30();
  sub_23F18A998();
  sub_23F1217E8(&qword_256E030A8);
  sub_23F2523C0();
  sub_23F24F614();
  sub_23F15E588(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void ValueDisambiguation.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;

  sub_23F131874();
  a19 = v23;
  a20 = v24;
  sub_23F24F910();
  sub_23F1217E8(&qword_256E05120);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1F9B30();
  sub_23F15E564();
  if (!v21)
  {
    sub_23F1217E8(&qword_256E030A8);
    sub_23F1F45AC();
    sub_23F17FE68();
    sub_23F17FF08((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    sub_23F2523F4();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v20);
  sub_23F1A9634();
  sub_23F1313FC();
}

#error "23F1EAC48: call analysis failed (funcsize=5)"

void sub_23F1EAC54()
{
  ValueDisambiguation.encode(to:)();
}

uint64_t (*ParameterNotAllowed.parameterId.modify())()
{
  return nullsub_1;
}

uint64_t ParameterNotAllowed.value.getter()
{
  return sub_23F1B01AC(type metadata accessor for ParameterNotAllowed);
}

uint64_t ParameterNotAllowed.value.setter(uint64_t a1)
{
  return sub_23F1D230C(a1, type metadata accessor for ParameterNotAllowed);
}

uint64_t (*ParameterNotAllowed.value.modify())()
{
  sub_23F251618();
  sub_23F180384();
  return nullsub_1;
}

void ParameterNotAllowed.reason.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F1A9744();
  *v0 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for ParameterNotAllowed(v2) + 24));
  sub_23F126078();
}

void ParameterNotAllowed.reason.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for ParameterNotAllowed(0) + 24)) = v2;
  sub_23F126078();
}

uint64_t (*ParameterNotAllowed.reason.modify())()
{
  type metadata accessor for ParameterNotAllowed(0);
  sub_23F18030C();
  return nullsub_1;
}

IntelligenceFlow::ParameterNotAllowed::Reason_optional __swiftcall ParameterNotAllowed.Reason.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (IntelligenceFlow::ParameterNotAllowed::Reason_optional)rawValue;
}

uint64_t ParameterNotAllowed.Reason.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void sub_23F1EAD54()
{
  sub_23F25E1EC();
}

void sub_23F1EAD5C()
{
  sub_23F156364();
}

void sub_23F1EAD64()
{
  sub_23F1565FC();
}

IntelligenceFlow::ParameterNotAllowed::Reason_optional sub_23F1EAD6C(Swift::Int *a1)
{
  return ParameterNotAllowed.Reason.init(rawValue:)(*a1);
}

void sub_23F1EAD74(uint64_t *a1@<X8>)
{
  *a1 = ParameterNotAllowed.Reason.rawValue.getter();
  sub_23F126078();
}

uint64_t sub_23F1EAD94()
{
  sub_23F24E98C();
  return sub_23F268258();
}

uint64_t sub_23F1EADF0()
{
  sub_23F24E98C();
  return sub_23F268234();
}

uint64_t ParameterNotAllowed.init(parameterId:value:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_23F24F8EC();
  *((_BYTE *)v2 + *(int *)(type metadata accessor for ParameterNotAllowed(0) + 24)) = 0;
  *v2 = v1;
  v2[1] = v0;
  sub_23F125F84();
  v3 = sub_23F24F294();
  return sub_23F24EEBC(v3, v4, v5, v6);
}

void ParameterNotAllowed.init(parameterId:value:reason:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F24F8EC();
  v4 = *v3;
  v5 = *(int *)(sub_23F251618() + 24);
  *v2 = v1;
  v2[1] = v0;
  v6 = sub_23F125F84();
  sub_23F24F1C0(v6);
  *((_BYTE *)v2 + v5) = v4;
  sub_23F131ABC();
}

uint64_t sub_23F1EAEC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6574656D61726170 && a2 == 0xEB00000000644972;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F1EB014(char a1)
{
  if (!a1)
    return 0x6574656D61726170;
  if (a1 == 1)
    return 0x65756C6176;
  return 0x6E6F73616572;
}

uint64_t sub_23F1EB06C()
{
  char *v0;

  return sub_23F1EB014(*v0);
}

uint64_t sub_23F1EB074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1EAEC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1EB098()
{
  sub_23F1F9B6C();
  return sub_23F2688B8();
}

uint64_t sub_23F1EB0C0()
{
  sub_23F1F9B6C();
  return sub_23F2688C4();
}

void ParameterNotAllowed.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v7[16];

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E05128);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F1F9B6C();
  sub_23F18A998();
  v7[15] = 0;
  sub_23F24F308();
  if (!v0)
  {
    v6 = type metadata accessor for ParameterNotAllowed(0);
    v7[14] = 1;
    sub_23F125F84();
    sub_23F12E488((uint64_t)&qword_256DFE598);
    sub_23F17F99C();
    v7[13] = *(_BYTE *)(v1 + *(int *)(v6 + 24));
    v7[12] = 2;
    sub_23F1F9BA8();
    sub_23F17F99C();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void ParameterNotAllowed.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12)
{
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_23F131874();
  v15 = v14;
  v27 = v16;
  v28 = *(_QWORD *)(sub_23F125F84() - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F1A982C(v18, v26);
  sub_23F1217E8(&qword_256E05140);
  sub_23F126210();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F1A9480();
  v21 = type metadata accessor for ParameterNotAllowed(v20);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F15E524();
  v24 = *(int *)(v23 + 24);
  *((_BYTE *)v12 + v24) = 0;
  sub_23F1A968C(v15);
  sub_23F1F9B6C();
  sub_23F1A9DA4();
  sub_23F2506AC();
  if (v13)
  {
    sub_23F24FB7C();
  }
  else
  {
    *v12 = sub_23F2516FC();
    v12[1] = v25;
    sub_23F1A9BB8();
    sub_23F12E488((uint64_t)&qword_256DFE5B8);
    sub_23F1A9338();
    sub_23F1263C0((uint64_t)v12 + *(int *)(v21 + 20), v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 32));
    sub_23F1F9BE4();
    sub_23F2686B4();
    sub_23F25043C();
    *((_BYTE *)v12 + v24) = a12;
    sub_23F24F0B8((uint64_t)v12, v27);
    sub_23F24FB7C();
    sub_23F24F1B8((uint64_t)v12);
  }
  sub_23F250228();
  sub_23F1313FC();
}

void sub_23F1EB42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[6];

  ParameterNotAllowed.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, vars8[4], vars8[5]);
}

void sub_23F1EB440()
{
  ParameterNotAllowed.encode(to:)();
}

uint64_t (*ParameterCandidatesNotFound.parameterId.modify())()
{
  return nullsub_1;
}

uint64_t ParameterCandidatesNotFound.value.getter()
{
  return sub_23F1B01AC(type metadata accessor for ParameterCandidatesNotFound);
}

uint64_t ParameterCandidatesNotFound.value.setter(uint64_t a1)
{
  return sub_23F1D230C(a1, type metadata accessor for ParameterCandidatesNotFound);
}

uint64_t (*ParameterCandidatesNotFound.value.modify())()
{
  type metadata accessor for ParameterCandidatesNotFound(0);
  sub_23F180384();
  return nullsub_1;
}

uint64_t ParameterCandidatesNotFound.init(parameterId:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_23F1E9208(a1, a2, (void (*)(_QWORD))type metadata accessor for ParameterCandidatesNotFound, a3);
}

uint64_t sub_23F1EB4C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6574656D61726170 && a2 == 0xEB00000000644972;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1EB5BC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 0x6574656D61726170;
}

uint64_t sub_23F1EB5F8()
{
  char *v0;

  return sub_23F1EB5BC(*v0);
}

uint64_t sub_23F1EB600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1EB4C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1EB624()
{
  sub_23F1F9C20();
  return sub_23F2688B8();
}

uint64_t sub_23F1EB64C()
{
  sub_23F1F9C20();
  return sub_23F2688C4();
}

void ParameterCandidatesNotFound.encode(to:)()
{
  sub_23F1E94E8();
}

void ParameterCandidatesNotFound.init(from:)()
{
  sub_23F1EB6DC();
}

void sub_23F1EB6DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t (*v5)(_QWORD);
  uint64_t *v6;
  uint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  sub_23F131874();
  v29 = v3;
  v30 = v0;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v25 = v10;
  v11 = sub_23F125F84();
  sub_23F251E80(v11);
  v24 = v12;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F1A982C(v14, v24);
  v28 = sub_23F1217E8(v7);
  sub_23F126048();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23F1A9864();
  v26 = v5;
  v17 = v5(v16);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (uint64_t *)((char *)&v24 - v18);
  sub_23F12545C(v9, v9[3]);
  sub_23F2523DC();
  v29 = v2;
  v20 = v30;
  sub_23F268888();
  if (v20)
  {
    sub_23F250744();
  }
  else
  {
    v30 = v9;
    v21 = v27;
    v22 = v29;
    *v19 = sub_23F268684();
    v19[1] = v23;
    sub_23F1A9BB8();
    sub_23F12E488((uint64_t)&qword_256DFE5B8);
    sub_23F1A97E4();
    sub_23F1A977C(v22, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_23F14EF80((uint64_t)v19 + *(int *)(v17 + 20), v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 32));
    sub_23F24F0B8((uint64_t)v19, v25);
    sub_23F251A54();
    sub_23F24F1B8((uint64_t)v19);
  }
  sub_23F24F9F8();
  sub_23F1313FC();
}

void sub_23F1EB8A0()
{
  ParameterCandidatesNotFound.init(from:)();
}

void sub_23F1EB8B4()
{
  ParameterCandidatesNotFound.encode(to:)();
}

void ToolDisambiguation.assistantSchemaKind.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ToolDisambiguation.assistantSchemaKind.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*ToolDisambiguation.assistantSchemaKind.modify())()
{
  return nullsub_1;
}

uint64_t (*ToolDisambiguation.tools.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1EB930(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000013 && a2 == 0x800000023F2950B0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736C6F6F74 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1EBA10(char a1)
{
  if ((a1 & 1) != 0)
    return 0x736C6F6F74;
  else
    return 0xD000000000000013;
}

uint64_t sub_23F1EBA48()
{
  char *v0;

  return sub_23F1EBA10(*v0);
}

uint64_t sub_23F1EBA50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1EB930(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1EBA74()
{
  sub_23F1F9C5C();
  return sub_23F2688B8();
}

uint64_t sub_23F1EBA9C()
{
  sub_23F1F9C5C();
  return sub_23F2688C4();
}

void ToolDisambiguation.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F131874();
  sub_23F250B2C();
  v8 = *(_QWORD *)(sub_23F1217E8(&qword_256E05168) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v0 + 16);
  sub_23F24EE44(v2);
  sub_23F1F9C5C();
  sub_23F18ABDC();
  sub_23F24F128();
  if (!v1)
  {
    v9 = v7;
    sub_23F1A9BB8();
    sub_23F1217E8(&qword_256E05178);
    sub_23F1F9C98();
    sub_23F1315CC();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void ToolDisambiguation.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  sub_23F131874();
  sub_23F15E7E8();
  sub_23F1217E8(&qword_256E05190);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1F9C5C();
  sub_23F15E564();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F15E764();
    sub_23F251464();
    sub_23F1217E8(&qword_256E05178);
    sub_23F1A9BB8();
    sub_23F1F9D14();
    sub_23F24F52C();
    sub_23F24EF80();
    sub_23F15E444((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    v8 = v9[1];
    *v1 = v3;
    v1[1] = v2;
    v1[2] = v8;
    sub_23F1315C4();
    sub_23F24EE8C();
  }
  sub_23F131790();
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1EBCD0()
{
  ToolDisambiguation.init(from:)();
}

void sub_23F1EBCE4()
{
  ToolDisambiguation.encode(to:)();
}

uint64_t (*AppIntentsInvocationPreview.bundleId.modify())()
{
  return nullsub_1;
}

uint64_t (*AppIntentsInvocationPreview.intent.modify())()
{
  return nullsub_1;
}

void AppIntentsInvocationPreview.parameters.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F25167C();
  *(_QWORD *)(v1 + 32) = a1;
  sub_23F126078();
}

uint64_t (*AppIntentsInvocationPreview.parameters.modify())()
{
  return nullsub_1;
}

void AppIntentsInvocationPreview.Parameter.key.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void AppIntentsInvocationPreview.Parameter.key.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*AppIntentsInvocationPreview.Parameter.key.modify())()
{
  return nullsub_1;
}

uint64_t AppIntentsInvocationPreview.Parameter.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return sub_23F131104();
}

void AppIntentsInvocationPreview.Parameter.value.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  sub_23F131110();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_BYTE *)(v1 + 32) = v4;
  sub_23F12612C();
}

uint64_t (*AppIntentsInvocationPreview.Parameter.value.modify())()
{
  return nullsub_1;
}

__n128 AppIntentsInvocationPreview.Parameter.init(key:value:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, __n128 *a4@<X8>)
{
  unsigned __int8 v4;
  __n128 result;

  v4 = a3[1].n128_u8[0];
  a4->n128_u64[0] = a1;
  a4->n128_u64[1] = a2;
  result = *a3;
  a4[1] = *a3;
  a4[2].n128_u8[0] = v4;
  return result;
}

uint64_t _s16IntelligenceFlow14MessagePayloadO14RequestContentO04TextF0V2eeoiySbAG_AGtFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;

  sub_23F250464(a1);
  sub_23F24FBF8();
  v3 = v3 && v1 == v2;
  if (v3)
    return _s16IntelligenceFlow14MessagePayloadO9TerminateV2eeoiySbAE_AEtFZ_0();
  else
    return sub_23F268798();
}

uint64_t sub_23F1EBE44()
{
  sub_23F1F9D90();
  return sub_23F2688B8();
}

uint64_t sub_23F1EBE6C()
{
  sub_23F1F9D90();
  return sub_23F2688C4();
}

void AppIntentsInvocationPreview.Parameter.Value.StringValue.encode(to:)()
{
  sub_23F1EBEC8();
}

void sub_23F1EBEC8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  sub_23F131874();
  v11 = v3;
  sub_23F1A9D7C(v4, v5);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F15EB6C();
  v7 = v0[1];
  v10 = *v0;
  v8 = (_QWORD *)sub_23F250390();
  sub_23F12545C(v8, v9);
  sub_23F2523DC();
  sub_23F24FDB4();
  v11(v10, v7);
  sub_23F15E694(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void AppIntentsInvocationPreview.Parameter.Value.StringValue.init(from:)()
{
  sub_23F1EBFA0();
}

void sub_23F1EBFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  sub_23F131874();
  sub_23F252164();
  v14 = v3;
  sub_23F1A9D7C(v4, v5);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F251248();
  sub_23F24F564();
  if (!v2)
  {
    v9 = v14;
    v10 = sub_23F24FBE0();
    v12 = v11;
    sub_23F15E44C((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *v9 = v10;
    v9[1] = v12;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1EC068()
{
  AppIntentsInvocationPreview.Parameter.Value.StringValue.init(from:)();
}

void sub_23F1EC07C()
{
  AppIntentsInvocationPreview.Parameter.Value.StringValue.encode(to:)();
}

void static AppIntentsInvocationPreview.Parameter.Value.ArrayValue.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  sub_23F128CF0(*a1, *a2);
}

void sub_23F1EC09C()
{
  uint64_t v0;
  BOOL v1;

  sub_23F251744();
  v1 = v1 && v0 == 0xE500000000000000;
  if (v1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F2509B4();
    sub_23F143D08();
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F1EC0F0()
{
  sub_23F1F9DCC();
  return sub_23F2688B8();
}

uint64_t sub_23F1EC118()
{
  sub_23F1F9DCC();
  return sub_23F2688C4();
}

void AppIntentsInvocationPreview.Parameter.Value.ArrayValue.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F131874();
  v2 = v1;
  sub_23F1217E8(&qword_256E051C0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F18AA80(v2);
  sub_23F1F9DCC();
  sub_23F18A998();
  sub_23F12636C();
  sub_23F24F834((uint64_t)&unk_256E051D8);
  sub_23F2504B4();
  sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void AppIntentsInvocationPreview.Parameter.Value.ArrayValue.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;

  sub_23F131874();
  a19 = v23;
  a20 = v24;
  sub_23F24F910();
  sub_23F1217E8(&qword_256E051E8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1F9DCC();
  sub_23F15E564();
  if (!v21)
  {
    sub_23F12636C();
    sub_23F24F834((uint64_t)&unk_256E051F0);
    sub_23F17FE68();
    sub_23F17FF08((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    sub_23F2523F4();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v20);
  sub_23F1A9634();
  sub_23F1313FC();
}

#error "23F1EC2F8: call analysis failed (funcsize=5)"

void sub_23F1EC304()
{
  AppIntentsInvocationPreview.Parameter.Value.ArrayValue.encode(to:)();
}

void static AppIntentsInvocationPreview.Parameter.Value.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    {
      sub_23F25092C();
      sub_23F25092C();
      v2 = sub_23F14C3A8();
      sub_23F128CF0(v2, v3);
      sub_23F131110();
      sub_23F2515E8();
      sub_23F2515E8();
LABEL_12:
      sub_23F131110();
      goto LABEL_13;
    }
  }
  else if ((*(_BYTE *)(a2 + 16) & 1) == 0)
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
      sub_23F126148();
    sub_23F252114();
    sub_23F131104();
    sub_23F2501EC();
    sub_23F131104();
    sub_23F2501EC();
    sub_23F131110();
    sub_23F252114();
    goto LABEL_12;
  }
  sub_23F252120();
  sub_23F131104();
  sub_23F131104();
  sub_23F131110();
  sub_23F252120();
  sub_23F131110();
LABEL_13:
  sub_23F131ABC();
}

uint64_t sub_23F1EC430(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x676E69727473 && a2 == 0xE600000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7961727261 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1EC50C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7961727261;
  else
    return 0x676E69727473;
}

uint64_t sub_23F1EC53C()
{
  sub_23F1F9EBC();
  return sub_23F2688B8();
}

uint64_t sub_23F1EC564()
{
  sub_23F1F9EBC();
  return sub_23F2688C4();
}

uint64_t sub_23F1EC58C()
{
  char *v0;

  return sub_23F1EC50C(*v0);
}

uint64_t sub_23F1EC594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1EC430(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1EC5B8()
{
  sub_23F1F9E80();
  return sub_23F2688B8();
}

uint64_t sub_23F1EC5E0()
{
  sub_23F1F9E80();
  return sub_23F2688C4();
}

uint64_t sub_23F1EC608()
{
  sub_23F1F9F34();
  return sub_23F2688B8();
}

uint64_t sub_23F1EC630()
{
  sub_23F1F9F34();
  return sub_23F2688C4();
}

void AppIntentsInvocationPreview.Parameter.Value.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  sub_23F131874();
  sub_23F1AE598();
  sub_23F1217E8(&qword_256E05200);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F1316E4();
  sub_23F1217E8(&qword_256E05208);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F15EB6C();
  v8 = *(_QWORD *)(sub_23F1217E8(&qword_256E05210) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F250D84();
  v5 = *(_BYTE *)(v0 + 16);
  sub_23F24FC14(v1);
  sub_23F1F9E80();
  sub_23F2688A0();
  if ((v5 & 1) != 0)
  {
    sub_23F251F94();
    sub_23F15E6E8();
    sub_23F1F9EF8();
    sub_23F1AE450();
    v6 = sub_23F2500BC();
  }
  else
  {
    sub_23F1F9F34();
    sub_23F15E6E8();
    sub_23F1F9F70();
    sub_23F1AE450();
    v6 = sub_23F24FA10();
  }
  sub_23F15E444(v6, v7);
  sub_23F24EC74(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void AppIntentsInvocationPreview.Parameter.Value.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_23F131874();
  sub_23F1AE598();
  v39 = v15;
  v40 = *(_QWORD *)(sub_23F1217E8(&qword_256E05240) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F18ABFC(v17, v37);
  sub_23F1217E8(&qword_256E05248);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F126058();
  sub_23F1217E8(&qword_256E05250);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F1319C8();
  sub_23F24ED3C(v14);
  sub_23F1F9E80();
  sub_23F15E564();
  if (a10)
    goto LABEL_7;
  v38 = (uint64_t)v14;
  sub_23F2686D8();
  sub_23F2520E8();
  if (!v20
    || (v21 = *(_BYTE *)(v10 + 32),
        v22 = sub_23F25081C(),
        sub_23F15E2D0(v22, v23, v24, v25, v26, v27),
        v29 = v28,
        v31 = v30,
        sub_23F1318B8(),
        v29 != v31 >> 1))
  {
    sub_23F15EDB8();
    sub_23F131B30();
    sub_23F251E98();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F250EB8();
    sub_23F2502A0((uint64_t)&type metadata for AppIntentsInvocationPreview.Parameter.Value);
    v32 = sub_23F15E6B4();
    sub_23F24EF6C(v32, *MEMORY[0x24BEE26D0]);
    sub_23F251024();
    sub_23F24F164();
    sub_23F15E44C(v11, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
LABEL_7:
    sub_23F250744();
    goto LABEL_8;
  }
  if ((v21 & 1) != 0)
  {
    sub_23F251F94();
    sub_23F250FD8();
    sub_23F26863C();
    sub_23F1F9FAC();
    sub_23F18012C();
    sub_23F1A977C(v41, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
    sub_23F1AE3A8();
    v33 = sub_23F251CD4();
    sub_23F15E44C(v33, v34);
    v35 = 0;
    v36 = v42;
  }
  else
  {
    LOBYTE(v42) = 0;
    sub_23F1F9F34();
    sub_23F250FD8();
    sub_23F26863C();
    sub_23F1F9FE8();
    sub_23F1A97E4();
    sub_23F17FF08(v13, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    sub_23F1AE3A8();
    sub_23F15E44C(v11, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v36 = v42;
    v35 = v43;
  }
  *(_QWORD *)v39 = v36;
  *(_QWORD *)(v39 + 8) = v35;
  *(_BYTE *)(v39 + 16) = v21;
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v38);
LABEL_8:
  sub_23F24F9F8();
  sub_23F1313FC();
}

void sub_23F1ECB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  AppIntentsInvocationPreview.Parameter.Value.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1ECBAC()
{
  AppIntentsInvocationPreview.Parameter.Value.encode(to:)();
}

uint64_t static AppIntentsInvocationPreview.Parameter.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  char v6;
  __int128 v7;
  char v8;
  BOOL v9;
  char v10;
  char v11;
  __int128 v13;
  char v14;
  __int128 v15;
  char v16;

  v1 = sub_23F250464(a1);
  v5 = *(_OWORD *)(v4 + 16);
  v6 = *(_BYTE *)(v4 + 32);
  v7 = *(_OWORD *)(v3 + 16);
  v8 = *(_BYTE *)(v3 + 32);
  v9 = v1 == *(_QWORD *)v3 && v2 == *(_QWORD *)(v3 + 8);
  if (v9 || (sub_23F268798(), v10 = sub_23F15E5CC(), (v11 & 1) != 0))
  {
    v15 = v5;
    v16 = v6;
    v13 = v7;
    v14 = v8;
    static AppIntentsInvocationPreview.Parameter.Value.== infix(_:_:)((uint64_t)&v15, (uint64_t)&v13);
  }
  return v10 & 1;
}

uint64_t sub_23F1ECC40(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1ECD14(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 7955819;
}

uint64_t sub_23F1ECD40()
{
  char *v0;

  return sub_23F1ECD14(*v0);
}

uint64_t sub_23F1ECD48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1ECC40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1ECD6C()
{
  sub_23F1FA024();
  return sub_23F2688B8();
}

uint64_t sub_23F1ECD94()
{
  sub_23F1FA024();
  return sub_23F2688C4();
}

void AppIntentsInvocationPreview.Parameter.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F131874();
  sub_23F250B2C();
  v4 = *(_QWORD *)(sub_23F1217E8(&qword_256E05268) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F250D4C();
  sub_23F24EE44(v2);
  sub_23F1FA024();
  sub_23F18ABDC();
  sub_23F131644();
  if (!v0)
  {
    sub_23F15EC34();
    sub_23F1F9E08();
    sub_23F1315CC();
  }
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void AppIntentsInvocationPreview.Parameter.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  sub_23F131874();
  sub_23F15E7E8();
  sub_23F1217E8(&qword_256E05278);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1FA024();
  sub_23F15E564();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    LOBYTE(v13) = 0;
    v6 = sub_23F15E704();
    v8 = v7;
    sub_23F15EC34();
    sub_23F1F9E44();
    sub_23F24F52C();
    sub_23F15E79C();
    sub_23F15E444((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v9 = v13;
    v10 = v14;
    v11 = v15;
    sub_23F13174C();
    sub_23F2504FC();
    sub_23F131104();
    sub_23F131790();
    *(_QWORD *)v1 = v6;
    *(_QWORD *)(v1 + 8) = v8;
    *(_QWORD *)(v1 + 16) = v9;
    *(_QWORD *)(v1 + 24) = v10;
    *(_BYTE *)(v1 + 32) = v11;
    sub_23F131BF4();
    sub_23F131790();
    sub_23F2504FC();
    sub_23F131110();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1ED008()
{
  AppIntentsInvocationPreview.Parameter.init(from:)();
}

void sub_23F1ED01C()
{
  AppIntentsInvocationPreview.Parameter.encode(to:)();
}

uint64_t static AppIntentsInvocationPreview.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_23F1ED040(a1, a2, (uint64_t (*)(uint64_t))sub_23F128B60);
}

uint64_t sub_23F1ED040(_QWORD *a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t v9;

  v3 = a1[2];
  v4 = a1[3];
  v5 = a2[2];
  v6 = a2[3];
  v7 = *a1 == *a2 && a1[1] == a2[1];
  if (!v7 && (sub_23F126148() & 1) == 0)
    return 0;
  v8 = v3 == v5 && v4 == v6;
  if (!v8 && (sub_23F126148() & 1) == 0)
    return 0;
  v9 = sub_23F1317E0();
  return a3(v9);
}

uint64_t sub_23F1ED0F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x746E65746E69 && a2 == 0xE600000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F1ED240(char a1)
{
  if (!a1)
    return 0x6449656C646E7562;
  if (a1 == 1)
    return 0x746E65746E69;
  return 0x6574656D61726170;
}

uint64_t sub_23F1ED298()
{
  char *v0;

  return sub_23F1ED240(*v0);
}

uint64_t sub_23F1ED2A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1ED0F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1ED2C4()
{
  sub_23F1FA060();
  return sub_23F2688B8();
}

uint64_t sub_23F1ED2EC()
{
  sub_23F1FA060();
  return sub_23F2688C4();
}

void AppIntentsInvocationPreview.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);

  sub_23F131874();
  v2 = v1;
  sub_23F1217E8(&qword_256E05280);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F24FC80();
  sub_23F24F270(v2);
  sub_23F1FA060();
  sub_23F251374();
  sub_23F24FDB4();
  sub_23F251120();
  sub_23F24FE44();
  if (!v0)
  {
    sub_23F252030();
    sub_23F1A931C();
    sub_23F180274();
    sub_23F12636C();
    sub_23F24F834((uint64_t)&unk_256E05298);
    sub_23F1315CC();
  }
  v4 = sub_23F251CD4();
  sub_23F15E7D4(v4, v5);
  sub_23F15E830();
  sub_23F1313FC();
}

void AppIntentsInvocationPreview.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F131874();
  sub_23F18AC78();
  sub_23F1217E8(&qword_256E052A8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F18AA80(v0);
  sub_23F1FA060();
  sub_23F250D14();
  sub_23F24EEA4();
  if (v1)
  {
    sub_23F131BF4();
  }
  else
  {
    v7 = sub_23F24FBE0();
    v9 = v8;
    v19 = v7;
    sub_23F24F790();
    v10 = sub_23F24FBE0();
    v12 = v11;
    v17 = v10;
    sub_23F1217E8(&qword_256E05290);
    sub_23F180274();
    sub_23F1FA0D8((uint64_t)&unk_256E052B0);
    v14 = v13;
    v18 = v12;
    sub_23F1315C4();
    sub_23F17FE48();
    sub_23F17FF08((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    if (v14)
    {
      sub_23F13190C();
      sub_23F1317F8();
      sub_23F131BF4();
      sub_23F13190C();
    }
    else
    {
      v15 = v20;
      sub_23F126364();
      sub_23F1315C4();
      sub_23F13190C();
      v16 = v18;
      *v2 = v19;
      v2[1] = v9;
      v2[2] = v17;
      v2[3] = v16;
      v2[4] = v15;
      sub_23F24EE8C();
      sub_23F1318DC();
    }
    swift_bridgeObjectRelease();
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1ED5F4()
{
  AppIntentsInvocationPreview.init(from:)();
}

void sub_23F1ED608()
{
  AppIntentsInvocationPreview.encode(to:)();
}

void PlannerPromptData.onScreenContext.setter()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F15ECF0();
  *v1 = v0;
  sub_23F126078();
}

uint64_t (*PlannerPromptData.onScreenContext.modify())()
{
  return nullsub_1;
}

uint64_t PlannerPromptData.availableTools.getter()
{
  return swift_bridgeObjectRetain();
}

void PlannerPromptData.availableTools.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F18ADB4();
  *(_QWORD *)(v1 + 8) = a1;
  sub_23F126078();
}

uint64_t (*PlannerPromptData.availableTools.modify())()
{
  return nullsub_1;
}

uint64_t PlannerPromptData.OnScreenContextValue.value.getter()
{
  return sub_23F1EF104();
}

uint64_t PlannerPromptData.OnScreenContextValue.value.setter(uint64_t a1)
{
  return sub_23F1EF140(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t (*PlannerPromptData.OnScreenContextValue.value.modify())()
{
  return nullsub_1;
}

void PlannerPromptData.OnScreenContextValue.type.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F1A9744();
  *v0 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for PlannerPromptData.OnScreenContextValue(v2) + 20));
  sub_23F126078();
}

void PlannerPromptData.OnScreenContextValue.type.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for PlannerPromptData.OnScreenContextValue(0) + 20)) = v2;
  sub_23F126078();
}

uint64_t (*PlannerPromptData.OnScreenContextValue.type.modify())()
{
  type metadata accessor for PlannerPromptData.OnScreenContextValue(0);
  sub_23F180384();
  return nullsub_1;
}

void PlannerPromptData.OnScreenContextValue.init(value:type:)(char *a1@<X1>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;

  v3 = *a1;
  v4 = sub_23F125F84();
  sub_23F24F1C0(v4);
  *(_BYTE *)(a2 + *(int *)(type metadata accessor for PlannerPromptData.OnScreenContextValue(0) + 20)) = v3;
  sub_23F12612C();
}

uint64_t sub_23F1ED760(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x417375636F466E69 && a2 == 0xEA00000000007070;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E65657263536E6FLL && a2 == 0xEE006E6F73726550;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD00000000000001CLL && a2 == 0x800000023F2950D0 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000018 && a2 == 0x800000023F2950F0 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023F295110 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023F295130 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x800000023F295150)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else
    {
      v7 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 6;
      else
        return 7;
    }
  }
}

uint64_t sub_23F1EDA44(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1EDA7C + 4 * byte_23F278F20[a1]))(0x417375636F466E69, 0xEA00000000007070);
}

uint64_t sub_23F1EDA7C()
{
  return 0x6E65657263536E6FLL;
}

unint64_t sub_23F1EDAA0()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_23F1EDB08()
{
  return 0xD000000000000016;
}

uint64_t sub_23F1EDB24()
{
  unsigned __int8 *v0;

  return sub_23F1EDA44(*v0);
}

uint64_t sub_23F1EDB2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1ED760(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1EDB50()
{
  sub_23F1FA178();
  return sub_23F2688B8();
}

uint64_t sub_23F1EDB78()
{
  sub_23F1FA178();
  return sub_23F2688C4();
}

uint64_t sub_23F1EDBA0()
{
  sub_23F1FA31C();
  return sub_23F2688B8();
}

uint64_t sub_23F1EDBC8()
{
  sub_23F1FA31C();
  return sub_23F2688C4();
}

uint64_t sub_23F1EDBF0()
{
  sub_23F1FA268();
  return sub_23F2688B8();
}

uint64_t sub_23F1EDC18()
{
  sub_23F1FA268();
  return sub_23F2688C4();
}

uint64_t sub_23F1EDC40()
{
  sub_23F1FA22C();
  return sub_23F2688B8();
}

uint64_t sub_23F1EDC68()
{
  sub_23F1FA22C();
  return sub_23F2688C4();
}

uint64_t sub_23F1EDC90()
{
  sub_23F1FA1F0();
  return sub_23F2688B8();
}

uint64_t sub_23F1EDCB8()
{
  sub_23F1FA1F0();
  return sub_23F2688C4();
}

uint64_t sub_23F1EDCE0()
{
  sub_23F1FA2A4();
  return sub_23F2688B8();
}

uint64_t sub_23F1EDD08()
{
  sub_23F1FA2A4();
  return sub_23F2688C4();
}

uint64_t sub_23F1EDD30()
{
  sub_23F1FA1B4();
  return sub_23F2688B8();
}

uint64_t sub_23F1EDD58()
{
  sub_23F1FA1B4();
  return sub_23F2688C4();
}

uint64_t sub_23F1EDD80()
{
  sub_23F1FA2E0();
  return sub_23F2688B8();
}

uint64_t sub_23F1EDDA8()
{
  sub_23F1FA2E0();
  return sub_23F2688C4();
}

void PlannerPromptData.OnScreenContextValue.ContextType.encode(to:)()
{
  unsigned __int8 *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F131874();
  v2 = v1;
  sub_23F1217E8(&qword_256E052C0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F17FFE0(v4, v17);
  sub_23F1217E8(&qword_256E052C8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F16BC34(v6, v18);
  sub_23F1217E8(&qword_256E052D0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F16BC18(v8, v19);
  sub_23F1217E8(&qword_256E052D8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F15E9D0(v10, v20);
  sub_23F1217E8(&qword_256E052E0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F17FFFC(v12, v21);
  sub_23F1217E8(&qword_256E052E8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F15E660();
  sub_23F1217E8(&qword_256E052F0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F15E524();
  sub_23F1217E8(&qword_256E052F8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F24F92C();
  v16 = *v0;
  sub_23F18AA80(v2);
  sub_23F1FA178();
  sub_23F2688A0();
  __asm { BR              X9 }
}

void sub_23F1EDF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  *(_BYTE *)(v2 - 71) = 0;
  sub_23F1FA31C();
  sub_23F15E6E8();
  sub_23F15E444(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v3 = sub_23F15EB40();
  v4(v3);
  sub_23F1313FC();
}

void PlannerPromptData.OnScreenContextValue.ContextType.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F131874();
  v2 = v1;
  sub_23F1217E8(&qword_256E05340);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F1A982C(v4, v35);
  v5 = sub_23F1217E8(&qword_256E05348);
  sub_23F251010(v5);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1A94D4(v7, v36);
  sub_23F1217E8(&qword_256E05350);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F17FFE0(v9, v37);
  sub_23F1217E8(&qword_256E05358);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F16BBFC(v11, v38);
  sub_23F1217E8(&qword_256E05360);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F24ED20(v13, v39);
  sub_23F1217E8(&qword_256E05368);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F16BC34(v15, v40);
  sub_23F1217E8(&qword_256E05370);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F1316E4();
  sub_23F1217E8(&qword_256E05378);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F15E660();
  sub_23F24EE44(v2);
  sub_23F1FA178();
  sub_23F24F564();
  if (!v0)
  {
    sub_23F2514C4();
    sub_23F250B7C();
    if (v18)
    {
      sub_23F24FC44();
      v41 = *(unsigned __int8 *)(v19 + 32);
      v20 = sub_23F24FC34();
      sub_23F15E2D0(v20, v21, v22, v23, v24, v25);
      v27 = v26;
      v29 = v28;
      sub_23F131790();
      if (v27 == v29 >> 1)
        __asm { BR              X9 }
    }
    sub_23F15EDB8();
    sub_23F131B30();
    v31 = v30;
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F24F960();
    *v31 = &type metadata for PlannerPromptData.OnScreenContextValue.ContextType;
    sub_23F268648();
    v32 = sub_23F24ECCC();
    sub_23F1A97D0(v32, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F17FAB4();
    v33 = sub_23F2504FC();
    v34(v33);
  }
  sub_23F250388();
  sub_23F251DB4();
  sub_23F1313FC();
}

void sub_23F1EE434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  sub_23F252050();
  sub_23F24F2D0();
  if (!v0)
  {
    sub_23F250BC4(*(_QWORD *)(v1 - 256));
    sub_23F24F84C();
    v2 = sub_23F17FE50();
    v3(v2);
    JUMPOUT(0x23F1EE600);
  }
  sub_23F24F84C();
  sub_23F17FE50();
  JUMPOUT(0x23F1EE420);
}

void sub_23F1EE500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD);

  sub_23F251B70();
  sub_23F24F2F8();
  if (!v0)
  {
    v2 = sub_23F2500BC();
    v3(v2, *(_QWORD *)(v1 - 168));
    sub_23F24F84C();
    sub_23F250CFC();
    JUMPOUT(0x23F1EE5FCLL);
  }
  sub_23F24F84C();
  sub_23F250CFC();
  JUMPOUT(0x23F1EE420);
}

void sub_23F1EE608()
{
  PlannerPromptData.OnScreenContextValue.ContextType.init(from:)();
}

void sub_23F1EE61C()
{
  PlannerPromptData.OnScreenContextValue.ContextType.encode(to:)();
}

void static PlannerPromptData.OnScreenContextValue.== infix(_:_:)()
{
  uint64_t v0;

  if ((sub_23F2523E8() & 1) != 0)
  {
    v0 = type metadata accessor for PlannerPromptData.OnScreenContextValue(0);
    sub_23F251848(*(int *)(v0 + 20));
  }
  sub_23F126078();
}

uint64_t sub_23F1EE664(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1EE738(char a1)
{
  if ((a1 & 1) != 0)
    return 1701869940;
  else
    return 0x65756C6176;
}

uint64_t sub_23F1EE764()
{
  char *v0;

  return sub_23F1EE738(*v0);
}

uint64_t sub_23F1EE76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1EE664(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1EE790()
{
  sub_23F1FA358();
  return sub_23F2688B8();
}

uint64_t sub_23F1EE7B8()
{
  sub_23F1FA358();
  return sub_23F2688C4();
}

void PlannerPromptData.OnScreenContextValue.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v6[16];

  sub_23F1A9358();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E05380);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v6[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F1FA358();
  sub_23F18A998();
  v6[15] = 0;
  sub_23F125F84();
  sub_23F12E488((uint64_t)&qword_256DFE598);
  sub_23F126188();
  if (!v0)
  {
    v6[14] = *(_BYTE *)(v1 + *(int *)(type metadata accessor for PlannerPromptData.OnScreenContextValue(0) + 20));
    v6[13] = 1;
    sub_23F1FA394();
    sub_23F17F99C();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F24F3B8();
  sub_23F18AB98();
}

void PlannerPromptData.OnScreenContextValue.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F131874();
  v16 = v15;
  v28 = v17;
  v31 = sub_23F125F84();
  v29 = *(_QWORD *)(v31 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F18ABFC(v19, v26[0]);
  v30 = sub_23F1217E8(&qword_256E05398);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F125FBC();
  v22 = type metadata accessor for PlannerPromptData.OnScreenContextValue(v21);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v26 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F24F1D8(v16);
  sub_23F1FA358();
  sub_23F1A9814();
  if (v12)
  {
    sub_23F24FB7C();
  }
  else
  {
    v26[1] = (uint64_t)v16;
    v27 = v13;
    sub_23F12E488((uint64_t)&qword_256DFE5B8);
    sub_23F1A9D04();
    sub_23F17FE68();
    sub_23F24FDA0();
    sub_23F1FA3D0();
    sub_23F17FE68();
    sub_23F15E444(v14, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
    v25[*(int *)(v22 + 20)] = a12;
    sub_23F24F0B8((uint64_t)v25, v28);
    sub_23F17FF68();
    sub_23F24F1B8((uint64_t)v25);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1EEAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  PlannerPromptData.OnScreenContextValue.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_23F1EEAE8()
{
  PlannerPromptData.OnScreenContextValue.encode(to:)();
}

void PlannerPromptData.Tool.definition.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F250D08();
  sub_23F1BE1A0(v0, v1, type metadata accessor for PlannerPromptData.Tool.Definition);
}

void PlannerPromptData.Tool.definition.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F1F4C44(a1, v1, type metadata accessor for PlannerPromptData.Tool.Definition);
}

uint64_t (*PlannerPromptData.Tool.definition.modify())()
{
  return nullsub_1;
}

void PlannerPromptData.Tool.init(definition:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23F1BE0F4(a1, a2, type metadata accessor for PlannerPromptData.Tool.Definition);
}

uint64_t PlannerPromptData.Tool.Definition.ToolDefinition.definition.getter()
{
  return sub_23F1EF104();
}

uint64_t PlannerPromptData.Tool.Definition.ToolDefinition.definition.setter(uint64_t a1)
{
  return sub_23F1EF140(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0]);
}

uint64_t (*PlannerPromptData.Tool.Definition.ToolDefinition.definition.modify())()
{
  return nullsub_1;
}

uint64_t PlannerPromptData.Tool.Definition.ToolDefinition.init(definition:)(uint64_t a1)
{
  return sub_23F1EF188(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0]);
}

uint64_t PlannerPromptData.Tool.Definition.ToolDefinition.hash(into:)(uint64_t a1)
{
  return sub_23F1EF1C8(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0]);
}

uint64_t sub_23F1EEBC8()
{
  sub_23F1FA420();
  return sub_23F2688B8();
}

uint64_t sub_23F1EEBF0()
{
  sub_23F1FA420();
  return sub_23F2688C4();
}

void PlannerPromptData.Tool.Definition.ToolDefinition.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;

  sub_23F1A9358();
  a17 = v19;
  a18 = v20;
  sub_23F1A9340();
  sub_23F1217E8(&qword_256E053B0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1FA420();
  sub_23F18A998();
  sub_23F2505F4();
  sub_23F12E488((uint64_t)&unk_256E05188);
  sub_23F1A919C();
  sub_23F15E588((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  sub_23F1A93B4();
  sub_23F18AB98();
}

void PlannerPromptData.Tool.Definition.ToolDefinition.hashValue.getter()
{
  sub_23F1EF3B8();
}

void PlannerPromptData.Tool.Definition.ToolDefinition.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F131874();
  v4 = v3;
  sub_23F2505F4();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F24F044(v6, v12);
  sub_23F1217E8(&qword_256E053C0);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F15E9EC();
  type metadata accessor for PlannerPromptData.Tool.Definition.ToolDefinition(v8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F1A968C(v4);
  sub_23F1FA420();
  sub_23F24F4C4();
  if (!v0)
  {
    sub_23F12E488((uint64_t)&unk_256E051A0);
    sub_23F24F138();
    sub_23F15E7D4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v10 = sub_23F24F474();
    sub_23F24FE84(v10, v11, type metadata accessor for PlannerPromptData.Tool.Definition.ToolDefinition);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
  sub_23F250228();
  sub_23F1313FC();
}

void sub_23F1EEE04()
{
  sub_23F1EF530();
}

void sub_23F1EEE20()
{
  PlannerPromptData.Tool.Definition.ToolDefinition.init(from:)();
}

#error "23F1EEE3C: call analysis failed (funcsize=5)"

uint64_t PlannerPromptData.Tool.Definition.ClientAction.definition.getter()
{
  return sub_23F1EF104();
}

uint64_t PlannerPromptData.Tool.Definition.ClientAction.definition.setter(uint64_t a1)
{
  return sub_23F1EF140(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0]);
}

uint64_t (*PlannerPromptData.Tool.Definition.ClientAction.definition.modify())()
{
  return nullsub_1;
}

uint64_t PlannerPromptData.Tool.Definition.ClientAction.init(definition:)(uint64_t a1)
{
  return sub_23F1EF188(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0]);
}

uint64_t PlannerPromptData.Tool.Definition.ClientAction.hash(into:)(uint64_t a1)
{
  return sub_23F1EF1C8(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0]);
}

uint64_t sub_23F1EEE9C()
{
  sub_23F1FA470();
  return sub_23F2688B8();
}

uint64_t sub_23F1EEEC4()
{
  sub_23F1FA470();
  return sub_23F2688C4();
}

void PlannerPromptData.Tool.Definition.ClientAction.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;

  sub_23F1A9358();
  a17 = v19;
  a18 = v20;
  sub_23F1A9340();
  sub_23F1217E8(&qword_256E053C8);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1FA470();
  sub_23F18A998();
  sub_23F2505F4();
  sub_23F12E488((uint64_t)&unk_256E05188);
  sub_23F1A919C();
  sub_23F15E588((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  sub_23F1A93B4();
  sub_23F18AB98();
}

void PlannerPromptData.Tool.Definition.ClientAction.hashValue.getter()
{
  sub_23F1EF3B8();
}

void PlannerPromptData.Tool.Definition.ClientAction.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F131874();
  v4 = v3;
  sub_23F2505F4();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F24F044(v6, v12);
  sub_23F1217E8(&qword_256E053D8);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F15E9EC();
  type metadata accessor for PlannerPromptData.Tool.Definition.ClientAction(v8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F1A968C(v4);
  sub_23F1FA470();
  sub_23F24F4C4();
  if (!v0)
  {
    sub_23F12E488((uint64_t)&unk_256E051A0);
    sub_23F24F138();
    sub_23F15E7D4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v10 = sub_23F24F474();
    sub_23F24FE84(v10, v11, type metadata accessor for PlannerPromptData.Tool.Definition.ClientAction);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
  sub_23F250228();
  sub_23F1313FC();
}

void sub_23F1EF0D0()
{
  PlannerPromptData.Tool.Definition.ClientAction.init(from:)();
}

#error "23F1EF0EC: call analysis failed (funcsize=5)"

uint64_t PlannerPromptData.Tool.Definition.AssistantSchema.identifier.getter()
{
  return sub_23F1EF104();
}

uint64_t sub_23F1EF104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F24FB34();
  v0 = sub_23F1317E0();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t PlannerPromptData.Tool.Definition.AssistantSchema.identifier.setter(uint64_t a1)
{
  return sub_23F1EF140(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEBA5E0]);
}

uint64_t sub_23F1EF140(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F24F690(a1, a2);
  v2 = sub_23F17FE50();
  return sub_23F126180(v2, v3, v4, v5);
}

uint64_t (*PlannerPromptData.Tool.Definition.AssistantSchema.identifier.modify())()
{
  return nullsub_1;
}

uint64_t PlannerPromptData.Tool.Definition.AssistantSchema.init(identifier:)(uint64_t a1)
{
  return sub_23F1EF188(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEBA5E0]);
}

uint64_t sub_23F1EF188(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F24F690(a1, a2);
  v2 = sub_23F24F294();
  return sub_23F126180(v2, v3, v4, v5);
}

uint64_t PlannerPromptData.Tool.Definition.AssistantSchema.hash(into:)(uint64_t a1)
{
  return sub_23F1EF1C8(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEBA5E0]);
}

uint64_t sub_23F1EF1C8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  sub_23F24F690(a1, a2);
  sub_23F2505BC();
  sub_23F15EB34();
  return sub_23F26812C();
}

void sub_23F1EF218(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    sub_23F251288();
  }
  else
  {
    sub_23F2509B4();
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F1EF298()
{
  sub_23F1FA4C0();
  return sub_23F2688B8();
}

uint64_t sub_23F1EF2C0()
{
  sub_23F1FA4C0();
  return sub_23F2688C4();
}

void PlannerPromptData.Tool.Definition.AssistantSchema.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;

  sub_23F1A9358();
  a17 = v19;
  a18 = v20;
  sub_23F1A9340();
  sub_23F1217E8(&qword_256E053E8);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1FA4C0();
  sub_23F18A998();
  sub_23F2680D8();
  sub_23F12E488((uint64_t)&unk_256E053F8);
  sub_23F1A919C();
  sub_23F15E588((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  sub_23F1A93B4();
  sub_23F18AB98();
}

void PlannerPromptData.Tool.Definition.AssistantSchema.hashValue.getter()
{
  sub_23F1EF3B8();
}

void sub_23F1EF3B8()
{
  sub_23F1317B8();
  sub_23F25096C();
  sub_23F2505BC();
  sub_23F251608();
  sub_23F1318A0();
  sub_23F250A40();
}

void PlannerPromptData.Tool.Definition.AssistantSchema.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F131874();
  sub_23F1A9CD0(v4);
  sub_23F2680D8();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F24F044(v6, v12);
  sub_23F1217E8(&qword_256E05400);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23F15E9EC();
  type metadata accessor for PlannerPromptData.Tool.Definition.AssistantSchema(v8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F1A968C(v0);
  sub_23F1FA4C0();
  sub_23F24F4C4();
  if (!v1)
  {
    sub_23F12E488((uint64_t)&unk_256E05408);
    sub_23F24F138();
    sub_23F15E7D4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v10 = sub_23F24F474();
    sub_23F24FE84(v10, v11, type metadata accessor for PlannerPromptData.Tool.Definition.AssistantSchema);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  sub_23F250228();
  sub_23F1313FC();
}

void sub_23F1EF514()
{
  sub_23F1EF530();
}

void sub_23F1EF530()
{
  sub_23F15E678();
  sub_23F25096C();
  sub_23F2505BC();
  sub_23F251608();
  sub_23F1318A0();
  sub_23F250A40();
}

void sub_23F1EF574()
{
  PlannerPromptData.Tool.Definition.AssistantSchema.init(from:)();
}

#error "23F1EF590: call analysis failed (funcsize=5)"

uint64_t (*PlannerPromptData.Tool.Definition.UIControlTool.appBundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PlannerPromptData.Tool.Definition.UIControlTool.command.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[3];
  v3 = v1[4];
  v4 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return sub_23F14C284();
}

__n128 PlannerPromptData.Tool.Definition.UIControlTool.command.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  sub_23F251C94();
  sub_23F1318B8();
  *(_OWORD *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  sub_23F131634();
  return result;
}

uint64_t (*PlannerPromptData.Tool.Definition.UIControlTool.command.modify())()
{
  return nullsub_1;
}

uint64_t PlannerPromptData.Tool.Definition.UIControlTool.toolDefinition.getter()
{
  return sub_23F1E9798(type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool);
}

uint64_t PlannerPromptData.Tool.Definition.UIControlTool.toolDefinition.setter(uint64_t a1)
{
  return sub_23F1EF654(a1, type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool);
}

uint64_t sub_23F1EF654(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F24F690(a1, a2);
  sub_23F2503D4();
  v2 = sub_23F14C64C();
  return sub_23F24EEBC(v2, v3, v4, v5);
}

uint64_t (*PlannerPromptData.Tool.Definition.UIControlTool.toolDefinition.modify())()
{
  type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0);
  sub_23F18030C();
  return nullsub_1;
}

uint64_t PlannerPromptData.Tool.Definition.UIControlTool.init(appBundleIdentifier:command:toolDefinition:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  v5 = *a3;
  v6 = *((_QWORD *)a3 + 2);
  v7 = *((_QWORD *)a3 + 3);
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_OWORD *)(a4 + 16) = v5;
  *(_QWORD *)(a4 + 32) = v6;
  *(_QWORD *)(a4 + 40) = v7;
  type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0);
  sub_23F2505F4();
  v8 = sub_23F24F294();
  return sub_23F126180(v8, v9, v10, v11);
}

void PlannerPromptData.Tool.Definition.UIControlTool.Command.name.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void PlannerPromptData.Tool.Definition.UIControlTool.Command.name.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*PlannerPromptData.Tool.Definition.UIControlTool.Command.name.modify())()
{
  return nullsub_1;
}

void PlannerPromptData.Tool.Definition.UIControlTool.Command.identifier.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void PlannerPromptData.Tool.Definition.UIControlTool.Command.identifier.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F250604();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  sub_23F12612C();
}

uint64_t (*PlannerPromptData.Tool.Definition.UIControlTool.Command.identifier.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::PlannerPromptData::Tool::Definition::UIControlTool::Command __swiftcall PlannerPromptData.Tool.Definition.UIControlTool.Command.init(name:identifier:)(Swift::String name, Swift::String identifier)
{
  Swift::String *v2;
  IntelligenceFlow::PlannerPromptData::Tool::Definition::UIControlTool::Command result;

  *v2 = name;
  v2[1] = identifier;
  result.identifier = identifier;
  result.name = name;
  return result;
}

void static PlannerPromptData.Tool.Definition.UIControlTool.Command.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  BOOL v11;

  v2 = sub_23F250784(a1);
  v6 = *(_QWORD *)(v5 + 24);
  v7 = v4[2];
  v8 = v4[3];
  v9 = v2 == *v4 && v3 == v4[1];
  if ((v9 || (sub_23F126148(), sub_23F15E5CC(), (v10 & 1) != 0)) && (v1 == v7 ? (v11 = v6 == v8) : (v11 = 0), !v11))
  {
    sub_23F15E648();
    sub_23F15E7DC();
  }
  else
  {
    sub_23F12612C();
  }
}

uint64_t PlannerPromptData.Tool.Definition.UIControlTool.Command.hash(into:)()
{
  sub_23F13175C();
  sub_23F2505A0();
  sub_23F1262C0();
  sub_23F1315C4();
  sub_23F2681A4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F1EF85C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1EF944(char a1)
{
  if ((a1 & 1) != 0)
    return 0x696669746E656469;
  else
    return 1701667182;
}

uint64_t sub_23F1EF978()
{
  char *v0;

  return sub_23F1EF944(*v0);
}

uint64_t sub_23F1EF980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1EF85C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1EF9A4()
{
  sub_23F1FA524();
  return sub_23F2688B8();
}

uint64_t sub_23F1EF9CC()
{
  sub_23F1FA524();
  return sub_23F2688C4();
}

void PlannerPromptData.Tool.Definition.UIControlTool.Command.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;

  sub_23F131874();
  v3 = v2;
  v9 = *(_QWORD *)(sub_23F1217E8(&qword_256E05410) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v0 + 16);
  v8[1] = *(_QWORD *)(v0 + 24);
  v8[2] = v7;
  sub_23F24F270(v3);
  sub_23F1FA524();
  sub_23F251374();
  sub_23F180304();
  sub_23F131644();
  if (!v1)
  {
    sub_23F251334();
    sub_23F131644();
  }
  sub_23F126038((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void PlannerPromptData.Tool.Definition.UIControlTool.Command.hashValue.getter()
{
  sub_23F1317B8();
  sub_23F131798();
  sub_23F2681A4();
  sub_23F131A30();
  sub_23F1315C4();
  sub_23F2681A4();
  sub_23F1317F8();
  sub_23F1318A0();
  sub_23F131A5C();
}

void PlannerPromptData.Tool.Definition.UIControlTool.Command.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;

  sub_23F131874();
  a19 = v23;
  a20 = v24;
  sub_23F15E7E8();
  sub_23F1217E8(&qword_256E05420);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F1FA524();
  sub_23F15E564();
  if (v20)
  {
    sub_23F131BF4();
  }
  else
  {
    v28 = sub_23F24EF34();
    v30 = v29;
    sub_23F24F790();
    v31 = sub_23F15E704();
    v33 = v32;
    v34 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
    v35 = v31;
    sub_23F15E444((uint64_t)v27, v34);
    *v21 = v28;
    v21[1] = v30;
    v21[2] = v35;
    v21[3] = v33;
    sub_23F1315C4();
    sub_23F24EE8C();
    sub_23F131790();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

#error "23F1EFC30: call analysis failed (funcsize=5)"

void sub_23F1EFC3C()
{
  PlannerPromptData.Tool.Definition.UIControlTool.Command.encode(to:)();
}

uint64_t sub_23F1EFC5C()
{
  sub_23F268834();
  swift_bridgeObjectRetain();
  sub_23F2681A4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23F2681A4();
  swift_bridgeObjectRelease();
  return sub_23F268864();
}

void PlannerPromptData.Tool.Definition.UIControlTool.hash(into:)()
{
  sub_23F13175C();
  sub_23F2505A0();
  sub_23F1262C0();
  sub_23F13175C();
  sub_23F2505A0();
  sub_23F1262C0();
  sub_23F126364();
  sub_23F250A68();
  sub_23F13190C();
  type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0);
  sub_23F2505F4();
  sub_23F12E488((uint64_t)&unk_256E053A8);
  sub_23F250CC0();
  sub_23F131ABC();
}

void static PlannerPromptData.Tool.Definition.UIControlTool.== infix(_:_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;

  sub_23F131914(a1);
  v5 = v5 && v3 == v4;
  if ((v5 || (sub_23F126148() & 1) != 0)
    && ((v6 = v2[4], v7 = v2[5], v8 = v1[4], v9 = v1[5], v2[2] == v1[2]) ? (v10 = v2[3] == v1[3]) : (v10 = 0),
        (v10 || (sub_23F126148() & 1) != 0)
     && (v6 == v8 ? (v11 = v7 == v9) : (v11 = 0), v11 || (sub_23F126148() & 1) != 0)))
  {
    type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0);
    _s16IntelligenceFlow17PlannerPromptDataV4ToolV10DefinitionO0fG0V2eeoiySbAI_AItFZ_0();
  }
  else
  {
    sub_23F131ABC();
  }
}

uint64_t sub_23F1EFE14(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v7;

  if (a1 == 0xD000000000000013 && a2 == 0x800000023F295170 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x646E616D6D6F63 && a2 == 0xE700000000000000;
    if (v5 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x696665446C6F6F74 && a2 == 0xEE006E6F6974696ELL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F1EFF80(char a1)
{
  if (!a1)
    return 0xD000000000000013;
  if (a1 == 1)
    return 0x646E616D6D6F63;
  return 0x696665446C6F6F74;
}

uint64_t sub_23F1EFFE8()
{
  char *v0;

  return sub_23F1EFF80(*v0);
}

uint64_t sub_23F1EFFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1EFE14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1F0014()
{
  sub_23F1FA560();
  return sub_23F2688B8();
}

uint64_t sub_23F1F003C()
{
  sub_23F1FA560();
  return sub_23F2688C4();
}

void PlannerPromptData.Tool.Definition.UIControlTool.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[16];
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F1A9358();
  sub_23F1A9A7C();
  sub_23F1217E8(&qword_256E05428);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F1FA560();
  sub_23F18A998();
  LOBYTE(v9) = 0;
  sub_23F131644();
  if (!v0)
  {
    v6 = *(_QWORD *)(v1 + 32);
    v7 = *(_QWORD *)(v1 + 40);
    v9 = *(_OWORD *)(v1 + 16);
    v10 = v6;
    v11 = v7;
    v8[15] = 1;
    sub_23F1FA59C();
    sub_23F1315CC();
    type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0);
    sub_23F180268();
    sub_23F2505F4();
    sub_23F12E488((uint64_t)&unk_256E05188);
    sub_23F1315CC();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F25102C();
  sub_23F18AB98();
}

void PlannerPromptData.Tool.Definition.UIControlTool.hashValue.getter()
{
  sub_23F1F1398((void (*)(_BYTE *))PlannerPromptData.Tool.Definition.UIControlTool.hash(into:));
}

void PlannerPromptData.Tool.Definition.UIControlTool.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F131874();
  v5 = v4;
  v13 = v6;
  v14 = *(_QWORD *)(sub_23F2505F4() - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15E660();
  sub_23F1217E8(&qword_256E05440);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F1A9480();
  v10 = type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(v9);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1319C8();
  sub_23F24FF3C(v5);
  sub_23F1FA560();
  sub_23F1A9DA4();
  sub_23F24FFB4();
  if (v0)
  {
    sub_23F251D8C();
  }
  else
  {
    LOBYTE(v15) = 0;
    *(_QWORD *)v1 = sub_23F2516FC();
    *(_QWORD *)(v1 + 8) = v12;
    sub_23F15EC34();
    sub_23F1FA5D8();
    sub_23F1A9338();
    *(_OWORD *)(v1 + 16) = v15;
    *(_QWORD *)(v1 + 32) = v16;
    *(_QWORD *)(v1 + 40) = v17;
    sub_23F251F10();
    sub_23F12E488((uint64_t)&unk_256E051A0);
    sub_23F25207C();
    sub_23F18012C();
    sub_23F15E44C(0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F14EF80(v1 + *(int *)(v10 + 24), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
    sub_23F24F0B8(v1, v13);
    sub_23F251D8C();
    sub_23F24F1B8(v1);
  }
  sub_23F250228();
  sub_23F1313FC();
}

void sub_23F1F03C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F1F1A0C(a1, a2, a3, (void (*)(_BYTE *))PlannerPromptData.Tool.Definition.UIControlTool.hash(into:));
}

void sub_23F1F03D0()
{
  PlannerPromptData.Tool.Definition.UIControlTool.init(from:)();
}

void sub_23F1F03E4()
{
  PlannerPromptData.Tool.Definition.UIControlTool.encode(to:)();
}

uint64_t PlannerPromptData.Tool.Definition.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F125F3C();
  type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F24F060();
  type metadata accessor for PlannerPromptData.Tool.Definition.AssistantSchema(v14);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23F15E5B0();
  type metadata accessor for PlannerPromptData.Tool.Definition.ClientAction(v16);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23F125FBC();
  type metadata accessor for PlannerPromptData.Tool.Definition.ToolDefinition(v18);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F17FFA8();
  type metadata accessor for PlannerPromptData.Tool.Definition(v20);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F15E660();
  sub_23F250DB8(v12, v22, v23);
  v24 = sub_23F24EDA0();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_23F1F04E4 + 4 * byte_23F278F35[v24]))(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12);
}

void sub_23F1F04E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F25082C();
  sub_23F24EE5C(v1, v2);
  sub_23F25110C();
  sub_23F2505F4();
  sub_23F12E488((uint64_t)&unk_256E053A8);
  sub_23F252390();
  sub_23F250CC0();
  sub_23F1BE0BC(v0, type metadata accessor for PlannerPromptData.Tool.Definition.ToolDefinition);
  sub_23F125EFC();
}

void static PlannerPromptData.Tool.Definition.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD v21[4];
  uint64_t v22;
  uint64_t v23;

  sub_23F125F3C();
  v22 = v1;
  v23 = v2;
  v21[1] = type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  v21[3] = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F1A9220();
  type metadata accessor for PlannerPromptData.Tool.Definition.AssistantSchema(v5);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  v21[2] = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F1A9220();
  type metadata accessor for PlannerPromptData.Tool.Definition.ClientAction(v8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F17FFA8();
  type metadata accessor for PlannerPromptData.Tool.Definition.ToolDefinition(v10);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F1A9480();
  type metadata accessor for PlannerPromptData.Tool.Definition(v12);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F24F254();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F24FB6C();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F1A9A0C();
  sub_23F1217E8(&qword_256E05450);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F24F238();
  v19 = v0 + v18;
  sub_23F2521B4(v22, v0);
  sub_23F2521B4(v23, v19);
  v20 = (char *)sub_23F1F0808 + 4 * byte_23F278F39[sub_23F24EDA0()];
  __asm { BR              X10 }
}

void sub_23F1F0808(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F250DB8(v2, a2, type metadata accessor for PlannerPromptData.Tool.Definition);
  if (sub_23F24EDA0())
  {
    sub_23F1BE0BC(v4, type metadata accessor for PlannerPromptData.Tool.Definition.ToolDefinition);
    sub_23F24F5EC(v6, &qword_256E05450);
  }
  else
  {
    sub_23F1BE0F4(v3, v5, type metadata accessor for PlannerPromptData.Tool.Definition.ToolDefinition);
    _s16IntelligenceFlow17PlannerPromptDataV4ToolV10DefinitionO0fG0V2eeoiySbAI_AItFZ_0();
    sub_23F1BE0BC(v5, type metadata accessor for PlannerPromptData.Tool.Definition.ToolDefinition);
    sub_23F1BE0BC(v4, type metadata accessor for PlannerPromptData.Tool.Definition.ToolDefinition);
    sub_23F24F318(v7, type metadata accessor for PlannerPromptData.Tool.Definition);
  }
  sub_23F250F0C();
  sub_23F125EFC();
}

uint64_t sub_23F1F0A88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 1819242356 && a2 == 0xE400000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6341746E65696C63 && a2 == 0xEC0000006E6F6974;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E61747369737361 && a2 == 0xEF616D6568635374;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6F72746E6F436975 && a2 == 0xE90000000000006CLL)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F1F0C6C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1F0C98 + 4 * byte_23F278F3D[a1]))(1819242356, 0xE400000000000000);
}

uint64_t sub_23F1F0C98()
{
  return 0x6341746E65696C63;
}

uint64_t sub_23F1F0CB8()
{
  return 0x6E61747369737361;
}

uint64_t sub_23F1F0CDC()
{
  return 0x6F72746E6F436975;
}

void sub_23F1F0CF8(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F2509B4();
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F1F0D54()
{
  sub_23F1FA68C();
  return sub_23F2688B8();
}

uint64_t sub_23F1F0D7C()
{
  sub_23F1FA68C();
  return sub_23F2688C4();
}

uint64_t sub_23F1F0DA4()
{
  sub_23F1FA6C8();
  return sub_23F2688B8();
}

uint64_t sub_23F1F0DCC()
{
  sub_23F1FA6C8();
  return sub_23F2688C4();
}

uint64_t sub_23F1F0DF4()
{
  unsigned __int8 *v0;

  return sub_23F1F0C6C(*v0);
}

uint64_t sub_23F1F0DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1F0A88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1F0E20()
{
  sub_23F1FA614();
  return sub_23F2688B8();
}

uint64_t sub_23F1F0E48()
{
  sub_23F1FA614();
  return sub_23F2688C4();
}

uint64_t sub_23F1F0E70()
{
  sub_23F1FA704();
  return sub_23F2688B8();
}

uint64_t sub_23F1F0E98()
{
  sub_23F1FA704();
  return sub_23F2688C4();
}

uint64_t sub_23F1F0EC0()
{
  sub_23F1FA650();
  return sub_23F2688B8();
}

uint64_t sub_23F1F0EE8()
{
  sub_23F1FA650();
  return sub_23F2688C4();
}

void PlannerPromptData.Tool.Definition.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30[22];

  sub_23F131874();
  v2 = v1;
  v3 = sub_23F1217E8(&qword_256E05458);
  v30[15] = *(_QWORD *)(v3 - 8);
  v30[16] = v3;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  v30[14] = (uint64_t)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F1A9220();
  v30[12] = type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(v6);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F24ED20(v8, v30[0]);
  v9 = sub_23F1217E8(&qword_256E05460);
  v30[10] = *(_QWORD *)(v9 - 8);
  v30[11] = v9;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  v30[9] = (uint64_t)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F1A9220();
  v30[7] = type metadata accessor for PlannerPromptData.Tool.Definition.AssistantSchema(v12);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F16BA8C(v14, v30[0]);
  v15 = sub_23F1217E8(&qword_256E05468);
  v30[5] = *(_QWORD *)(v15 - 8);
  v30[6] = v15;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  v30[4] = (uint64_t)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F1A9220();
  v30[2] = type metadata accessor for PlannerPromptData.Tool.Definition.ClientAction(v18);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F17FFFC(v20, v30[0]);
  v21 = sub_23F1217E8(&qword_256E05470);
  v30[0] = *(_QWORD *)(v21 - 8);
  v30[1] = v21;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_23F17FFA8();
  type metadata accessor for PlannerPromptData.Tool.Definition.ToolDefinition(v23);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v24);
  v25 = sub_23F15E5B0();
  type metadata accessor for PlannerPromptData.Tool.Definition(v25);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F15EB6C();
  v27 = sub_23F1217E8(&qword_256E05478);
  v30[17] = *(_QWORD *)(v27 - 8);
  v30[18] = v27;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F12545C(v2, v2[3]);
  sub_23F1FA614();
  sub_23F15EBF0();
  sub_23F1BE1A0(v30[20], v0, type metadata accessor for PlannerPromptData.Tool.Definition);
  sub_23F251120();
  v29 = (char *)sub_23F1F1150 + 4 * byte_23F278F41[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F1F1150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v2 = sub_23F251D44();
  sub_23F24EE5C(v2, v3);
  *(_BYTE *)(v1 - 68) = 0;
  sub_23F1FA704();
  v4 = *(_QWORD *)(v1 - 112);
  sub_23F15E6E8();
  sub_23F24EE74((uint64_t)&unk_256E054C0);
  sub_23F24F620();
  v5 = sub_23F2500BC();
  sub_23F15E44C(v5, v6);
  sub_23F24F0CC(v0);
  v7 = sub_23F15ECE4();
  v8(v7, v4);
  sub_23F24F920();
  sub_23F1313FC();
}

void PlannerPromptData.Tool.Definition.hashValue.getter()
{
  sub_23F1F1398((void (*)(_BYTE *))PlannerPromptData.Tool.Definition.hash(into:));
}

void sub_23F1F1398(void (*a1)(_BYTE *))
{
  _BYTE v2[72];

  sub_23F1317B8();
  a1(v2);
  sub_23F1318A0();
  sub_23F1318E4();
}

void PlannerPromptData.Tool.Definition.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F131874();
  v2 = v1;
  sub_23F1217E8(&qword_256E054C8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F16BBFC(v4, v36);
  sub_23F1217E8(&qword_256E054D0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F24ED20(v6, v37);
  sub_23F1217E8(&qword_256E054D8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F16BC34(v8, v38);
  sub_23F1217E8(&qword_256E054E0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F24ED84(v10, v39);
  sub_23F1217E8(&qword_256E054E8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F17FFA8();
  v40 = type metadata accessor for PlannerPromptData.Tool.Definition(v12);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F24F388();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F24F0A4();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F24F874();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F250FF0();
  v18 = *(_QWORD *)(v2 + 24);
  v19 = *(uint64_t **)(v2 + 32);
  v20 = (_QWORD *)sub_23F250FE4();
  sub_23F12545C(v20, v18);
  sub_23F1FA614();
  sub_23F25049C();
  if (!v0)
  {
    sub_23F2686D8();
    sub_23F250B7C();
    if (v21)
    {
      sub_23F24FC44();
      v23 = *(unsigned __int8 *)(v22 + 32);
      v24 = sub_23F24FC34();
      sub_23F15E2D0(v24, v25, v26, v27, v28, v29);
      v31 = v30;
      v19 = v32;
      sub_23F131790();
      if (v31 == (unint64_t)v19 >> 1)
        __asm { BR              X9 }
    }
    sub_23F15EDB8();
    sub_23F131B30();
    sub_23F2508FC();
    sub_23F1217E8(&qword_256DFF4B8);
    sub_23F24F960();
    *v19 = v40;
    sub_23F268648();
    v33 = sub_23F24ECCC();
    sub_23F24FA28(v33, *MEMORY[0x24BEE26D0]);
    sub_23F250144();
    sub_23F17FAB4();
    v34 = sub_23F2500D8();
    v35(v34);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v41);
  sub_23F15EAFC();
  sub_23F1313FC();
}

void sub_23F1F1A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F1F1A0C(a1, a2, a3, (void (*)(_BYTE *))PlannerPromptData.Tool.Definition.hash(into:));
}

void sub_23F1F1A0C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v5[72];

  sub_23F15E678();
  a4(v5);
  sub_23F1318A0();
  sub_23F1318E4();
}

void sub_23F1F1A38()
{
  PlannerPromptData.Tool.Definition.init(from:)();
}

void sub_23F1F1A4C()
{
  PlannerPromptData.Tool.Definition.encode(to:)();
}

void sub_23F1F1A68(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6974696E69666564 && a2 == 0xEA00000000006E6FLL)
  {
    sub_23F251288();
  }
  else
  {
    sub_23F2509B4();
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F1F1AE4()
{
  return 0x6974696E69666564;
}

void sub_23F1F1B00(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F1F1A68(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F1F1B28()
{
  sub_23F1FA740();
  return sub_23F2688B8();
}

uint64_t sub_23F1F1B50()
{
  sub_23F1FA740();
  return sub_23F2688C4();
}

void PlannerPromptData.Tool.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;

  sub_23F1A9358();
  a17 = v19;
  a18 = v20;
  sub_23F1A9340();
  sub_23F1217E8(&qword_256E05510);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1FA740();
  sub_23F18A998();
  type metadata accessor for PlannerPromptData.Tool.Definition(0);
  sub_23F12E488((uint64_t)&unk_256E05520);
  sub_23F1A919C();
  sub_23F15E588((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  sub_23F1A93B4();
  sub_23F18AB98();
}

void PlannerPromptData.Tool.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_23F131874();
  v14 = sub_23F1A9CD0(v13);
  type metadata accessor for PlannerPromptData.Tool.Definition(v14);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1A94B8(v16, v22);
  v23 = *(_QWORD *)(sub_23F1217E8(&qword_256E05528) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23F15E9EC();
  type metadata accessor for PlannerPromptData.Tool(v18);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F15E660();
  sub_23F1A968C(v10);
  sub_23F1FA740();
  sub_23F2506AC();
  if (!v12)
  {
    sub_23F12E488((uint64_t)&unk_256E05530);
    sub_23F1A9338();
    sub_23F1A91B8(v23);
    sub_23F1BE0F4(a10, v11, type metadata accessor for PlannerPromptData.Tool.Definition);
    sub_23F24FE84(v20, v21, type metadata accessor for PlannerPromptData.Tool);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v10);
  sub_23F250228();
  sub_23F1313FC();
}

void sub_23F1F1D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  PlannerPromptData.Tool.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

#error "23F1F1D80: call analysis failed (funcsize=5)"

uint64_t sub_23F1F1D94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E65657263536E6FLL && a2 == 0xEF747865746E6F43;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C62616C69617661 && a2 == 0xEE00736C6F6F5465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1F1EC8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C62616C69617661;
  else
    return 0x6E65657263536E6FLL;
}

uint64_t sub_23F1F1F18()
{
  char *v0;

  return sub_23F1F1EC8(*v0);
}

uint64_t sub_23F1F1F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1F1D94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1F1F44()
{
  sub_23F1FA790();
  return sub_23F2688B8();
}

uint64_t sub_23F1F1F6C()
{
  sub_23F1FA790();
  return sub_23F2688C4();
}

void PlannerPromptData.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F131874();
  sub_23F250B2C();
  sub_23F1217E8(&qword_256E05538);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F1319C8();
  sub_23F18AA80(v2);
  sub_23F1FA790();
  sub_23F18A998();
  sub_23F1217E8(&qword_256E05548);
  sub_23F1FA7CC();
  sub_23F1315CC();
  if (!v0)
  {
    sub_23F250C40();
    sub_23F1217E8(&qword_256E05560);
    sub_23F1FA848();
    sub_23F1315CC();
  }
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void PlannerPromptData.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE v16[16];

  sub_23F131874();
  sub_23F15E7E8();
  sub_23F1217E8(&qword_256E05578);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v16[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F15E498();
  sub_23F1FA790();
  sub_23F15E564();
  if (v10)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F1217E8(&qword_256E05548);
    v16[15] = 0;
    sub_23F1FA8C4();
    sub_23F250210();
    sub_23F15E79C();
    sub_23F1217E8(&qword_256E05560);
    sub_23F250C40();
    sub_23F1FA940();
    sub_23F24F52C();
    sub_23F250210();
    sub_23F15E79C();
    sub_23F15E444((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    *v11 = a10;
    v11[1] = a10;
    sub_23F1315C4();
    sub_23F24EE8C();
    sub_23F131790();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1F21B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  PlannerPromptData.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F1F21CC()
{
  PlannerPromptData.encode(to:)();
}

uint64_t (*ActionResolutionUpdate.toolId.modify())()
{
  return nullsub_1;
}

uint64_t (*ActionResolutionUpdate.parameters.modify())()
{
  return nullsub_1;
}

void sub_23F1F2204(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v4 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
  if (v4 || (sub_23F180250(), (sub_23F126148() & 1) != 0))
  {
    swift_bridgeObjectRelease();
  }
  else if (v3 == 0x6574656D61726170 && v2 == 0xEA00000000007372)
  {
    sub_23F251288();
  }
  else
  {
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F1F22DC()
{
  sub_23F1FA9BC();
  return sub_23F2688B8();
}

uint64_t sub_23F1F2304()
{
  sub_23F1FA9BC();
  return sub_23F2688C4();
}

void ActionResolutionUpdate.encode(to:)()
{
  sub_23F1C015C();
}

void ActionResolutionUpdate.init(from:)()
{
  sub_23F1C0248();
}

void sub_23F1F2384()
{
  ActionResolutionUpdate.init(from:)();
}

void sub_23F1F2398()
{
  ActionResolutionUpdate.encode(to:)();
}

void sub_23F1F23B0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  int isUniquelyReferenced_nonNull_native;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  int64_t *v29;
  int64_t v30;
  uint64_t v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  int64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  int64_t v55;
  int64_t v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  _QWORD *v63;
  int64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  unint64_t v75;

  v3 = sub_23F1217E8(&qword_256DFE560);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v70 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F1217E8(&qword_256DFE558);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v60 - v12;
  v14 = a1[2];
  v15 = *v1;
  v16 = *(_QWORD *)(*v1 + 16);
  v17 = v16 + v14;
  if (__OFADD__(v16, v14))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v69 = v11;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v15;
  if (!isUniquelyReferenced_nonNull_native || (v19 = *(_QWORD *)(v15 + 24) >> 1, v19 < v17))
  {
    if (v16 <= v17)
      v20 = v16 + v14;
    else
      v20 = v16;
    v15 = sub_23F186FB0(isUniquelyReferenced_nonNull_native, v20, 1, v15);
    *v1 = v15;
    v19 = *(_QWORD *)(v15 + 24) >> 1;
  }
  v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v4 = *(_QWORD *)(v4 + 72);
  v16 = v19 - *(_QWORD *)(v15 + 16);
  sub_23F1F35B0();
  if (v21 < v14)
    goto LABEL_15;
  if (v21)
  {
    v23 = *(_QWORD *)(v15 + 16);
    v24 = __OFADD__(v23, v21);
    v25 = v23 + v21;
    if (v24)
    {
      __break(1u);
      goto LABEL_20;
    }
    *(_QWORD *)(v15 + 16) = v25;
  }
  if (v21 != v16)
  {
    sub_23F125E20();
    return;
  }
LABEL_16:
  v26 = *(_QWORD *)(v15 + 16);
  a1 = v71;
  v15 = v72;
  v22 = v74;
  v67 = v73;
  v68 = v26;
  v65 = v72;
  if (v75)
  {
    v66 = (v75 - 1) & v75;
    v27 = __clz(__rbit64(v75)) | (v74 << 6);
    v63 = (_QWORD *)v74;
LABEL_18:
    v28 = a1[7];
    v29 = (int64_t *)(a1[6] + 16 * v27);
    v30 = v29[1];
    v64 = *v29;
    v31 = sub_23F268078();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(&v13[*(int *)(v3 + 48)], v28 + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * v27, v31);
    *(_QWORD *)v13 = v64;
    *((_QWORD *)v13 + 1) = v30;
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v3);
    swift_bridgeObjectRetain();
    v16 = (int64_t)v63;
    v15 = v65;
    goto LABEL_41;
  }
LABEL_20:
  v32 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
    __break(1u);
LABEL_39:
    a1 = (_QWORD *)v11;
    v15 = v65;
    goto LABEL_40;
  }
  v33 = (unint64_t)(v67 + 64) >> 6;
  v16 = v22;
  if (v32 < v33)
  {
    v34 = *(_QWORD *)(v15 + 8 * v32);
    if (v34)
    {
LABEL_23:
      v66 = (v34 - 1) & v34;
      v27 = __clz(__rbit64(v34)) + (v32 << 6);
      v63 = (_QWORD *)v32;
      goto LABEL_18;
    }
    v35 = v22 + 2;
    v16 = v22 + 1;
    if (v22 + 2 < v33)
    {
      v11 = (uint64_t)a1;
      v34 = *(_QWORD *)(v15 + 8 * v35);
      if (v34)
      {
LABEL_26:
        v32 = v35;
        goto LABEL_23;
      }
      v16 = v22 + 2;
      v15 = v65;
      if (v22 + 3 < v33)
      {
        v34 = *(_QWORD *)(v65 + 8 * (v22 + 3));
        if (v34)
        {
          v32 = v22 + 3;
          goto LABEL_23;
        }
        v35 = v22 + 4;
        v16 = v22 + 3;
        v15 = v65;
        if (v22 + 4 < v33)
        {
          v34 = *(_QWORD *)(v65 + 8 * v35);
          if (v34)
            goto LABEL_26;
          v32 = v22 + 5;
          v16 = v22 + 4;
          v15 = v65;
          if (v22 + 5 < v33)
          {
            v34 = *(_QWORD *)(v65 + 8 * v32);
            if (v34)
              goto LABEL_23;
            v16 = v33 - 1;
            v36 = v22 + 6;
            while (v36 < v33)
            {
              v34 = *(_QWORD *)(v65 + 8 * v36++);
              if (v34)
              {
                v32 = v36 - 1;
                goto LABEL_23;
              }
            }
            goto LABEL_39;
          }
        }
      }
    }
  }
LABEL_40:
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 1, 1, v3);
  v66 = 0;
LABEL_41:
  v63 = a1;
  v71 = a1;
  v72 = v15;
  v73 = v67;
  v74 = v16;
  v75 = v66;
  v37 = v69;
  sub_23F1752C4((uint64_t)v13, v69, &qword_256DFE558);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v37, 1, v3) == 1)
  {
    v38 = v69;
LABEL_43:
    sub_23F125E40((uint64_t)v13, &qword_256DFE558);
    sub_23F125E20();
    sub_23F125E40(v38, &qword_256DFE558);
    return;
  }
  v39 = v68;
  v38 = v69;
  while (1)
  {
    v64 = v16;
    sub_23F125E40(v38, &qword_256DFE558);
    v40 = *v1;
    v41 = *(_QWORD *)(*v1 + 24);
    v62 = v41 >> 1;
    v68 = v39;
    if ((uint64_t)(v41 >> 1) < v39 + 1)
    {
      v40 = sub_23F186FB0(v41 > 1, v39 + 1, 1, v40);
      *v1 = v40;
      v62 = *(_QWORD *)(v40 + 24) >> 1;
    }
    v42 = v70;
    sub_23F1752C4((uint64_t)v13, (uint64_t)v9, &qword_256DFE558);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v3) == 1)
    {
      v16 = v64;
LABEL_77:
      sub_23F125E40((uint64_t)v9, &qword_256DFE558);
      goto LABEL_78;
    }
    v61 = v40 + v17;
    sub_23F17537C((uint64_t)v9, v42, &qword_256DFE560);
    v43 = v68;
    v44 = v63;
    if (v68 < v62)
      break;
LABEL_75:
    v63 = v44;
    v68 = v43;
    sub_23F125E40(v42, &qword_256DFE560);
    v16 = v64;
LABEL_78:
    v39 = v68;
    v38 = v69;
    *(_QWORD *)(*v1 + 16) = v68;
    sub_23F1752C4((uint64_t)v13, v38, &qword_256DFE558);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v38, 1, v3) == 1)
      goto LABEL_43;
  }
  while (1)
  {
    sub_23F125E40((uint64_t)v13, &qword_256DFE558);
    v68 = v43;
    sub_23F17537C(v42, v61 + v43 * v4, &qword_256DFE560);
    v45 = v71;
    v67 = v73;
    v65 = v72;
    if (v75)
    {
      v66 = (v75 - 1) & v75;
      v46 = __clz(__rbit64(v75)) | (v74 << 6);
      v64 = v74;
      goto LABEL_52;
    }
    v55 = v74 + 1;
    if (__OFADD__(v74, 1))
      break;
    v56 = (unint64_t)(v67 + 64) >> 6;
    v16 = v74;
    if (v55 < v56)
    {
      v57 = *(_QWORD *)(v72 + 8 * v55);
      if (v57)
        goto LABEL_56;
      v16 = v74 + 1;
      if (v74 + 2 < v56)
      {
        v57 = *(_QWORD *)(v72 + 8 * (v74 + 2));
        if (v57)
        {
          v55 = v74 + 2;
          goto LABEL_56;
        }
        v16 = v74 + 2;
        if (v74 + 3 < v56)
        {
          v57 = *(_QWORD *)(v72 + 8 * (v74 + 3));
          if (v57)
          {
            v55 = v74 + 3;
            goto LABEL_56;
          }
          v16 = v74 + 3;
          if (v74 + 4 < v56)
          {
            v57 = *(_QWORD *)(v72 + 8 * (v74 + 4));
            if (v57)
            {
              v55 = v74 + 4;
LABEL_56:
              v66 = (v57 - 1) & v57;
              v46 = __clz(__rbit64(v57)) + (v55 << 6);
              v64 = v55;
LABEL_52:
              v47 = v71[7];
              v48 = (_QWORD *)(v71[6] + 16 * v46);
              v49 = v48[1];
              v63 = (_QWORD *)*v48;
              v50 = sub_23F268078();
              v51 = *(_QWORD *)(v50 - 8);
              v52 = v47 + *(_QWORD *)(v51 + 72) * v46;
              v53 = v45;
              (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(&v13[*(int *)(v3 + 48)], v52, v50);
              *(_QWORD *)v13 = v63;
              *((_QWORD *)v13 + 1) = v49;
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v3);
              swift_bridgeObjectRetain();
              v16 = v64;
              v54 = v65;
              goto LABEL_73;
            }
            v55 = v74 + 5;
            v16 = v74 + 4;
            if (v74 + 5 < v56)
            {
              v57 = *(_QWORD *)(v72 + 8 * v55);
              if (v57)
                goto LABEL_56;
              v16 = v56 - 1;
              v58 = v74 + 6;
              while (v58 < v56)
              {
                v57 = *(_QWORD *)(v72 + 8 * v58++);
                if (v57)
                {
                  v55 = v58 - 1;
                  goto LABEL_56;
                }
              }
            }
          }
        }
      }
    }
    v53 = v71;
    v59 = v72;
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 1, 1, v3);
    v54 = v59;
    v66 = 0;
LABEL_73:
    v43 = v68 + 1;
    v44 = v53;
    v71 = v53;
    v72 = v54;
    v73 = v67;
    v74 = v16;
    v75 = v66;
    sub_23F1752C4((uint64_t)v13, (uint64_t)v9, &qword_256DFE558);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v3) == 1)
    {
      v63 = v53;
      v68 = v43;
      goto LABEL_77;
    }
    v64 = v16;
    v42 = v70;
    sub_23F17537C((uint64_t)v9, v70, &qword_256DFE560);
    if (v43 >= v62)
      goto LABEL_75;
  }
  __break(1u);
}

void sub_23F1F2B88(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_23F2685DC();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_23F1217E8(&qword_256DFE560);
      *(_QWORD *)(sub_23F2682A0() + 16) = a1;
    }
    sub_23F1217E8(&qword_256DFE560);
    sub_23F250B00();
  }
}

void sub_23F1F2C44(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t i;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t *v50;
  int64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;

  v4 = (_QWORD *)*v2;
  sub_23F1217E8(&qword_256DFEB30);
  v55 = a2;
  v5 = sub_23F26860C();
  if (!v4[2])
  {
    sub_23F126290();
    v46 = v50;
    goto LABEL_38;
  }
  sub_23F2511D0();
  v52 = v6;
  sub_23F251D70();
  v9 = v8 & v7;
  v51 = (unint64_t)(v10 + 63) >> 6;
  v11 = v5 + 64;
  swift_retain();
  v12 = 0;
  v13 = 104;
  v53 = v4;
  v54 = v5;
  v14 = (_QWORD *)v5;
  if (!v9)
    goto LABEL_4;
LABEL_3:
  sub_23F251D5C();
  v56 = v9;
  v57 = v15;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v20)) + (v21 << 6))
  {
    v23 = v4[7];
    v24 = (uint64_t *)(v4[6] + 16 * i);
    v26 = *v24;
    v25 = v24[1];
    v27 = (uint64_t *)(v23 + i * v13);
    v28 = v27[1];
    v58 = *v27;
    v29 = v27[3];
    v61 = v27[4];
    v62 = v27[2];
    v30 = v27[7];
    v60 = v27[6];
    v31 = v27[8];
    v59 = *((_BYTE *)v27 + 80);
    v63 = *(_OWORD *)(v27 + 11);
    if ((v55 & 1) == 0)
    {
      sub_23F250C2C();
      sub_23F131798();
      sub_23F13184C();
      sub_23F13174C();
      sub_23F131A54();
      sub_23F12D304(v31);
      sub_23F13175C();
      swift_retain();
    }
    sub_23F268834();
    sub_23F2681A4();
    sub_23F268864();
    sub_23F251D30();
    if (((v34 << v33) & ~*(_QWORD *)(v11 + 8 * v32)) == 0)
    {
      sub_23F251A5C();
      while (++v36 != v37 || (v35 & 1) == 0)
      {
        v38 = v36 == v37;
        if (v36 == v37)
          v36 = 0;
        v35 |= v38;
        if (*(_QWORD *)(v11 + 8 * v36) != -1)
        {
          sub_23F251CF4();
          goto LABEL_27;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    sub_23F251D08();
LABEL_27:
    sub_23F251CE0();
    *(_QWORD *)(v11 + v39) |= v40;
    v42 = (_QWORD *)(v14[6] + 16 * v41);
    *v42 = v26;
    v42[1] = v25;
    v13 = 104;
    v43 = v14[7] + 104 * v41;
    *(_QWORD *)v43 = v58;
    *(_QWORD *)(v43 + 8) = v28;
    *(_QWORD *)(v43 + 16) = v62;
    *(_QWORD *)(v43 + 24) = v29;
    *(_QWORD *)(v43 + 32) = v61;
    *(_QWORD *)(v43 + 40) = v44;
    *(_QWORD *)(v43 + 48) = v60;
    *(_QWORD *)(v43 + 56) = v30;
    *(_QWORD *)(v43 + 64) = v31;
    *(_QWORD *)(v43 + 72) = v45;
    *(_BYTE *)(v43 + 80) = v59;
    *(_OWORD *)(v43 + 88) = v63;
    ++v14[2];
    v4 = v53;
    v9 = v56;
    v12 = v57;
    if (v56)
      goto LABEL_3;
LABEL_4:
    v18 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_40;
    if (v18 >= v51)
    {
      sub_23F126290();
      v46 = v50;
      v19 = v52;
      goto LABEL_32;
    }
    v19 = v52;
    v20 = v52[v18];
    v21 = v12 + 1;
    if (!v20)
    {
      v21 = v12 + 2;
      if (v12 + 2 >= v51)
        goto LABEL_30;
      v20 = v52[v21];
      if (!v20)
        break;
    }
LABEL_15:
    v56 = (v20 - 1) & v20;
    v57 = v21;
  }
  v22 = v12 + 3;
  if (v12 + 3 < v51)
  {
    v20 = v52[v22];
    if (!v20)
    {
      while (1)
      {
        v21 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_41;
        if (v21 >= v51)
          goto LABEL_30;
        v20 = v52[v21];
        ++v22;
        if (v20)
          goto LABEL_15;
      }
    }
    v21 = v12 + 3;
    goto LABEL_15;
  }
LABEL_30:
  sub_23F126290();
  v46 = v50;
LABEL_32:
  if ((v55 & 1) != 0)
  {
    sub_23F251D94();
    if (v48 != v49)
      *v19 = -1 << v47;
    else
      sub_23F250BB0(v47);
    v5 = v54;
    v4[2] = 0;
    sub_23F126290();
  }
  else
  {
    sub_23F126290();
    v5 = v54;
  }
LABEL_38:
  *v46 = v5;
}

void sub_23F1F2F90()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char v38;
  char v39;
  _QWORD *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char v44;

  sub_23F125F3C();
  v2 = v0;
  v4 = v3;
  v43 = *(_QWORD *)(type metadata accessor for ClientAction(0) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1316E4();
  v6 = (_QWORD *)*v0;
  sub_23F1217E8(&qword_256DFEB08);
  sub_23F24F288();
  v44 = v4;
  v7 = (_QWORD *)sub_23F26860C();
  if (!v6[2])
    goto LABEL_37;
  sub_23F2511D0();
  v42 = v8;
  sub_23F251D70();
  v11 = v10 & v9;
  v40 = v0;
  v41 = (unint64_t)(v12 + 63) >> 6;
  v13 = v7 + 8;
  swift_retain();
  v14 = 0;
  if (!v11)
    goto LABEL_4;
LABEL_3:
  v15 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v19)) + (v14 << 6))
  {
    v21 = (uint64_t *)(v6[6] + 16 * i);
    v23 = *v21;
    v22 = v21[1];
    v24 = *(_QWORD *)(v43 + 72);
    v25 = v6[7] + v24 * i;
    if ((v44 & 1) != 0)
    {
      sub_23F1BE0F4(v25, v1, type metadata accessor for ClientAction);
    }
    else
    {
      sub_23F1BE1A0(v25, v1, type metadata accessor for ClientAction);
      sub_23F131A54();
    }
    sub_23F268834();
    sub_23F2681A4();
    sub_23F268864();
    sub_23F251D30();
    if (((v28 << v27) & ~v13[v26]) == 0)
    {
      sub_23F251A5C();
      while (++v30 != v31 || (v29 & 1) == 0)
      {
        v32 = v30 == v31;
        if (v30 == v31)
          v30 = 0;
        v29 |= v32;
        if (v13[v30] != -1)
        {
          sub_23F251CF4();
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return;
    }
    sub_23F251D08();
LABEL_28:
    sub_23F251CE0();
    *(_QWORD *)((char *)v13 + v33) |= v34;
    v36 = (_QWORD *)(v7[6] + 16 * v35);
    *v36 = v23;
    v36[1] = v22;
    sub_23F1BE0F4(v1, v7[7] + v24 * v35, type metadata accessor for ClientAction);
    ++v7[2];
    if (v11)
      goto LABEL_3;
LABEL_4:
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
      goto LABEL_39;
    if (v17 >= v41)
    {
      sub_23F126290();
      v2 = v40;
      v18 = v42;
      goto LABEL_32;
    }
    v18 = v42;
    v19 = v42[v17];
    ++v14;
    if (!v19)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v41)
        goto LABEL_30;
      v19 = v42[v14];
      if (!v19)
        break;
    }
LABEL_15:
    v11 = (v19 - 1) & v19;
  }
  v20 = v17 + 2;
  if (v20 < v41)
  {
    v19 = v42[v20];
    if (!v19)
    {
      while (1)
      {
        v14 = v20 + 1;
        if (__OFADD__(v20, 1))
          goto LABEL_40;
        if (v14 >= v41)
          goto LABEL_30;
        v19 = v42[v14];
        ++v20;
        if (v19)
          goto LABEL_15;
      }
    }
    v14 = v20;
    goto LABEL_15;
  }
LABEL_30:
  sub_23F126290();
  v2 = v40;
LABEL_32:
  if ((v44 & 1) != 0)
  {
    sub_23F251D94();
    if (v38 != v39)
      *v18 = -1 << v37;
    else
      sub_23F250BB0(v37);
    v6[2] = 0;
  }
LABEL_37:
  sub_23F126290();
  *v2 = v7;
  sub_23F125EFC();
}

uint64_t sub_23F1F324C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  int v43;
  char *v44;
  uint64_t v45;

  v3 = v2;
  v45 = sub_23F268078();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  sub_23F1217E8(&qword_256E089E8);
  v43 = a2;
  v8 = sub_23F26860C();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v40 = v2;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 64);
    v42 = (_QWORD *)(v7 + 64);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v41 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 64;
    result = swift_retain();
    v16 = 0;
    if (!v13)
      goto LABEL_7;
LABEL_6:
    v17 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v20)) + (v16 << 6))
    {
      v22 = *(_QWORD *)(v7 + 56);
      v23 = v7;
      v24 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * i);
      v26 = *v24;
      v25 = v24[1];
      v27 = *(_QWORD *)(v5 + 72);
      v28 = v22 + v27 * i;
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v44, v28, v45);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v44, v28, v45);
        swift_bridgeObjectRetain();
      }
      sub_23F268834();
      sub_23F2681A4();
      result = sub_23F268864();
      v29 = -1 << *(_BYTE *)(v9 + 32);
      v30 = result & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v14 + 8 * (v30 >> 6))) == 0)
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v29) >> 6;
        while (++v31 != v34 || (v33 & 1) == 0)
        {
          v35 = v31 == v34;
          if (v31 == v34)
            v31 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v14 + 8 * v31);
          if (v36 != -1)
          {
            v32 = __clz(__rbit64(~v36)) + (v31 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v14 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(_QWORD *)(v14 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
      v37 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v32);
      *v37 = v26;
      v37[1] = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v9 + 56) + v27 * v32, v44, v45);
      ++*(_QWORD *)(v9 + 16);
      v7 = v23;
      if (v13)
        goto LABEL_6;
LABEL_7:
      v19 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v19 >= v41)
        goto LABEL_33;
      v20 = v42[v19];
      ++v16;
      if (!v20)
      {
        v16 = v19 + 1;
        if (v19 + 1 >= v41)
          goto LABEL_33;
        v20 = v42[v16];
        if (!v20)
        {
          v21 = v19 + 2;
          if (v21 >= v41)
          {
LABEL_33:
            swift_release();
            v3 = v40;
            if ((v43 & 1) != 0)
            {
              v38 = 1 << *(_BYTE *)(v7 + 32);
              if (v38 >= 64)
                sub_23F258B8C(0, (unint64_t)(v38 + 63) >> 6, v42);
              else
                *v42 = -1 << v38;
              *(_QWORD *)(v7 + 16) = 0;
            }
            break;
          }
          v20 = v42[v21];
          if (!v20)
          {
            while (1)
            {
              v16 = v21 + 1;
              if (__OFADD__(v21, 1))
                goto LABEL_41;
              if (v16 >= v41)
                goto LABEL_33;
              v20 = v42[v16];
              ++v21;
              if (v20)
                goto LABEL_18;
            }
          }
          v16 = v21;
        }
      }
LABEL_18:
      v13 = (v20 - 1) & v20;
    }
  }
  result = swift_release();
  *v3 = v9;
  return result;
}

void sub_23F1F35B0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23F125F3C();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = sub_23F1217E8(&qword_256DFE560);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F24F48C();
  v41 = v2;
  v14 = *(_QWORD *)(v2 + 64);
  v13 = v2 + 64;
  v12 = v14;
  v37 = v13;
  v15 = -1 << *(_BYTE *)(v13 - 32);
  if (-v15 < 64)
    v16 = ~(-1 << -(char)v15);
  else
    v16 = -1;
  v17 = v16 & v12;
  if (!v6)
  {
    v18 = 0;
LABEL_38:
    *v8 = v41;
    v8[1] = v37;
    v8[2] = ~v15;
    v8[3] = v18;
    v8[4] = v17;
    sub_23F125EFC();
    return;
  }
  if (!v4)
  {
    v18 = 0;
    goto LABEL_38;
  }
  if (v4 < 0)
    goto LABEL_40;
  v34 = -1 << *(_BYTE *)(v13 - 32);
  v35 = v8;
  v18 = 0;
  v19 = 0;
  v36 = (unint64_t)(63 - v15) >> 6;
  v38 = v4;
  if (!v17)
    goto LABEL_9;
LABEL_8:
  v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v21 = v20 | (v18 << 6);
  while (1)
  {
    ++v19;
    v25 = *(_QWORD *)(v41 + 56);
    v26 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * v21);
    v27 = *v26;
    v28 = v26[1];
    v29 = sub_23F125F84();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(&v0[*(int *)(v40 + 48)], v25 + *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72) * v21, v29);
    *(_QWORD *)v0 = v27;
    *((_QWORD *)v0 + 1) = v28;
    v30 = sub_23F2514A8();
    sub_23F2503F4(v30, v31);
    v32 = sub_23F251040();
    sub_23F2503F4(v32, v33);
    if (v19 == v38)
    {
      sub_23F131A54();
LABEL_37:
      v15 = v34;
      v8 = v35;
      goto LABEL_38;
    }
    v6 += *(_QWORD *)(v39 + 72);
    sub_23F131A54();
    if (v17)
      goto LABEL_8;
LABEL_9:
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v22 >= v36)
      goto LABEL_33;
    v23 = *(_QWORD *)(v37 + 8 * v22);
    if (!v23)
    {
      v18 += 2;
      if (v22 + 1 >= v36)
      {
        v17 = 0;
        v18 = v22;
        goto LABEL_37;
      }
      v23 = *(_QWORD *)(v37 + 8 * v18);
      if (v23)
        goto LABEL_14;
      v24 = v22 + 2;
      if (v22 + 2 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v24);
      if (!v23)
      {
        v18 = v22 + 3;
        if (v22 + 3 >= v36)
        {
          v17 = 0;
          v18 = v22 + 2;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v37 + 8 * v18);
        if (v23)
        {
LABEL_14:
          v22 = v18;
          goto LABEL_18;
        }
        v24 = v22 + 4;
        if (v22 + 4 >= v36)
        {
LABEL_33:
          v17 = 0;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v22 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_41;
            if (v22 >= v36)
            {
              v17 = 0;
              v18 = v36 - 1;
              goto LABEL_37;
            }
            v23 = *(_QWORD *)(v37 + 8 * v22);
            ++v24;
            if (v23)
              goto LABEL_18;
          }
        }
      }
      v22 = v24;
    }
LABEL_18:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v22 << 6);
    v18 = v22;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

void sub_23F1F3870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, unint64_t, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_23F131874();
  v51 = v1;
  v52 = v2;
  v3 = sub_23F2507D8();
  v4 = type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution(v3);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  v46 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F125F84();
  v44 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F17FFE0(v9, v38);
  sub_23F1217E8(&qword_256E089E0);
  v10 = sub_23F268600();
  v11 = 0;
  v49 = v0;
  v14 = *(_QWORD *)(v0 + 64);
  v13 = v0 + 64;
  v12 = v14;
  v15 = 1 << *(_BYTE *)(v13 - 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v12;
  v39 = v13;
  v40 = (unint64_t)(v15 + 63) >> 6;
  v41 = v10 + 64;
  v42 = (_QWORD *)v10;
  v18 = v44;
  v19 = v45;
  v20 = (uint64_t)v46;
  if ((v16 & v12) == 0)
    goto LABEL_5;
LABEL_4:
  sub_23F251D5C();
  v50 = v21;
  for (i = v22 | (v21 << 6); ; i = __clz(__rbit64(v25)) + (v26 << 6))
  {
    v28 = (uint64_t *)(*(_QWORD *)(v49 + 48) + 16 * i);
    v29 = *v28;
    v30 = v28[1];
    v31 = *(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 16);
    v32 = v43;
    v31(v43, *(_QWORD *)(v49 + 56) + *(_QWORD *)(v18 + 72) * i, v19);
    v31(v20, v32, v19);
    sub_23F251354();
    sub_23F250C2C();
    sub_23F15E694(v32, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    v33 = v42;
    *(_QWORD *)(v41 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v34 = (_QWORD *)(v33[6] + 16 * i);
    *v34 = v29;
    v34[1] = v30;
    sub_23F1BE0F4(v20, v33[7] + *(_QWORD *)(v47 + 72) * i, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
    v35 = v33[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v33[2] = v37;
    v11 = v50;
    if (v17)
      goto LABEL_4;
LABEL_5:
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_24;
    if (v24 >= v40)
      return;
    v25 = *(_QWORD *)(v39 + 8 * v24);
    v26 = v11 + 1;
    if (!v25)
    {
      v26 = v11 + 2;
      if (v11 + 2 >= v40)
        return;
      v25 = *(_QWORD *)(v39 + 8 * v26);
      if (!v25)
      {
        v26 = v11 + 3;
        if (v11 + 3 >= v40)
          return;
        v25 = *(_QWORD *)(v39 + 8 * v26);
        if (!v25)
          break;
      }
    }
LABEL_18:
    v17 = (v25 - 1) & v25;
    v50 = v26;
  }
  v27 = v11 + 4;
  if (v11 + 4 >= v40)
    return;
  v25 = *(_QWORD *)(v39 + 8 * v27);
  if (v25)
  {
    v26 = v11 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v26 >= v40)
      return;
    v25 = *(_QWORD *)(v39 + 8 * v26);
    ++v27;
    if (v25)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_23F1F3B0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

unint64_t sub_23F1F3B44()
{
  unint64_t result;

  result = qword_256E034A0;
  if (!qword_256E034A0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestContent.SpeechContent, &type metadata for MessagePayload.RequestContent.SpeechContent);
    atomic_store(result, (unint64_t *)&qword_256E034A0);
  }
  return result;
}

unint64_t sub_23F1F3B80()
{
  unint64_t result;

  result = qword_256E034A8;
  if (!qword_256E034A8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestContent.TextContent, &type metadata for MessagePayload.RequestContent.TextContent);
    atomic_store(result, (unint64_t *)&qword_256E034A8);
  }
  return result;
}

unint64_t sub_23F1F3BBC()
{
  unint64_t result;

  result = qword_256E034B0;
  if (!qword_256E034B0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestContent.StopContent, &type metadata for MessagePayload.RequestContent.StopContent);
    atomic_store(result, (unint64_t *)&qword_256E034B0);
  }
  return result;
}

unint64_t sub_23F1F3BF8()
{
  unint64_t result;

  result = qword_256E034C0;
  if (!qword_256E034C0)
  {
    result = MEMORY[0x242667160](&unk_23F290764, &type metadata for MessagePayload.RequestPrescribedPlan.SearchTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E034C0);
  }
  return result;
}

unint64_t sub_23F1F3C34()
{
  unint64_t result;

  result = qword_256E034D8;
  if (!qword_256E034D8)
  {
    result = MEMORY[0x242667160](&unk_23F290714, &type metadata for MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E034D8);
  }
  return result;
}

unint64_t sub_23F1F3C70()
{
  unint64_t result;

  result = qword_256E034F0;
  if (!qword_256E034F0)
  {
    result = MEMORY[0x242667160](&unk_23F2906C4, &type metadata for MessagePayload.RequestPrescribedPlan.TextTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E034F0);
  }
  return result;
}

unint64_t sub_23F1F3CAC()
{
  unint64_t result;

  result = qword_256E03508;
  if (!qword_256E03508)
  {
    result = MEMORY[0x242667160](&unk_23F290674, &type metadata for MessagePayload.RequestPrescribedPlan.ConvertTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03508);
  }
  return result;
}

unint64_t sub_23F1F3CE8()
{
  unint64_t result;

  result = qword_256E03520;
  if (!qword_256E03520)
  {
    result = MEMORY[0x242667160](&unk_23F290624, &type metadata for MessagePayload.RequestPrescribedPlan.DisplayTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03520);
  }
  return result;
}

unint64_t sub_23F1F3D24()
{
  unint64_t result;

  result = qword_256E03538;
  if (!qword_256E03538)
  {
    result = MEMORY[0x242667160](&unk_23F2905D4, &type metadata for MessagePayload.RequestPrescribedPlan.KnowledgeTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03538);
  }
  return result;
}

unint64_t sub_23F1F3D60()
{
  unint64_t result;

  result = qword_256E03580;
  if (!qword_256E03580)
  {
    result = MEMORY[0x242667160](&unk_23F290584, &type metadata for MessagePayload.RequestPrescribedPlan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03580);
  }
  return result;
}

unint64_t sub_23F1F3D9C()
{
  unint64_t result;

  result = qword_256E03588;
  if (!qword_256E03588)
  {
    result = MEMORY[0x242667160](&unk_23F290534, &type metadata for MessagePayload.RequestPrescribedPlan.KnowledgeToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03588);
  }
  return result;
}

unint64_t sub_23F1F3DD8()
{
  unint64_t result;

  result = qword_256E03590;
  if (!qword_256E03590)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestPrescribedPlan.KnowledgeTool, &type metadata for MessagePayload.RequestPrescribedPlan.KnowledgeTool);
    atomic_store(result, (unint64_t *)&qword_256E03590);
  }
  return result;
}

unint64_t sub_23F1F3E14()
{
  unint64_t result;

  result = qword_256E03598;
  if (!qword_256E03598)
  {
    result = MEMORY[0x242667160](&unk_23F2904E4, &type metadata for MessagePayload.RequestPrescribedPlan.DisplayToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03598);
  }
  return result;
}

unint64_t sub_23F1F3E50()
{
  unint64_t result;

  result = qword_256E035A0;
  if (!qword_256E035A0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestPrescribedPlan.DisplayTool, &type metadata for MessagePayload.RequestPrescribedPlan.DisplayTool);
    atomic_store(result, (unint64_t *)&qword_256E035A0);
  }
  return result;
}

unint64_t sub_23F1F3E8C()
{
  unint64_t result;

  result = qword_256E035A8;
  if (!qword_256E035A8)
  {
    result = MEMORY[0x242667160](&unk_23F290494, &type metadata for MessagePayload.RequestPrescribedPlan.ConvertToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E035A8);
  }
  return result;
}

unint64_t sub_23F1F3EC8()
{
  unint64_t result;

  result = qword_256E035B0;
  if (!qword_256E035B0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestPrescribedPlan.ConvertTool, &type metadata for MessagePayload.RequestPrescribedPlan.ConvertTool);
    atomic_store(result, (unint64_t *)&qword_256E035B0);
  }
  return result;
}

unint64_t sub_23F1F3F04()
{
  unint64_t result;

  result = qword_256E035B8;
  if (!qword_256E035B8)
  {
    result = MEMORY[0x242667160](&unk_23F290444, &type metadata for MessagePayload.RequestPrescribedPlan.TextToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E035B8);
  }
  return result;
}

unint64_t sub_23F1F3F40()
{
  unint64_t result;

  result = qword_256E035C0;
  if (!qword_256E035C0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestPrescribedPlan.TextTool, &type metadata for MessagePayload.RequestPrescribedPlan.TextTool);
    atomic_store(result, (unint64_t *)&qword_256E035C0);
  }
  return result;
}

unint64_t sub_23F1F3F7C()
{
  unint64_t result;

  result = qword_256E035C8;
  if (!qword_256E035C8)
  {
    result = MEMORY[0x242667160](&unk_23F2903F4, &type metadata for MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E035C8);
  }
  return result;
}

unint64_t sub_23F1F3FB8()
{
  unint64_t result;

  result = qword_256E035D0;
  if (!qword_256E035D0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool, &type metadata for MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool);
    atomic_store(result, (unint64_t *)&qword_256E035D0);
  }
  return result;
}

unint64_t sub_23F1F3FF4()
{
  unint64_t result;

  result = qword_256E035D8;
  if (!qword_256E035D8)
  {
    result = MEMORY[0x242667160](&unk_23F2903A4, &type metadata for MessagePayload.RequestPrescribedPlan.SearchToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E035D8);
  }
  return result;
}

unint64_t sub_23F1F4030()
{
  unint64_t result;

  result = qword_256E035E0;
  if (!qword_256E035E0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestPrescribedPlan.SearchTool, &type metadata for MessagePayload.RequestPrescribedPlan.SearchTool);
    atomic_store(result, (unint64_t *)&qword_256E035E0);
  }
  return result;
}

unint64_t sub_23F1F406C()
{
  unint64_t result;

  result = qword_256E03620;
  if (!qword_256E03620)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestPrescribedPlan.KnowledgeTool, &type metadata for MessagePayload.RequestPrescribedPlan.KnowledgeTool);
    atomic_store(result, (unint64_t *)&qword_256E03620);
  }
  return result;
}

unint64_t sub_23F1F40A8()
{
  unint64_t result;

  result = qword_256E03628;
  if (!qword_256E03628)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestPrescribedPlan.DisplayTool, &type metadata for MessagePayload.RequestPrescribedPlan.DisplayTool);
    atomic_store(result, (unint64_t *)&qword_256E03628);
  }
  return result;
}

unint64_t sub_23F1F40E4()
{
  unint64_t result;

  result = qword_256E03630;
  if (!qword_256E03630)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestPrescribedPlan.ConvertTool, &type metadata for MessagePayload.RequestPrescribedPlan.ConvertTool);
    atomic_store(result, (unint64_t *)&qword_256E03630);
  }
  return result;
}

unint64_t sub_23F1F4120()
{
  unint64_t result;

  result = qword_256E03638;
  if (!qword_256E03638)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestPrescribedPlan.TextTool, &type metadata for MessagePayload.RequestPrescribedPlan.TextTool);
    atomic_store(result, (unint64_t *)&qword_256E03638);
  }
  return result;
}

unint64_t sub_23F1F415C()
{
  unint64_t result;

  result = qword_256E03640;
  if (!qword_256E03640)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool, &type metadata for MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool);
    atomic_store(result, (unint64_t *)&qword_256E03640);
  }
  return result;
}

unint64_t sub_23F1F4198()
{
  unint64_t result;

  result = qword_256E03648;
  if (!qword_256E03648)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.RequestPrescribedPlan.SearchTool, &type metadata for MessagePayload.RequestPrescribedPlan.SearchTool);
    atomic_store(result, (unint64_t *)&qword_256E03648);
  }
  return result;
}

unint64_t sub_23F1F41D4()
{
  unint64_t result;

  result = qword_256E03658;
  if (!qword_256E03658)
  {
    result = MEMORY[0x242667160](&unk_23F290354, &type metadata for MessagePayload.Query.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03658);
  }
  return result;
}

unint64_t sub_23F1F4210()
{
  unint64_t result;

  result = qword_256E03670;
  if (!qword_256E03670)
  {
    result = MEMORY[0x242667160](&unk_23F290304, &type metadata for MessagePayload.SpeechQuery.Candidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03670);
  }
  return result;
}

unint64_t sub_23F1F424C()
{
  unint64_t result;

  result = qword_256E03688;
  if (!qword_256E03688)
  {
    result = MEMORY[0x242667160](&unk_23F2902B4, &type metadata for MessagePayload.SpeechQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03688);
  }
  return result;
}

unint64_t sub_23F1F4288()
{
  unint64_t result;

  result = qword_256E036A0;
  if (!qword_256E036A0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.SpeechQuery.Candidate, &type metadata for MessagePayload.SpeechQuery.Candidate);
    atomic_store(result, (unint64_t *)&qword_256E036A0);
  }
  return result;
}

unint64_t sub_23F1F42C4()
{
  unint64_t result;

  result = qword_256E036B8;
  if (!qword_256E036B8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.SpeechQuery.Candidate, &type metadata for MessagePayload.SpeechQuery.Candidate);
    atomic_store(result, (unint64_t *)&qword_256E036B8);
  }
  return result;
}

unint64_t sub_23F1F4300()
{
  unint64_t result;

  result = qword_256E036C8;
  if (!qword_256E036C8)
  {
    result = MEMORY[0x242667160](&unk_23F290264, &type metadata for MessagePayload.PrescribedPlan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E036C8);
  }
  return result;
}

unint64_t sub_23F1F433C()
{
  unint64_t result;

  result = qword_256E036E0;
  if (!qword_256E036E0)
  {
    result = MEMORY[0x242667160](&unk_23F290214, &type metadata for MessagePayload.MockTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E036E0);
  }
  return result;
}

unint64_t sub_23F1F4378()
{
  unint64_t result;

  result = qword_256E036F8;
  if (!qword_256E036F8)
  {
    result = MEMORY[0x242667160](&unk_23F2901C4, &type metadata for MessagePayload.DisambiguationNeeded.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E036F8);
  }
  return result;
}

uint64_t type metadata accessor for MessagePayload.ClientEffectInvocation(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E05A40);
}

unint64_t sub_23F1F43C8()
{
  unint64_t result;

  result = qword_256E03710;
  if (!qword_256E03710)
  {
    result = MEMORY[0x242667160](&unk_23F290174, &type metadata for MessagePayload.ClientEffectInvocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03710);
  }
  return result;
}

uint64_t type metadata accessor for MessagePayload.ClientAction(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E05AE0);
}

uint64_t type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E05C28);
}

uint64_t type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E05B98);
}

unint64_t sub_23F1F4440()
{
  unint64_t result;

  result = qword_256E03738;
  if (!qword_256E03738)
  {
    result = MEMORY[0x242667160](&unk_23F290124, &type metadata for MessagePayload.ClientAction.ShimParameterResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03738);
  }
  return result;
}

unint64_t sub_23F1F447C()
{
  unint64_t result;

  result = qword_256E03740;
  if (!qword_256E03740)
  {
    result = MEMORY[0x242667160](&unk_23F2900D4, &type metadata for MessagePayload.ClientAction.ShimParameterResolution.UnresolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03740);
  }
  return result;
}

unint64_t sub_23F1F44B8()
{
  unint64_t result;

  result = qword_256E03750;
  if (!qword_256E03750)
  {
    result = MEMORY[0x242667160](&unk_23F290084, &type metadata for MessagePayload.ClientAction.ShimParameterResolution.ResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03750);
  }
  return result;
}

unint64_t sub_23F1F44F4()
{
  unint64_t result;

  result = qword_256E03780;
  if (!qword_256E03780)
  {
    result = MEMORY[0x242667160](&unk_23F290034, &type metadata for MessagePayload.ClientAction.UnresolvedParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03780);
  }
  return result;
}

unint64_t sub_23F1F4530()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E030B0;
  if (!qword_256E030B0)
  {
    v1 = sub_23F125540(&qword_256E030A8);
    sub_23F12E488((uint64_t)&qword_256DFE598);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E030B0);
  }
  return result;
}

unint64_t sub_23F1F45AC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E030C8;
  if (!qword_256E030C8)
  {
    v1 = sub_23F125540(&qword_256E030A8);
    sub_23F12E488((uint64_t)&qword_256DFE5B8);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E030C8);
  }
  return result;
}

unint64_t sub_23F1F4628()
{
  unint64_t result;

  result = qword_256E03798;
  if (!qword_256E03798)
  {
    result = MEMORY[0x242667160](&unk_23F28FFE4, &type metadata for MessagePayload.ClientAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03798);
  }
  return result;
}

unint64_t sub_23F1F4664()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256E037A8;
  if (!qword_256E037A8)
  {
    v1 = sub_23F125540(&qword_256E037A0);
    sub_23F12E488((uint64_t)&unk_256E037B0);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256E037A8);
  }
  return result;
}

unint64_t sub_23F1F46E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256E037C0;
  if (!qword_256E037C0)
  {
    v1 = sub_23F125540(&qword_256E037A0);
    sub_23F12E488((uint64_t)&unk_256E037C8);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256E037C0);
  }
  return result;
}

unint64_t sub_23F1F476C()
{
  unint64_t result;

  result = qword_256E037D8;
  if (!qword_256E037D8)
  {
    result = MEMORY[0x242667160](&unk_23F28FF94, &type metadata for MessagePayload.ActionWillExecute.ToolParameterValue.Reference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E037D8);
  }
  return result;
}

unint64_t sub_23F1F47A8()
{
  unint64_t result;

  result = qword_256E037F0;
  if (!qword_256E037F0)
  {
    result = MEMORY[0x242667160](&unk_23F28FF44, &type metadata for MessagePayload.ActionWillExecute.ToolParameterValue.Value.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E037F0);
  }
  return result;
}

uint64_t type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E05D60);
}

uint64_t type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E05CD0);
}

unint64_t sub_23F1F480C()
{
  unint64_t result;

  result = qword_256E03818;
  if (!qword_256E03818)
  {
    result = MEMORY[0x242667160](&unk_23F28FEF4, &type metadata for MessagePayload.ActionWillExecute.ToolParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03818);
  }
  return result;
}

unint64_t sub_23F1F4848()
{
  unint64_t result;

  result = qword_256E03820;
  if (!qword_256E03820)
  {
    result = MEMORY[0x242667160](&unk_23F28FEA4, &type metadata for MessagePayload.ActionWillExecute.ToolParameterValue.ValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03820);
  }
  return result;
}

unint64_t sub_23F1F4884()
{
  unint64_t result;

  result = qword_256E03830;
  if (!qword_256E03830)
  {
    result = MEMORY[0x242667160](&unk_23F28FE54, &type metadata for MessagePayload.ActionWillExecute.ToolParameterValue.ReferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03830);
  }
  return result;
}

unint64_t sub_23F1F48C0()
{
  unint64_t result;

  result = qword_256E03838;
  if (!qword_256E03838)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionWillExecute.ToolParameterValue.Reference, &type metadata for MessagePayload.ActionWillExecute.ToolParameterValue.Reference);
    atomic_store(result, (unint64_t *)&qword_256E03838);
  }
  return result;
}

unint64_t sub_23F1F48FC()
{
  unint64_t result;

  result = qword_256E03860;
  if (!qword_256E03860)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionWillExecute.ToolParameterValue.Reference, &type metadata for MessagePayload.ActionWillExecute.ToolParameterValue.Reference);
    atomic_store(result, (unint64_t *)&qword_256E03860);
  }
  return result;
}

unint64_t sub_23F1F4938()
{
  unint64_t result;

  result = qword_256E03870;
  if (!qword_256E03870)
  {
    result = MEMORY[0x242667160](&unk_23F28FE04, &type metadata for MessagePayload.ActionWillExecute.PromptSelection.Confirmed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03870);
  }
  return result;
}

unint64_t sub_23F1F4974()
{
  unint64_t result;

  result = qword_256E03880;
  if (!qword_256E03880)
  {
    result = MEMORY[0x242667160](&unk_23F28FDB4, &type metadata for MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03880);
  }
  return result;
}

unint64_t sub_23F1F49B0()
{
  unint64_t result;

  result = qword_256E03898;
  if (!qword_256E03898)
  {
    result = MEMORY[0x242667160](&unk_23F28FD64, &type metadata for MessagePayload.ActionWillExecute.PromptSelection.Denied.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03898);
  }
  return result;
}

unint64_t sub_23F1F49EC()
{
  unint64_t result;

  result = qword_256E038C0;
  if (!qword_256E038C0)
  {
    result = MEMORY[0x242667160](&unk_23F28FD14, &type metadata for MessagePayload.ActionWillExecute.PromptSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E038C0);
  }
  return result;
}

unint64_t sub_23F1F4A28()
{
  unint64_t result;

  result = qword_256E038C8;
  if (!qword_256E038C8)
  {
    result = MEMORY[0x242667160](&unk_23F28FCC4, &type metadata for MessagePayload.ActionWillExecute.PromptSelection.DeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E038C8);
  }
  return result;
}

unint64_t sub_23F1F4A64()
{
  unint64_t result;

  result = qword_256E038D0;
  if (!qword_256E038D0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionWillExecute.PromptSelection.Denied, &type metadata for MessagePayload.ActionWillExecute.PromptSelection.Denied);
    atomic_store(result, (unint64_t *)&qword_256E038D0);
  }
  return result;
}

unint64_t sub_23F1F4AA0()
{
  unint64_t result;

  result = qword_256E038D8;
  if (!qword_256E038D8)
  {
    result = MEMORY[0x242667160](&unk_23F28FC74, &type metadata for MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E038D8);
  }
  return result;
}

unint64_t sub_23F1F4ADC()
{
  unint64_t result;

  result = qword_256E038E0;
  if (!qword_256E038E0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation, &type metadata for MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation);
    atomic_store(result, (unint64_t *)&qword_256E038E0);
  }
  return result;
}

unint64_t sub_23F1F4B18()
{
  unint64_t result;

  result = qword_256E038E8;
  if (!qword_256E038E8)
  {
    result = MEMORY[0x242667160](&unk_23F28FC24, &type metadata for MessagePayload.ActionWillExecute.PromptSelection.ConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E038E8);
  }
  return result;
}

unint64_t sub_23F1F4B54()
{
  unint64_t result;

  result = qword_256E038F0;
  if (!qword_256E038F0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionWillExecute.PromptSelection.Confirmed, &type metadata for MessagePayload.ActionWillExecute.PromptSelection.Confirmed);
    atomic_store(result, (unint64_t *)&qword_256E038F0);
  }
  return result;
}

unint64_t sub_23F1F4B90()
{
  unint64_t result;

  result = qword_256E03918;
  if (!qword_256E03918)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionWillExecute.PromptSelection.Denied, &type metadata for MessagePayload.ActionWillExecute.PromptSelection.Denied);
    atomic_store(result, (unint64_t *)&qword_256E03918);
  }
  return result;
}

unint64_t sub_23F1F4BCC()
{
  unint64_t result;

  result = qword_256E03920;
  if (!qword_256E03920)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation, &type metadata for MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation);
    atomic_store(result, (unint64_t *)&qword_256E03920);
  }
  return result;
}

unint64_t sub_23F1F4C08()
{
  unint64_t result;

  result = qword_256E03928;
  if (!qword_256E03928)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionWillExecute.PromptSelection.Confirmed, &type metadata for MessagePayload.ActionWillExecute.PromptSelection.Confirmed);
    atomic_store(result, (unint64_t *)&qword_256E03928);
  }
  return result;
}

void sub_23F1F4C44(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F2505FC(a1, a2, a3);
  sub_23F143964(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  sub_23F126078();
}

uint64_t type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E05DF0);
}

unint64_t sub_23F1F4C8C()
{
  unint64_t result;

  result = qword_256E03938;
  if (!qword_256E03938)
  {
    result = MEMORY[0x242667160](&unk_23F28FBD4, &type metadata for MessagePayload.ActionWillExecute.ParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03938);
  }
  return result;
}

unint64_t sub_23F1F4CC8()
{
  unint64_t result;

  result = qword_256E03948;
  if (!qword_256E03948)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionWillExecute.PromptSelection, &type metadata for MessagePayload.ActionWillExecute.PromptSelection);
    atomic_store(result, (unint64_t *)&qword_256E03948);
  }
  return result;
}

unint64_t sub_23F1F4D04()
{
  unint64_t result;

  result = qword_256E03960;
  if (!qword_256E03960)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionWillExecute.PromptSelection, &type metadata for MessagePayload.ActionWillExecute.PromptSelection);
    atomic_store(result, (unint64_t *)&qword_256E03960);
  }
  return result;
}

unint64_t sub_23F1F4D40()
{
  unint64_t result;

  result = qword_256E03970;
  if (!qword_256E03970)
  {
    result = MEMORY[0x242667160](&unk_23F28FB84, &type metadata for MessagePayload.ActionWillExecute.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03970);
  }
  return result;
}

unint64_t sub_23F1F4D7C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256E03980;
  if (!qword_256E03980)
  {
    v1 = sub_23F125540(&qword_256E03978);
    sub_23F12E488((uint64_t)&unk_256E03988);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256E03980);
  }
  return result;
}

unint64_t sub_23F1F4E00()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256E03998;
  if (!qword_256E03998)
  {
    v1 = sub_23F125540(&qword_256E03978);
    sub_23F12E488((uint64_t)&unk_256E039A0);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256E03998);
  }
  return result;
}

unint64_t sub_23F1F4E84()
{
  unint64_t result;

  result = qword_256E039C8;
  if (!qword_256E039C8)
  {
    result = MEMORY[0x242667160](&unk_23F28FB34, &type metadata for MessagePayload.ClientEffectResolved.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E039C8);
  }
  return result;
}

unint64_t sub_23F1F4EC0()
{
  unint64_t result;

  result = qword_256E039D0;
  if (!qword_256E039D0)
  {
    result = MEMORY[0x242667160](&unk_23F28FAE4, &type metadata for MessagePayload.ClientEffectResolved.Result.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E039D0);
  }
  return result;
}

unint64_t sub_23F1F4EFC()
{
  unint64_t result;

  result = qword_256E039D8;
  if (!qword_256E039D8)
  {
    result = MEMORY[0x242667160](&unk_23F28FA94, &type metadata for MessagePayload.ClientEffectResolved.Result.CompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E039D8);
  }
  return result;
}

unint64_t sub_23F1F4F38()
{
  unint64_t result;

  result = qword_256E03A00;
  if (!qword_256E03A00)
  {
    result = MEMORY[0x242667160](&unk_23F28FA44, &type metadata for MessagePayload.ClientEffectResolved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03A00);
  }
  return result;
}

uint64_t sub_23F1F4F74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16);
  __int16 v5;

  v2 = sub_23F131AF0(a1);
  v5 = *(_WORD *)(v1 + 184);
  v3(v2, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144),
    *(_QWORD *)(v1 + 152),
    *(_QWORD *)(v1 + 160),
    *(_QWORD *)(v1 + 168),
    *(_QWORD *)(v1 + 176),
    v5);
  return v1;
}

uint64_t sub_23F1F4FE4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    sub_23F15A8A8(a2, a3);
    sub_23F15A8A8(a10, a11);
    sub_23F15A8F8(a18);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23F1F50F8(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_23F1F511C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 200);
  v15 = *(_QWORD *)(a1 + 192);
  v3 = *(_QWORD *)(a1 + 208);
  v4 = *(_QWORD *)(a1 + 216);
  v5 = *(_QWORD *)(a1 + 224);
  v6 = *(_QWORD *)(a1 + 232);
  v7 = *(_QWORD *)(a1 + 240);
  v8 = *(_QWORD *)(a1 + 248);
  v14 = *(_OWORD *)(a1 + 256);
  v13 = *(_OWORD *)(a1 + 272);
  v12 = *(_OWORD *)(a1 + 288);
  v11 = *(_OWORD *)(a1 + 304);
  v10 = *(_OWORD *)(a1 + 320);
  sub_23F12EFB0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136));
  sub_23F12EFB0(v15, v2, v3, v4, v5, v6, v7, v8, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t type metadata accessor for ParameterCandidatesNotFound(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06D28);
}

uint64_t type metadata accessor for ParameterNotAllowed(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06C90);
}

uint64_t type metadata accessor for ParameterConfirmation(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06BF0);
}

uint64_t type metadata accessor for ParameterNeedsValue(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06B60);
}

uint64_t type metadata accessor for ActionSuccess(uint64_t a1)
{
  return sub_23F12EDBC(a1, (uint64_t *)&unk_256E06998);
}

uint64_t sub_23F1F52C4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0x10)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23F1F52F8()
{
  unint64_t result;

  result = qword_256E03A30;
  if (!qword_256E03A30)
  {
    result = MEMORY[0x242667160](&unk_23F28F9F4, &type metadata for MessagePayload.ClientActionResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03A30);
  }
  return result;
}

unint64_t sub_23F1F5334()
{
  unint64_t result;

  result = qword_256E03A40;
  if (!qword_256E03A40)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseManifest, &type metadata for ResponseManifest);
    atomic_store(result, (unint64_t *)&qword_256E03A40);
  }
  return result;
}

unint64_t sub_23F1F5370()
{
  unint64_t result;

  result = qword_256E03A60;
  if (!qword_256E03A60)
  {
    result = MEMORY[0x242667160](&unk_23F28F9A4, &type metadata for MessagePayload.ClientCustom.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03A60);
  }
  return result;
}

unint64_t sub_23F1F53AC()
{
  unint64_t result;

  result = qword_256E03A78;
  if (!qword_256E03A78)
  {
    result = MEMORY[0x242667160](&unk_23F28F954, &type metadata for MessagePayload.ClientIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03A78);
  }
  return result;
}

unint64_t sub_23F1F53E8()
{
  unint64_t result;

  result = qword_256E03A90;
  if (!qword_256E03A90)
  {
    result = MEMORY[0x242667160](&unk_23F28F904, &type metadata for MessagePayload.ClientInitiatedClientAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03A90);
  }
  return result;
}

unint64_t sub_23F1F5424()
{
  unint64_t result;

  result = qword_256E03AA8;
  if (!qword_256E03AA8)
  {
    result = MEMORY[0x242667160](&unk_23F28F8B4, &type metadata for MessagePayload.ContextPrewarmRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03AA8);
  }
  return result;
}

unint64_t sub_23F1F5460()
{
  unint64_t result;

  result = qword_256E03AC0;
  if (!qword_256E03AC0)
  {
    result = MEMORY[0x242667160](&unk_23F28F864, &type metadata for MessagePayload.ContextPrewarmCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03AC0);
  }
  return result;
}

unint64_t sub_23F1F549C()
{
  unint64_t result;

  result = qword_256E03AD8;
  if (!qword_256E03AD8)
  {
    result = MEMORY[0x242667160](&unk_23F28F814, &type metadata for MessagePayload.SafetyModeRelease.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03AD8);
  }
  return result;
}

unint64_t sub_23F1F54D8()
{
  unint64_t result;

  result = qword_256E03AE8;
  if (!qword_256E03AE8)
  {
    result = MEMORY[0x242667160](&unk_23F28F7C4, &type metadata for MessagePayload.SafetyModeException.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03AE8);
  }
  return result;
}

uint64_t type metadata accessor for MessagePayload.ExternalAgentRequest(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06050);
}

unint64_t sub_23F1F5528()
{
  unint64_t result;

  result = qword_256E03B00;
  if (!qword_256E03B00)
  {
    result = MEMORY[0x242667160](&unk_23F28F774, &type metadata for MessagePayload.ExternalAgentRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03B00);
  }
  return result;
}

uint64_t type metadata accessor for MessagePayload.ExternalAgentTextQuery(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E060E8);
}

uint64_t sub_23F1F5578(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_23F130928();
    return sub_23F14C284();
  }
  return result;
}

uint64_t sub_23F1F55A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return sub_23F15E420();
  }
  return result;
}

unint64_t sub_23F1F55CC()
{
  unint64_t result;

  result = qword_256E03B18;
  if (!qword_256E03B18)
  {
    result = MEMORY[0x242667160](&unk_23F28F724, &type metadata for MessagePayload.ExternalAgentTextQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03B18);
  }
  return result;
}

unint64_t sub_23F1F5608()
{
  unint64_t result;

  result = qword_256E03B20;
  if (!qword_256E03B20)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ExternalAgentQueryRewriteMetadata, &type metadata for MessagePayload.ExternalAgentQueryRewriteMetadata);
    atomic_store(result, (unint64_t *)&qword_256E03B20);
  }
  return result;
}

unint64_t sub_23F1F5644()
{
  unint64_t result;

  result = qword_256E03B30;
  if (!qword_256E03B30)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ExternalAgentQueryRewriteMetadata, &type metadata for MessagePayload.ExternalAgentQueryRewriteMetadata);
    atomic_store(result, (unint64_t *)&qword_256E03B30);
  }
  return result;
}

unint64_t sub_23F1F5680()
{
  unint64_t result;

  result = qword_256E03B40;
  if (!qword_256E03B40)
  {
    result = MEMORY[0x242667160](&unk_23F28F6D4, &type metadata for MessagePayload.ExternalAgentSpeechQuery.Candidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03B40);
  }
  return result;
}

uint64_t type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06180);
}

unint64_t sub_23F1F56D0()
{
  unint64_t result;

  result = qword_256E03B58;
  if (!qword_256E03B58)
  {
    result = MEMORY[0x242667160](&unk_23F28F684, &type metadata for MessagePayload.ExternalAgentSpeechQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03B58);
  }
  return result;
}

unint64_t sub_23F1F570C()
{
  unint64_t result;

  result = qword_256E03B70;
  if (!qword_256E03B70)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ExternalAgentSpeechQuery.Candidate, &type metadata for MessagePayload.ExternalAgentSpeechQuery.Candidate);
    atomic_store(result, (unint64_t *)&qword_256E03B70);
  }
  return result;
}

unint64_t sub_23F1F5748()
{
  unint64_t result;

  result = qword_256E03B88;
  if (!qword_256E03B88)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ExternalAgentSpeechQuery.Candidate, &type metadata for MessagePayload.ExternalAgentSpeechQuery.Candidate);
    atomic_store(result, (unint64_t *)&qword_256E03B88);
  }
  return result;
}

uint64_t type metadata accessor for MessagePayload.ExternalAgentOutcome(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06218);
}

unint64_t sub_23F1F5798()
{
  unint64_t result;

  result = qword_256E03B98;
  if (!qword_256E03B98)
  {
    result = MEMORY[0x242667160](&unk_23F28F634, &type metadata for MessagePayload.ExternalAgentOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03B98);
  }
  return result;
}

unint64_t sub_23F1F57D4()
{
  unint64_t result;

  result = qword_256E03BB0;
  if (!qword_256E03BB0)
  {
    result = MEMORY[0x242667160](&unk_23F28F5E4, &type metadata for MessagePayload.ExternalAgentQueryRewriteMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03BB0);
  }
  return result;
}

unint64_t sub_23F1F5810()
{
  unint64_t result;

  result = qword_256E03BC8;
  if (!qword_256E03BC8)
  {
    result = MEMORY[0x242667160](&unk_23F28F594, &type metadata for MessagePayload.ExternalAgentRequestRewriteMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03BC8);
  }
  return result;
}

uint64_t type metadata accessor for MessagePayload.ClientUndoRedoRequest(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E062A8);
}

unint64_t sub_23F1F5860()
{
  unint64_t result;

  result = qword_256E03BF0;
  if (!qword_256E03BF0)
  {
    result = MEMORY[0x242667160](&unk_23F28F544, &type metadata for MessagePayload.ClientUndoRedoRequest.UndoOperation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03BF0);
  }
  return result;
}

unint64_t sub_23F1F589C()
{
  unint64_t result;

  result = qword_256E03BF8;
  if (!qword_256E03BF8)
  {
    result = MEMORY[0x242667160](&unk_23F28F4F4, &type metadata for MessagePayload.ClientUndoRedoRequest.UndoOperation.RedoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03BF8);
  }
  return result;
}

unint64_t sub_23F1F58D8()
{
  unint64_t result;

  result = qword_256E03C00;
  if (!qword_256E03C00)
  {
    result = MEMORY[0x242667160](&unk_23F28F4A4, &type metadata for MessagePayload.ClientUndoRedoRequest.UndoOperation.UndoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03C00);
  }
  return result;
}

unint64_t sub_23F1F5914()
{
  unint64_t result;

  result = qword_256E03C28;
  if (!qword_256E03C28)
  {
    result = MEMORY[0x242667160](&unk_23F28F454, &type metadata for MessagePayload.ClientUndoRedoRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03C28);
  }
  return result;
}

unint64_t sub_23F1F5950()
{
  unint64_t result;

  result = qword_256E03C30;
  if (!qword_256E03C30)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ClientUndoRedoRequest.UndoOperation, &type metadata for MessagePayload.ClientUndoRedoRequest.UndoOperation);
    atomic_store(result, (unint64_t *)&qword_256E03C30);
  }
  return result;
}

unint64_t sub_23F1F598C()
{
  unint64_t result;

  result = qword_256E03C40;
  if (!qword_256E03C40)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ClientUndoRedoRequest.UndoOperation, &type metadata for MessagePayload.ClientUndoRedoRequest.UndoOperation);
    atomic_store(result, (unint64_t *)&qword_256E03C40);
  }
  return result;
}

uint64_t type metadata accessor for MessagePayload.ActionSummaryUpdate(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06340);
}

unint64_t sub_23F1F59DC()
{
  unint64_t result;

  result = qword_256E03C68;
  if (!qword_256E03C68)
  {
    result = MEMORY[0x242667160](&unk_23F28F404, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03C68);
  }
  return result;
}

unint64_t sub_23F1F5A18()
{
  unint64_t result;

  result = qword_256E03C70;
  if (!qword_256E03C70)
  {
    result = MEMORY[0x242667160](&unk_23F28F3B4, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.PlaceholderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03C70);
  }
  return result;
}

unint64_t sub_23F1F5A54()
{
  unint64_t result;

  result = qword_256E03C78;
  if (!qword_256E03C78)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256E03C78);
  }
  return result;
}

unint64_t sub_23F1F5A90()
{
  unint64_t result;

  result = qword_256E03C80;
  if (!qword_256E03C80)
  {
    result = MEMORY[0x242667160](&unk_23F28F364, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.ValuesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03C80);
  }
  return result;
}

unint64_t sub_23F1F5ACC()
{
  unint64_t result;

  result = qword_256E03C88;
  if (!qword_256E03C88)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues);
    atomic_store(result, (unint64_t *)&qword_256E03C88);
  }
  return result;
}

unint64_t sub_23F1F5B08()
{
  unint64_t result;

  result = qword_256E03C90;
  if (!qword_256E03C90)
  {
    result = MEMORY[0x242667160](&unk_23F28F314, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.ValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03C90);
  }
  return result;
}

unint64_t sub_23F1F5B44()
{
  unint64_t result;

  result = qword_256E03C98;
  if (!qword_256E03C98)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue);
    atomic_store(result, (unint64_t *)&qword_256E03C98);
  }
  return result;
}

unint64_t sub_23F1F5B80()
{
  unint64_t result;

  result = qword_256E03CC0;
  if (!qword_256E03CC0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256E03CC0);
  }
  return result;
}

unint64_t sub_23F1F5BBC()
{
  unint64_t result;

  result = qword_256E03CC8;
  if (!qword_256E03CC8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues);
    atomic_store(result, (unint64_t *)&qword_256E03CC8);
  }
  return result;
}

unint64_t sub_23F1F5BF8()
{
  unint64_t result;

  result = qword_256E03CD0;
  if (!qword_256E03CD0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue);
    atomic_store(result, (unint64_t *)&qword_256E03CD0);
  }
  return result;
}

unint64_t sub_23F1F5C34()
{
  unint64_t result;

  result = qword_256E03CE0;
  if (!qword_256E03CE0)
  {
    result = MEMORY[0x242667160](&unk_23F28F2C4, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03CE0);
  }
  return result;
}

unint64_t sub_23F1F5C70()
{
  unint64_t result;

  result = qword_256E03CF8;
  if (!qword_256E03CF8)
  {
    result = MEMORY[0x242667160](&unk_23F28F274, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03CF8);
  }
  return result;
}

unint64_t sub_23F1F5CAC()
{
  unint64_t result;

  result = qword_256E03D10;
  if (!qword_256E03D10)
  {
    result = MEMORY[0x242667160](&unk_23F28F224, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03D10);
  }
  return result;
}

unint64_t sub_23F1F5CE8()
{
  unint64_t result;

  result = qword_256E03D38;
  if (!qword_256E03D38)
  {
    result = MEMORY[0x242667160](&unk_23F28F1D4, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03D38);
  }
  return result;
}

unint64_t sub_23F1F5D24()
{
  unint64_t result;

  result = qword_256E03D50;
  if (!qword_256E03D50)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary);
    atomic_store(result, (unint64_t *)&qword_256E03D50);
  }
  return result;
}

unint64_t sub_23F1F5D60(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  void (*v3)(void);
  void (*v4)(void);
  uint64_t v5;

  result = sub_23F131AF0(a1);
  if (!result)
  {
    v4 = v3;
    sub_23F125540(&qword_256E03D40);
    v4();
    v5 = sub_23F250CFC();
    result = MEMORY[0x242667160](v5);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_23F1F5DCC()
{
  unint64_t result;

  result = qword_256E03D68;
  if (!qword_256E03D68)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary);
    atomic_store(result, (unint64_t *)&qword_256E03D68);
  }
  return result;
}

unint64_t sub_23F1F5E08()
{
  unint64_t result;

  result = qword_256E03D78;
  if (!qword_256E03D78)
  {
    result = MEMORY[0x242667160](&unk_23F28F184, &type metadata for MessagePayload.ActionSummaryUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03D78);
  }
  return result;
}

unint64_t sub_23F1F5E44()
{
  unint64_t result;

  result = qword_256E03D80;
  if (!qword_256E03D80)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary);
    atomic_store(result, (unint64_t *)&qword_256E03D80);
  }
  return result;
}

unint64_t sub_23F1F5E80()
{
  unint64_t result;

  result = qword_256E03D90;
  if (!qword_256E03D90)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary, &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary);
    atomic_store(result, (unint64_t *)&qword_256E03D90);
  }
  return result;
}

uint64_t type metadata accessor for SystemResponse(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06700);
}

uint64_t type metadata accessor for ActionResponse(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06658);
}

uint64_t type metadata accessor for SystemPrompt(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E063D0);
}

uint64_t sub_23F1F5EF8(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    sub_23F163B00(a2, a3, a4);
    sub_23F163B00(a5, a6, a7);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_23F1F5F74(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  v5 = a1[11];
  v6 = a1[12];
  v7 = a1[13];
  v8 = a1[14];
  sub_23F1F6000(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_23F1F6000(v2, v3, v4, v5, v6, v7, v8);
  return a1;
}

uint64_t sub_23F1F6000(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_23F163B14(a2, a3, a4);
    sub_23F163B14(a5, a6, a7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F1F607C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23F1F6090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_23F1F60A4()
{
  unint64_t result;

  result = qword_256E03EF0;
  if (!qword_256E03EF0)
  {
    result = MEMORY[0x242667160](&unk_23F28F134, &type metadata for MessagePayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03EF0);
  }
  return result;
}

unint64_t sub_23F1F60E0()
{
  unint64_t result;

  result = qword_256E03EF8;
  if (!qword_256E03EF8)
  {
    result = MEMORY[0x242667160](&unk_23F28F0E4, &type metadata for MessagePayload.ActionResolutionUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03EF8);
  }
  return result;
}

unint64_t sub_23F1F611C()
{
  unint64_t result;

  result = qword_256E03F00;
  if (!qword_256E03F00)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ActionResolutionUpdate, &type metadata for ActionResolutionUpdate);
    atomic_store(result, (unint64_t *)&qword_256E03F00);
  }
  return result;
}

unint64_t sub_23F1F6158()
{
  unint64_t result;

  result = qword_256E03F08;
  if (!qword_256E03F08)
  {
    result = MEMORY[0x242667160](&unk_23F28F094, &type metadata for MessagePayload.PlannerPromptDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03F08);
  }
  return result;
}

unint64_t sub_23F1F6194()
{
  unint64_t result;

  result = qword_256E03F10;
  if (!qword_256E03F10)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for PlannerPromptData, &type metadata for PlannerPromptData);
    atomic_store(result, (unint64_t *)&qword_256E03F10);
  }
  return result;
}

unint64_t sub_23F1F61D0()
{
  unint64_t result;

  result = qword_256E03F18;
  if (!qword_256E03F18)
  {
    result = MEMORY[0x242667160](&unk_23F28F044, &type metadata for MessagePayload.StatusUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03F18);
  }
  return result;
}

unint64_t sub_23F1F620C()
{
  unint64_t result;

  result = qword_256E03F20;
  if (!qword_256E03F20)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate, &type metadata for SessionStatusUpdate);
    atomic_store(result, (unint64_t *)&qword_256E03F20);
  }
  return result;
}

unint64_t sub_23F1F6248()
{
  unint64_t result;

  result = qword_256E03F28;
  if (!qword_256E03F28)
  {
    result = MEMORY[0x242667160](&unk_23F28EFF4, &type metadata for MessagePayload.ServerDebuggerEventCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03F28);
  }
  return result;
}

unint64_t sub_23F1F6284()
{
  unint64_t result;

  result = qword_256E03F38;
  if (!qword_256E03F38)
  {
    result = MEMORY[0x242667160](&unk_23F28EFA4, &type metadata for MessagePayload.ClientDebuggerEventCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03F38);
  }
  return result;
}

unint64_t sub_23F1F62C0()
{
  unint64_t result;

  result = qword_256E03F48;
  if (!qword_256E03F48)
  {
    result = MEMORY[0x242667160](&unk_23F28EF54, &type metadata for MessagePayload.ActionSummaryUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03F48);
  }
  return result;
}

unint64_t sub_23F1F62FC()
{
  unint64_t result;

  result = qword_256E03F58;
  if (!qword_256E03F58)
  {
    result = MEMORY[0x242667160](&unk_23F28EF04, &type metadata for MessagePayload.ClientUndoRedoRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03F58);
  }
  return result;
}

unint64_t sub_23F1F6338()
{
  unint64_t result;

  result = qword_256E03F68;
  if (!qword_256E03F68)
  {
    result = MEMORY[0x242667160](&unk_23F28EEB4, &type metadata for MessagePayload.ExternalAgentRequestRewriteMetadataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03F68);
  }
  return result;
}

unint64_t sub_23F1F6374()
{
  unint64_t result;

  result = qword_256E03F70;
  if (!qword_256E03F70)
  {
    result = MEMORY[0x242667160](&unk_23F28EE64, &type metadata for MessagePayload.ExternalAgentQueryRewriteMetadataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03F70);
  }
  return result;
}

unint64_t sub_23F1F63B0()
{
  unint64_t result;

  result = qword_256E03F78;
  if (!qword_256E03F78)
  {
    result = MEMORY[0x242667160](&unk_23F28EE14, &type metadata for MessagePayload.ExternalAgentOutcomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03F78);
  }
  return result;
}

unint64_t sub_23F1F63EC()
{
  unint64_t result;

  result = qword_256E03F88;
  if (!qword_256E03F88)
  {
    result = MEMORY[0x242667160](&unk_23F28EDC4, &type metadata for MessagePayload.ExternalAgentRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03F88);
  }
  return result;
}

unint64_t sub_23F1F6428()
{
  unint64_t result;

  result = qword_256E03F98;
  if (!qword_256E03F98)
  {
    result = MEMORY[0x242667160](&unk_23F28ED74, &type metadata for MessagePayload.ExternalAgentSpeechQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03F98);
  }
  return result;
}

unint64_t sub_23F1F6464()
{
  unint64_t result;

  result = qword_256E03FA8;
  if (!qword_256E03FA8)
  {
    result = MEMORY[0x242667160](&unk_23F28ED24, &type metadata for MessagePayload.ExternalAgentTextQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03FA8);
  }
  return result;
}

unint64_t sub_23F1F64A0()
{
  unint64_t result;

  result = qword_256E03FB8;
  if (!qword_256E03FB8)
  {
    result = MEMORY[0x242667160](&unk_23F28ECD4, &type metadata for MessagePayload.SafetyModeExceptionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03FB8);
  }
  return result;
}

unint64_t sub_23F1F64DC()
{
  unint64_t result;

  result = qword_256E03FC0;
  if (!qword_256E03FC0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.SafetyModeException, &type metadata for MessagePayload.SafetyModeException);
    atomic_store(result, (unint64_t *)&qword_256E03FC0);
  }
  return result;
}

unint64_t sub_23F1F6518()
{
  unint64_t result;

  result = qword_256E03FC8;
  if (!qword_256E03FC8)
  {
    result = MEMORY[0x242667160](&unk_23F28EC84, &type metadata for MessagePayload.SafetyModeReleaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03FC8);
  }
  return result;
}

unint64_t sub_23F1F6554()
{
  unint64_t result;

  result = qword_256E03FD0;
  if (!qword_256E03FD0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.SafetyModeRelease, &type metadata for MessagePayload.SafetyModeRelease);
    atomic_store(result, (unint64_t *)&qword_256E03FD0);
  }
  return result;
}

unint64_t sub_23F1F6590()
{
  unint64_t result;

  result = qword_256E03FD8;
  if (!qword_256E03FD8)
  {
    result = MEMORY[0x242667160](&unk_23F28EC34, &type metadata for MessagePayload.ContextPrewarmCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03FD8);
  }
  return result;
}

unint64_t sub_23F1F65CC()
{
  unint64_t result;

  result = qword_256E03FE0;
  if (!qword_256E03FE0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ContextPrewarmCompleted, &type metadata for MessagePayload.ContextPrewarmCompleted);
    atomic_store(result, (unint64_t *)&qword_256E03FE0);
  }
  return result;
}

unint64_t sub_23F1F6608()
{
  unint64_t result;

  result = qword_256E03FE8;
  if (!qword_256E03FE8)
  {
    result = MEMORY[0x242667160](&unk_23F28EBE4, &type metadata for MessagePayload.ContextPrewarmRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03FE8);
  }
  return result;
}

unint64_t sub_23F1F6644()
{
  unint64_t result;

  result = qword_256E03FF0;
  if (!qword_256E03FF0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ContextPrewarmRequest, &type metadata for MessagePayload.ContextPrewarmRequest);
    atomic_store(result, (unint64_t *)&qword_256E03FF0);
  }
  return result;
}

unint64_t sub_23F1F6680()
{
  unint64_t result;

  result = qword_256E03FF8;
  if (!qword_256E03FF8)
  {
    result = MEMORY[0x242667160](&unk_23F28EB94, &type metadata for MessagePayload.SystemResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E03FF8);
  }
  return result;
}

unint64_t sub_23F1F66BC()
{
  unint64_t result;

  result = qword_256E04008;
  if (!qword_256E04008)
  {
    result = MEMORY[0x242667160](&unk_23F28EB44, &type metadata for MessagePayload.ActionResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04008);
  }
  return result;
}

unint64_t sub_23F1F66F8()
{
  unint64_t result;

  result = qword_256E04018;
  if (!qword_256E04018)
  {
    result = MEMORY[0x242667160](&unk_23F28EAF4, &type metadata for MessagePayload.SystemPromptResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04018);
  }
  return result;
}

unint64_t sub_23F1F6734()
{
  unint64_t result;

  result = qword_256E04020;
  if (!qword_256E04020)
  {
    result = MEMORY[0x242667160](&unk_23F28EAA4, &type metadata for MessagePayload.SystemPromptRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04020);
  }
  return result;
}

unint64_t sub_23F1F6770()
{
  unint64_t result;

  result = qword_256E04030;
  if (!qword_256E04030)
  {
    result = MEMORY[0x242667160](&unk_23F28EA54, &type metadata for MessagePayload.ClientIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04030);
  }
  return result;
}

unint64_t sub_23F1F67AC()
{
  unint64_t result;

  result = qword_256E04038;
  if (!qword_256E04038)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ClientIdentifier, &type metadata for MessagePayload.ClientIdentifier);
    atomic_store(result, (unint64_t *)&qword_256E04038);
  }
  return result;
}

unint64_t sub_23F1F67E8()
{
  unint64_t result;

  result = qword_256E04040;
  if (!qword_256E04040)
  {
    result = MEMORY[0x242667160](&unk_23F28EA04, &type metadata for MessagePayload.ClientCustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04040);
  }
  return result;
}

unint64_t sub_23F1F6824()
{
  unint64_t result;

  result = qword_256E04048;
  if (!qword_256E04048)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ClientCustom, &type metadata for MessagePayload.ClientCustom);
    atomic_store(result, (unint64_t *)&qword_256E04048);
  }
  return result;
}

unint64_t sub_23F1F6860()
{
  unint64_t result;

  result = qword_256E04050;
  if (!qword_256E04050)
  {
    result = MEMORY[0x242667160](&unk_23F28E9B4, &type metadata for MessagePayload.ClientActionResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04050);
  }
  return result;
}

unint64_t sub_23F1F689C()
{
  unint64_t result;

  result = qword_256E04060;
  if (!qword_256E04060)
  {
    result = MEMORY[0x242667160](&unk_23F28E964, &type metadata for MessagePayload.ClientActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04060);
  }
  return result;
}

unint64_t sub_23F1F68D8()
{
  unint64_t result;

  result = qword_256E04070;
  if (!qword_256E04070)
  {
    result = MEMORY[0x242667160](&unk_23F28E914, &type metadata for MessagePayload.ActionWillExecuteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04070);
  }
  return result;
}

unint64_t sub_23F1F6914()
{
  unint64_t result;

  result = qword_256E04078;
  if (!qword_256E04078)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionWillExecute, &type metadata for MessagePayload.ActionWillExecute);
    atomic_store(result, (unint64_t *)&qword_256E04078);
  }
  return result;
}

unint64_t sub_23F1F6950()
{
  unint64_t result;

  result = qword_256E04080;
  if (!qword_256E04080)
  {
    result = MEMORY[0x242667160](&unk_23F28E8C4, &type metadata for MessagePayload.ClientEffectResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04080);
  }
  return result;
}

unint64_t sub_23F1F698C()
{
  unint64_t result;

  result = qword_256E04090;
  if (!qword_256E04090)
  {
    result = MEMORY[0x242667160](&unk_23F28E874, &type metadata for MessagePayload.ClientEffectInvocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04090);
  }
  return result;
}

unint64_t sub_23F1F69C8()
{
  unint64_t result;

  result = qword_256E040A0;
  if (!qword_256E040A0)
  {
    result = MEMORY[0x242667160](&unk_23F28E824, &type metadata for MessagePayload.DisambiguationNeededCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E040A0);
  }
  return result;
}

unint64_t sub_23F1F6A04()
{
  unint64_t result;

  result = qword_256E040A8;
  if (!qword_256E040A8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.DisambiguationNeeded, &type metadata for MessagePayload.DisambiguationNeeded);
    atomic_store(result, (unint64_t *)&qword_256E040A8);
  }
  return result;
}

unint64_t sub_23F1F6A40()
{
  unint64_t result;

  result = qword_256E040B0;
  if (!qword_256E040B0)
  {
    result = MEMORY[0x242667160](&unk_23F28E7D4, &type metadata for MessagePayload.MockTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E040B0);
  }
  return result;
}

unint64_t sub_23F1F6A7C()
{
  unint64_t result;

  result = qword_256E040B8;
  if (!qword_256E040B8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.MockTranscript, &type metadata for MessagePayload.MockTranscript);
    atomic_store(result, (unint64_t *)&qword_256E040B8);
  }
  return result;
}

unint64_t sub_23F1F6AB8()
{
  unint64_t result;

  result = qword_256E040C0;
  if (!qword_256E040C0)
  {
    result = MEMORY[0x242667160](&unk_23F28E784, &type metadata for MessagePayload.PrescribedPlanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E040C0);
  }
  return result;
}

unint64_t sub_23F1F6AF4()
{
  unint64_t result;

  result = qword_256E040C8;
  if (!qword_256E040C8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.PrescribedPlan, &type metadata for MessagePayload.PrescribedPlan);
    atomic_store(result, (unint64_t *)&qword_256E040C8);
  }
  return result;
}

unint64_t sub_23F1F6B30()
{
  unint64_t result;

  result = qword_256E040D0;
  if (!qword_256E040D0)
  {
    result = MEMORY[0x242667160](&unk_23F28E734, &type metadata for MessagePayload.ClientInitiatedClientActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E040D0);
  }
  return result;
}

unint64_t sub_23F1F6B6C()
{
  unint64_t result;

  result = qword_256E040D8;
  if (!qword_256E040D8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ClientInitiatedClientAction, &type metadata for MessagePayload.ClientInitiatedClientAction);
    atomic_store(result, (unint64_t *)&qword_256E040D8);
  }
  return result;
}

unint64_t sub_23F1F6BA8()
{
  unint64_t result;

  result = qword_256E040E0;
  if (!qword_256E040E0)
  {
    result = MEMORY[0x242667160](&unk_23F28E6E4, &type metadata for MessagePayload.SpeechQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E040E0);
  }
  return result;
}

unint64_t sub_23F1F6BE4()
{
  unint64_t result;

  result = qword_256E040E8;
  if (!qword_256E040E8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.SpeechQuery, &type metadata for MessagePayload.SpeechQuery);
    atomic_store(result, (unint64_t *)&qword_256E040E8);
  }
  return result;
}

unint64_t sub_23F1F6C20()
{
  unint64_t result;

  result = qword_256E040F0;
  if (!qword_256E040F0)
  {
    result = MEMORY[0x242667160](&unk_23F28E694, &type metadata for MessagePayload.QueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E040F0);
  }
  return result;
}

unint64_t sub_23F1F6C5C()
{
  unint64_t result;

  result = qword_256E040F8;
  if (!qword_256E040F8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.Query, &type metadata for MessagePayload.Query);
    atomic_store(result, (unint64_t *)&qword_256E040F8);
  }
  return result;
}

unint64_t sub_23F1F6C98()
{
  unint64_t result;

  result = qword_256E04100;
  if (!qword_256E04100)
  {
    result = MEMORY[0x242667160](&unk_23F28E644, &type metadata for MessagePayload.PlannerReturnedRawPlanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04100);
  }
  return result;
}

unint64_t sub_23F1F6CD4()
{
  unint64_t result;

  result = qword_256E04108;
  if (!qword_256E04108)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.PlannerReturnedRawPlan, &type metadata for MessagePayload.PlannerReturnedRawPlan);
    atomic_store(result, (unint64_t *)&qword_256E04108);
  }
  return result;
}

unint64_t sub_23F1F6D10()
{
  unint64_t result;

  result = qword_256E04110;
  if (!qword_256E04110)
  {
    result = MEMORY[0x242667160](&unk_23F28E5F4, &type metadata for MessagePayload.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04110);
  }
  return result;
}

unint64_t sub_23F1F6D4C()
{
  unint64_t result;

  result = qword_256E04118;
  if (!qword_256E04118)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.SessionError, &type metadata for MessagePayload.SessionError);
    atomic_store(result, (unint64_t *)&qword_256E04118);
  }
  return result;
}

unint64_t sub_23F1F6D88()
{
  unint64_t result;

  result = qword_256E04120;
  if (!qword_256E04120)
  {
    result = MEMORY[0x242667160](&unk_23F28E5A4, &type metadata for MessagePayload.StepExecutedWithReturnedValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04120);
  }
  return result;
}

unint64_t sub_23F1F6DC4()
{
  unint64_t result;

  result = qword_256E04130;
  if (!qword_256E04130)
  {
    result = MEMORY[0x242667160](&unk_23F28E554, &type metadata for MessagePayload.EndOfPlanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04130);
  }
  return result;
}

unint64_t sub_23F1F6E00()
{
  unint64_t result;

  result = qword_256E04138;
  if (!qword_256E04138)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.EndOfPlan, &type metadata for MessagePayload.EndOfPlan);
    atomic_store(result, (unint64_t *)&qword_256E04138);
  }
  return result;
}

unint64_t sub_23F1F6E3C()
{
  unint64_t result;

  result = qword_256E04140;
  if (!qword_256E04140)
  {
    result = MEMORY[0x242667160](&unk_23F28E504, &type metadata for MessagePayload.SessionSuspendedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04140);
  }
  return result;
}

unint64_t sub_23F1F6E78()
{
  unint64_t result;

  result = qword_256E04148;
  if (!qword_256E04148)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.SessionSuspended, &type metadata for MessagePayload.SessionSuspended);
    atomic_store(result, (unint64_t *)&qword_256E04148);
  }
  return result;
}

unint64_t sub_23F1F6EB4()
{
  unint64_t result;

  result = qword_256E04150;
  if (!qword_256E04150)
  {
    result = MEMORY[0x242667160](&unk_23F28E4B4, &type metadata for MessagePayload.TerminateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04150);
  }
  return result;
}

unint64_t sub_23F1F6EF0()
{
  unint64_t result;

  result = qword_256E04158;
  if (!qword_256E04158)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.Terminate, &type metadata for MessagePayload.Terminate);
    atomic_store(result, (unint64_t *)&qword_256E04158);
  }
  return result;
}

unint64_t sub_23F1F6F2C()
{
  unint64_t result;

  result = qword_256E04160;
  if (!qword_256E04160)
  {
    result = MEMORY[0x242667160](&unk_23F28E464, &type metadata for MessagePayload.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04160);
  }
  return result;
}

unint64_t sub_23F1F6F68()
{
  unint64_t result;

  result = qword_256E042C0;
  if (!qword_256E042C0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ActionResolutionUpdate, &type metadata for ActionResolutionUpdate);
    atomic_store(result, (unint64_t *)&qword_256E042C0);
  }
  return result;
}

unint64_t sub_23F1F6FA4()
{
  unint64_t result;

  result = qword_256E042C8;
  if (!qword_256E042C8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for PlannerPromptData, &type metadata for PlannerPromptData);
    atomic_store(result, (unint64_t *)&qword_256E042C8);
  }
  return result;
}

unint64_t sub_23F1F6FE0()
{
  unint64_t result;

  result = qword_256E042D0;
  if (!qword_256E042D0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionStatusUpdate, &type metadata for SessionStatusUpdate);
    atomic_store(result, (unint64_t *)&qword_256E042D0);
  }
  return result;
}

unint64_t sub_23F1F701C()
{
  unint64_t result;

  result = qword_256E04318;
  if (!qword_256E04318)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.SafetyModeException, &type metadata for MessagePayload.SafetyModeException);
    atomic_store(result, (unint64_t *)&qword_256E04318);
  }
  return result;
}

unint64_t sub_23F1F7058()
{
  unint64_t result;

  result = qword_256E04320;
  if (!qword_256E04320)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.SafetyModeRelease, &type metadata for MessagePayload.SafetyModeRelease);
    atomic_store(result, (unint64_t *)&qword_256E04320);
  }
  return result;
}

unint64_t sub_23F1F7094()
{
  unint64_t result;

  result = qword_256E04328;
  if (!qword_256E04328)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ContextPrewarmCompleted, &type metadata for MessagePayload.ContextPrewarmCompleted);
    atomic_store(result, (unint64_t *)&qword_256E04328);
  }
  return result;
}

unint64_t sub_23F1F70D0()
{
  unint64_t result;

  result = qword_256E04330;
  if (!qword_256E04330)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ContextPrewarmRequest, &type metadata for MessagePayload.ContextPrewarmRequest);
    atomic_store(result, (unint64_t *)&qword_256E04330);
  }
  return result;
}

unint64_t sub_23F1F710C()
{
  unint64_t result;

  result = qword_256E04350;
  if (!qword_256E04350)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ClientIdentifier, &type metadata for MessagePayload.ClientIdentifier);
    atomic_store(result, (unint64_t *)&qword_256E04350);
  }
  return result;
}

unint64_t sub_23F1F7148()
{
  unint64_t result;

  result = qword_256E04358;
  if (!qword_256E04358)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ClientCustom, &type metadata for MessagePayload.ClientCustom);
    atomic_store(result, (unint64_t *)&qword_256E04358);
  }
  return result;
}

unint64_t sub_23F1F7184()
{
  unint64_t result;

  result = qword_256E04370;
  if (!qword_256E04370)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ActionWillExecute, &type metadata for MessagePayload.ActionWillExecute);
    atomic_store(result, (unint64_t *)&qword_256E04370);
  }
  return result;
}

unint64_t sub_23F1F71C0()
{
  unint64_t result;

  result = qword_256E04388;
  if (!qword_256E04388)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.DisambiguationNeeded, &type metadata for MessagePayload.DisambiguationNeeded);
    atomic_store(result, (unint64_t *)&qword_256E04388);
  }
  return result;
}

unint64_t sub_23F1F71FC()
{
  unint64_t result;

  result = qword_256E04390;
  if (!qword_256E04390)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.MockTranscript, &type metadata for MessagePayload.MockTranscript);
    atomic_store(result, (unint64_t *)&qword_256E04390);
  }
  return result;
}

unint64_t sub_23F1F7238()
{
  unint64_t result;

  result = qword_256E04398;
  if (!qword_256E04398)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.PrescribedPlan, &type metadata for MessagePayload.PrescribedPlan);
    atomic_store(result, (unint64_t *)&qword_256E04398);
  }
  return result;
}

unint64_t sub_23F1F7274()
{
  unint64_t result;

  result = qword_256E043A0;
  if (!qword_256E043A0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ClientInitiatedClientAction, &type metadata for MessagePayload.ClientInitiatedClientAction);
    atomic_store(result, (unint64_t *)&qword_256E043A0);
  }
  return result;
}

unint64_t sub_23F1F72B0()
{
  unint64_t result;

  result = qword_256E043A8;
  if (!qword_256E043A8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.SpeechQuery, &type metadata for MessagePayload.SpeechQuery);
    atomic_store(result, (unint64_t *)&qword_256E043A8);
  }
  return result;
}

unint64_t sub_23F1F72EC()
{
  unint64_t result;

  result = qword_256E043B0;
  if (!qword_256E043B0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.Query, &type metadata for MessagePayload.Query);
    atomic_store(result, (unint64_t *)&qword_256E043B0);
  }
  return result;
}

unint64_t sub_23F1F7328()
{
  unint64_t result;

  result = qword_256E043B8;
  if (!qword_256E043B8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.PlannerReturnedRawPlan, &type metadata for MessagePayload.PlannerReturnedRawPlan);
    atomic_store(result, (unint64_t *)&qword_256E043B8);
  }
  return result;
}

unint64_t sub_23F1F7364()
{
  unint64_t result;

  result = qword_256E043C0;
  if (!qword_256E043C0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.SessionError, &type metadata for MessagePayload.SessionError);
    atomic_store(result, (unint64_t *)&qword_256E043C0);
  }
  return result;
}

unint64_t sub_23F1F73A0()
{
  unint64_t result;

  result = qword_256E043D0;
  if (!qword_256E043D0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.EndOfPlan, &type metadata for MessagePayload.EndOfPlan);
    atomic_store(result, (unint64_t *)&qword_256E043D0);
  }
  return result;
}

unint64_t sub_23F1F73DC()
{
  unint64_t result;

  result = qword_256E043D8;
  if (!qword_256E043D8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.SessionSuspended, &type metadata for MessagePayload.SessionSuspended);
    atomic_store(result, (unint64_t *)&qword_256E043D8);
  }
  return result;
}

unint64_t sub_23F1F7418()
{
  unint64_t result;

  result = qword_256E043E0;
  if (!qword_256E043E0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.Terminate, &type metadata for MessagePayload.Terminate);
    atomic_store(result, (unint64_t *)&qword_256E043E0);
  }
  return result;
}

uint64_t type metadata accessor for SystemPrompt.Prompt(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06480);
}

unint64_t sub_23F1F7468()
{
  unint64_t result;

  result = qword_256E04430;
  if (!qword_256E04430)
  {
    result = MEMORY[0x242667160](&unk_23F28E414, &type metadata for SystemPrompt.Prompt.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04430);
  }
  return result;
}

unint64_t sub_23F1F74A4()
{
  unint64_t result;

  result = qword_256E04438;
  if (!qword_256E04438)
  {
    result = MEMORY[0x242667160](&unk_23F28E3C4, &type metadata for SystemPrompt.Prompt.ParameterDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04438);
  }
  return result;
}

unint64_t sub_23F1F74E0()
{
  unint64_t result;

  result = qword_256E04440;
  if (!qword_256E04440)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ParameterDisambiguation, &type metadata for ParameterDisambiguation);
    atomic_store(result, (unint64_t *)&qword_256E04440);
  }
  return result;
}

unint64_t sub_23F1F751C()
{
  unint64_t result;

  result = qword_256E04448;
  if (!qword_256E04448)
  {
    result = MEMORY[0x242667160](&unk_23F28E374, &type metadata for SystemPrompt.Prompt.ParameterConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04448);
  }
  return result;
}

unint64_t sub_23F1F7558()
{
  unint64_t result;

  result = qword_256E04458;
  if (!qword_256E04458)
  {
    result = MEMORY[0x242667160](&unk_23F28E324, &type metadata for SystemPrompt.Prompt.ParameterNeedsValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04458);
  }
  return result;
}

unint64_t sub_23F1F7594()
{
  unint64_t result;

  result = qword_256E04468;
  if (!qword_256E04468)
  {
    result = MEMORY[0x242667160](&unk_23F28E2D4, &type metadata for SystemPrompt.Prompt.ActionConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04468);
  }
  return result;
}

unint64_t sub_23F1F75D0()
{
  unint64_t result;

  result = qword_256E04470;
  if (!qword_256E04470)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ActionConfirmation, &type metadata for ActionConfirmation);
    atomic_store(result, (unint64_t *)&qword_256E04470);
  }
  return result;
}

unint64_t sub_23F1F760C()
{
  unint64_t result;

  result = qword_256E044A0;
  if (!qword_256E044A0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ParameterDisambiguation, &type metadata for ParameterDisambiguation);
    atomic_store(result, (unint64_t *)&qword_256E044A0);
  }
  return result;
}

unint64_t sub_23F1F7648()
{
  unint64_t result;

  result = qword_256E044B8;
  if (!qword_256E044B8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ActionConfirmation, &type metadata for ActionConfirmation);
    atomic_store(result, (unint64_t *)&qword_256E044B8);
  }
  return result;
}

unint64_t sub_23F1F7684()
{
  unint64_t result;

  result = qword_256E044C8;
  if (!qword_256E044C8)
  {
    result = MEMORY[0x242667160](&unk_23F28E284, &type metadata for SystemPrompt.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E044C8);
  }
  return result;
}

uint64_t type metadata accessor for SystemPromptResolution.UserAction(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E065C8);
}

unint64_t sub_23F1F76D4()
{
  unint64_t result;

  result = qword_256E04500;
  if (!qword_256E04500)
  {
    result = MEMORY[0x242667160](&unk_23F28E234, &type metadata for SystemPromptResolution.InputModality.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04500);
  }
  return result;
}

unint64_t sub_23F1F7710()
{
  unint64_t result;

  result = qword_256E04508;
  if (!qword_256E04508)
  {
    result = MEMORY[0x242667160](&unk_23F28E1E4, &type metadata for SystemPromptResolution.InputModality.HeadGestureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04508);
  }
  return result;
}

unint64_t sub_23F1F774C()
{
  unint64_t result;

  result = qword_256E04510;
  if (!qword_256E04510)
  {
    result = MEMORY[0x242667160](&unk_23F28E194, &type metadata for SystemPromptResolution.InputModality.TouchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04510);
  }
  return result;
}

unint64_t sub_23F1F7788()
{
  unint64_t result;

  result = qword_256E04558;
  if (!qword_256E04558)
  {
    result = MEMORY[0x242667160](&unk_23F28E144, &type metadata for SystemPromptResolution.ResolutionInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04558);
  }
  return result;
}

unint64_t sub_23F1F77C4()
{
  unint64_t result;

  result = qword_256E04560;
  if (!qword_256E04560)
  {
    result = MEMORY[0x242667160](&unk_23F28E0F4, &type metadata for SystemPromptResolution.ResolutionInput.SpeechCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04560);
  }
  return result;
}

unint64_t sub_23F1F7800()
{
  unint64_t result;

  result = qword_256E04568;
  if (!qword_256E04568)
  {
    result = MEMORY[0x242667160](&unk_23F28E0A4, &type metadata for SystemPromptResolution.ResolutionInput.TextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04568);
  }
  return result;
}

unint64_t sub_23F1F783C()
{
  unint64_t result;

  result = qword_256E04570;
  if (!qword_256E04570)
  {
    result = MEMORY[0x242667160](&unk_23F28E054, &type metadata for SystemPromptResolution.ResolutionInput.HeadGestureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04570);
  }
  return result;
}

unint64_t sub_23F1F7878()
{
  unint64_t result;

  result = qword_256E04578;
  if (!qword_256E04578)
  {
    result = MEMORY[0x242667160](&unk_23F28E004, &type metadata for SystemPromptResolution.ResolutionInput.TouchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04578);
  }
  return result;
}

unint64_t sub_23F1F78B4()
{
  unint64_t result;

  result = qword_256E045F8;
  if (!qword_256E045F8)
  {
    result = MEMORY[0x242667160](&unk_23F28DFB4, &type metadata for SystemPromptResolution.UserAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E045F8);
  }
  return result;
}

unint64_t sub_23F1F78F0()
{
  unint64_t result;

  result = qword_256E04600;
  if (!qword_256E04600)
  {
    result = MEMORY[0x242667160](&unk_23F28DF64, &type metadata for SystemPromptResolution.UserAction.ActionCanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04600);
  }
  return result;
}

unint64_t sub_23F1F792C()
{
  unint64_t result;

  result = qword_256E04608;
  if (!qword_256E04608)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemPromptResolution.ActionCancellation, &type metadata for SystemPromptResolution.ActionCancellation);
    atomic_store(result, (unint64_t *)&qword_256E04608);
  }
  return result;
}

unint64_t sub_23F1F7968()
{
  unint64_t result;

  result = qword_256E04610;
  if (!qword_256E04610)
  {
    result = MEMORY[0x242667160](&unk_23F28DF14, &type metadata for SystemPromptResolution.UserAction.RequirementAddressedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04610);
  }
  return result;
}

unint64_t sub_23F1F79A4()
{
  unint64_t result;

  result = qword_256E04618;
  if (!qword_256E04618)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemPromptResolution.RequirementResolution, &type metadata for SystemPromptResolution.RequirementResolution);
    atomic_store(result, (unint64_t *)&qword_256E04618);
  }
  return result;
}

unint64_t sub_23F1F79E0()
{
  unint64_t result;

  result = qword_256E04620;
  if (!qword_256E04620)
  {
    result = MEMORY[0x242667160](&unk_23F28DEC4, &type metadata for SystemPromptResolution.UserAction.DisambiguationIndexSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04620);
  }
  return result;
}

unint64_t sub_23F1F7A1C()
{
  unint64_t result;

  result = qword_256E04628;
  if (!qword_256E04628)
  {
    result = MEMORY[0x242667160](&unk_23F28DE74, &type metadata for SystemPromptResolution.UserAction.ParameterItemSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04628);
  }
  return result;
}

unint64_t sub_23F1F7A58()
{
  unint64_t result;

  result = qword_256E04630;
  if (!qword_256E04630)
  {
    result = MEMORY[0x242667160](&unk_23F28DE24, &type metadata for SystemPromptResolution.UserAction.ParameterConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04630);
  }
  return result;
}

unint64_t sub_23F1F7A94()
{
  unint64_t result;

  result = qword_256E04638;
  if (!qword_256E04638)
  {
    result = MEMORY[0x242667160](&unk_23F28DDD4, &type metadata for SystemPromptResolution.UserAction.ParameterValueSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04638);
  }
  return result;
}

unint64_t sub_23F1F7AD0()
{
  unint64_t result;

  result = qword_256E04640;
  if (!qword_256E04640)
  {
    result = MEMORY[0x242667160](&unk_23F28DD84, &type metadata for SystemPromptResolution.UserAction.DeviceUnlockedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04640);
  }
  return result;
}

unint64_t sub_23F1F7B0C()
{
  unint64_t result;

  result = qword_256E04648;
  if (!qword_256E04648)
  {
    result = MEMORY[0x242667160](&unk_23F28DD34, &type metadata for SystemPromptResolution.UserAction.ActionConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04648);
  }
  return result;
}

unint64_t sub_23F1F7B48()
{
  unint64_t result;

  result = qword_256E04698;
  if (!qword_256E04698)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemPromptResolution.ActionCancellation, &type metadata for SystemPromptResolution.ActionCancellation);
    atomic_store(result, (unint64_t *)&qword_256E04698);
  }
  return result;
}

unint64_t sub_23F1F7B84()
{
  unint64_t result;

  result = qword_256E046A0;
  if (!qword_256E046A0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemPromptResolution.RequirementResolution, &type metadata for SystemPromptResolution.RequirementResolution);
    atomic_store(result, (unint64_t *)&qword_256E046A0);
  }
  return result;
}

unint64_t sub_23F1F7BC0()
{
  unint64_t result;

  result = qword_256E046B0;
  if (!qword_256E046B0)
  {
    result = MEMORY[0x242667160](&unk_23F28DCE4, &type metadata for SystemPromptResolution.RequirementResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E046B0);
  }
  return result;
}

unint64_t sub_23F1F7BFC()
{
  unint64_t result;

  result = qword_256E046C8;
  if (!qword_256E046C8)
  {
    result = MEMORY[0x242667160](&unk_23F28DC94, &type metadata for SystemPromptResolution.ActionCancellation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E046C8);
  }
  return result;
}

unint64_t sub_23F1F7C38()
{
  unint64_t result;

  result = qword_256E046D8;
  if (!qword_256E046D8)
  {
    result = MEMORY[0x242667160](&unk_23F28DC44, &type metadata for SystemPromptResolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E046D8);
  }
  return result;
}

unint64_t sub_23F1F7C74()
{
  unint64_t result;

  result = qword_256E046E8;
  if (!qword_256E046E8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemPromptResolution.ResolutionInput, &type metadata for SystemPromptResolution.ResolutionInput);
    atomic_store(result, (unint64_t *)&qword_256E046E8);
  }
  return result;
}

unint64_t sub_23F1F7CB0()
{
  unint64_t result;

  result = qword_256E04700;
  if (!qword_256E04700)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemPromptResolution.ResolutionInput, &type metadata for SystemPromptResolution.ResolutionInput);
    atomic_store(result, (unint64_t *)&qword_256E04700);
  }
  return result;
}

unint64_t sub_23F1F7CEC()
{
  unint64_t result;

  result = qword_256E04718;
  if (!qword_256E04718)
  {
    result = MEMORY[0x242667160](&unk_23F28DBF4, &type metadata for ActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04718);
  }
  return result;
}

unint64_t sub_23F1F7D28()
{
  unint64_t result;

  result = qword_256E04728;
  if (!qword_256E04728)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseOutput, &type metadata for ResponseOutput);
    atomic_store(result, (unint64_t *)&qword_256E04728);
  }
  return result;
}

unint64_t sub_23F1F7D64()
{
  unint64_t result;

  result = qword_256E04740;
  if (!qword_256E04740)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseOutput, &type metadata for ResponseOutput);
    atomic_store(result, (unint64_t *)&qword_256E04740);
  }
  return result;
}

uint64_t type metadata accessor for InterpretedStatementResult(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E067A8);
}

unint64_t sub_23F1F7DB4()
{
  unint64_t result;

  result = qword_256E04758;
  if (!qword_256E04758)
  {
    result = MEMORY[0x242667160](&unk_23F28DBA4, &type metadata for SystemResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04758);
  }
  return result;
}

unint64_t sub_23F1F7DF0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E04768;
  if (!qword_256E04768)
  {
    v1 = sub_23F125540(&qword_256E04760);
    sub_23F12E488((uint64_t)&unk_256E04770);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E04768);
  }
  return result;
}

unint64_t sub_23F1F7E6C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E04780;
  if (!qword_256E04780)
  {
    v1 = sub_23F125540(&qword_256E04760);
    sub_23F12E488((uint64_t)&unk_256E04788);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E04780);
  }
  return result;
}

unint64_t sub_23F1F7EE8()
{
  unint64_t result;

  result = qword_256E04798;
  if (!qword_256E04798)
  {
    result = MEMORY[0x242667160](&unk_23F28DB54, &type metadata for InterpretedStatementResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04798);
  }
  return result;
}

uint64_t type metadata accessor for ActionSuccess.UndoContext(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06A38);
}

unint64_t sub_23F1F7F38()
{
  unint64_t result;

  result = qword_256E04810;
  if (!qword_256E04810)
  {
    result = MEMORY[0x242667160](&unk_23F28DB04, &type metadata for ActionOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04810);
  }
  return result;
}

unint64_t sub_23F1F7F74()
{
  unint64_t result;

  result = qword_256E04818;
  if (!qword_256E04818)
  {
    result = MEMORY[0x242667160](&unk_23F28DAB4, &type metadata for ActionOutcome.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04818);
  }
  return result;
}

unint64_t sub_23F1F7FB0()
{
  unint64_t result;

  result = qword_256E04820;
  if (!qword_256E04820)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ActionFailure, &type metadata for ActionFailure);
    atomic_store(result, (unint64_t *)&qword_256E04820);
  }
  return result;
}

unint64_t sub_23F1F7FEC()
{
  unint64_t result;

  result = qword_256E04828;
  if (!qword_256E04828)
  {
    result = MEMORY[0x242667160](&unk_23F28DA64, &type metadata for ActionOutcome.ValueDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04828);
  }
  return result;
}

unint64_t sub_23F1F8028()
{
  unint64_t result;

  result = qword_256E04830;
  if (!qword_256E04830)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ValueDisambiguation, &type metadata for ValueDisambiguation);
    atomic_store(result, (unint64_t *)&qword_256E04830);
  }
  return result;
}

unint64_t sub_23F1F8064()
{
  unint64_t result;

  result = qword_256E04838;
  if (!qword_256E04838)
  {
    result = MEMORY[0x242667160](&unk_23F28DA14, &type metadata for ActionOutcome.ActionRequirementCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04838);
  }
  return result;
}

unint64_t sub_23F1F80A0()
{
  unint64_t result;

  result = qword_256E04840;
  if (!qword_256E04840)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ActionRequirement, &type metadata for ActionRequirement);
    atomic_store(result, (unint64_t *)&qword_256E04840);
  }
  return result;
}

unint64_t sub_23F1F80DC()
{
  unint64_t result;

  result = qword_256E04848;
  if (!qword_256E04848)
  {
    result = MEMORY[0x242667160](&unk_23F28D9C4, &type metadata for ActionOutcome.ParameterCandidatesNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04848);
  }
  return result;
}

unint64_t sub_23F1F8118()
{
  unint64_t result;

  result = qword_256E04858;
  if (!qword_256E04858)
  {
    result = MEMORY[0x242667160](&unk_23F28D974, &type metadata for ActionOutcome.ParameterNotAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04858);
  }
  return result;
}

unint64_t sub_23F1F8154()
{
  unint64_t result;

  result = qword_256E04868;
  if (!qword_256E04868)
  {
    result = MEMORY[0x242667160](&unk_23F28D924, &type metadata for ActionOutcome.ParameterDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04868);
  }
  return result;
}

unint64_t sub_23F1F8190()
{
  unint64_t result;

  result = qword_256E04870;
  if (!qword_256E04870)
  {
    result = MEMORY[0x242667160](&unk_23F28D8D4, &type metadata for ActionOutcome.ParameterConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04870);
  }
  return result;
}

unint64_t sub_23F1F81CC()
{
  unint64_t result;

  result = qword_256E04878;
  if (!qword_256E04878)
  {
    result = MEMORY[0x242667160](&unk_23F28D884, &type metadata for ActionOutcome.ParameterNeedsValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04878);
  }
  return result;
}

unint64_t sub_23F1F8208()
{
  unint64_t result;

  result = qword_256E04880;
  if (!qword_256E04880)
  {
    result = MEMORY[0x242667160](&unk_23F28D834, &type metadata for ActionOutcome.ToolDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04880);
  }
  return result;
}

unint64_t sub_23F1F8244()
{
  unint64_t result;

  result = qword_256E04888;
  if (!qword_256E04888)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ToolDisambiguation, &type metadata for ToolDisambiguation);
    atomic_store(result, (unint64_t *)&qword_256E04888);
  }
  return result;
}

unint64_t sub_23F1F8280()
{
  unint64_t result;

  result = qword_256E04890;
  if (!qword_256E04890)
  {
    result = MEMORY[0x242667160](&unk_23F28D7E4, &type metadata for ActionOutcome.ActionConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04890);
  }
  return result;
}

unint64_t sub_23F1F82BC()
{
  unint64_t result;

  result = qword_256E04898;
  if (!qword_256E04898)
  {
    result = MEMORY[0x242667160](&unk_23F28D794, &type metadata for ActionOutcome.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04898);
  }
  return result;
}

unint64_t sub_23F1F82F8()
{
  unint64_t result;

  result = qword_256E04908;
  if (!qword_256E04908)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ActionFailure, &type metadata for ActionFailure);
    atomic_store(result, (unint64_t *)&qword_256E04908);
  }
  return result;
}

unint64_t sub_23F1F8334()
{
  unint64_t result;

  result = qword_256E04910;
  if (!qword_256E04910)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ValueDisambiguation, &type metadata for ValueDisambiguation);
    atomic_store(result, (unint64_t *)&qword_256E04910);
  }
  return result;
}

unint64_t sub_23F1F8370()
{
  unint64_t result;

  result = qword_256E04918;
  if (!qword_256E04918)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ActionRequirement, &type metadata for ActionRequirement);
    atomic_store(result, (unint64_t *)&qword_256E04918);
  }
  return result;
}

unint64_t sub_23F1F83AC()
{
  unint64_t result;

  result = qword_256E04930;
  if (!qword_256E04930)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ToolDisambiguation, &type metadata for ToolDisambiguation);
    atomic_store(result, (unint64_t *)&qword_256E04930);
  }
  return result;
}

unint64_t sub_23F1F83E8()
{
  unint64_t result;

  result = qword_256E049A0;
  if (!qword_256E049A0)
  {
    result = MEMORY[0x242667160](&unk_23F28D744, &type metadata for StatementOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E049A0);
  }
  return result;
}

unint64_t sub_23F1F8424()
{
  unint64_t result;

  result = qword_256E049A8;
  if (!qword_256E049A8)
  {
    result = MEMORY[0x242667160](&unk_23F28D6F4, &type metadata for StatementOutcome.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E049A8);
  }
  return result;
}

unint64_t sub_23F1F8460()
{
  unint64_t result;

  result = qword_256E049B0;
  if (!qword_256E049B0)
  {
    result = MEMORY[0x242667160](&unk_23F28D6A4, &type metadata for StatementOutcome.ValueDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E049B0);
  }
  return result;
}

unint64_t sub_23F1F849C()
{
  unint64_t result;

  result = qword_256E049B8;
  if (!qword_256E049B8)
  {
    result = MEMORY[0x242667160](&unk_23F28D654, &type metadata for StatementOutcome.ActionRequirementCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E049B8);
  }
  return result;
}

unint64_t sub_23F1F84D8()
{
  unint64_t result;

  result = qword_256E049C0;
  if (!qword_256E049C0)
  {
    result = MEMORY[0x242667160](&unk_23F28D604, &type metadata for StatementOutcome.ParameterCandidatesNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E049C0);
  }
  return result;
}

unint64_t sub_23F1F8514()
{
  unint64_t result;

  result = qword_256E049C8;
  if (!qword_256E049C8)
  {
    result = MEMORY[0x242667160](&unk_23F28D5B4, &type metadata for StatementOutcome.ParameterNotAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E049C8);
  }
  return result;
}

unint64_t sub_23F1F8550()
{
  unint64_t result;

  result = qword_256E049D0;
  if (!qword_256E049D0)
  {
    result = MEMORY[0x242667160](&unk_23F28D564, &type metadata for StatementOutcome.ParameterDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E049D0);
  }
  return result;
}

unint64_t sub_23F1F858C()
{
  unint64_t result;

  result = qword_256E049D8;
  if (!qword_256E049D8)
  {
    result = MEMORY[0x242667160](&unk_23F28D514, &type metadata for StatementOutcome.ParameterConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E049D8);
  }
  return result;
}

unint64_t sub_23F1F85C8()
{
  unint64_t result;

  result = qword_256E049E0;
  if (!qword_256E049E0)
  {
    result = MEMORY[0x242667160](&unk_23F28D4C4, &type metadata for StatementOutcome.ParameterNeedsValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E049E0);
  }
  return result;
}

unint64_t sub_23F1F8604()
{
  unint64_t result;

  result = qword_256E049E8;
  if (!qword_256E049E8)
  {
    result = MEMORY[0x242667160](&unk_23F28D474, &type metadata for StatementOutcome.ToolDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E049E8);
  }
  return result;
}

unint64_t sub_23F1F8640()
{
  unint64_t result;

  result = qword_256E049F0;
  if (!qword_256E049F0)
  {
    result = MEMORY[0x242667160](&unk_23F28D424, &type metadata for StatementOutcome.ActionConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E049F0);
  }
  return result;
}

unint64_t sub_23F1F867C()
{
  unint64_t result;

  result = qword_256E049F8;
  if (!qword_256E049F8)
  {
    result = MEMORY[0x242667160](&unk_23F28D3D4, &type metadata for StatementOutcome.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E049F8);
  }
  return result;
}

unint64_t sub_23F1F86B8()
{
  unint64_t result;

  result = qword_256E04A68;
  if (!qword_256E04A68)
  {
    result = MEMORY[0x242667160](&unk_23F28D384, &type metadata for StatementID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04A68);
  }
  return result;
}

void sub_23F1F86F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F180208(a1, a2, a3);
  sub_23F143964(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  sub_23F126078();
}

unint64_t sub_23F1F8720()
{
  unint64_t result;

  result = qword_256E04A80;
  if (!qword_256E04A80)
  {
    result = MEMORY[0x242667160](&unk_23F28D334, &type metadata for ActionSuccess.UndoContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04A80);
  }
  return result;
}

unint64_t sub_23F1F875C()
{
  unint64_t result;

  result = qword_256E04A98;
  if (!qword_256E04A98)
  {
    result = MEMORY[0x242667160](&unk_23F28D2E4, &type metadata for ActionSuccess.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04A98);
  }
  return result;
}

unint64_t sub_23F1F8798()
{
  unint64_t result;

  result = qword_256E04AE0;
  if (!qword_256E04AE0)
  {
    result = MEMORY[0x242667160](&unk_23F28D294, &type metadata for ActionRequirement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04AE0);
  }
  return result;
}

unint64_t sub_23F1F87D4()
{
  unint64_t result;

  result = qword_256E04AE8;
  if (!qword_256E04AE8)
  {
    result = MEMORY[0x242667160](&unk_23F28D244, &type metadata for ActionRequirement.UnsupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04AE8);
  }
  return result;
}

unint64_t sub_23F1F8810()
{
  unint64_t result;

  result = qword_256E04AF0;
  if (!qword_256E04AF0)
  {
    result = MEMORY[0x242667160](&unk_23F28D1F4, &type metadata for ActionRequirement.PermissionsRequirementCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04AF0);
  }
  return result;
}

unint64_t sub_23F1F884C()
{
  unint64_t result;

  result = qword_256E04AF8;
  if (!qword_256E04AF8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for PermissionRequirement, &type metadata for PermissionRequirement);
    atomic_store(result, (unint64_t *)&qword_256E04AF8);
  }
  return result;
}

unint64_t sub_23F1F8888()
{
  unint64_t result;

  result = qword_256E04B00;
  if (!qword_256E04B00)
  {
    result = MEMORY[0x242667160](&unk_23F28D1A4, &type metadata for ActionRequirement.AppRequirementCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04B00);
  }
  return result;
}

unint64_t sub_23F1F88C4()
{
  unint64_t result;

  result = qword_256E04B08;
  if (!qword_256E04B08)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AppRequirement, &type metadata for AppRequirement);
    atomic_store(result, (unint64_t *)&qword_256E04B08);
  }
  return result;
}

unint64_t sub_23F1F8900()
{
  unint64_t result;

  result = qword_256E04B10;
  if (!qword_256E04B10)
  {
    result = MEMORY[0x242667160](&unk_23F28D154, &type metadata for ActionRequirement.SystemRequirementCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04B10);
  }
  return result;
}

unint64_t sub_23F1F893C()
{
  unint64_t result;

  result = qword_256E04B18;
  if (!qword_256E04B18)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemRequirement, &type metadata for SystemRequirement);
    atomic_store(result, (unint64_t *)&qword_256E04B18);
  }
  return result;
}

unint64_t sub_23F1F8978()
{
  unint64_t result;

  result = qword_256E04B48;
  if (!qword_256E04B48)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for PermissionRequirement, &type metadata for PermissionRequirement);
    atomic_store(result, (unint64_t *)&qword_256E04B48);
  }
  return result;
}

unint64_t sub_23F1F89B4()
{
  unint64_t result;

  result = qword_256E04B50;
  if (!qword_256E04B50)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AppRequirement, &type metadata for AppRequirement);
    atomic_store(result, (unint64_t *)&qword_256E04B50);
  }
  return result;
}

unint64_t sub_23F1F89F0()
{
  unint64_t result;

  result = qword_256E04B58;
  if (!qword_256E04B58)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemRequirement, &type metadata for SystemRequirement);
    atomic_store(result, (unint64_t *)&qword_256E04B58);
  }
  return result;
}

unint64_t sub_23F1F8A2C()
{
  unint64_t result;

  result = qword_256E04B68;
  if (!qword_256E04B68)
  {
    result = MEMORY[0x242667160](&unk_23F28D104, &type metadata for SystemRequirement.ProtectedAppRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04B68);
  }
  return result;
}

unint64_t sub_23F1F8A68()
{
  unint64_t result;

  result = qword_256E04B90;
  if (!qword_256E04B90)
  {
    result = MEMORY[0x242667160](&unk_23F28D0B4, &type metadata for SystemRequirement.AuthenticationRequest.AuthenticationLevel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04B90);
  }
  return result;
}

unint64_t sub_23F1F8AA4()
{
  unint64_t result;

  result = qword_256E04B98;
  if (!qword_256E04B98)
  {
    result = MEMORY[0x242667160](&unk_23F28D064, &type metadata for SystemRequirement.AuthenticationRequest.AuthenticationLevel.OriginDeviceAuthenticationRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04B98);
  }
  return result;
}

unint64_t sub_23F1F8AE0()
{
  unint64_t result;

  result = qword_256E04BA0;
  if (!qword_256E04BA0)
  {
    result = MEMORY[0x242667160](&unk_23F28D014, &type metadata for SystemRequirement.AuthenticationRequest.AuthenticationLevel.AlternativeAuthenticationPermittedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04BA0);
  }
  return result;
}

unint64_t sub_23F1F8B1C()
{
  unint64_t result;

  result = qword_256E04BC8;
  if (!qword_256E04BC8)
  {
    result = MEMORY[0x242667160](&unk_23F28CFC4, &type metadata for SystemRequirement.AuthenticationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04BC8);
  }
  return result;
}

unint64_t sub_23F1F8B58()
{
  unint64_t result;

  result = qword_256E04BD0;
  if (!qword_256E04BD0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemRequirement.AuthenticationRequest.AuthenticationLevel, &type metadata for SystemRequirement.AuthenticationRequest.AuthenticationLevel);
    atomic_store(result, (unint64_t *)&qword_256E04BD0);
  }
  return result;
}

unint64_t sub_23F1F8B94()
{
  unint64_t result;

  result = qword_256E04BE0;
  if (!qword_256E04BE0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemRequirement.AuthenticationRequest.AuthenticationLevel, &type metadata for SystemRequirement.AuthenticationRequest.AuthenticationLevel);
    atomic_store(result, (unint64_t *)&qword_256E04BE0);
  }
  return result;
}

unint64_t sub_23F1F8BD0()
{
  unint64_t result;

  result = qword_256E04C28;
  if (!qword_256E04C28)
  {
    result = MEMORY[0x242667160](&unk_23F28CF74, &type metadata for SystemRequirement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04C28);
  }
  return result;
}

unint64_t sub_23F1F8C0C()
{
  unint64_t result;

  result = qword_256E04C30;
  if (!qword_256E04C30)
  {
    result = MEMORY[0x242667160](&unk_23F28CF24, &type metadata for SystemRequirement.UserAuthenticationRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04C30);
  }
  return result;
}

unint64_t sub_23F1F8C48()
{
  unint64_t result;

  result = qword_256E04C38;
  if (!qword_256E04C38)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemRequirement.AuthenticationRequest, &type metadata for SystemRequirement.AuthenticationRequest);
    atomic_store(result, (unint64_t *)&qword_256E04C38);
  }
  return result;
}

unint64_t sub_23F1F8C84()
{
  unint64_t result;

  result = qword_256E04C40;
  if (!qword_256E04C40)
  {
    result = MEMORY[0x242667160](&unk_23F28CED4, &type metadata for SystemRequirement.ProtectedAppApprovalRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04C40);
  }
  return result;
}

unint64_t sub_23F1F8CC0()
{
  unint64_t result;

  result = qword_256E04C48;
  if (!qword_256E04C48)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemRequirement.ProtectedAppRequest, &type metadata for SystemRequirement.ProtectedAppRequest);
    atomic_store(result, (unint64_t *)&qword_256E04C48);
  }
  return result;
}

unint64_t sub_23F1F8CFC()
{
  unint64_t result;

  result = qword_256E04C50;
  if (!qword_256E04C50)
  {
    result = MEMORY[0x242667160](&unk_23F28CE84, &type metadata for SystemRequirement.CarBluetoothIncompatibleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04C50);
  }
  return result;
}

unint64_t sub_23F1F8D38()
{
  unint64_t result;

  result = qword_256E04C58;
  if (!qword_256E04C58)
  {
    result = MEMORY[0x242667160](&unk_23F28CE34, &type metadata for SystemRequirement.CarPlayIncompatibleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04C58);
  }
  return result;
}

unint64_t sub_23F1F8D74()
{
  unint64_t result;

  result = qword_256E04C60;
  if (!qword_256E04C60)
  {
    result = MEMORY[0x242667160](&unk_23F28CDE4, &type metadata for SystemRequirement.AppLaunchRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04C60);
  }
  return result;
}

unint64_t sub_23F1F8DB0()
{
  unint64_t result;

  result = qword_256E04C68;
  if (!qword_256E04C68)
  {
    result = MEMORY[0x242667160](&unk_23F28CD94, &type metadata for SystemRequirement.AuthenticationRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04C68);
  }
  return result;
}

unint64_t sub_23F1F8DEC()
{
  unint64_t result;

  result = qword_256E04C70;
  if (!qword_256E04C70)
  {
    result = MEMORY[0x242667160](&unk_23F28CD44, &type metadata for SystemRequirement.DeviceUnlockRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04C70);
  }
  return result;
}

unint64_t sub_23F1F8E28()
{
  unint64_t result;

  result = qword_256E04CB8;
  if (!qword_256E04CB8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemRequirement.AuthenticationRequest, &type metadata for SystemRequirement.AuthenticationRequest);
    atomic_store(result, (unint64_t *)&qword_256E04CB8);
  }
  return result;
}

unint64_t sub_23F1F8E64()
{
  unint64_t result;

  result = qword_256E04CC0;
  if (!qword_256E04CC0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemRequirement.ProtectedAppRequest, &type metadata for SystemRequirement.ProtectedAppRequest);
    atomic_store(result, (unint64_t *)&qword_256E04CC0);
  }
  return result;
}

unint64_t sub_23F1F8EA0()
{
  unint64_t result;

  result = qword_256E04CE8;
  if (!qword_256E04CE8)
  {
    result = MEMORY[0x242667160](&unk_23F28CCF4, &type metadata for AppRequirement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04CE8);
  }
  return result;
}

unint64_t sub_23F1F8EDC()
{
  unint64_t result;

  result = qword_256E04CF0;
  if (!qword_256E04CF0)
  {
    result = MEMORY[0x242667160](&unk_23F28CCA4, &type metadata for AppRequirement.UserConfirmationRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04CF0);
  }
  return result;
}

unint64_t sub_23F1F8F18()
{
  unint64_t result;

  result = qword_256E04CF8;
  if (!qword_256E04CF8)
  {
    result = MEMORY[0x242667160](&unk_23F28CC54, &type metadata for AppRequirement.AccountSetupRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04CF8);
  }
  return result;
}

unint64_t sub_23F1F8F54()
{
  unint64_t result;

  result = qword_256E04D00;
  if (!qword_256E04D00)
  {
    result = MEMORY[0x242667160](&unk_23F28CC04, &type metadata for AppRequirement.SignInRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04D00);
  }
  return result;
}

unint64_t sub_23F1F8F90()
{
  unint64_t result;

  result = qword_256E04D70;
  if (!qword_256E04D70)
  {
    result = MEMORY[0x242667160](&unk_23F28CBB4, &type metadata for PermissionRequirement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04D70);
  }
  return result;
}

unint64_t sub_23F1F8FCC()
{
  unint64_t result;

  result = qword_256E04D78;
  if (!qword_256E04D78)
  {
    result = MEMORY[0x242667160](&unk_23F28CB64, &type metadata for PermissionRequirement.ContactsPermissionRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04D78);
  }
  return result;
}

unint64_t sub_23F1F9008()
{
  unint64_t result;

  result = qword_256E04D80;
  if (!qword_256E04D80)
  {
    result = MEMORY[0x242667160](&unk_23F28CB14, &type metadata for PermissionRequirement.PhotosPermissionRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04D80);
  }
  return result;
}

unint64_t sub_23F1F9044()
{
  unint64_t result;

  result = qword_256E04D88;
  if (!qword_256E04D88)
  {
    result = MEMORY[0x242667160](&unk_23F28CAC4, &type metadata for PermissionRequirement.BluetoothPermissionRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04D88);
  }
  return result;
}

unint64_t sub_23F1F9080()
{
  unint64_t result;

  result = qword_256E04D90;
  if (!qword_256E04D90)
  {
    result = MEMORY[0x242667160](&unk_23F28CA74, &type metadata for PermissionRequirement.WifiPermissionRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04D90);
  }
  return result;
}

unint64_t sub_23F1F90BC()
{
  unint64_t result;

  result = qword_256E04D98;
  if (!qword_256E04D98)
  {
    result = MEMORY[0x242667160](&unk_23F28CA24, &type metadata for PermissionRequirement.LocationPermissionRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04D98);
  }
  return result;
}

unint64_t sub_23F1F90F8()
{
  unint64_t result;

  result = qword_256E04DA0;
  if (!qword_256E04DA0)
  {
    result = MEMORY[0x242667160](&unk_23F28C9D4, &type metadata for PermissionRequirement.PreciseLocationPermissionRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04DA0);
  }
  return result;
}

unint64_t sub_23F1F9134()
{
  unint64_t result;

  result = qword_256E04DA8;
  if (!qword_256E04DA8)
  {
    result = MEMORY[0x242667160](&unk_23F28C984, &type metadata for PermissionRequirement.ShortcutsPermissionRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04DA8);
  }
  return result;
}

unint64_t sub_23F1F9170()
{
  unint64_t result;

  result = qword_256E04DB0;
  if (!qword_256E04DB0)
  {
    result = MEMORY[0x242667160](&unk_23F28C934, &type metadata for PermissionRequirement.SiriPermissionRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04DB0);
  }
  return result;
}

uint64_t sub_23F1F91AC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0x10)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_23F1F91E0()
{
  unint64_t result;

  result = qword_256E04E90;
  if (!qword_256E04E90)
  {
    result = MEMORY[0x242667160](&unk_23F28C8E4, &type metadata for ActionFailure.Failure.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04E90);
  }
  return result;
}

unint64_t sub_23F1F921C()
{
  unint64_t result;

  result = qword_256E04E98;
  if (!qword_256E04E98)
  {
    result = MEMORY[0x242667160](&unk_23F28C894, &type metadata for ActionFailure.Failure.UnableToCancelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04E98);
  }
  return result;
}

unint64_t sub_23F1F9258()
{
  unint64_t result;

  result = qword_256E04EA0;
  if (!qword_256E04EA0)
  {
    result = MEMORY[0x242667160](&unk_23F28C844, &type metadata for ActionFailure.Failure.DeveloperDefinedErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04EA0);
  }
  return result;
}

unint64_t sub_23F1F9294()
{
  unint64_t result;

  result = qword_256E04EA8;
  if (!qword_256E04EA8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ActionFailure.DeveloperDefinedError, &type metadata for ActionFailure.DeveloperDefinedError);
    atomic_store(result, (unint64_t *)&qword_256E04EA8);
  }
  return result;
}

unint64_t sub_23F1F92D0()
{
  unint64_t result;

  result = qword_256E04EB0;
  if (!qword_256E04EB0)
  {
    result = MEMORY[0x242667160](&unk_23F28C7F4, &type metadata for ActionFailure.Failure.ActionCanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04EB0);
  }
  return result;
}

unint64_t sub_23F1F930C()
{
  unint64_t result;

  result = qword_256E04EB8;
  if (!qword_256E04EB8)
  {
    result = MEMORY[0x242667160](&unk_23F28C7A4, &type metadata for ActionFailure.Failure.UnableToUndoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04EB8);
  }
  return result;
}

unint64_t sub_23F1F9348()
{
  unint64_t result;

  result = qword_256E04EC0;
  if (!qword_256E04EC0)
  {
    result = MEMORY[0x242667160](&unk_23F28C754, &type metadata for ActionFailure.Failure.NoMatchingToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04EC0);
  }
  return result;
}

unint64_t sub_23F1F9384()
{
  unint64_t result;

  result = qword_256E04EC8;
  if (!qword_256E04EC8)
  {
    result = MEMORY[0x242667160](&unk_23F28C704, &type metadata for ActionFailure.Failure.ValueDisambiguationRejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04EC8);
  }
  return result;
}

unint64_t sub_23F1F93C0()
{
  unint64_t result;

  result = qword_256E04ED0;
  if (!qword_256E04ED0)
  {
    result = MEMORY[0x242667160](&unk_23F28C6B4, &type metadata for ActionFailure.Failure.ActionNotAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04ED0);
  }
  return result;
}

unint64_t sub_23F1F93FC()
{
  unint64_t result;

  result = qword_256E04ED8;
  if (!qword_256E04ED8)
  {
    result = MEMORY[0x242667160](&unk_23F28C664, &type metadata for ActionFailure.Failure.EntityNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04ED8);
  }
  return result;
}

unint64_t sub_23F1F9438()
{
  unint64_t result;

  result = qword_256E04EE0;
  if (!qword_256E04EE0)
  {
    result = MEMORY[0x242667160](&unk_23F28C614, &type metadata for ActionFailure.Failure.FeatureCurrentlyRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04EE0);
  }
  return result;
}

unint64_t sub_23F1F9474()
{
  unint64_t result;

  result = qword_256E04EE8;
  if (!qword_256E04EE8)
  {
    result = MEMORY[0x242667160](&unk_23F28C5C4, &type metadata for ActionFailure.Failure.UnsupportedOnDeviceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04EE8);
  }
  return result;
}

unint64_t sub_23F1F94B0()
{
  unint64_t result;

  result = qword_256E04EF0;
  if (!qword_256E04EF0)
  {
    result = MEMORY[0x242667160](&unk_23F28C574, &type metadata for ActionFailure.Failure.PartialFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04EF0);
  }
  return result;
}

unint64_t sub_23F1F94EC()
{
  unint64_t result;

  result = qword_256E04EF8;
  if (!qword_256E04EF8)
  {
    result = MEMORY[0x242667160](&unk_23F28C524, &type metadata for ActionFailure.Failure.NetworkFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04EF8);
  }
  return result;
}

unint64_t sub_23F1F9528()
{
  unint64_t result;

  result = qword_256E04F00;
  if (!qword_256E04F00)
  {
    result = MEMORY[0x242667160](&unk_23F28C4D4, &type metadata for ActionFailure.Failure.BluetoothDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04F00);
  }
  return result;
}

unint64_t sub_23F1F9564()
{
  unint64_t result;

  result = qword_256E04F08;
  if (!qword_256E04F08)
  {
    result = MEMORY[0x242667160](&unk_23F28C484, &type metadata for ActionFailure.Failure.WifiDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04F08);
  }
  return result;
}

unint64_t sub_23F1F95A0()
{
  unint64_t result;

  result = qword_256E04F10;
  if (!qword_256E04F10)
  {
    result = MEMORY[0x242667160](&unk_23F28C434, &type metadata for ActionFailure.Failure.LocationDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04F10);
  }
  return result;
}

unint64_t sub_23F1F95DC()
{
  unint64_t result;

  result = qword_256E04F18;
  if (!qword_256E04F18)
  {
    result = MEMORY[0x242667160](&unk_23F28C3E4, &type metadata for ActionFailure.Failure.PreciseLocationDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04F18);
  }
  return result;
}

unint64_t sub_23F1F9618()
{
  unint64_t result;

  result = qword_256E04F20;
  if (!qword_256E04F20)
  {
    result = MEMORY[0x242667160](&unk_23F28C394, &type metadata for ActionFailure.Failure.PreflightCheckFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04F20);
  }
  return result;
}

unint64_t sub_23F1F9654()
{
  unint64_t result;

  result = qword_256E04FB8;
  if (!qword_256E04FB8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ActionFailure.DeveloperDefinedError, &type metadata for ActionFailure.DeveloperDefinedError);
    atomic_store(result, (unint64_t *)&qword_256E04FB8);
  }
  return result;
}

unint64_t sub_23F1F9690()
{
  unint64_t result;

  result = qword_256E04FC8;
  if (!qword_256E04FC8)
  {
    result = MEMORY[0x242667160](&unk_23F28C344, &type metadata for ActionFailure.DeveloperDefinedError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04FC8);
  }
  return result;
}

unint64_t sub_23F1F96CC()
{
  unint64_t result;

  result = qword_256E04FE0;
  if (!qword_256E04FE0)
  {
    result = MEMORY[0x242667160](&unk_23F28C2F4, &type metadata for ActionFailure.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E04FE0);
  }
  return result;
}

unint64_t sub_23F1F9708()
{
  unint64_t result;

  result = qword_256E04FE8;
  if (!qword_256E04FE8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ActionFailure.Failure, &type metadata for ActionFailure.Failure);
    atomic_store(result, (unint64_t *)&qword_256E04FE8);
  }
  return result;
}

unint64_t sub_23F1F9744()
{
  unint64_t result;

  result = qword_256E04FF8;
  if (!qword_256E04FF8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ActionFailure.Failure, &type metadata for ActionFailure.Failure);
    atomic_store(result, (unint64_t *)&qword_256E04FF8);
  }
  return result;
}

uint64_t type metadata accessor for ParameterValue(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06AD0);
}

unint64_t sub_23F1F9794()
{
  unint64_t result;

  result = qword_256E05008;
  if (!qword_256E05008)
  {
    result = MEMORY[0x242667160](&unk_23F28C2A4, &type metadata for ActionConfirmation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05008);
  }
  return result;
}

unint64_t sub_23F1F97D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256E05018;
  if (!qword_256E05018)
  {
    v1 = sub_23F125540(&qword_256E05010);
    sub_23F12E488((uint64_t)&unk_256E05020);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256E05018);
  }
  return result;
}

unint64_t sub_23F1F9854()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256E05030;
  if (!qword_256E05030)
  {
    v1 = sub_23F125540(&qword_256E05010);
    sub_23F12E488((uint64_t)&unk_256E05038);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256E05030);
  }
  return result;
}

unint64_t sub_23F1F98D8()
{
  unint64_t result;

  result = qword_256E05048;
  if (!qword_256E05048)
  {
    result = MEMORY[0x242667160](&unk_23F28C254, &type metadata for ParameterValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05048);
  }
  return result;
}

unint64_t sub_23F1F9914()
{
  unint64_t result;

  result = qword_256E05050;
  if (!qword_256E05050)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for PromptSelection, &type metadata for PromptSelection);
    atomic_store(result, (unint64_t *)&qword_256E05050);
  }
  return result;
}

unint64_t sub_23F1F9950()
{
  unint64_t result;

  result = qword_256E05060;
  if (!qword_256E05060)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for PromptSelection, &type metadata for PromptSelection);
    atomic_store(result, (unint64_t *)&qword_256E05060);
  }
  return result;
}

unint64_t sub_23F1F998C()
{
  unint64_t result;

  result = qword_256E05088;
  if (!qword_256E05088)
  {
    result = MEMORY[0x242667160](&unk_23F28C204, &type metadata for PromptSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05088);
  }
  return result;
}

unint64_t sub_23F1F99C8()
{
  unint64_t result;

  result = qword_256E05090;
  if (!qword_256E05090)
  {
    result = MEMORY[0x242667160](&unk_23F28C1B4, &type metadata for PromptSelection.DeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05090);
  }
  return result;
}

unint64_t sub_23F1F9A04()
{
  unint64_t result;

  result = qword_256E05098;
  if (!qword_256E05098)
  {
    result = MEMORY[0x242667160](&unk_23F28C164, &type metadata for PromptSelection.SelectedInDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05098);
  }
  return result;
}

unint64_t sub_23F1F9A40()
{
  unint64_t result;

  result = qword_256E050A0;
  if (!qword_256E050A0)
  {
    result = MEMORY[0x242667160](&unk_23F28C114, &type metadata for PromptSelection.ConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E050A0);
  }
  return result;
}

unint64_t sub_23F1F9A7C()
{
  unint64_t result;

  result = qword_256E050D0;
  if (!qword_256E050D0)
  {
    result = MEMORY[0x242667160](&unk_23F28C0C4, &type metadata for ParameterNeedsValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E050D0);
  }
  return result;
}

unint64_t sub_23F1F9AB8()
{
  unint64_t result;

  result = qword_256E050E8;
  if (!qword_256E050E8)
  {
    result = MEMORY[0x242667160](&unk_23F28C074, &type metadata for ParameterConfirmation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E050E8);
  }
  return result;
}

unint64_t sub_23F1F9AF4()
{
  unint64_t result;

  result = qword_256E05100;
  if (!qword_256E05100)
  {
    result = MEMORY[0x242667160](&unk_23F28C024, &type metadata for ParameterDisambiguation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05100);
  }
  return result;
}

unint64_t sub_23F1F9B30()
{
  unint64_t result;

  result = qword_256E05118;
  if (!qword_256E05118)
  {
    result = MEMORY[0x242667160](&unk_23F28BFD4, &type metadata for ValueDisambiguation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05118);
  }
  return result;
}

unint64_t sub_23F1F9B6C()
{
  unint64_t result;

  result = qword_256E05130;
  if (!qword_256E05130)
  {
    result = MEMORY[0x242667160](&unk_23F28BF84, &type metadata for ParameterNotAllowed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05130);
  }
  return result;
}

unint64_t sub_23F1F9BA8()
{
  unint64_t result;

  result = qword_256E05138;
  if (!qword_256E05138)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ParameterNotAllowed.Reason, &type metadata for ParameterNotAllowed.Reason);
    atomic_store(result, (unint64_t *)&qword_256E05138);
  }
  return result;
}

unint64_t sub_23F1F9BE4()
{
  unint64_t result;

  result = qword_256E05148;
  if (!qword_256E05148)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ParameterNotAllowed.Reason, &type metadata for ParameterNotAllowed.Reason);
    atomic_store(result, (unint64_t *)&qword_256E05148);
  }
  return result;
}

unint64_t sub_23F1F9C20()
{
  unint64_t result;

  result = qword_256E05158;
  if (!qword_256E05158)
  {
    result = MEMORY[0x242667160](&unk_23F28BF34, &type metadata for ParameterCandidatesNotFound.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05158);
  }
  return result;
}

unint64_t sub_23F1F9C5C()
{
  unint64_t result;

  result = qword_256E05170;
  if (!qword_256E05170)
  {
    result = MEMORY[0x242667160](&unk_23F28BEE4, &type metadata for ToolDisambiguation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05170);
  }
  return result;
}

unint64_t sub_23F1F9C98()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E05180;
  if (!qword_256E05180)
  {
    v1 = sub_23F125540(&qword_256E05178);
    sub_23F12E488((uint64_t)&unk_256E05188);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E05180);
  }
  return result;
}

unint64_t sub_23F1F9D14()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E05198;
  if (!qword_256E05198)
  {
    v1 = sub_23F125540(&qword_256E05178);
    sub_23F12E488((uint64_t)&unk_256E051A0);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E05198);
  }
  return result;
}

unint64_t sub_23F1F9D90()
{
  unint64_t result;

  result = qword_256E051B0;
  if (!qword_256E051B0)
  {
    result = MEMORY[0x242667160](&unk_23F28BE94, &type metadata for AppIntentsInvocationPreview.Parameter.Value.StringValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E051B0);
  }
  return result;
}

unint64_t sub_23F1F9DCC()
{
  unint64_t result;

  result = qword_256E051C8;
  if (!qword_256E051C8)
  {
    result = MEMORY[0x242667160](&unk_23F28BE44, &type metadata for AppIntentsInvocationPreview.Parameter.Value.ArrayValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E051C8);
  }
  return result;
}

unint64_t sub_23F1F9E08()
{
  unint64_t result;

  result = qword_256E051E0;
  if (!qword_256E051E0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AppIntentsInvocationPreview.Parameter.Value, &type metadata for AppIntentsInvocationPreview.Parameter.Value);
    atomic_store(result, (unint64_t *)&qword_256E051E0);
  }
  return result;
}

unint64_t sub_23F1F9E44()
{
  unint64_t result;

  result = qword_256E051F8;
  if (!qword_256E051F8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AppIntentsInvocationPreview.Parameter.Value, &type metadata for AppIntentsInvocationPreview.Parameter.Value);
    atomic_store(result, (unint64_t *)&qword_256E051F8);
  }
  return result;
}

unint64_t sub_23F1F9E80()
{
  unint64_t result;

  result = qword_256E05218;
  if (!qword_256E05218)
  {
    result = MEMORY[0x242667160](&unk_23F28BDF4, &type metadata for AppIntentsInvocationPreview.Parameter.Value.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05218);
  }
  return result;
}

unint64_t sub_23F1F9EBC()
{
  unint64_t result;

  result = qword_256E05220;
  if (!qword_256E05220)
  {
    result = MEMORY[0x242667160](&unk_23F28BDA4, &type metadata for AppIntentsInvocationPreview.Parameter.Value.ArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05220);
  }
  return result;
}

unint64_t sub_23F1F9EF8()
{
  unint64_t result;

  result = qword_256E05228;
  if (!qword_256E05228)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AppIntentsInvocationPreview.Parameter.Value.ArrayValue, &type metadata for AppIntentsInvocationPreview.Parameter.Value.ArrayValue);
    atomic_store(result, (unint64_t *)&qword_256E05228);
  }
  return result;
}

unint64_t sub_23F1F9F34()
{
  unint64_t result;

  result = qword_256E05230;
  if (!qword_256E05230)
  {
    result = MEMORY[0x242667160](&unk_23F28BD54, &type metadata for AppIntentsInvocationPreview.Parameter.Value.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05230);
  }
  return result;
}

unint64_t sub_23F1F9F70()
{
  unint64_t result;

  result = qword_256E05238;
  if (!qword_256E05238)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AppIntentsInvocationPreview.Parameter.Value.StringValue, &type metadata for AppIntentsInvocationPreview.Parameter.Value.StringValue);
    atomic_store(result, (unint64_t *)&qword_256E05238);
  }
  return result;
}

unint64_t sub_23F1F9FAC()
{
  unint64_t result;

  result = qword_256E05258;
  if (!qword_256E05258)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AppIntentsInvocationPreview.Parameter.Value.ArrayValue, &type metadata for AppIntentsInvocationPreview.Parameter.Value.ArrayValue);
    atomic_store(result, (unint64_t *)&qword_256E05258);
  }
  return result;
}

unint64_t sub_23F1F9FE8()
{
  unint64_t result;

  result = qword_256E05260;
  if (!qword_256E05260)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AppIntentsInvocationPreview.Parameter.Value.StringValue, &type metadata for AppIntentsInvocationPreview.Parameter.Value.StringValue);
    atomic_store(result, (unint64_t *)&qword_256E05260);
  }
  return result;
}

unint64_t sub_23F1FA024()
{
  unint64_t result;

  result = qword_256E05270;
  if (!qword_256E05270)
  {
    result = MEMORY[0x242667160](&unk_23F28BD04, &type metadata for AppIntentsInvocationPreview.Parameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05270);
  }
  return result;
}

unint64_t sub_23F1FA060()
{
  unint64_t result;

  result = qword_256E05288;
  if (!qword_256E05288)
  {
    result = MEMORY[0x242667160](&unk_23F28BCB4, &type metadata for AppIntentsInvocationPreview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05288);
  }
  return result;
}

unint64_t sub_23F1FA09C()
{
  unint64_t result;

  result = qword_256E052A0;
  if (!qword_256E052A0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AppIntentsInvocationPreview.Parameter, &type metadata for AppIntentsInvocationPreview.Parameter);
    atomic_store(result, (unint64_t *)&qword_256E052A0);
  }
  return result;
}

void sub_23F1FA0D8(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  void (*v3)(void);
  void (*v4)(void);
  uint64_t v5;

  if (!sub_23F131AF0(a1))
  {
    v4 = v3;
    sub_23F125540(v2);
    v4();
    v5 = sub_23F250174();
    atomic_store(MEMORY[0x242667160](v5), v1);
  }
  sub_23F131634();
}

unint64_t sub_23F1FA128()
{
  unint64_t result;

  result = qword_256E052B8;
  if (!qword_256E052B8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AppIntentsInvocationPreview.Parameter, &type metadata for AppIntentsInvocationPreview.Parameter);
    atomic_store(result, (unint64_t *)&qword_256E052B8);
  }
  return result;
}

uint64_t type metadata accessor for PlannerPromptData.OnScreenContextValue(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06DB8);
}

unint64_t sub_23F1FA178()
{
  unint64_t result;

  result = qword_256E05300;
  if (!qword_256E05300)
  {
    result = MEMORY[0x242667160](&unk_23F28BC64, &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05300);
  }
  return result;
}

unint64_t sub_23F1FA1B4()
{
  unint64_t result;

  result = qword_256E05308;
  if (!qword_256E05308)
  {
    result = MEMORY[0x242667160](&unk_23F28BC14, &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentUriLinkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05308);
  }
  return result;
}

unint64_t sub_23F1FA1F0()
{
  unint64_t result;

  result = qword_256E05310;
  if (!qword_256E05310)
  {
    result = MEMORY[0x242667160](&unk_23F28BBC4, &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentPhoneNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05310);
  }
  return result;
}

unint64_t sub_23F1FA22C()
{
  unint64_t result;

  result = qword_256E05318;
  if (!qword_256E05318)
  {
    result = MEMORY[0x242667160](&unk_23F28BB74, &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentEmailAddressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05318);
  }
  return result;
}

unint64_t sub_23F1FA268()
{
  unint64_t result;

  result = qword_256E05320;
  if (!qword_256E05320)
  {
    result = MEMORY[0x242667160](&unk_23F28BB24, &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentAppEntityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05320);
  }
  return result;
}

unint64_t sub_23F1FA2A4()
{
  unint64_t result;

  result = qword_256E05328;
  if (!qword_256E05328)
  {
    result = MEMORY[0x242667160](&unk_23F28BAD4, &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentPostalAddressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05328);
  }
  return result;
}

unint64_t sub_23F1FA2E0()
{
  unint64_t result;

  result = qword_256E05330;
  if (!qword_256E05330)
  {
    result = MEMORY[0x242667160](&unk_23F28BA84, &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenPersonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05330);
  }
  return result;
}

unint64_t sub_23F1FA31C()
{
  unint64_t result;

  result = qword_256E05338;
  if (!qword_256E05338)
  {
    result = MEMORY[0x242667160](&unk_23F28BA34, &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.InFocusAppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05338);
  }
  return result;
}

unint64_t sub_23F1FA358()
{
  unint64_t result;

  result = qword_256E05388;
  if (!qword_256E05388)
  {
    result = MEMORY[0x242667160](&unk_23F28B9E4, &type metadata for PlannerPromptData.OnScreenContextValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05388);
  }
  return result;
}

unint64_t sub_23F1FA394()
{
  unint64_t result;

  result = qword_256E05390;
  if (!qword_256E05390)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for PlannerPromptData.OnScreenContextValue.ContextType, &type metadata for PlannerPromptData.OnScreenContextValue.ContextType);
    atomic_store(result, (unint64_t *)&qword_256E05390);
  }
  return result;
}

unint64_t sub_23F1FA3D0()
{
  unint64_t result;

  result = qword_256E053A0;
  if (!qword_256E053A0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for PlannerPromptData.OnScreenContextValue.ContextType, &type metadata for PlannerPromptData.OnScreenContextValue.ContextType);
    atomic_store(result, (unint64_t *)&qword_256E053A0);
  }
  return result;
}

uint64_t type metadata accessor for PlannerPromptData.Tool.Definition(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06EF0);
}

unint64_t sub_23F1FA420()
{
  unint64_t result;

  result = qword_256E053B8;
  if (!qword_256E053B8)
  {
    result = MEMORY[0x242667160](&unk_23F28B994, &type metadata for PlannerPromptData.Tool.Definition.ToolDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E053B8);
  }
  return result;
}

uint64_t type metadata accessor for PlannerPromptData.Tool.Definition.ToolDefinition(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06F80);
}

unint64_t sub_23F1FA470()
{
  unint64_t result;

  result = qword_256E053D0;
  if (!qword_256E053D0)
  {
    result = MEMORY[0x242667160](&unk_23F28B944, &type metadata for PlannerPromptData.Tool.Definition.ClientAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E053D0);
  }
  return result;
}

uint64_t type metadata accessor for PlannerPromptData.Tool.Definition.ClientAction(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E07010);
}

unint64_t sub_23F1FA4C0()
{
  unint64_t result;

  result = qword_256E053F0;
  if (!qword_256E053F0)
  {
    result = MEMORY[0x242667160](&unk_23F28B8F4, &type metadata for PlannerPromptData.Tool.Definition.AssistantSchema.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E053F0);
  }
  return result;
}

uint64_t type metadata accessor for PlannerPromptData.Tool.Definition.AssistantSchema(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E070A0);
}

uint64_t type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E07130);
}

unint64_t sub_23F1FA524()
{
  unint64_t result;

  result = qword_256E05418;
  if (!qword_256E05418)
  {
    result = MEMORY[0x242667160](&unk_23F28B8A4, &type metadata for PlannerPromptData.Tool.Definition.UIControlTool.Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05418);
  }
  return result;
}

unint64_t sub_23F1FA560()
{
  unint64_t result;

  result = qword_256E05430;
  if (!qword_256E05430)
  {
    result = MEMORY[0x242667160](&unk_23F28B854, &type metadata for PlannerPromptData.Tool.Definition.UIControlTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05430);
  }
  return result;
}

unint64_t sub_23F1FA59C()
{
  unint64_t result;

  result = qword_256E05438;
  if (!qword_256E05438)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for PlannerPromptData.Tool.Definition.UIControlTool.Command, &type metadata for PlannerPromptData.Tool.Definition.UIControlTool.Command);
    atomic_store(result, (unint64_t *)&qword_256E05438);
  }
  return result;
}

unint64_t sub_23F1FA5D8()
{
  unint64_t result;

  result = qword_256E05448;
  if (!qword_256E05448)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for PlannerPromptData.Tool.Definition.UIControlTool.Command, &type metadata for PlannerPromptData.Tool.Definition.UIControlTool.Command);
    atomic_store(result, (unint64_t *)&qword_256E05448);
  }
  return result;
}

unint64_t sub_23F1FA614()
{
  unint64_t result;

  result = qword_256E05480;
  if (!qword_256E05480)
  {
    result = MEMORY[0x242667160](&unk_23F28B804, &type metadata for PlannerPromptData.Tool.Definition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05480);
  }
  return result;
}

unint64_t sub_23F1FA650()
{
  unint64_t result;

  result = qword_256E05488;
  if (!qword_256E05488)
  {
    result = MEMORY[0x242667160](&unk_23F28B7B4, &type metadata for PlannerPromptData.Tool.Definition.UiControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05488);
  }
  return result;
}

unint64_t sub_23F1FA68C()
{
  unint64_t result;

  result = qword_256E05498;
  if (!qword_256E05498)
  {
    result = MEMORY[0x242667160](&unk_23F28B764, &type metadata for PlannerPromptData.Tool.Definition.AssistantSchemaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05498);
  }
  return result;
}

unint64_t sub_23F1FA6C8()
{
  unint64_t result;

  result = qword_256E054A8;
  if (!qword_256E054A8)
  {
    result = MEMORY[0x242667160](&unk_23F28B714, &type metadata for PlannerPromptData.Tool.Definition.ClientActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E054A8);
  }
  return result;
}

unint64_t sub_23F1FA704()
{
  unint64_t result;

  result = qword_256E054B8;
  if (!qword_256E054B8)
  {
    result = MEMORY[0x242667160](&unk_23F28B6C4, &type metadata for PlannerPromptData.Tool.Definition.ToolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E054B8);
  }
  return result;
}

unint64_t sub_23F1FA740()
{
  unint64_t result;

  result = qword_256E05518;
  if (!qword_256E05518)
  {
    result = MEMORY[0x242667160](&unk_23F28B674, &type metadata for PlannerPromptData.Tool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05518);
  }
  return result;
}

uint64_t type metadata accessor for PlannerPromptData.Tool(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E06E48);
}

unint64_t sub_23F1FA790()
{
  unint64_t result;

  result = qword_256E05540;
  if (!qword_256E05540)
  {
    result = MEMORY[0x242667160](&unk_23F28B624, &type metadata for PlannerPromptData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E05540);
  }
  return result;
}

unint64_t sub_23F1FA7CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E05550;
  if (!qword_256E05550)
  {
    v1 = sub_23F125540(&qword_256E05548);
    sub_23F12E488((uint64_t)&unk_256E05558);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E05550);
  }
  return result;
}

unint64_t sub_23F1FA848()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E05568;
  if (!qword_256E05568)
  {
    v1 = sub_23F125540(&qword_256E05560);
    sub_23F12E488((uint64_t)&unk_256E05570);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E05568);
  }
  return result;
}

unint64_t sub_23F1FA8C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E05580;
  if (!qword_256E05580)
  {
    v1 = sub_23F125540(&qword_256E05548);
    sub_23F12E488((uint64_t)&unk_256E05588);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E05580);
  }
  return result;
}

unint64_t sub_23F1FA940()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E05590;
  if (!qword_256E05590)
  {
    v1 = sub_23F125540(&qword_256E05560);
    sub_23F12E488((uint64_t)&unk_256E05598);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E05590);
  }
  return result;
}

unint64_t sub_23F1FA9BC()
{
  unint64_t result;

  result = qword_256E055A8;
  if (!qword_256E055A8)
  {
    result = MEMORY[0x242667160](&unk_23F28B5D4, &type metadata for ActionResolutionUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E055A8);
  }
  return result;
}

unint64_t sub_23F1FA9FC()
{
  unint64_t result;

  result = qword_256E055B8;
  if (!qword_256E055B8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for MessagePayload.ClientUndoRedoRequest.UndoOperation, &type metadata for MessagePayload.ClientUndoRedoRequest.UndoOperation);
    atomic_store(result, (unint64_t *)&qword_256E055B8);
  }
  return result;
}

unint64_t sub_23F1FAA3C()
{
  unint64_t result;

  result = qword_256E055C0;
  if (!qword_256E055C0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemPromptResolution.InputModality, &type metadata for SystemPromptResolution.InputModality);
    atomic_store(result, (unint64_t *)&qword_256E055C0);
  }
  return result;
}

unint64_t sub_23F1FAA7C()
{
  unint64_t result;

  result = qword_256E055C8;
  if (!qword_256E055C8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for StatementID, &type metadata for StatementID);
    atomic_store(result, (unint64_t *)&qword_256E055C8);
  }
  return result;
}

uint64_t sub_23F1FAAB8()
{
  return MEMORY[0x24BEE4550];
}

unint64_t sub_23F1FAAC8()
{
  unint64_t result;

  result = qword_256E055D0;
  if (!qword_256E055D0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SystemRequirement.AuthenticationRequest.AuthenticationLevel, &type metadata for SystemRequirement.AuthenticationRequest.AuthenticationLevel);
    atomic_store(result, (unint64_t *)&qword_256E055D0);
  }
  return result;
}

unint64_t sub_23F1FAB08()
{
  unint64_t result;

  result = qword_256E055D8;
  if (!qword_256E055D8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AppRequirement, &type metadata for AppRequirement);
    atomic_store(result, (unint64_t *)&qword_256E055D8);
  }
  return result;
}

unint64_t sub_23F1FAB48()
{
  unint64_t result;

  result = qword_256E055E0;
  if (!qword_256E055E0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for PermissionRequirement, &type metadata for PermissionRequirement);
    atomic_store(result, (unint64_t *)&qword_256E055E0);
  }
  return result;
}

unint64_t sub_23F1FAB88()
{
  unint64_t result;

  result = qword_256E055E8;
  if (!qword_256E055E8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ParameterNotAllowed.Reason, &type metadata for ParameterNotAllowed.Reason);
    atomic_store(result, (unint64_t *)&qword_256E055E8);
  }
  return result;
}

unint64_t sub_23F1FABC8()
{
  unint64_t result;

  result = qword_256E055F0;
  if (!qword_256E055F0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for PlannerPromptData.OnScreenContextValue.ContextType, &type metadata for PlannerPromptData.OnScreenContextValue.ContextType);
    atomic_store(result, (unint64_t *)&qword_256E055F0);
  }
  return result;
}

void sub_23F1FAC04()
{
  sub_23F12E488((uint64_t)&unk_256E055F8);
}

void sub_23F1FAC30()
{
  sub_23F12E488((uint64_t)&unk_256E05600);
}

void sub_23F1FAC5C()
{
  sub_23F12E488((uint64_t)&unk_256E05608);
}

unint64_t sub_23F1FAC8C()
{
  unint64_t result;

  result = qword_256E05610;
  if (!qword_256E05610)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for PlannerPromptData.Tool.Definition.UIControlTool.Command, &type metadata for PlannerPromptData.Tool.Definition.UIControlTool.Command);
    atomic_store(result, (unint64_t *)&qword_256E05610);
  }
  return result;
}

void sub_23F1FACC8()
{
  sub_23F12E488((uint64_t)&unk_256E05618);
}

void sub_23F1FACF4()
{
  sub_23F12E488((uint64_t)&unk_256E05620);
}

void sub_23F1FAD20()
{
  MessagePayload.ClientActionResult.outcome.getter();
  sub_23F126078();
}

void sub_23F1FAD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F1C2FBC(a1, a2, a3, a4, (void (*)(uint64_t))MessagePayload.ClientActionResult.outcome.setter);
}

void sub_23F1FAD58()
{
  MessagePayload.ExternalAgentOutcome.outcome.getter();
  sub_23F126078();
}

void sub_23F1FAD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F1C2FBC(a1, a2, a3, a4, (void (*)(uint64_t))MessagePayload.ExternalAgentOutcome.outcome.setter);
}

void sub_23F1FAD90()
{
  SystemPromptResolution.actionResponseEventId.getter();
  sub_23F126078();
}

void sub_23F1FADAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F1D77F4(a1, a2, a3, a4, (void (*)(uint64_t))SystemPromptResolution.actionResponseEventId.setter);
}

void sub_23F1FADD0()
{
  sub_23F251648();
  sub_23F126078();
}

void sub_23F1FADE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F1D77F4(a1, a2, a3, a4, (void (*)(uint64_t))SystemPromptResolution.stepId.setter);
}

void sub_23F1FAE04()
{
  sub_23F251648();
  sub_23F126078();
}

void sub_23F1FAE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F1D77F4(a1, a2, a3, a4, (void (*)(uint64_t))SystemPromptResolution.eventId.setter);
}

void sub_23F1FAE38()
{
  sub_23F251648();
  sub_23F126078();
}

void sub_23F1FAE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F1D77F4(a1, a2, a3, a4, (void (*)(uint64_t))ActionResponse.stepId.setter);
}

void sub_23F1FAE6C()
{
  sub_23F251648();
  sub_23F126078();
}

void sub_23F1FAE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F1D77F4(a1, a2, a3, a4, (void (*)(uint64_t))ActionResponse.eventId.setter);
}

void sub_23F1FAEA0(_BYTE *a1@<X8>)
{
  *a1 = ActionSuccess.appLaunched.getter() & 1;
  sub_23F126078();
}

void sub_23F1FAEC8(unsigned __int8 *a1)
{
  ActionSuccess.appLaunched.setter(*a1);
  sub_23F126078();
}

uint64_t dispatch thunk of SessionMessageProtocol.sessionId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SessionMessageProtocol.clientRequestId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SessionMessageProtocol.payload.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t initializeWithCopy for AnySessionMessage(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for AnySessionMessage(uint64_t *a1, uint64_t *a2)
{
  sub_23F142F50(a1, a2);
  return a1;
}

__n128 initializeWithTake for EnumDefinition(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AnySessionMessage(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s16IntelligenceFlow17AnySessionMessageVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnySessionMessage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnySessionMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AnySessionMessage()
{
  sub_23F131844();
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionClientMessage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  id v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void *v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  unsigned __int8 v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  int *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  unint64_t v172;
  int *v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  unsigned __int8 v188;
  int *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  unsigned int v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  int *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  unsigned __int8 v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  _QWORD *v225;
  _QWORD *v226;
  uint64_t v227;
  uint64_t *result;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = *(int *)(a3 + 24);
    v11 = (uint64_t *)((char *)a1 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (uint64_t *)((char *)a1 + v10);
    v15 = (id *)((char *)a2 + v10);
    v16 = type metadata accessor for MessagePayload(0);
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v17 = type metadata accessor for MessagePayload.RequestContent(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 3:
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v7))
            {
              v160 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
            }
            else
            {
              v8(v14, (uint64_t *)v15, v7);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v7);
            }
            v173 = (int *)type metadata accessor for SystemPromptResolution(0);
            v8((uint64_t *)((char *)v14 + v173[5]), (uint64_t *)((char *)v15 + v173[5]), v7);
            v174 = v173[6];
            v175 = (char *)v14 + v174;
            v176 = (char *)v15 + v174;
            v177 = type metadata accessor for SystemPromptResolution.UserAction(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v178 = sub_23F268078();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v175, v176, v178);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
            }
            v179 = v173[7];
            v180 = (char *)v14 + v179;
            v181 = (char *)v15 + v179;
            *(_DWORD *)v180 = *(_DWORD *)v181;
            v182 = *((_QWORD *)v181 + 2);
            *((_QWORD *)v180 + 1) = *((_QWORD *)v181 + 1);
            *((_QWORD *)v180 + 2) = v182;
            v183 = v173[8];
            v184 = (char *)v14 + v183;
            v185 = (char *)v15 + v183;
            v186 = *(_QWORD *)v185;
            v187 = *((_QWORD *)v185 + 1);
            v188 = v185[16];
            swift_bridgeObjectRetain();
            sub_23F135C7C(v186, v187, v188);
            *(_QWORD *)v184 = v186;
            *((_QWORD *)v184 + 1) = v187;
            v184[16] = v188;
            break;
          case 2:
            *v14 = (uint64_t)*v15;
            swift_bridgeObjectRetain();
            break;
          case 1:
            v19 = (uint64_t)v15[1];
            *v14 = (uint64_t)*v15;
            v14[1] = v19;
            swift_bridgeObjectRetain();
            break;
          default:
            memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
            goto LABEL_88;
        }
        swift_storeEnumTagMultiPayload();
LABEL_88:
        v189 = (int *)type metadata accessor for MessagePayload.Request(0);
        *(uint64_t *)((char *)v14 + v189[5]) = *(uint64_t *)((char *)v15 + v189[5]);
        *((_BYTE *)v14 + v189[6]) = *((_BYTE *)v15 + v189[6]);
        v190 = v189[7];
        v191 = (char *)v14 + v190;
        v192 = (char *)v15 + v190;
        v193 = *((unsigned __int8 *)v15 + v190 + 16);
        swift_bridgeObjectRetain();
        if (v193 <= 0xFD)
        {
          v194 = *(_QWORD *)v192;
          v195 = *((_QWORD *)v192 + 1);
          sub_23F135C9C(v194, v195, v193);
          *(_QWORD *)v191 = v194;
          *((_QWORD *)v191 + 1) = v195;
          v191[16] = v193;
        }
        else
        {
          *(_OWORD *)v191 = *(_OWORD *)v192;
          v191[16] = v192[16];
        }
        v196 = v189[8];
        v197 = (char *)v14 + v196;
        v198 = (char *)v15 + v196;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15 + v196, 1, v7))
        {
          v199 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v197, v198, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
        }
        else
        {
          v8((uint64_t *)v197, (uint64_t *)v198, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v197, 0, 1, v7);
        }
        v200 = v189[9];
        v136 = (char *)v14 + v200;
        v137 = (char *)v15 + v200;
        v138 = *((_QWORD *)v137 + 1);
        if (v138)
          goto LABEL_105;
        *(_OWORD *)v136 = *(_OWORD *)v137;
        *((_QWORD *)v136 + 2) = *((_QWORD *)v137 + 2);
        goto LABEL_112;
      case 4u:
        v21 = (uint64_t)v15[1];
        *v14 = (uint64_t)*v15;
        v14[1] = v21;
        v22 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
        v23 = (char *)v14 + v22;
        v24 = (char *)v15 + v22;
        v25 = sub_23F268078();
        v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v26(v23, v24, v25);
        goto LABEL_112;
      case 5u:
        v27 = *v15;
        v28 = *((_BYTE *)v15 + 8);
        sub_23F131158(*v15);
        *v14 = (uint64_t)v27;
        *((_BYTE *)v14 + 8) = v28;
        v14[2] = (uint64_t)v15[2];
        swift_bridgeObjectRetain();
        goto LABEL_112;
      case 6u:
      case 9u:
      case 0x20u:
      case 0x21u:
      case 0x28u:
        v97 = (uint64_t)v15[1];
        *v14 = (uint64_t)*v15;
        v14[1] = v97;
        v14[2] = (uint64_t)v15[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_112;
      case 7u:
        v29 = (uint64_t)v15[1];
        *v14 = (uint64_t)*v15;
        v14[1] = v29;
        v14[2] = (uint64_t)v15[2];
        *((_BYTE *)v14 + 24) = *((_BYTE *)v15 + 24);
        v30 = (uint64_t)v15[4];
        v31 = (uint64_t)v15[5];
        v14[4] = v30;
        v14[5] = v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_112;
      case 8u:
        *v14 = (uint64_t)*v15;
        *((_BYTE *)v14 + 8) = *((_BYTE *)v15 + 8);
        v32 = (uint64_t)v15[2];
        v33 = (uint64_t)v15[3];
        v14[2] = v32;
        v14[3] = v33;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_112;
      case 0xAu:
      case 0xBu:
      case 0x13u:
      case 0x18u:
      case 0x19u:
      case 0x1Bu:
        v81 = (uint64_t)v15[1];
        *v14 = (uint64_t)*v15;
        v14[1] = v81;
        swift_bridgeObjectRetain();
        goto LABEL_112;
      case 0xCu:
        *v14 = (uint64_t)*v15;
        swift_bridgeObjectRetain();
        goto LABEL_112;
      case 0xDu:
        v8(v14, (uint64_t *)v15, v7);
        v34 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
        v8((uint64_t *)((char *)v14 + v34[5]), (uint64_t *)((char *)v15 + v34[5]), v7);
        v35 = v34[6];
        v36 = (uint64_t *)((char *)v14 + v35);
        v37 = (id *)((char *)v15 + v35);
        v38 = v37[1];
        *v36 = *v37;
        v36[1] = v38;
        v39 = v34[7];
        v40 = (uint64_t *)((char *)v14 + v39);
        v41 = (id *)((char *)v15 + v39);
        v42 = v41[1];
        *v40 = *v41;
        v40[1] = v42;
        v43 = v34[8];
        v44 = (uint64_t *)((char *)v14 + v43);
        v45 = (id *)((char *)v15 + v43);
        v46 = v45[1];
        *v44 = *v45;
        v44[1] = v46;
        *(uint64_t *)((char *)v14 + v34[9]) = *(uint64_t *)((char *)v15 + v34[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_112;
      case 0xEu:
        v8(v14, (uint64_t *)v15, v7);
        v47 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
        v48 = (char *)v14 + v47;
        v49 = (char *)v15 + v47;
        type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v50 = *(void **)v49;
          v51 = v49[8];
          sub_23F131158(v50);
          *(_QWORD *)v48 = v50;
          v48[8] = v51;
        }
        else
        {
          v118 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v48, v49, v118);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_112;
      case 0xFu:
        *(_DWORD *)v14 = *(_DWORD *)v15;
        v52 = (uint64_t)v15[2];
        v14[1] = (uint64_t)v15[1];
        v14[2] = v52;
        v53 = (uint64_t)v15[4];
        v14[3] = (uint64_t)v15[3];
        v14[4] = v53;
        v54 = (uint64_t)v15[6];
        v14[5] = (uint64_t)v15[5];
        v14[6] = v54;
        v55 = (uint64_t)v15[8];
        v14[7] = (uint64_t)v15[7];
        v14[8] = v55;
        *((_BYTE *)v14 + 72) = *((_BYTE *)v15 + 72);
        v56 = (uint64_t)v15[11];
        v14[10] = (uint64_t)v15[10];
        v14[11] = v56;
        v14[12] = (uint64_t)v15[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_112;
      case 0x10u:
        v8(v14, (uint64_t *)v15, v7);
        v57 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
        v58 = v57[5];
        v59 = (uint64_t *)((char *)v14 + v58);
        v60 = (uint64_t *)((char *)v15 + v58);
        v62 = *v60;
        v61 = v60[1];
        *v59 = v62;
        v59[1] = v61;
        *(uint64_t *)((char *)v14 + v57[6]) = *(uint64_t *)((char *)v15 + v57[6]);
        *(uint64_t *)((char *)v14 + v57[7]) = *(uint64_t *)((char *)v15 + v57[7]);
        v63 = v57[8];
        v64 = (uint64_t *)((char *)v14 + v63);
        v65 = (id *)((char *)v15 + v63);
        v66 = v65[1];
        *v64 = *v65;
        v64[1] = v66;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_112;
      case 0x11u:
        v8(v14, (uint64_t *)v15, v7);
        type metadata accessor for MessagePayload.ClientActionResult(0);
        type metadata accessor for StatementOutcome(0);
        v67 = (char *)&loc_23F1FB5B0 + 4 * word_23F279016[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x12u:
        v68 = (uint64_t)*v15;
        v69 = (unint64_t)v15[1];
        sub_23F131170((uint64_t)*v15, v69);
        *v14 = v68;
        v14[1] = v69;
        v70 = (uint64_t)v15[2];
        v71 = (unint64_t)v15[3];
        sub_23F131170(v70, v71);
        v14[2] = v70;
        v14[3] = v71;
        v72 = (uint64_t)v15[5];
        v14[4] = (uint64_t)v15[4];
        v14[5] = v72;
        swift_bridgeObjectRetain();
        goto LABEL_112;
      case 0x14u:
        v8(v14, (uint64_t *)v15, v7);
        v73 = *(int *)(type metadata accessor for SystemPrompt(0) + 20);
        v74 = (uint64_t *)((char *)v14 + v73);
        v75 = (id *)((char *)v15 + v73);
        v76 = v75[1];
        *v74 = *v75;
        v74[1] = v76;
        type metadata accessor for SystemPrompt.Prompt(0);
        swift_bridgeObjectRetain();
        v77 = (char *)&loc_23F1FB704 + 4 * word_23F27900E[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x15u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v7))
        {
          v78 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          v8(v14, (uint64_t *)v15, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v7);
        }
        v119 = (int *)type metadata accessor for SystemPromptResolution(0);
        v8((uint64_t *)((char *)v14 + v119[5]), (uint64_t *)((char *)v15 + v119[5]), v7);
        v120 = v119[6];
        v121 = (char *)v14 + v120;
        v122 = (char *)v15 + v120;
        v123 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v124 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(v121, v122, v124);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
        }
        v125 = v119[7];
        v126 = (char *)v14 + v125;
        v127 = (char *)v15 + v125;
        *(_DWORD *)v126 = *(_DWORD *)v127;
        v128 = *((_QWORD *)v127 + 2);
        *((_QWORD *)v126 + 1) = *((_QWORD *)v127 + 1);
        *((_QWORD *)v126 + 2) = v128;
        v129 = v119[8];
        v130 = (char *)v14 + v129;
        v131 = (char *)v15 + v129;
        v132 = *(_QWORD *)v131;
        v133 = *((_QWORD *)v131 + 1);
        v134 = v131[16];
        swift_bridgeObjectRetain();
        sub_23F135C7C(v132, v133, v134);
        *(_QWORD *)v130 = v132;
        *((_QWORD *)v130 + 1) = v133;
        v130[16] = v134;
        goto LABEL_112;
      case 0x16u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v7))
        {
          v79 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        }
        else
        {
          v8(v14, (uint64_t *)v15, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v7);
        }
        v139 = type metadata accessor for ActionResponse(0);
        v140 = *(int *)(v139 + 20);
        v141 = (uint64_t *)((char *)v14 + v140);
        v142 = (id *)((char *)v15 + v140);
        v143 = v142[1];
        *v141 = *v142;
        v141[1] = v143;
        v144 = *(int *)(v139 + 24);
        v145 = (uint64_t *)((char *)v14 + v144);
        v146 = (id *)((char *)v15 + v144);
        v147 = v146[1];
        *v145 = *v146;
        v145[1] = v147;
        type metadata accessor for ActionOutcome(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v148 = (char *)&loc_23F1FBEC4 + 4 * word_23F278FF8[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x17u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v7))
        {
          v80 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          v8(v14, (uint64_t *)v15, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v7);
        }
        v149 = type metadata accessor for SystemResponse(0);
        v150 = *(int *)(v149 + 20);
        v151 = (char *)v14 + v150;
        v152 = (char *)v15 + v150;
        v153 = *((_QWORD *)v152 + 2);
        if (v153 == 1)
        {
          *(_OWORD *)v151 = *(_OWORD *)v152;
          *((_QWORD *)v151 + 2) = *((_QWORD *)v152 + 2);
        }
        else
        {
          *(_DWORD *)v151 = *(_DWORD *)v152;
          *((_QWORD *)v151 + 1) = *((_QWORD *)v152 + 1);
          *((_QWORD *)v151 + 2) = v153;
          swift_bridgeObjectRetain();
        }
        v154 = *(int *)(v149 + 24);
        v155 = (uint64_t *)((char *)v14 + v154);
        v156 = (id *)((char *)v15 + v154);
        v157 = v156[1];
        *v155 = *v156;
        v155[1] = v157;
        type metadata accessor for StatementOutcome(0);
        swift_bridgeObjectRetain();
        v158 = (char *)&loc_23F1FC018 + 4 * word_23F278FE2[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x1Cu:
        v82 = (uint64_t)v15[1];
        *v14 = (uint64_t)*v15;
        v14[1] = v82;
        v83 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
        v84 = *(int *)(v83 + 20);
        v85 = (char *)v14 + v84;
        v86 = (char *)v15 + v84;
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v86, 1, v7))
        {
          v87 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        }
        else
        {
          v8((uint64_t *)v85, (uint64_t *)v86, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v85, 0, 1, v7);
        }
        v159 = *(int *)(v83 + 24);
        v136 = (char *)v14 + v159;
        v137 = (char *)v15 + v159;
        v138 = *((_QWORD *)v137 + 1);
        if (v138)
          goto LABEL_105;
        *(_OWORD *)v136 = *(_OWORD *)v137;
        *((_QWORD *)v136 + 2) = *((_QWORD *)v137 + 2);
        goto LABEL_112;
      case 0x1Du:
        *v14 = (uint64_t)*v15;
        v88 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
        v89 = *(int *)(v88 + 20);
        v90 = (char *)v14 + v89;
        v91 = (char *)v15 + v89;
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v91, 1, v7))
        {
          v92 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        }
        else
        {
          v8((uint64_t *)v90, (uint64_t *)v91, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v90, 0, 1, v7);
        }
        v135 = *(int *)(v88 + 24);
        v136 = (char *)v14 + v135;
        v137 = (char *)v15 + v135;
        v138 = *((_QWORD *)v137 + 1);
        if (v138)
          goto LABEL_105;
        *(_OWORD *)v136 = *(_OWORD *)v137;
        *((_QWORD *)v136 + 2) = *((_QWORD *)v137 + 2);
        goto LABEL_112;
      case 0x1Eu:
        v93 = type metadata accessor for MessagePayload.RequestContent(0);
        v94 = swift_getEnumCaseMultiPayload();
        switch(v94)
        {
          case 3:
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v7))
            {
              v161 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
            }
            else
            {
              v8(v14, (uint64_t *)v15, v7);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v7);
            }
            v201 = (int *)type metadata accessor for SystemPromptResolution(0);
            v8((uint64_t *)((char *)v14 + v201[5]), (uint64_t *)((char *)v15 + v201[5]), v7);
            v202 = v201[6];
            v203 = (char *)v14 + v202;
            v204 = (char *)v15 + v202;
            v205 = type metadata accessor for SystemPromptResolution.UserAction(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v206 = sub_23F268078();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 16))(v203, v204, v206);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
            }
            v207 = v201[7];
            v208 = (char *)v14 + v207;
            v209 = (char *)v15 + v207;
            *(_DWORD *)v208 = *(_DWORD *)v209;
            v210 = *((_QWORD *)v209 + 2);
            *((_QWORD *)v208 + 1) = *((_QWORD *)v209 + 1);
            *((_QWORD *)v208 + 2) = v210;
            v211 = v201[8];
            v212 = (char *)v14 + v211;
            v213 = (char *)v15 + v211;
            v214 = *(_QWORD *)v213;
            v215 = *((_QWORD *)v213 + 1);
            v216 = v213[16];
            swift_bridgeObjectRetain();
            sub_23F135C7C(v214, v215, v216);
            *(_QWORD *)v212 = v214;
            *((_QWORD *)v212 + 1) = v215;
            v212[16] = v216;
            swift_storeEnumTagMultiPayload();
            break;
          case 2:
            *v14 = (uint64_t)*v15;
            swift_bridgeObjectRetain();
            goto LABEL_74;
          case 1:
            v95 = (uint64_t)v15[1];
            *v14 = (uint64_t)*v15;
            v14[1] = v95;
            swift_bridgeObjectRetain();
LABEL_74:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
            break;
        }
        v217 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
        v218 = *(int *)(v217 + 20);
        v219 = (char *)v14 + v218;
        v220 = (char *)v15 + v218;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15 + v218, 1, v7))
        {
          v221 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v219, v220, *(_QWORD *)(*(_QWORD *)(v221 - 8) + 64));
        }
        else
        {
          v8((uint64_t *)v219, (uint64_t *)v220, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v219, 0, 1, v7);
        }
        v222 = *(int *)(v217 + 24);
        v136 = (char *)v14 + v222;
        v137 = (char *)v15 + v222;
        v138 = *((_QWORD *)v137 + 1);
        if (v138)
        {
LABEL_105:
          *(_QWORD *)v136 = *(_QWORD *)v137;
          *((_QWORD *)v136 + 1) = v138;
          *((_QWORD *)v136 + 2) = *((_QWORD *)v137 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v136 = *(_OWORD *)v137;
          *((_QWORD *)v136 + 2) = *((_QWORD *)v137 + 2);
        }
LABEL_112:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Fu:
        type metadata accessor for StatementOutcome(0);
        v96 = (char *)&loc_23F1FB978 + 4 * word_23F278FCC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x22u:
        v8(v14, (uint64_t *)v15, v7);
        v98 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
        *((_BYTE *)v14 + *(int *)(v98 + 20)) = *((_BYTE *)v15 + *(int *)(v98 + 20));
        v99 = *(int *)(v98 + 24);
        v100 = (char *)v14 + v99;
        v101 = (char *)v15 + v99;
        *(_DWORD *)v100 = *(_DWORD *)v101;
        v102 = *((_QWORD *)v101 + 2);
        *((_QWORD *)v100 + 1) = *((_QWORD *)v101 + 1);
        *((_QWORD *)v100 + 2) = v102;
        swift_bridgeObjectRetain();
        goto LABEL_112;
      case 0x23u:
        v8(v14, (uint64_t *)v15, v7);
        v103 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
        v104 = (uint64_t *)((char *)v14 + v103);
        v105 = (id *)((char *)v15 + v103);
        v106 = v105[1];
        *v104 = *v105;
        v104[1] = v106;
        v104[2] = v105[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_112;
      case 0x24u:
        v107 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
          case 5u:
          case 7u:
          case 8u:
            v8(v14, (uint64_t *)v15, v7);
            goto LABEL_108;
          case 2u:
            v8(v14, (uint64_t *)v15, v7);
            v162 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
            *(uint64_t *)((char *)v14 + v162[5]) = *(uint64_t *)((char *)v15 + v162[5]);
            *(uint64_t *)((char *)v14 + v162[6]) = *(uint64_t *)((char *)v15 + v162[6]);
            v163 = v162[7];
            v164 = (char *)v14 + v163;
            v165 = (char *)v15 + v163;
            swift_bridgeObjectRetain();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v165, 1, v7))
            {
              v166 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
            }
            else
            {
              v8((uint64_t *)v164, (uint64_t *)v165, v7);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v164, 0, 1, v7);
            }
            v224 = v162[8];
            v225 = (uint64_t *)((char *)v14 + v224);
            v226 = (id *)((char *)v15 + v224);
            v227 = v226[1];
            *v225 = *v226;
            v225[1] = v227;
            *(uint64_t *)((char *)v14 + v162[9]) = *(uint64_t *)((char *)v15 + v162[9]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
            goto LABEL_112;
          case 4u:
            v8(v14, (uint64_t *)v15, v7);
            v167 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
            *(uint64_t *)((char *)v14 + *(int *)(v167 + 20)) = *(uint64_t *)((char *)v15 + *(int *)(v167 + 20));
            swift_bridgeObjectRetain();
            goto LABEL_108;
          case 9u:
            v8(v14, (uint64_t *)v15, v7);
            v168 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
            v8((uint64_t *)((char *)v14 + *(int *)(v168 + 20)), (uint64_t *)((char *)v15 + *(int *)(v168 + 20)), v7);
            v169 = *(int *)(v168 + 24);
            v170 = (char *)v14 + v169;
            v171 = (char *)v15 + v169;
            v172 = *((_QWORD *)v171 + 1);
            if (v172 >> 60 == 15)
            {
              *(_OWORD *)v170 = *(_OWORD *)v171;
            }
            else
            {
              v223 = *(_QWORD *)v171;
              sub_23F131170(*(_QWORD *)v171, *((_QWORD *)v171 + 1));
              *(_QWORD *)v170 = v223;
              *((_QWORD *)v170 + 1) = v172;
            }
LABEL_108:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
            break;
        }
        goto LABEL_112;
      case 0x25u:
        type metadata accessor for SessionServerDebuggerEvent.Payload(0);
        v108 = (char *)&loc_23F1FBB84 + 4 * word_23F278F9C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x26u:
        v109 = (uint64_t)*v15;
        v110 = (uint64_t)v15[1];
        v111 = (uint64_t)v15[2];
        v112 = (uint64_t)v15[3];
        v113 = (uint64_t)v15[4];
        v114 = (uint64_t)v15[5];
        v115 = (uint64_t)v15[6];
        v116 = (uint64_t)v15[7];
        sub_23F135CF4(v109, v110, v111, v112, v113, v114, v115);
        *v14 = v109;
        v14[1] = v110;
        v14[2] = v111;
        v14[3] = v112;
        v14[4] = v113;
        v14[5] = v114;
        v14[6] = v115;
        v14[7] = v116;
        goto LABEL_112;
      case 0x27u:
        v117 = (uint64_t)v15[1];
        *v14 = (uint64_t)*v15;
        v14[1] = v117;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_112;
      default:
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

void destroy for SessionClientMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);

  v4 = sub_23F267D84();
  v88 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v88(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  type metadata accessor for MessagePayload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for MessagePayload.RequestContent(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3)
      {
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v5, 1, v4))
          v88(v5, v4);
        v39 = (int *)type metadata accessor for SystemPromptResolution(0);
        v88(v5 + v39[5], v4);
        v40 = v5 + v39[6];
        type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v41 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
        }
        swift_bridgeObjectRelease();
        sub_23F137210(*(_QWORD *)(v5 + v39[8]), *(_QWORD *)(v5 + v39[8] + 8), *(_BYTE *)(v5 + v39[8] + 16));
      }
      else if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
      }
      v42 = (int *)type metadata accessor for MessagePayload.Request(0);
      swift_bridgeObjectRelease();
      v43 = v5 + v42[7];
      v44 = *(unsigned __int8 *)(v43 + 16);
      if (v44 <= 0xFD)
        sub_23F137230(*(_QWORD *)v43, *(_QWORD *)(v43 + 8), v44);
      v45 = v5 + v42[8];
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v45, 1, v4))
        v88(v45, v4);
      v46 = v42[9];
      goto LABEL_81;
    case 4u:
      swift_bridgeObjectRelease();
      v23 = type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0);
LABEL_33:
      v7 = (id *)(v5 + *(int *)(v23 + 20));
      goto LABEL_34;
    case 5u:
      sub_23F131164(*(id *)v5);
      goto LABEL_164;
    case 6u:
    case 9u:
    case 0x20u:
    case 0x21u:
    case 0x28u:
      goto LABEL_82;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_164;
    case 8u:
    case 0x27u:
      goto LABEL_39;
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0x13u:
    case 0x18u:
    case 0x19u:
    case 0x1Bu:
      goto LABEL_164;
    case 0xDu:
      v88(v5, v4);
      v27 = type metadata accessor for MessagePayload.ClientEffectInvocation(0);
      v88(v5 + *(int *)(v27 + 20), v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    case 0xEu:
      v88(v5, v4);
      v7 = (id *)(v5 + *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20));
      type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_23F131164(*v7);
      }
      else
      {
LABEL_34:
        v24 = sub_23F268078();
        v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8);
        v26 = (uint64_t)v7;
LABEL_58:
        v25(v26, v24);
      }
      return;
    case 0xFu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_164;
    case 0x10u:
      v88(v5, v4);
      type metadata accessor for MessagePayload.ClientAction(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    case 0x11u:
      v88(v5, v4);
      v8 = type metadata accessor for MessagePayload.ClientActionResult(0);
      v9 = v5 + *(int *)(v8 + 20);
      type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v10 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
          v11 = v9 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
          v12 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v11, 1, v12))
          {
            v88(v11, v4);
            swift_bridgeObjectRelease();
            goto LABEL_100;
          }
          goto LABEL_101;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_100;
        case 2u:
          goto LABEL_99;
        case 3u:
          swift_bridgeObjectRelease();
          v58 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_96;
        case 4u:
          swift_bridgeObjectRelease();
          v59 = v9 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v60 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v59, v60);
          swift_bridgeObjectRelease();
          goto LABEL_100;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_100;
        case 6u:
          swift_bridgeObjectRelease();
          v58 = type metadata accessor for ParameterNotAllowed(0);
          goto LABEL_96;
        case 7u:
          swift_bridgeObjectRelease();
          v58 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_96:
          v61 = v9 + *(int *)(v58 + 20);
          v62 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
          goto LABEL_101;
        case 8u:
          sub_23F137248(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_BYTE *)(v9 + 16));
          goto LABEL_101;
        case 9u:
          goto LABEL_100;
        case 0xAu:
          if (*(_QWORD *)(v9 + 8) < 0x10uLL)
            goto LABEL_101;
LABEL_99:
          swift_bridgeObjectRelease();
LABEL_100:
          swift_bridgeObjectRelease();
LABEL_101:
          v63 = (_QWORD *)(v5 + *(int *)(v8 + 24));
          if (*v63 == 1)
            return;
          swift_bridgeObjectRelease();
          if (v63[2])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v63[10])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v63[17])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          break;
        default:
          goto LABEL_101;
      }
      goto LABEL_39;
    case 0x12u:
      sub_23F1311B4(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
      sub_23F1311B4(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
      goto LABEL_164;
    case 0x14u:
      v88(v5, v4);
      v13 = type metadata accessor for SystemPrompt(0);
      swift_bridgeObjectRelease();
      v5 += *(int *)(v13 + 24);
      type metadata accessor for SystemPrompt.Prompt(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_164;
        case 1u:
          swift_bridgeObjectRelease();
          v23 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_33;
        case 2u:
          swift_bridgeObjectRelease();
          v52 = v5 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v53 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
          goto LABEL_39;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_164;
        default:
          return;
      }
      return;
    case 0x15u:
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v5, 1, v4))
        v88(v5, v4);
      v28 = (int *)type metadata accessor for SystemPromptResolution(0);
      v88(v5 + v28[5], v4);
      v29 = v5 + v28[6];
      type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v30 = sub_23F268078();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
      }
      swift_bridgeObjectRelease();
      sub_23F137210(*(_QWORD *)(v5 + v28[8]), *(_QWORD *)(v5 + v28[8] + 8), *(_BYTE *)(v5 + v28[8] + 16));
      return;
    case 0x16u:
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v5, 1, v4))
        v88(v5, v4);
      v14 = (int *)type metadata accessor for ActionResponse(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v5 + v14[7];
      type metadata accessor for ActionOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v16 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
          v17 = v15 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
          v18 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v17, 1, v18))
          {
            v88(v17, v4);
            swift_bridgeObjectRelease();
            goto LABEL_120;
          }
          goto LABEL_121;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_120;
        case 2u:
          goto LABEL_119;
        case 3u:
          swift_bridgeObjectRelease();
          v64 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_116;
        case 4u:
          swift_bridgeObjectRelease();
          v65 = v15 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v66 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v65, v66);
          swift_bridgeObjectRelease();
          goto LABEL_120;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_120;
        case 6u:
          swift_bridgeObjectRelease();
          v64 = type metadata accessor for ParameterNotAllowed(0);
          goto LABEL_116;
        case 7u:
          swift_bridgeObjectRelease();
          v64 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_116:
          v67 = v15 + *(int *)(v64 + 20);
          v68 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v67, v68);
          goto LABEL_121;
        case 8u:
          sub_23F137248(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(_BYTE *)(v15 + 16));
          goto LABEL_121;
        case 9u:
          goto LABEL_120;
        case 0xAu:
          if (*(_QWORD *)(v15 + 8) < 0x10uLL)
            goto LABEL_121;
LABEL_119:
          swift_bridgeObjectRelease();
LABEL_120:
          swift_bridgeObjectRelease();
LABEL_121:
          v69 = (_QWORD *)(v5 + v14[8]);
          swift_bridgeObjectRelease();
          if (v69[2])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v69[10])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v69[17])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v70 = v5 + v14[9];
          if (*(_QWORD *)v70)
          {
            swift_bridgeObjectRelease();
            v71 = *(unsigned __int8 *)(v70 + 24);
            if (v71 != 255)
              sub_23F137270(*(_QWORD *)(v70 + 8), *(_QWORD *)(v70 + 16), v71);
            v72 = *(unsigned __int8 *)(v70 + 48);
            if (v72 != 255)
              sub_23F137270(*(_QWORD *)(v70 + 32), *(_QWORD *)(v70 + 40), v72);
            swift_bridgeObjectRelease();
          }
          break;
        default:
          goto LABEL_121;
      }
      goto LABEL_164;
    case 0x17u:
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v5, 1, v4))
        v88(v5, v4);
      v31 = (int *)type metadata accessor for SystemResponse(0);
      if (*(_QWORD *)(v5 + v31[5] + 16) != 1)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = v5 + v31[7];
      type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v33 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
          v34 = v32 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
          v35 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v34, 1, v35))
          {
            v88(v34, v4);
            swift_bridgeObjectRelease();
            goto LABEL_144;
          }
          goto LABEL_145;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_144;
        case 2u:
          goto LABEL_143;
        case 3u:
          swift_bridgeObjectRelease();
          v73 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_140;
        case 4u:
          swift_bridgeObjectRelease();
          v74 = v32 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v75 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v74, v75);
          swift_bridgeObjectRelease();
          goto LABEL_144;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_144;
        case 6u:
          swift_bridgeObjectRelease();
          v73 = type metadata accessor for ParameterNotAllowed(0);
          goto LABEL_140;
        case 7u:
          swift_bridgeObjectRelease();
          v73 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_140:
          v76 = v32 + *(int *)(v73 + 20);
          v77 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 8))(v76, v77);
          goto LABEL_145;
        case 8u:
          sub_23F137248(*(_QWORD *)v32, *(_QWORD *)(v32 + 8), *(_BYTE *)(v32 + 16));
          goto LABEL_145;
        case 9u:
          goto LABEL_144;
        case 0xAu:
          if (*(_QWORD *)(v32 + 8) < 0x10uLL)
            goto LABEL_145;
LABEL_143:
          swift_bridgeObjectRelease();
LABEL_144:
          swift_bridgeObjectRelease();
LABEL_145:
          v78 = v5 + v31[8];
          if (*(_QWORD *)v78)
          {
            swift_bridgeObjectRelease();
            v79 = *(unsigned __int8 *)(v78 + 24);
            if (v79 != 255)
              sub_23F137270(*(_QWORD *)(v78 + 8), *(_QWORD *)(v78 + 16), v79);
            v80 = *(unsigned __int8 *)(v78 + 48);
            if (v80 != 255)
              sub_23F137270(*(_QWORD *)(v78 + 32), *(_QWORD *)(v78 + 40), v80);
            swift_bridgeObjectRelease();
          }
          break;
        default:
          goto LABEL_145;
      }
LABEL_39:
      swift_bridgeObjectRelease();
      goto LABEL_164;
    case 0x1Cu:
      swift_bridgeObjectRelease();
      v19 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
      goto LABEL_78;
    case 0x1Du:
      swift_bridgeObjectRelease();
      v19 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
      goto LABEL_78;
    case 0x1Eu:
      type metadata accessor for MessagePayload.RequestContent(0);
      v20 = swift_getEnumCaseMultiPayload();
      if (v20 == 3)
      {
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v5, 1, v4))
          v88(v5, v4);
        v47 = (int *)type metadata accessor for SystemPromptResolution(0);
        v88(v5 + v47[5], v4);
        v48 = v5 + v47[6];
        type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v49 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
        }
        swift_bridgeObjectRelease();
        sub_23F137210(*(_QWORD *)(v5 + v47[8]), *(_QWORD *)(v5 + v47[8] + 8), *(_BYTE *)(v5 + v47[8] + 16));
      }
      else if (v20 == 2 || v20 == 1)
      {
        swift_bridgeObjectRelease();
      }
      v19 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
LABEL_78:
      v50 = v19;
      v51 = v5 + *(int *)(v19 + 20);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v51, 1, v4))
        v88(v51, v4);
      v46 = *(int *)(v50 + 24);
LABEL_81:
      if (*(_QWORD *)(v5 + v46 + 8))
        goto LABEL_82;
      return;
    case 0x1Fu:
      type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v36 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v5, v36);
          v37 = v5 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
          v38 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v37, 1, v38))
          {
            v88(v37, v4);
            swift_bridgeObjectRelease();
            goto LABEL_162;
          }
          goto LABEL_163;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_162;
        case 2u:
          goto LABEL_161;
        case 3u:
          swift_bridgeObjectRelease();
          v81 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_158;
        case 4u:
          swift_bridgeObjectRelease();
          v82 = v5 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v83 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 8))(v82, v83);
          swift_bridgeObjectRelease();
          goto LABEL_162;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_162;
        case 6u:
          swift_bridgeObjectRelease();
          v81 = type metadata accessor for ParameterNotAllowed(0);
          goto LABEL_158;
        case 7u:
          swift_bridgeObjectRelease();
          v81 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_158:
          v84 = v5 + *(int *)(v81 + 20);
          v85 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8))(v84, v85);
          goto LABEL_163;
        case 8u:
          sub_23F137248(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
          goto LABEL_163;
        case 9u:
          goto LABEL_162;
        case 0xAu:
          if (*(_QWORD *)(v5 + 8) < 0x10uLL)
            goto LABEL_163;
LABEL_161:
          swift_bridgeObjectRelease();
LABEL_162:
          swift_bridgeObjectRelease();
LABEL_163:
          type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
          break;
        default:
          goto LABEL_163;
      }
      goto LABEL_164;
    case 0x22u:
      v88(v5, v4);
      type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
      goto LABEL_164;
    case 0x23u:
      v88(v5, v4);
      type metadata accessor for MessagePayload.ActionSummaryUpdate(0);
LABEL_82:
      swift_bridgeObjectRelease();
LABEL_164:
      swift_bridgeObjectRelease();
      break;
    case 0x24u:
      type metadata accessor for SessionClientDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
        case 5u:
        case 7u:
        case 8u:
          goto LABEL_57;
        case 2u:
          v88(v5, v4);
          v21 = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
          swift_bridgeObjectRelease();
          v22 = v5 + *(int *)(v21 + 28);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v22, 1, v4))
            goto LABEL_166;
          goto LABEL_39;
        case 4u:
          v88(v5, v4);
          type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
          goto LABEL_164;
        case 9u:
          v88(v5, v4);
          v54 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
          v88(v5 + *(int *)(v54 + 20), v4);
          v55 = (uint64_t *)(v5 + *(int *)(v54 + 24));
          v56 = v55[1];
          if (v56 >> 60 == 15)
            return;
          v57 = *v55;
          break;
        default:
          return;
      }
LABEL_174:
      sub_23F1311B4(v57, v56);
      break;
    case 0x25u:
      type metadata accessor for SessionServerDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xCu:
LABEL_57:
          v26 = v5;
          v24 = v4;
          v25 = v88;
          goto LABEL_58;
        case 1u:
          swift_bridgeObjectRelease();
          v22 = v5 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0) + 24);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v22, 1, v4))
LABEL_166:
            v88(v22, v4);
          goto LABEL_39;
        case 3u:
        case 4u:
          goto LABEL_164;
        case 5u:
          swift_bridgeObjectRelease();
          v86 = v5 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0) + 24);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v86, 1, v4))
            v88(v86, v4);
          goto LABEL_164;
        case 6u:
          v88(v5, v4);
          type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
          goto LABEL_164;
        case 0xBu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v87 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
          v88(v5 + *(int *)(v87 + 32), v4);
          swift_bridgeObjectRelease();
          sub_23F1311B4(*(_QWORD *)(v5 + *(int *)(v87 + 40)), *(_QWORD *)(v5 + *(int *)(v87 + 40) + 8));
          goto LABEL_164;
        case 0xDu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v57 = *(_QWORD *)(v5 + 72);
          v56 = *(_QWORD *)(v5 + 80);
          goto LABEL_174;
        default:
          return;
      }
    case 0x26u:
      sub_23F137288(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48));
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for SessionClientMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  unsigned __int8 v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  _QWORD *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  unint64_t v170;
  int *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  unsigned __int8 v186;
  int *v187;
  uint64_t v188;
  char *v189;
  char *v190;
  unsigned int v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  int *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  unsigned __int8 v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD *v223;
  _QWORD *v224;
  uint64_t v225;
  uint64_t result;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (uint64_t *)(a1 + v9);
  v14 = (id *)(a2 + v9);
  v15 = type metadata accessor for MessagePayload(0);
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v16 = type metadata accessor for MessagePayload.RequestContent(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 3:
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v6))
          {
            v158 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
          }
          else
          {
            v7((uint64_t)v13, (uint64_t)v14, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v6);
          }
          v171 = (int *)type metadata accessor for SystemPromptResolution(0);
          v7((uint64_t)v13 + v171[5], (uint64_t)v14 + v171[5], v6);
          v172 = v171[6];
          v173 = (char *)v13 + v172;
          v174 = (char *)v14 + v172;
          v175 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v176 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v173, v174, v176);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
          }
          v177 = v171[7];
          v178 = (char *)v13 + v177;
          v179 = (char *)v14 + v177;
          *(_DWORD *)v178 = *(_DWORD *)v179;
          v180 = *((_QWORD *)v179 + 2);
          *((_QWORD *)v178 + 1) = *((_QWORD *)v179 + 1);
          *((_QWORD *)v178 + 2) = v180;
          v181 = v171[8];
          v182 = (char *)v13 + v181;
          v183 = (char *)v14 + v181;
          v184 = *(_QWORD *)v183;
          v185 = *((_QWORD *)v183 + 1);
          v186 = v183[16];
          swift_bridgeObjectRetain();
          sub_23F135C7C(v184, v185, v186);
          *(_QWORD *)v182 = v184;
          *((_QWORD *)v182 + 1) = v185;
          v182[16] = v186;
          break;
        case 2:
          *v13 = (uint64_t)*v14;
          swift_bridgeObjectRetain();
          break;
        case 1:
          v18 = (uint64_t)v14[1];
          *v13 = (uint64_t)*v14;
          v13[1] = v18;
          swift_bridgeObjectRetain();
          break;
        default:
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
          goto LABEL_86;
      }
      swift_storeEnumTagMultiPayload();
LABEL_86:
      v187 = (int *)type metadata accessor for MessagePayload.Request(0);
      *(uint64_t *)((char *)v13 + v187[5]) = *(uint64_t *)((char *)v14 + v187[5]);
      *((_BYTE *)v13 + v187[6]) = *((_BYTE *)v14 + v187[6]);
      v188 = v187[7];
      v189 = (char *)v13 + v188;
      v190 = (char *)v14 + v188;
      v191 = *((unsigned __int8 *)v14 + v188 + 16);
      swift_bridgeObjectRetain();
      if (v191 <= 0xFD)
      {
        v192 = *(_QWORD *)v190;
        v193 = *((_QWORD *)v190 + 1);
        sub_23F135C9C(v192, v193, v191);
        *(_QWORD *)v189 = v192;
        *((_QWORD *)v189 + 1) = v193;
        v189[16] = v191;
      }
      else
      {
        *(_OWORD *)v189 = *(_OWORD *)v190;
        v189[16] = v190[16];
      }
      v194 = v187[8];
      v195 = (char *)v13 + v194;
      v196 = (char *)v14 + v194;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14 + v194, 1, v6))
      {
        v197 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v195, v196, *(_QWORD *)(*(_QWORD *)(v197 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v195, (uint64_t)v196, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v195, 0, 1, v6);
      }
      v198 = v187[9];
      v134 = (char *)v13 + v198;
      v135 = (char *)v14 + v198;
      v136 = *((_QWORD *)v135 + 1);
      if (v136)
        goto LABEL_103;
      *(_OWORD *)v134 = *(_OWORD *)v135;
      *((_QWORD *)v134 + 2) = *((_QWORD *)v135 + 2);
      goto LABEL_110;
    case 4u:
      v19 = (uint64_t)v14[1];
      *v13 = (uint64_t)*v14;
      v13[1] = v19;
      v20 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
      v21 = (char *)v13 + v20;
      v22 = (char *)v14 + v20;
      v23 = sub_23F268078();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v21, v22, v23);
      goto LABEL_110;
    case 5u:
      v25 = *v14;
      v26 = *((_BYTE *)v14 + 8);
      sub_23F131158(*v14);
      *v13 = (uint64_t)v25;
      *((_BYTE *)v13 + 8) = v26;
      v13[2] = (uint64_t)v14[2];
      swift_bridgeObjectRetain();
      goto LABEL_110;
    case 6u:
    case 9u:
    case 0x20u:
    case 0x21u:
    case 0x28u:
      v95 = (uint64_t)v14[1];
      *v13 = (uint64_t)*v14;
      v13[1] = v95;
      v13[2] = (uint64_t)v14[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_110;
    case 7u:
      v27 = (uint64_t)v14[1];
      *v13 = (uint64_t)*v14;
      v13[1] = v27;
      v13[2] = (uint64_t)v14[2];
      *((_BYTE *)v13 + 24) = *((_BYTE *)v14 + 24);
      v28 = (uint64_t)v14[4];
      v29 = (uint64_t)v14[5];
      v13[4] = v28;
      v13[5] = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_110;
    case 8u:
      *v13 = (uint64_t)*v14;
      *((_BYTE *)v13 + 8) = *((_BYTE *)v14 + 8);
      v30 = (uint64_t)v14[2];
      v31 = (uint64_t)v14[3];
      v13[2] = v30;
      v13[3] = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_110;
    case 0xAu:
    case 0xBu:
    case 0x13u:
    case 0x18u:
    case 0x19u:
    case 0x1Bu:
      v79 = (uint64_t)v14[1];
      *v13 = (uint64_t)*v14;
      v13[1] = v79;
      swift_bridgeObjectRetain();
      goto LABEL_110;
    case 0xCu:
      *v13 = (uint64_t)*v14;
      swift_bridgeObjectRetain();
      goto LABEL_110;
    case 0xDu:
      v7((uint64_t)v13, (uint64_t)v14, v6);
      v32 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
      v7((uint64_t)v13 + v32[5], (uint64_t)v14 + v32[5], v6);
      v33 = v32[6];
      v34 = (uint64_t *)((char *)v13 + v33);
      v35 = (id *)((char *)v14 + v33);
      v36 = v35[1];
      *v34 = *v35;
      v34[1] = v36;
      v37 = v32[7];
      v38 = (uint64_t *)((char *)v13 + v37);
      v39 = (id *)((char *)v14 + v37);
      v40 = v39[1];
      *v38 = *v39;
      v38[1] = v40;
      v41 = v32[8];
      v42 = (uint64_t *)((char *)v13 + v41);
      v43 = (id *)((char *)v14 + v41);
      v44 = v43[1];
      *v42 = *v43;
      v42[1] = v44;
      *(uint64_t *)((char *)v13 + v32[9]) = *(uint64_t *)((char *)v14 + v32[9]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_110;
    case 0xEu:
      v7((uint64_t)v13, (uint64_t)v14, v6);
      v45 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
      v46 = (char *)v13 + v45;
      v47 = (char *)v14 + v45;
      type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v48 = *(void **)v47;
        v49 = v47[8];
        sub_23F131158(v48);
        *(_QWORD *)v46 = v48;
        v46[8] = v49;
      }
      else
      {
        v116 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16))(v46, v47, v116);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_110;
    case 0xFu:
      *(_DWORD *)v13 = *(_DWORD *)v14;
      v50 = (uint64_t)v14[2];
      v13[1] = (uint64_t)v14[1];
      v13[2] = v50;
      v51 = (uint64_t)v14[4];
      v13[3] = (uint64_t)v14[3];
      v13[4] = v51;
      v52 = (uint64_t)v14[6];
      v13[5] = (uint64_t)v14[5];
      v13[6] = v52;
      v53 = (uint64_t)v14[8];
      v13[7] = (uint64_t)v14[7];
      v13[8] = v53;
      *((_BYTE *)v13 + 72) = *((_BYTE *)v14 + 72);
      v54 = (uint64_t)v14[11];
      v13[10] = (uint64_t)v14[10];
      v13[11] = v54;
      v13[12] = (uint64_t)v14[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_110;
    case 0x10u:
      v7((uint64_t)v13, (uint64_t)v14, v6);
      v55 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
      v56 = v55[5];
      v57 = (uint64_t *)((char *)v13 + v56);
      v58 = (uint64_t *)((char *)v14 + v56);
      v60 = *v58;
      v59 = v58[1];
      *v57 = v60;
      v57[1] = v59;
      *(uint64_t *)((char *)v13 + v55[6]) = *(uint64_t *)((char *)v14 + v55[6]);
      *(uint64_t *)((char *)v13 + v55[7]) = *(uint64_t *)((char *)v14 + v55[7]);
      v61 = v55[8];
      v62 = (uint64_t *)((char *)v13 + v61);
      v63 = (id *)((char *)v14 + v61);
      v64 = v63[1];
      *v62 = *v63;
      v62[1] = v64;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_110;
    case 0x11u:
      v7((uint64_t)v13, (uint64_t)v14, v6);
      type metadata accessor for MessagePayload.ClientActionResult(0);
      type metadata accessor for StatementOutcome(0);
      v65 = (char *)&loc_23F1FF79C + 4 * word_23F2791DA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x12u:
      v66 = (uint64_t)*v14;
      v67 = (unint64_t)v14[1];
      sub_23F131170((uint64_t)*v14, v67);
      *v13 = v66;
      v13[1] = v67;
      v68 = (uint64_t)v14[2];
      v69 = (unint64_t)v14[3];
      sub_23F131170(v68, v69);
      v13[2] = v68;
      v13[3] = v69;
      v70 = (uint64_t)v14[5];
      v13[4] = (uint64_t)v14[4];
      v13[5] = v70;
      swift_bridgeObjectRetain();
      goto LABEL_110;
    case 0x14u:
      v7((uint64_t)v13, (uint64_t)v14, v6);
      v71 = *(int *)(type metadata accessor for SystemPrompt(0) + 20);
      v72 = (uint64_t *)((char *)v13 + v71);
      v73 = (id *)((char *)v14 + v71);
      v74 = v73[1];
      *v72 = *v73;
      v72[1] = v74;
      type metadata accessor for SystemPrompt.Prompt(0);
      swift_bridgeObjectRetain();
      v75 = (char *)&loc_23F1FF8F0 + 4 * word_23F2791D2[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x15u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v6))
      {
        v76 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v13, (uint64_t)v14, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v6);
      }
      v117 = (int *)type metadata accessor for SystemPromptResolution(0);
      v7((uint64_t)v13 + v117[5], (uint64_t)v14 + v117[5], v6);
      v118 = v117[6];
      v119 = (char *)v13 + v118;
      v120 = (char *)v14 + v118;
      v121 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v122 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 16))(v119, v120, v122);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
      }
      v123 = v117[7];
      v124 = (char *)v13 + v123;
      v125 = (char *)v14 + v123;
      *(_DWORD *)v124 = *(_DWORD *)v125;
      v126 = *((_QWORD *)v125 + 2);
      *((_QWORD *)v124 + 1) = *((_QWORD *)v125 + 1);
      *((_QWORD *)v124 + 2) = v126;
      v127 = v117[8];
      v128 = (char *)v13 + v127;
      v129 = (char *)v14 + v127;
      v130 = *(_QWORD *)v129;
      v131 = *((_QWORD *)v129 + 1);
      v132 = v129[16];
      swift_bridgeObjectRetain();
      sub_23F135C7C(v130, v131, v132);
      *(_QWORD *)v128 = v130;
      *((_QWORD *)v128 + 1) = v131;
      v128[16] = v132;
      goto LABEL_110;
    case 0x16u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v6))
      {
        v77 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v13, (uint64_t)v14, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v6);
      }
      v137 = type metadata accessor for ActionResponse(0);
      v138 = *(int *)(v137 + 20);
      v139 = (uint64_t *)((char *)v13 + v138);
      v140 = (id *)((char *)v14 + v138);
      v141 = v140[1];
      *v139 = *v140;
      v139[1] = v141;
      v142 = *(int *)(v137 + 24);
      v143 = (uint64_t *)((char *)v13 + v142);
      v144 = (id *)((char *)v14 + v142);
      v145 = v144[1];
      *v143 = *v144;
      v143[1] = v145;
      type metadata accessor for ActionOutcome(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v146 = (char *)&loc_23F2000B4 + 4 * word_23F2791BC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x17u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v6))
      {
        v78 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v13, (uint64_t)v14, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v6);
      }
      v147 = type metadata accessor for SystemResponse(0);
      v148 = *(int *)(v147 + 20);
      v149 = (char *)v13 + v148;
      v150 = (char *)v14 + v148;
      v151 = *((_QWORD *)v150 + 2);
      if (v151 == 1)
      {
        *(_OWORD *)v149 = *(_OWORD *)v150;
        *((_QWORD *)v149 + 2) = *((_QWORD *)v150 + 2);
      }
      else
      {
        *(_DWORD *)v149 = *(_DWORD *)v150;
        *((_QWORD *)v149 + 1) = *((_QWORD *)v150 + 1);
        *((_QWORD *)v149 + 2) = v151;
        swift_bridgeObjectRetain();
      }
      v152 = *(int *)(v147 + 24);
      v153 = (uint64_t *)((char *)v13 + v152);
      v154 = (id *)((char *)v14 + v152);
      v155 = v154[1];
      *v153 = *v154;
      v153[1] = v155;
      type metadata accessor for StatementOutcome(0);
      swift_bridgeObjectRetain();
      v156 = (char *)&loc_23F20020C + 4 * word_23F2791A6[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x1Cu:
      v80 = (uint64_t)v14[1];
      *v13 = (uint64_t)*v14;
      v13[1] = v80;
      v81 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
      v82 = *(int *)(v81 + 20);
      v83 = (char *)v13 + v82;
      v84 = (char *)v14 + v82;
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v84, 1, v6))
      {
        v85 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v83, (uint64_t)v84, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v83, 0, 1, v6);
      }
      v157 = *(int *)(v81 + 24);
      v134 = (char *)v13 + v157;
      v135 = (char *)v14 + v157;
      v136 = *((_QWORD *)v135 + 1);
      if (v136)
        goto LABEL_103;
      *(_OWORD *)v134 = *(_OWORD *)v135;
      *((_QWORD *)v134 + 2) = *((_QWORD *)v135 + 2);
      goto LABEL_110;
    case 0x1Du:
      *v13 = (uint64_t)*v14;
      v86 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
      v87 = *(int *)(v86 + 20);
      v88 = (char *)v13 + v87;
      v89 = (char *)v14 + v87;
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v89, 1, v6))
      {
        v90 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v88, (uint64_t)v89, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v88, 0, 1, v6);
      }
      v133 = *(int *)(v86 + 24);
      v134 = (char *)v13 + v133;
      v135 = (char *)v14 + v133;
      v136 = *((_QWORD *)v135 + 1);
      if (v136)
        goto LABEL_103;
      *(_OWORD *)v134 = *(_OWORD *)v135;
      *((_QWORD *)v134 + 2) = *((_QWORD *)v135 + 2);
      goto LABEL_110;
    case 0x1Eu:
      v91 = type metadata accessor for MessagePayload.RequestContent(0);
      v92 = swift_getEnumCaseMultiPayload();
      switch(v92)
      {
        case 3:
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v6))
          {
            v159 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
          }
          else
          {
            v7((uint64_t)v13, (uint64_t)v14, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v6);
          }
          v199 = (int *)type metadata accessor for SystemPromptResolution(0);
          v7((uint64_t)v13 + v199[5], (uint64_t)v14 + v199[5], v6);
          v200 = v199[6];
          v201 = (char *)v13 + v200;
          v202 = (char *)v14 + v200;
          v203 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v204 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 16))(v201, v202, v204);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v201, v202, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
          }
          v205 = v199[7];
          v206 = (char *)v13 + v205;
          v207 = (char *)v14 + v205;
          *(_DWORD *)v206 = *(_DWORD *)v207;
          v208 = *((_QWORD *)v207 + 2);
          *((_QWORD *)v206 + 1) = *((_QWORD *)v207 + 1);
          *((_QWORD *)v206 + 2) = v208;
          v209 = v199[8];
          v210 = (char *)v13 + v209;
          v211 = (char *)v14 + v209;
          v212 = *(_QWORD *)v211;
          v213 = *((_QWORD *)v211 + 1);
          v214 = v211[16];
          swift_bridgeObjectRetain();
          sub_23F135C7C(v212, v213, v214);
          *(_QWORD *)v210 = v212;
          *((_QWORD *)v210 + 1) = v213;
          v210[16] = v214;
          swift_storeEnumTagMultiPayload();
          break;
        case 2:
          *v13 = (uint64_t)*v14;
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 1:
          v93 = (uint64_t)v14[1];
          *v13 = (uint64_t)*v14;
          v13[1] = v93;
          swift_bridgeObjectRetain();
LABEL_72:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
          break;
      }
      v215 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
      v216 = *(int *)(v215 + 20);
      v217 = (char *)v13 + v216;
      v218 = (char *)v14 + v216;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14 + v216, 1, v6))
      {
        v219 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v217, v218, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v217, (uint64_t)v218, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v217, 0, 1, v6);
      }
      v220 = *(int *)(v215 + 24);
      v134 = (char *)v13 + v220;
      v135 = (char *)v14 + v220;
      v136 = *((_QWORD *)v135 + 1);
      if (v136)
      {
LABEL_103:
        *(_QWORD *)v134 = *(_QWORD *)v135;
        *((_QWORD *)v134 + 1) = v136;
        *((_QWORD *)v134 + 2) = *((_QWORD *)v135 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v134 = *(_OWORD *)v135;
        *((_QWORD *)v134 + 2) = *((_QWORD *)v135 + 2);
      }
LABEL_110:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x1Fu:
      type metadata accessor for StatementOutcome(0);
      v94 = (char *)&loc_23F1FFB68 + 4 * word_23F279190[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x22u:
      v7((uint64_t)v13, (uint64_t)v14, v6);
      v96 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
      *((_BYTE *)v13 + *(int *)(v96 + 20)) = *((_BYTE *)v14 + *(int *)(v96 + 20));
      v97 = *(int *)(v96 + 24);
      v98 = (char *)v13 + v97;
      v99 = (char *)v14 + v97;
      *(_DWORD *)v98 = *(_DWORD *)v99;
      v100 = *((_QWORD *)v99 + 2);
      *((_QWORD *)v98 + 1) = *((_QWORD *)v99 + 1);
      *((_QWORD *)v98 + 2) = v100;
      swift_bridgeObjectRetain();
      goto LABEL_110;
    case 0x23u:
      v7((uint64_t)v13, (uint64_t)v14, v6);
      v101 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
      v102 = (uint64_t *)((char *)v13 + v101);
      v103 = (id *)((char *)v14 + v101);
      v104 = v103[1];
      *v102 = *v103;
      v102[1] = v104;
      v102[2] = v103[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_110;
    case 0x24u:
      v105 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
        case 5u:
        case 7u:
        case 8u:
          v7((uint64_t)v13, (uint64_t)v14, v6);
          goto LABEL_106;
        case 2u:
          v7((uint64_t)v13, (uint64_t)v14, v6);
          v160 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
          *(uint64_t *)((char *)v13 + v160[5]) = *(uint64_t *)((char *)v14 + v160[5]);
          *(uint64_t *)((char *)v13 + v160[6]) = *(uint64_t *)((char *)v14 + v160[6]);
          v161 = v160[7];
          v162 = (char *)v13 + v161;
          v163 = (char *)v14 + v161;
          swift_bridgeObjectRetain();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v163, 1, v6))
          {
            v164 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
          }
          else
          {
            v7((uint64_t)v162, (uint64_t)v163, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v162, 0, 1, v6);
          }
          v222 = v160[8];
          v223 = (uint64_t *)((char *)v13 + v222);
          v224 = (id *)((char *)v14 + v222);
          v225 = v224[1];
          *v223 = *v224;
          v223[1] = v225;
          *(uint64_t *)((char *)v13 + v160[9]) = *(uint64_t *)((char *)v14 + v160[9]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          goto LABEL_110;
        case 4u:
          v7((uint64_t)v13, (uint64_t)v14, v6);
          v165 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
          *(uint64_t *)((char *)v13 + *(int *)(v165 + 20)) = *(uint64_t *)((char *)v14 + *(int *)(v165 + 20));
          swift_bridgeObjectRetain();
          goto LABEL_106;
        case 9u:
          v7((uint64_t)v13, (uint64_t)v14, v6);
          v166 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
          v7((uint64_t)v13 + *(int *)(v166 + 20), (uint64_t)v14 + *(int *)(v166 + 20), v6);
          v167 = *(int *)(v166 + 24);
          v168 = (char *)v13 + v167;
          v169 = (char *)v14 + v167;
          v170 = *((_QWORD *)v169 + 1);
          if (v170 >> 60 == 15)
          {
            *(_OWORD *)v168 = *(_OWORD *)v169;
          }
          else
          {
            v221 = *(_QWORD *)v169;
            sub_23F131170(*(_QWORD *)v169, *((_QWORD *)v169 + 1));
            *(_QWORD *)v168 = v221;
            *((_QWORD *)v168 + 1) = v170;
          }
LABEL_106:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
          break;
      }
      goto LABEL_110;
    case 0x25u:
      type metadata accessor for SessionServerDebuggerEvent.Payload(0);
      v106 = (char *)&loc_23F1FFD74 + 4 * word_23F279160[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x26u:
      v107 = (uint64_t)*v14;
      v108 = (uint64_t)v14[1];
      v109 = (uint64_t)v14[2];
      v110 = (uint64_t)v14[3];
      v111 = (uint64_t)v14[4];
      v112 = (uint64_t)v14[5];
      v113 = (uint64_t)v14[6];
      v114 = (uint64_t)v14[7];
      sub_23F135CF4(v107, v108, v109, v110, v111, v112, v113);
      *v13 = v107;
      v13[1] = v108;
      v13[2] = v109;
      v13[3] = v110;
      v13[4] = v111;
      v13[5] = v112;
      v13[6] = v113;
      v13[7] = v114;
      goto LABEL_110;
    case 0x27u:
      v115 = (uint64_t)v14[1];
      *v13 = (uint64_t)*v14;
      v13[1] = v115;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_110;
    default:
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      return a1;
  }
}

uint64_t assignWithCopy for SessionClientMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  id v22;
  char v23;
  void (*v24)(uint64_t *, id *, uint64_t);
  int *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  void *v38;
  char v39;
  int *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  unsigned __int8 v104;
  uint64_t v105;
  char *v106;
  char *v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  __int128 v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  char *v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t *, id *, uint64_t);
  int *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t *, id *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  unint64_t v142;
  int *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  unsigned __int8 v157;
  int *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  unsigned int v162;
  __int128 v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  __int128 v171;
  int *v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  unsigned __int8 v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  __int128 v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  _QWORD *v197;
  uint64_t result;

  v6 = sub_23F267D84();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 24);
    v12 = (uint64_t *)(a1 + v11);
    v13 = (id *)(a2 + v11);
    sub_23F1BE0BC(a1 + v11, type metadata accessor for MessagePayload);
    v14 = type metadata accessor for MessagePayload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v15 = type metadata accessor for MessagePayload.RequestContent(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 3:
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v13, 1, v6))
            {
              v128 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v12, v13, v6);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v12, 0, 1, v6);
            }
            v143 = (int *)type metadata accessor for SystemPromptResolution(0);
            (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v12 + v143[5], (char *)v13 + v143[5], v6);
            v144 = v143[6];
            v145 = (char *)v12 + v144;
            v146 = (char *)v13 + v144;
            v147 = type metadata accessor for SystemPromptResolution.UserAction(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v148 = sub_23F268078();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 16))(v145, v146, v148);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
            }
            v149 = v143[7];
            v150 = (char *)v12 + v149;
            v151 = (char *)v13 + v149;
            *(_DWORD *)v150 = *(_DWORD *)v151;
            *((_QWORD *)v150 + 1) = *((_QWORD *)v151 + 1);
            *((_QWORD *)v150 + 2) = *((_QWORD *)v151 + 2);
            v152 = v143[8];
            v153 = (char *)v12 + v152;
            v154 = (char *)v13 + v152;
            v155 = *(_QWORD *)v154;
            v156 = *((_QWORD *)v154 + 1);
            v157 = v154[16];
            swift_bridgeObjectRetain();
            sub_23F135C7C(v155, v156, v157);
            *(_QWORD *)v153 = v155;
            *((_QWORD *)v153 + 1) = v156;
            v153[16] = v157;
            break;
          case 2:
            *v12 = (uint64_t)*v13;
            swift_bridgeObjectRetain();
            break;
          case 1:
            *v12 = (uint64_t)*v13;
            v12[1] = (uint64_t)v13[1];
            swift_bridgeObjectRetain();
            break;
          default:
            memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            goto LABEL_87;
        }
        swift_storeEnumTagMultiPayload();
LABEL_87:
        v158 = (int *)type metadata accessor for MessagePayload.Request(0);
        *(uint64_t *)((char *)v12 + v158[5]) = *(uint64_t *)((char *)v13 + v158[5]);
        *((_BYTE *)v12 + v158[6]) = *((_BYTE *)v13 + v158[6]);
        v159 = v158[7];
        v160 = (char *)v12 + v159;
        v161 = (char *)v13 + v159;
        v162 = *((unsigned __int8 *)v13 + v159 + 16);
        swift_bridgeObjectRetain();
        if (v162 <= 0xFD)
        {
          v164 = *(_QWORD *)v161;
          v165 = *((_QWORD *)v161 + 1);
          sub_23F135C9C(v164, v165, v162);
          *(_QWORD *)v160 = v164;
          *((_QWORD *)v160 + 1) = v165;
          v160[16] = v162;
        }
        else
        {
          v163 = *(_OWORD *)v161;
          v160[16] = v161[16];
          *(_OWORD *)v160 = v163;
        }
        v166 = v158[8];
        v167 = (char *)v12 + v166;
        v168 = (char *)v13 + v166;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v13 + v166, 1, v6))
        {
          v169 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v167, v168, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v167, 0, 1, v6);
        }
        v170 = v158[9];
        v106 = (char *)v12 + v170;
        v107 = (char *)v13 + v170;
        if (*((_QWORD *)v107 + 1))
          goto LABEL_104;
        v171 = *(_OWORD *)v107;
        *((_QWORD *)v106 + 2) = *((_QWORD *)v107 + 2);
        *(_OWORD *)v106 = v171;
        goto LABEL_111;
      case 4u:
        *v12 = (uint64_t)*v13;
        v12[1] = (uint64_t)v13[1];
        v17 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
        v18 = (char *)v12 + v17;
        v19 = (char *)v13 + v17;
        v20 = sub_23F268078();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        goto LABEL_111;
      case 5u:
        v22 = *v13;
        v23 = *((_BYTE *)v13 + 8);
        sub_23F131158(*v13);
        *v12 = (uint64_t)v22;
        *((_BYTE *)v12 + 8) = v23;
        v12[2] = (uint64_t)v13[2];
        swift_bridgeObjectRetain();
        goto LABEL_111;
      case 6u:
      case 9u:
      case 0x20u:
      case 0x21u:
      case 0x28u:
        *v12 = (uint64_t)*v13;
        v12[1] = (uint64_t)v13[1];
        v12[2] = (uint64_t)v13[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_111;
      case 7u:
        *v12 = (uint64_t)*v13;
        v12[1] = (uint64_t)v13[1];
        v12[2] = (uint64_t)v13[2];
        *((_BYTE *)v12 + 24) = *((_BYTE *)v13 + 24);
        v12[4] = (uint64_t)v13[4];
        v12[5] = (uint64_t)v13[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_111;
      case 8u:
        *v12 = (uint64_t)*v13;
        *((_BYTE *)v12 + 8) = *((_BYTE *)v13 + 8);
        v12[2] = (uint64_t)v13[2];
        v12[3] = (uint64_t)v13[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_111;
      case 0xAu:
      case 0xBu:
      case 0x13u:
      case 0x18u:
      case 0x19u:
      case 0x1Bu:
        *v12 = (uint64_t)*v13;
        v12[1] = (uint64_t)v13[1];
        swift_bridgeObjectRetain();
        goto LABEL_111;
      case 0xCu:
        *v12 = (uint64_t)*v13;
        swift_bridgeObjectRetain();
        goto LABEL_111;
      case 0xDu:
        v24 = *(void (**)(uint64_t *, id *, uint64_t))(v7 + 16);
        v24(v12, v13, v6);
        v25 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
        v24((uint64_t *)((char *)v12 + v25[5]), (id *)((char *)v13 + v25[5]), v6);
        v26 = v25[6];
        v27 = (uint64_t *)((char *)v12 + v26);
        v28 = (id *)((char *)v13 + v26);
        *v27 = *v28;
        v27[1] = v28[1];
        v29 = v25[7];
        v30 = (uint64_t *)((char *)v12 + v29);
        v31 = (id *)((char *)v13 + v29);
        *v30 = *v31;
        v30[1] = v31[1];
        v32 = v25[8];
        v33 = (uint64_t *)((char *)v12 + v32);
        v34 = (id *)((char *)v13 + v32);
        *v33 = *v34;
        v33[1] = v34[1];
        *(uint64_t *)((char *)v12 + v25[9]) = *(uint64_t *)((char *)v13 + v25[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_111;
      case 0xEu:
        (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v12, v13, v6);
        v35 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
        v36 = (char *)v12 + v35;
        v37 = (char *)v13 + v35;
        type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v38 = *(void **)v37;
          v39 = v37[8];
          sub_23F131158(v38);
          *(_QWORD *)v36 = v38;
          v36[8] = v39;
        }
        else
        {
          v89 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v36, v37, v89);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_111;
      case 0xFu:
        *(_DWORD *)v12 = *(_DWORD *)v13;
        v12[1] = (uint64_t)v13[1];
        v12[2] = (uint64_t)v13[2];
        v12[3] = (uint64_t)v13[3];
        v12[4] = (uint64_t)v13[4];
        v12[5] = (uint64_t)v13[5];
        v12[6] = (uint64_t)v13[6];
        v12[7] = (uint64_t)v13[7];
        v12[8] = (uint64_t)v13[8];
        *((_BYTE *)v12 + 72) = *((_BYTE *)v13 + 72);
        v12[10] = (uint64_t)v13[10];
        v12[11] = (uint64_t)v13[11];
        v12[12] = (uint64_t)v13[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_111;
      case 0x10u:
        (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v12, v13, v6);
        v40 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
        v41 = v40[5];
        v42 = (uint64_t *)((char *)v12 + v41);
        v43 = (id *)((char *)v13 + v41);
        *v42 = *v43;
        v42[1] = v43[1];
        *(uint64_t *)((char *)v12 + v40[6]) = *(uint64_t *)((char *)v13 + v40[6]);
        *(uint64_t *)((char *)v12 + v40[7]) = *(uint64_t *)((char *)v13 + v40[7]);
        v44 = v40[8];
        v45 = (uint64_t *)((char *)v12 + v44);
        v46 = (id *)((char *)v13 + v44);
        *v45 = *v46;
        v45[1] = v46[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_111;
      case 0x11u:
        (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v12, v13, v6);
        type metadata accessor for MessagePayload.ClientActionResult(0);
        type metadata accessor for StatementOutcome(0);
        v47 = (char *)&loc_23F202634 + 4 * word_23F2792BC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x12u:
        v48 = (uint64_t)*v13;
        v49 = (unint64_t)v13[1];
        sub_23F131170((uint64_t)*v13, v49);
        *v12 = v48;
        v12[1] = v49;
        v50 = (uint64_t)v13[2];
        v51 = (unint64_t)v13[3];
        sub_23F131170(v50, v51);
        v12[2] = v50;
        v12[3] = v51;
        v12[4] = (uint64_t)v13[4];
        v12[5] = (uint64_t)v13[5];
        swift_bridgeObjectRetain();
        goto LABEL_111;
      case 0x14u:
        (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v12, v13, v6);
        v52 = *(int *)(type metadata accessor for SystemPrompt(0) + 20);
        v53 = (uint64_t *)((char *)v12 + v52);
        v54 = (id *)((char *)v13 + v52);
        *v53 = *v54;
        v53[1] = v54[1];
        type metadata accessor for SystemPrompt.Prompt(0);
        swift_bridgeObjectRetain();
        v55 = (char *)&loc_23F2027A4 + 4 * word_23F2792B4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x15u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v13, 1, v6))
        {
          v56 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v12, v13, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v12, 0, 1, v6);
        }
        v90 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v12 + v90[5], (char *)v13 + v90[5], v6);
        v91 = v90[6];
        v92 = (char *)v12 + v91;
        v93 = (char *)v13 + v91;
        v94 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v95 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v92, v93, v95);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        v96 = v90[7];
        v97 = (char *)v12 + v96;
        v98 = (char *)v13 + v96;
        *(_DWORD *)v97 = *(_DWORD *)v98;
        *((_QWORD *)v97 + 1) = *((_QWORD *)v98 + 1);
        *((_QWORD *)v97 + 2) = *((_QWORD *)v98 + 2);
        v99 = v90[8];
        v100 = (char *)v12 + v99;
        v101 = (char *)v13 + v99;
        v102 = *(_QWORD *)v101;
        v103 = *((_QWORD *)v101 + 1);
        v104 = v101[16];
        swift_bridgeObjectRetain();
        sub_23F135C7C(v102, v103, v104);
        *(_QWORD *)v100 = v102;
        *((_QWORD *)v100 + 1) = v103;
        v100[16] = v104;
        goto LABEL_111;
      case 0x16u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v13, 1, v6))
        {
          v57 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v12, v13, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v12, 0, 1, v6);
        }
        v109 = type metadata accessor for ActionResponse(0);
        v110 = *(int *)(v109 + 20);
        v111 = (uint64_t *)((char *)v12 + v110);
        v112 = (id *)((char *)v13 + v110);
        *v111 = *v112;
        v111[1] = v112[1];
        v113 = *(int *)(v109 + 24);
        v114 = (uint64_t *)((char *)v12 + v113);
        v115 = (id *)((char *)v13 + v113);
        *v114 = *v115;
        v114[1] = v115[1];
        type metadata accessor for ActionOutcome(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v116 = (char *)&loc_23F203004 + 4 * word_23F27929E[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x17u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v13, 1, v6))
        {
          v58 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v12, v13, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v12, 0, 1, v6);
        }
        v117 = type metadata accessor for SystemResponse(0);
        v118 = *(int *)(v117 + 20);
        v119 = (char *)v12 + v118;
        v120 = (char *)v13 + v118;
        if (*((_QWORD *)v120 + 2) == 1)
        {
          v121 = *(_OWORD *)v120;
          *((_QWORD *)v119 + 2) = *((_QWORD *)v120 + 2);
          *(_OWORD *)v119 = v121;
        }
        else
        {
          *(_DWORD *)v119 = *(_DWORD *)v120;
          *((_QWORD *)v119 + 1) = *((_QWORD *)v120 + 1);
          *((_QWORD *)v119 + 2) = *((_QWORD *)v120 + 2);
          swift_bridgeObjectRetain();
        }
        v122 = *(int *)(v117 + 24);
        v123 = (uint64_t *)((char *)v12 + v122);
        v124 = (id *)((char *)v13 + v122);
        *v123 = *v124;
        v123[1] = v124[1];
        type metadata accessor for StatementOutcome(0);
        swift_bridgeObjectRetain();
        v125 = (char *)&loc_23F20316C + 4 * word_23F279288[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x1Cu:
        *v12 = (uint64_t)*v13;
        v12[1] = (uint64_t)v13[1];
        v59 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
        v60 = *(int *)(v59 + 20);
        v61 = (char *)v12 + v60;
        v62 = (char *)v13 + v60;
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v62, 1, v6))
        {
          v63 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v61, v62, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v61, 0, 1, v6);
        }
        v126 = *(int *)(v59 + 24);
        v106 = (char *)v12 + v126;
        v107 = (char *)v13 + v126;
        if (*((_QWORD *)v107 + 1))
          goto LABEL_104;
        v127 = *(_OWORD *)v107;
        *((_QWORD *)v106 + 2) = *((_QWORD *)v107 + 2);
        *(_OWORD *)v106 = v127;
        goto LABEL_111;
      case 0x1Du:
        *v12 = (uint64_t)*v13;
        v64 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
        v65 = *(int *)(v64 + 20);
        v66 = (char *)v12 + v65;
        v67 = (char *)v13 + v65;
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v67, 1, v6))
        {
          v68 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v66, v67, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v66, 0, 1, v6);
        }
        v105 = *(int *)(v64 + 24);
        v106 = (char *)v12 + v105;
        v107 = (char *)v13 + v105;
        if (*((_QWORD *)v107 + 1))
          goto LABEL_104;
        v108 = *(_OWORD *)v107;
        *((_QWORD *)v106 + 2) = *((_QWORD *)v107 + 2);
        *(_OWORD *)v106 = v108;
        goto LABEL_111;
      case 0x1Eu:
        v69 = type metadata accessor for MessagePayload.RequestContent(0);
        v70 = swift_getEnumCaseMultiPayload();
        switch(v70)
        {
          case 3:
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v13, 1, v6))
            {
              v129 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v12, v13, v6);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v12, 0, 1, v6);
            }
            v172 = (int *)type metadata accessor for SystemPromptResolution(0);
            (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v12 + v172[5], (char *)v13 + v172[5], v6);
            v173 = v172[6];
            v174 = (char *)v12 + v173;
            v175 = (char *)v13 + v173;
            v176 = type metadata accessor for SystemPromptResolution.UserAction(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v177 = sub_23F268078();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v174, v175, v177);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
            }
            v178 = v172[7];
            v179 = (char *)v12 + v178;
            v180 = (char *)v13 + v178;
            *(_DWORD *)v179 = *(_DWORD *)v180;
            *((_QWORD *)v179 + 1) = *((_QWORD *)v180 + 1);
            *((_QWORD *)v179 + 2) = *((_QWORD *)v180 + 2);
            v181 = v172[8];
            v182 = (char *)v12 + v181;
            v183 = (char *)v13 + v181;
            v184 = *(_QWORD *)v183;
            v185 = *((_QWORD *)v183 + 1);
            v186 = v183[16];
            swift_bridgeObjectRetain();
            sub_23F135C7C(v184, v185, v186);
            *(_QWORD *)v182 = v184;
            *((_QWORD *)v182 + 1) = v185;
            v182[16] = v186;
            swift_storeEnumTagMultiPayload();
            break;
          case 2:
            *v12 = (uint64_t)*v13;
            swift_bridgeObjectRetain();
            goto LABEL_73;
          case 1:
            *v12 = (uint64_t)*v13;
            v12[1] = (uint64_t)v13[1];
            swift_bridgeObjectRetain();
LABEL_73:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
            break;
        }
        v187 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
        v188 = *(int *)(v187 + 20);
        v189 = (char *)v12 + v188;
        v190 = (char *)v13 + v188;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v13 + v188, 1, v6))
        {
          v191 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v189, v190, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v189, v190, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v189, 0, 1, v6);
        }
        v192 = *(int *)(v187 + 24);
        v106 = (char *)v12 + v192;
        v107 = (char *)v13 + v192;
        if (*((_QWORD *)v107 + 1))
        {
LABEL_104:
          *(_QWORD *)v106 = *(_QWORD *)v107;
          *((_QWORD *)v106 + 1) = *((_QWORD *)v107 + 1);
          *((_QWORD *)v106 + 2) = *((_QWORD *)v107 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v193 = *(_OWORD *)v107;
          *((_QWORD *)v106 + 2) = *((_QWORD *)v107 + 2);
          *(_OWORD *)v106 = v193;
        }
LABEL_111:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Fu:
        type metadata accessor for StatementOutcome(0);
        v71 = (char *)&loc_23F202A50 + 4 * word_23F279272[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x22u:
        (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v12, v13, v6);
        v72 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
        *((_BYTE *)v12 + *(int *)(v72 + 20)) = *((_BYTE *)v13 + *(int *)(v72 + 20));
        v73 = *(int *)(v72 + 24);
        v74 = (char *)v12 + v73;
        v75 = (char *)v13 + v73;
        *(_DWORD *)v74 = *(_DWORD *)v75;
        *((_QWORD *)v74 + 1) = *((_QWORD *)v75 + 1);
        *((_QWORD *)v74 + 2) = *((_QWORD *)v75 + 2);
        swift_bridgeObjectRetain();
        goto LABEL_111;
      case 0x23u:
        (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v12, v13, v6);
        v76 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
        v77 = (uint64_t *)((char *)v12 + v76);
        v78 = (id *)((char *)v13 + v76);
        *v77 = *v78;
        v77[1] = v78[1];
        v77[2] = v78[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_111;
      case 0x24u:
        v79 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
          case 5u:
          case 7u:
          case 8u:
            (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v12, v13, v6);
            goto LABEL_107;
          case 2u:
            v130 = *(void (**)(uint64_t *, id *, uint64_t))(v7 + 16);
            v130(v12, v13, v6);
            v131 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
            *(uint64_t *)((char *)v12 + v131[5]) = *(uint64_t *)((char *)v13 + v131[5]);
            *(uint64_t *)((char *)v12 + v131[6]) = *(uint64_t *)((char *)v13 + v131[6]);
            v132 = v131[7];
            v133 = (char *)v12 + v132;
            v134 = (char *)v13 + v132;
            swift_bridgeObjectRetain();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v134, 1, v6))
            {
              v135 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
            }
            else
            {
              v130((uint64_t *)v133, (id *)v134, v6);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v133, 0, 1, v6);
            }
            v195 = v131[8];
            v196 = (uint64_t *)((char *)v12 + v195);
            v197 = (id *)((char *)v13 + v195);
            *v196 = *v197;
            v196[1] = v197[1];
            *(uint64_t *)((char *)v12 + v131[9]) = *(uint64_t *)((char *)v13 + v131[9]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
            goto LABEL_111;
          case 4u:
            (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v12, v13, v6);
            v136 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
            *(uint64_t *)((char *)v12 + *(int *)(v136 + 20)) = *(uint64_t *)((char *)v13 + *(int *)(v136 + 20));
            swift_bridgeObjectRetain();
            goto LABEL_107;
          case 9u:
            v137 = *(void (**)(uint64_t *, id *, uint64_t))(v7 + 16);
            v137(v12, v13, v6);
            v138 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
            v137((uint64_t *)((char *)v12 + *(int *)(v138 + 20)), (id *)((char *)v13 + *(int *)(v138 + 20)), v6);
            v139 = *(int *)(v138 + 24);
            v140 = (char *)v12 + v139;
            v141 = (char *)v13 + v139;
            v142 = *((_QWORD *)v141 + 1);
            if (v142 >> 60 == 15)
            {
              *(_OWORD *)v140 = *(_OWORD *)v141;
            }
            else
            {
              v194 = *(_QWORD *)v141;
              sub_23F131170(*(_QWORD *)v141, *((_QWORD *)v141 + 1));
              *(_QWORD *)v140 = v194;
              *((_QWORD *)v140 + 1) = v142;
            }
LABEL_107:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
            break;
        }
        goto LABEL_111;
      case 0x25u:
        type metadata accessor for SessionServerDebuggerEvent.Payload(0);
        v80 = (char *)&loc_23F202C88 + 4 * word_23F279242[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x26u:
        v81 = (uint64_t)*v13;
        v82 = (uint64_t)v13[1];
        v83 = (uint64_t)v13[2];
        v84 = (uint64_t)v13[3];
        v85 = (uint64_t)v13[4];
        v86 = (uint64_t)v13[5];
        v87 = (uint64_t)v13[6];
        v88 = (uint64_t)v13[7];
        sub_23F135CF4(v81, v82, v83, v84, v85, v86, v87);
        *v12 = v81;
        v12[1] = v82;
        v12[2] = v83;
        v12[3] = v84;
        v12[4] = v85;
        v12[5] = v86;
        v12[6] = v87;
        v12[7] = v88;
        goto LABEL_111;
      case 0x27u:
        *v12 = (uint64_t)*v13;
        v12[1] = (uint64_t)v13[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_111;
      default:
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t initializeWithTake for SessionClientMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  int EnumCaseMultiPayload;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  int *v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  _BYTE *v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  int *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  int *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  int *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  int *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  int *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  int *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  int *v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  int *v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  int *v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  int *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  _OWORD *v251;
  _OWORD *v252;
  __int128 v253;
  __int128 v254;
  uint64_t v255;
  _OWORD *v256;
  _OWORD *v257;
  __int128 v258;
  __int128 v259;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char *__src;
  char *__srca;
  char *__srcb;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *__dst;
  int *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;
  char *__dstg;
  char *__dsth;
  char *__dsti;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = type metadata accessor for MessagePayload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v12 = type metadata accessor for MessagePayload.RequestContent(0);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v6))
        {
          v13 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          v7((uint64_t)v9, (uint64_t)v10, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
        }
        v119 = (int *)type metadata accessor for SystemPromptResolution(0);
        v7((uint64_t)v9 + v119[5], (uint64_t)v10 + v119[5], v6);
        v120 = v119[6];
        v121 = (char *)v9 + v120;
        v122 = (char *)v10 + v120;
        v123 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v124 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(v121, v122, v124);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
        }
        v125 = v119[7];
        v126 = (char *)v9 + v125;
        v127 = (char *)v10 + v125;
        *(_OWORD *)v126 = *(_OWORD *)v127;
        *((_QWORD *)v126 + 2) = *((_QWORD *)v127 + 2);
        v128 = v119[8];
        v129 = (char *)v9 + v128;
        v130 = (char *)v10 + v128;
        v129[16] = v130[16];
        *(_OWORD *)v129 = *(_OWORD *)v130;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      v131 = (int *)type metadata accessor for MessagePayload.Request(0);
      *(_QWORD *)((char *)v9 + v131[5]) = *(_QWORD *)((char *)v10 + v131[5]);
      *((_BYTE *)v9 + v131[6]) = *((_BYTE *)v10 + v131[6]);
      v132 = v131[7];
      v133 = (char *)v9 + v132;
      v134 = (char *)v10 + v132;
      *(_OWORD *)v133 = *(_OWORD *)v134;
      v133[16] = v134[16];
      v135 = v131[8];
      v136 = (char *)v9 + v135;
      v137 = (char *)v10 + v135;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10 + v135, 1, v6))
      {
        v138 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v136, (uint64_t)v137, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v136, 0, 1, v6);
      }
      v139 = v131[9];
      v140 = (char *)v9 + v139;
      v141 = (char *)v10 + v139;
      *(_OWORD *)v140 = *(_OWORD *)v141;
      *((_QWORD *)v140 + 2) = *((_QWORD *)v141 + 2);
      goto LABEL_138;
    case 4u:
      *v9 = *v10;
      v14 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v17 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      goto LABEL_138;
    case 0xDu:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      v18 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
      v7((uint64_t)v9 + v18[5], (uint64_t)v10 + v18[5], v6);
      *(_OWORD *)((char *)v9 + v18[6]) = *(_OWORD *)((char *)v10 + v18[6]);
      *(_OWORD *)((char *)v9 + v18[7]) = *(_OWORD *)((char *)v10 + v18[7]);
      *(_OWORD *)((char *)v9 + v18[8]) = *(_OWORD *)((char *)v10 + v18[8]);
      *(_QWORD *)((char *)v9 + v18[9]) = *(_QWORD *)((char *)v10 + v18[9]);
      goto LABEL_138;
    case 0xEu:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      v19 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
      v20 = (char *)v9 + v19;
      v21 = (char *)v10 + v19;
      v22 = type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        v74 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v20, v21, v74);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_138;
    case 0x10u:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      v23 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
      *(_OWORD *)((char *)v9 + v23[5]) = *(_OWORD *)((char *)v10 + v23[5]);
      *(_QWORD *)((char *)v9 + v23[6]) = *(_QWORD *)((char *)v10 + v23[6]);
      *(_QWORD *)((char *)v9 + v23[7]) = *(_QWORD *)((char *)v10 + v23[7]);
      *(_OWORD *)((char *)v9 + v23[8]) = *(_OWORD *)((char *)v10 + v23[8]);
      goto LABEL_138;
    case 0x11u:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      v24 = type metadata accessor for MessagePayload.ClientActionResult(0);
      v25 = *(int *)(v24 + 20);
      v26 = (char *)v9 + v25;
      v27 = (char *)v10 + v25;
      v28 = type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v29 = sub_23F268078();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v26, v27, v29);
          v30 = type metadata accessor for ActionSuccess(0);
          v31 = *(int *)(v30 + 20);
          v267 = v30;
          __dst = &v26[v31];
          __src = &v27[v31];
          v261 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)__src, 1, v261))
          {
            v32 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            v7((uint64_t)__dst, (uint64_t)__src, v6);
            *(_OWORD *)&__dst[*(int *)(v261 + 20)] = *(_OWORD *)&__src[*(int *)(v261 + 20)];
            *(_OWORD *)&__dst[*(int *)(v261 + 24)] = *(_OWORD *)&__src[*(int *)(v261 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v261);
          }
          v26[*(int *)(v267 + 24)] = v27[*(int *)(v267 + 24)];
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          *(_OWORD *)v26 = *(_OWORD *)v27;
          v162 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v163 = &v26[v162];
          v164 = &v27[v162];
          v165 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(v163, v164, v165);
          goto LABEL_84;
        case 4u:
          *(_OWORD *)v26 = *(_OWORD *)v27;
          *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
          v26[24] = v27[24];
          v166 = (int *)type metadata accessor for ParameterConfirmation(0);
          v167 = v166[6];
          v168 = &v26[v167];
          __dstd = &v27[v167];
          v169 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(v168, __dstd, v169);
          *(_OWORD *)&v26[v166[7]] = *(_OWORD *)&v27[v166[7]];
          *(_OWORD *)&v26[v166[8]] = *(_OWORD *)&v27[v166[8]];
          goto LABEL_84;
        case 6u:
          *(_OWORD *)v26 = *(_OWORD *)v27;
          v170 = type metadata accessor for ParameterNotAllowed(0);
          v171 = *(int *)(v170 + 20);
          v172 = &v26[v171];
          __dste = &v27[v171];
          v173 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(v172, __dste, v173);
          v26[*(int *)(v170 + 24)] = v27[*(int *)(v170 + 24)];
          goto LABEL_84;
        case 7u:
          *(_OWORD *)v26 = *(_OWORD *)v27;
          v174 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v175 = &v26[v174];
          v176 = &v27[v174];
          v177 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v175, v176, v177);
LABEL_84:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          break;
      }
      memcpy((char *)v9 + *(int *)(v24 + 24), (char *)v10 + *(int *)(v24 + 24), 0xBAuLL);
      goto LABEL_138;
    case 0x14u:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      v52 = type metadata accessor for SystemPrompt(0);
      *(_OWORD *)((char *)v9 + *(int *)(v52 + 20)) = *(_OWORD *)((char *)v10 + *(int *)(v52 + 20));
      v53 = *(int *)(v52 + 24);
      v54 = (char *)v9 + v53;
      v55 = (char *)v10 + v53;
      v56 = type metadata accessor for SystemPrompt.Prompt(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_OWORD *)v54 = *(_OWORD *)v55;
        *((_QWORD *)v54 + 2) = *((_QWORD *)v55 + 2);
        v54[24] = v55[24];
        v114 = (int *)type metadata accessor for ParameterConfirmation(0);
        v115 = v114[6];
        v116 = &v54[v115];
        v117 = &v55[v115];
        v118 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
        *(_OWORD *)&v54[v114[7]] = *(_OWORD *)&v55[v114[7]];
        *(_OWORD *)&v54[v114[8]] = *(_OWORD *)&v55[v114[8]];
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          goto LABEL_138;
        }
        *(_OWORD *)v54 = *(_OWORD *)v55;
        v58 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        v59 = &v54[v58];
        v60 = &v55[v58];
        v61 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
      }
LABEL_137:
      swift_storeEnumTagMultiPayload();
LABEL_138:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x15u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v6))
      {
        v62 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v9, (uint64_t)v10, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
      }
      v81 = (int *)type metadata accessor for SystemPromptResolution(0);
      v7((uint64_t)v9 + v81[5], (uint64_t)v10 + v81[5], v6);
      v82 = v81[6];
      v83 = (char *)v9 + v82;
      v84 = (char *)v10 + v82;
      v85 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v86 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v83, v84, v86);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      v87 = v81[7];
      v88 = (char *)v9 + v87;
      v89 = (char *)v10 + v87;
      *(_OWORD *)v88 = *(_OWORD *)v89;
      *((_QWORD *)v88 + 2) = *((_QWORD *)v89 + 2);
      v90 = v81[8];
      v91 = (char *)v9 + v90;
      v92 = (char *)v10 + v90;
      v91[16] = v92[16];
      *(_OWORD *)v91 = *(_OWORD *)v92;
      goto LABEL_138;
    case 0x16u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v6))
      {
        v63 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v9, (uint64_t)v10, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
      }
      v93 = (int *)type metadata accessor for ActionResponse(0);
      *(_OWORD *)((char *)v9 + v93[5]) = *(_OWORD *)((char *)v10 + v93[5]);
      *(_OWORD *)((char *)v9 + v93[6]) = *(_OWORD *)((char *)v10 + v93[6]);
      v94 = v93[7];
      v95 = (char *)v9 + v94;
      v96 = (char *)v10 + v94;
      v97 = type metadata accessor for ActionOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v98 = sub_23F268078();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v95, v96, v98);
          v99 = type metadata accessor for ActionSuccess(0);
          v100 = *(int *)(v99 + 20);
          v268 = v99;
          __dstb = &v95[v100];
          __srca = &v96[v100];
          v262 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)__srca, 1, v262))
          {
            v101 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(__dstb, __srca, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
          }
          else
          {
            v7((uint64_t)__dstb, (uint64_t)__srca, v6);
            *(_OWORD *)&__dstb[*(int *)(v262 + 20)] = *(_OWORD *)&__srca[*(int *)(v262 + 20)];
            *(_OWORD *)&__dstb[*(int *)(v262 + 24)] = *(_OWORD *)&__srca[*(int *)(v262 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dstb, 0, 1, v262);
          }
          v95[*(int *)(v268 + 24)] = v96[*(int *)(v268 + 24)];
          goto LABEL_123;
        case 3u:
          *(_OWORD *)v95 = *(_OWORD *)v96;
          v196 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v197 = &v95[v196];
          v198 = &v96[v196];
          v199 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v197, v198, v199);
          goto LABEL_123;
        case 4u:
          *(_OWORD *)v95 = *(_OWORD *)v96;
          *((_QWORD *)v95 + 2) = *((_QWORD *)v96 + 2);
          v95[24] = v96[24];
          v200 = (int *)type metadata accessor for ParameterConfirmation(0);
          v201 = v200[6];
          v202 = &v95[v201];
          __dstf = &v96[v201];
          v203 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v202, __dstf, v203);
          *(_OWORD *)&v95[v200[7]] = *(_OWORD *)&v96[v200[7]];
          *(_OWORD *)&v95[v200[8]] = *(_OWORD *)&v96[v200[8]];
          goto LABEL_123;
        case 6u:
          *(_OWORD *)v95 = *(_OWORD *)v96;
          v204 = type metadata accessor for ParameterNotAllowed(0);
          v205 = *(int *)(v204 + 20);
          v206 = &v95[v205];
          __dstg = &v96[v205];
          v207 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 32))(v206, __dstg, v207);
          v95[*(int *)(v204 + 24)] = v96[*(int *)(v204 + 24)];
          goto LABEL_123;
        case 7u:
          *(_OWORD *)v95 = *(_OWORD *)v96;
          v208 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v209 = &v95[v208];
          v210 = &v96[v208];
          v211 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 32))(v209, v210, v211);
LABEL_123:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          break;
      }
      memcpy((char *)v9 + v93[8], (char *)v10 + v93[8], 0xBAuLL);
      v250 = v93[9];
      v251 = (_OWORD *)((char *)v9 + v250);
      v252 = (_OWORD *)((char *)v10 + v250);
      v253 = v252[1];
      *v251 = *v252;
      v251[1] = v253;
      v254 = v252[3];
      v251[2] = v252[2];
      v251[3] = v254;
      *(_OWORD *)((char *)v9 + v93[10]) = *(_OWORD *)((char *)v10 + v93[10]);
      goto LABEL_138;
    case 0x17u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v6))
      {
        v64 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v9, (uint64_t)v10, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
      }
      v102 = (int *)type metadata accessor for SystemResponse(0);
      v103 = v102[5];
      v104 = (char *)v9 + v103;
      v105 = (char *)v10 + v103;
      *(_OWORD *)v104 = *(_OWORD *)v105;
      *((_QWORD *)v104 + 2) = *((_QWORD *)v105 + 2);
      *(_OWORD *)((char *)v9 + v102[6]) = *(_OWORD *)((char *)v10 + v102[6]);
      v106 = v102[7];
      v107 = (char *)v9 + v106;
      v108 = (char *)v10 + v106;
      v109 = type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v110 = sub_23F268078();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v107, v108, v110);
          v111 = type metadata accessor for ActionSuccess(0);
          v112 = *(int *)(v111 + 20);
          v269 = v111;
          __dstc = &v107[v112];
          __srcb = &v108[v112];
          v263 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)__srcb, 1, v263))
          {
            v113 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(__dstc, __srcb, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
          }
          else
          {
            v7((uint64_t)__dstc, (uint64_t)__srcb, v6);
            *(_OWORD *)&__dstc[*(int *)(v263 + 20)] = *(_OWORD *)&__srcb[*(int *)(v263 + 20)];
            *(_OWORD *)&__dstc[*(int *)(v263 + 24)] = *(_OWORD *)&__srcb[*(int *)(v263 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dstc, 0, 1, v263);
          }
          v107[*(int *)(v269 + 24)] = v108[*(int *)(v269 + 24)];
          goto LABEL_127;
        case 3u:
          *(_OWORD *)v107 = *(_OWORD *)v108;
          v212 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v213 = &v107[v212];
          v214 = &v108[v212];
          v215 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 32))(v213, v214, v215);
          goto LABEL_127;
        case 4u:
          *(_OWORD *)v107 = *(_OWORD *)v108;
          *((_QWORD *)v107 + 2) = *((_QWORD *)v108 + 2);
          v107[24] = v108[24];
          v216 = (int *)type metadata accessor for ParameterConfirmation(0);
          v217 = v216[6];
          v218 = &v107[v217];
          __dsth = &v108[v217];
          v219 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 32))(v218, __dsth, v219);
          *(_OWORD *)&v107[v216[7]] = *(_OWORD *)&v108[v216[7]];
          *(_OWORD *)&v107[v216[8]] = *(_OWORD *)&v108[v216[8]];
          goto LABEL_127;
        case 6u:
          *(_OWORD *)v107 = *(_OWORD *)v108;
          v220 = type metadata accessor for ParameterNotAllowed(0);
          v221 = *(int *)(v220 + 20);
          v222 = &v107[v221];
          __dsti = &v108[v221];
          v223 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 32))(v222, __dsti, v223);
          v107[*(int *)(v220 + 24)] = v108[*(int *)(v220 + 24)];
          goto LABEL_127;
        case 7u:
          *(_OWORD *)v107 = *(_OWORD *)v108;
          v224 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v225 = &v107[v224];
          v226 = &v108[v224];
          v227 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v227 - 8) + 32))(v225, v226, v227);
LABEL_127:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
          break;
      }
      v255 = v102[8];
      v256 = (_OWORD *)((char *)v9 + v255);
      v257 = (_OWORD *)((char *)v10 + v255);
      v258 = v257[1];
      *v256 = *v257;
      v256[1] = v258;
      v259 = v257[3];
      v256[2] = v257[2];
      v256[3] = v259;
      *(_OWORD *)((char *)v9 + v102[9]) = *(_OWORD *)((char *)v10 + v102[9]);
      *(_QWORD *)((char *)v9 + v102[10]) = *(_QWORD *)((char *)v10 + v102[10]);
      goto LABEL_138;
    case 0x1Cu:
      *v9 = *v10;
      v33 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
      v34 = *(int *)(v33 + 20);
      v35 = (char *)v9 + v34;
      v36 = (char *)v10 + v34;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10 + v34, 1, v6))
      {
        v37 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v35, (uint64_t)v36, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v35, 0, 1, v6);
      }
      v75 = *(int *)(v33 + 24);
      v76 = (char *)v9 + v75;
      v77 = (char *)v10 + v75;
      *(_OWORD *)v76 = *(_OWORD *)v77;
      *((_QWORD *)v76 + 2) = *((_QWORD *)v77 + 2);
      goto LABEL_138;
    case 0x1Du:
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v38 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
      v39 = *(int *)(v38 + 20);
      v40 = (char *)v9 + v39;
      v41 = (char *)v10 + v39;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10 + v39, 1, v6))
      {
        v42 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v40, (uint64_t)v41, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v40, 0, 1, v6);
      }
      v78 = *(int *)(v38 + 24);
      v79 = (char *)v9 + v78;
      v80 = (char *)v10 + v78;
      *(_OWORD *)v79 = *(_OWORD *)v80;
      *((_QWORD *)v79 + 2) = *((_QWORD *)v80 + 2);
      goto LABEL_138;
    case 0x1Eu:
      v43 = type metadata accessor for MessagePayload.RequestContent(0);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v6))
        {
          v44 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          v7((uint64_t)v9, (uint64_t)v10, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
        }
        v142 = (int *)type metadata accessor for SystemPromptResolution(0);
        v7((uint64_t)v9 + v142[5], (uint64_t)v10 + v142[5], v6);
        v143 = v142[6];
        v144 = (char *)v9 + v143;
        v145 = (char *)v10 + v143;
        v146 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v147 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(v144, v145, v147);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        }
        v148 = v142[7];
        v149 = (char *)v9 + v148;
        v150 = (char *)v10 + v148;
        *(_OWORD *)v149 = *(_OWORD *)v150;
        *((_QWORD *)v149 + 2) = *((_QWORD *)v150 + 2);
        v151 = v142[8];
        v152 = (char *)v9 + v151;
        v153 = (char *)v10 + v151;
        v152[16] = v153[16];
        *(_OWORD *)v152 = *(_OWORD *)v153;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      v154 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
      v155 = *(int *)(v154 + 20);
      v156 = (char *)v9 + v155;
      v157 = (char *)v10 + v155;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10 + v155, 1, v6))
      {
        v158 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v156, (uint64_t)v157, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v156, 0, 1, v6);
      }
      v159 = *(int *)(v154 + 24);
      v160 = (char *)v9 + v159;
      v161 = (char *)v10 + v159;
      *(_OWORD *)v160 = *(_OWORD *)v161;
      *((_QWORD *)v160 + 2) = *((_QWORD *)v161 + 2);
      goto LABEL_138;
    case 0x1Fu:
      v45 = type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v46 = sub_23F268078();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v9, v10, v46);
          __dsta = (int *)type metadata accessor for ActionSuccess(0);
          v47 = __dsta[5];
          v48 = (char *)v9 + v47;
          v49 = (char *)v10 + v47;
          v50 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v49, 1, v50))
          {
            v51 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          }
          else
          {
            v7((uint64_t)v48, (uint64_t)v49, v6);
            *(_OWORD *)&v48[*(int *)(v50 + 20)] = *(_OWORD *)&v49[*(int *)(v50 + 20)];
            *(_OWORD *)&v48[*(int *)(v50 + 24)] = *(_OWORD *)&v49[*(int *)(v50 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v48, 0, 1, v50);
          }
          *((_BYTE *)v9 + __dsta[6]) = *((_BYTE *)v10 + __dsta[6]);
          goto LABEL_119;
        case 3u:
          *v9 = *v10;
          v178 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v179 = (char *)v9 + v178;
          v180 = (char *)v10 + v178;
          v181 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v179, v180, v181);
          goto LABEL_119;
        case 4u:
          *v9 = *v10;
          *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
          *((_BYTE *)v9 + 24) = *((_BYTE *)v10 + 24);
          v182 = (int *)type metadata accessor for ParameterConfirmation(0);
          v183 = v182[6];
          v184 = (char *)v9 + v183;
          v185 = (char *)v10 + v183;
          v186 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v184, v185, v186);
          *(_OWORD *)((char *)v9 + v182[7]) = *(_OWORD *)((char *)v10 + v182[7]);
          *(_OWORD *)((char *)v9 + v182[8]) = *(_OWORD *)((char *)v10 + v182[8]);
          goto LABEL_119;
        case 6u:
          *v9 = *v10;
          v187 = type metadata accessor for ParameterNotAllowed(0);
          v188 = *(int *)(v187 + 20);
          v189 = (char *)v9 + v188;
          v190 = (char *)v10 + v188;
          v191 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v189, v190, v191);
          *((_BYTE *)v9 + *(int *)(v187 + 24)) = *((_BYTE *)v10 + *(int *)(v187 + 24));
          goto LABEL_119;
        case 7u:
          *v9 = *v10;
          v192 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v193 = (char *)v9 + v192;
          v194 = (char *)v10 + v192;
          v195 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v193, v194, v195);
LABEL_119:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          break;
      }
      v249 = type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
      *(_QWORD *)((char *)v9 + *(int *)(v249 + 20)) = *(_QWORD *)((char *)v10 + *(int *)(v249 + 20));
      goto LABEL_138;
    case 0x22u:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      v65 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
      *((_BYTE *)v9 + *(int *)(v65 + 20)) = *((_BYTE *)v10 + *(int *)(v65 + 20));
      v66 = *(int *)(v65 + 24);
      v67 = (char *)v9 + v66;
      v68 = (char *)v10 + v66;
      *((_QWORD *)v67 + 2) = *((_QWORD *)v68 + 2);
      *(_OWORD *)v67 = *(_OWORD *)v68;
      goto LABEL_138;
    case 0x23u:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      v69 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
      v70 = (char *)v9 + v69;
      v71 = (char *)v10 + v69;
      *(_OWORD *)v70 = *(_OWORD *)v71;
      *((_QWORD *)v70 + 2) = *((_QWORD *)v71 + 2);
      goto LABEL_138;
    case 0x24u:
      v72 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
        case 5u:
        case 7u:
        case 8u:
          v7((uint64_t)v9, (uint64_t)v10, v6);
          goto LABEL_131;
        case 2u:
          v7((uint64_t)v9, (uint64_t)v10, v6);
          v228 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
          *(_QWORD *)((char *)v9 + v228[5]) = *(_QWORD *)((char *)v10 + v228[5]);
          *(_QWORD *)((char *)v9 + v228[6]) = *(_QWORD *)((char *)v10 + v228[6]);
          v229 = v228[7];
          v230 = (char *)v9 + v229;
          v231 = (char *)v10 + v229;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10 + v229, 1, v6))
          {
            v232 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v230, v231, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
          }
          else
          {
            v7((uint64_t)v230, (uint64_t)v231, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v230, 0, 1, v6);
          }
          *(_OWORD *)((char *)v9 + v228[8]) = *(_OWORD *)((char *)v10 + v228[8]);
          *(_QWORD *)((char *)v9 + v228[9]) = *(_QWORD *)((char *)v10 + v228[9]);
          goto LABEL_131;
        case 4u:
          v7((uint64_t)v9, (uint64_t)v10, v6);
          v233 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
          *(_QWORD *)((char *)v9 + *(int *)(v233 + 20)) = *(_QWORD *)((char *)v10 + *(int *)(v233 + 20));
          goto LABEL_131;
        case 9u:
          v7((uint64_t)v9, (uint64_t)v10, v6);
          v234 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
          v7((uint64_t)v9 + *(int *)(v234 + 20), (uint64_t)v10 + *(int *)(v234 + 20), v6);
          *(_OWORD *)((char *)v9 + *(int *)(v234 + 24)) = *(_OWORD *)((char *)v10 + *(int *)(v234 + 24));
LABEL_131:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
          break;
      }
      goto LABEL_138;
    case 0x25u:
      v73 = type metadata accessor for SessionServerDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 7u:
        case 8u:
        case 0xAu:
          v7((uint64_t)v9, (uint64_t)v10, v6);
          goto LABEL_137;
        case 1u:
          *v9 = *v10;
          v235 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
          v236 = v235[6];
          v237 = (char *)v9 + v236;
          v238 = (char *)v10 + v236;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10 + v236, 1, v6))
          {
            v239 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v237, v238, *(_QWORD *)(*(_QWORD *)(v239 - 8) + 64));
          }
          else
          {
            v7((uint64_t)v237, (uint64_t)v238, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v237, 0, 1, v6);
          }
          *(_OWORD *)((char *)v9 + v235[7]) = *(_OWORD *)((char *)v10 + v235[7]);
          *(_QWORD *)((char *)v9 + v235[8]) = *(_QWORD *)((char *)v10 + v235[8]);
          goto LABEL_137;
        case 5u:
          *v9 = *v10;
          v240 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
          v241 = *(int *)(v240 + 24);
          v242 = (char *)v9 + v241;
          v243 = (char *)v10 + v241;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10 + v241, 1, v6))
          {
            v244 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v242, v243, *(_QWORD *)(*(_QWORD *)(v244 - 8) + 64));
          }
          else
          {
            v7((uint64_t)v242, (uint64_t)v243, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v242, 0, 1, v6);
          }
          *(_QWORD *)((char *)v9 + *(int *)(v240 + 28)) = *(_QWORD *)((char *)v10 + *(int *)(v240 + 28));
          goto LABEL_137;
        case 6u:
          v7((uint64_t)v9, (uint64_t)v10, v6);
          v245 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
          *(_QWORD *)((char *)v9 + *(int *)(v245 + 20)) = *(_QWORD *)((char *)v10 + *(int *)(v245 + 20));
          goto LABEL_137;
        case 9u:
          v7((uint64_t)v9, (uint64_t)v10, v6);
          v246 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
          *((_BYTE *)v9 + *(int *)(v246 + 20)) = *((_BYTE *)v10 + *(int *)(v246 + 20));
          goto LABEL_137;
        case 0xBu:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *(_OWORD *)((char *)v9 + 8) = *(_OWORD *)((char *)v10 + 8);
          *(_OWORD *)((char *)v9 + 24) = *(_OWORD *)((char *)v10 + 24);
          *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
          v247 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
          v7((uint64_t)v9 + v247[8], (uint64_t)v10 + v247[8], v6);
          *(_OWORD *)((char *)v9 + v247[9]) = *(_OWORD *)((char *)v10 + v247[9]);
          *(_OWORD *)((char *)v9 + v247[10]) = *(_OWORD *)((char *)v10 + v247[10]);
          *(_OWORD *)((char *)v9 + v247[11]) = *(_OWORD *)((char *)v10 + v247[11]);
          goto LABEL_137;
        case 0xCu:
          v7((uint64_t)v9, (uint64_t)v10, v6);
          v248 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
          *((_BYTE *)v9 + *(int *)(v248 + 20)) = *((_BYTE *)v10 + *(int *)(v248 + 20));
          goto LABEL_137;
        default:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          break;
      }
      goto LABEL_138;
    default:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      return a1;
  }
}

uint64_t assignWithTake for SessionClientMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(_OWORD *, _OWORD *, uint64_t);
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int EnumCaseMultiPayload;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int *v100;
  uint64_t v101;
  _BYTE *v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  _BYTE *v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  int *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  int *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  int *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  int *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  int *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  int *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  int *v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  void (*v235)(char *, char *, uint64_t);
  int *v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  void (*v242)(_OWORD *, _OWORD *, uint64_t);
  uint64_t v243;
  int *v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  int *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  _OWORD *v260;
  _OWORD *v261;
  __int128 v262;
  __int128 v263;
  uint64_t v264;
  _OWORD *v265;
  _OWORD *v266;
  __int128 v267;
  __int128 v268;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *__src;
  char *__srca;
  char *__srcb;
  uint64_t v276;
  char *v277;
  char *v278;
  char *__dst;
  int *__dsta;
  int *__dstb;
  int *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;
  char *__dstg;
  char *__dsth;
  char *__dsti;

  v6 = sub_23F267D84();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v13 = *(int *)(a3 + 24);
    v14 = (_OWORD *)(a1 + v13);
    v15 = (_OWORD *)(a2 + v13);
    sub_23F1BE0BC(a1 + v13, type metadata accessor for MessagePayload);
    v16 = type metadata accessor for MessagePayload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v17 = type metadata accessor for MessagePayload.RequestContent(0);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v6))
          {
            v18 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          }
          else
          {
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v6);
          }
          v126 = (int *)type metadata accessor for SystemPromptResolution(0);
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v14 + v126[5], (char *)v15 + v126[5], v6);
          v127 = v126[6];
          v128 = (char *)v14 + v127;
          v129 = (char *)v15 + v127;
          v130 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v131 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(v128, v129, v131);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
          }
          v132 = v126[7];
          v133 = (char *)v14 + v132;
          v134 = (char *)v15 + v132;
          *(_OWORD *)v133 = *(_OWORD *)v134;
          *((_QWORD *)v133 + 2) = *((_QWORD *)v134 + 2);
          v135 = v126[8];
          v136 = (char *)v14 + v135;
          v137 = (char *)v15 + v135;
          v136[16] = v137[16];
          *(_OWORD *)v136 = *(_OWORD *)v137;
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        v138 = (int *)type metadata accessor for MessagePayload.Request(0);
        *(_QWORD *)((char *)v14 + v138[5]) = *(_QWORD *)((char *)v15 + v138[5]);
        *((_BYTE *)v14 + v138[6]) = *((_BYTE *)v15 + v138[6]);
        v139 = v138[7];
        v140 = (char *)v14 + v139;
        v141 = (char *)v15 + v139;
        *(_OWORD *)v140 = *(_OWORD *)v141;
        v140[16] = v141[16];
        v142 = v138[8];
        v143 = (char *)v14 + v142;
        v144 = (char *)v15 + v142;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15 + v142, 1, v6))
        {
          v145 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v143, v144, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v143, 0, 1, v6);
        }
        v146 = v138[9];
        v147 = (char *)v14 + v146;
        v148 = (char *)v15 + v146;
        *(_OWORD *)v147 = *(_OWORD *)v148;
        *((_QWORD *)v147 + 2) = *((_QWORD *)v148 + 2);
        goto LABEL_139;
      case 4u:
        *v14 = *v15;
        v19 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
        v20 = (char *)v14 + v19;
        v21 = (char *)v15 + v19;
        v22 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
        goto LABEL_139;
      case 0xDu:
        v23 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32);
        v23(v14, v15, v6);
        v24 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
        v23((_OWORD *)((char *)v14 + v24[5]), (_OWORD *)((char *)v15 + v24[5]), v6);
        *(_OWORD *)((char *)v14 + v24[6]) = *(_OWORD *)((char *)v15 + v24[6]);
        *(_OWORD *)((char *)v14 + v24[7]) = *(_OWORD *)((char *)v15 + v24[7]);
        *(_OWORD *)((char *)v14 + v24[8]) = *(_OWORD *)((char *)v15 + v24[8]);
        *(_QWORD *)((char *)v14 + v24[9]) = *(_QWORD *)((char *)v15 + v24[9]);
        goto LABEL_139;
      case 0xEu:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
        v25 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
        v26 = (char *)v14 + v25;
        v27 = (char *)v15 + v25;
        v28 = type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v81 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v26, v27, v81);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_139;
      case 0x10u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
        v29 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
        *(_OWORD *)((char *)v14 + v29[5]) = *(_OWORD *)((char *)v15 + v29[5]);
        *(_QWORD *)((char *)v14 + v29[6]) = *(_QWORD *)((char *)v15 + v29[6]);
        *(_QWORD *)((char *)v14 + v29[7]) = *(_QWORD *)((char *)v15 + v29[7]);
        *(_OWORD *)((char *)v14 + v29[8]) = *(_OWORD *)((char *)v15 + v29[8]);
        goto LABEL_139;
      case 0x11u:
        v30 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v30((char *)v14, (char *)v15, v6);
        v31 = type metadata accessor for MessagePayload.ClientActionResult(0);
        v32 = *(int *)(v31 + 20);
        v33 = (char *)v14 + v32;
        v34 = (char *)v15 + v32;
        v35 = type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v36 = sub_23F268078();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v33, v34, v36);
            v37 = type metadata accessor for ActionSuccess(0);
            v38 = *(int *)(v37 + 20);
            v276 = v37;
            __dst = &v33[v38];
            __src = &v34[v38];
            v270 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)__src, 1, v270))
            {
              v39 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
            }
            else
            {
              v30(__dst, __src, v6);
              *(_OWORD *)&__dst[*(int *)(v270 + 20)] = *(_OWORD *)&__src[*(int *)(v270 + 20)];
              *(_OWORD *)&__dst[*(int *)(v270 + 24)] = *(_OWORD *)&__src[*(int *)(v270 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v270);
            }
            v33[*(int *)(v276 + 24)] = v34[*(int *)(v276 + 24)];
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            *(_OWORD *)v33 = *(_OWORD *)v34;
            v169 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v170 = &v33[v169];
            v171 = &v34[v169];
            v172 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(v170, v171, v172);
            goto LABEL_85;
          case 4u:
            *(_OWORD *)v33 = *(_OWORD *)v34;
            *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
            v33[24] = v34[24];
            v173 = (int *)type metadata accessor for ParameterConfirmation(0);
            v174 = v173[6];
            v175 = &v33[v174];
            __dstd = &v34[v174];
            v176 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 32))(v175, __dstd, v176);
            *(_OWORD *)&v33[v173[7]] = *(_OWORD *)&v34[v173[7]];
            *(_OWORD *)&v33[v173[8]] = *(_OWORD *)&v34[v173[8]];
            goto LABEL_85;
          case 6u:
            *(_OWORD *)v33 = *(_OWORD *)v34;
            v177 = type metadata accessor for ParameterNotAllowed(0);
            v178 = *(int *)(v177 + 20);
            v179 = &v33[v178];
            __dste = &v34[v178];
            v180 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v179, __dste, v180);
            v33[*(int *)(v177 + 24)] = v34[*(int *)(v177 + 24)];
            goto LABEL_85;
          case 7u:
            *(_OWORD *)v33 = *(_OWORD *)v34;
            v181 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v182 = &v33[v181];
            v183 = &v34[v181];
            v184 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v182, v183, v184);
LABEL_85:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
            break;
        }
        memcpy((char *)v14 + *(int *)(v31 + 24), (char *)v15 + *(int *)(v31 + 24), 0xBAuLL);
        goto LABEL_139;
      case 0x14u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
        v59 = type metadata accessor for SystemPrompt(0);
        *(_OWORD *)((char *)v14 + *(int *)(v59 + 20)) = *(_OWORD *)((char *)v15 + *(int *)(v59 + 20));
        v60 = *(int *)(v59 + 24);
        v61 = (char *)v14 + v60;
        v62 = (char *)v15 + v60;
        v63 = type metadata accessor for SystemPrompt.Prompt(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *(_OWORD *)v61 = *(_OWORD *)v62;
          *((_QWORD *)v61 + 2) = *((_QWORD *)v62 + 2);
          v61[24] = v62[24];
          v121 = (int *)type metadata accessor for ParameterConfirmation(0);
          v122 = v121[6];
          v123 = &v61[v122];
          v124 = &v62[v122];
          v125 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v123, v124, v125);
          *(_OWORD *)&v61[v121[7]] = *(_OWORD *)&v62[v121[7]];
          *(_OWORD *)&v61[v121[8]] = *(_OWORD *)&v62[v121[8]];
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
            goto LABEL_139;
          }
          *(_OWORD *)v61 = *(_OWORD *)v62;
          v65 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v66 = &v61[v65];
          v67 = &v62[v65];
          v68 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
        }
LABEL_138:
        swift_storeEnumTagMultiPayload();
LABEL_139:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x15u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v6))
        {
          v69 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v6);
        }
        v88 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v14 + v88[5], (char *)v15 + v88[5], v6);
        v89 = v88[6];
        v90 = (char *)v14 + v89;
        v91 = (char *)v15 + v89;
        v92 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v93 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v90, v91, v93);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        }
        v94 = v88[7];
        v95 = (char *)v14 + v94;
        v96 = (char *)v15 + v94;
        *(_OWORD *)v95 = *(_OWORD *)v96;
        *((_QWORD *)v95 + 2) = *((_QWORD *)v96 + 2);
        v97 = v88[8];
        v98 = (char *)v14 + v97;
        v99 = (char *)v15 + v97;
        v98[16] = v99[16];
        *(_OWORD *)v98 = *(_OWORD *)v99;
        goto LABEL_139;
      case 0x16u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v6))
        {
          v70 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v6);
        }
        v100 = (int *)type metadata accessor for ActionResponse(0);
        *(_OWORD *)((char *)v14 + v100[5]) = *(_OWORD *)((char *)v15 + v100[5]);
        *(_OWORD *)((char *)v14 + v100[6]) = *(_OWORD *)((char *)v15 + v100[6]);
        v101 = v100[7];
        v102 = (char *)v14 + v101;
        v103 = (char *)v15 + v101;
        v104 = type metadata accessor for ActionOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v105 = sub_23F268078();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v102, v103, v105);
            v106 = type metadata accessor for ActionSuccess(0);
            v107 = *(int *)(v106 + 20);
            v277 = &v102[v107];
            __dstb = (int *)v106;
            __srca = &v103[v107];
            v271 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)__srca, 1, v271))
            {
              v108 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(v277, __srca, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v277, __srca, v6);
              *(_OWORD *)&v277[*(int *)(v271 + 20)] = *(_OWORD *)&__srca[*(int *)(v271 + 20)];
              *(_OWORD *)&v277[*(int *)(v271 + 24)] = *(_OWORD *)&__srca[*(int *)(v271 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v277, 0, 1, v271);
            }
            v102[__dstb[6]] = v103[__dstb[6]];
            goto LABEL_124;
          case 3u:
            *(_OWORD *)v102 = *(_OWORD *)v103;
            v203 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v204 = &v102[v203];
            v205 = &v103[v203];
            v206 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v204, v205, v206);
            goto LABEL_124;
          case 4u:
            *(_OWORD *)v102 = *(_OWORD *)v103;
            *((_QWORD *)v102 + 2) = *((_QWORD *)v103 + 2);
            v102[24] = v103[24];
            v207 = (int *)type metadata accessor for ParameterConfirmation(0);
            v208 = v207[6];
            v209 = &v102[v208];
            __dstf = &v103[v208];
            v210 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 32))(v209, __dstf, v210);
            *(_OWORD *)&v102[v207[7]] = *(_OWORD *)&v103[v207[7]];
            *(_OWORD *)&v102[v207[8]] = *(_OWORD *)&v103[v207[8]];
            goto LABEL_124;
          case 6u:
            *(_OWORD *)v102 = *(_OWORD *)v103;
            v211 = type metadata accessor for ParameterNotAllowed(0);
            v212 = *(int *)(v211 + 20);
            v213 = &v102[v212];
            __dstg = &v103[v212];
            v214 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v213, __dstg, v214);
            v102[*(int *)(v211 + 24)] = v103[*(int *)(v211 + 24)];
            goto LABEL_124;
          case 7u:
            *(_OWORD *)v102 = *(_OWORD *)v103;
            v215 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v216 = &v102[v215];
            v217 = &v103[v215];
            v218 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 32))(v216, v217, v218);
LABEL_124:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
            break;
        }
        memcpy((char *)v14 + v100[8], (char *)v15 + v100[8], 0xBAuLL);
        v259 = v100[9];
        v260 = (_OWORD *)((char *)v14 + v259);
        v261 = (_OWORD *)((char *)v15 + v259);
        v262 = v261[1];
        *v260 = *v261;
        v260[1] = v262;
        v263 = v261[3];
        v260[2] = v261[2];
        v260[3] = v263;
        *(_OWORD *)((char *)v14 + v100[10]) = *(_OWORD *)((char *)v15 + v100[10]);
        goto LABEL_139;
      case 0x17u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v6))
        {
          v71 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v6);
        }
        v109 = (int *)type metadata accessor for SystemResponse(0);
        v110 = v109[5];
        v111 = (char *)v14 + v110;
        v112 = (char *)v15 + v110;
        *(_OWORD *)v111 = *(_OWORD *)v112;
        *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
        *(_OWORD *)((char *)v14 + v109[6]) = *(_OWORD *)((char *)v15 + v109[6]);
        v113 = v109[7];
        v114 = (char *)v14 + v113;
        v115 = (char *)v15 + v113;
        v116 = type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v117 = sub_23F268078();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v114, v115, v117);
            v118 = type metadata accessor for ActionSuccess(0);
            v119 = *(int *)(v118 + 20);
            v278 = &v114[v119];
            __dstc = (int *)v118;
            __srcb = &v115[v119];
            v272 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)__srcb, 1, v272))
            {
              v120 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(v278, __srcb, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v278, __srcb, v6);
              *(_OWORD *)&v278[*(int *)(v272 + 20)] = *(_OWORD *)&__srcb[*(int *)(v272 + 20)];
              *(_OWORD *)&v278[*(int *)(v272 + 24)] = *(_OWORD *)&__srcb[*(int *)(v272 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v278, 0, 1, v272);
            }
            v114[__dstc[6]] = v115[__dstc[6]];
            goto LABEL_128;
          case 3u:
            *(_OWORD *)v114 = *(_OWORD *)v115;
            v219 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v220 = &v114[v219];
            v221 = &v115[v219];
            v222 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 32))(v220, v221, v222);
            goto LABEL_128;
          case 4u:
            *(_OWORD *)v114 = *(_OWORD *)v115;
            *((_QWORD *)v114 + 2) = *((_QWORD *)v115 + 2);
            v114[24] = v115[24];
            v223 = (int *)type metadata accessor for ParameterConfirmation(0);
            v224 = v223[6];
            v225 = &v114[v224];
            __dsth = &v115[v224];
            v226 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 32))(v225, __dsth, v226);
            *(_OWORD *)&v114[v223[7]] = *(_OWORD *)&v115[v223[7]];
            *(_OWORD *)&v114[v223[8]] = *(_OWORD *)&v115[v223[8]];
            goto LABEL_128;
          case 6u:
            *(_OWORD *)v114 = *(_OWORD *)v115;
            v227 = type metadata accessor for ParameterNotAllowed(0);
            v228 = *(int *)(v227 + 20);
            v229 = &v114[v228];
            __dsti = &v115[v228];
            v230 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v230 - 8) + 32))(v229, __dsti, v230);
            v114[*(int *)(v227 + 24)] = v115[*(int *)(v227 + 24)];
            goto LABEL_128;
          case 7u:
            *(_OWORD *)v114 = *(_OWORD *)v115;
            v231 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v232 = &v114[v231];
            v233 = &v115[v231];
            v234 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 32))(v232, v233, v234);
LABEL_128:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
            break;
        }
        v264 = v109[8];
        v265 = (_OWORD *)((char *)v14 + v264);
        v266 = (_OWORD *)((char *)v15 + v264);
        v267 = v266[1];
        *v265 = *v266;
        v265[1] = v267;
        v268 = v266[3];
        v265[2] = v266[2];
        v265[3] = v268;
        *(_OWORD *)((char *)v14 + v109[9]) = *(_OWORD *)((char *)v15 + v109[9]);
        *(_QWORD *)((char *)v14 + v109[10]) = *(_QWORD *)((char *)v15 + v109[10]);
        goto LABEL_139;
      case 0x1Cu:
        *v14 = *v15;
        v40 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
        v41 = *(int *)(v40 + 20);
        v42 = (char *)v14 + v41;
        v43 = (char *)v15 + v41;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15 + v41, 1, v6))
        {
          v44 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v42, v43, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v42, 0, 1, v6);
        }
        v82 = *(int *)(v40 + 24);
        v83 = (char *)v14 + v82;
        v84 = (char *)v15 + v82;
        *(_OWORD *)v83 = *(_OWORD *)v84;
        *((_QWORD *)v83 + 2) = *((_QWORD *)v84 + 2);
        goto LABEL_139;
      case 0x1Du:
        *(_QWORD *)v14 = *(_QWORD *)v15;
        v45 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
        v46 = *(int *)(v45 + 20);
        v47 = (char *)v14 + v46;
        v48 = (char *)v15 + v46;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15 + v46, 1, v6))
        {
          v49 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v47, v48, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v47, 0, 1, v6);
        }
        v85 = *(int *)(v45 + 24);
        v86 = (char *)v14 + v85;
        v87 = (char *)v15 + v85;
        *(_OWORD *)v86 = *(_OWORD *)v87;
        *((_QWORD *)v86 + 2) = *((_QWORD *)v87 + 2);
        goto LABEL_139;
      case 0x1Eu:
        v50 = type metadata accessor for MessagePayload.RequestContent(0);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v6))
          {
            v51 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          }
          else
          {
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v6);
          }
          v149 = (int *)type metadata accessor for SystemPromptResolution(0);
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v14 + v149[5], (char *)v15 + v149[5], v6);
          v150 = v149[6];
          v151 = (char *)v14 + v150;
          v152 = (char *)v15 + v150;
          v153 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v154 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(v151, v152, v154);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
          }
          v155 = v149[7];
          v156 = (char *)v14 + v155;
          v157 = (char *)v15 + v155;
          *(_OWORD *)v156 = *(_OWORD *)v157;
          *((_QWORD *)v156 + 2) = *((_QWORD *)v157 + 2);
          v158 = v149[8];
          v159 = (char *)v14 + v158;
          v160 = (char *)v15 + v158;
          v159[16] = v160[16];
          *(_OWORD *)v159 = *(_OWORD *)v160;
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        v161 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
        v162 = *(int *)(v161 + 20);
        v163 = (char *)v14 + v162;
        v164 = (char *)v15 + v162;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15 + v162, 1, v6))
        {
          v165 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v163, v164, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v163, 0, 1, v6);
        }
        v166 = *(int *)(v161 + 24);
        v167 = (char *)v14 + v166;
        v168 = (char *)v15 + v166;
        *(_OWORD *)v167 = *(_OWORD *)v168;
        *((_QWORD *)v167 + 2) = *((_QWORD *)v168 + 2);
        goto LABEL_139;
      case 0x1Fu:
        v52 = type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v53 = sub_23F268078();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v14, v15, v53);
            __dsta = (int *)type metadata accessor for ActionSuccess(0);
            v54 = __dsta[5];
            v55 = (char *)v14 + v54;
            v56 = (char *)v15 + v54;
            v57 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v56, 1, v57))
            {
              v58 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v55, v56, v6);
              *(_OWORD *)&v55[*(int *)(v57 + 20)] = *(_OWORD *)&v56[*(int *)(v57 + 20)];
              *(_OWORD *)&v55[*(int *)(v57 + 24)] = *(_OWORD *)&v56[*(int *)(v57 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v55, 0, 1, v57);
            }
            *((_BYTE *)v14 + __dsta[6]) = *((_BYTE *)v15 + __dsta[6]);
            goto LABEL_120;
          case 3u:
            *v14 = *v15;
            v185 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v186 = (char *)v14 + v185;
            v187 = (char *)v15 + v185;
            v188 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v186, v187, v188);
            goto LABEL_120;
          case 4u:
            *v14 = *v15;
            *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
            *((_BYTE *)v14 + 24) = *((_BYTE *)v15 + 24);
            v189 = (int *)type metadata accessor for ParameterConfirmation(0);
            v190 = v189[6];
            v191 = (char *)v14 + v190;
            v192 = (char *)v15 + v190;
            v193 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v191, v192, v193);
            *(_OWORD *)((char *)v14 + v189[7]) = *(_OWORD *)((char *)v15 + v189[7]);
            *(_OWORD *)((char *)v14 + v189[8]) = *(_OWORD *)((char *)v15 + v189[8]);
            goto LABEL_120;
          case 6u:
            *v14 = *v15;
            v194 = type metadata accessor for ParameterNotAllowed(0);
            v195 = *(int *)(v194 + 20);
            v196 = (char *)v14 + v195;
            v197 = (char *)v15 + v195;
            v198 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v196, v197, v198);
            *((_BYTE *)v14 + *(int *)(v194 + 24)) = *((_BYTE *)v15 + *(int *)(v194 + 24));
            goto LABEL_120;
          case 7u:
            *v14 = *v15;
            v199 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v200 = (char *)v14 + v199;
            v201 = (char *)v15 + v199;
            v202 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v200, v201, v202);
LABEL_120:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
            break;
        }
        v258 = type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
        *(_QWORD *)((char *)v14 + *(int *)(v258 + 20)) = *(_QWORD *)((char *)v15 + *(int *)(v258 + 20));
        goto LABEL_139;
      case 0x22u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
        v72 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
        *((_BYTE *)v14 + *(int *)(v72 + 20)) = *((_BYTE *)v15 + *(int *)(v72 + 20));
        v73 = *(int *)(v72 + 24);
        v74 = (char *)v14 + v73;
        v75 = (char *)v15 + v73;
        *((_QWORD *)v74 + 2) = *((_QWORD *)v75 + 2);
        *(_OWORD *)v74 = *(_OWORD *)v75;
        goto LABEL_139;
      case 0x23u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
        v76 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
        v77 = (char *)v14 + v76;
        v78 = (char *)v15 + v76;
        *(_OWORD *)v77 = *(_OWORD *)v78;
        *((_QWORD *)v77 + 2) = *((_QWORD *)v78 + 2);
        goto LABEL_139;
      case 0x24u:
        v79 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
          case 5u:
          case 7u:
          case 8u:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
            goto LABEL_132;
          case 2u:
            v235 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
            v235((char *)v14, (char *)v15, v6);
            v236 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
            *(_QWORD *)((char *)v14 + v236[5]) = *(_QWORD *)((char *)v15 + v236[5]);
            *(_QWORD *)((char *)v14 + v236[6]) = *(_QWORD *)((char *)v15 + v236[6]);
            v237 = v236[7];
            v238 = (char *)v14 + v237;
            v239 = (char *)v15 + v237;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15 + v237, 1, v6))
            {
              v240 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v238, v239, *(_QWORD *)(*(_QWORD *)(v240 - 8) + 64));
            }
            else
            {
              v235(v238, v239, v6);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v238, 0, 1, v6);
            }
            *(_OWORD *)((char *)v14 + v236[8]) = *(_OWORD *)((char *)v15 + v236[8]);
            *(_QWORD *)((char *)v14 + v236[9]) = *(_QWORD *)((char *)v15 + v236[9]);
            goto LABEL_132;
          case 4u:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
            v241 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
            *(_QWORD *)((char *)v14 + *(int *)(v241 + 20)) = *(_QWORD *)((char *)v15 + *(int *)(v241 + 20));
            goto LABEL_132;
          case 9u:
            v242 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32);
            v242(v14, v15, v6);
            v243 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
            v242((_OWORD *)((char *)v14 + *(int *)(v243 + 20)), (_OWORD *)((char *)v15 + *(int *)(v243 + 20)), v6);
            *(_OWORD *)((char *)v14 + *(int *)(v243 + 24)) = *(_OWORD *)((char *)v15 + *(int *)(v243 + 24));
LABEL_132:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
            break;
        }
        goto LABEL_139;
      case 0x25u:
        v80 = type metadata accessor for SessionServerDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 2u:
          case 7u:
          case 8u:
          case 0xAu:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
            goto LABEL_138;
          case 1u:
            *v14 = *v15;
            v244 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
            v245 = v244[6];
            v246 = (char *)v14 + v245;
            v247 = (char *)v15 + v245;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15 + v245, 1, v6))
            {
              v248 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v246, v247, *(_QWORD *)(*(_QWORD *)(v248 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v246, v247, v6);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v246, 0, 1, v6);
            }
            *(_OWORD *)((char *)v14 + v244[7]) = *(_OWORD *)((char *)v15 + v244[7]);
            *(_QWORD *)((char *)v14 + v244[8]) = *(_QWORD *)((char *)v15 + v244[8]);
            goto LABEL_138;
          case 5u:
            *v14 = *v15;
            v249 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
            v250 = *(int *)(v249 + 24);
            v251 = (char *)v14 + v250;
            v252 = (char *)v15 + v250;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15 + v250, 1, v6))
            {
              v253 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v251, v252, *(_QWORD *)(*(_QWORD *)(v253 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v251, v252, v6);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v251, 0, 1, v6);
            }
            *(_QWORD *)((char *)v14 + *(int *)(v249 + 28)) = *(_QWORD *)((char *)v15 + *(int *)(v249 + 28));
            goto LABEL_138;
          case 6u:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
            v254 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
            *(_QWORD *)((char *)v14 + *(int *)(v254 + 20)) = *(_QWORD *)((char *)v15 + *(int *)(v254 + 20));
            goto LABEL_138;
          case 9u:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
            v255 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
            *((_BYTE *)v14 + *(int *)(v255 + 20)) = *((_BYTE *)v15 + *(int *)(v255 + 20));
            goto LABEL_138;
          case 0xBu:
            *(_QWORD *)v14 = *(_QWORD *)v15;
            *(_OWORD *)((char *)v14 + 8) = *(_OWORD *)((char *)v15 + 8);
            *(_OWORD *)((char *)v14 + 24) = *(_OWORD *)((char *)v15 + 24);
            *(_OWORD *)((char *)v14 + 40) = *(_OWORD *)((char *)v15 + 40);
            v256 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
            (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v14 + v256[8], (char *)v15 + v256[8], v6);
            *(_OWORD *)((char *)v14 + v256[9]) = *(_OWORD *)((char *)v15 + v256[9]);
            *(_OWORD *)((char *)v14 + v256[10]) = *(_OWORD *)((char *)v15 + v256[10]);
            *(_OWORD *)((char *)v14 + v256[11]) = *(_OWORD *)((char *)v15 + v256[11]);
            goto LABEL_138;
          case 0xCu:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v14, v15, v6);
            v257 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
            *((_BYTE *)v14 + *(int *)(v257 + 20)) = *((_BYTE *)v15 + *(int *)(v257 + 20));
            goto LABEL_138;
          default:
            memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
            break;
        }
        goto LABEL_139;
      default:
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionClientMessage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F208F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F2331B4(a1, a2, a3);
}

uint64_t storeEnumTagSinglePayload for SessionClientMessage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F208F88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_23F23323C(a1, a2, a3, a4);
}

void sub_23F208F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F2332C0(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for MessagePayload);
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionServerMessage(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *v19;
  id *v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  id *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int *v123;
  uint64_t v124;
  uint64_t *v125;
  char *v126;
  id *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  unsigned __int8 v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  int *v168;
  id *v169;
  int *v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  id *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  unsigned __int8 v197;
  int *v198;
  uint64_t v199;
  char *v200;
  char *v201;
  unsigned int v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t *v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  int *v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  unsigned __int8 v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  _QWORD *v235;
  _QWORD *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD *v240;
  _QWORD *v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  void (*v246)(char *, char *, uint64_t);
  uint64_t *result;
  int *v248;
  id __dst;
  uint64_t *v250;
  uint64_t *v251;
  uint64_t *v252;
  uint64_t *v253;
  uint64_t *v254;
  uint64_t *v255;
  id *v256;
  id *v257;
  id *v258;
  uint64_t v259;
  id *v260;
  id *v261;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2 + v9, 1, v7))
    {
      v12 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v7);
    }
    v14 = a3[7];
    v15 = a3[8];
    v16 = (uint64_t *)((char *)a1 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (uint64_t *)((char *)a1 + v15);
    v20 = (id *)((char *)a2 + v15);
    v21 = type metadata accessor for MessagePayload(0);
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v22 = type metadata accessor for MessagePayload.RequestContent(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 3:
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v7))
            {
              v166 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
            }
            else
            {
              v8(v19, (uint64_t *)v20, v7);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v7);
            }
            v181 = type metadata accessor for SystemPromptResolution(0);
            v8((uint64_t *)((char *)v19 + *(int *)(v181 + 20)), (uint64_t *)((char *)v20 + *(int *)(v181 + 20)), v7);
            v248 = (int *)v181;
            v182 = *(int *)(v181 + 24);
            v254 = v19;
            v183 = (char *)v19 + v182;
            v184 = v20;
            v185 = (char *)v20 + v182;
            v186 = type metadata accessor for SystemPromptResolution.UserAction(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v187 = sub_23F268078();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v183, v185, v187);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v183, v185, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
            }
            v188 = v248[7];
            v189 = (char *)v254 + v188;
            v190 = (char *)v184 + v188;
            *(_DWORD *)v189 = *(_DWORD *)v190;
            v191 = *((_QWORD *)v190 + 2);
            *((_QWORD *)v189 + 1) = *((_QWORD *)v190 + 1);
            *((_QWORD *)v189 + 2) = v191;
            v192 = v248[8];
            v193 = (char *)v254 + v192;
            v194 = (char *)v184 + v192;
            v195 = *(_QWORD *)v194;
            v196 = *((_QWORD *)v194 + 1);
            v197 = v194[16];
            swift_bridgeObjectRetain();
            sub_23F135C7C(v195, v196, v197);
            *(_QWORD *)v193 = v195;
            *((_QWORD *)v193 + 1) = v196;
            v20 = v184;
            v19 = v254;
            v193[16] = v197;
            break;
          case 2:
            *v19 = (uint64_t)*v20;
            swift_bridgeObjectRetain();
            break;
          case 1:
            v24 = (uint64_t)v20[1];
            *v19 = (uint64_t)*v20;
            v19[1] = v24;
            swift_bridgeObjectRetain();
            break;
          default:
            memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
            goto LABEL_90;
        }
        swift_storeEnumTagMultiPayload();
LABEL_90:
        v198 = (int *)type metadata accessor for MessagePayload.Request(0);
        *(uint64_t *)((char *)v19 + v198[5]) = *(uint64_t *)((char *)v20 + v198[5]);
        *((_BYTE *)v19 + v198[6]) = *((_BYTE *)v20 + v198[6]);
        v199 = v198[7];
        v200 = (char *)v19 + v199;
        v261 = v20;
        v201 = (char *)v20 + v199;
        v202 = *((unsigned __int8 *)v20 + v199 + 16);
        swift_bridgeObjectRetain();
        if (v202 <= 0xFD)
        {
          v255 = v19;
          v204 = *(_QWORD *)v201;
          v203 = *((_QWORD *)v201 + 1);
          sub_23F135C9C(v204, v203, v202);
          *(_QWORD *)v200 = v204;
          *((_QWORD *)v200 + 1) = v203;
          v19 = v255;
          v200[16] = v202;
        }
        else
        {
          *(_OWORD *)v200 = *(_OWORD *)v201;
          v200[16] = v201[16];
        }
        v205 = v198[8];
        v206 = v19;
        v207 = (char *)v19 + v205;
        v208 = (char *)v261 + v205;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v261 + v205, 1, v7))
        {
          v209 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
        }
        else
        {
          v8((uint64_t *)v207, (uint64_t *)v208, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v207, 0, 1, v7);
        }
        v210 = v198[9];
        v142 = (char *)v206 + v210;
        v143 = (char *)v261 + v210;
        v144 = *((_QWORD *)v143 + 1);
        if (v144)
          goto LABEL_107;
        *(_OWORD *)v142 = *(_OWORD *)v143;
        *((_QWORD *)v142 + 2) = *((_QWORD *)v143 + 2);
        goto LABEL_113;
      case 4u:
        v25 = (uint64_t)v20[1];
        *v19 = (uint64_t)*v20;
        v19[1] = v25;
        v26 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
        v27 = (char *)v19 + v26;
        v28 = (char *)v20 + v26;
        v29 = sub_23F268078();
        v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        v30(v27, v28, v29);
        goto LABEL_113;
      case 5u:
        v31 = *v20;
        v32 = *((_BYTE *)v20 + 8);
        sub_23F131158(*v20);
        *v19 = (uint64_t)v31;
        *((_BYTE *)v19 + 8) = v32;
        v19[2] = (uint64_t)v20[2];
        swift_bridgeObjectRetain();
        goto LABEL_113;
      case 6u:
      case 9u:
      case 0x20u:
      case 0x21u:
      case 0x28u:
        v102 = (uint64_t)v20[1];
        *v19 = (uint64_t)*v20;
        v19[1] = v102;
        v19[2] = (uint64_t)v20[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_113;
      case 7u:
        v33 = (uint64_t)v20[1];
        *v19 = (uint64_t)*v20;
        v19[1] = v33;
        v19[2] = (uint64_t)v20[2];
        *((_BYTE *)v19 + 24) = *((_BYTE *)v20 + 24);
        v34 = (uint64_t)v20[5];
        v19[4] = (uint64_t)v20[4];
        v19[5] = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_113;
      case 8u:
        *v19 = (uint64_t)*v20;
        *((_BYTE *)v19 + 8) = *((_BYTE *)v20 + 8);
        v35 = (uint64_t)v20[3];
        v19[2] = (uint64_t)v20[2];
        v19[3] = v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_113;
      case 0xAu:
      case 0xBu:
      case 0x13u:
      case 0x18u:
      case 0x19u:
      case 0x1Bu:
        v84 = (uint64_t)v20[1];
        *v19 = (uint64_t)*v20;
        v19[1] = v84;
        swift_bridgeObjectRetain();
        goto LABEL_113;
      case 0xCu:
        *v19 = (uint64_t)*v20;
        swift_bridgeObjectRetain();
        goto LABEL_113;
      case 0xDu:
        v8(v19, (uint64_t *)v20, v7);
        v36 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
        v8((uint64_t *)((char *)v19 + v36[5]), (uint64_t *)((char *)v20 + v36[5]), v7);
        v37 = v36[6];
        v38 = (uint64_t *)((char *)v19 + v37);
        v39 = (id *)((char *)v20 + v37);
        v40 = v39[1];
        *v38 = *v39;
        v38[1] = v40;
        v41 = v36[7];
        v42 = (uint64_t *)((char *)v19 + v41);
        v43 = (id *)((char *)v20 + v41);
        v44 = v43[1];
        *v42 = *v43;
        v42[1] = v44;
        v45 = v36[8];
        v46 = (uint64_t *)((char *)v19 + v45);
        v47 = (id *)((char *)v20 + v45);
        v48 = v47[1];
        *v46 = *v47;
        v46[1] = v48;
        *(uint64_t *)((char *)v19 + v36[9]) = *(uint64_t *)((char *)v20 + v36[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_113;
      case 0xEu:
        v8(v19, (uint64_t *)v20, v7);
        v49 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
        v50 = (char *)v19 + v49;
        v51 = (char *)v20 + v49;
        type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v52 = *(void **)v51;
          v53 = v51[8];
          sub_23F131158(v52);
          *(_QWORD *)v50 = v52;
          v50[8] = v53;
        }
        else
        {
          v122 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 16))(v50, v51, v122);
        }
LABEL_112:
        swift_storeEnumTagMultiPayload();
        goto LABEL_113;
      case 0xFu:
        *(_DWORD *)v19 = *(_DWORD *)v20;
        v54 = (uint64_t)v20[2];
        v19[1] = (uint64_t)v20[1];
        v19[2] = v54;
        v55 = (uint64_t)v20[4];
        v19[3] = (uint64_t)v20[3];
        v19[4] = v55;
        v56 = (uint64_t)v20[6];
        v19[5] = (uint64_t)v20[5];
        v19[6] = v56;
        v57 = (uint64_t)v20[8];
        v19[7] = (uint64_t)v20[7];
        v19[8] = v57;
        *((_BYTE *)v19 + 72) = *((_BYTE *)v20 + 72);
        v58 = (uint64_t)v20[11];
        v59 = (uint64_t)v20[12];
        v19[10] = (uint64_t)v20[10];
        v19[11] = v58;
        v19[12] = v59;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_113;
      case 0x10u:
        v8(v19, (uint64_t *)v20, v7);
        v60 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
        v61 = v60[5];
        v62 = (uint64_t *)((char *)v19 + v61);
        v63 = (uint64_t *)((char *)v20 + v61);
        v65 = *v63;
        v64 = v63[1];
        *v62 = v65;
        v62[1] = v64;
        *(uint64_t *)((char *)v19 + v60[6]) = *(uint64_t *)((char *)v20 + v60[6]);
        *(uint64_t *)((char *)v19 + v60[7]) = *(uint64_t *)((char *)v20 + v60[7]);
        v66 = v60[8];
        v67 = (uint64_t *)((char *)v19 + v66);
        v68 = (id *)((char *)v20 + v66);
        v69 = v68[1];
        *v67 = *v68;
        v67[1] = v69;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_113;
      case 0x11u:
        v8(v19, (uint64_t *)v20, v7);
        type metadata accessor for MessagePayload.ClientActionResult(0);
        type metadata accessor for StatementOutcome(0);
        v70 = (char *)&loc_23F209594 + 4 * word_23F279512[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x12u:
        v71 = (uint64_t)*v20;
        v72 = (unint64_t)v20[1];
        sub_23F131170((uint64_t)*v20, v72);
        *v19 = v71;
        v19[1] = v72;
        v73 = (uint64_t)v20[2];
        v74 = (unint64_t)v20[3];
        sub_23F131170(v73, v74);
        v19[2] = v73;
        v19[3] = v74;
        v75 = (uint64_t)v20[5];
        v19[4] = (uint64_t)v20[4];
        v19[5] = v75;
        swift_bridgeObjectRetain();
        goto LABEL_113;
      case 0x14u:
        v8(v19, (uint64_t *)v20, v7);
        v76 = *(int *)(type metadata accessor for SystemPrompt(0) + 20);
        v77 = (uint64_t *)((char *)v19 + v76);
        v78 = (id *)((char *)v20 + v76);
        v79 = v78[1];
        *v77 = *v78;
        v77[1] = v79;
        type metadata accessor for SystemPrompt.Prompt(0);
        swift_bridgeObjectRetain();
        v80 = (char *)&loc_23F2096EC + 4 * word_23F27950A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x15u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v7))
        {
          v81 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          v8(v19, (uint64_t *)v20, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v7);
        }
        v123 = (int *)type metadata accessor for SystemPromptResolution(0);
        v8((uint64_t *)((char *)v19 + v123[5]), (uint64_t *)((char *)v20 + v123[5]), v7);
        v124 = v123[6];
        v125 = v19;
        v126 = (char *)v19 + v124;
        v127 = v20;
        v128 = (char *)v20 + v124;
        v129 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v130 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v126, v128, v130);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v126, v128, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
        }
        v131 = v123[7];
        v132 = (char *)v125 + v131;
        v133 = (char *)v127 + v131;
        *(_DWORD *)v132 = *(_DWORD *)v133;
        v134 = *((_QWORD *)v133 + 2);
        *((_QWORD *)v132 + 1) = *((_QWORD *)v133 + 1);
        *((_QWORD *)v132 + 2) = v134;
        v135 = v123[8];
        v136 = (char *)v125 + v135;
        v137 = (char *)v127 + v135;
        v138 = *(_QWORD *)v137;
        v139 = *((_QWORD *)v137 + 1);
        v140 = v137[16];
        swift_bridgeObjectRetain();
        sub_23F135C7C(v138, v139, v140);
        *(_QWORD *)v136 = v138;
        *((_QWORD *)v136 + 1) = v139;
        v136[16] = v140;
        goto LABEL_113;
      case 0x16u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v7))
        {
          v82 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        }
        else
        {
          v8(v19, (uint64_t *)v20, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v7);
        }
        v145 = type metadata accessor for ActionResponse(0);
        v146 = *(int *)(v145 + 20);
        v147 = (uint64_t *)((char *)v19 + v146);
        v148 = (id *)((char *)v20 + v146);
        v149 = v148[1];
        *v147 = *v148;
        v147[1] = v149;
        v150 = *(int *)(v145 + 24);
        v151 = (uint64_t *)((char *)v19 + v150);
        v152 = (id *)((char *)v20 + v150);
        v153 = v152[1];
        *v151 = *v152;
        v151[1] = v153;
        type metadata accessor for ActionOutcome(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v154 = (char *)&loc_23F209EE0 + 4 * word_23F2794F4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x17u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v7))
        {
          v83 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          v8(v19, (uint64_t *)v20, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v7);
        }
        v155 = type metadata accessor for SystemResponse(0);
        v156 = *(int *)(v155 + 20);
        v157 = (char *)v19 + v156;
        v158 = (char *)v20 + v156;
        v159 = *((_QWORD *)v158 + 2);
        if (v159 == 1)
        {
          *(_OWORD *)v157 = *(_OWORD *)v158;
          *((_QWORD *)v157 + 2) = *((_QWORD *)v158 + 2);
        }
        else
        {
          *(_DWORD *)v157 = *(_DWORD *)v158;
          *((_QWORD *)v157 + 1) = *((_QWORD *)v158 + 1);
          *((_QWORD *)v157 + 2) = v159;
          swift_bridgeObjectRetain();
        }
        v160 = *(int *)(v155 + 24);
        v161 = (uint64_t *)((char *)v19 + v160);
        v162 = (id *)((char *)v20 + v160);
        v163 = v162[1];
        *v161 = *v162;
        v161[1] = v163;
        type metadata accessor for StatementOutcome(0);
        swift_bridgeObjectRetain();
        v164 = (char *)&loc_23F20A044 + 4 * word_23F2794DE[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x1Cu:
        v85 = (uint64_t)v20[1];
        *v19 = (uint64_t)*v20;
        v19[1] = v85;
        v86 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
        v87 = *(int *)(v86 + 20);
        v88 = v20;
        v89 = (char *)v19 + v87;
        v250 = v19;
        v256 = v88;
        v90 = (char *)v88 + v87;
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v90, 1, v7))
        {
          v91 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          v8((uint64_t *)v89, (uint64_t *)v90, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v89, 0, 1, v7);
        }
        v165 = *(int *)(v86 + 24);
        v142 = (char *)v250 + v165;
        v143 = (char *)v256 + v165;
        v144 = *((_QWORD *)v143 + 1);
        if (v144)
          goto LABEL_107;
        *(_OWORD *)v142 = *(_OWORD *)v143;
        *((_QWORD *)v142 + 2) = *((_QWORD *)v143 + 2);
        goto LABEL_113;
      case 0x1Du:
        *v19 = (uint64_t)*v20;
        v92 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
        v93 = *(int *)(v92 + 20);
        v94 = v20;
        v95 = (char *)v19 + v93;
        v251 = v19;
        v257 = v94;
        v96 = (char *)v94 + v93;
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v96, 1, v7))
        {
          v97 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        }
        else
        {
          v8((uint64_t *)v95, (uint64_t *)v96, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v95, 0, 1, v7);
        }
        v141 = *(int *)(v92 + 24);
        v142 = (char *)v251 + v141;
        v143 = (char *)v257 + v141;
        v144 = *((_QWORD *)v143 + 1);
        if (v144)
          goto LABEL_107;
        *(_OWORD *)v142 = *(_OWORD *)v143;
        *((_QWORD *)v142 + 2) = *((_QWORD *)v143 + 2);
        goto LABEL_113;
      case 0x1Eu:
        v98 = type metadata accessor for MessagePayload.RequestContent(0);
        v99 = swift_getEnumCaseMultiPayload();
        v252 = v19;
        v258 = v20;
        switch(v99)
        {
          case 3:
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v7))
            {
              v167 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
            }
            else
            {
              v8(v19, (uint64_t *)v20, v7);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v7);
            }
            v211 = (int *)type metadata accessor for SystemPromptResolution(0);
            v8((uint64_t *)((char *)v19 + v211[5]), (uint64_t *)((char *)v20 + v211[5]), v7);
            v212 = v211[6];
            v213 = (char *)v19 + v212;
            v214 = (char *)v20 + v212;
            v215 = type metadata accessor for SystemPromptResolution.UserAction(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v216 = sub_23F268078();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(v213, v214, v216);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v213, v214, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
            }
            v217 = v211[7];
            v20 = v258;
            v218 = (char *)v252 + v217;
            v219 = (char *)v258 + v217;
            *(_DWORD *)v218 = *(_DWORD *)v219;
            v220 = *((_QWORD *)v219 + 2);
            *((_QWORD *)v218 + 1) = *((_QWORD *)v219 + 1);
            *((_QWORD *)v218 + 2) = v220;
            v221 = v211[8];
            v222 = (char *)v252 + v221;
            v223 = (char *)v258 + v221;
            v224 = *(_QWORD *)v223;
            v225 = *((_QWORD *)v223 + 1);
            v226 = v223[16];
            swift_bridgeObjectRetain();
            sub_23F135C7C(v224, v225, v226);
            *(_QWORD *)v222 = v224;
            *((_QWORD *)v222 + 1) = v225;
            v222[16] = v226;
            v19 = v252;
            swift_storeEnumTagMultiPayload();
            break;
          case 2:
            *v19 = (uint64_t)*v20;
            swift_bridgeObjectRetain();
            goto LABEL_76;
          case 1:
            v100 = (uint64_t)v20[1];
            *v19 = (uint64_t)*v20;
            v19[1] = v100;
            swift_bridgeObjectRetain();
LABEL_76:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
            break;
        }
        v227 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
        v228 = *(int *)(v227 + 20);
        v229 = (char *)v19 + v228;
        v230 = (char *)v20 + v228;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v228, 1, v7))
        {
          v231 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v229, v230, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
        }
        else
        {
          v8((uint64_t *)v229, (uint64_t *)v230, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v229, 0, 1, v7);
        }
        v232 = *(int *)(v227 + 24);
        v142 = (char *)v252 + v232;
        v143 = (char *)v258 + v232;
        v144 = *((_QWORD *)v143 + 1);
        if (v144)
        {
LABEL_107:
          *(_QWORD *)v142 = *(_QWORD *)v143;
          *((_QWORD *)v142 + 1) = v144;
          *((_QWORD *)v142 + 2) = *((_QWORD *)v143 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v142 = *(_OWORD *)v143;
          *((_QWORD *)v142 + 2) = *((_QWORD *)v143 + 2);
        }
LABEL_113:
        swift_storeEnumTagMultiPayload();
LABEL_114:
        v238 = a3[9];
        v239 = a3[10];
        v240 = (uint64_t *)((char *)a1 + v238);
        v241 = (uint64_t *)((char *)a2 + v238);
        v242 = v241[1];
        *v240 = *v241;
        v240[1] = v242;
        v243 = (char *)a1 + v239;
        v244 = (char *)a2 + v239;
        v245 = sub_23F267D24();
        v246 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 16);
        swift_bridgeObjectRetain();
        v246(v243, v244, v245);
        break;
      case 0x1Fu:
        type metadata accessor for StatementOutcome(0);
        v101 = (char *)&loc_23F209968 + 4 * word_23F2794C8[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x22u:
        v8(v19, (uint64_t *)v20, v7);
        v103 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
        *((_BYTE *)v19 + *(int *)(v103 + 20)) = *((_BYTE *)v20 + *(int *)(v103 + 20));
        v104 = *(int *)(v103 + 24);
        v105 = (char *)v19 + v104;
        v106 = (char *)v20 + v104;
        *(_DWORD *)v105 = *(_DWORD *)v106;
        v107 = *((_QWORD *)v106 + 2);
        *((_QWORD *)v105 + 1) = *((_QWORD *)v106 + 1);
        *((_QWORD *)v105 + 2) = v107;
        swift_bridgeObjectRetain();
        goto LABEL_113;
      case 0x23u:
        v8(v19, (uint64_t *)v20, v7);
        v108 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
        v109 = (uint64_t *)((char *)v19 + v108);
        v110 = (id *)((char *)v20 + v108);
        v111 = v110[1];
        *v109 = *v110;
        v109[1] = v111;
        v109[2] = v110[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_113;
      case 0x24u:
        v112 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
          case 5u:
          case 7u:
          case 8u:
            v8(v19, (uint64_t *)v20, v7);
            goto LABEL_112;
          case 2u:
            v8(v19, (uint64_t *)v20, v7);
            v168 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
            v169 = v20;
            v170 = v168;
            *(uint64_t *)((char *)v19 + v168[5]) = *(uint64_t *)((char *)v169 + v168[5]);
            *(uint64_t *)((char *)v19 + v168[6]) = *(uint64_t *)((char *)v169 + v168[6]);
            v171 = v168[7];
            v253 = v19;
            v260 = v169;
            v172 = (char *)v19 + v171;
            v173 = (char *)v169 + v171;
            swift_bridgeObjectRetain();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v173, 1, v7))
            {
              v174 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
            }
            else
            {
              v8((uint64_t *)v172, (uint64_t *)v173, v7);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v172, 0, 1, v7);
            }
            v234 = v170[8];
            v235 = (uint64_t *)((char *)v253 + v234);
            v236 = (id *)((char *)v260 + v234);
            v237 = v236[1];
            *v235 = *v236;
            v235[1] = v237;
            *(uint64_t *)((char *)v253 + v170[9]) = *(uint64_t *)((char *)v260 + v170[9]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_112;
          case 4u:
            v8(v19, (uint64_t *)v20, v7);
            v175 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
            *(uint64_t *)((char *)v19 + *(int *)(v175 + 20)) = *(uint64_t *)((char *)v20 + *(int *)(v175 + 20));
            swift_bridgeObjectRetain();
            goto LABEL_112;
          case 9u:
            v8(v19, (uint64_t *)v20, v7);
            v176 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
            v8((uint64_t *)((char *)v19 + *(int *)(v176 + 20)), (uint64_t *)((char *)v20 + *(int *)(v176 + 20)), v7);
            v177 = *(int *)(v176 + 24);
            v178 = (char *)v19 + v177;
            v179 = (char *)v20 + v177;
            v180 = *((_QWORD *)v179 + 1);
            if (v180 >> 60 == 15)
            {
              *(_OWORD *)v178 = *(_OWORD *)v179;
            }
            else
            {
              v233 = *(_QWORD *)v179;
              sub_23F131170(*(_QWORD *)v179, *((_QWORD *)v179 + 1));
              *(_QWORD *)v178 = v233;
              *((_QWORD *)v178 + 1) = v180;
            }
            goto LABEL_112;
          default:
            memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
            break;
        }
        goto LABEL_113;
      case 0x25u:
        type metadata accessor for SessionServerDebuggerEvent.Payload(0);
        v113 = (char *)&loc_23F209B84 + 4 * word_23F279498[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x26u:
        v114 = (uint64_t)*v20;
        v115 = (uint64_t)v20[1];
        v116 = v20;
        v117 = (uint64_t)v20[2];
        v118 = (uint64_t)v20[3];
        __dst = v116[4];
        v119 = (uint64_t)v116[5];
        v120 = (uint64_t)v116[6];
        v259 = (uint64_t)v116[7];
        sub_23F135CF4(v114, v115, v117, v118, (uint64_t)__dst, v119, v120);
        *v19 = v114;
        v19[1] = v115;
        v19[2] = v117;
        v19[3] = v118;
        v19[4] = (uint64_t)__dst;
        v19[5] = v119;
        v19[6] = v120;
        v19[7] = v259;
        goto LABEL_113;
      case 0x27u:
        v121 = (uint64_t)v20[1];
        *v19 = (uint64_t)*v20;
        v19[1] = v121;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_113;
      default:
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        goto LABEL_114;
    }
  }
  return a1;
}

uint64_t destroy for SessionServerMessage(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;

  v4 = sub_23F267D84();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v6 = a1 + a2[6];
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v6, 1, v4))
    v5(v6, v4);
  swift_bridgeObjectRelease();
  v7 = a1 + a2[8];
  type metadata accessor for MessagePayload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for MessagePayload.RequestContent(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3)
      {
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v4))
          v5(v7, v4);
        v39 = (int *)type metadata accessor for SystemPromptResolution(0);
        v5(v7 + v39[5], v4);
        v40 = v7 + v39[6];
        type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v41 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
        }
        swift_bridgeObjectRelease();
        sub_23F137210(*(_QWORD *)(v7 + v39[8]), *(_QWORD *)(v7 + v39[8] + 8), *(_BYTE *)(v7 + v39[8] + 16));
      }
      else if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
      }
      v42 = (int *)type metadata accessor for MessagePayload.Request(0);
      swift_bridgeObjectRelease();
      v43 = v7 + v42[7];
      v44 = *(unsigned __int8 *)(v43 + 16);
      if (v44 <= 0xFD)
        sub_23F137230(*(_QWORD *)v43, *(_QWORD *)(v43 + 8), v44);
      v45 = v7 + v42[8];
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v45, 1, v4))
        v5(v45, v4);
      v46 = v42[9];
      goto LABEL_82;
    case 4u:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0);
LABEL_9:
      v10 = (id *)(v7 + *(int *)(v9 + 20));
      goto LABEL_15;
    case 5u:
      sub_23F131164(*(id *)v7);
      goto LABEL_164;
    case 6u:
    case 9u:
    case 0x20u:
    case 0x21u:
    case 0x28u:
      goto LABEL_83;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_164;
    case 8u:
    case 0x27u:
      goto LABEL_163;
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0x13u:
    case 0x18u:
    case 0x19u:
    case 0x1Bu:
      goto LABEL_164;
    case 0xDu:
      v5(v7, v4);
      v11 = type metadata accessor for MessagePayload.ClientEffectInvocation(0);
      v5(v7 + *(int *)(v11 + 20), v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_163;
    case 0xEu:
      v5(v7, v4);
      v10 = (id *)(v7 + *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20));
      type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_23F131164(*v10);
      }
      else
      {
LABEL_15:
        v12 = sub_23F268078();
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
      }
      break;
    case 0xFu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_164;
    case 0x10u:
      v5(v7, v4);
      type metadata accessor for MessagePayload.ClientAction(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_163;
    case 0x11u:
      v5(v7, v4);
      v28 = type metadata accessor for MessagePayload.ClientActionResult(0);
      v29 = v7 + *(int *)(v28 + 20);
      type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v30 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
          v31 = v29 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
          v32 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v31, 1, v32))
          {
            v5(v31, v4);
            swift_bridgeObjectRelease();
            goto LABEL_132;
          }
          goto LABEL_133;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_132;
        case 2u:
          goto LABEL_131;
        case 3u:
          swift_bridgeObjectRelease();
          v71 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_128;
        case 4u:
          swift_bridgeObjectRelease();
          v72 = v29 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v73 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(v72, v73);
          swift_bridgeObjectRelease();
          goto LABEL_132;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_132;
        case 6u:
          swift_bridgeObjectRelease();
          v71 = type metadata accessor for ParameterNotAllowed(0);
          goto LABEL_128;
        case 7u:
          swift_bridgeObjectRelease();
          v71 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_128:
          v74 = v29 + *(int *)(v71 + 20);
          v75 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v74, v75);
          goto LABEL_133;
        case 8u:
          sub_23F137248(*(_QWORD *)v29, *(_QWORD *)(v29 + 8), *(_BYTE *)(v29 + 16));
          goto LABEL_133;
        case 9u:
          goto LABEL_132;
        case 0xAu:
          if (*(_QWORD *)(v29 + 8) < 0x10uLL)
            goto LABEL_133;
LABEL_131:
          swift_bridgeObjectRelease();
LABEL_132:
          swift_bridgeObjectRelease();
LABEL_133:
          v76 = (_QWORD *)(v7 + *(int *)(v28 + 24));
          if (*v76 == 1)
            goto LABEL_165;
          swift_bridgeObjectRelease();
          if (v76[2])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v76[10])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v76[17])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          break;
        default:
          goto LABEL_133;
      }
      goto LABEL_163;
    case 0x12u:
      sub_23F1311B4(*(_QWORD *)v7, *(_QWORD *)(v7 + 8));
      sub_23F1311B4(*(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24));
      goto LABEL_164;
    case 0x14u:
      v5(v7, v4);
      v13 = type metadata accessor for SystemPrompt(0);
      swift_bridgeObjectRelease();
      v7 += *(int *)(v13 + 24);
      type metadata accessor for SystemPrompt.Prompt(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_164;
        case 1u:
          swift_bridgeObjectRelease();
          v9 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_9;
        case 2u:
          swift_bridgeObjectRelease();
          v52 = v7 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v53 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
          goto LABEL_163;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_164;
        default:
          goto LABEL_165;
      }
      break;
    case 0x15u:
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v4))
        v5(v7, v4);
      v14 = (int *)type metadata accessor for SystemPromptResolution(0);
      v5(v7 + v14[5], v4);
      v15 = v7 + v14[6];
      type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v16 = sub_23F268078();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      swift_bridgeObjectRelease();
      sub_23F137210(*(_QWORD *)(v7 + v14[8]), *(_QWORD *)(v7 + v14[8] + 8), *(_BYTE *)(v7 + v14[8] + 16));
      break;
    case 0x16u:
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v4))
        v5(v7, v4);
      v33 = (int *)type metadata accessor for ActionResponse(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v34 = v7 + v33[7];
      type metadata accessor for ActionOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v35 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
          v36 = v34 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
          v37 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v36, 1, v37))
          {
            v5(v36, v4);
            swift_bridgeObjectRelease();
            goto LABEL_151;
          }
          goto LABEL_152;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_151;
        case 2u:
          goto LABEL_150;
        case 3u:
          swift_bridgeObjectRelease();
          v77 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_147;
        case 4u:
          swift_bridgeObjectRelease();
          v78 = v34 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v79 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v78, v79);
          swift_bridgeObjectRelease();
          goto LABEL_151;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_151;
        case 6u:
          swift_bridgeObjectRelease();
          v77 = type metadata accessor for ParameterNotAllowed(0);
          goto LABEL_147;
        case 7u:
          swift_bridgeObjectRelease();
          v77 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_147:
          v80 = v34 + *(int *)(v77 + 20);
          v81 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 8))(v80, v81);
          goto LABEL_152;
        case 8u:
          sub_23F137248(*(_QWORD *)v34, *(_QWORD *)(v34 + 8), *(_BYTE *)(v34 + 16));
          goto LABEL_152;
        case 9u:
          goto LABEL_151;
        case 0xAu:
          if (*(_QWORD *)(v34 + 8) < 0x10uLL)
            goto LABEL_152;
LABEL_150:
          swift_bridgeObjectRelease();
LABEL_151:
          swift_bridgeObjectRelease();
LABEL_152:
          v82 = (_QWORD *)(v7 + v33[8]);
          swift_bridgeObjectRelease();
          if (v82[2])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v82[10])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v82[17])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v83 = v7 + v33[9];
          if (!*(_QWORD *)v83)
            goto LABEL_164;
          swift_bridgeObjectRelease();
          v84 = *(unsigned __int8 *)(v83 + 24);
          if (v84 != 255)
            sub_23F137270(*(_QWORD *)(v83 + 8), *(_QWORD *)(v83 + 16), v84);
          v85 = *(unsigned __int8 *)(v83 + 48);
          if (v85 != 255)
            sub_23F137270(*(_QWORD *)(v83 + 32), *(_QWORD *)(v83 + 40), v85);
          break;
        default:
          goto LABEL_152;
      }
      goto LABEL_163;
    case 0x17u:
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v4))
        v5(v7, v4);
      v17 = (int *)type metadata accessor for SystemResponse(0);
      if (*(_QWORD *)(v7 + v17[5] + 16) != 1)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v7 + v17[7];
      type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v19 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
          v20 = v18 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
          v21 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v20, 1, v21))
          {
            v5(v20, v4);
            swift_bridgeObjectRelease();
            goto LABEL_101;
          }
          goto LABEL_102;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_101;
        case 2u:
          goto LABEL_100;
        case 3u:
          swift_bridgeObjectRelease();
          v58 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_97;
        case 4u:
          swift_bridgeObjectRelease();
          v59 = v18 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v60 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v59, v60);
          swift_bridgeObjectRelease();
          goto LABEL_101;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_101;
        case 6u:
          swift_bridgeObjectRelease();
          v58 = type metadata accessor for ParameterNotAllowed(0);
          goto LABEL_97;
        case 7u:
          swift_bridgeObjectRelease();
          v58 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_97:
          v61 = v18 + *(int *)(v58 + 20);
          v62 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
          goto LABEL_102;
        case 8u:
          sub_23F137248(*(_QWORD *)v18, *(_QWORD *)(v18 + 8), *(_BYTE *)(v18 + 16));
          goto LABEL_102;
        case 9u:
          goto LABEL_101;
        case 0xAu:
          if (*(_QWORD *)(v18 + 8) < 0x10uLL)
            goto LABEL_102;
LABEL_100:
          swift_bridgeObjectRelease();
LABEL_101:
          swift_bridgeObjectRelease();
LABEL_102:
          v63 = v7 + v17[8];
          if (*(_QWORD *)v63)
          {
            swift_bridgeObjectRelease();
            v64 = *(unsigned __int8 *)(v63 + 24);
            if (v64 != 255)
              sub_23F137270(*(_QWORD *)(v63 + 8), *(_QWORD *)(v63 + 16), v64);
            v65 = *(unsigned __int8 *)(v63 + 48);
            if (v65 != 255)
              sub_23F137270(*(_QWORD *)(v63 + 32), *(_QWORD *)(v63 + 40), v65);
            swift_bridgeObjectRelease();
          }
          break;
        default:
          goto LABEL_102;
      }
LABEL_163:
      swift_bridgeObjectRelease();
      goto LABEL_164;
    case 0x1Cu:
      swift_bridgeObjectRelease();
      v22 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
      goto LABEL_79;
    case 0x1Du:
      swift_bridgeObjectRelease();
      v22 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
      goto LABEL_79;
    case 0x1Eu:
      type metadata accessor for MessagePayload.RequestContent(0);
      v38 = swift_getEnumCaseMultiPayload();
      if (v38 == 3)
      {
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v4))
          v5(v7, v4);
        v47 = (int *)type metadata accessor for SystemPromptResolution(0);
        v5(v7 + v47[5], v4);
        v48 = v7 + v47[6];
        type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v49 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
        }
        swift_bridgeObjectRelease();
        sub_23F137210(*(_QWORD *)(v7 + v47[8]), *(_QWORD *)(v7 + v47[8] + 8), *(_BYTE *)(v7 + v47[8] + 16));
      }
      else if (v38 == 2 || v38 == 1)
      {
        swift_bridgeObjectRelease();
      }
      v22 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
LABEL_79:
      v50 = v22;
      v51 = v7 + *(int *)(v22 + 20);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v51, 1, v4))
        v5(v51, v4);
      v46 = *(int *)(v50 + 24);
LABEL_82:
      if (*(_QWORD *)(v7 + v46 + 8))
        goto LABEL_83;
      break;
    case 0x1Fu:
      type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v23 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v7, v23);
          v24 = v7 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
          v25 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v24, 1, v25))
          {
            v5(v24, v4);
            swift_bridgeObjectRelease();
            goto LABEL_119;
          }
          goto LABEL_120;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_119;
        case 2u:
          goto LABEL_118;
        case 3u:
          swift_bridgeObjectRelease();
          v66 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_115;
        case 4u:
          swift_bridgeObjectRelease();
          v67 = v7 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v68 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v67, v68);
          swift_bridgeObjectRelease();
          goto LABEL_119;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_119;
        case 6u:
          swift_bridgeObjectRelease();
          v66 = type metadata accessor for ParameterNotAllowed(0);
          goto LABEL_115;
        case 7u:
          swift_bridgeObjectRelease();
          v66 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_115:
          v69 = v7 + *(int *)(v66 + 20);
          v70 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v69, v70);
          goto LABEL_120;
        case 8u:
          sub_23F137248(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_BYTE *)(v7 + 16));
          goto LABEL_120;
        case 9u:
          goto LABEL_119;
        case 0xAu:
          if (*(_QWORD *)(v7 + 8) < 0x10uLL)
            goto LABEL_120;
LABEL_118:
          swift_bridgeObjectRelease();
LABEL_119:
          swift_bridgeObjectRelease();
LABEL_120:
          type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
          break;
        default:
          goto LABEL_120;
      }
      goto LABEL_164;
    case 0x22u:
      v5(v7, v4);
      type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
      goto LABEL_164;
    case 0x23u:
      v5(v7, v4);
      type metadata accessor for MessagePayload.ActionSummaryUpdate(0);
LABEL_83:
      swift_bridgeObjectRelease();
LABEL_164:
      swift_bridgeObjectRelease();
      break;
    case 0x24u:
      type metadata accessor for SessionClientDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
        case 5u:
        case 7u:
        case 8u:
          goto LABEL_59;
        case 2u:
          v5(v7, v4);
          v26 = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
          swift_bridgeObjectRelease();
          v27 = v7 + *(int *)(v26 + 28);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v27, 1, v4))
            goto LABEL_167;
          goto LABEL_163;
        case 4u:
          v5(v7, v4);
          type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
          goto LABEL_164;
        case 9u:
          v5(v7, v4);
          v54 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
          v5(v7 + *(int *)(v54 + 20), v4);
          v55 = (uint64_t *)(v7 + *(int *)(v54 + 24));
          v56 = v55[1];
          if (v56 >> 60 == 15)
            goto LABEL_165;
          v57 = *v55;
          break;
        default:
          goto LABEL_165;
      }
LABEL_175:
      sub_23F1311B4(v57, v56);
      break;
    case 0x25u:
      type metadata accessor for SessionServerDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xCu:
LABEL_59:
          v5(v7, v4);
          break;
        case 1u:
          swift_bridgeObjectRelease();
          v27 = v7 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0) + 24);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v27, 1, v4))
LABEL_167:
            v5(v27, v4);
          goto LABEL_163;
        case 3u:
        case 4u:
          goto LABEL_164;
        case 5u:
          swift_bridgeObjectRelease();
          v89 = v7 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0) + 24);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v89, 1, v4))
            v5(v89, v4);
          goto LABEL_164;
        case 6u:
          v5(v7, v4);
          type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
          goto LABEL_164;
        case 0xBu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v90 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
          v5(v7 + *(int *)(v90 + 32), v4);
          swift_bridgeObjectRelease();
          sub_23F1311B4(*(_QWORD *)(v7 + *(int *)(v90 + 40)), *(_QWORD *)(v7 + *(int *)(v90 + 40) + 8));
          goto LABEL_164;
        case 0xDu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v57 = *(_QWORD *)(v7 + 72);
          v56 = *(_QWORD *)(v7 + 80);
          goto LABEL_175;
        default:
          goto LABEL_165;
      }
      break;
    case 0x26u:
      sub_23F137288(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), *(_QWORD *)(v7 + 48));
      break;
    default:
      break;
  }
LABEL_165:
  swift_bridgeObjectRelease();
  v86 = a1 + a2[10];
  v87 = sub_23F267D24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 8))(v86, v87);
}

uint64_t initializeWithCopy for SessionServerMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  id *v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void *v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  char *v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  int *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  uint64_t *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  unsigned __int8 v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  _QWORD *v163;
  uint64_t v164;
  char *v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int *v173;
  int *v174;
  uint64_t *v175;
  int *v176;
  uint64_t v177;
  uint64_t *v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  unint64_t v187;
  int *v188;
  uint64_t v189;
  uint64_t *v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  unsigned __int8 v204;
  int *v205;
  uint64_t v206;
  uint64_t *v207;
  char *v208;
  char *v209;
  unsigned int v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  int *v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  unsigned __int8 v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t *v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  _QWORD *v250;
  _QWORD *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  void (*v256)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *__dst;
  int *v259;
  int *v260;
  int *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a2 + v8, 1, v6))
  {
    v11 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (uint64_t *)(a1 + v13);
  v18 = (id *)(a2 + v13);
  v19 = type metadata accessor for MessagePayload(0);
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v20 = type metadata accessor for MessagePayload.RequestContent(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v259 = a3;
      v262 = a2;
      switch(EnumCaseMultiPayload)
      {
        case 3:
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18, 1, v6))
          {
            v171 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
          }
          else
          {
            v7((uint64_t)v17, (uint64_t)v18, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v17, 0, 1, v6);
          }
          v188 = (int *)type metadata accessor for SystemPromptResolution(0);
          v7((uint64_t)v17 + v188[5], (uint64_t)v18 + v188[5], v6);
          v189 = v188[6];
          v190 = v17;
          v191 = (char *)v17 + v189;
          v192 = (char *)v18 + v189;
          v193 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v194 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v191, v192, v194);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v191, v192, *(_QWORD *)(*(_QWORD *)(v193 - 8) + 64));
          }
          v195 = v188[7];
          v196 = (char *)v190 + v195;
          v197 = (char *)v18 + v195;
          *(_DWORD *)v196 = *(_DWORD *)v197;
          v198 = *((_QWORD *)v197 + 2);
          *((_QWORD *)v196 + 1) = *((_QWORD *)v197 + 1);
          *((_QWORD *)v196 + 2) = v198;
          v199 = v188[8];
          v200 = (char *)v190 + v199;
          v201 = (char *)v18 + v199;
          v202 = *(_QWORD *)v201;
          v203 = *((_QWORD *)v201 + 1);
          v204 = v201[16];
          swift_bridgeObjectRetain();
          sub_23F135C7C(v202, v203, v204);
          *(_QWORD *)v200 = v202;
          *((_QWORD *)v200 + 1) = v203;
          v17 = v190;
          v200[16] = v204;
          break;
        case 2:
          *v17 = (uint64_t)*v18;
          swift_bridgeObjectRetain();
          break;
        case 1:
          v22 = (uint64_t)v18[1];
          *v17 = (uint64_t)*v18;
          v17[1] = v22;
          swift_bridgeObjectRetain();
          break;
        default:
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
          goto LABEL_91;
      }
      swift_storeEnumTagMultiPayload();
LABEL_91:
      v205 = (int *)type metadata accessor for MessagePayload.Request(0);
      *(uint64_t *)((char *)v17 + v205[5]) = *(uint64_t *)((char *)v18 + v205[5]);
      *((_BYTE *)v17 + v205[6]) = *((_BYTE *)v18 + v205[6]);
      v206 = v205[7];
      v207 = v17;
      v208 = (char *)v17 + v206;
      v209 = (char *)v18 + v206;
      v210 = *((unsigned __int8 *)v18 + v206 + 16);
      swift_bridgeObjectRetain();
      if (v210 <= 0xFD)
      {
        v212 = *(_QWORD *)v209;
        v211 = *((_QWORD *)v209 + 1);
        sub_23F135C9C(v212, v211, v210);
        *(_QWORD *)v208 = v212;
        *((_QWORD *)v208 + 1) = v211;
        v208[16] = v210;
      }
      else
      {
        *(_OWORD *)v208 = *(_OWORD *)v209;
        v208[16] = v209[16];
      }
      v213 = v205[8];
      v214 = (char *)v207 + v213;
      v215 = (char *)v18 + v213;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18 + v213, 1, v6))
      {
        v216 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v214, v215, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v214, (uint64_t)v215, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v214, 0, 1, v6);
      }
      a3 = v259;
      v217 = v207;
      a2 = v262;
      v218 = v205[9];
      v168 = (uint64_t)v217 + v218;
      v169 = (char *)v18 + v218;
      v170 = *((_QWORD *)v169 + 1);
      if (v170)
        goto LABEL_108;
      *(_OWORD *)v168 = *(_OWORD *)v169;
      *(_QWORD *)(v168 + 16) = *((_QWORD *)v169 + 2);
      goto LABEL_115;
    case 4u:
      v23 = (uint64_t)v18[1];
      *v17 = (uint64_t)*v18;
      v17[1] = v23;
      v24 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
      v25 = (char *)v17 + v24;
      v26 = (char *)v18 + v24;
      v27 = sub_23F268078();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v25, v26, v27);
      goto LABEL_115;
    case 5u:
      v29 = *v18;
      v30 = *((_BYTE *)v18 + 8);
      sub_23F131158(*v18);
      *v17 = (uint64_t)v29;
      *((_BYTE *)v17 + 8) = v30;
      v17[2] = (uint64_t)v18[2];
      swift_bridgeObjectRetain();
      goto LABEL_115;
    case 6u:
    case 9u:
    case 0x20u:
    case 0x21u:
    case 0x28u:
      v103 = (uint64_t)v18[1];
      *v17 = (uint64_t)*v18;
      v17[1] = v103;
      v17[2] = (uint64_t)v18[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_115;
    case 7u:
      v31 = (uint64_t)v18[1];
      *v17 = (uint64_t)*v18;
      v17[1] = v31;
      v17[2] = (uint64_t)v18[2];
      *((_BYTE *)v17 + 24) = *((_BYTE *)v18 + 24);
      v32 = (uint64_t)v18[4];
      v33 = (uint64_t)v18[5];
      v17[4] = v32;
      v17[5] = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_115;
    case 8u:
      *v17 = (uint64_t)*v18;
      *((_BYTE *)v17 + 8) = *((_BYTE *)v18 + 8);
      v34 = (uint64_t)v18[3];
      v17[2] = (uint64_t)v18[2];
      v17[3] = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_115;
    case 0xAu:
    case 0xBu:
    case 0x13u:
    case 0x18u:
    case 0x19u:
    case 0x1Bu:
      v83 = (uint64_t)v18[1];
      *v17 = (uint64_t)*v18;
      v17[1] = v83;
      swift_bridgeObjectRetain();
      goto LABEL_115;
    case 0xCu:
      *v17 = (uint64_t)*v18;
      swift_bridgeObjectRetain();
      goto LABEL_115;
    case 0xDu:
      v7((uint64_t)v17, (uint64_t)v18, v6);
      v35 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
      v7((uint64_t)v17 + v35[5], (uint64_t)v18 + v35[5], v6);
      v36 = v35[6];
      v37 = (uint64_t *)((char *)v17 + v36);
      v38 = (id *)((char *)v18 + v36);
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
      v40 = v35[7];
      v41 = (uint64_t *)((char *)v17 + v40);
      v42 = (id *)((char *)v18 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      v44 = v35[8];
      v45 = (uint64_t *)((char *)v17 + v44);
      v46 = (id *)((char *)v18 + v44);
      v47 = v46[1];
      *v45 = *v46;
      v45[1] = v47;
      *(uint64_t *)((char *)v17 + v35[9]) = *(uint64_t *)((char *)v18 + v35[9]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_115;
    case 0xEu:
      v7((uint64_t)v17, (uint64_t)v18, v6);
      v48 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
      v49 = (char *)v17 + v48;
      v50 = (char *)v18 + v48;
      type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v51 = *(void **)v50;
        v52 = v50[8];
        sub_23F131158(v51);
        *(_QWORD *)v49 = v51;
        v49[8] = v52;
      }
      else
      {
        v124 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(v49, v50, v124);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_115;
    case 0xFu:
      *(_DWORD *)v17 = *(_DWORD *)v18;
      v53 = (uint64_t)v18[2];
      v17[1] = (uint64_t)v18[1];
      v17[2] = v53;
      v54 = (uint64_t)v18[4];
      v17[3] = (uint64_t)v18[3];
      v17[4] = v54;
      v55 = (uint64_t)v18[6];
      v17[5] = (uint64_t)v18[5];
      v17[6] = v55;
      v56 = (uint64_t)v18[8];
      v17[7] = (uint64_t)v18[7];
      v17[8] = v56;
      *((_BYTE *)v17 + 72) = *((_BYTE *)v18 + 72);
      v57 = (uint64_t)v18[11];
      v17[10] = (uint64_t)v18[10];
      v17[11] = v57;
      v17[12] = (uint64_t)v18[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_115;
    case 0x10u:
      v7((uint64_t)v17, (uint64_t)v18, v6);
      v58 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
      v59 = v58[5];
      v60 = (uint64_t *)((char *)v17 + v59);
      v61 = (uint64_t *)((char *)v18 + v59);
      v63 = *v61;
      v62 = v61[1];
      *v60 = v63;
      v60[1] = v62;
      *(uint64_t *)((char *)v17 + v58[6]) = *(uint64_t *)((char *)v18 + v58[6]);
      *(uint64_t *)((char *)v17 + v58[7]) = *(uint64_t *)((char *)v18 + v58[7]);
      v64 = v58[8];
      v65 = (uint64_t *)((char *)v17 + v64);
      v66 = (id *)((char *)v18 + v64);
      v67 = v66[1];
      *v65 = *v66;
      v65[1] = v67;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_115;
    case 0x11u:
      v7((uint64_t)v17, (uint64_t)v18, v6);
      type metadata accessor for MessagePayload.ClientActionResult(0);
      type metadata accessor for StatementOutcome(0);
      v68 = (char *)&loc_23F20DA4C + 4 * word_23F2796D6[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x12u:
      v69 = (uint64_t)*v18;
      v70 = (unint64_t)v18[1];
      sub_23F131170((uint64_t)*v18, v70);
      *v17 = v69;
      v17[1] = v70;
      v71 = (uint64_t)v18[2];
      v72 = (unint64_t)v18[3];
      sub_23F131170(v71, v72);
      v17[2] = v71;
      v17[3] = v72;
      v73 = (uint64_t)v18[5];
      v17[4] = (uint64_t)v18[4];
      v17[5] = v73;
      swift_bridgeObjectRetain();
      goto LABEL_115;
    case 0x14u:
      v7((uint64_t)v17, (uint64_t)v18, v6);
      v74 = *(int *)(type metadata accessor for SystemPrompt(0) + 20);
      v75 = (uint64_t *)((char *)v17 + v74);
      v76 = (id *)((char *)v18 + v74);
      v77 = v76[1];
      *v75 = *v76;
      v75[1] = v77;
      type metadata accessor for SystemPrompt.Prompt(0);
      swift_bridgeObjectRetain();
      v78 = (char *)&loc_23F20DBA8 + 4 * word_23F2796CE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x15u:
      v263 = a2;
      v79 = a3;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18, 1, v6))
      {
        v80 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v17, (uint64_t)v18, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v17, 0, 1, v6);
      }
      v125 = (int *)type metadata accessor for SystemPromptResolution(0);
      v7((uint64_t)v17 + v125[5], (uint64_t)v18 + v125[5], v6);
      v126 = v125[6];
      v127 = v17;
      v128 = (char *)v17 + v126;
      v129 = (char *)v18 + v126;
      v130 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v131 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v128, v129, v131);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
      }
      v132 = v125[7];
      v133 = (char *)v127 + v132;
      v134 = (char *)v18 + v132;
      *(_DWORD *)v133 = *(_DWORD *)v134;
      v135 = *((_QWORD *)v134 + 2);
      *((_QWORD *)v133 + 1) = *((_QWORD *)v134 + 1);
      *((_QWORD *)v133 + 2) = v135;
      v136 = v125[8];
      v137 = (char *)v127 + v136;
      v138 = (char *)v18 + v136;
      v139 = *(_QWORD *)v138;
      v140 = *((_QWORD *)v138 + 1);
      v141 = v138[16];
      swift_bridgeObjectRetain();
      sub_23F135C7C(v139, v140, v141);
      *(_QWORD *)v137 = v139;
      *((_QWORD *)v137 + 1) = v140;
      v137[16] = v141;
      swift_storeEnumTagMultiPayload();
      a3 = v79;
      a2 = v263;
      goto LABEL_116;
    case 0x16u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18, 1, v6))
      {
        v81 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v17, (uint64_t)v18, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v17, 0, 1, v6);
      }
      v146 = type metadata accessor for ActionResponse(0);
      v147 = *(int *)(v146 + 20);
      v148 = (uint64_t *)((char *)v17 + v147);
      v149 = (id *)((char *)v18 + v147);
      v150 = v149[1];
      *v148 = *v149;
      v148[1] = v150;
      v151 = *(int *)(v146 + 24);
      v152 = (uint64_t *)((char *)v17 + v151);
      v153 = (id *)((char *)v18 + v151);
      v154 = v153[1];
      *v152 = *v153;
      v152[1] = v154;
      type metadata accessor for ActionOutcome(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v155 = (char *)&loc_23F20E3C8 + 4 * word_23F2796B8[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x17u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18, 1, v6))
      {
        v82 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v17, (uint64_t)v18, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v17, 0, 1, v6);
      }
      v156 = type metadata accessor for SystemResponse(0);
      v157 = *(int *)(v156 + 20);
      v158 = (char *)v17 + v157;
      v159 = (char *)v18 + v157;
      v160 = *((_QWORD *)v159 + 2);
      if (v160 == 1)
      {
        *(_OWORD *)v158 = *(_OWORD *)v159;
        *((_QWORD *)v158 + 2) = *((_QWORD *)v159 + 2);
      }
      else
      {
        *(_DWORD *)v158 = *(_DWORD *)v159;
        *((_QWORD *)v158 + 1) = *((_QWORD *)v159 + 1);
        *((_QWORD *)v158 + 2) = v160;
        swift_bridgeObjectRetain();
      }
      v161 = *(int *)(v156 + 24);
      v162 = (uint64_t *)((char *)v17 + v161);
      v163 = (id *)((char *)v18 + v161);
      v164 = v163[1];
      *v162 = *v163;
      v162[1] = v164;
      type metadata accessor for StatementOutcome(0);
      swift_bridgeObjectRetain();
      v165 = (char *)&loc_23F20E528 + 4 * word_23F2796A2[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x1Cu:
      v264 = a2;
      v84 = a3;
      v85 = (uint64_t)v18[1];
      *v17 = (uint64_t)*v18;
      v17[1] = v85;
      v86 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
      v87 = *(int *)(v86 + 20);
      v88 = v17;
      v89 = (char *)v17 + v87;
      v90 = (char *)v18 + v87;
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v90, 1, v6))
      {
        v91 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v89, (uint64_t)v90, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v89, 0, 1, v6);
      }
      a3 = v84;
      v166 = v88;
      a2 = v264;
      v167 = *(int *)(v86 + 24);
      v168 = (uint64_t)v166 + v167;
      v169 = (char *)v18 + v167;
      v170 = *((_QWORD *)v169 + 1);
      if (v170)
        goto LABEL_108;
      *(_OWORD *)v168 = *(_OWORD *)v169;
      *(_QWORD *)(v168 + 16) = *((_QWORD *)v169 + 2);
      goto LABEL_115;
    case 0x1Du:
      v265 = a2;
      v92 = a3;
      *v17 = (uint64_t)*v18;
      v93 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
      v94 = *(int *)(v93 + 20);
      v95 = v17;
      v96 = (char *)v17 + v94;
      v97 = (char *)v18 + v94;
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v97, 1, v6))
      {
        v98 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v96, (uint64_t)v97, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v96, 0, 1, v6);
      }
      v142 = *(int *)(v93 + 24);
      v143 = (uint64_t *)((char *)v95 + v142);
      v144 = (id *)((char *)v18 + v142);
      v145 = v144[1];
      a3 = v92;
      if (v145)
      {
        *v143 = *v144;
        v143[1] = v145;
        v143[2] = v144[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v143 = *(_OWORD *)v144;
        v143[2] = v144[2];
      }
      a2 = v265;
      goto LABEL_115;
    case 0x1Eu:
      v99 = type metadata accessor for MessagePayload.RequestContent(0);
      v100 = swift_getEnumCaseMultiPayload();
      v260 = a3;
      v266 = a2;
      switch(v100)
      {
        case 3:
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18, 1, v6))
          {
            v172 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
          }
          else
          {
            v7((uint64_t)v17, (uint64_t)v18, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v17, 0, 1, v6);
          }
          v219 = (int *)type metadata accessor for SystemPromptResolution(0);
          v7((uint64_t)v17 + v219[5], (uint64_t)v18 + v219[5], v6);
          v220 = v219[6];
          __dst = v17;
          v221 = (char *)v17 + v220;
          v222 = (char *)v18 + v220;
          v223 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v224 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(v221, v222, v224);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
          }
          v225 = v219[7];
          v226 = (char *)__dst + v225;
          v227 = (char *)v18 + v225;
          *(_DWORD *)v226 = *(_DWORD *)v227;
          v228 = *((_QWORD *)v227 + 2);
          *((_QWORD *)v226 + 1) = *((_QWORD *)v227 + 1);
          *((_QWORD *)v226 + 2) = v228;
          v229 = v219[8];
          v230 = (char *)__dst + v229;
          v231 = (char *)v18 + v229;
          v232 = *(_QWORD *)v231;
          v233 = *((_QWORD *)v231 + 1);
          v234 = v231[16];
          swift_bridgeObjectRetain();
          sub_23F135C7C(v232, v233, v234);
          *(_QWORD *)v230 = v232;
          *((_QWORD *)v230 + 1) = v233;
          v17 = __dst;
          v230[16] = v234;
          swift_storeEnumTagMultiPayload();
          break;
        case 2:
          *v17 = (uint64_t)*v18;
          swift_bridgeObjectRetain();
          goto LABEL_77;
        case 1:
          v101 = (uint64_t)v18[1];
          *v17 = (uint64_t)*v18;
          v17[1] = v101;
          swift_bridgeObjectRetain();
LABEL_77:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
          break;
      }
      v235 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
      v236 = *(int *)(v235 + 20);
      v237 = v17;
      v238 = (char *)v17 + v236;
      v239 = (char *)v18 + v236;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18 + v236, 1, v6))
      {
        v240 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v238, v239, *(_QWORD *)(*(_QWORD *)(v240 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v238, (uint64_t)v239, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v238, 0, 1, v6);
      }
      a3 = v260;
      v241 = v237;
      a2 = v266;
      v242 = *(int *)(v235 + 24);
      v168 = (uint64_t)v241 + v242;
      v169 = (char *)v18 + v242;
      v170 = *((_QWORD *)v169 + 1);
      if (v170)
      {
LABEL_108:
        *(_QWORD *)v168 = *(_QWORD *)v169;
        *(_QWORD *)(v168 + 8) = v170;
        *(_QWORD *)(v168 + 16) = *((_QWORD *)v169 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v168 = *(_OWORD *)v169;
        *(_QWORD *)(v168 + 16) = *((_QWORD *)v169 + 2);
      }
LABEL_115:
      swift_storeEnumTagMultiPayload();
LABEL_116:
      v248 = a3[9];
      v249 = a3[10];
      v250 = (_QWORD *)(a1 + v248);
      v251 = (_QWORD *)(a2 + v248);
      v252 = v251[1];
      *v250 = *v251;
      v250[1] = v252;
      v253 = a1 + v249;
      v254 = a2 + v249;
      v255 = sub_23F267D24();
      v256 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v255 - 8) + 16);
      swift_bridgeObjectRetain();
      v256(v253, v254, v255);
      return a1;
    case 0x1Fu:
      type metadata accessor for StatementOutcome(0);
      v102 = (char *)&loc_23F20DE48 + 4 * word_23F27968C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x22u:
      v7((uint64_t)v17, (uint64_t)v18, v6);
      v104 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
      *((_BYTE *)v17 + *(int *)(v104 + 20)) = *((_BYTE *)v18 + *(int *)(v104 + 20));
      v105 = *(int *)(v104 + 24);
      v106 = (char *)v17 + v105;
      v107 = (char *)v18 + v105;
      *(_DWORD *)v106 = *(_DWORD *)v107;
      v108 = *((_QWORD *)v107 + 2);
      *((_QWORD *)v106 + 1) = *((_QWORD *)v107 + 1);
      *((_QWORD *)v106 + 2) = v108;
      swift_bridgeObjectRetain();
      goto LABEL_115;
    case 0x23u:
      v7((uint64_t)v17, (uint64_t)v18, v6);
      v109 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
      v110 = (uint64_t *)((char *)v17 + v109);
      v111 = (id *)((char *)v18 + v109);
      v112 = v111[1];
      *v110 = *v111;
      v110[1] = v112;
      v110[2] = v111[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_115;
    case 0x24u:
      v113 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
        case 5u:
        case 7u:
        case 8u:
          v7((uint64_t)v17, (uint64_t)v18, v6);
          goto LABEL_111;
        case 2u:
          v268 = a2;
          v173 = a3;
          v7((uint64_t)v17, (uint64_t)v18, v6);
          v174 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
          v175 = v17;
          v176 = v174;
          *(uint64_t *)((char *)v175 + v174[5]) = *(uint64_t *)((char *)v18 + v174[5]);
          *(uint64_t *)((char *)v175 + v174[6]) = *(uint64_t *)((char *)v18 + v174[6]);
          v177 = v174[7];
          v178 = v175;
          v179 = (char *)v175 + v177;
          v180 = (char *)v18 + v177;
          swift_bridgeObjectRetain();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v180, 1, v6))
          {
            v181 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
          }
          else
          {
            v7((uint64_t)v179, (uint64_t)v180, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v179, 0, 1, v6);
          }
          v244 = v176[8];
          v245 = (uint64_t *)((char *)v178 + v244);
          v246 = (id *)((char *)v18 + v244);
          v247 = v246[1];
          *v245 = *v246;
          v245[1] = v247;
          *(uint64_t *)((char *)v178 + v176[9]) = *(uint64_t *)((char *)v18 + v176[9]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          a3 = v173;
          a2 = v268;
          goto LABEL_115;
        case 4u:
          v7((uint64_t)v17, (uint64_t)v18, v6);
          v182 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
          *(uint64_t *)((char *)v17 + *(int *)(v182 + 20)) = *(uint64_t *)((char *)v18 + *(int *)(v182 + 20));
          swift_bridgeObjectRetain();
          goto LABEL_111;
        case 9u:
          v7((uint64_t)v17, (uint64_t)v18, v6);
          v183 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
          v7((uint64_t)v17 + *(int *)(v183 + 20), (uint64_t)v18 + *(int *)(v183 + 20), v6);
          v184 = *(int *)(v183 + 24);
          v185 = (char *)v17 + v184;
          v186 = (char *)v18 + v184;
          v187 = *((_QWORD *)v186 + 1);
          if (v187 >> 60 == 15)
          {
            *(_OWORD *)v185 = *(_OWORD *)v186;
          }
          else
          {
            v243 = *(_QWORD *)v186;
            sub_23F131170(*(_QWORD *)v186, *((_QWORD *)v186 + 1));
            *(_QWORD *)v185 = v243;
            *((_QWORD *)v185 + 1) = v187;
          }
LABEL_111:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
          break;
      }
      goto LABEL_115;
    case 0x25u:
      type metadata accessor for SessionServerDebuggerEvent.Payload(0);
      v114 = (char *)&loc_23F20E064 + 4 * word_23F27965C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x26u:
      v115 = (uint64_t)*v18;
      v116 = (uint64_t)v18[1];
      v267 = a2;
      v118 = (uint64_t)v18[2];
      v117 = (uint64_t)v18[3];
      v261 = a3;
      v120 = (uint64_t)v18[4];
      v119 = (uint64_t)v18[5];
      v121 = (uint64_t)v18[6];
      v122 = (uint64_t)v18[7];
      sub_23F135CF4(v115, v116, v118, v117, v120, v119, v121);
      *v17 = v115;
      v17[1] = v116;
      v17[2] = v118;
      v17[3] = v117;
      a2 = v267;
      v17[4] = v120;
      v17[5] = v119;
      a3 = v261;
      v17[6] = v121;
      v17[7] = v122;
      goto LABEL_115;
    case 0x27u:
      v123 = (uint64_t)v18[1];
      *v17 = (uint64_t)*v18;
      v17[1] = v123;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_115;
    default:
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      goto LABEL_116;
  }
}

uint64_t assignWithCopy for SessionServerMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *v19;
  id *v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  char v30;
  void (*v31)(uint64_t *, id *, uint64_t);
  int *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void *v45;
  char v46;
  int *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  char *v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id *v69;
  uint64_t *v70;
  char *v71;
  id *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id *v77;
  uint64_t *v78;
  char *v79;
  id *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id *v101;
  uint64_t v102;
  uint64_t v103;
  int *v104;
  uint64_t v105;
  uint64_t *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  unsigned __int8 v119;
  uint64_t v120;
  char *v121;
  char *v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  __int128 v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  char *v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(uint64_t *, id *, uint64_t);
  int *v146;
  uint64_t *v147;
  int *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(uint64_t *, id *, uint64_t);
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  unint64_t v159;
  int *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  unsigned __int8 v174;
  int *v175;
  uint64_t v176;
  char *v177;
  uint64_t *v178;
  char *v179;
  char *v180;
  unsigned int v181;
  __int128 v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  __int128 v190;
  int *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  unsigned __int8 v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t *v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  __int128 v213;
  uint64_t v214;
  uint64_t v215;
  _QWORD *v216;
  _QWORD *v217;
  uint64_t v218;
  _QWORD *v219;
  _QWORD *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t result;
  char *__dst;
  uint64_t v227;
  uint64_t *v228;
  uint64_t *v229;
  uint64_t *v230;
  int *v231;
  int *v232;
  int *v233;
  int *v234;
  int *v235;
  int *v236;

  v6 = sub_23F267D84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v6);
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1 + v9, 1, v6);
  v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v14 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v18 = a3[8];
    v19 = (uint64_t *)(a1 + v18);
    v20 = (id *)(a2 + v18);
    sub_23F1BE0BC(a1 + v18, type metadata accessor for MessagePayload);
    v21 = type metadata accessor for MessagePayload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v22 = type metadata accessor for MessagePayload.RequestContent(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v231 = a3;
        switch(EnumCaseMultiPayload)
        {
          case 3:
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v6))
            {
              v143 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v19, v20, v6);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v6);
            }
            v160 = (int *)type metadata accessor for SystemPromptResolution(0);
            (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v19 + v160[5], (char *)v20 + v160[5], v6);
            v161 = v160[6];
            v229 = v19;
            v162 = (char *)v19 + v161;
            v163 = (char *)v20 + v161;
            v164 = type metadata accessor for SystemPromptResolution.UserAction(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v165 = sub_23F268078();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v162, v163, v165);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
            }
            v166 = v160[7];
            v167 = (char *)v229 + v166;
            v168 = (char *)v20 + v166;
            *(_DWORD *)v167 = *(_DWORD *)v168;
            *((_QWORD *)v167 + 1) = *((_QWORD *)v168 + 1);
            *((_QWORD *)v167 + 2) = *((_QWORD *)v168 + 2);
            v169 = v160[8];
            v170 = (char *)v229 + v169;
            v171 = (char *)v20 + v169;
            v172 = *(_QWORD *)v171;
            v173 = *((_QWORD *)v171 + 1);
            v174 = v171[16];
            swift_bridgeObjectRetain();
            sub_23F135C7C(v172, v173, v174);
            *(_QWORD *)v170 = v172;
            *((_QWORD *)v170 + 1) = v173;
            v19 = v229;
            v170[16] = v174;
            break;
          case 2:
            *v19 = (uint64_t)*v20;
            swift_bridgeObjectRetain();
            break;
          case 1:
            *v19 = (uint64_t)*v20;
            v19[1] = (uint64_t)v20[1];
            swift_bridgeObjectRetain();
            break;
          default:
            memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
            goto LABEL_94;
        }
        swift_storeEnumTagMultiPayload();
LABEL_94:
        v175 = (int *)type metadata accessor for MessagePayload.Request(0);
        *(uint64_t *)((char *)v19 + v175[5]) = *(uint64_t *)((char *)v20 + v175[5]);
        *((_BYTE *)v19 + v175[6]) = *((_BYTE *)v20 + v175[6]);
        v176 = v175[7];
        v177 = (char *)v20;
        v178 = v19;
        v179 = (char *)v19 + v176;
        __dst = v177;
        v180 = &v177[v176];
        v181 = v177[v176 + 16];
        swift_bridgeObjectRetain();
        if (v181 <= 0xFD)
        {
          v184 = *(_QWORD *)v180;
          v183 = *((_QWORD *)v180 + 1);
          sub_23F135C9C(v184, v183, v181);
          *(_QWORD *)v179 = v184;
          *((_QWORD *)v179 + 1) = v183;
          v179[16] = v181;
        }
        else
        {
          v182 = *(_OWORD *)v180;
          v179[16] = v180[16];
          *(_OWORD *)v179 = v182;
        }
        v185 = v175[8];
        v186 = (char *)v178 + v185;
        v187 = &__dst[v185];
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&__dst[v185], 1, v6))
        {
          v188 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v186, v187, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v186, 0, 1, v6);
        }
        v189 = v175[9];
        v121 = (char *)v178 + v189;
        v122 = &__dst[v189];
        a3 = v231;
        if (*((_QWORD *)v122 + 1))
          goto LABEL_71;
        v190 = *(_OWORD *)v122;
        *((_QWORD *)v121 + 2) = *((_QWORD *)v122 + 2);
        *(_OWORD *)v121 = v190;
        goto LABEL_118;
      case 4u:
        *v19 = (uint64_t)*v20;
        v19[1] = (uint64_t)v20[1];
        v24 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
        v25 = (char *)v19 + v24;
        v26 = (char *)v20 + v24;
        v27 = sub_23F268078();
        v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v25, v26, v27);
        goto LABEL_118;
      case 5u:
        v29 = *v20;
        v30 = *((_BYTE *)v20 + 8);
        sub_23F131158(*v20);
        *v19 = (uint64_t)v29;
        *((_BYTE *)v19 + 8) = v30;
        v19[2] = (uint64_t)v20[2];
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 6u:
      case 9u:
      case 0x20u:
      case 0x21u:
      case 0x28u:
        *v19 = (uint64_t)*v20;
        v19[1] = (uint64_t)v20[1];
        v19[2] = (uint64_t)v20[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 7u:
        *v19 = (uint64_t)*v20;
        v19[1] = (uint64_t)v20[1];
        v19[2] = (uint64_t)v20[2];
        *((_BYTE *)v19 + 24) = *((_BYTE *)v20 + 24);
        v19[4] = (uint64_t)v20[4];
        v19[5] = (uint64_t)v20[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 8u:
        *v19 = (uint64_t)*v20;
        *((_BYTE *)v19 + 8) = *((_BYTE *)v20 + 8);
        v19[2] = (uint64_t)v20[2];
        v19[3] = (uint64_t)v20[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 0xAu:
      case 0xBu:
      case 0x13u:
      case 0x18u:
      case 0x19u:
      case 0x1Bu:
        *v19 = (uint64_t)*v20;
        v19[1] = (uint64_t)v20[1];
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 0xCu:
        *v19 = (uint64_t)*v20;
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 0xDu:
        v31 = *(void (**)(uint64_t *, id *, uint64_t))(v7 + 16);
        v31(v19, v20, v6);
        v32 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
        v31((uint64_t *)((char *)v19 + v32[5]), (id *)((char *)v20 + v32[5]), v6);
        v33 = v32[6];
        v34 = (uint64_t *)((char *)v19 + v33);
        v35 = (id *)((char *)v20 + v33);
        *v34 = *v35;
        v34[1] = v35[1];
        v36 = v32[7];
        v37 = (uint64_t *)((char *)v19 + v36);
        v38 = (id *)((char *)v20 + v36);
        *v37 = *v38;
        v37[1] = v38[1];
        v39 = v32[8];
        v40 = (uint64_t *)((char *)v19 + v39);
        v41 = (id *)((char *)v20 + v39);
        *v40 = *v41;
        v40[1] = v41[1];
        *(uint64_t *)((char *)v19 + v32[9]) = *(uint64_t *)((char *)v20 + v32[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 0xEu:
        (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v19, v20, v6);
        v42 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
        v43 = (char *)v19 + v42;
        v44 = (char *)v20 + v42;
        type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v45 = *(void **)v44;
          v46 = v44[8];
          sub_23F131158(v45);
          *(_QWORD *)v43 = v45;
          v43[8] = v46;
        }
        else
        {
          v103 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v43, v44, v103);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_118;
      case 0xFu:
        *(_DWORD *)v19 = *(_DWORD *)v20;
        v19[1] = (uint64_t)v20[1];
        v19[2] = (uint64_t)v20[2];
        v19[3] = (uint64_t)v20[3];
        v19[4] = (uint64_t)v20[4];
        v19[5] = (uint64_t)v20[5];
        v19[6] = (uint64_t)v20[6];
        v19[7] = (uint64_t)v20[7];
        v19[8] = (uint64_t)v20[8];
        *((_BYTE *)v19 + 72) = *((_BYTE *)v20 + 72);
        v19[10] = (uint64_t)v20[10];
        v19[11] = (uint64_t)v20[11];
        v19[12] = (uint64_t)v20[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 0x10u:
        (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v19, v20, v6);
        v47 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
        v48 = v47[5];
        v49 = (uint64_t *)((char *)v19 + v48);
        v50 = (id *)((char *)v20 + v48);
        *v49 = *v50;
        v49[1] = v50[1];
        *(uint64_t *)((char *)v19 + v47[6]) = *(uint64_t *)((char *)v20 + v47[6]);
        *(uint64_t *)((char *)v19 + v47[7]) = *(uint64_t *)((char *)v20 + v47[7]);
        v51 = v47[8];
        v52 = (uint64_t *)((char *)v19 + v51);
        v53 = (id *)((char *)v20 + v51);
        *v52 = *v53;
        v52[1] = v53[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 0x11u:
        (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v19, v20, v6);
        type metadata accessor for MessagePayload.ClientActionResult(0);
        type metadata accessor for StatementOutcome(0);
        v54 = (char *)&loc_23F210BB0 + 4 * word_23F2797B8[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x12u:
        v55 = (uint64_t)*v20;
        v56 = (unint64_t)v20[1];
        sub_23F131170((uint64_t)*v20, v56);
        *v19 = v55;
        v19[1] = v56;
        v57 = (uint64_t)v20[2];
        v58 = (unint64_t)v20[3];
        sub_23F131170(v57, v58);
        v19[2] = v57;
        v19[3] = v58;
        v19[4] = (uint64_t)v20[4];
        v19[5] = (uint64_t)v20[5];
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 0x14u:
        (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v19, v20, v6);
        v59 = *(int *)(type metadata accessor for SystemPrompt(0) + 20);
        v60 = (uint64_t *)((char *)v19 + v59);
        v61 = (id *)((char *)v20 + v59);
        *v60 = *v61;
        v60[1] = v61[1];
        type metadata accessor for SystemPrompt.Prompt(0);
        swift_bridgeObjectRetain();
        v62 = (char *)&loc_23F210D24 + 4 * word_23F2797B0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x15u:
        v63 = a3;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v6))
        {
          v64 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v19, v20, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v6);
        }
        v104 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v19 + v104[5], (char *)v20 + v104[5], v6);
        v105 = v104[6];
        v106 = v19;
        v107 = (char *)v19 + v105;
        v108 = (char *)v20 + v105;
        v109 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v110 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v107, v108, v110);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
        }
        v111 = v104[7];
        v112 = (char *)v106 + v111;
        v113 = (char *)v20 + v111;
        *(_DWORD *)v112 = *(_DWORD *)v113;
        *((_QWORD *)v112 + 1) = *((_QWORD *)v113 + 1);
        *((_QWORD *)v112 + 2) = *((_QWORD *)v113 + 2);
        v114 = v104[8];
        v115 = (char *)v106 + v114;
        v116 = (char *)v20 + v114;
        v117 = *(_QWORD *)v116;
        v118 = *((_QWORD *)v116 + 1);
        v119 = v116[16];
        swift_bridgeObjectRetain();
        sub_23F135C7C(v117, v118, v119);
        *(_QWORD *)v115 = v117;
        *((_QWORD *)v115 + 1) = v118;
        v115[16] = v119;
        swift_storeEnumTagMultiPayload();
        a3 = v63;
        break;
      case 0x16u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v6))
        {
          v65 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v19, v20, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v6);
        }
        v124 = type metadata accessor for ActionResponse(0);
        v125 = *(int *)(v124 + 20);
        v126 = (uint64_t *)((char *)v19 + v125);
        v127 = (id *)((char *)v20 + v125);
        *v126 = *v127;
        v126[1] = v127[1];
        v128 = *(int *)(v124 + 24);
        v129 = (uint64_t *)((char *)v19 + v128);
        v130 = (id *)((char *)v20 + v128);
        *v129 = *v130;
        v129[1] = v130[1];
        type metadata accessor for ActionOutcome(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v131 = (char *)&loc_23F2115EC + 4 * word_23F27979A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x17u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v6))
        {
          v66 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v19, v20, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v6);
        }
        v132 = type metadata accessor for SystemResponse(0);
        v133 = *(int *)(v132 + 20);
        v134 = (char *)v19 + v133;
        v135 = (char *)v20 + v133;
        if (*((_QWORD *)v135 + 2) == 1)
        {
          v136 = *(_OWORD *)v135;
          *((_QWORD *)v134 + 2) = *((_QWORD *)v135 + 2);
          *(_OWORD *)v134 = v136;
        }
        else
        {
          *(_DWORD *)v134 = *(_DWORD *)v135;
          *((_QWORD *)v134 + 1) = *((_QWORD *)v135 + 1);
          *((_QWORD *)v134 + 2) = *((_QWORD *)v135 + 2);
          swift_bridgeObjectRetain();
        }
        v137 = *(int *)(v132 + 24);
        v138 = (uint64_t *)((char *)v19 + v137);
        v139 = (id *)((char *)v20 + v137);
        *v138 = *v139;
        v138[1] = v139[1];
        type metadata accessor for StatementOutcome(0);
        swift_bridgeObjectRetain();
        v140 = (char *)&loc_23F21175C + 4 * word_23F279784[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x1Cu:
        v232 = a3;
        *v19 = (uint64_t)*v20;
        v19[1] = (uint64_t)v20[1];
        v67 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
        v68 = *(int *)(v67 + 20);
        v69 = v20;
        v70 = v19;
        v71 = (char *)v19 + v68;
        v72 = v69;
        v73 = (char *)v69 + v68;
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v73, 1, v6))
        {
          v74 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v71, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v71, v73, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v71, 0, 1, v6);
        }
        v141 = *(int *)(v67 + 24);
        v121 = (char *)v70 + v141;
        v122 = (char *)v72 + v141;
        a3 = v232;
        if (*((_QWORD *)v122 + 1))
          goto LABEL_71;
        v142 = *(_OWORD *)v122;
        *((_QWORD *)v121 + 2) = *((_QWORD *)v122 + 2);
        *(_OWORD *)v121 = v142;
        goto LABEL_118;
      case 0x1Du:
        v233 = a3;
        *v19 = (uint64_t)*v20;
        v75 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
        v76 = *(int *)(v75 + 20);
        v77 = v20;
        v78 = v19;
        v79 = (char *)v19 + v76;
        v80 = v77;
        v81 = (char *)v77 + v76;
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v81, 1, v6))
        {
          v82 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v79, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v79, v81, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v79, 0, 1, v6);
        }
        v120 = *(int *)(v75 + 24);
        v121 = (char *)v78 + v120;
        v122 = (char *)v80 + v120;
        a3 = v233;
        if (*((_QWORD *)v122 + 1))
          goto LABEL_71;
        v123 = *(_OWORD *)v122;
        *((_QWORD *)v121 + 2) = *((_QWORD *)v122 + 2);
        *(_OWORD *)v121 = v123;
        goto LABEL_118;
      case 0x1Eu:
        v83 = type metadata accessor for MessagePayload.RequestContent(0);
        v84 = swift_getEnumCaseMultiPayload();
        v234 = a3;
        switch(v84)
        {
          case 3:
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v6))
            {
              v144 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v19, v20, v6);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v6);
            }
            v191 = (int *)type metadata accessor for SystemPromptResolution(0);
            (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v19 + v191[5], (char *)v20 + v191[5], v6);
            v192 = v191[6];
            v230 = v19;
            v193 = (char *)v19 + v192;
            v194 = (char *)v20 + v192;
            v195 = type metadata accessor for SystemPromptResolution.UserAction(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v196 = sub_23F268078();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(v193, v194, v196);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
            }
            v197 = v191[7];
            v198 = (char *)v230 + v197;
            v199 = (char *)v20 + v197;
            *(_DWORD *)v198 = *(_DWORD *)v199;
            *((_QWORD *)v198 + 1) = *((_QWORD *)v199 + 1);
            *((_QWORD *)v198 + 2) = *((_QWORD *)v199 + 2);
            v200 = v191[8];
            v201 = (char *)v230 + v200;
            v202 = (char *)v20 + v200;
            v203 = *(_QWORD *)v202;
            v204 = *((_QWORD *)v202 + 1);
            v205 = v202[16];
            swift_bridgeObjectRetain();
            sub_23F135C7C(v203, v204, v205);
            *(_QWORD *)v201 = v203;
            *((_QWORD *)v201 + 1) = v204;
            v19 = v230;
            v201[16] = v205;
            swift_storeEnumTagMultiPayload();
            break;
          case 2:
            *v19 = (uint64_t)*v20;
            swift_bridgeObjectRetain();
            goto LABEL_80;
          case 1:
            *v19 = (uint64_t)*v20;
            v19[1] = (uint64_t)v20[1];
            swift_bridgeObjectRetain();
LABEL_80:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
            break;
        }
        v206 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
        v207 = *(int *)(v206 + 20);
        v208 = v19;
        v209 = (char *)v19 + v207;
        v210 = (char *)v20 + v207;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v207, 1, v6))
        {
          v211 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v209, v210, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v209, 0, 1, v6);
        }
        v212 = *(int *)(v206 + 24);
        v121 = (char *)v208 + v212;
        v122 = (char *)v20 + v212;
        a3 = v234;
        if (*((_QWORD *)v122 + 1))
        {
LABEL_71:
          *(_QWORD *)v121 = *(_QWORD *)v122;
          *((_QWORD *)v121 + 1) = *((_QWORD *)v122 + 1);
          *((_QWORD *)v121 + 2) = *((_QWORD *)v122 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v213 = *(_OWORD *)v122;
          *((_QWORD *)v121 + 2) = *((_QWORD *)v122 + 2);
          *(_OWORD *)v121 = v213;
        }
LABEL_118:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Fu:
        type metadata accessor for StatementOutcome(0);
        v85 = (char *)&loc_23F211000 + 4 * word_23F27976E[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x22u:
        (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v19, v20, v6);
        v86 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
        *((_BYTE *)v19 + *(int *)(v86 + 20)) = *((_BYTE *)v20 + *(int *)(v86 + 20));
        v87 = *(int *)(v86 + 24);
        v88 = (char *)v19 + v87;
        v89 = (char *)v20 + v87;
        *(_DWORD *)v88 = *(_DWORD *)v89;
        *((_QWORD *)v88 + 1) = *((_QWORD *)v89 + 1);
        *((_QWORD *)v88 + 2) = *((_QWORD *)v89 + 2);
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 0x23u:
        (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v19, v20, v6);
        v90 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
        v91 = (uint64_t *)((char *)v19 + v90);
        v92 = (id *)((char *)v20 + v90);
        *v91 = *v92;
        v91[1] = v92[1];
        v91[2] = v92[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 0x24u:
        v93 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
          case 5u:
          case 7u:
          case 8u:
            (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v19, v20, v6);
            goto LABEL_114;
          case 2u:
            v236 = a3;
            v145 = *(void (**)(uint64_t *, id *, uint64_t))(v7 + 16);
            v145(v19, v20, v6);
            v146 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
            v147 = v19;
            v148 = v146;
            *(uint64_t *)((char *)v147 + v146[5]) = *(uint64_t *)((char *)v20 + v146[5]);
            *(uint64_t *)((char *)v147 + v146[6]) = *(uint64_t *)((char *)v20 + v146[6]);
            v149 = v146[7];
            v228 = v147;
            v150 = (char *)v147 + v149;
            v151 = (char *)v20 + v149;
            swift_bridgeObjectRetain();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v151, 1, v6))
            {
              v152 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
            }
            else
            {
              v145((uint64_t *)v150, (id *)v151, v6);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v150, 0, 1, v6);
            }
            v215 = v148[8];
            v216 = (uint64_t *)((char *)v228 + v215);
            v217 = (id *)((char *)v20 + v215);
            *v216 = *v217;
            v216[1] = v217[1];
            *(uint64_t *)((char *)v228 + v148[9]) = *(uint64_t *)((char *)v20 + v148[9]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
            a3 = v236;
            goto LABEL_118;
          case 4u:
            (*(void (**)(uint64_t *, id *, uint64_t))(v7 + 16))(v19, v20, v6);
            v153 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
            *(uint64_t *)((char *)v19 + *(int *)(v153 + 20)) = *(uint64_t *)((char *)v20 + *(int *)(v153 + 20));
            swift_bridgeObjectRetain();
            goto LABEL_114;
          case 9u:
            v154 = *(void (**)(uint64_t *, id *, uint64_t))(v7 + 16);
            v154(v19, v20, v6);
            v155 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
            v154((uint64_t *)((char *)v19 + *(int *)(v155 + 20)), (id *)((char *)v20 + *(int *)(v155 + 20)), v6);
            v156 = *(int *)(v155 + 24);
            v157 = (char *)v19 + v156;
            v158 = (char *)v20 + v156;
            v159 = *((_QWORD *)v158 + 1);
            if (v159 >> 60 == 15)
            {
              *(_OWORD *)v157 = *(_OWORD *)v158;
            }
            else
            {
              v214 = *(_QWORD *)v158;
              sub_23F131170(*(_QWORD *)v158, *((_QWORD *)v158 + 1));
              *(_QWORD *)v157 = v214;
              *((_QWORD *)v157 + 1) = v159;
            }
LABEL_114:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
            break;
        }
        goto LABEL_118;
      case 0x25u:
        type metadata accessor for SessionServerDebuggerEvent.Payload(0);
        v94 = (char *)&loc_23F211248 + 4 * word_23F27973E[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x26u:
        v95 = (uint64_t)*v20;
        v96 = (uint64_t)v20[1];
        v98 = (uint64_t)v20[2];
        v97 = (uint64_t)v20[3];
        v235 = a3;
        v100 = (uint64_t)v20[4];
        v99 = (uint64_t)v20[5];
        v101 = v20;
        v102 = (uint64_t)v20[6];
        v227 = (uint64_t)v101[7];
        sub_23F135CF4(v95, v96, v98, v97, v100, v99, v102);
        *v19 = v95;
        v19[1] = v96;
        v19[2] = v98;
        v19[3] = v97;
        v19[4] = v100;
        v19[5] = v99;
        a3 = v235;
        v19[6] = v102;
        v19[7] = v227;
        goto LABEL_118;
      case 0x27u:
        *v19 = (uint64_t)*v20;
        v19[1] = (uint64_t)v20[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_118;
      default:
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        break;
    }
  }
  v218 = a3[9];
  v219 = (_QWORD *)(a1 + v218);
  v220 = (_QWORD *)(a2 + v218);
  *v219 = *v220;
  v219[1] = v220[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v221 = a3[10];
  v222 = a1 + v221;
  v223 = a2 + v221;
  v224 = sub_23F267D24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v224 - 8) + 24))(v222, v223, v224);
  return a1;
}

uint64_t initializeWithTake for SessionServerMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  int EnumCaseMultiPayload;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  int *v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  _BYTE *v98;
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  int *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  int *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  int *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  int *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  int *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  int *v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  int *v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  int *v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  int *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  _OWORD *v233;
  _OWORD *v234;
  __int128 v235;
  __int128 v236;
  uint64_t v237;
  _OWORD *v238;
  _OWORD *v239;
  __int128 v240;
  __int128 v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  uint64_t v257;
  char *v258;
  char *v259;
  char *v260;
  char *v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  int *__dst;
  char *__dsta;
  _QWORD *__dstb;
  _QWORD *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;
  char *__dstg;
  int *__dsth;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a2 + v8, 1, v6))
  {
    v11 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = type metadata accessor for MessagePayload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v16 = type metadata accessor for MessagePayload.RequestContent(0);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v6))
        {
          v17 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          v7((uint64_t)v13, (uint64_t)v14, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v6);
        }
        v109 = (int *)type metadata accessor for SystemPromptResolution(0);
        v7((uint64_t)v13 + v109[5], (uint64_t)v14 + v109[5], v6);
        v110 = v109[6];
        __dstd = (char *)v13 + v110;
        v111 = (char *)v14 + v110;
        v112 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v113 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(__dstd, v111, v113);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(__dstd, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
        }
        v114 = v109[7];
        v115 = (char *)v13 + v114;
        v116 = (char *)v14 + v114;
        *(_OWORD *)v115 = *(_OWORD *)v116;
        *((_QWORD *)v115 + 2) = *((_QWORD *)v116 + 2);
        v117 = v109[8];
        v118 = (char *)v13 + v117;
        v119 = (char *)v14 + v117;
        v118[16] = v119[16];
        *(_OWORD *)v118 = *(_OWORD *)v119;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      v120 = (int *)type metadata accessor for MessagePayload.Request(0);
      *(_QWORD *)((char *)v13 + v120[5]) = *(_QWORD *)((char *)v14 + v120[5]);
      *((_BYTE *)v13 + v120[6]) = *((_BYTE *)v14 + v120[6]);
      v121 = v120[7];
      v122 = (char *)v13 + v121;
      v123 = (char *)v14 + v121;
      *(_OWORD *)v122 = *(_OWORD *)v123;
      v122[16] = v123[16];
      v124 = v120[8];
      v125 = (char *)v13 + v124;
      v126 = (char *)v14 + v124;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14 + v124, 1, v6))
      {
        v127 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v125, (uint64_t)v126, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v125, 0, 1, v6);
      }
      v128 = v120[9];
      v129 = (char *)v13 + v128;
      v130 = (char *)v14 + v128;
      *(_OWORD *)v129 = *(_OWORD *)v130;
      *((_QWORD *)v129 + 2) = *((_QWORD *)v130 + 2);
      goto LABEL_135;
    case 4u:
      *v13 = *v14;
      v18 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
      v19 = (char *)v13 + v18;
      v20 = (char *)v14 + v18;
      v21 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      goto LABEL_135;
    case 0xDu:
      v7((uint64_t)v13, (uint64_t)v14, v6);
      v22 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
      v7((uint64_t)v13 + v22[5], (uint64_t)v14 + v22[5], v6);
      *(_OWORD *)((char *)v13 + v22[6]) = *(_OWORD *)((char *)v14 + v22[6]);
      *(_OWORD *)((char *)v13 + v22[7]) = *(_OWORD *)((char *)v14 + v22[7]);
      *(_OWORD *)((char *)v13 + v22[8]) = *(_OWORD *)((char *)v14 + v22[8]);
      *(_QWORD *)((char *)v13 + v22[9]) = *(_QWORD *)((char *)v14 + v22[9]);
      goto LABEL_135;
    case 0xEu:
      v7((uint64_t)v13, (uint64_t)v14, v6);
      v23 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
      v24 = (char *)v13 + v23;
      v25 = (char *)v14 + v23;
      v26 = type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        v72 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v24, v25, v72);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_135;
    case 0x10u:
      v7((uint64_t)v13, (uint64_t)v14, v6);
      v27 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
      *(_OWORD *)((char *)v13 + v27[5]) = *(_OWORD *)((char *)v14 + v27[5]);
      *(_QWORD *)((char *)v13 + v27[6]) = *(_QWORD *)((char *)v14 + v27[6]);
      *(_QWORD *)((char *)v13 + v27[7]) = *(_QWORD *)((char *)v14 + v27[7]);
      *(_OWORD *)((char *)v13 + v27[8]) = *(_OWORD *)((char *)v14 + v27[8]);
      goto LABEL_135;
    case 0x11u:
      v7((uint64_t)v13, (uint64_t)v14, v6);
      __dst = (int *)type metadata accessor for MessagePayload.ClientActionResult(0);
      v28 = __dst[5];
      v29 = (char *)v13 + v28;
      v30 = (char *)v14 + v28;
      v31 = type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v32 = sub_23F268078();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v29, v30, v32);
          v33 = type metadata accessor for ActionSuccess(0);
          v34 = *(int *)(v33 + 20);
          v250 = v33;
          v253 = &v29[v34];
          v256 = &v30[v34];
          v247 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v256, 1, v247))
          {
            v35 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(v253, v256, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          }
          else
          {
            v7((uint64_t)v253, (uint64_t)v256, v6);
            *(_OWORD *)&v253[*(int *)(v247 + 20)] = *(_OWORD *)&v256[*(int *)(v247 + 20)];
            *(_OWORD *)&v253[*(int *)(v247 + 24)] = *(_OWORD *)&v256[*(int *)(v247 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v253, 0, 1, v247);
          }
          v29[*(int *)(v250 + 24)] = v30[*(int *)(v250 + 24)];
          goto LABEL_122;
        case 3u:
          *(_OWORD *)v29 = *(_OWORD *)v30;
          v147 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v148 = &v29[v147];
          v149 = &v30[v147];
          v150 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32))(v148, v149, v150);
          goto LABEL_122;
        case 4u:
          *(_OWORD *)v29 = *(_OWORD *)v30;
          *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
          v29[24] = v30[24];
          v151 = (int *)type metadata accessor for ParameterConfirmation(0);
          v152 = v151[6];
          v153 = &v29[v152];
          v260 = &v30[v152];
          v154 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(v153, v260, v154);
          *(_OWORD *)&v29[v151[7]] = *(_OWORD *)&v30[v151[7]];
          *(_OWORD *)&v29[v151[8]] = *(_OWORD *)&v30[v151[8]];
          goto LABEL_122;
        case 6u:
          *(_OWORD *)v29 = *(_OWORD *)v30;
          v155 = type metadata accessor for ParameterNotAllowed(0);
          v156 = *(int *)(v155 + 20);
          v157 = &v29[v156];
          v261 = &v30[v156];
          v158 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(v157, v261, v158);
          v29[*(int *)(v155 + 24)] = v30[*(int *)(v155 + 24)];
          goto LABEL_122;
        case 7u:
          *(_OWORD *)v29 = *(_OWORD *)v30;
          v159 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v160 = &v29[v159];
          v161 = &v30[v159];
          v162 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v160, v161, v162);
LABEL_122:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
          break;
      }
      memcpy((char *)v13 + __dst[6], (char *)v14 + __dst[6], 0xBAuLL);
      goto LABEL_135;
    case 0x14u:
      v7((uint64_t)v13, (uint64_t)v14, v6);
      v50 = type metadata accessor for SystemPrompt(0);
      *(_OWORD *)((char *)v13 + *(int *)(v50 + 20)) = *(_OWORD *)((char *)v14 + *(int *)(v50 + 20));
      v51 = *(int *)(v50 + 24);
      v52 = (char *)v13 + v51;
      v53 = (char *)v14 + v51;
      v54 = type metadata accessor for SystemPrompt.Prompt(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_OWORD *)v52 = *(_OWORD *)v53;
        *((_QWORD *)v52 + 2) = *((_QWORD *)v53 + 2);
        v52[24] = v53[24];
        v104 = (int *)type metadata accessor for ParameterConfirmation(0);
        v105 = v104[6];
        v106 = &v52[v105];
        v107 = &v53[v105];
        v108 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v106, v107, v108);
        *(_OWORD *)&v52[v104[7]] = *(_OWORD *)&v53[v104[7]];
        *(_OWORD *)&v52[v104[8]] = *(_OWORD *)&v53[v104[8]];
        goto LABEL_61;
      }
      if (EnumCaseMultiPayload == 1)
      {
        *(_OWORD *)v52 = *(_OWORD *)v53;
        v56 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        v57 = &v52[v56];
        v58 = &v53[v56];
        v59 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
LABEL_61:
        swift_storeEnumTagMultiPayload();
        goto LABEL_135;
      }
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
LABEL_135:
      swift_storeEnumTagMultiPayload();
LABEL_136:
      v242 = a3[10];
      *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
      v243 = a1 + v242;
      v244 = a2 + v242;
      v245 = sub_23F267D24();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(v243, v244, v245);
      return a1;
    case 0x15u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v6))
      {
        v60 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v13, (uint64_t)v14, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v6);
      }
      v73 = (int *)type metadata accessor for SystemPromptResolution(0);
      v7((uint64_t)v13 + v73[5], (uint64_t)v14 + v73[5], v6);
      v74 = v73[6];
      v75 = (char *)v13 + v74;
      v76 = (char *)v14 + v74;
      v77 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v78 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v75, v76, v78);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      v79 = v73[7];
      v80 = (char *)v13 + v79;
      v81 = (char *)v14 + v79;
      *(_OWORD *)v80 = *(_OWORD *)v81;
      *((_QWORD *)v80 + 2) = *((_QWORD *)v81 + 2);
      v82 = v73[8];
      v83 = (char *)v13 + v82;
      v84 = (char *)v14 + v82;
      v83[16] = v84[16];
      *(_OWORD *)v83 = *(_OWORD *)v84;
      goto LABEL_135;
    case 0x16u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v6))
      {
        v61 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v13, (uint64_t)v14, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v6);
      }
      v85 = (int *)type metadata accessor for ActionResponse(0);
      *(_OWORD *)((char *)v13 + v85[5]) = *(_OWORD *)((char *)v14 + v85[5]);
      *(_OWORD *)((char *)v13 + v85[6]) = *(_OWORD *)((char *)v14 + v85[6]);
      v86 = v85[7];
      v87 = (char *)v13 + v86;
      v88 = (char *)v14 + v86;
      __dstb = (_QWORD *)type metadata accessor for ActionOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v89 = sub_23F268078();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v87, v88, v89);
          v90 = type metadata accessor for ActionSuccess(0);
          v91 = *(int *)(v90 + 20);
          v251 = v90;
          v254 = &v87[v91];
          v258 = &v88[v91];
          v248 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v258, 1, v248))
          {
            v92 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(v254, v258, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
          }
          else
          {
            v7((uint64_t)v254, (uint64_t)v258, v6);
            *(_OWORD *)&v254[*(int *)(v248 + 20)] = *(_OWORD *)&v258[*(int *)(v248 + 20)];
            *(_OWORD *)&v254[*(int *)(v248 + 24)] = *(_OWORD *)&v258[*(int *)(v248 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v254, 0, 1, v248);
          }
          v87[*(int *)(v251 + 24)] = v88[*(int *)(v251 + 24)];
          goto LABEL_129;
        case 3u:
          *(_OWORD *)v87 = *(_OWORD *)v88;
          v181 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v182 = &v87[v181];
          v183 = &v88[v181];
          v184 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v182, v183, v184);
          goto LABEL_129;
        case 4u:
          *(_OWORD *)v87 = *(_OWORD *)v88;
          *((_QWORD *)v87 + 2) = *((_QWORD *)v88 + 2);
          v87[24] = v88[24];
          v185 = (int *)type metadata accessor for ParameterConfirmation(0);
          v186 = v185[6];
          v187 = &v87[v186];
          v262 = &v88[v186];
          v188 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v187, v262, v188);
          *(_OWORD *)&v87[v185[7]] = *(_OWORD *)&v88[v185[7]];
          *(_OWORD *)&v87[v185[8]] = *(_OWORD *)&v88[v185[8]];
          goto LABEL_129;
        case 6u:
          *(_OWORD *)v87 = *(_OWORD *)v88;
          v189 = type metadata accessor for ParameterNotAllowed(0);
          v190 = *(int *)(v189 + 20);
          v191 = &v87[v190];
          v263 = &v88[v190];
          v192 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v191, v263, v192);
          v87[*(int *)(v189 + 24)] = v88[*(int *)(v189 + 24)];
          goto LABEL_129;
        case 7u:
          *(_OWORD *)v87 = *(_OWORD *)v88;
          v193 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v194 = &v87[v193];
          v195 = &v88[v193];
          v196 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v194, v195, v196);
LABEL_129:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v87, v88, *(_QWORD *)(*(__dstb - 1) + 64));
          break;
      }
      memcpy((char *)v13 + v85[8], (char *)v14 + v85[8], 0xBAuLL);
      v232 = v85[9];
      v233 = (_OWORD *)((char *)v13 + v232);
      v234 = (_OWORD *)((char *)v14 + v232);
      v235 = v234[1];
      *v233 = *v234;
      v233[1] = v235;
      v236 = v234[3];
      v233[2] = v234[2];
      v233[3] = v236;
      *(_OWORD *)((char *)v13 + v85[10]) = *(_OWORD *)((char *)v14 + v85[10]);
      goto LABEL_135;
    case 0x17u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v6))
      {
        v62 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v13, (uint64_t)v14, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v6);
      }
      v93 = (int *)type metadata accessor for SystemResponse(0);
      v94 = v93[5];
      v95 = (char *)v13 + v94;
      v96 = (char *)v14 + v94;
      *(_OWORD *)v95 = *(_OWORD *)v96;
      *((_QWORD *)v95 + 2) = *((_QWORD *)v96 + 2);
      *(_OWORD *)((char *)v13 + v93[6]) = *(_OWORD *)((char *)v14 + v93[6]);
      v97 = v93[7];
      v98 = (char *)v13 + v97;
      v99 = (char *)v14 + v97;
      __dstc = (_QWORD *)type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v100 = sub_23F268078();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v98, v99, v100);
          v101 = type metadata accessor for ActionSuccess(0);
          v102 = *(int *)(v101 + 20);
          v252 = v101;
          v255 = &v98[v102];
          v259 = &v99[v102];
          v249 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v259, 1, v249))
          {
            v103 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(v255, v259, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
          }
          else
          {
            v7((uint64_t)v255, (uint64_t)v259, v6);
            *(_OWORD *)&v255[*(int *)(v249 + 20)] = *(_OWORD *)&v259[*(int *)(v249 + 20)];
            *(_OWORD *)&v255[*(int *)(v249 + 24)] = *(_OWORD *)&v259[*(int *)(v249 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v255, 0, 1, v249);
          }
          v98[*(int *)(v252 + 24)] = v99[*(int *)(v252 + 24)];
          goto LABEL_133;
        case 3u:
          *(_OWORD *)v98 = *(_OWORD *)v99;
          v197 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v198 = &v98[v197];
          v199 = &v99[v197];
          v200 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v198, v199, v200);
          goto LABEL_133;
        case 4u:
          *(_OWORD *)v98 = *(_OWORD *)v99;
          *((_QWORD *)v98 + 2) = *((_QWORD *)v99 + 2);
          v98[24] = v99[24];
          v201 = (int *)type metadata accessor for ParameterConfirmation(0);
          v202 = v201[6];
          v203 = &v98[v202];
          v264 = &v99[v202];
          v204 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v203, v264, v204);
          *(_OWORD *)&v98[v201[7]] = *(_OWORD *)&v99[v201[7]];
          *(_OWORD *)&v98[v201[8]] = *(_OWORD *)&v99[v201[8]];
          goto LABEL_133;
        case 6u:
          *(_OWORD *)v98 = *(_OWORD *)v99;
          v205 = type metadata accessor for ParameterNotAllowed(0);
          v206 = *(int *)(v205 + 20);
          v207 = &v98[v206];
          v265 = &v99[v206];
          v208 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 32))(v207, v265, v208);
          v98[*(int *)(v205 + 24)] = v99[*(int *)(v205 + 24)];
          goto LABEL_133;
        case 7u:
          *(_OWORD *)v98 = *(_OWORD *)v99;
          v209 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v210 = &v98[v209];
          v211 = &v99[v209];
          v212 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v212 - 8) + 32))(v210, v211, v212);
LABEL_133:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v98, v99, *(_QWORD *)(*(__dstc - 1) + 64));
          break;
      }
      v237 = v93[8];
      v238 = (_OWORD *)((char *)v13 + v237);
      v239 = (_OWORD *)((char *)v14 + v237);
      v240 = v239[1];
      *v238 = *v239;
      v238[1] = v240;
      v241 = v239[3];
      v238[2] = v239[2];
      v238[3] = v241;
      *(_OWORD *)((char *)v13 + v93[9]) = *(_OWORD *)((char *)v14 + v93[9]);
      *(_QWORD *)((char *)v13 + v93[10]) = *(_QWORD *)((char *)v14 + v93[10]);
      goto LABEL_135;
    case 0x1Cu:
      *v13 = *v14;
      v36 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
      v37 = *(int *)(v36 + 20);
      v38 = (char *)v13 + v37;
      v39 = (char *)v14 + v37;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14 + v37, 1, v6))
        goto LABEL_78;
      goto LABEL_79;
    case 0x1Du:
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v36 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
      v40 = *(int *)(v36 + 20);
      v38 = (char *)v13 + v40;
      v39 = (char *)v14 + v40;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14 + v40, 1, v6))
        goto LABEL_78;
      goto LABEL_79;
    case 0x1Eu:
      v41 = type metadata accessor for MessagePayload.RequestContent(0);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v6))
        {
          v42 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          v7((uint64_t)v13, (uint64_t)v14, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v6);
        }
        v131 = (int *)type metadata accessor for SystemPromptResolution(0);
        v7((uint64_t)v13 + v131[5], (uint64_t)v14 + v131[5], v6);
        v132 = v131[6];
        __dste = (char *)v13 + v132;
        v133 = (char *)v14 + v132;
        v134 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v135 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(__dste, v133, v135);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(__dste, v133, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
        }
        v136 = v131[7];
        v137 = (char *)v13 + v136;
        v138 = (char *)v14 + v136;
        *(_OWORD *)v137 = *(_OWORD *)v138;
        *((_QWORD *)v137 + 2) = *((_QWORD *)v138 + 2);
        v139 = v131[8];
        v140 = (char *)v13 + v139;
        v141 = (char *)v14 + v139;
        v140[16] = v141[16];
        *(_OWORD *)v140 = *(_OWORD *)v141;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      v36 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
      v142 = *(int *)(v36 + 20);
      v38 = (char *)v13 + v142;
      v39 = (char *)v14 + v142;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14 + v142, 1, v6))
      {
LABEL_78:
        v143 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
      }
      else
      {
LABEL_79:
        v7((uint64_t)v38, (uint64_t)v39, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v38, 0, 1, v6);
      }
      v144 = *(int *)(v36 + 24);
      v145 = (char *)v13 + v144;
      v146 = (char *)v14 + v144;
      *(_OWORD *)v145 = *(_OWORD *)v146;
      *((_QWORD *)v145 + 2) = *((_QWORD *)v146 + 2);
      goto LABEL_135;
    case 0x1Fu:
      v43 = type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v44 = sub_23F268078();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v13, v14, v44);
          v45 = type metadata accessor for ActionSuccess(0);
          v46 = *(int *)(v45 + 20);
          v257 = v45;
          __dsta = (char *)v13 + v46;
          v47 = (char *)v14 + v46;
          v48 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v47, 1, v48))
          {
            v49 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(__dsta, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          }
          else
          {
            v7((uint64_t)__dsta, (uint64_t)v47, v6);
            *(_OWORD *)&__dsta[*(int *)(v48 + 20)] = *(_OWORD *)&v47[*(int *)(v48 + 20)];
            *(_OWORD *)&__dsta[*(int *)(v48 + 24)] = *(_OWORD *)&v47[*(int *)(v48 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v48);
          }
          *((_BYTE *)v13 + *(int *)(v257 + 24)) = *((_BYTE *)v14 + *(int *)(v257 + 24));
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          *v13 = *v14;
          v163 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v164 = (char *)v13 + v163;
          v165 = (char *)v14 + v163;
          v166 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v164, v165, v166);
          goto LABEL_91;
        case 4u:
          *v13 = *v14;
          *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
          *((_BYTE *)v13 + 24) = *((_BYTE *)v14 + 24);
          v167 = (int *)type metadata accessor for ParameterConfirmation(0);
          v168 = v167[6];
          v169 = (char *)v13 + v168;
          v170 = (char *)v14 + v168;
          v171 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(v169, v170, v171);
          *(_OWORD *)((char *)v13 + v167[7]) = *(_OWORD *)((char *)v14 + v167[7]);
          *(_OWORD *)((char *)v13 + v167[8]) = *(_OWORD *)((char *)v14 + v167[8]);
          goto LABEL_91;
        case 6u:
          *v13 = *v14;
          v172 = type metadata accessor for ParameterNotAllowed(0);
          v173 = *(int *)(v172 + 20);
          v174 = (char *)v13 + v173;
          v175 = (char *)v14 + v173;
          v176 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 32))(v174, v175, v176);
          *((_BYTE *)v13 + *(int *)(v172 + 24)) = *((_BYTE *)v14 + *(int *)(v172 + 24));
          goto LABEL_91;
        case 7u:
          *v13 = *v14;
          v177 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v178 = (char *)v13 + v177;
          v179 = (char *)v14 + v177;
          v180 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v178, v179, v180);
LABEL_91:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          break;
      }
      v231 = type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
      *(_QWORD *)((char *)v13 + *(int *)(v231 + 20)) = *(_QWORD *)((char *)v14 + *(int *)(v231 + 20));
      goto LABEL_135;
    case 0x22u:
      v7((uint64_t)v13, (uint64_t)v14, v6);
      v63 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
      *((_BYTE *)v13 + *(int *)(v63 + 20)) = *((_BYTE *)v14 + *(int *)(v63 + 20));
      v64 = *(int *)(v63 + 24);
      v65 = (char *)v13 + v64;
      v66 = (char *)v14 + v64;
      *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
      *(_OWORD *)v65 = *(_OWORD *)v66;
      goto LABEL_135;
    case 0x23u:
      v7((uint64_t)v13, (uint64_t)v14, v6);
      v67 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
      v68 = (char *)v13 + v67;
      v69 = (char *)v14 + v67;
      *(_OWORD *)v68 = *(_OWORD *)v69;
      *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
      goto LABEL_135;
    case 0x24u:
      v70 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
        case 5u:
        case 7u:
        case 8u:
          v7((uint64_t)v13, (uint64_t)v14, v6);
          goto LABEL_107;
        case 2u:
          v7((uint64_t)v13, (uint64_t)v14, v6);
          v213 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
          *(_QWORD *)((char *)v13 + v213[5]) = *(_QWORD *)((char *)v14 + v213[5]);
          *(_QWORD *)((char *)v13 + v213[6]) = *(_QWORD *)((char *)v14 + v213[6]);
          v214 = v213[7];
          __dstf = (char *)v13 + v214;
          v215 = (char *)v14 + v214;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14 + v214, 1, v6))
          {
            v216 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(__dstf, v215, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
          }
          else
          {
            v7((uint64_t)__dstf, (uint64_t)v215, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dstf, 0, 1, v6);
          }
          *(_OWORD *)((char *)v13 + v213[8]) = *(_OWORD *)((char *)v14 + v213[8]);
          *(_QWORD *)((char *)v13 + v213[9]) = *(_QWORD *)((char *)v14 + v213[9]);
          swift_storeEnumTagMultiPayload();
          goto LABEL_135;
        case 4u:
          v7((uint64_t)v13, (uint64_t)v14, v6);
          v217 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
          *(_QWORD *)((char *)v13 + *(int *)(v217 + 20)) = *(_QWORD *)((char *)v14 + *(int *)(v217 + 20));
          goto LABEL_107;
        case 9u:
          v7((uint64_t)v13, (uint64_t)v14, v6);
          v218 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
          v7((uint64_t)v13 + *(int *)(v218 + 20), (uint64_t)v14 + *(int *)(v218 + 20), v6);
          *(_OWORD *)((char *)v13 + *(int *)(v218 + 24)) = *(_OWORD *)((char *)v14 + *(int *)(v218 + 24));
LABEL_107:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
          break;
      }
      goto LABEL_135;
    case 0x25u:
      v71 = type metadata accessor for SessionServerDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 7u:
        case 8u:
        case 0xAu:
          v7((uint64_t)v13, (uint64_t)v14, v6);
          goto LABEL_118;
        case 1u:
          *v13 = *v14;
          v219 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
          v220 = v219[6];
          __dstg = (char *)v13 + v220;
          v221 = (char *)v14 + v220;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14 + v220, 1, v6))
          {
            v222 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(__dstg, v221, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
          }
          else
          {
            v7((uint64_t)__dstg, (uint64_t)v221, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dstg, 0, 1, v6);
          }
          *(_OWORD *)((char *)v13 + v219[7]) = *(_OWORD *)((char *)v14 + v219[7]);
          *(_QWORD *)((char *)v13 + v219[8]) = *(_QWORD *)((char *)v14 + v219[8]);
          goto LABEL_61;
        case 5u:
          *v13 = *v14;
          __dsth = (int *)type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
          v223 = __dsth[6];
          v224 = (char *)v13 + v223;
          v225 = (char *)v14 + v223;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14 + v223, 1, v6))
          {
            v226 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
          }
          else
          {
            v7((uint64_t)v224, (uint64_t)v225, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v224, 0, 1, v6);
          }
          *(_QWORD *)((char *)v13 + __dsth[7]) = *(_QWORD *)((char *)v14 + __dsth[7]);
          goto LABEL_61;
        case 6u:
          v7((uint64_t)v13, (uint64_t)v14, v6);
          v227 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
          *(_QWORD *)((char *)v13 + *(int *)(v227 + 20)) = *(_QWORD *)((char *)v14 + *(int *)(v227 + 20));
          goto LABEL_118;
        case 9u:
          v7((uint64_t)v13, (uint64_t)v14, v6);
          v228 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
          *((_BYTE *)v13 + *(int *)(v228 + 20)) = *((_BYTE *)v14 + *(int *)(v228 + 20));
          goto LABEL_118;
        case 0xBu:
          *(_QWORD *)v13 = *(_QWORD *)v14;
          *(_OWORD *)((char *)v13 + 8) = *(_OWORD *)((char *)v14 + 8);
          *(_OWORD *)((char *)v13 + 24) = *(_OWORD *)((char *)v14 + 24);
          *(_OWORD *)((char *)v13 + 40) = *(_OWORD *)((char *)v14 + 40);
          v229 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
          v7((uint64_t)v13 + v229[8], (uint64_t)v14 + v229[8], v6);
          *(_OWORD *)((char *)v13 + v229[9]) = *(_OWORD *)((char *)v14 + v229[9]);
          *(_OWORD *)((char *)v13 + v229[10]) = *(_OWORD *)((char *)v14 + v229[10]);
          *(_OWORD *)((char *)v13 + v229[11]) = *(_OWORD *)((char *)v14 + v229[11]);
          goto LABEL_118;
        case 0xCu:
          v7((uint64_t)v13, (uint64_t)v14, v6);
          v230 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
          *((_BYTE *)v13 + *(int *)(v230 + 20)) = *((_BYTE *)v14 + *(int *)(v230 + 20));
LABEL_118:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
          break;
      }
      goto LABEL_135;
    default:
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      goto LABEL_136;
  }
}

uint64_t assignWithTake for SessionServerMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(_OWORD *, _OWORD *, uint64_t);
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  int EnumCaseMultiPayload;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  int *v95;
  uint64_t v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  _BYTE *v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  int *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  int *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  int *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  int *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  int *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  int *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  int *v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  int *v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  void (*v229)(_OWORD *, _OWORD *, uint64_t);
  uint64_t v230;
  int *v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  int *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _OWORD *v245;
  _OWORD *v246;
  __int128 v247;
  __int128 v248;
  uint64_t v249;
  _OWORD *v250;
  _OWORD *v251;
  __int128 v252;
  __int128 v253;
  uint64_t v254;
  _QWORD *v255;
  uint64_t *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *__src;
  char *__srca;
  char *__srcb;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;
  char *__dstg;
  char *__dsth;
  char *__dsti;
  int *v283;
  int *v284;
  _QWORD *v285;
  _QWORD *v286;
  char *v287;
  char *v288;
  void *v289;
  char *v290;
  int *v291;

  v6 = sub_23F267D84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v6);
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1 + v9, 1, v6);
  v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v14 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v20 = a3[8];
    v21 = (_OWORD *)(a1 + v20);
    v22 = (_OWORD *)(a2 + v20);
    sub_23F1BE0BC(a1 + v20, type metadata accessor for MessagePayload);
    v23 = type metadata accessor for MessagePayload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v24 = type metadata accessor for MessagePayload.RequestContent(0);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22, 1, v6))
          {
            v25 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          }
          else
          {
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v21, 0, 1, v6);
          }
          v119 = (int *)type metadata accessor for SystemPromptResolution(0);
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v21 + v119[5], (char *)v22 + v119[5], v6);
          v120 = v119[6];
          v287 = (char *)v21 + v120;
          v121 = (char *)v22 + v120;
          v122 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v123 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v287, v121, v123);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v287, v121, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
          }
          v124 = v119[7];
          v125 = (char *)v21 + v124;
          v126 = (char *)v22 + v124;
          *(_OWORD *)v125 = *(_OWORD *)v126;
          *((_QWORD *)v125 + 2) = *((_QWORD *)v126 + 2);
          v127 = v119[8];
          v128 = (char *)v21 + v127;
          v129 = (char *)v22 + v127;
          v128[16] = v129[16];
          *(_OWORD *)v128 = *(_OWORD *)v129;
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        v130 = (int *)type metadata accessor for MessagePayload.Request(0);
        *(_QWORD *)((char *)v21 + v130[5]) = *(_QWORD *)((char *)v22 + v130[5]);
        *((_BYTE *)v21 + v130[6]) = *((_BYTE *)v22 + v130[6]);
        v131 = v130[7];
        v132 = (char *)v21 + v131;
        v133 = (char *)v22 + v131;
        *(_OWORD *)v132 = *(_OWORD *)v133;
        v132[16] = v133[16];
        v134 = v130[8];
        v135 = (char *)v21 + v134;
        v136 = (char *)v22 + v134;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22 + v134, 1, v6))
        {
          v137 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v135, v136, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v135, 0, 1, v6);
        }
        v138 = v130[9];
        v139 = (char *)v21 + v138;
        v140 = (char *)v22 + v138;
        *(_OWORD *)v139 = *(_OWORD *)v140;
        *((_QWORD *)v139 + 2) = *((_QWORD *)v140 + 2);
        goto LABEL_140;
      case 4u:
        *v21 = *v22;
        v26 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
        v27 = (char *)v21 + v26;
        v28 = (char *)v22 + v26;
        v29 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
        goto LABEL_140;
      case 0xDu:
        v30 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32);
        v30(v21, v22, v6);
        v31 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
        v30((_OWORD *)((char *)v21 + v31[5]), (_OWORD *)((char *)v22 + v31[5]), v6);
        *(_OWORD *)((char *)v21 + v31[6]) = *(_OWORD *)((char *)v22 + v31[6]);
        *(_OWORD *)((char *)v21 + v31[7]) = *(_OWORD *)((char *)v22 + v31[7]);
        *(_OWORD *)((char *)v21 + v31[8]) = *(_OWORD *)((char *)v22 + v31[8]);
        *(_QWORD *)((char *)v21 + v31[9]) = *(_QWORD *)((char *)v22 + v31[9]);
        goto LABEL_140;
      case 0xEu:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
        v32 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
        v33 = (char *)v21 + v32;
        v34 = (char *)v22 + v32;
        v35 = type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          v82 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v33, v34, v82);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_140;
      case 0x10u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
        v36 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
        *(_OWORD *)((char *)v21 + v36[5]) = *(_OWORD *)((char *)v22 + v36[5]);
        *(_QWORD *)((char *)v21 + v36[6]) = *(_QWORD *)((char *)v22 + v36[6]);
        *(_QWORD *)((char *)v21 + v36[7]) = *(_QWORD *)((char *)v22 + v36[7]);
        *(_OWORD *)((char *)v21 + v36[8]) = *(_OWORD *)((char *)v22 + v36[8]);
        goto LABEL_140;
      case 0x11u:
        v37 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v37((char *)v21, (char *)v22, v6);
        v283 = (int *)type metadata accessor for MessagePayload.ClientActionResult(0);
        v38 = v283[5];
        v39 = (char *)v21 + v38;
        v40 = (char *)v22 + v38;
        v41 = type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v42 = sub_23F268078();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v39, v40, v42);
            v43 = type metadata accessor for ActionSuccess(0);
            v44 = *(int *)(v43 + 20);
            v270 = v43;
            __dst = &v39[v44];
            __src = &v40[v44];
            v264 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)__src, 1, v264))
            {
              v45 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
            }
            else
            {
              v37(__dst, __src, v6);
              *(_OWORD *)&__dst[*(int *)(v264 + 20)] = *(_OWORD *)&__src[*(int *)(v264 + 20)];
              *(_OWORD *)&__dst[*(int *)(v264 + 24)] = *(_OWORD *)&__src[*(int *)(v264 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v264);
            }
            v39[*(int *)(v270 + 24)] = v40[*(int *)(v270 + 24)];
            goto LABEL_127;
          case 3u:
            *(_OWORD *)v39 = *(_OWORD *)v40;
            v157 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v158 = &v39[v157];
            v159 = &v40[v157];
            v160 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(v158, v159, v160);
            goto LABEL_127;
          case 4u:
            *(_OWORD *)v39 = *(_OWORD *)v40;
            *((_QWORD *)v39 + 2) = *((_QWORD *)v40 + 2);
            v39[24] = v40[24];
            v161 = (int *)type metadata accessor for ParameterConfirmation(0);
            v162 = v161[6];
            v163 = &v39[v162];
            __dstd = &v40[v162];
            v164 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 32))(v163, __dstd, v164);
            *(_OWORD *)&v39[v161[7]] = *(_OWORD *)&v40[v161[7]];
            *(_OWORD *)&v39[v161[8]] = *(_OWORD *)&v40[v161[8]];
            goto LABEL_127;
          case 6u:
            *(_OWORD *)v39 = *(_OWORD *)v40;
            v165 = type metadata accessor for ParameterNotAllowed(0);
            v166 = *(int *)(v165 + 20);
            v167 = &v39[v166];
            __dste = &v40[v166];
            v168 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v167, __dste, v168);
            v39[*(int *)(v165 + 24)] = v40[*(int *)(v165 + 24)];
            goto LABEL_127;
          case 7u:
            *(_OWORD *)v39 = *(_OWORD *)v40;
            v169 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v170 = &v39[v169];
            v171 = &v40[v169];
            v172 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(v170, v171, v172);
LABEL_127:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
            break;
        }
        memcpy((char *)v21 + v283[6], (char *)v22 + v283[6], 0xBAuLL);
        goto LABEL_140;
      case 0x14u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
        v60 = type metadata accessor for SystemPrompt(0);
        *(_OWORD *)((char *)v21 + *(int *)(v60 + 20)) = *(_OWORD *)((char *)v22 + *(int *)(v60 + 20));
        v61 = *(int *)(v60 + 24);
        v62 = (char *)v21 + v61;
        v63 = (char *)v22 + v61;
        v64 = type metadata accessor for SystemPrompt.Prompt(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *(_OWORD *)v62 = *(_OWORD *)v63;
          *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
          v62[24] = v63[24];
          v114 = (int *)type metadata accessor for ParameterConfirmation(0);
          v115 = v114[6];
          v116 = &v62[v115];
          v117 = &v63[v115];
          v118 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
          *(_OWORD *)&v62[v114[7]] = *(_OWORD *)&v63[v114[7]];
          *(_OWORD *)&v62[v114[8]] = *(_OWORD *)&v63[v114[8]];
          goto LABEL_66;
        }
        if (EnumCaseMultiPayload == 1)
        {
          *(_OWORD *)v62 = *(_OWORD *)v63;
          v66 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v67 = &v62[v66];
          v68 = &v63[v66];
          v69 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
LABEL_66:
          swift_storeEnumTagMultiPayload();
          goto LABEL_140;
        }
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
LABEL_140:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x15u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22, 1, v6))
        {
          v70 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v21, 0, 1, v6);
        }
        v83 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v21 + v83[5], (char *)v22 + v83[5], v6);
        v84 = v83[6];
        v85 = (char *)v21 + v84;
        v86 = (char *)v22 + v84;
        v87 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v88 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v85, v86, v88);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        }
        v89 = v83[7];
        v90 = (char *)v21 + v89;
        v91 = (char *)v22 + v89;
        *(_OWORD *)v90 = *(_OWORD *)v91;
        *((_QWORD *)v90 + 2) = *((_QWORD *)v91 + 2);
        v92 = v83[8];
        v93 = (char *)v21 + v92;
        v94 = (char *)v22 + v92;
        v93[16] = v94[16];
        *(_OWORD *)v93 = *(_OWORD *)v94;
        goto LABEL_140;
      case 0x16u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22, 1, v6))
        {
          v71 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v21, 0, 1, v6);
        }
        v95 = (int *)type metadata accessor for ActionResponse(0);
        *(_OWORD *)((char *)v21 + v95[5]) = *(_OWORD *)((char *)v22 + v95[5]);
        *(_OWORD *)((char *)v21 + v95[6]) = *(_OWORD *)((char *)v22 + v95[6]);
        v96 = v95[7];
        v97 = (char *)v21 + v96;
        v98 = (char *)v22 + v96;
        v285 = (_QWORD *)type metadata accessor for ActionOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v99 = sub_23F268078();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
            v100 = type metadata accessor for ActionSuccess(0);
            v101 = *(int *)(v100 + 20);
            __srca = &v97[v101];
            v271 = v100;
            __dstb = &v98[v101];
            v265 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)__dstb, 1, v265))
            {
              v102 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(__srca, __dstb, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v7 + 32))(__srca, __dstb, v6);
              *(_OWORD *)&__srca[*(int *)(v265 + 20)] = *(_OWORD *)&__dstb[*(int *)(v265 + 20)];
              *(_OWORD *)&__srca[*(int *)(v265 + 24)] = *(_OWORD *)&__dstb[*(int *)(v265 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__srca, 0, 1, v265);
            }
            v97[*(int *)(v271 + 24)] = v98[*(int *)(v271 + 24)];
            goto LABEL_134;
          case 3u:
            *(_OWORD *)v97 = *(_OWORD *)v98;
            v191 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v192 = &v97[v191];
            v193 = &v98[v191];
            v194 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v192, v193, v194);
            goto LABEL_134;
          case 4u:
            *(_OWORD *)v97 = *(_OWORD *)v98;
            *((_QWORD *)v97 + 2) = *((_QWORD *)v98 + 2);
            v97[24] = v98[24];
            v195 = (int *)type metadata accessor for ParameterConfirmation(0);
            v196 = v195[6];
            v197 = &v97[v196];
            __dstf = &v98[v196];
            v198 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v197, __dstf, v198);
            *(_OWORD *)&v97[v195[7]] = *(_OWORD *)&v98[v195[7]];
            *(_OWORD *)&v97[v195[8]] = *(_OWORD *)&v98[v195[8]];
            goto LABEL_134;
          case 6u:
            *(_OWORD *)v97 = *(_OWORD *)v98;
            v199 = type metadata accessor for ParameterNotAllowed(0);
            v200 = *(int *)(v199 + 20);
            v201 = &v97[v200];
            __dstg = &v98[v200];
            v202 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v201, __dstg, v202);
            v97[*(int *)(v199 + 24)] = v98[*(int *)(v199 + 24)];
            goto LABEL_134;
          case 7u:
            *(_OWORD *)v97 = *(_OWORD *)v98;
            v203 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v204 = &v97[v203];
            v205 = &v98[v203];
            v206 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v204, v205, v206);
LABEL_134:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v97, v98, *(_QWORD *)(*(v285 - 1) + 64));
            break;
        }
        memcpy((char *)v21 + v95[8], (char *)v22 + v95[8], 0xBAuLL);
        v244 = v95[9];
        v245 = (_OWORD *)((char *)v21 + v244);
        v246 = (_OWORD *)((char *)v22 + v244);
        v247 = v246[1];
        *v245 = *v246;
        v245[1] = v247;
        v248 = v246[3];
        v245[2] = v246[2];
        v245[3] = v248;
        *(_OWORD *)((char *)v21 + v95[10]) = *(_OWORD *)((char *)v22 + v95[10]);
        goto LABEL_140;
      case 0x17u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22, 1, v6))
        {
          v72 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v21, 0, 1, v6);
        }
        v103 = (int *)type metadata accessor for SystemResponse(0);
        v104 = v103[5];
        v105 = (char *)v21 + v104;
        v106 = (char *)v22 + v104;
        *(_OWORD *)v105 = *(_OWORD *)v106;
        *((_QWORD *)v105 + 2) = *((_QWORD *)v106 + 2);
        *(_OWORD *)((char *)v21 + v103[6]) = *(_OWORD *)((char *)v22 + v103[6]);
        v107 = v103[7];
        v108 = (char *)v21 + v107;
        v109 = (char *)v22 + v107;
        v286 = (_QWORD *)type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v110 = sub_23F268078();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v108, v109, v110);
            v111 = type metadata accessor for ActionSuccess(0);
            v112 = *(int *)(v111 + 20);
            __srcb = &v108[v112];
            v272 = v111;
            __dstc = &v109[v112];
            v266 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)__dstc, 1, v266))
            {
              v113 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(__srcb, __dstc, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v7 + 32))(__srcb, __dstc, v6);
              *(_OWORD *)&__srcb[*(int *)(v266 + 20)] = *(_OWORD *)&__dstc[*(int *)(v266 + 20)];
              *(_OWORD *)&__srcb[*(int *)(v266 + 24)] = *(_OWORD *)&__dstc[*(int *)(v266 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__srcb, 0, 1, v266);
            }
            v108[*(int *)(v272 + 24)] = v109[*(int *)(v272 + 24)];
            goto LABEL_138;
          case 3u:
            *(_OWORD *)v108 = *(_OWORD *)v109;
            v207 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v208 = &v108[v207];
            v209 = &v109[v207];
            v210 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 32))(v208, v209, v210);
            goto LABEL_138;
          case 4u:
            *(_OWORD *)v108 = *(_OWORD *)v109;
            *((_QWORD *)v108 + 2) = *((_QWORD *)v109 + 2);
            v108[24] = v109[24];
            v211 = (int *)type metadata accessor for ParameterConfirmation(0);
            v212 = v211[6];
            v213 = &v108[v212];
            __dsth = &v109[v212];
            v214 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v213, __dsth, v214);
            *(_OWORD *)&v108[v211[7]] = *(_OWORD *)&v109[v211[7]];
            *(_OWORD *)&v108[v211[8]] = *(_OWORD *)&v109[v211[8]];
            goto LABEL_138;
          case 6u:
            *(_OWORD *)v108 = *(_OWORD *)v109;
            v215 = type metadata accessor for ParameterNotAllowed(0);
            v216 = *(int *)(v215 + 20);
            v217 = &v108[v216];
            __dsti = &v109[v216];
            v218 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 32))(v217, __dsti, v218);
            v108[*(int *)(v215 + 24)] = v109[*(int *)(v215 + 24)];
            goto LABEL_138;
          case 7u:
            *(_OWORD *)v108 = *(_OWORD *)v109;
            v219 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v220 = &v108[v219];
            v221 = &v109[v219];
            v222 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 32))(v220, v221, v222);
LABEL_138:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v108, v109, *(_QWORD *)(*(v286 - 1) + 64));
            break;
        }
        v249 = v103[8];
        v250 = (_OWORD *)((char *)v21 + v249);
        v251 = (_OWORD *)((char *)v22 + v249);
        v252 = v251[1];
        *v250 = *v251;
        v250[1] = v252;
        v253 = v251[3];
        v250[2] = v251[2];
        v250[3] = v253;
        *(_OWORD *)((char *)v21 + v103[9]) = *(_OWORD *)((char *)v22 + v103[9]);
        *(_QWORD *)((char *)v21 + v103[10]) = *(_QWORD *)((char *)v22 + v103[10]);
        goto LABEL_140;
      case 0x1Cu:
        *v21 = *v22;
        v46 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
        v47 = *(int *)(v46 + 20);
        v48 = (char *)v21 + v47;
        v49 = (char *)v22 + v47;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22 + v47, 1, v6))
          goto LABEL_83;
        goto LABEL_84;
      case 0x1Du:
        *(_QWORD *)v21 = *(_QWORD *)v22;
        v46 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
        v50 = *(int *)(v46 + 20);
        v48 = (char *)v21 + v50;
        v49 = (char *)v22 + v50;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22 + v50, 1, v6))
          goto LABEL_83;
        goto LABEL_84;
      case 0x1Eu:
        v51 = type metadata accessor for MessagePayload.RequestContent(0);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22, 1, v6))
          {
            v52 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
          }
          else
          {
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v21, 0, 1, v6);
          }
          v141 = (int *)type metadata accessor for SystemPromptResolution(0);
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v21 + v141[5], (char *)v22 + v141[5], v6);
          v142 = v141[6];
          v288 = (char *)v21 + v142;
          v143 = (char *)v22 + v142;
          v144 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v145 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v288, v143, v145);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v288, v143, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
          }
          v146 = v141[7];
          v147 = (char *)v21 + v146;
          v148 = (char *)v22 + v146;
          *(_OWORD *)v147 = *(_OWORD *)v148;
          *((_QWORD *)v147 + 2) = *((_QWORD *)v148 + 2);
          v149 = v141[8];
          v150 = (char *)v21 + v149;
          v151 = (char *)v22 + v149;
          v150[16] = v151[16];
          *(_OWORD *)v150 = *(_OWORD *)v151;
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        v46 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
        v152 = *(int *)(v46 + 20);
        v48 = (char *)v21 + v152;
        v49 = (char *)v22 + v152;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22 + v152, 1, v6))
        {
LABEL_83:
          v153 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
        }
        else
        {
LABEL_84:
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v48, v49, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v48, 0, 1, v6);
        }
        v154 = *(int *)(v46 + 24);
        v155 = (char *)v21 + v154;
        v156 = (char *)v22 + v154;
        *(_OWORD *)v155 = *(_OWORD *)v156;
        *((_QWORD *)v155 + 2) = *((_QWORD *)v156 + 2);
        goto LABEL_140;
      case 0x1Fu:
        v53 = type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v54 = sub_23F268078();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v21, v22, v54);
            v55 = type metadata accessor for ActionSuccess(0);
            v56 = *(int *)(v55 + 20);
            __dsta = (char *)v21 + v56;
            v284 = (int *)v55;
            v57 = (char *)v22 + v56;
            v58 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v57, 1, v58))
            {
              v59 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(__dsta, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v7 + 32))(__dsta, v57, v6);
              *(_OWORD *)&__dsta[*(int *)(v58 + 20)] = *(_OWORD *)&v57[*(int *)(v58 + 20)];
              *(_OWORD *)&__dsta[*(int *)(v58 + 24)] = *(_OWORD *)&v57[*(int *)(v58 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v58);
            }
            *((_BYTE *)v21 + v284[6]) = *((_BYTE *)v22 + v284[6]);
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            *v21 = *v22;
            v173 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v174 = (char *)v21 + v173;
            v175 = (char *)v22 + v173;
            v176 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 32))(v174, v175, v176);
            goto LABEL_96;
          case 4u:
            *v21 = *v22;
            *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
            *((_BYTE *)v21 + 24) = *((_BYTE *)v22 + 24);
            v177 = (int *)type metadata accessor for ParameterConfirmation(0);
            v178 = v177[6];
            v179 = (char *)v21 + v178;
            v180 = (char *)v22 + v178;
            v181 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v179, v180, v181);
            *(_OWORD *)((char *)v21 + v177[7]) = *(_OWORD *)((char *)v22 + v177[7]);
            *(_OWORD *)((char *)v21 + v177[8]) = *(_OWORD *)((char *)v22 + v177[8]);
            goto LABEL_96;
          case 6u:
            *v21 = *v22;
            v182 = type metadata accessor for ParameterNotAllowed(0);
            v183 = *(int *)(v182 + 20);
            v184 = (char *)v21 + v183;
            v185 = (char *)v22 + v183;
            v186 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v184, v185, v186);
            *((_BYTE *)v21 + *(int *)(v182 + 24)) = *((_BYTE *)v22 + *(int *)(v182 + 24));
            goto LABEL_96;
          case 7u:
            *v21 = *v22;
            v187 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v188 = (char *)v21 + v187;
            v189 = (char *)v22 + v187;
            v190 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v188, v189, v190);
LABEL_96:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
            break;
        }
        v243 = type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
        *(_QWORD *)((char *)v21 + *(int *)(v243 + 20)) = *(_QWORD *)((char *)v22 + *(int *)(v243 + 20));
        goto LABEL_140;
      case 0x22u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
        v73 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
        *((_BYTE *)v21 + *(int *)(v73 + 20)) = *((_BYTE *)v22 + *(int *)(v73 + 20));
        v74 = *(int *)(v73 + 24);
        v75 = (char *)v21 + v74;
        v76 = (char *)v22 + v74;
        *((_QWORD *)v75 + 2) = *((_QWORD *)v76 + 2);
        *(_OWORD *)v75 = *(_OWORD *)v76;
        goto LABEL_140;
      case 0x23u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
        v77 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
        v78 = (char *)v21 + v77;
        v79 = (char *)v22 + v77;
        *(_OWORD *)v78 = *(_OWORD *)v79;
        *((_QWORD *)v78 + 2) = *((_QWORD *)v79 + 2);
        goto LABEL_140;
      case 0x24u:
        v80 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
          case 5u:
          case 7u:
          case 8u:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
            goto LABEL_112;
          case 2u:
            v289 = *(void **)(v7 + 32);
            ((void (*)(_OWORD *, _OWORD *, uint64_t))v289)(v21, v22, v6);
            v223 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
            *(_QWORD *)((char *)v21 + v223[5]) = *(_QWORD *)((char *)v22 + v223[5]);
            *(_QWORD *)((char *)v21 + v223[6]) = *(_QWORD *)((char *)v22 + v223[6]);
            v224 = v223[7];
            v225 = (char *)v21 + v224;
            v226 = (char *)v22 + v224;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22 + v224, 1, v6))
            {
              v227 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v289)(v225, v226, v6);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v225, 0, 1, v6);
            }
            *(_OWORD *)((char *)v21 + v223[8]) = *(_OWORD *)((char *)v22 + v223[8]);
            *(_QWORD *)((char *)v21 + v223[9]) = *(_QWORD *)((char *)v22 + v223[9]);
            swift_storeEnumTagMultiPayload();
            goto LABEL_140;
          case 4u:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
            v228 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
            *(_QWORD *)((char *)v21 + *(int *)(v228 + 20)) = *(_QWORD *)((char *)v22 + *(int *)(v228 + 20));
            goto LABEL_112;
          case 9u:
            v229 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32);
            v229(v21, v22, v6);
            v230 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
            v229((_OWORD *)((char *)v21 + *(int *)(v230 + 20)), (_OWORD *)((char *)v22 + *(int *)(v230 + 20)), v6);
            *(_OWORD *)((char *)v21 + *(int *)(v230 + 24)) = *(_OWORD *)((char *)v22 + *(int *)(v230 + 24));
LABEL_112:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
            break;
        }
        goto LABEL_140;
      case 0x25u:
        v81 = type metadata accessor for SessionServerDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 2u:
          case 7u:
          case 8u:
          case 0xAu:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
            goto LABEL_123;
          case 1u:
            *v21 = *v22;
            v231 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
            v232 = v231[6];
            v290 = (char *)v21 + v232;
            v233 = (char *)v22 + v232;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22 + v232, 1, v6))
            {
              v234 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v290, v233, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v290, v233, v6);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v290, 0, 1, v6);
            }
            *(_OWORD *)((char *)v21 + v231[7]) = *(_OWORD *)((char *)v22 + v231[7]);
            *(_QWORD *)((char *)v21 + v231[8]) = *(_QWORD *)((char *)v22 + v231[8]);
            goto LABEL_66;
          case 5u:
            *v21 = *v22;
            v291 = (int *)type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
            v235 = v291[6];
            v236 = (char *)v21 + v235;
            v237 = (char *)v22 + v235;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22 + v235, 1, v6))
            {
              v238 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v236, v237, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v236, v237, v6);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v236, 0, 1, v6);
            }
            *(_QWORD *)((char *)v21 + v291[7]) = *(_QWORD *)((char *)v22 + v291[7]);
            goto LABEL_66;
          case 6u:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
            v239 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
            *(_QWORD *)((char *)v21 + *(int *)(v239 + 20)) = *(_QWORD *)((char *)v22 + *(int *)(v239 + 20));
            goto LABEL_123;
          case 9u:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
            v240 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
            *((_BYTE *)v21 + *(int *)(v240 + 20)) = *((_BYTE *)v22 + *(int *)(v240 + 20));
            goto LABEL_123;
          case 0xBu:
            *(_QWORD *)v21 = *(_QWORD *)v22;
            *(_OWORD *)((char *)v21 + 8) = *(_OWORD *)((char *)v22 + 8);
            *(_OWORD *)((char *)v21 + 24) = *(_OWORD *)((char *)v22 + 24);
            *(_OWORD *)((char *)v21 + 40) = *(_OWORD *)((char *)v22 + 40);
            v241 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
            (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v21 + v241[8], (char *)v22 + v241[8], v6);
            *(_OWORD *)((char *)v21 + v241[9]) = *(_OWORD *)((char *)v22 + v241[9]);
            *(_OWORD *)((char *)v21 + v241[10]) = *(_OWORD *)((char *)v22 + v241[10]);
            *(_OWORD *)((char *)v21 + v241[11]) = *(_OWORD *)((char *)v22 + v241[11]);
            goto LABEL_123;
          case 0xCu:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v21, v22, v6);
            v242 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
            *((_BYTE *)v21 + *(int *)(v242 + 20)) = *((_BYTE *)v22 + *(int *)(v242 + 20));
LABEL_123:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
            break;
        }
        goto LABEL_140;
      default:
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        break;
    }
  }
  v254 = a3[9];
  v255 = (_QWORD *)(a1 + v254);
  v256 = (uint64_t *)(a2 + v254);
  v258 = *v256;
  v257 = v256[1];
  *v255 = v258;
  v255[1] = v257;
  swift_bridgeObjectRelease();
  v259 = a3[10];
  v260 = a1 + v259;
  v261 = a2 + v259;
  v262 = sub_23F267D24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v262 - 8) + 40))(v260, v261, v262);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionServerMessage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F217A14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F131B8C();
  sub_23F17F9A8();
  if (v8)
  {
    v6 = sub_23F180064();
  }
  else
  {
    sub_23F1217E8(&qword_256DFEB98);
    sub_23F17F9A8();
    if (v8)
    {
      v7 = v9;
      v10 = a3[6];
    }
    else
    {
      if ((_DWORD)a2 == 0x7FFFFFFF)
      {
        sub_23F13188C(*(_QWORD *)(a1 + a3[7] + 8));
        sub_23F12612C();
        return;
      }
      type metadata accessor for MessagePayload(0);
      sub_23F17F9A8();
      if (v8)
      {
        v7 = v11;
        v10 = a3[8];
      }
      else
      {
        v7 = sub_23F25097C();
        v10 = a3[10];
      }
    }
    v6 = a1 + v10;
  }
  sub_23F1315B8(v6, a2, v7);
}

uint64_t storeEnumTagSinglePayload for SessionServerMessage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F217ACC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F131B8C();
  sub_23F17F968();
  if (v6)
  {
    sub_23F18010C();
  }
  else
  {
    sub_23F1217E8(&qword_256DFEB98);
    sub_23F17F968();
    if (!v6)
    {
      if (a3 == 0x7FFFFFFF)
      {
        sub_23F25004C(*(int *)(a4 + 28));
        sub_23F12612C();
        return;
      }
      type metadata accessor for MessagePayload(0);
      sub_23F17F968();
      if (!v6)
        sub_23F25097C();
    }
  }
  sub_23F17FE5C();
  sub_23F126098(v7, v8, v9, v10);
}

void sub_23F217B74()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23F267D84();
  if (v0 <= 0x3F)
  {
    sub_23F178624(319, (unint64_t *)&qword_256E005C0, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for MessagePayload(319);
      if (v2 <= 0x3F)
      {
        sub_23F267D24();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload(uint64_t *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  id v9;
  char *v10;
  id v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  char v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void (*v25)(uint64_t *, id *, uint64_t);
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void *v43;
  char v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  id v96;
  char *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  char *v121;
  id v122;
  uint64_t v123;
  int *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  unsigned __int8 v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  _QWORD *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t *, id *, uint64_t);
  int *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(uint64_t *, id *, uint64_t);
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  unint64_t v184;
  int *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  unsigned __int8 v200;
  int *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  unsigned int v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  int *v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  unsigned __int8 v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  _QWORD *v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t *result;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = (char *)*a2;
    *a1 = (uint64_t)*a2;
    a1 = (uint64_t *)&v10[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = type metadata accessor for MessagePayload.RequestContent(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 3:
            v165 = sub_23F267D84();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v165))
            {
              v166 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(a1, a2, v165);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v165);
            }
            v185 = (int *)type metadata accessor for SystemPromptResolution(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 16))((char *)a1 + v185[5], (char *)a2 + v185[5], v165);
            v186 = v185[6];
            v187 = (char *)a1 + v186;
            v188 = (char *)a2 + v186;
            v189 = type metadata accessor for SystemPromptResolution.UserAction(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v190 = sub_23F268078();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v187, v188, v190);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
            }
            v191 = v185[7];
            v192 = (char *)a1 + v191;
            v193 = (char *)a2 + v191;
            *(_DWORD *)v192 = *(_DWORD *)v193;
            v194 = *((_QWORD *)v193 + 2);
            *((_QWORD *)v192 + 1) = *((_QWORD *)v193 + 1);
            *((_QWORD *)v192 + 2) = v194;
            v195 = v185[8];
            v196 = (char *)a1 + v195;
            v197 = (char *)a2 + v195;
            v198 = *(_QWORD *)v197;
            v199 = *((_QWORD *)v197 + 1);
            v200 = v197[16];
            swift_bridgeObjectRetain();
            sub_23F135C7C(v198, v199, v200);
            *(_QWORD *)v196 = v198;
            *((_QWORD *)v196 + 1) = v199;
            v196[16] = v200;
            break;
          case 2:
            *a1 = (uint64_t)*a2;
            swift_bridgeObjectRetain();
            break;
          case 1:
            v9 = a2[1];
            *a1 = (uint64_t)*a2;
            a1[1] = (uint64_t)v9;
            swift_bridgeObjectRetain();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            goto LABEL_86;
        }
        swift_storeEnumTagMultiPayload();
LABEL_86:
        v201 = (int *)type metadata accessor for MessagePayload.Request(0);
        *(uint64_t *)((char *)a1 + v201[5]) = *(uint64_t *)((char *)a2 + v201[5]);
        *((_BYTE *)a1 + v201[6]) = *((_BYTE *)a2 + v201[6]);
        v202 = v201[7];
        v203 = (char *)a1 + v202;
        v204 = (char *)a2 + v202;
        v205 = *((unsigned __int8 *)a2 + v202 + 16);
        swift_bridgeObjectRetain();
        if (v205 <= 0xFD)
        {
          v206 = *(_QWORD *)v204;
          v207 = *((_QWORD *)v204 + 1);
          sub_23F135C9C(v206, v207, v205);
          *(_QWORD *)v203 = v206;
          *((_QWORD *)v203 + 1) = v207;
          v203[16] = v205;
        }
        else
        {
          *(_OWORD *)v203 = *(_OWORD *)v204;
          v203[16] = v204[16];
        }
        v208 = v201[8];
        v209 = (char *)a1 + v208;
        v210 = (char *)a2 + v208;
        v211 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v210, 1, v211))
        {
          v212 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v212 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 16))(v209, v210, v211);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v209, 0, 1, v211);
        }
        v213 = v201[9];
        v141 = (char *)a1 + v213;
        v142 = (char *)a2 + v213;
        v143 = *((_QWORD *)v142 + 1);
        if (v143)
          goto LABEL_104;
        *(_OWORD *)v141 = *(_OWORD *)v142;
        *((_QWORD *)v141 + 2) = *((_QWORD *)v142 + 2);
        goto LABEL_110;
      case 4u:
        v11 = a2[1];
        *a1 = (uint64_t)*a2;
        a1[1] = (uint64_t)v11;
        v12 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_23F268078();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        goto LABEL_110;
      case 5u:
        v17 = (char *)*a2;
        v18 = *((_BYTE *)a2 + 8);
        sub_23F131158(*a2);
        *a1 = (uint64_t)v17;
        *((_BYTE *)a1 + 8) = v18;
        a1[2] = (uint64_t)a2[2];
        swift_bridgeObjectRetain();
        goto LABEL_110;
      case 6u:
      case 9u:
      case 0x20u:
      case 0x21u:
      case 0x28u:
        v98 = a2[1];
        *a1 = (uint64_t)*a2;
        a1[1] = (uint64_t)v98;
        a1[2] = (uint64_t)a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_110;
      case 7u:
        v19 = a2[1];
        *a1 = (uint64_t)*a2;
        a1[1] = (uint64_t)v19;
        a1[2] = (uint64_t)a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        v20 = a2[4];
        v21 = a2[5];
        a1[4] = (uint64_t)v20;
        a1[5] = (uint64_t)v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_110;
      case 8u:
        *a1 = (uint64_t)*a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v22 = a2[2];
        v23 = a2[3];
        a1[2] = (uint64_t)v22;
        a1[3] = (uint64_t)v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_110;
      case 0xAu:
      case 0xBu:
      case 0x13u:
      case 0x18u:
      case 0x19u:
      case 0x1Bu:
        v80 = a2[1];
        *a1 = (uint64_t)*a2;
        a1[1] = (uint64_t)v80;
        swift_bridgeObjectRetain();
        goto LABEL_110;
      case 0xCu:
        *a1 = (uint64_t)*a2;
        swift_bridgeObjectRetain();
        goto LABEL_110;
      case 0xDu:
        v24 = sub_23F267D84();
        v25 = *(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        v25(a1, a2, v24);
        v26 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
        v25((uint64_t *)((char *)a1 + v26[5]), (id *)((char *)a2 + v26[5]), v24);
        v27 = v26[6];
        v28 = (uint64_t *)((char *)a1 + v27);
        v29 = (id *)((char *)a2 + v27);
        v30 = v29[1];
        *v28 = *v29;
        v28[1] = v30;
        v31 = v26[7];
        v32 = (uint64_t *)((char *)a1 + v31);
        v33 = (id *)((char *)a2 + v31);
        v34 = v33[1];
        *v32 = *v33;
        v32[1] = v34;
        v35 = v26[8];
        v36 = (uint64_t *)((char *)a1 + v35);
        v37 = (id *)((char *)a2 + v35);
        v38 = v37[1];
        *v36 = *v37;
        v36[1] = v38;
        *(uint64_t *)((char *)a1 + v26[9]) = *(uint64_t *)((char *)a2 + v26[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_110;
      case 0xEu:
        v39 = sub_23F267D84();
        (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(a1, a2, v39);
        v40 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v43 = *(void **)v42;
          v44 = v42[8];
          sub_23F131158(v43);
          *(_QWORD *)v41 = v43;
          v41[8] = v44;
        }
        else
        {
          v123 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v41, v42, v123);
        }
LABEL_109:
        swift_storeEnumTagMultiPayload();
        goto LABEL_110;
      case 0xFu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v45 = a2[2];
        a1[1] = (uint64_t)a2[1];
        a1[2] = (uint64_t)v45;
        v46 = a2[4];
        a1[3] = (uint64_t)a2[3];
        a1[4] = (uint64_t)v46;
        v47 = a2[6];
        a1[5] = (uint64_t)a2[5];
        a1[6] = (uint64_t)v47;
        v48 = a2[8];
        a1[7] = (uint64_t)a2[7];
        a1[8] = (uint64_t)v48;
        *((_BYTE *)a1 + 72) = *((_BYTE *)a2 + 72);
        v49 = a2[11];
        a1[10] = (uint64_t)a2[10];
        a1[11] = (uint64_t)v49;
        a1[12] = (uint64_t)a2[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_110;
      case 0x10u:
        v50 = sub_23F267D84();
        (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(a1, a2, v50);
        v51 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
        v52 = v51[5];
        v53 = (uint64_t *)((char *)a1 + v52);
        v54 = (uint64_t *)((char *)a2 + v52);
        v56 = *v54;
        v55 = v54[1];
        *v53 = v56;
        v53[1] = v55;
        *(uint64_t *)((char *)a1 + v51[6]) = *(uint64_t *)((char *)a2 + v51[6]);
        *(uint64_t *)((char *)a1 + v51[7]) = *(uint64_t *)((char *)a2 + v51[7]);
        v57 = v51[8];
        v58 = (uint64_t *)((char *)a1 + v57);
        v59 = (id *)((char *)a2 + v57);
        v60 = v59[1];
        *v58 = *v59;
        v58[1] = v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_110;
      case 0x11u:
        v61 = sub_23F267D84();
        (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(a1, a2, v61);
        type metadata accessor for MessagePayload.ClientActionResult(0);
        type metadata accessor for StatementOutcome(0);
        v62 = (char *)&loc_23F2181A0 + 4 * word_23F279A0E[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x12u:
        v63 = (char *)*a2;
        v64 = (unint64_t)a2[1];
        sub_23F131170((uint64_t)*a2, v64);
        *a1 = (uint64_t)v63;
        a1[1] = v64;
        v65 = (uint64_t)a2[2];
        v66 = (unint64_t)a2[3];
        sub_23F131170(v65, v66);
        a1[2] = v65;
        a1[3] = v66;
        v67 = a2[5];
        a1[4] = (uint64_t)a2[4];
        a1[5] = (uint64_t)v67;
        swift_bridgeObjectRetain();
        goto LABEL_110;
      case 0x14u:
        v68 = sub_23F267D84();
        (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(a1, a2, v68);
        v69 = *(int *)(type metadata accessor for SystemPrompt(0) + 20);
        v70 = (uint64_t *)((char *)a1 + v69);
        v71 = (id *)((char *)a2 + v69);
        v72 = v71[1];
        *v70 = *v71;
        v70[1] = v72;
        type metadata accessor for SystemPrompt.Prompt(0);
        swift_bridgeObjectRetain();
        v73 = (char *)&loc_23F218304 + 4 * word_23F279A06[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x15u:
        v74 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v74))
        {
          v75 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(a1, a2, v74);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v74);
        }
        v124 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))((char *)a1 + v124[5], (char *)a2 + v124[5], v74);
        v125 = v124[6];
        v126 = (char *)a1 + v125;
        v127 = (char *)a2 + v125;
        v128 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v129 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(v126, v127, v129);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
        }
        v130 = v124[7];
        v131 = (char *)a1 + v130;
        v132 = (char *)a2 + v130;
        *(_DWORD *)v131 = *(_DWORD *)v132;
        v133 = *((_QWORD *)v132 + 2);
        *((_QWORD *)v131 + 1) = *((_QWORD *)v132 + 1);
        *((_QWORD *)v131 + 2) = v133;
        v134 = v124[8];
        v135 = (char *)a1 + v134;
        v136 = (char *)a2 + v134;
        v137 = *(_QWORD *)v136;
        v138 = *((_QWORD *)v136 + 1);
        v139 = v136[16];
        swift_bridgeObjectRetain();
        sub_23F135C7C(v137, v138, v139);
        *(_QWORD *)v135 = v137;
        *((_QWORD *)v135 + 1) = v138;
        v135[16] = v139;
        goto LABEL_110;
      case 0x16u:
        v76 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v76))
        {
          v77 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(a1, a2, v76);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v76);
        }
        v144 = type metadata accessor for ActionResponse(0);
        v145 = *(int *)(v144 + 20);
        v146 = (uint64_t *)((char *)a1 + v145);
        v147 = (id *)((char *)a2 + v145);
        v148 = v147[1];
        *v146 = *v147;
        v146[1] = v148;
        v149 = *(int *)(v144 + 24);
        v150 = (uint64_t *)((char *)a1 + v149);
        v151 = (id *)((char *)a2 + v149);
        v152 = v151[1];
        *v150 = *v151;
        v150[1] = v152;
        type metadata accessor for ActionOutcome(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v153 = (char *)&loc_23F218B44 + 4 * word_23F2799F0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x17u:
        v78 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v78))
        {
          v79 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(a1, a2, v78);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v78);
        }
        v154 = type metadata accessor for SystemResponse(0);
        v155 = *(int *)(v154 + 20);
        v156 = (char *)a1 + v155;
        v157 = (char *)a2 + v155;
        v158 = *((_QWORD *)v157 + 2);
        if (v158 == 1)
        {
          *(_OWORD *)v156 = *(_OWORD *)v157;
          *((_QWORD *)v156 + 2) = *((_QWORD *)v157 + 2);
        }
        else
        {
          *(_DWORD *)v156 = *(_DWORD *)v157;
          *((_QWORD *)v156 + 1) = *((_QWORD *)v157 + 1);
          *((_QWORD *)v156 + 2) = v158;
          swift_bridgeObjectRetain();
        }
        v159 = *(int *)(v154 + 24);
        v160 = (uint64_t *)((char *)a1 + v159);
        v161 = (id *)((char *)a2 + v159);
        v162 = v161[1];
        *v160 = *v161;
        v160[1] = v162;
        type metadata accessor for StatementOutcome(0);
        swift_bridgeObjectRetain();
        v163 = (char *)&loc_23F218C98 + 4 * word_23F2799DA[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x1Cu:
        v81 = a2[1];
        *a1 = (uint64_t)*a2;
        a1[1] = (uint64_t)v81;
        v82 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
        v83 = *(int *)(v82 + 20);
        v84 = (char *)a1 + v83;
        v85 = (char *)a2 + v83;
        v86 = sub_23F267D84();
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v85, 1, v86))
        {
          v87 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v84, 0, 1, v86);
        }
        v164 = *(int *)(v82 + 24);
        v141 = (char *)a1 + v164;
        v142 = (char *)a2 + v164;
        v143 = *((_QWORD *)v142 + 1);
        if (v143)
          goto LABEL_104;
        *(_OWORD *)v141 = *(_OWORD *)v142;
        *((_QWORD *)v141 + 2) = *((_QWORD *)v142 + 2);
        goto LABEL_110;
      case 0x1Du:
        *a1 = (uint64_t)*a2;
        v88 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
        v89 = *(int *)(v88 + 20);
        v90 = (char *)a1 + v89;
        v91 = (char *)a2 + v89;
        v92 = sub_23F267D84();
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v91, 1, v92))
        {
          v93 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v90, v91, v92);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v90, 0, 1, v92);
        }
        v140 = *(int *)(v88 + 24);
        v141 = (char *)a1 + v140;
        v142 = (char *)a2 + v140;
        v143 = *((_QWORD *)v142 + 1);
        if (v143)
          goto LABEL_104;
        *(_OWORD *)v141 = *(_OWORD *)v142;
        *((_QWORD *)v141 + 2) = *((_QWORD *)v142 + 2);
        goto LABEL_110;
      case 0x1Eu:
        v94 = type metadata accessor for MessagePayload.RequestContent(0);
        v95 = swift_getEnumCaseMultiPayload();
        switch(v95)
        {
          case 3:
            v167 = sub_23F267D84();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v167))
            {
              v168 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(a1, a2, v167);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v167);
            }
            v214 = (int *)type metadata accessor for SystemPromptResolution(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 16))((char *)a1 + v214[5], (char *)a2 + v214[5], v167);
            v215 = v214[6];
            v216 = (char *)a1 + v215;
            v217 = (char *)a2 + v215;
            v218 = type metadata accessor for SystemPromptResolution.UserAction(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v219 = sub_23F268078();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 16))(v216, v217, v219);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
            }
            v220 = v214[7];
            v221 = (char *)a1 + v220;
            v222 = (char *)a2 + v220;
            *(_DWORD *)v221 = *(_DWORD *)v222;
            v223 = *((_QWORD *)v222 + 2);
            *((_QWORD *)v221 + 1) = *((_QWORD *)v222 + 1);
            *((_QWORD *)v221 + 2) = v223;
            v224 = v214[8];
            v225 = (char *)a1 + v224;
            v226 = (char *)a2 + v224;
            v227 = *(_QWORD *)v226;
            v228 = *((_QWORD *)v226 + 1);
            v229 = v226[16];
            swift_bridgeObjectRetain();
            sub_23F135C7C(v227, v228, v229);
            *(_QWORD *)v225 = v227;
            *((_QWORD *)v225 + 1) = v228;
            v225[16] = v229;
            break;
          case 2:
            *a1 = (uint64_t)*a2;
            swift_bridgeObjectRetain();
            break;
          case 1:
            v96 = a2[1];
            *a1 = (uint64_t)*a2;
            a1[1] = (uint64_t)v96;
            swift_bridgeObjectRetain();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
            goto LABEL_100;
        }
        swift_storeEnumTagMultiPayload();
LABEL_100:
        v230 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
        v231 = *(int *)(v230 + 20);
        v232 = (char *)a1 + v231;
        v233 = (char *)a2 + v231;
        v234 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v233, 1, v234))
        {
          v235 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v232, v233, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 16))(v232, v233, v234);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v232, 0, 1, v234);
        }
        v236 = *(int *)(v230 + 24);
        v141 = (char *)a1 + v236;
        v142 = (char *)a2 + v236;
        v143 = *((_QWORD *)v142 + 1);
        if (v143)
        {
LABEL_104:
          *(_QWORD *)v141 = *(_QWORD *)v142;
          *((_QWORD *)v141 + 1) = v143;
          *((_QWORD *)v141 + 2) = *((_QWORD *)v142 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v141 = *(_OWORD *)v142;
          *((_QWORD *)v141 + 2) = *((_QWORD *)v142 + 2);
        }
LABEL_110:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Fu:
        type metadata accessor for StatementOutcome(0);
        v97 = (char *)&loc_23F2185A0 + 4 * word_23F2799C4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x22u:
        v99 = sub_23F267D84();
        (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
        v100 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
        *((_BYTE *)a1 + *(int *)(v100 + 20)) = *((_BYTE *)a2 + *(int *)(v100 + 20));
        v101 = *(int *)(v100 + 24);
        v102 = (char *)a1 + v101;
        v103 = (char *)a2 + v101;
        *(_DWORD *)v102 = *(_DWORD *)v103;
        v104 = *((_QWORD *)v103 + 2);
        *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
        *((_QWORD *)v102 + 2) = v104;
        swift_bridgeObjectRetain();
        goto LABEL_110;
      case 0x23u:
        v105 = sub_23F267D84();
        (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(a1, a2, v105);
        v106 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
        v107 = (uint64_t *)((char *)a1 + v106);
        v108 = (id *)((char *)a2 + v106);
        v109 = v108[1];
        *v107 = *v108;
        v107[1] = v109;
        v107[2] = v108[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_110;
      case 0x24u:
        v110 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
          case 5u:
          case 7u:
          case 8u:
            v111 = sub_23F267D84();
            (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v111 - 8) + 16))(a1, a2, v111);
            goto LABEL_109;
          case 2u:
            v169 = sub_23F267D84();
            v170 = *(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v169 - 8) + 16);
            v170(a1, a2, v169);
            v171 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
            *(uint64_t *)((char *)a1 + v171[5]) = *(uint64_t *)((char *)a2 + v171[5]);
            *(uint64_t *)((char *)a1 + v171[6]) = *(uint64_t *)((char *)a2 + v171[6]);
            v172 = v171[7];
            v173 = (char *)a1 + v172;
            v174 = (char *)a2 + v172;
            swift_bridgeObjectRetain();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v174, 1, v169))
            {
              v175 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
            }
            else
            {
              v170((uint64_t *)v173, (id *)v174, v169);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v173, 0, 1, v169);
            }
            v238 = v171[8];
            v239 = (uint64_t *)((char *)a1 + v238);
            v240 = (id *)((char *)a2 + v238);
            v241 = v240[1];
            *v239 = *v240;
            v239[1] = v241;
            *(uint64_t *)((char *)a1 + v171[9]) = *(uint64_t *)((char *)a2 + v171[9]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_109;
          case 4u:
            v176 = sub_23F267D84();
            (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(a1, a2, v176);
            v177 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
            *(uint64_t *)((char *)a1 + *(int *)(v177 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v177 + 20));
            swift_bridgeObjectRetain();
            goto LABEL_109;
          case 9u:
            v178 = sub_23F267D84();
            v179 = *(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v178 - 8) + 16);
            v179(a1, a2, v178);
            v180 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
            v179((uint64_t *)((char *)a1 + *(int *)(v180 + 20)), (id *)((char *)a2 + *(int *)(v180 + 20)), v178);
            v181 = *(int *)(v180 + 24);
            v182 = (char *)a1 + v181;
            v183 = (char *)a2 + v181;
            v184 = *((_QWORD *)v183 + 1);
            if (v184 >> 60 == 15)
            {
              *(_OWORD *)v182 = *(_OWORD *)v183;
            }
            else
            {
              v237 = *(_QWORD *)v183;
              sub_23F131170(*(_QWORD *)v183, *((_QWORD *)v183 + 1));
              *(_QWORD *)v182 = v237;
              *((_QWORD *)v182 + 1) = v184;
            }
            goto LABEL_109;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
            break;
        }
        goto LABEL_110;
      case 0x25u:
        type metadata accessor for SessionServerDebuggerEvent.Payload(0);
        v112 = (char *)&loc_23F2187D8 + 4 * word_23F279994[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x26u:
        v113 = (uint64_t)*a2;
        v114 = (uint64_t)a2[1];
        v115 = (uint64_t)a2[2];
        v116 = (uint64_t)a2[3];
        v117 = (uint64_t)a2[4];
        v118 = (uint64_t)a2[5];
        v120 = (uint64_t)a2[6];
        v119 = a2[7];
        sub_23F135CF4(v113, v114, v115, v116, v117, v118, v120);
        *a1 = v113;
        a1[1] = v114;
        a1[2] = v115;
        a1[3] = v116;
        a1[4] = v117;
        a1[5] = v118;
        a1[6] = v120;
        a1[7] = (uint64_t)v119;
        goto LABEL_110;
      case 0x27u:
        v121 = (char *)*a2;
        v122 = a2[1];
        *a1 = (uint64_t)v121;
        a1[1] = (uint64_t)v122;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_110;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
  }
  return a1;
}

void destroy for MessagePayload(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for MessagePayload.RequestContent(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3)
      {
        v47 = sub_23F267D84();
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v47))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(a1, v47);
        v48 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(a1 + v48[5], v47);
        v49 = a1 + v48[6];
        type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v50 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
        }
        swift_bridgeObjectRelease();
        sub_23F137210(*(_QWORD *)(a1 + v48[8]), *(_QWORD *)(a1 + v48[8] + 8), *(_BYTE *)(a1 + v48[8] + 16));
      }
      else if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
      }
      v51 = (int *)type metadata accessor for MessagePayload.Request(0);
      swift_bridgeObjectRelease();
      v52 = a1 + v51[7];
      v53 = *(unsigned __int8 *)(v52 + 16);
      if (v53 <= 0xFD)
        sub_23F137230(*(_QWORD *)v52, *(_QWORD *)(v52 + 8), v53);
      v54 = a1 + v51[8];
      v55 = sub_23F267D84();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v54, 1, v55))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
      v56 = v51[9];
      goto LABEL_81;
    case 4u:
      swift_bridgeObjectRelease();
      v27 = type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0);
LABEL_33:
      a1 += *(int *)(v27 + 20);
      goto LABEL_34;
    case 5u:
      sub_23F131164(*(id *)a1);
      goto LABEL_164;
    case 6u:
    case 9u:
    case 0x20u:
    case 0x21u:
    case 0x28u:
      goto LABEL_82;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_164;
    case 8u:
    case 0x27u:
      goto LABEL_167;
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0x13u:
    case 0x18u:
    case 0x19u:
    case 0x1Bu:
      goto LABEL_164;
    case 0xDu:
      v29 = sub_23F267D84();
      v30 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8);
      v30(a1, v29);
      v31 = type metadata accessor for MessagePayload.ClientEffectInvocation(0);
      v30(a1 + *(int *)(v31 + 20), v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_167;
    case 0xEu:
      v3 = sub_23F267D84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      a1 += *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
      type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_23F131164(*(id *)a1);
      }
      else
      {
LABEL_34:
        v28 = sub_23F268078();
LABEL_58:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(a1, v28);
      }
      return;
    case 0xFu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_164;
    case 0x10u:
      v32 = sub_23F267D84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(a1, v32);
      type metadata accessor for MessagePayload.ClientAction(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_167;
    case 0x11u:
      v4 = sub_23F267D84();
      v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
      v5(a1, v4);
      v6 = type metadata accessor for MessagePayload.ClientActionResult(0);
      v7 = a1 + *(int *)(v6 + 20);
      type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v8 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
          v9 = v7 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
          v10 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v9, 1, v10))
          {
            v5(v9, v4);
            swift_bridgeObjectRelease();
            goto LABEL_100;
          }
          goto LABEL_101;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_100;
        case 2u:
          goto LABEL_99;
        case 3u:
          swift_bridgeObjectRelease();
          v73 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_96;
        case 4u:
          swift_bridgeObjectRelease();
          v74 = v7 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v75 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v74, v75);
          swift_bridgeObjectRelease();
          goto LABEL_100;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_100;
        case 6u:
          swift_bridgeObjectRelease();
          v73 = type metadata accessor for ParameterNotAllowed(0);
          goto LABEL_96;
        case 7u:
          swift_bridgeObjectRelease();
          v73 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_96:
          v76 = v7 + *(int *)(v73 + 20);
          v77 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 8))(v76, v77);
          goto LABEL_101;
        case 8u:
          sub_23F137248(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_BYTE *)(v7 + 16));
          goto LABEL_101;
        case 9u:
          goto LABEL_100;
        case 0xAu:
          if (*(_QWORD *)(v7 + 8) < 0x10uLL)
            goto LABEL_101;
LABEL_99:
          swift_bridgeObjectRelease();
LABEL_100:
          swift_bridgeObjectRelease();
LABEL_101:
          v78 = (_QWORD *)(a1 + *(int *)(v6 + 24));
          if (*v78 == 1)
            return;
          swift_bridgeObjectRelease();
          if (v78[2])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v78[10])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v78[17])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          break;
        default:
          goto LABEL_101;
      }
      goto LABEL_167;
    case 0x12u:
      sub_23F1311B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      sub_23F1311B4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
      goto LABEL_164;
    case 0x14u:
      v11 = sub_23F267D84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
      v12 = type metadata accessor for SystemPrompt(0);
      swift_bridgeObjectRelease();
      a1 += *(int *)(v12 + 24);
      type metadata accessor for SystemPrompt.Prompt(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_164;
        case 1u:
          swift_bridgeObjectRelease();
          v27 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_33;
        case 2u:
          swift_bridgeObjectRelease();
          v64 = a1 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v65 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
          goto LABEL_167;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_164;
        default:
          return;
      }
      return;
    case 0x15u:
      v33 = sub_23F267D84();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v33))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(a1, v33);
      v34 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(a1 + v34[5], v33);
      v35 = a1 + v34[6];
      type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v36 = sub_23F268078();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
      }
      swift_bridgeObjectRelease();
      sub_23F137210(*(_QWORD *)(a1 + v34[8]), *(_QWORD *)(a1 + v34[8] + 8), *(_BYTE *)(a1 + v34[8] + 16));
      return;
    case 0x16u:
      v13 = sub_23F267D84();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v13))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
      v14 = (int *)type metadata accessor for ActionResponse(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = a1 + v14[7];
      type metadata accessor for ActionOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v16 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
          v17 = v15 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
          v18 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v17, 1, v18))
          {
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v17, v13);
            swift_bridgeObjectRelease();
            goto LABEL_120;
          }
          goto LABEL_121;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_120;
        case 2u:
          goto LABEL_119;
        case 3u:
          swift_bridgeObjectRelease();
          v79 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_116;
        case 4u:
          swift_bridgeObjectRelease();
          v80 = v15 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v81 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 8))(v80, v81);
          swift_bridgeObjectRelease();
          goto LABEL_120;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_120;
        case 6u:
          swift_bridgeObjectRelease();
          v79 = type metadata accessor for ParameterNotAllowed(0);
          goto LABEL_116;
        case 7u:
          swift_bridgeObjectRelease();
          v79 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_116:
          v82 = v15 + *(int *)(v79 + 20);
          v83 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 8))(v82, v83);
          goto LABEL_121;
        case 8u:
          sub_23F137248(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(_BYTE *)(v15 + 16));
          goto LABEL_121;
        case 9u:
          goto LABEL_120;
        case 0xAu:
          if (*(_QWORD *)(v15 + 8) < 0x10uLL)
            goto LABEL_121;
LABEL_119:
          swift_bridgeObjectRelease();
LABEL_120:
          swift_bridgeObjectRelease();
LABEL_121:
          v84 = (_QWORD *)(a1 + v14[8]);
          swift_bridgeObjectRelease();
          if (v84[2])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v84[10])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v84[17])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v85 = a1 + v14[9];
          if (*(_QWORD *)v85)
          {
            swift_bridgeObjectRelease();
            v86 = *(unsigned __int8 *)(v85 + 24);
            if (v86 != 255)
              sub_23F137270(*(_QWORD *)(v85 + 8), *(_QWORD *)(v85 + 16), v86);
            v87 = *(unsigned __int8 *)(v85 + 48);
            if (v87 != 255)
              sub_23F137270(*(_QWORD *)(v85 + 32), *(_QWORD *)(v85 + 40), v87);
            swift_bridgeObjectRelease();
          }
          break;
        default:
          goto LABEL_121;
      }
      goto LABEL_164;
    case 0x17u:
      v37 = sub_23F267D84();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v37))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(a1, v37);
      v38 = (int *)type metadata accessor for SystemResponse(0);
      if (*(_QWORD *)(a1 + v38[5] + 16) != 1)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = a1 + v38[7];
      type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v40 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
          v41 = v39 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
          v42 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v41, 1, v42))
          {
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v41, v37);
            swift_bridgeObjectRelease();
            goto LABEL_144;
          }
          goto LABEL_145;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_144;
        case 2u:
          goto LABEL_143;
        case 3u:
          swift_bridgeObjectRelease();
          v88 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_140;
        case 4u:
          swift_bridgeObjectRelease();
          v89 = v39 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v90 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 8))(v89, v90);
          swift_bridgeObjectRelease();
          goto LABEL_144;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_144;
        case 6u:
          swift_bridgeObjectRelease();
          v88 = type metadata accessor for ParameterNotAllowed(0);
          goto LABEL_140;
        case 7u:
          swift_bridgeObjectRelease();
          v88 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_140:
          v91 = v39 + *(int *)(v88 + 20);
          v92 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 8))(v91, v92);
          goto LABEL_145;
        case 8u:
          sub_23F137248(*(_QWORD *)v39, *(_QWORD *)(v39 + 8), *(_BYTE *)(v39 + 16));
          goto LABEL_145;
        case 9u:
          goto LABEL_144;
        case 0xAu:
          if (*(_QWORD *)(v39 + 8) < 0x10uLL)
            goto LABEL_145;
LABEL_143:
          swift_bridgeObjectRelease();
LABEL_144:
          swift_bridgeObjectRelease();
LABEL_145:
          v93 = a1 + v38[8];
          if (*(_QWORD *)v93)
          {
            swift_bridgeObjectRelease();
            v94 = *(unsigned __int8 *)(v93 + 24);
            if (v94 != 255)
              sub_23F137270(*(_QWORD *)(v93 + 8), *(_QWORD *)(v93 + 16), v94);
            v95 = *(unsigned __int8 *)(v93 + 48);
            if (v95 != 255)
              sub_23F137270(*(_QWORD *)(v93 + 32), *(_QWORD *)(v93 + 40), v95);
            swift_bridgeObjectRelease();
          }
          break;
        default:
          goto LABEL_145;
      }
LABEL_167:
      swift_bridgeObjectRelease();
      goto LABEL_164;
    case 0x1Cu:
      swift_bridgeObjectRelease();
      v19 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
      goto LABEL_78;
    case 0x1Du:
      swift_bridgeObjectRelease();
      v19 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
      goto LABEL_78;
    case 0x1Eu:
      type metadata accessor for MessagePayload.RequestContent(0);
      v20 = swift_getEnumCaseMultiPayload();
      if (v20 == 3)
      {
        v57 = sub_23F267D84();
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v57))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(a1, v57);
        v58 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(a1 + v58[5], v57);
        v59 = a1 + v58[6];
        type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v60 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v59, v60);
        }
        swift_bridgeObjectRelease();
        sub_23F137210(*(_QWORD *)(a1 + v58[8]), *(_QWORD *)(a1 + v58[8] + 8), *(_BYTE *)(a1 + v58[8] + 16));
      }
      else if (v20 == 2 || v20 == 1)
      {
        swift_bridgeObjectRelease();
      }
      v19 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
LABEL_78:
      v61 = v19;
      v62 = a1 + *(int *)(v19 + 20);
      v63 = sub_23F267D84();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v62, 1, v63))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v62, v63);
      v56 = *(int *)(v61 + 24);
LABEL_81:
      if (*(_QWORD *)(a1 + v56 + 8))
        goto LABEL_82;
      return;
    case 0x1Fu:
      type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v43 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(a1, v43);
          v44 = a1 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
          v45 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v44, 1, v45))
          {
            v46 = sub_23F267D84();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v44, v46);
            swift_bridgeObjectRelease();
            goto LABEL_162;
          }
          goto LABEL_163;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_162;
        case 2u:
          goto LABEL_161;
        case 3u:
          swift_bridgeObjectRelease();
          v96 = type metadata accessor for ParameterNeedsValue(0);
          goto LABEL_158;
        case 4u:
          swift_bridgeObjectRelease();
          v97 = a1 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
          v98 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 8))(v97, v98);
          swift_bridgeObjectRelease();
          goto LABEL_162;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_162;
        case 6u:
          swift_bridgeObjectRelease();
          v96 = type metadata accessor for ParameterNotAllowed(0);
          goto LABEL_158;
        case 7u:
          swift_bridgeObjectRelease();
          v96 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_158:
          v99 = a1 + *(int *)(v96 + 20);
          v100 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 8))(v99, v100);
          goto LABEL_163;
        case 8u:
          sub_23F137248(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
          goto LABEL_163;
        case 9u:
          goto LABEL_162;
        case 0xAu:
          if (*(_QWORD *)(a1 + 8) < 0x10uLL)
            goto LABEL_163;
LABEL_161:
          swift_bridgeObjectRelease();
LABEL_162:
          swift_bridgeObjectRelease();
LABEL_163:
          type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
          break;
        default:
          goto LABEL_163;
      }
      goto LABEL_164;
    case 0x22u:
      v21 = sub_23F267D84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a1, v21);
      type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
      goto LABEL_164;
    case 0x23u:
      v22 = sub_23F267D84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a1, v22);
      type metadata accessor for MessagePayload.ActionSummaryUpdate(0);
LABEL_82:
      swift_bridgeObjectRelease();
LABEL_164:
      swift_bridgeObjectRelease();
      break;
    case 0x24u:
      type metadata accessor for SessionClientDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
        case 5u:
        case 7u:
        case 8u:
          goto LABEL_57;
        case 2u:
          v23 = sub_23F267D84();
          v24 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8);
          v24(a1, v23);
          v25 = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
          swift_bridgeObjectRelease();
          v26 = a1 + *(int *)(v25 + 28);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v26, 1, v23))
            v24(v26, v23);
          goto LABEL_167;
        case 4u:
          v66 = sub_23F267D84();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(a1, v66);
          type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
          goto LABEL_164;
        case 9u:
          v67 = sub_23F267D84();
          v68 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8);
          v68(a1, v67);
          v69 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
          v68(a1 + *(int *)(v69 + 20), v67);
          v70 = (uint64_t *)(a1 + *(int *)(v69 + 24));
          v71 = v70[1];
          if (v71 >> 60 == 15)
            return;
          v72 = *v70;
          break;
        default:
          return;
      }
LABEL_174:
      sub_23F1311B4(v72, v71);
      break;
    case 0x25u:
      type metadata accessor for SessionServerDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xCu:
LABEL_57:
          v28 = sub_23F267D84();
          goto LABEL_58;
        case 1u:
          swift_bridgeObjectRelease();
          v101 = a1 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0) + 24);
          v102 = sub_23F267D84();
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v101, 1, v102))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 8))(v101, v102);
          goto LABEL_167;
        case 3u:
        case 4u:
          goto LABEL_164;
        case 5u:
          swift_bridgeObjectRelease();
          v103 = a1 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0) + 24);
          v104 = sub_23F267D84();
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v103, 1, v104))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 8))(v103, v104);
          goto LABEL_164;
        case 6u:
          v105 = sub_23F267D84();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 8))(a1, v105);
          type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
          goto LABEL_164;
        case 0xBu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v106 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
          v107 = a1 + *(int *)(v106 + 32);
          v108 = sub_23F267D84();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 8))(v107, v108);
          swift_bridgeObjectRelease();
          sub_23F1311B4(*(_QWORD *)(a1 + *(int *)(v106 + 40)), *(_QWORD *)(a1 + *(int *)(v106 + 40) + 8));
          goto LABEL_164;
        case 0xDu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v72 = *(_QWORD *)(a1 + 72);
          v71 = *(_QWORD *)(a1 + 80);
          goto LABEL_174;
        default:
          return;
      }
    case 0x26u:
      sub_23F137288(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
      break;
    default:
      return;
  }
}

uint64_t *initializeWithCopy for MessagePayload(uint64_t *a1, id *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, id *, uint64_t);
  int *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  void *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  unsigned __int8 v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(uint64_t *, id *, uint64_t);
  int *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(uint64_t *, id *, uint64_t);
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  unint64_t v182;
  int *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  unsigned __int8 v198;
  int *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  unsigned int v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  int *v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  unsigned __int8 v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t *result;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = type metadata accessor for MessagePayload.RequestContent(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 3:
          v163 = sub_23F267D84();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v163))
          {
            v164 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(a1, a2, v163);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v163);
          }
          v183 = (int *)type metadata accessor for SystemPromptResolution(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 16))((char *)a1 + v183[5], (char *)a2 + v183[5], v163);
          v184 = v183[6];
          v185 = (char *)a1 + v184;
          v186 = (char *)a2 + v184;
          v187 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v188 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v185, v186, v188);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
          }
          v189 = v183[7];
          v190 = (char *)a1 + v189;
          v191 = (char *)a2 + v189;
          *(_DWORD *)v190 = *(_DWORD *)v191;
          v192 = *((_QWORD *)v191 + 2);
          *((_QWORD *)v190 + 1) = *((_QWORD *)v191 + 1);
          *((_QWORD *)v190 + 2) = v192;
          v193 = v183[8];
          v194 = (char *)a1 + v193;
          v195 = (char *)a2 + v193;
          v196 = *(_QWORD *)v195;
          v197 = *((_QWORD *)v195 + 1);
          v198 = v195[16];
          swift_bridgeObjectRetain();
          sub_23F135C7C(v196, v197, v198);
          *(_QWORD *)v194 = v196;
          *((_QWORD *)v194 + 1) = v197;
          v194[16] = v198;
          break;
        case 2:
          *a1 = (uint64_t)*a2;
          swift_bridgeObjectRetain();
          break;
        case 1:
          v8 = (uint64_t)a2[1];
          *a1 = (uint64_t)*a2;
          a1[1] = v8;
          swift_bridgeObjectRetain();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          goto LABEL_84;
      }
      swift_storeEnumTagMultiPayload();
LABEL_84:
      v199 = (int *)type metadata accessor for MessagePayload.Request(0);
      *(uint64_t *)((char *)a1 + v199[5]) = *(uint64_t *)((char *)a2 + v199[5]);
      *((_BYTE *)a1 + v199[6]) = *((_BYTE *)a2 + v199[6]);
      v200 = v199[7];
      v201 = (char *)a1 + v200;
      v202 = (char *)a2 + v200;
      v203 = *((unsigned __int8 *)a2 + v200 + 16);
      swift_bridgeObjectRetain();
      if (v203 <= 0xFD)
      {
        v204 = *(_QWORD *)v202;
        v205 = *((_QWORD *)v202 + 1);
        sub_23F135C9C(v204, v205, v203);
        *(_QWORD *)v201 = v204;
        *((_QWORD *)v201 + 1) = v205;
        v201[16] = v203;
      }
      else
      {
        *(_OWORD *)v201 = *(_OWORD *)v202;
        v201[16] = v202[16];
      }
      v206 = v199[8];
      v207 = (char *)a1 + v206;
      v208 = (char *)a2 + v206;
      v209 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v208, 1, v209))
      {
        v210 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 16))(v207, v208, v209);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v207, 0, 1, v209);
      }
      v211 = v199[9];
      v139 = (char *)a1 + v211;
      v140 = (char *)a2 + v211;
      v141 = *((_QWORD *)v140 + 1);
      if (v141)
        goto LABEL_102;
      *(_OWORD *)v139 = *(_OWORD *)v140;
      *((_QWORD *)v139 + 2) = *((_QWORD *)v140 + 2);
      goto LABEL_108;
    case 4u:
      v9 = (uint64_t)a2[1];
      *a1 = (uint64_t)*a2;
      a1[1] = v9;
      v10 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_23F268078();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      goto LABEL_108;
    case 5u:
      v15 = *a2;
      v16 = *((_BYTE *)a2 + 8);
      sub_23F131158(*a2);
      *a1 = (uint64_t)v15;
      *((_BYTE *)a1 + 8) = v16;
      a1[2] = (uint64_t)a2[2];
      swift_bridgeObjectRetain();
      goto LABEL_108;
    case 6u:
    case 9u:
    case 0x20u:
    case 0x21u:
    case 0x28u:
      v96 = (uint64_t)a2[1];
      *a1 = (uint64_t)*a2;
      a1[1] = v96;
      a1[2] = (uint64_t)a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_108;
    case 7u:
      v17 = (uint64_t)a2[1];
      *a1 = (uint64_t)*a2;
      a1[1] = v17;
      a1[2] = (uint64_t)a2[2];
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      v18 = (uint64_t)a2[4];
      v19 = (uint64_t)a2[5];
      a1[4] = v18;
      a1[5] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_108;
    case 8u:
      *a1 = (uint64_t)*a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v20 = (uint64_t)a2[2];
      v21 = (uint64_t)a2[3];
      a1[2] = v20;
      a1[3] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_108;
    case 0xAu:
    case 0xBu:
    case 0x13u:
    case 0x18u:
    case 0x19u:
    case 0x1Bu:
      v78 = (uint64_t)a2[1];
      *a1 = (uint64_t)*a2;
      a1[1] = v78;
      swift_bridgeObjectRetain();
      goto LABEL_108;
    case 0xCu:
      *a1 = (uint64_t)*a2;
      swift_bridgeObjectRetain();
      goto LABEL_108;
    case 0xDu:
      v22 = sub_23F267D84();
      v23 = *(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      v23(a1, a2, v22);
      v24 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
      v23((uint64_t *)((char *)a1 + v24[5]), (id *)((char *)a2 + v24[5]), v22);
      v25 = v24[6];
      v26 = (uint64_t *)((char *)a1 + v25);
      v27 = (id *)((char *)a2 + v25);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
      v29 = v24[7];
      v30 = (uint64_t *)((char *)a1 + v29);
      v31 = (id *)((char *)a2 + v29);
      v32 = v31[1];
      *v30 = *v31;
      v30[1] = v32;
      v33 = v24[8];
      v34 = (uint64_t *)((char *)a1 + v33);
      v35 = (id *)((char *)a2 + v33);
      v36 = v35[1];
      *v34 = *v35;
      v34[1] = v36;
      *(uint64_t *)((char *)a1 + v24[9]) = *(uint64_t *)((char *)a2 + v24[9]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_108;
    case 0xEu:
      v37 = sub_23F267D84();
      (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a1, a2, v37);
      v38 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v41 = *(void **)v40;
        v42 = v40[8];
        sub_23F131158(v41);
        *(_QWORD *)v39 = v41;
        v39[8] = v42;
      }
      else
      {
        v121 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 16))(v39, v40, v121);
      }
LABEL_107:
      swift_storeEnumTagMultiPayload();
      goto LABEL_108;
    case 0xFu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v43 = (uint64_t)a2[2];
      a1[1] = (uint64_t)a2[1];
      a1[2] = v43;
      v44 = (uint64_t)a2[4];
      a1[3] = (uint64_t)a2[3];
      a1[4] = v44;
      v45 = (uint64_t)a2[6];
      a1[5] = (uint64_t)a2[5];
      a1[6] = v45;
      v46 = (uint64_t)a2[8];
      a1[7] = (uint64_t)a2[7];
      a1[8] = v46;
      *((_BYTE *)a1 + 72) = *((_BYTE *)a2 + 72);
      v47 = (uint64_t)a2[11];
      a1[10] = (uint64_t)a2[10];
      a1[11] = v47;
      a1[12] = (uint64_t)a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_108;
    case 0x10u:
      v48 = sub_23F267D84();
      (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(a1, a2, v48);
      v49 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
      v50 = v49[5];
      v51 = (uint64_t *)((char *)a1 + v50);
      v52 = (uint64_t *)((char *)a2 + v50);
      v54 = *v52;
      v53 = v52[1];
      *v51 = v54;
      v51[1] = v53;
      *(uint64_t *)((char *)a1 + v49[6]) = *(uint64_t *)((char *)a2 + v49[6]);
      *(uint64_t *)((char *)a1 + v49[7]) = *(uint64_t *)((char *)a2 + v49[7]);
      v55 = v49[8];
      v56 = (uint64_t *)((char *)a1 + v55);
      v57 = (id *)((char *)a2 + v55);
      v58 = v57[1];
      *v56 = *v57;
      v56[1] = v58;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_108;
    case 0x11u:
      v59 = sub_23F267D84();
      (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(a1, a2, v59);
      type metadata accessor for MessagePayload.ClientActionResult(0);
      type metadata accessor for StatementOutcome(0);
      v60 = (char *)&loc_23F21C7AC + 4 * word_23F279BD2[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x12u:
      v61 = (uint64_t)*a2;
      v62 = (unint64_t)a2[1];
      sub_23F131170((uint64_t)*a2, v62);
      *a1 = v61;
      a1[1] = v62;
      v63 = (uint64_t)a2[2];
      v64 = (unint64_t)a2[3];
      sub_23F131170(v63, v64);
      a1[2] = v63;
      a1[3] = v64;
      v65 = (uint64_t)a2[5];
      a1[4] = (uint64_t)a2[4];
      a1[5] = v65;
      swift_bridgeObjectRetain();
      goto LABEL_108;
    case 0x14u:
      v66 = sub_23F267D84();
      (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(a1, a2, v66);
      v67 = *(int *)(type metadata accessor for SystemPrompt(0) + 20);
      v68 = (uint64_t *)((char *)a1 + v67);
      v69 = (id *)((char *)a2 + v67);
      v70 = v69[1];
      *v68 = *v69;
      v68[1] = v70;
      type metadata accessor for SystemPrompt.Prompt(0);
      swift_bridgeObjectRetain();
      v71 = (char *)&loc_23F21C910 + 4 * word_23F279BCA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x15u:
      v72 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v72))
      {
        v73 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(a1, a2, v72);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v72);
      }
      v122 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))((char *)a1 + v122[5], (char *)a2 + v122[5], v72);
      v123 = v122[6];
      v124 = (char *)a1 + v123;
      v125 = (char *)a2 + v123;
      v126 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v127 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(v124, v125, v127);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
      }
      v128 = v122[7];
      v129 = (char *)a1 + v128;
      v130 = (char *)a2 + v128;
      *(_DWORD *)v129 = *(_DWORD *)v130;
      v131 = *((_QWORD *)v130 + 2);
      *((_QWORD *)v129 + 1) = *((_QWORD *)v130 + 1);
      *((_QWORD *)v129 + 2) = v131;
      v132 = v122[8];
      v133 = (char *)a1 + v132;
      v134 = (char *)a2 + v132;
      v135 = *(_QWORD *)v134;
      v136 = *((_QWORD *)v134 + 1);
      v137 = v134[16];
      swift_bridgeObjectRetain();
      sub_23F135C7C(v135, v136, v137);
      *(_QWORD *)v133 = v135;
      *((_QWORD *)v133 + 1) = v136;
      v133[16] = v137;
      goto LABEL_108;
    case 0x16u:
      v74 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v74))
      {
        v75 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(a1, a2, v74);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v74);
      }
      v142 = type metadata accessor for ActionResponse(0);
      v143 = *(int *)(v142 + 20);
      v144 = (uint64_t *)((char *)a1 + v143);
      v145 = (id *)((char *)a2 + v143);
      v146 = v145[1];
      *v144 = *v145;
      v144[1] = v146;
      v147 = *(int *)(v142 + 24);
      v148 = (uint64_t *)((char *)a1 + v147);
      v149 = (id *)((char *)a2 + v147);
      v150 = v149[1];
      *v148 = *v149;
      v148[1] = v150;
      type metadata accessor for ActionOutcome(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v151 = (char *)&loc_23F21D150 + 4 * word_23F279BB4[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x17u:
      v76 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v76))
      {
        v77 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(a1, a2, v76);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v76);
      }
      v152 = type metadata accessor for SystemResponse(0);
      v153 = *(int *)(v152 + 20);
      v154 = (char *)a1 + v153;
      v155 = (char *)a2 + v153;
      v156 = *((_QWORD *)v155 + 2);
      if (v156 == 1)
      {
        *(_OWORD *)v154 = *(_OWORD *)v155;
        *((_QWORD *)v154 + 2) = *((_QWORD *)v155 + 2);
      }
      else
      {
        *(_DWORD *)v154 = *(_DWORD *)v155;
        *((_QWORD *)v154 + 1) = *((_QWORD *)v155 + 1);
        *((_QWORD *)v154 + 2) = v156;
        swift_bridgeObjectRetain();
      }
      v157 = *(int *)(v152 + 24);
      v158 = (uint64_t *)((char *)a1 + v157);
      v159 = (id *)((char *)a2 + v157);
      v160 = v159[1];
      *v158 = *v159;
      v158[1] = v160;
      type metadata accessor for StatementOutcome(0);
      swift_bridgeObjectRetain();
      v161 = (char *)&loc_23F21D2A4 + 4 * word_23F279B9E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x1Cu:
      v79 = (uint64_t)a2[1];
      *a1 = (uint64_t)*a2;
      a1[1] = v79;
      v80 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
      v81 = *(int *)(v80 + 20);
      v82 = (char *)a1 + v81;
      v83 = (char *)a2 + v81;
      v84 = sub_23F267D84();
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v83, 1, v84))
      {
        v85 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v82, v83, v84);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v82, 0, 1, v84);
      }
      v162 = *(int *)(v80 + 24);
      v139 = (char *)a1 + v162;
      v140 = (char *)a2 + v162;
      v141 = *((_QWORD *)v140 + 1);
      if (v141)
        goto LABEL_102;
      *(_OWORD *)v139 = *(_OWORD *)v140;
      *((_QWORD *)v139 + 2) = *((_QWORD *)v140 + 2);
      goto LABEL_108;
    case 0x1Du:
      *a1 = (uint64_t)*a2;
      v86 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
      v87 = *(int *)(v86 + 20);
      v88 = (char *)a1 + v87;
      v89 = (char *)a2 + v87;
      v90 = sub_23F267D84();
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v89, 1, v90))
      {
        v91 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v88, v89, v90);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v88, 0, 1, v90);
      }
      v138 = *(int *)(v86 + 24);
      v139 = (char *)a1 + v138;
      v140 = (char *)a2 + v138;
      v141 = *((_QWORD *)v140 + 1);
      if (v141)
        goto LABEL_102;
      *(_OWORD *)v139 = *(_OWORD *)v140;
      *((_QWORD *)v139 + 2) = *((_QWORD *)v140 + 2);
      goto LABEL_108;
    case 0x1Eu:
      v92 = type metadata accessor for MessagePayload.RequestContent(0);
      v93 = swift_getEnumCaseMultiPayload();
      switch(v93)
      {
        case 3:
          v165 = sub_23F267D84();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v165))
          {
            v166 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(a1, a2, v165);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v165);
          }
          v212 = (int *)type metadata accessor for SystemPromptResolution(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 16))((char *)a1 + v212[5], (char *)a2 + v212[5], v165);
          v213 = v212[6];
          v214 = (char *)a1 + v213;
          v215 = (char *)a2 + v213;
          v216 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v217 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(v214, v215, v217);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v214, v215, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
          }
          v218 = v212[7];
          v219 = (char *)a1 + v218;
          v220 = (char *)a2 + v218;
          *(_DWORD *)v219 = *(_DWORD *)v220;
          v221 = *((_QWORD *)v220 + 2);
          *((_QWORD *)v219 + 1) = *((_QWORD *)v220 + 1);
          *((_QWORD *)v219 + 2) = v221;
          v222 = v212[8];
          v223 = (char *)a1 + v222;
          v224 = (char *)a2 + v222;
          v225 = *(_QWORD *)v224;
          v226 = *((_QWORD *)v224 + 1);
          v227 = v224[16];
          swift_bridgeObjectRetain();
          sub_23F135C7C(v225, v226, v227);
          *(_QWORD *)v223 = v225;
          *((_QWORD *)v223 + 1) = v226;
          v223[16] = v227;
          break;
        case 2:
          *a1 = (uint64_t)*a2;
          swift_bridgeObjectRetain();
          break;
        case 1:
          v94 = (uint64_t)a2[1];
          *a1 = (uint64_t)*a2;
          a1[1] = v94;
          swift_bridgeObjectRetain();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
          goto LABEL_98;
      }
      swift_storeEnumTagMultiPayload();
LABEL_98:
      v228 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
      v229 = *(int *)(v228 + 20);
      v230 = (char *)a1 + v229;
      v231 = (char *)a2 + v229;
      v232 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v231, 1, v232))
      {
        v233 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v230, v231, *(_QWORD *)(*(_QWORD *)(v233 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(v230, v231, v232);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v230, 0, 1, v232);
      }
      v234 = *(int *)(v228 + 24);
      v139 = (char *)a1 + v234;
      v140 = (char *)a2 + v234;
      v141 = *((_QWORD *)v140 + 1);
      if (v141)
      {
LABEL_102:
        *(_QWORD *)v139 = *(_QWORD *)v140;
        *((_QWORD *)v139 + 1) = v141;
        *((_QWORD *)v139 + 2) = *((_QWORD *)v140 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v139 = *(_OWORD *)v140;
        *((_QWORD *)v139 + 2) = *((_QWORD *)v140 + 2);
      }
LABEL_108:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x1Fu:
      type metadata accessor for StatementOutcome(0);
      v95 = (char *)&loc_23F21CBAC + 4 * word_23F279B88[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x22u:
      v97 = sub_23F267D84();
      (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
      v98 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
      *((_BYTE *)a1 + *(int *)(v98 + 20)) = *((_BYTE *)a2 + *(int *)(v98 + 20));
      v99 = *(int *)(v98 + 24);
      v100 = (char *)a1 + v99;
      v101 = (char *)a2 + v99;
      *(_DWORD *)v100 = *(_DWORD *)v101;
      v102 = *((_QWORD *)v101 + 2);
      *((_QWORD *)v100 + 1) = *((_QWORD *)v101 + 1);
      *((_QWORD *)v100 + 2) = v102;
      swift_bridgeObjectRetain();
      goto LABEL_108;
    case 0x23u:
      v103 = sub_23F267D84();
      (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(a1, a2, v103);
      v104 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
      v105 = (uint64_t *)((char *)a1 + v104);
      v106 = (id *)((char *)a2 + v104);
      v107 = v106[1];
      *v105 = *v106;
      v105[1] = v107;
      v105[2] = v106[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_108;
    case 0x24u:
      v108 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
        case 5u:
        case 7u:
        case 8u:
          v109 = sub_23F267D84();
          (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(a1, a2, v109);
          goto LABEL_107;
        case 2u:
          v167 = sub_23F267D84();
          v168 = *(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v167 - 8) + 16);
          v168(a1, a2, v167);
          v169 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
          *(uint64_t *)((char *)a1 + v169[5]) = *(uint64_t *)((char *)a2 + v169[5]);
          *(uint64_t *)((char *)a1 + v169[6]) = *(uint64_t *)((char *)a2 + v169[6]);
          v170 = v169[7];
          v171 = (char *)a1 + v170;
          v172 = (char *)a2 + v170;
          swift_bridgeObjectRetain();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v172, 1, v167))
          {
            v173 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
          }
          else
          {
            v168((uint64_t *)v171, (id *)v172, v167);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v171, 0, 1, v167);
          }
          v236 = v169[8];
          v237 = (uint64_t *)((char *)a1 + v236);
          v238 = (id *)((char *)a2 + v236);
          v239 = v238[1];
          *v237 = *v238;
          v237[1] = v239;
          *(uint64_t *)((char *)a1 + v169[9]) = *(uint64_t *)((char *)a2 + v169[9]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_107;
        case 4u:
          v174 = sub_23F267D84();
          (*(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(a1, a2, v174);
          v175 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
          *(uint64_t *)((char *)a1 + *(int *)(v175 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v175 + 20));
          swift_bridgeObjectRetain();
          goto LABEL_107;
        case 9u:
          v176 = sub_23F267D84();
          v177 = *(void (**)(uint64_t *, id *, uint64_t))(*(_QWORD *)(v176 - 8) + 16);
          v177(a1, a2, v176);
          v178 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
          v177((uint64_t *)((char *)a1 + *(int *)(v178 + 20)), (id *)((char *)a2 + *(int *)(v178 + 20)), v176);
          v179 = *(int *)(v178 + 24);
          v180 = (char *)a1 + v179;
          v181 = (char *)a2 + v179;
          v182 = *((_QWORD *)v181 + 1);
          if (v182 >> 60 == 15)
          {
            *(_OWORD *)v180 = *(_OWORD *)v181;
          }
          else
          {
            v235 = *(_QWORD *)v181;
            sub_23F131170(*(_QWORD *)v181, *((_QWORD *)v181 + 1));
            *(_QWORD *)v180 = v235;
            *((_QWORD *)v180 + 1) = v182;
          }
          goto LABEL_107;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
          break;
      }
      goto LABEL_108;
    case 0x25u:
      type metadata accessor for SessionServerDebuggerEvent.Payload(0);
      v110 = (char *)&loc_23F21CDE4 + 4 * word_23F279B58[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x26u:
      v111 = (uint64_t)*a2;
      v112 = (uint64_t)a2[1];
      v113 = (uint64_t)a2[2];
      v114 = (uint64_t)a2[3];
      v115 = (uint64_t)a2[4];
      v116 = (uint64_t)a2[5];
      v118 = (uint64_t)a2[6];
      v117 = (uint64_t)a2[7];
      sub_23F135CF4(v111, v112, v113, v114, v115, v116, v118);
      *a1 = v111;
      a1[1] = v112;
      a1[2] = v113;
      a1[3] = v114;
      a1[4] = v115;
      a1[5] = v116;
      a1[6] = v118;
      a1[7] = v117;
      goto LABEL_108;
    case 0x27u:
      v119 = (uint64_t)*a2;
      v120 = (uint64_t)a2[1];
      *a1 = v119;
      a1[1] = v120;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_108;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t *assignWithCopy for MessagePayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char v14;
  uint64_t v15;
  void (*v16)(uint64_t *, uint64_t *, uint64_t);
  int *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  void *v31;
  char v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  unsigned __int8 v108;
  uint64_t v109;
  char *v110;
  char *v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  __int128 v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  char *v129;
  uint64_t v130;
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t *, uint64_t *, uint64_t);
  int *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  unint64_t v151;
  int *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  unsigned __int8 v166;
  int *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  unsigned int v171;
  __int128 v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  __int128 v181;
  int *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  unsigned __int8 v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  __int128 v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  _QWORD *v208;
  uint64_t *result;

  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)a1, type metadata accessor for MessagePayload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = type metadata accessor for MessagePayload.RequestContent(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 3:
            v132 = sub_23F267D84();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v132))
            {
              v133 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v132);
            }
            v152 = (int *)type metadata accessor for SystemPromptResolution(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16))((char *)a1 + v152[5], (char *)a2 + v152[5], v132);
            v153 = v152[6];
            v154 = (char *)a1 + v153;
            v155 = (char *)a2 + v153;
            v156 = type metadata accessor for SystemPromptResolution.UserAction(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v157 = sub_23F268078();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v154, v155, v157);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
            }
            v158 = v152[7];
            v159 = (char *)a1 + v158;
            v160 = (char *)a2 + v158;
            *(_DWORD *)v159 = *(_DWORD *)v160;
            *((_QWORD *)v159 + 1) = *((_QWORD *)v160 + 1);
            *((_QWORD *)v159 + 2) = *((_QWORD *)v160 + 2);
            v161 = v152[8];
            v162 = (char *)a1 + v161;
            v163 = (char *)a2 + v161;
            v164 = *(_QWORD *)v163;
            v165 = *((_QWORD *)v163 + 1);
            v166 = v163[16];
            swift_bridgeObjectRetain();
            sub_23F135C7C(v164, v165, v166);
            *(_QWORD *)v162 = v164;
            *((_QWORD *)v162 + 1) = v165;
            v162[16] = v166;
            break;
          case 2:
            *a1 = *a2;
            swift_bridgeObjectRetain();
            break;
          case 1:
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
            goto LABEL_85;
        }
        swift_storeEnumTagMultiPayload();
LABEL_85:
        v167 = (int *)type metadata accessor for MessagePayload.Request(0);
        *(uint64_t *)((char *)a1 + v167[5]) = *(uint64_t *)((char *)a2 + v167[5]);
        *((_BYTE *)a1 + v167[6]) = *((_BYTE *)a2 + v167[6]);
        v168 = v167[7];
        v169 = (char *)a1 + v168;
        v170 = (char *)a2 + v168;
        v171 = *((unsigned __int8 *)a2 + v168 + 16);
        swift_bridgeObjectRetain();
        if (v171 <= 0xFD)
        {
          v173 = *(_QWORD *)v170;
          v174 = *((_QWORD *)v170 + 1);
          sub_23F135C9C(v173, v174, v171);
          *(_QWORD *)v169 = v173;
          *((_QWORD *)v169 + 1) = v174;
          v169[16] = v171;
        }
        else
        {
          v172 = *(_OWORD *)v170;
          v169[16] = v170[16];
          *(_OWORD *)v169 = v172;
        }
        v175 = v167[8];
        v176 = (char *)a1 + v175;
        v177 = (char *)a2 + v175;
        v178 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v177, 1, v178))
        {
          v179 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v176, v177, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v176, v177, v178);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v176, 0, 1, v178);
        }
        v180 = v167[9];
        v110 = (char *)a1 + v180;
        v111 = (char *)a2 + v180;
        if (*((_QWORD *)v111 + 1))
          goto LABEL_103;
        v181 = *(_OWORD *)v111;
        *((_QWORD *)v110 + 2) = *((_QWORD *)v111 + 2);
        *(_OWORD *)v110 = v181;
        goto LABEL_109;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        v8 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_23F268078();
        v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        v12(v9, v10, v11);
        goto LABEL_109;
      case 5u:
        v13 = *a2;
        v14 = *((_BYTE *)a2 + 8);
        sub_23F131158((id)*a2);
        *a1 = v13;
        *((_BYTE *)a1 + 8) = v14;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        goto LABEL_109;
      case 6u:
      case 9u:
      case 0x20u:
      case 0x21u:
      case 0x28u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_109;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_109;
      case 8u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_109;
      case 0xAu:
      case 0xBu:
      case 0x13u:
      case 0x18u:
      case 0x19u:
      case 0x1Bu:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_109;
      case 0xCu:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_109;
      case 0xDu:
        v15 = sub_23F267D84();
        v16 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        v16(a1, a2, v15);
        v17 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
        v16((uint64_t *)((char *)a1 + v17[5]), (uint64_t *)((char *)a2 + v17[5]), v15);
        v18 = v17[6];
        v19 = (uint64_t *)((char *)a1 + v18);
        v20 = (uint64_t *)((char *)a2 + v18);
        *v19 = *v20;
        v19[1] = v20[1];
        v21 = v17[7];
        v22 = (uint64_t *)((char *)a1 + v21);
        v23 = (uint64_t *)((char *)a2 + v21);
        *v22 = *v23;
        v22[1] = v23[1];
        v24 = v17[8];
        v25 = (uint64_t *)((char *)a1 + v24);
        v26 = (uint64_t *)((char *)a2 + v24);
        *v25 = *v26;
        v25[1] = v26[1];
        *(uint64_t *)((char *)a1 + v17[9]) = *(uint64_t *)((char *)a2 + v17[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_109;
      case 0xEu:
        v27 = sub_23F267D84();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
        v28 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v31 = *(void **)v30;
          v32 = v30[8];
          sub_23F131158(v31);
          *(_QWORD *)v29 = v31;
          v29[8] = v32;
        }
        else
        {
          v93 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v29, v30, v93);
        }
LABEL_108:
        swift_storeEnumTagMultiPayload();
        goto LABEL_109;
      case 0xFu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        *((_BYTE *)a1 + 72) = *((_BYTE *)a2 + 72);
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_109;
      case 0x10u:
        v33 = sub_23F267D84();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(a1, a2, v33);
        v34 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
        v35 = v34[5];
        v36 = (uint64_t *)((char *)a1 + v35);
        v37 = (uint64_t *)((char *)a2 + v35);
        *v36 = *v37;
        v36[1] = v37[1];
        *(uint64_t *)((char *)a1 + v34[6]) = *(uint64_t *)((char *)a2 + v34[6]);
        *(uint64_t *)((char *)a1 + v34[7]) = *(uint64_t *)((char *)a2 + v34[7]);
        v38 = v34[8];
        v39 = (uint64_t *)((char *)a1 + v38);
        v40 = (uint64_t *)((char *)a2 + v38);
        *v39 = *v40;
        v39[1] = v40[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_109;
      case 0x11u:
        v41 = sub_23F267D84();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(a1, a2, v41);
        type metadata accessor for MessagePayload.ClientActionResult(0);
        type metadata accessor for StatementOutcome(0);
        v42 = (char *)&loc_23F21F950 + 4 * word_23F279CB4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x12u:
        v43 = *a2;
        v44 = a2[1];
        sub_23F131170(*a2, v44);
        *a1 = v43;
        a1[1] = v44;
        v45 = a2[2];
        v46 = a2[3];
        sub_23F131170(v45, v46);
        a1[2] = v45;
        a1[3] = v46;
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        goto LABEL_109;
      case 0x14u:
        v47 = sub_23F267D84();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(a1, a2, v47);
        v48 = *(int *)(type metadata accessor for SystemPrompt(0) + 20);
        v49 = (uint64_t *)((char *)a1 + v48);
        v50 = (uint64_t *)((char *)a2 + v48);
        *v49 = *v50;
        v49[1] = v50[1];
        type metadata accessor for SystemPrompt.Prompt(0);
        swift_bridgeObjectRetain();
        v51 = (char *)&loc_23F21FACC + 4 * word_23F279CAC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x15u:
        v52 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v52))
        {
          v53 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(a1, a2, v52);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v52);
        }
        v94 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))((char *)a1 + v94[5], (char *)a2 + v94[5], v52);
        v95 = v94[6];
        v96 = (char *)a1 + v95;
        v97 = (char *)a2 + v95;
        v98 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v99 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v96, v97, v99);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
        }
        v100 = v94[7];
        v101 = (char *)a1 + v100;
        v102 = (char *)a2 + v100;
        *(_DWORD *)v101 = *(_DWORD *)v102;
        *((_QWORD *)v101 + 1) = *((_QWORD *)v102 + 1);
        *((_QWORD *)v101 + 2) = *((_QWORD *)v102 + 2);
        v103 = v94[8];
        v104 = (char *)a1 + v103;
        v105 = (char *)a2 + v103;
        v106 = *(_QWORD *)v105;
        v107 = *((_QWORD *)v105 + 1);
        v108 = v105[16];
        swift_bridgeObjectRetain();
        sub_23F135C7C(v106, v107, v108);
        *(_QWORD *)v104 = v106;
        *((_QWORD *)v104 + 1) = v107;
        v104[16] = v108;
        goto LABEL_109;
      case 0x16u:
        v54 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v54))
        {
          v55 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(a1, a2, v54);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v54);
        }
        v113 = type metadata accessor for ActionResponse(0);
        v114 = *(int *)(v113 + 20);
        v115 = (uint64_t *)((char *)a1 + v114);
        v116 = (uint64_t *)((char *)a2 + v114);
        *v115 = *v116;
        v115[1] = v116[1];
        v117 = *(int *)(v113 + 24);
        v118 = (uint64_t *)((char *)a1 + v117);
        v119 = (uint64_t *)((char *)a2 + v117);
        *v118 = *v119;
        v118[1] = v119[1];
        type metadata accessor for ActionOutcome(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v120 = (char *)&loc_23F220394 + 4 * word_23F279C96[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x17u:
        v56 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v56))
        {
          v57 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(a1, a2, v56);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v56);
        }
        v121 = type metadata accessor for SystemResponse(0);
        v122 = *(int *)(v121 + 20);
        v123 = (char *)a1 + v122;
        v124 = (char *)a2 + v122;
        if (*((_QWORD *)v124 + 2) == 1)
        {
          v125 = *(_OWORD *)v124;
          *((_QWORD *)v123 + 2) = *((_QWORD *)v124 + 2);
          *(_OWORD *)v123 = v125;
        }
        else
        {
          *(_DWORD *)v123 = *(_DWORD *)v124;
          *((_QWORD *)v123 + 1) = *((_QWORD *)v124 + 1);
          *((_QWORD *)v123 + 2) = *((_QWORD *)v124 + 2);
          swift_bridgeObjectRetain();
        }
        v126 = *(int *)(v121 + 24);
        v127 = (uint64_t *)((char *)a1 + v126);
        v128 = (uint64_t *)((char *)a2 + v126);
        *v127 = *v128;
        v127[1] = v128[1];
        type metadata accessor for StatementOutcome(0);
        swift_bridgeObjectRetain();
        v129 = (char *)&loc_23F2204F8 + 4 * word_23F279C80[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x1Cu:
        *a1 = *a2;
        a1[1] = a2[1];
        v58 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
        v59 = *(int *)(v58 + 20);
        v60 = (char *)a1 + v59;
        v61 = (char *)a2 + v59;
        v62 = sub_23F267D84();
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v61, 1, v62))
        {
          v63 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v60, 0, 1, v62);
        }
        v130 = *(int *)(v58 + 24);
        v110 = (char *)a1 + v130;
        v111 = (char *)a2 + v130;
        if (*((_QWORD *)v111 + 1))
          goto LABEL_103;
        v131 = *(_OWORD *)v111;
        *((_QWORD *)v110 + 2) = *((_QWORD *)v111 + 2);
        *(_OWORD *)v110 = v131;
        goto LABEL_109;
      case 0x1Du:
        *a1 = *a2;
        v64 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
        v65 = *(int *)(v64 + 20);
        v66 = (char *)a1 + v65;
        v67 = (char *)a2 + v65;
        v68 = sub_23F267D84();
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v67, 1, v68))
        {
          v69 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v66, 0, 1, v68);
        }
        v109 = *(int *)(v64 + 24);
        v110 = (char *)a1 + v109;
        v111 = (char *)a2 + v109;
        if (*((_QWORD *)v111 + 1))
          goto LABEL_103;
        v112 = *(_OWORD *)v111;
        *((_QWORD *)v110 + 2) = *((_QWORD *)v111 + 2);
        *(_OWORD *)v110 = v112;
        goto LABEL_109;
      case 0x1Eu:
        v70 = type metadata accessor for MessagePayload.RequestContent(0);
        v71 = swift_getEnumCaseMultiPayload();
        switch(v71)
        {
          case 3:
            v134 = sub_23F267D84();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v134))
            {
              v135 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v134);
            }
            v182 = (int *)type metadata accessor for SystemPromptResolution(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))((char *)a1 + v182[5], (char *)a2 + v182[5], v134);
            v183 = v182[6];
            v184 = (char *)a1 + v183;
            v185 = (char *)a2 + v183;
            v186 = type metadata accessor for SystemPromptResolution.UserAction(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v187 = sub_23F268078();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v184, v185, v187);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
            }
            v188 = v182[7];
            v189 = (char *)a1 + v188;
            v190 = (char *)a2 + v188;
            *(_DWORD *)v189 = *(_DWORD *)v190;
            *((_QWORD *)v189 + 1) = *((_QWORD *)v190 + 1);
            *((_QWORD *)v189 + 2) = *((_QWORD *)v190 + 2);
            v191 = v182[8];
            v192 = (char *)a1 + v191;
            v193 = (char *)a2 + v191;
            v194 = *(_QWORD *)v193;
            v195 = *((_QWORD *)v193 + 1);
            v196 = v193[16];
            swift_bridgeObjectRetain();
            sub_23F135C7C(v194, v195, v196);
            *(_QWORD *)v192 = v194;
            *((_QWORD *)v192 + 1) = v195;
            v192[16] = v196;
            break;
          case 2:
            *a1 = *a2;
            swift_bridgeObjectRetain();
            break;
          case 1:
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
            goto LABEL_99;
        }
        swift_storeEnumTagMultiPayload();
LABEL_99:
        v197 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
        v198 = *(int *)(v197 + 20);
        v199 = (char *)a1 + v198;
        v200 = (char *)a2 + v198;
        v201 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v200, 1, v201))
        {
          v202 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 16))(v199, v200, v201);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v199, 0, 1, v201);
        }
        v203 = *(int *)(v197 + 24);
        v110 = (char *)a1 + v203;
        v111 = (char *)a2 + v203;
        if (*((_QWORD *)v111 + 1))
        {
LABEL_103:
          *(_QWORD *)v110 = *(_QWORD *)v111;
          *((_QWORD *)v110 + 1) = *((_QWORD *)v111 + 1);
          *((_QWORD *)v110 + 2) = *((_QWORD *)v111 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v204 = *(_OWORD *)v111;
          *((_QWORD *)v110 + 2) = *((_QWORD *)v111 + 2);
          *(_OWORD *)v110 = v204;
        }
LABEL_109:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Fu:
        type metadata accessor for StatementOutcome(0);
        v72 = (char *)&loc_23F21FDA0 + 4 * word_23F279C6A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x22u:
        v73 = sub_23F267D84();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(a1, a2, v73);
        v74 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
        *((_BYTE *)a1 + *(int *)(v74 + 20)) = *((_BYTE *)a2 + *(int *)(v74 + 20));
        v75 = *(int *)(v74 + 24);
        v76 = (char *)a1 + v75;
        v77 = (char *)a2 + v75;
        *(_DWORD *)v76 = *(_DWORD *)v77;
        *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
        *((_QWORD *)v76 + 2) = *((_QWORD *)v77 + 2);
        swift_bridgeObjectRetain();
        goto LABEL_109;
      case 0x23u:
        v78 = sub_23F267D84();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(a1, a2, v78);
        v79 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
        v80 = (uint64_t *)((char *)a1 + v79);
        v81 = (uint64_t *)((char *)a2 + v79);
        *v80 = *v81;
        v80[1] = v81[1];
        v80[2] = v81[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_109;
      case 0x24u:
        v82 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
          case 5u:
          case 7u:
          case 8u:
            v83 = sub_23F267D84();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(a1, a2, v83);
            goto LABEL_108;
          case 2u:
            v136 = sub_23F267D84();
            v137 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v136 - 8) + 16);
            v137(a1, a2, v136);
            v138 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
            *(uint64_t *)((char *)a1 + v138[5]) = *(uint64_t *)((char *)a2 + v138[5]);
            *(uint64_t *)((char *)a1 + v138[6]) = *(uint64_t *)((char *)a2 + v138[6]);
            v139 = v138[7];
            v140 = (char *)a1 + v139;
            v141 = (char *)a2 + v139;
            swift_bridgeObjectRetain();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v141, 1, v136))
            {
              v142 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
            }
            else
            {
              v137((uint64_t *)v140, (uint64_t *)v141, v136);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v140, 0, 1, v136);
            }
            v206 = v138[8];
            v207 = (uint64_t *)((char *)a1 + v206);
            v208 = (uint64_t *)((char *)a2 + v206);
            *v207 = *v208;
            v207[1] = v208[1];
            *(uint64_t *)((char *)a1 + v138[9]) = *(uint64_t *)((char *)a2 + v138[9]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_108;
          case 4u:
            v143 = sub_23F267D84();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(a1, a2, v143);
            v144 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
            *(uint64_t *)((char *)a1 + *(int *)(v144 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v144 + 20));
            swift_bridgeObjectRetain();
            goto LABEL_108;
          case 9u:
            v145 = sub_23F267D84();
            v146 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v145 - 8) + 16);
            v146(a1, a2, v145);
            v147 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
            v146((uint64_t *)((char *)a1 + *(int *)(v147 + 20)), (uint64_t *)((char *)a2 + *(int *)(v147 + 20)), v145);
            v148 = *(int *)(v147 + 24);
            v149 = (char *)a1 + v148;
            v150 = (char *)a2 + v148;
            v151 = *((_QWORD *)v150 + 1);
            if (v151 >> 60 == 15)
            {
              *(_OWORD *)v149 = *(_OWORD *)v150;
            }
            else
            {
              v205 = *(_QWORD *)v150;
              sub_23F131170(*(_QWORD *)v150, *((_QWORD *)v150 + 1));
              *(_QWORD *)v149 = v205;
              *((_QWORD *)v149 + 1) = v151;
            }
            goto LABEL_108;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
            break;
        }
        goto LABEL_109;
      case 0x25u:
        type metadata accessor for SessionServerDebuggerEvent.Payload(0);
        v84 = (char *)&loc_23F21FFF8 + 4 * word_23F279C3A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x26u:
        v85 = *a2;
        v86 = a2[1];
        v87 = a2[2];
        v88 = a2[3];
        v89 = a2[4];
        v90 = a2[5];
        v92 = a2[6];
        v91 = a2[7];
        sub_23F135CF4(v85, v86, v87, v88, v89, v90, v92);
        *a1 = v85;
        a1[1] = v86;
        a1[2] = v87;
        a1[3] = v88;
        a1[4] = v89;
        a1[5] = v90;
        a1[6] = v92;
        a1[7] = v91;
        goto LABEL_109;
      case 0x27u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_109;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for MessagePayload(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_OWORD *, _OWORD *, uint64_t);
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int EnumCaseMultiPayload;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  int *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  int *v107;
  uint64_t v108;
  _BYTE *v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  int *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  int *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  int *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  int *v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  int *v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  int *v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  int *v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  void (*v255)(char *, char *, uint64_t);
  int *v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  void (*v264)(_OWORD *, _OWORD *, uint64_t);
  uint64_t v265;
  int *v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  int *v282;
  uint64_t v283;
  char *v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  _OWORD *v292;
  _OWORD *v293;
  __int128 v294;
  __int128 v295;
  uint64_t v296;
  _OWORD *v297;
  _OWORD *v298;
  __int128 v299;
  __int128 v300;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char *__dst;
  char *__dsta;
  char *__dstb;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = type metadata accessor for MessagePayload.RequestContent(0);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        v7 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
        {
          v8 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
        }
        v137 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))((char *)a1 + v137[5], (char *)a2 + v137[5], v7);
        v138 = v137[6];
        v139 = (char *)a1 + v138;
        v140 = (char *)a2 + v138;
        v141 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v142 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 32))(v139, v140, v142);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
        }
        v143 = v137[7];
        v144 = (char *)a1 + v143;
        v145 = (char *)a2 + v143;
        *(_OWORD *)v144 = *(_OWORD *)v145;
        *((_QWORD *)v144 + 2) = *((_QWORD *)v145 + 2);
        v146 = v137[8];
        v147 = (char *)a1 + v146;
        v148 = (char *)a2 + v146;
        v147[16] = v148[16];
        *(_OWORD *)v147 = *(_OWORD *)v148;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      v149 = (int *)type metadata accessor for MessagePayload.Request(0);
      *(_QWORD *)((char *)a1 + v149[5]) = *(_QWORD *)((char *)a2 + v149[5]);
      *((_BYTE *)a1 + v149[6]) = *((_BYTE *)a2 + v149[6]);
      v150 = v149[7];
      v151 = (char *)a1 + v150;
      v152 = (char *)a2 + v150;
      *(_OWORD *)v151 = *(_OWORD *)v152;
      v151[16] = v152[16];
      v153 = v149[8];
      v154 = (char *)a1 + v153;
      v155 = (char *)a2 + v153;
      v156 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v155, 1, v156))
      {
        v157 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(v154, v155, v156);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v154, 0, 1, v156);
      }
      v158 = v149[9];
      v159 = (char *)a1 + v158;
      v160 = (char *)a2 + v158;
      *(_OWORD *)v159 = *(_OWORD *)v160;
      *((_QWORD *)v159 + 2) = *((_QWORD *)v160 + 2);
      goto LABEL_138;
    case 4u:
      *a1 = *a2;
      v9 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      goto LABEL_138;
    case 0xDu:
      v13 = sub_23F267D84();
      v14 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
      v14(a1, a2, v13);
      v15 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
      v14((_OWORD *)((char *)a1 + v15[5]), (_OWORD *)((char *)a2 + v15[5]), v13);
      *(_OWORD *)((char *)a1 + v15[6]) = *(_OWORD *)((char *)a2 + v15[6]);
      *(_OWORD *)((char *)a1 + v15[7]) = *(_OWORD *)((char *)a2 + v15[7]);
      *(_OWORD *)((char *)a1 + v15[8]) = *(_OWORD *)((char *)a2 + v15[8]);
      *(_QWORD *)((char *)a1 + v15[9]) = *(_QWORD *)((char *)a2 + v15[9]);
      goto LABEL_138;
    case 0xEu:
      v16 = sub_23F267D84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
      v17 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v88 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v18, v19, v88);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_138;
    case 0x10u:
      v21 = sub_23F267D84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
      v22 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
      *(_OWORD *)((char *)a1 + v22[5]) = *(_OWORD *)((char *)a2 + v22[5]);
      *(_QWORD *)((char *)a1 + v22[6]) = *(_QWORD *)((char *)a2 + v22[6]);
      *(_QWORD *)((char *)a1 + v22[7]) = *(_QWORD *)((char *)a2 + v22[7]);
      *(_OWORD *)((char *)a1 + v22[8]) = *(_OWORD *)((char *)a2 + v22[8]);
      goto LABEL_138;
    case 0x11u:
      v23 = sub_23F267D84();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
      v24((char *)a1, (char *)a2, v23);
      v25 = type metadata accessor for MessagePayload.ClientActionResult(0);
      v26 = *(int *)(v25 + 20);
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      v29 = type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v30 = sub_23F268078();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v27, v28, v30);
          v31 = type metadata accessor for ActionSuccess(0);
          v32 = *(int *)(v31 + 20);
          v303 = v31;
          __dst = &v27[v32];
          v33 = &v28[v32];
          v302 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v33, 1, v302))
          {
            v34 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          }
          else
          {
            v24(__dst, v33, v23);
            *(_OWORD *)&__dst[*(int *)(v302 + 20)] = *(_OWORD *)&v33[*(int *)(v302 + 20)];
            *(_OWORD *)&__dst[*(int *)(v302 + 24)] = *(_OWORD *)&v33[*(int *)(v302 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v302);
          }
          v27[*(int *)(v303 + 24)] = v28[*(int *)(v303 + 24)];
          goto LABEL_115;
        case 3u:
          *(_OWORD *)v27 = *(_OWORD *)v28;
          v182 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v183 = &v27[v182];
          v184 = &v28[v182];
          v185 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v183, v184, v185);
          goto LABEL_115;
        case 4u:
          *(_OWORD *)v27 = *(_OWORD *)v28;
          *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
          v27[24] = v28[24];
          v186 = (int *)type metadata accessor for ParameterConfirmation(0);
          v187 = v186[6];
          v188 = &v27[v187];
          v189 = &v28[v187];
          v190 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v188, v189, v190);
          *(_OWORD *)&v27[v186[7]] = *(_OWORD *)&v28[v186[7]];
          *(_OWORD *)&v27[v186[8]] = *(_OWORD *)&v28[v186[8]];
          goto LABEL_115;
        case 6u:
          *(_OWORD *)v27 = *(_OWORD *)v28;
          v191 = type metadata accessor for ParameterNotAllowed(0);
          v192 = *(int *)(v191 + 20);
          v193 = &v27[v192];
          v194 = &v28[v192];
          v195 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v193, v194, v195);
          v27[*(int *)(v191 + 24)] = v28[*(int *)(v191 + 24)];
          goto LABEL_115;
        case 7u:
          *(_OWORD *)v27 = *(_OWORD *)v28;
          v196 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v197 = &v27[v196];
          v198 = &v28[v196];
          v199 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v197, v198, v199);
LABEL_115:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          break;
      }
      memcpy((char *)a1 + *(int *)(v25 + 24), (char *)a2 + *(int *)(v25 + 24), 0xBAuLL);
      goto LABEL_138;
    case 0x14u:
      v58 = sub_23F267D84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(a1, a2, v58);
      v59 = type metadata accessor for SystemPrompt(0);
      *(_OWORD *)((char *)a1 + *(int *)(v59 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v59 + 20));
      v60 = *(int *)(v59 + 24);
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      v63 = type metadata accessor for SystemPrompt.Prompt(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_OWORD *)v61 = *(_OWORD *)v62;
        *((_QWORD *)v61 + 2) = *((_QWORD *)v62 + 2);
        v61[24] = v62[24];
        v132 = (int *)type metadata accessor for ParameterConfirmation(0);
        v133 = v132[6];
        v134 = &v61[v133];
        v135 = &v62[v133];
        v136 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v134, v135, v136);
        *(_OWORD *)&v61[v132[7]] = *(_OWORD *)&v62[v132[7]];
        *(_OWORD *)&v61[v132[8]] = *(_OWORD *)&v62[v132[8]];
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          goto LABEL_138;
        }
        *(_OWORD *)v61 = *(_OWORD *)v62;
        v65 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        v66 = &v61[v65];
        v67 = &v62[v65];
        v68 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
      }
LABEL_137:
      swift_storeEnumTagMultiPayload();
LABEL_138:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x15u:
      v69 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v69))
      {
        v70 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v69);
      }
      v95 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))((char *)a1 + v95[5], (char *)a2 + v95[5], v69);
      v96 = v95[6];
      v97 = (char *)a1 + v96;
      v98 = (char *)a2 + v96;
      v99 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v100 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v97, v98, v100);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
      }
      v101 = v95[7];
      v102 = (char *)a1 + v101;
      v103 = (char *)a2 + v101;
      *(_OWORD *)v102 = *(_OWORD *)v103;
      *((_QWORD *)v102 + 2) = *((_QWORD *)v103 + 2);
      v104 = v95[8];
      v105 = (char *)a1 + v104;
      v106 = (char *)a2 + v104;
      v105[16] = v106[16];
      *(_OWORD *)v105 = *(_OWORD *)v106;
      goto LABEL_138;
    case 0x16u:
      v71 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v71))
      {
        v72 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v71);
      }
      v107 = (int *)type metadata accessor for ActionResponse(0);
      *(_OWORD *)((char *)a1 + v107[5]) = *(_OWORD *)((char *)a2 + v107[5]);
      *(_OWORD *)((char *)a1 + v107[6]) = *(_OWORD *)((char *)a2 + v107[6]);
      v108 = v107[7];
      v109 = (char *)a1 + v108;
      v110 = (char *)a2 + v108;
      v111 = type metadata accessor for ActionOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v112 = sub_23F268078();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v109, v110, v112);
          v113 = type metadata accessor for ActionSuccess(0);
          v114 = *(int *)(v113 + 20);
          v304 = v113;
          __dsta = &v109[v114];
          v115 = &v110[v114];
          v116 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v115, 1, v116))
          {
            v117 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(__dsta, v115, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(__dsta, v115, v71);
            *(_OWORD *)&__dsta[*(int *)(v116 + 20)] = *(_OWORD *)&v115[*(int *)(v116 + 20)];
            *(_OWORD *)&__dsta[*(int *)(v116 + 24)] = *(_OWORD *)&v115[*(int *)(v116 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v116);
          }
          v109[*(int *)(v304 + 24)] = v110[*(int *)(v304 + 24)];
          goto LABEL_123;
        case 3u:
          *(_OWORD *)v109 = *(_OWORD *)v110;
          v218 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v219 = &v109[v218];
          v220 = &v110[v218];
          v221 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v221 - 8) + 32))(v219, v220, v221);
          goto LABEL_123;
        case 4u:
          *(_OWORD *)v109 = *(_OWORD *)v110;
          *((_QWORD *)v109 + 2) = *((_QWORD *)v110 + 2);
          v109[24] = v110[24];
          v222 = (int *)type metadata accessor for ParameterConfirmation(0);
          v223 = v222[6];
          v224 = &v109[v223];
          v225 = &v110[v223];
          v226 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 32))(v224, v225, v226);
          *(_OWORD *)&v109[v222[7]] = *(_OWORD *)&v110[v222[7]];
          *(_OWORD *)&v109[v222[8]] = *(_OWORD *)&v110[v222[8]];
          goto LABEL_123;
        case 6u:
          *(_OWORD *)v109 = *(_OWORD *)v110;
          v227 = type metadata accessor for ParameterNotAllowed(0);
          v228 = *(int *)(v227 + 20);
          v229 = &v109[v228];
          v230 = &v110[v228];
          v231 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 32))(v229, v230, v231);
          v109[*(int *)(v227 + 24)] = v110[*(int *)(v227 + 24)];
          goto LABEL_123;
        case 7u:
          *(_OWORD *)v109 = *(_OWORD *)v110;
          v232 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v233 = &v109[v232];
          v234 = &v110[v232];
          v235 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 32))(v233, v234, v235);
LABEL_123:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
          break;
      }
      memcpy((char *)a1 + v107[8], (char *)a2 + v107[8], 0xBAuLL);
      v291 = v107[9];
      v292 = (_OWORD *)((char *)a1 + v291);
      v293 = (_OWORD *)((char *)a2 + v291);
      v294 = v293[1];
      *v292 = *v293;
      v292[1] = v294;
      v295 = v293[3];
      v292[2] = v293[2];
      v292[3] = v295;
      *(_OWORD *)((char *)a1 + v107[10]) = *(_OWORD *)((char *)a2 + v107[10]);
      goto LABEL_138;
    case 0x17u:
      v73 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v73))
      {
        v74 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(a1, a2, v73);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v73);
      }
      v118 = (int *)type metadata accessor for SystemResponse(0);
      v119 = v118[5];
      v120 = (char *)a1 + v119;
      v121 = (char *)a2 + v119;
      *(_OWORD *)v120 = *(_OWORD *)v121;
      *((_QWORD *)v120 + 2) = *((_QWORD *)v121 + 2);
      *(_OWORD *)((char *)a1 + v118[6]) = *(_OWORD *)((char *)a2 + v118[6]);
      v122 = v118[7];
      v123 = (char *)a1 + v122;
      v124 = (char *)a2 + v122;
      v125 = type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v126 = sub_23F268078();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v126 - 8) + 32))(v123, v124, v126);
          v127 = type metadata accessor for ActionSuccess(0);
          v128 = *(int *)(v127 + 20);
          v305 = v127;
          __dstb = &v123[v128];
          v129 = &v124[v128];
          v130 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v129, 1, v130))
          {
            v131 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(__dstb, v129, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(__dstb, v129, v73);
            *(_OWORD *)&__dstb[*(int *)(v130 + 20)] = *(_OWORD *)&v129[*(int *)(v130 + 20)];
            *(_OWORD *)&__dstb[*(int *)(v130 + 24)] = *(_OWORD *)&v129[*(int *)(v130 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dstb, 0, 1, v130);
          }
          v123[*(int *)(v305 + 24)] = v124[*(int *)(v305 + 24)];
          goto LABEL_127;
        case 3u:
          *(_OWORD *)v123 = *(_OWORD *)v124;
          v236 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v237 = &v123[v236];
          v238 = &v124[v236];
          v239 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v239 - 8) + 32))(v237, v238, v239);
          goto LABEL_127;
        case 4u:
          *(_OWORD *)v123 = *(_OWORD *)v124;
          *((_QWORD *)v123 + 2) = *((_QWORD *)v124 + 2);
          v123[24] = v124[24];
          v240 = (int *)type metadata accessor for ParameterConfirmation(0);
          v241 = v240[6];
          v242 = &v123[v241];
          v243 = &v124[v241];
          v244 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 32))(v242, v243, v244);
          *(_OWORD *)&v123[v240[7]] = *(_OWORD *)&v124[v240[7]];
          *(_OWORD *)&v123[v240[8]] = *(_OWORD *)&v124[v240[8]];
          goto LABEL_127;
        case 6u:
          *(_OWORD *)v123 = *(_OWORD *)v124;
          v245 = type metadata accessor for ParameterNotAllowed(0);
          v246 = *(int *)(v245 + 20);
          v247 = &v123[v246];
          v248 = &v124[v246];
          v249 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v249 - 8) + 32))(v247, v248, v249);
          v123[*(int *)(v245 + 24)] = v124[*(int *)(v245 + 24)];
          goto LABEL_127;
        case 7u:
          *(_OWORD *)v123 = *(_OWORD *)v124;
          v250 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v251 = &v123[v250];
          v252 = &v124[v250];
          v253 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v253 - 8) + 32))(v251, v252, v253);
LABEL_127:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
          break;
      }
      v296 = v118[8];
      v297 = (_OWORD *)((char *)a1 + v296);
      v298 = (_OWORD *)((char *)a2 + v296);
      v299 = v298[1];
      *v297 = *v298;
      v297[1] = v299;
      v300 = v298[3];
      v297[2] = v298[2];
      v297[3] = v300;
      *(_OWORD *)((char *)a1 + v118[9]) = *(_OWORD *)((char *)a2 + v118[9]);
      *(_QWORD *)((char *)a1 + v118[10]) = *(_QWORD *)((char *)a2 + v118[10]);
      goto LABEL_138;
    case 0x1Cu:
      *a1 = *a2;
      v35 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
      v36 = *(int *)(v35 + 20);
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v39 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v38, 1, v39))
      {
        v40 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v37, 0, 1, v39);
      }
      v89 = *(int *)(v35 + 24);
      v90 = (char *)a1 + v89;
      v91 = (char *)a2 + v89;
      *(_OWORD *)v90 = *(_OWORD *)v91;
      *((_QWORD *)v90 + 2) = *((_QWORD *)v91 + 2);
      goto LABEL_138;
    case 0x1Du:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v41 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
      v42 = *(int *)(v41 + 20);
      v43 = (char *)a1 + v42;
      v44 = (char *)a2 + v42;
      v45 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v44, 1, v45))
      {
        v46 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v43, 0, 1, v45);
      }
      v92 = *(int *)(v41 + 24);
      v93 = (char *)a1 + v92;
      v94 = (char *)a2 + v92;
      *(_OWORD *)v93 = *(_OWORD *)v94;
      *((_QWORD *)v93 + 2) = *((_QWORD *)v94 + 2);
      goto LABEL_138;
    case 0x1Eu:
      v47 = type metadata accessor for MessagePayload.RequestContent(0);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        v48 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v48))
        {
          v49 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(a1, a2, v48);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v48);
        }
        v161 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))((char *)a1 + v161[5], (char *)a2 + v161[5], v48);
        v162 = v161[6];
        v163 = (char *)a1 + v162;
        v164 = (char *)a2 + v162;
        v165 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v166 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v163, v164, v166);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
        }
        v167 = v161[7];
        v168 = (char *)a1 + v167;
        v169 = (char *)a2 + v167;
        *(_OWORD *)v168 = *(_OWORD *)v169;
        *((_QWORD *)v168 + 2) = *((_QWORD *)v169 + 2);
        v170 = v161[8];
        v171 = (char *)a1 + v170;
        v172 = (char *)a2 + v170;
        v171[16] = v172[16];
        *(_OWORD *)v171 = *(_OWORD *)v172;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      v173 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
      v174 = *(int *)(v173 + 20);
      v175 = (char *)a1 + v174;
      v176 = (char *)a2 + v174;
      v177 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v176, 1, v177))
      {
        v178 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v175, v176, v177);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v175, 0, 1, v177);
      }
      v179 = *(int *)(v173 + 24);
      v180 = (char *)a1 + v179;
      v181 = (char *)a2 + v179;
      *(_OWORD *)v180 = *(_OWORD *)v181;
      *((_QWORD *)v180 + 2) = *((_QWORD *)v181 + 2);
      goto LABEL_138;
    case 0x1Fu:
      v50 = type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v51 = sub_23F268078();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(a1, a2, v51);
          v52 = type metadata accessor for ActionSuccess(0);
          v53 = *(int *)(v52 + 20);
          v54 = (char *)a1 + v53;
          v55 = (char *)a2 + v53;
          v56 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v55, 1, v56))
          {
            v57 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
          }
          else
          {
            v289 = sub_23F267D84();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v289 - 8) + 32))(v54, v55, v289);
            *(_OWORD *)&v54[*(int *)(v56 + 20)] = *(_OWORD *)&v55[*(int *)(v56 + 20)];
            *(_OWORD *)&v54[*(int *)(v56 + 24)] = *(_OWORD *)&v55[*(int *)(v56 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v54, 0, 1, v56);
          }
          *((_BYTE *)a1 + *(int *)(v52 + 24)) = *((_BYTE *)a2 + *(int *)(v52 + 24));
          goto LABEL_119;
        case 3u:
          *a1 = *a2;
          v200 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v201 = (char *)a1 + v200;
          v202 = (char *)a2 + v200;
          v203 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v201, v202, v203);
          goto LABEL_119;
        case 4u:
          *a1 = *a2;
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
          v204 = (int *)type metadata accessor for ParameterConfirmation(0);
          v205 = v204[6];
          v206 = (char *)a1 + v205;
          v207 = (char *)a2 + v205;
          v208 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 32))(v206, v207, v208);
          *(_OWORD *)((char *)a1 + v204[7]) = *(_OWORD *)((char *)a2 + v204[7]);
          *(_OWORD *)((char *)a1 + v204[8]) = *(_OWORD *)((char *)a2 + v204[8]);
          goto LABEL_119;
        case 6u:
          *a1 = *a2;
          v209 = type metadata accessor for ParameterNotAllowed(0);
          v210 = *(int *)(v209 + 20);
          v211 = (char *)a1 + v210;
          v212 = (char *)a2 + v210;
          v213 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v213 - 8) + 32))(v211, v212, v213);
          *((_BYTE *)a1 + *(int *)(v209 + 24)) = *((_BYTE *)a2 + *(int *)(v209 + 24));
          goto LABEL_119;
        case 7u:
          *a1 = *a2;
          v214 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v215 = (char *)a1 + v214;
          v216 = (char *)a2 + v214;
          v217 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v217 - 8) + 32))(v215, v216, v217);
LABEL_119:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
          break;
      }
      v290 = type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
      *(_QWORD *)((char *)a1 + *(int *)(v290 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v290 + 20));
      goto LABEL_138;
    case 0x22u:
      v75 = sub_23F267D84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(a1, a2, v75);
      v76 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
      *((_BYTE *)a1 + *(int *)(v76 + 20)) = *((_BYTE *)a2 + *(int *)(v76 + 20));
      v77 = *(int *)(v76 + 24);
      v78 = (char *)a1 + v77;
      v79 = (char *)a2 + v77;
      *((_QWORD *)v78 + 2) = *((_QWORD *)v79 + 2);
      *(_OWORD *)v78 = *(_OWORD *)v79;
      goto LABEL_138;
    case 0x23u:
      v80 = sub_23F267D84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(a1, a2, v80);
      v81 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
      v82 = (char *)a1 + v81;
      v83 = (char *)a2 + v81;
      *(_OWORD *)v82 = *(_OWORD *)v83;
      *((_QWORD *)v82 + 2) = *((_QWORD *)v83 + 2);
      goto LABEL_138;
    case 0x24u:
      v84 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
        case 5u:
        case 7u:
        case 8u:
          v85 = sub_23F267D84();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(a1, a2, v85);
          goto LABEL_131;
        case 2u:
          v254 = sub_23F267D84();
          v255 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 32);
          v255((char *)a1, (char *)a2, v254);
          v256 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
          *(_QWORD *)((char *)a1 + v256[5]) = *(_QWORD *)((char *)a2 + v256[5]);
          *(_QWORD *)((char *)a1 + v256[6]) = *(_QWORD *)((char *)a2 + v256[6]);
          v257 = v256[7];
          v258 = (char *)a1 + v257;
          v259 = (char *)a2 + v257;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2 + v257, 1, v254))
          {
            v260 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v258, v259, *(_QWORD *)(*(_QWORD *)(v260 - 8) + 64));
          }
          else
          {
            v255(v258, v259, v254);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v258, 0, 1, v254);
          }
          *(_OWORD *)((char *)a1 + v256[8]) = *(_OWORD *)((char *)a2 + v256[8]);
          *(_QWORD *)((char *)a1 + v256[9]) = *(_QWORD *)((char *)a2 + v256[9]);
          goto LABEL_131;
        case 4u:
          v261 = sub_23F267D84();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v261 - 8) + 32))(a1, a2, v261);
          v262 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
          *(_QWORD *)((char *)a1 + *(int *)(v262 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v262 + 20));
          goto LABEL_131;
        case 9u:
          v263 = sub_23F267D84();
          v264 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v263 - 8) + 32);
          v264(a1, a2, v263);
          v265 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
          v264((_OWORD *)((char *)a1 + *(int *)(v265 + 20)), (_OWORD *)((char *)a2 + *(int *)(v265 + 20)), v263);
          *(_OWORD *)((char *)a1 + *(int *)(v265 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v265 + 24));
LABEL_131:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          break;
      }
      goto LABEL_138;
    case 0x25u:
      v86 = type metadata accessor for SessionServerDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 7u:
        case 8u:
        case 0xAu:
          v87 = sub_23F267D84();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(a1, a2, v87);
          goto LABEL_137;
        case 1u:
          *a1 = *a2;
          v266 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
          v267 = v266[6];
          v268 = (char *)a1 + v267;
          v269 = (char *)a2 + v267;
          v270 = sub_23F267D84();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v269, 1, v270))
          {
            v271 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v271 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v270 - 8) + 32))(v268, v269, v270);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v268, 0, 1, v270);
          }
          *(_OWORD *)((char *)a1 + v266[7]) = *(_OWORD *)((char *)a2 + v266[7]);
          *(_QWORD *)((char *)a1 + v266[8]) = *(_QWORD *)((char *)a2 + v266[8]);
          goto LABEL_137;
        case 5u:
          *a1 = *a2;
          v272 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
          v273 = *(int *)(v272 + 24);
          v274 = (char *)a1 + v273;
          v275 = (char *)a2 + v273;
          v276 = sub_23F267D84();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v275, 1, v276))
          {
            v277 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v274, v275, *(_QWORD *)(*(_QWORD *)(v277 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v276 - 8) + 32))(v274, v275, v276);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v274, 0, 1, v276);
          }
          *(_QWORD *)((char *)a1 + *(int *)(v272 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v272 + 28));
          goto LABEL_137;
        case 6u:
          v278 = sub_23F267D84();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v278 - 8) + 32))(a1, a2, v278);
          v279 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
          *(_QWORD *)((char *)a1 + *(int *)(v279 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v279 + 20));
          goto LABEL_137;
        case 9u:
          v280 = sub_23F267D84();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v280 - 8) + 32))(a1, a2, v280);
          v281 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
          *((_BYTE *)a1 + *(int *)(v281 + 20)) = *((_BYTE *)a2 + *(int *)(v281 + 20));
          goto LABEL_137;
        case 0xBu:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
          *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
          *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
          v282 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
          v283 = v282[8];
          v284 = (char *)a1 + v283;
          v285 = (char *)a2 + v283;
          v286 = sub_23F267D84();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v286 - 8) + 32))(v284, v285, v286);
          *(_OWORD *)((char *)a1 + v282[9]) = *(_OWORD *)((char *)a2 + v282[9]);
          *(_OWORD *)((char *)a1 + v282[10]) = *(_OWORD *)((char *)a2 + v282[10]);
          *(_OWORD *)((char *)a1 + v282[11]) = *(_OWORD *)((char *)a2 + v282[11]);
          goto LABEL_137;
        case 0xCu:
          v287 = sub_23F267D84();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v287 - 8) + 32))(a1, a2, v287);
          v288 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
          *((_BYTE *)a1 + *(int *)(v288 + 20)) = *((_BYTE *)a2 + *(int *)(v288 + 20));
          goto LABEL_137;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
          break;
      }
      goto LABEL_138;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

_OWORD *assignWithTake for MessagePayload(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_OWORD *, _OWORD *, uint64_t);
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int EnumCaseMultiPayload;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  int *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  int *v107;
  uint64_t v108;
  _BYTE *v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  int *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  int *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  int *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  int *v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  int *v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  int *v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  int *v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  void (*v255)(char *, char *, uint64_t);
  int *v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  void (*v264)(_OWORD *, _OWORD *, uint64_t);
  uint64_t v265;
  int *v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  int *v282;
  uint64_t v283;
  char *v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  _OWORD *v292;
  _OWORD *v293;
  __int128 v294;
  __int128 v295;
  uint64_t v296;
  _OWORD *v297;
  _OWORD *v298;
  __int128 v299;
  __int128 v300;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char *__dst;
  char *__dsta;
  char *__dstb;

  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)a1, type metadata accessor for MessagePayload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = type metadata accessor for MessagePayload.RequestContent(0);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          v7 = sub_23F267D84();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
          {
            v8 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          }
          else
          {
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
          }
          v137 = (int *)type metadata accessor for SystemPromptResolution(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))((char *)a1 + v137[5], (char *)a2 + v137[5], v7);
          v138 = v137[6];
          v139 = (char *)a1 + v138;
          v140 = (char *)a2 + v138;
          v141 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v142 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 32))(v139, v140, v142);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
          }
          v143 = v137[7];
          v144 = (char *)a1 + v143;
          v145 = (char *)a2 + v143;
          *(_OWORD *)v144 = *(_OWORD *)v145;
          *((_QWORD *)v144 + 2) = *((_QWORD *)v145 + 2);
          v146 = v137[8];
          v147 = (char *)a1 + v146;
          v148 = (char *)a2 + v146;
          v147[16] = v148[16];
          *(_OWORD *)v147 = *(_OWORD *)v148;
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        }
        v149 = (int *)type metadata accessor for MessagePayload.Request(0);
        *(_QWORD *)((char *)a1 + v149[5]) = *(_QWORD *)((char *)a2 + v149[5]);
        *((_BYTE *)a1 + v149[6]) = *((_BYTE *)a2 + v149[6]);
        v150 = v149[7];
        v151 = (char *)a1 + v150;
        v152 = (char *)a2 + v150;
        *(_OWORD *)v151 = *(_OWORD *)v152;
        v151[16] = v152[16];
        v153 = v149[8];
        v154 = (char *)a1 + v153;
        v155 = (char *)a2 + v153;
        v156 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v155, 1, v156))
        {
          v157 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(v154, v155, v156);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v154, 0, 1, v156);
        }
        v158 = v149[9];
        v159 = (char *)a1 + v158;
        v160 = (char *)a2 + v158;
        *(_OWORD *)v159 = *(_OWORD *)v160;
        *((_QWORD *)v159 + 2) = *((_QWORD *)v160 + 2);
        goto LABEL_139;
      case 4u:
        *a1 = *a2;
        v9 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
        goto LABEL_139;
      case 0xDu:
        v13 = sub_23F267D84();
        v14 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
        v14(a1, a2, v13);
        v15 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
        v14((_OWORD *)((char *)a1 + v15[5]), (_OWORD *)((char *)a2 + v15[5]), v13);
        *(_OWORD *)((char *)a1 + v15[6]) = *(_OWORD *)((char *)a2 + v15[6]);
        *(_OWORD *)((char *)a1 + v15[7]) = *(_OWORD *)((char *)a2 + v15[7]);
        *(_OWORD *)((char *)a1 + v15[8]) = *(_OWORD *)((char *)a2 + v15[8]);
        *(_QWORD *)((char *)a1 + v15[9]) = *(_QWORD *)((char *)a2 + v15[9]);
        goto LABEL_139;
      case 0xEu:
        v16 = sub_23F267D84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
        v17 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          v88 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v18, v19, v88);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_139;
      case 0x10u:
        v21 = sub_23F267D84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
        v22 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
        *(_OWORD *)((char *)a1 + v22[5]) = *(_OWORD *)((char *)a2 + v22[5]);
        *(_QWORD *)((char *)a1 + v22[6]) = *(_QWORD *)((char *)a2 + v22[6]);
        *(_QWORD *)((char *)a1 + v22[7]) = *(_QWORD *)((char *)a2 + v22[7]);
        *(_OWORD *)((char *)a1 + v22[8]) = *(_OWORD *)((char *)a2 + v22[8]);
        goto LABEL_139;
      case 0x11u:
        v23 = sub_23F267D84();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
        v24((char *)a1, (char *)a2, v23);
        v25 = type metadata accessor for MessagePayload.ClientActionResult(0);
        v26 = *(int *)(v25 + 20);
        v27 = (char *)a1 + v26;
        v28 = (char *)a2 + v26;
        v29 = type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v30 = sub_23F268078();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v27, v28, v30);
            v31 = type metadata accessor for ActionSuccess(0);
            v32 = *(int *)(v31 + 20);
            v303 = v31;
            __dst = &v27[v32];
            v33 = &v28[v32];
            v302 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v33, 1, v302))
            {
              v34 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
            }
            else
            {
              v24(__dst, v33, v23);
              *(_OWORD *)&__dst[*(int *)(v302 + 20)] = *(_OWORD *)&v33[*(int *)(v302 + 20)];
              *(_OWORD *)&__dst[*(int *)(v302 + 24)] = *(_OWORD *)&v33[*(int *)(v302 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v302);
            }
            v27[*(int *)(v303 + 24)] = v28[*(int *)(v303 + 24)];
            goto LABEL_116;
          case 3u:
            *(_OWORD *)v27 = *(_OWORD *)v28;
            v182 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v183 = &v27[v182];
            v184 = &v28[v182];
            v185 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v183, v184, v185);
            goto LABEL_116;
          case 4u:
            *(_OWORD *)v27 = *(_OWORD *)v28;
            *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
            v27[24] = v28[24];
            v186 = (int *)type metadata accessor for ParameterConfirmation(0);
            v187 = v186[6];
            v188 = &v27[v187];
            v189 = &v28[v187];
            v190 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v188, v189, v190);
            *(_OWORD *)&v27[v186[7]] = *(_OWORD *)&v28[v186[7]];
            *(_OWORD *)&v27[v186[8]] = *(_OWORD *)&v28[v186[8]];
            goto LABEL_116;
          case 6u:
            *(_OWORD *)v27 = *(_OWORD *)v28;
            v191 = type metadata accessor for ParameterNotAllowed(0);
            v192 = *(int *)(v191 + 20);
            v193 = &v27[v192];
            v194 = &v28[v192];
            v195 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v193, v194, v195);
            v27[*(int *)(v191 + 24)] = v28[*(int *)(v191 + 24)];
            goto LABEL_116;
          case 7u:
            *(_OWORD *)v27 = *(_OWORD *)v28;
            v196 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v197 = &v27[v196];
            v198 = &v28[v196];
            v199 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v197, v198, v199);
LABEL_116:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
            break;
        }
        memcpy((char *)a1 + *(int *)(v25 + 24), (char *)a2 + *(int *)(v25 + 24), 0xBAuLL);
        goto LABEL_139;
      case 0x14u:
        v58 = sub_23F267D84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(a1, a2, v58);
        v59 = type metadata accessor for SystemPrompt(0);
        *(_OWORD *)((char *)a1 + *(int *)(v59 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v59 + 20));
        v60 = *(int *)(v59 + 24);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = type metadata accessor for SystemPrompt.Prompt(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *(_OWORD *)v61 = *(_OWORD *)v62;
          *((_QWORD *)v61 + 2) = *((_QWORD *)v62 + 2);
          v61[24] = v62[24];
          v132 = (int *)type metadata accessor for ParameterConfirmation(0);
          v133 = v132[6];
          v134 = &v61[v133];
          v135 = &v62[v133];
          v136 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v134, v135, v136);
          *(_OWORD *)&v61[v132[7]] = *(_OWORD *)&v62[v132[7]];
          *(_OWORD *)&v61[v132[8]] = *(_OWORD *)&v62[v132[8]];
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
            goto LABEL_139;
          }
          *(_OWORD *)v61 = *(_OWORD *)v62;
          v65 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v66 = &v61[v65];
          v67 = &v62[v65];
          v68 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
        }
LABEL_138:
        swift_storeEnumTagMultiPayload();
LABEL_139:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x15u:
        v69 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v69))
        {
          v70 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v69);
        }
        v95 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))((char *)a1 + v95[5], (char *)a2 + v95[5], v69);
        v96 = v95[6];
        v97 = (char *)a1 + v96;
        v98 = (char *)a2 + v96;
        v99 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v100 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v97, v98, v100);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
        }
        v101 = v95[7];
        v102 = (char *)a1 + v101;
        v103 = (char *)a2 + v101;
        *(_OWORD *)v102 = *(_OWORD *)v103;
        *((_QWORD *)v102 + 2) = *((_QWORD *)v103 + 2);
        v104 = v95[8];
        v105 = (char *)a1 + v104;
        v106 = (char *)a2 + v104;
        v105[16] = v106[16];
        *(_OWORD *)v105 = *(_OWORD *)v106;
        goto LABEL_139;
      case 0x16u:
        v71 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v71))
        {
          v72 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v71);
        }
        v107 = (int *)type metadata accessor for ActionResponse(0);
        *(_OWORD *)((char *)a1 + v107[5]) = *(_OWORD *)((char *)a2 + v107[5]);
        *(_OWORD *)((char *)a1 + v107[6]) = *(_OWORD *)((char *)a2 + v107[6]);
        v108 = v107[7];
        v109 = (char *)a1 + v108;
        v110 = (char *)a2 + v108;
        v111 = type metadata accessor for ActionOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v112 = sub_23F268078();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v109, v110, v112);
            v113 = type metadata accessor for ActionSuccess(0);
            v114 = *(int *)(v113 + 20);
            v304 = v113;
            __dsta = &v109[v114];
            v115 = &v110[v114];
            v116 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v115, 1, v116))
            {
              v117 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(__dsta, v115, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(__dsta, v115, v71);
              *(_OWORD *)&__dsta[*(int *)(v116 + 20)] = *(_OWORD *)&v115[*(int *)(v116 + 20)];
              *(_OWORD *)&__dsta[*(int *)(v116 + 24)] = *(_OWORD *)&v115[*(int *)(v116 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v116);
            }
            v109[*(int *)(v304 + 24)] = v110[*(int *)(v304 + 24)];
            goto LABEL_124;
          case 3u:
            *(_OWORD *)v109 = *(_OWORD *)v110;
            v218 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v219 = &v109[v218];
            v220 = &v110[v218];
            v221 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v221 - 8) + 32))(v219, v220, v221);
            goto LABEL_124;
          case 4u:
            *(_OWORD *)v109 = *(_OWORD *)v110;
            *((_QWORD *)v109 + 2) = *((_QWORD *)v110 + 2);
            v109[24] = v110[24];
            v222 = (int *)type metadata accessor for ParameterConfirmation(0);
            v223 = v222[6];
            v224 = &v109[v223];
            v225 = &v110[v223];
            v226 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 32))(v224, v225, v226);
            *(_OWORD *)&v109[v222[7]] = *(_OWORD *)&v110[v222[7]];
            *(_OWORD *)&v109[v222[8]] = *(_OWORD *)&v110[v222[8]];
            goto LABEL_124;
          case 6u:
            *(_OWORD *)v109 = *(_OWORD *)v110;
            v227 = type metadata accessor for ParameterNotAllowed(0);
            v228 = *(int *)(v227 + 20);
            v229 = &v109[v228];
            v230 = &v110[v228];
            v231 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 32))(v229, v230, v231);
            v109[*(int *)(v227 + 24)] = v110[*(int *)(v227 + 24)];
            goto LABEL_124;
          case 7u:
            *(_OWORD *)v109 = *(_OWORD *)v110;
            v232 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v233 = &v109[v232];
            v234 = &v110[v232];
            v235 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 32))(v233, v234, v235);
LABEL_124:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
            break;
        }
        memcpy((char *)a1 + v107[8], (char *)a2 + v107[8], 0xBAuLL);
        v291 = v107[9];
        v292 = (_OWORD *)((char *)a1 + v291);
        v293 = (_OWORD *)((char *)a2 + v291);
        v294 = v293[1];
        *v292 = *v293;
        v292[1] = v294;
        v295 = v293[3];
        v292[2] = v293[2];
        v292[3] = v295;
        *(_OWORD *)((char *)a1 + v107[10]) = *(_OWORD *)((char *)a2 + v107[10]);
        goto LABEL_139;
      case 0x17u:
        v73 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v73))
        {
          v74 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(a1, a2, v73);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v73);
        }
        v118 = (int *)type metadata accessor for SystemResponse(0);
        v119 = v118[5];
        v120 = (char *)a1 + v119;
        v121 = (char *)a2 + v119;
        *(_OWORD *)v120 = *(_OWORD *)v121;
        *((_QWORD *)v120 + 2) = *((_QWORD *)v121 + 2);
        *(_OWORD *)((char *)a1 + v118[6]) = *(_OWORD *)((char *)a2 + v118[6]);
        v122 = v118[7];
        v123 = (char *)a1 + v122;
        v124 = (char *)a2 + v122;
        v125 = type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v126 = sub_23F268078();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v126 - 8) + 32))(v123, v124, v126);
            v127 = type metadata accessor for ActionSuccess(0);
            v128 = *(int *)(v127 + 20);
            v305 = v127;
            __dstb = &v123[v128];
            v129 = &v124[v128];
            v130 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v129, 1, v130))
            {
              v131 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(__dstb, v129, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(__dstb, v129, v73);
              *(_OWORD *)&__dstb[*(int *)(v130 + 20)] = *(_OWORD *)&v129[*(int *)(v130 + 20)];
              *(_OWORD *)&__dstb[*(int *)(v130 + 24)] = *(_OWORD *)&v129[*(int *)(v130 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dstb, 0, 1, v130);
            }
            v123[*(int *)(v305 + 24)] = v124[*(int *)(v305 + 24)];
            goto LABEL_128;
          case 3u:
            *(_OWORD *)v123 = *(_OWORD *)v124;
            v236 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v237 = &v123[v236];
            v238 = &v124[v236];
            v239 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v239 - 8) + 32))(v237, v238, v239);
            goto LABEL_128;
          case 4u:
            *(_OWORD *)v123 = *(_OWORD *)v124;
            *((_QWORD *)v123 + 2) = *((_QWORD *)v124 + 2);
            v123[24] = v124[24];
            v240 = (int *)type metadata accessor for ParameterConfirmation(0);
            v241 = v240[6];
            v242 = &v123[v241];
            v243 = &v124[v241];
            v244 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 32))(v242, v243, v244);
            *(_OWORD *)&v123[v240[7]] = *(_OWORD *)&v124[v240[7]];
            *(_OWORD *)&v123[v240[8]] = *(_OWORD *)&v124[v240[8]];
            goto LABEL_128;
          case 6u:
            *(_OWORD *)v123 = *(_OWORD *)v124;
            v245 = type metadata accessor for ParameterNotAllowed(0);
            v246 = *(int *)(v245 + 20);
            v247 = &v123[v246];
            v248 = &v124[v246];
            v249 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v249 - 8) + 32))(v247, v248, v249);
            v123[*(int *)(v245 + 24)] = v124[*(int *)(v245 + 24)];
            goto LABEL_128;
          case 7u:
            *(_OWORD *)v123 = *(_OWORD *)v124;
            v250 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v251 = &v123[v250];
            v252 = &v124[v250];
            v253 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v253 - 8) + 32))(v251, v252, v253);
LABEL_128:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
            break;
        }
        v296 = v118[8];
        v297 = (_OWORD *)((char *)a1 + v296);
        v298 = (_OWORD *)((char *)a2 + v296);
        v299 = v298[1];
        *v297 = *v298;
        v297[1] = v299;
        v300 = v298[3];
        v297[2] = v298[2];
        v297[3] = v300;
        *(_OWORD *)((char *)a1 + v118[9]) = *(_OWORD *)((char *)a2 + v118[9]);
        *(_QWORD *)((char *)a1 + v118[10]) = *(_QWORD *)((char *)a2 + v118[10]);
        goto LABEL_139;
      case 0x1Cu:
        *a1 = *a2;
        v35 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
        v36 = *(int *)(v35 + 20);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v38, 1, v39))
        {
          v40 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v37, 0, 1, v39);
        }
        v89 = *(int *)(v35 + 24);
        v90 = (char *)a1 + v89;
        v91 = (char *)a2 + v89;
        *(_OWORD *)v90 = *(_OWORD *)v91;
        *((_QWORD *)v90 + 2) = *((_QWORD *)v91 + 2);
        goto LABEL_139;
      case 0x1Du:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v41 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
        v42 = *(int *)(v41 + 20);
        v43 = (char *)a1 + v42;
        v44 = (char *)a2 + v42;
        v45 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v44, 1, v45))
        {
          v46 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v43, 0, 1, v45);
        }
        v92 = *(int *)(v41 + 24);
        v93 = (char *)a1 + v92;
        v94 = (char *)a2 + v92;
        *(_OWORD *)v93 = *(_OWORD *)v94;
        *((_QWORD *)v93 + 2) = *((_QWORD *)v94 + 2);
        goto LABEL_139;
      case 0x1Eu:
        v47 = type metadata accessor for MessagePayload.RequestContent(0);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          v48 = sub_23F267D84();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v48))
          {
            v49 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          }
          else
          {
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(a1, a2, v48);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v48);
          }
          v161 = (int *)type metadata accessor for SystemPromptResolution(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))((char *)a1 + v161[5], (char *)a2 + v161[5], v48);
          v162 = v161[6];
          v163 = (char *)a1 + v162;
          v164 = (char *)a2 + v162;
          v165 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v166 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v163, v164, v166);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
          }
          v167 = v161[7];
          v168 = (char *)a1 + v167;
          v169 = (char *)a2 + v167;
          *(_OWORD *)v168 = *(_OWORD *)v169;
          *((_QWORD *)v168 + 2) = *((_QWORD *)v169 + 2);
          v170 = v161[8];
          v171 = (char *)a1 + v170;
          v172 = (char *)a2 + v170;
          v171[16] = v172[16];
          *(_OWORD *)v171 = *(_OWORD *)v172;
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        v173 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
        v174 = *(int *)(v173 + 20);
        v175 = (char *)a1 + v174;
        v176 = (char *)a2 + v174;
        v177 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v176, 1, v177))
        {
          v178 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v175, v176, v177);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v175, 0, 1, v177);
        }
        v179 = *(int *)(v173 + 24);
        v180 = (char *)a1 + v179;
        v181 = (char *)a2 + v179;
        *(_OWORD *)v180 = *(_OWORD *)v181;
        *((_QWORD *)v180 + 2) = *((_QWORD *)v181 + 2);
        goto LABEL_139;
      case 0x1Fu:
        v50 = type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v51 = sub_23F268078();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(a1, a2, v51);
            v52 = type metadata accessor for ActionSuccess(0);
            v53 = *(int *)(v52 + 20);
            v54 = (char *)a1 + v53;
            v55 = (char *)a2 + v53;
            v56 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v55, 1, v56))
            {
              v57 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
            }
            else
            {
              v289 = sub_23F267D84();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v289 - 8) + 32))(v54, v55, v289);
              *(_OWORD *)&v54[*(int *)(v56 + 20)] = *(_OWORD *)&v55[*(int *)(v56 + 20)];
              *(_OWORD *)&v54[*(int *)(v56 + 24)] = *(_OWORD *)&v55[*(int *)(v56 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v54, 0, 1, v56);
            }
            *((_BYTE *)a1 + *(int *)(v52 + 24)) = *((_BYTE *)a2 + *(int *)(v52 + 24));
            goto LABEL_120;
          case 3u:
            *a1 = *a2;
            v200 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v201 = (char *)a1 + v200;
            v202 = (char *)a2 + v200;
            v203 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v201, v202, v203);
            goto LABEL_120;
          case 4u:
            *a1 = *a2;
            *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
            *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
            v204 = (int *)type metadata accessor for ParameterConfirmation(0);
            v205 = v204[6];
            v206 = (char *)a1 + v205;
            v207 = (char *)a2 + v205;
            v208 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 32))(v206, v207, v208);
            *(_OWORD *)((char *)a1 + v204[7]) = *(_OWORD *)((char *)a2 + v204[7]);
            *(_OWORD *)((char *)a1 + v204[8]) = *(_OWORD *)((char *)a2 + v204[8]);
            goto LABEL_120;
          case 6u:
            *a1 = *a2;
            v209 = type metadata accessor for ParameterNotAllowed(0);
            v210 = *(int *)(v209 + 20);
            v211 = (char *)a1 + v210;
            v212 = (char *)a2 + v210;
            v213 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v213 - 8) + 32))(v211, v212, v213);
            *((_BYTE *)a1 + *(int *)(v209 + 24)) = *((_BYTE *)a2 + *(int *)(v209 + 24));
            goto LABEL_120;
          case 7u:
            *a1 = *a2;
            v214 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v215 = (char *)a1 + v214;
            v216 = (char *)a2 + v214;
            v217 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v217 - 8) + 32))(v215, v216, v217);
LABEL_120:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
            break;
        }
        v290 = type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
        *(_QWORD *)((char *)a1 + *(int *)(v290 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v290 + 20));
        goto LABEL_139;
      case 0x22u:
        v75 = sub_23F267D84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(a1, a2, v75);
        v76 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
        *((_BYTE *)a1 + *(int *)(v76 + 20)) = *((_BYTE *)a2 + *(int *)(v76 + 20));
        v77 = *(int *)(v76 + 24);
        v78 = (char *)a1 + v77;
        v79 = (char *)a2 + v77;
        *((_QWORD *)v78 + 2) = *((_QWORD *)v79 + 2);
        *(_OWORD *)v78 = *(_OWORD *)v79;
        goto LABEL_139;
      case 0x23u:
        v80 = sub_23F267D84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(a1, a2, v80);
        v81 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
        v82 = (char *)a1 + v81;
        v83 = (char *)a2 + v81;
        *(_OWORD *)v82 = *(_OWORD *)v83;
        *((_QWORD *)v82 + 2) = *((_QWORD *)v83 + 2);
        goto LABEL_139;
      case 0x24u:
        v84 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
          case 5u:
          case 7u:
          case 8u:
            v85 = sub_23F267D84();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(a1, a2, v85);
            goto LABEL_132;
          case 2u:
            v254 = sub_23F267D84();
            v255 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 32);
            v255((char *)a1, (char *)a2, v254);
            v256 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
            *(_QWORD *)((char *)a1 + v256[5]) = *(_QWORD *)((char *)a2 + v256[5]);
            *(_QWORD *)((char *)a1 + v256[6]) = *(_QWORD *)((char *)a2 + v256[6]);
            v257 = v256[7];
            v258 = (char *)a1 + v257;
            v259 = (char *)a2 + v257;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2 + v257, 1, v254))
            {
              v260 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v258, v259, *(_QWORD *)(*(_QWORD *)(v260 - 8) + 64));
            }
            else
            {
              v255(v258, v259, v254);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v258, 0, 1, v254);
            }
            *(_OWORD *)((char *)a1 + v256[8]) = *(_OWORD *)((char *)a2 + v256[8]);
            *(_QWORD *)((char *)a1 + v256[9]) = *(_QWORD *)((char *)a2 + v256[9]);
            goto LABEL_132;
          case 4u:
            v261 = sub_23F267D84();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v261 - 8) + 32))(a1, a2, v261);
            v262 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
            *(_QWORD *)((char *)a1 + *(int *)(v262 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v262 + 20));
            goto LABEL_132;
          case 9u:
            v263 = sub_23F267D84();
            v264 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v263 - 8) + 32);
            v264(a1, a2, v263);
            v265 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
            v264((_OWORD *)((char *)a1 + *(int *)(v265 + 20)), (_OWORD *)((char *)a2 + *(int *)(v265 + 20)), v263);
            *(_OWORD *)((char *)a1 + *(int *)(v265 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v265 + 24));
LABEL_132:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
            break;
        }
        goto LABEL_139;
      case 0x25u:
        v86 = type metadata accessor for SessionServerDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 2u:
          case 7u:
          case 8u:
          case 0xAu:
            v87 = sub_23F267D84();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(a1, a2, v87);
            goto LABEL_138;
          case 1u:
            *a1 = *a2;
            v266 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
            v267 = v266[6];
            v268 = (char *)a1 + v267;
            v269 = (char *)a2 + v267;
            v270 = sub_23F267D84();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v269, 1, v270))
            {
              v271 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v271 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v270 - 8) + 32))(v268, v269, v270);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v268, 0, 1, v270);
            }
            *(_OWORD *)((char *)a1 + v266[7]) = *(_OWORD *)((char *)a2 + v266[7]);
            *(_QWORD *)((char *)a1 + v266[8]) = *(_QWORD *)((char *)a2 + v266[8]);
            goto LABEL_138;
          case 5u:
            *a1 = *a2;
            v272 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
            v273 = *(int *)(v272 + 24);
            v274 = (char *)a1 + v273;
            v275 = (char *)a2 + v273;
            v276 = sub_23F267D84();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v275, 1, v276))
            {
              v277 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v274, v275, *(_QWORD *)(*(_QWORD *)(v277 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v276 - 8) + 32))(v274, v275, v276);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v274, 0, 1, v276);
            }
            *(_QWORD *)((char *)a1 + *(int *)(v272 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v272 + 28));
            goto LABEL_138;
          case 6u:
            v278 = sub_23F267D84();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v278 - 8) + 32))(a1, a2, v278);
            v279 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
            *(_QWORD *)((char *)a1 + *(int *)(v279 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v279 + 20));
            goto LABEL_138;
          case 9u:
            v280 = sub_23F267D84();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v280 - 8) + 32))(a1, a2, v280);
            v281 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
            *((_BYTE *)a1 + *(int *)(v281 + 20)) = *((_BYTE *)a2 + *(int *)(v281 + 20));
            goto LABEL_138;
          case 0xBu:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
            *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
            *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
            v282 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
            v283 = v282[8];
            v284 = (char *)a1 + v283;
            v285 = (char *)a2 + v283;
            v286 = sub_23F267D84();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v286 - 8) + 32))(v284, v285, v286);
            *(_OWORD *)((char *)a1 + v282[9]) = *(_OWORD *)((char *)a2 + v282[9]);
            *(_OWORD *)((char *)a1 + v282[10]) = *(_OWORD *)((char *)a2 + v282[10]);
            *(_OWORD *)((char *)a1 + v282[11]) = *(_OWORD *)((char *)a2 + v282[11]);
            goto LABEL_138;
          case 0xCu:
            v287 = sub_23F267D84();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v287 - 8) + 32))(a1, a2, v287);
            v288 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
            *((_BYTE *)a1 + *(int *)(v288 + 20)) = *((_BYTE *)a2 + *(int *)(v288 + 20));
            goto LABEL_138;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
            break;
        }
        goto LABEL_139;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_23F226954()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;

  result = type metadata accessor for MessagePayload.Request(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for MessagePayload.ClientEffectInvocation(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for MessagePayload.ClientEffectResolved(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for MessagePayload.ClientAction(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for MessagePayload.ClientActionResult(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for SystemPrompt(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for SystemPromptResolution(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for ActionResponse(319);
                  if (v9 <= 0x3F)
                  {
                    result = type metadata accessor for SystemResponse(319);
                    if (v10 <= 0x3F)
                    {
                      result = type metadata accessor for MessagePayload.ExternalAgentTextQuery(319);
                      if (v11 <= 0x3F)
                      {
                        result = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(319);
                        if (v12 <= 0x3F)
                        {
                          result = type metadata accessor for MessagePayload.ExternalAgentRequest(319);
                          if (v13 <= 0x3F)
                          {
                            result = type metadata accessor for MessagePayload.ExternalAgentOutcome(319);
                            if (v14 <= 0x3F)
                            {
                              result = type metadata accessor for MessagePayload.ClientUndoRedoRequest(319);
                              if (v15 <= 0x3F)
                              {
                                result = type metadata accessor for MessagePayload.ActionSummaryUpdate(319);
                                if (v16 <= 0x3F)
                                {
                                  result = type metadata accessor for SessionClientDebuggerEvent.Payload(319);
                                  if (v17 <= 0x3F)
                                  {
                                    result = type metadata accessor for SessionServerDebuggerEvent.Payload(319);
                                    if (v18 <= 0x3F)
                                    {
                                      swift_initEnumMetadataMultiPayload();
                                      return 0;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void type metadata accessor for MessagePayload.Terminate()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.EndOfPlan()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.SessionSuspended()
{
  sub_23F131844();
}

uint64_t getEnumTagSinglePayload for MessagePayload.StepExecutedWithReturnedValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F226C68(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 == 2147483646)
  {
    sub_23F17FA58(*(_QWORD *)(a1 + 8));
    sub_23F12612C();
  }
  else
  {
    sub_23F125F84();
    v2 = sub_23F24FEE0();
    sub_23F1315B8(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for MessagePayload.StepExecutedWithReturnedValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F226CBC()
{
  unsigned int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F180250();
  if (v2 == 2147483646)
  {
    *(_QWORD *)(v1 + 8) = v0;
    sub_23F12612C();
  }
  else
  {
    sub_23F125F84();
    sub_23F17FE5C();
    sub_23F126098(v3, v4, v5, v6);
  }
}

void sub_23F226D0C()
{
  sub_23F23E994();
}

uint64_t destroy for MessagePayload.SessionError(id *a1)
{
  sub_23F131164(*a1);
  return swift_bridgeObjectRelease();
}

void _s16IntelligenceFlow14MessagePayloadO12SessionErrorVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char v4;

  sub_23F180250();
  v3 = *(id *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_23F131158(*(id *)v2);
  *(_QWORD *)v1 = v3;
  *(_BYTE *)(v1 + 8) = v4;
  sub_23F251684(*(_QWORD *)(v0 + 16));
  sub_23F12612C();
}

uint64_t assignWithCopy for MessagePayload.SessionError(uint64_t a1, uint64_t a2)
{
  id v4;
  char v5;
  void *v6;

  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_23F131158(*(id *)a2);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_23F131164(v6);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MessagePayload.SessionError(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;

  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  sub_23F131164(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for MessagePayload.SessionError()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.PlannerReturnedRawPlan()
{
  sub_23F131844();
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.Request(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = type metadata accessor for MessagePayload.RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v11 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v11))
      {
        v12 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v11);
      }
      v13 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))((char *)a1 + v13[5], (char *)a2 + v13[5], v11);
      v14 = v13[6];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v18 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      v19 = v13[7];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v22 = *((_QWORD *)v21 + 2);
      *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
      *((_QWORD *)v20 + 2) = v22;
      v23 = v13[8];
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = *(_QWORD *)v25;
      v27 = *((_QWORD *)v25 + 1);
      v28 = v25[16];
      swift_bridgeObjectRetain();
      sub_23F135C7C(v26, v27, v28);
      *(_QWORD *)v24 = v26;
      *((_QWORD *)v24 + 1) = v27;
      v24[16] = v28;
      goto LABEL_16;
    case 2:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_16;
    case 1:
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      goto LABEL_17;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_17:
  v29 = a3[6];
  *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
  *((_BYTE *)a1 + v29) = *((_BYTE *)a2 + v29);
  v30 = a3[7];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = *((unsigned __int8 *)a2 + v30 + 16);
  swift_bridgeObjectRetain();
  if (v33 <= 0xFD)
  {
    v34 = *(_QWORD *)v32;
    v35 = *((_QWORD *)v32 + 1);
    sub_23F135C9C(v34, v35, v33);
    *(_QWORD *)v31 = v34;
    *((_QWORD *)v31 + 1) = v35;
    v31[16] = v33;
  }
  else
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
  }
  v36 = a3[8];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v38, 1, v39))
  {
    v40 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v37, 0, 1, v39);
  }
  v41 = a3[9];
  v42 = (uint64_t *)((char *)a1 + v41);
  v43 = (uint64_t *)((char *)a2 + v41);
  v44 = v43[1];
  if (v44)
  {
    *v42 = *v43;
    v42[1] = v44;
    v42[2] = v43[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v42 = *(_OWORD *)v43;
    v42[2] = v43[2];
  }
  return a1;
}

uint64_t destroy for MessagePayload.Request(uint64_t a1, int *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  type metadata accessor for MessagePayload.RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v5 = sub_23F267D84();
    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = (int *)type metadata accessor for SystemPromptResolution(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1 + v6[5], v5);
    v7 = a1 + v6[6];
    type metadata accessor for SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    }
    swift_bridgeObjectRelease();
    sub_23F137210(*(_QWORD *)(a1 + v6[8]), *(_QWORD *)(a1 + v6[8] + 8), *(_BYTE *)(a1 + v6[8] + 16));
  }
  else if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v9 = a1 + a2[7];
  v10 = *(unsigned __int8 *)(v9 + 16);
  if (v10 <= 0xFD)
    sub_23F137230(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), v10);
  v11 = a1 + a2[8];
  v12 = sub_23F267D84();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  result = *(_QWORD *)(a1 + a2[9] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for MessagePayload.Request(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;

  v6 = type metadata accessor for MessagePayload.RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v9 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v9))
      {
        v10 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v9);
      }
      v11 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))((char *)a1 + v11[5], (char *)a2 + v11[5], v9);
      v12 = v11[6];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v16 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      v17 = v11[7];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      *(_DWORD *)v18 = *(_DWORD *)v19;
      v20 = *((_QWORD *)v19 + 2);
      *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
      *((_QWORD *)v18 + 2) = v20;
      v21 = v11[8];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = *(_QWORD *)v23;
      v25 = *((_QWORD *)v23 + 1);
      v26 = v23[16];
      swift_bridgeObjectRetain();
      sub_23F135C7C(v24, v25, v26);
      *(_QWORD *)v22 = v24;
      *((_QWORD *)v22 + 1) = v25;
      v22[16] = v26;
      break;
    case 2:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      break;
    case 1:
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_15;
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  v27 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  *((_BYTE *)a1 + v27) = *((_BYTE *)a2 + v27);
  v28 = a3[7];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = *((unsigned __int8 *)a2 + v28 + 16);
  swift_bridgeObjectRetain();
  if (v31 <= 0xFD)
  {
    v32 = *(_QWORD *)v30;
    v33 = *((_QWORD *)v30 + 1);
    sub_23F135C9C(v32, v33, v31);
    *(_QWORD *)v29 = v32;
    *((_QWORD *)v29 + 1) = v33;
    v29[16] = v31;
  }
  else
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
    v29[16] = v30[16];
  }
  v34 = a3[8];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v36, 1, v37))
  {
    v38 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v35, 0, 1, v37);
  }
  v39 = a3[9];
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  v42 = v41[1];
  if (v42)
  {
    *v40 = *v41;
    v40[1] = v42;
    v40[2] = v41[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v40 = *(_OWORD *)v41;
    v40[2] = v41[2];
  }
  return a1;
}

_QWORD *assignWithCopy for MessagePayload.Request(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unsigned int v28;
  __int128 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;

  if (a1 == a2)
    goto LABEL_16;
  sub_23F1BE0BC((uint64_t)a1, type metadata accessor for MessagePayload.RequestContent);
  v6 = type metadata accessor for MessagePayload.RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v8 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v8))
      {
        v9 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v8);
      }
      v10 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))((char *)a1 + v10[5], (char *)a2 + v10[5], v8);
      v11 = v10[6];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v15 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      v16 = v10[7];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      *(_DWORD *)v17 = *(_DWORD *)v18;
      *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
      *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
      v19 = v10[8];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = *(_QWORD *)v21;
      v23 = *((_QWORD *)v21 + 1);
      v24 = v21[16];
      swift_bridgeObjectRetain();
      sub_23F135C7C(v22, v23, v24);
      *(_QWORD *)v20 = v22;
      *((_QWORD *)v20 + 1) = v23;
      v20[16] = v24;
      break;
    case 2:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      break;
    case 1:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_16;
  }
  swift_storeEnumTagMultiPayload();
LABEL_16:
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v25 = a3[7];
  v26 = (uint64_t)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *((unsigned __int8 *)a2 + v25 + 16);
  if (*((unsigned __int8 *)a1 + v25 + 16) <= 0xFDu)
  {
    if (v28 <= 0xFD)
    {
      v33 = *(_QWORD *)v27;
      v34 = *((_QWORD *)v27 + 1);
      sub_23F135C9C(v33, v34, v28);
      v35 = *(_QWORD *)v26;
      v36 = *(_QWORD *)(v26 + 8);
      *(_QWORD *)v26 = v33;
      *(_QWORD *)(v26 + 8) = v34;
      v37 = *(_BYTE *)(v26 + 16);
      *(_BYTE *)(v26 + 16) = v28;
      sub_23F137230(v35, v36, v37);
    }
    else
    {
      sub_23F227B78(v26);
      v30 = v27[16];
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *(_BYTE *)(v26 + 16) = v30;
    }
  }
  else if (v28 <= 0xFD)
  {
    v31 = *(_QWORD *)v27;
    v32 = *((_QWORD *)v27 + 1);
    sub_23F135C9C(v31, v32, v28);
    *(_QWORD *)v26 = v31;
    *(_QWORD *)(v26 + 8) = v32;
    *(_BYTE *)(v26 + 16) = v28;
  }
  else
  {
    v29 = *(_OWORD *)v27;
    *(_BYTE *)(v26 + 16) = v27[16];
    *(_OWORD *)v26 = v29;
  }
  v38 = a3[8];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = sub_23F267D84();
  v42 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v39, 1, v41);
  v43 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v40, 1, v41);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v39, 0, 1, v41);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  v44 = *(_QWORD *)(v41 - 8);
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v41);
LABEL_28:
    v45 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 24))(v39, v40, v41);
LABEL_29:
  v46 = a3[9];
  v47 = (_QWORD *)((char *)a1 + v46);
  v48 = (_QWORD *)((char *)a2 + v46);
  v49 = *(_QWORD *)((char *)a1 + v46 + 8);
  v50 = v48[1];
  if (v49)
  {
    if (v50)
    {
      *v47 = *v48;
      v47[1] = v48[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[2] = v48[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F227BA4((uint64_t)v47);
      v51 = v48[2];
      *(_OWORD *)v47 = *(_OWORD *)v48;
      v47[2] = v51;
    }
  }
  else if (v50)
  {
    *v47 = *v48;
    v47[1] = v48[1];
    v47[2] = v48[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v52 = *(_OWORD *)v48;
    v47[2] = v48[2];
    *(_OWORD *)v47 = v52;
  }
  return a1;
}

uint64_t sub_23F227B78(uint64_t a1)
{
  destroy for MessagePayload.RequestPrescribedPlan(a1);
  return a1;
}

uint64_t sub_23F227BA4(uint64_t a1)
{
  destroy for MessagePayload.ExternalAgentRequestRewriteMetadata(a1, &type metadata for MessagePayload.ExternalAgentRequestRewriteMetadata);
  return a1;
}

char *initializeWithTake for MessagePayload.Request(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;

  v6 = type metadata accessor for MessagePayload.RequestContent(0);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v7 = sub_23F267D84();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v9 = (int *)type metadata accessor for SystemPromptResolution(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(&a1[v9[5]], &a2[v9[5]], v7);
    v10 = v9[6];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    v15 = v9[7];
    v16 = &a1[v15];
    v17 = &a2[v15];
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
    v18 = v9[8];
    v19 = &a1[v18];
    v20 = &a2[v18];
    v19[16] = v20[16];
    *(_OWORD *)v19 = *(_OWORD *)v20;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v21 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  a1[v21] = a2[v21];
  v22 = a3[7];
  v23 = a3[8];
  v24 = &a1[v22];
  v25 = &a2[v22];
  v26 = *(_OWORD *)v25;
  v24[16] = v25[16];
  *(_OWORD *)v24 = v26;
  v27 = &a1[v23];
  v28 = &a2[v23];
  v29 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v28, 1, v29))
  {
    v30 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v27, 0, 1, v29);
  }
  v31 = a3[9];
  v32 = &a1[v31];
  v33 = &a2[v31];
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
  return a1;
}

char *assignWithTake for MessagePayload.Request(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)a1, type metadata accessor for MessagePayload.RequestContent);
    v6 = type metadata accessor for MessagePayload.RequestContent(0);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v7 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
      {
        v8 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
      }
      v9 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(&a1[v9[5]], &a2[v9[5]], v7);
      v10 = v9[6];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v14 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      v15 = v9[7];
      v16 = &a1[v15];
      v17 = &a2[v15];
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
      v18 = v9[8];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v19[16] = v20[16];
      *(_OWORD *)v19 = *(_OWORD *)v20;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  v21 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = a1[v21 + 16];
  if (v24 > 0xFD)
    goto LABEL_14;
  v25 = v23[16];
  if (v25 > 0xFD)
  {
    sub_23F227B78((uint64_t)&a1[v21]);
LABEL_14:
    *(_OWORD *)v22 = *(_OWORD *)v23;
    v22[16] = v23[16];
    goto LABEL_16;
  }
  v26 = *(_QWORD *)v22;
  v27 = *((_QWORD *)v22 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  v22[16] = v25;
  sub_23F137230(v26, v27, v24);
LABEL_16:
  v28 = a3[8];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = sub_23F267D84();
  v32 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v29, 1, v31);
  v33 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  v34 = *(_QWORD *)(v31 - 8);
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v31);
LABEL_21:
    v35 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_22;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v29, v30, v31);
LABEL_22:
  v36 = a3[9];
  v37 = (uint64_t)&a1[v36];
  v38 = &a2[v36];
  if (!*(_QWORD *)&a1[v36 + 8])
  {
LABEL_26:
    *(_OWORD *)v37 = *(_OWORD *)v38;
    *(_QWORD *)(v37 + 16) = *((_QWORD *)v38 + 2);
    return a1;
  }
  v39 = *((_QWORD *)v38 + 1);
  if (!v39)
  {
    sub_23F227BA4(v37);
    goto LABEL_26;
  }
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_QWORD *)(v37 + 8) = v39;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v37 + 16) = *((_QWORD *)v38 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.Request()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F2281D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for MessagePayload.RequestContent(0);
  sub_23F17F9A8();
  if (v6)
  {
    v7 = sub_23F180064();
  }
  else
  {
    if ((_DWORD)a2 == 2147483646)
    {
      sub_23F17FA58(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
      sub_23F12612C();
      return;
    }
    v8 = sub_23F1217E8(&qword_256DFEB98);
    v7 = a1 + *(int *)(a3 + 32);
  }
  sub_23F1315B8(v7, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.Request()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F22825C(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  type metadata accessor for MessagePayload.RequestContent(0);
  sub_23F17F968();
  if (v8)
  {
    sub_23F18010C();
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
      sub_23F12612C();
      return;
    }
    sub_23F1217E8(&qword_256DFEB98);
  }
  sub_23F17FE5C();
  sub_23F126098(v9, v10, v11, v12);
}

void sub_23F2282D8()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for MessagePayload.RequestContent(319);
  if (v0 <= 0x3F)
  {
    sub_23F178624(319, (unint64_t *)&qword_256E005C0, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.RequestContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v10 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v10))
        {
          v11 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v10);
        }
        v12 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))((char *)a1 + v12[5], (char *)a2 + v12[5], v10);
        v13 = v12[6];
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        v16 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v17 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        v18 = v12[7];
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        *(_DWORD *)v19 = *(_DWORD *)v20;
        v21 = *((_QWORD *)v20 + 2);
        *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
        *((_QWORD *)v19 + 2) = v21;
        v22 = v12[8];
        v23 = (char *)a1 + v22;
        v24 = (char *)a2 + v22;
        v25 = *(_QWORD *)v24;
        v26 = *((_QWORD *)v24 + 1);
        v27 = v24[16];
        swift_bridgeObjectRetain();
        sub_23F135C7C(v25, v26, v27);
        *(_QWORD *)v23 = v25;
        *((_QWORD *)v23 + 1) = v26;
        v23[16] = v27;
        goto LABEL_16;
      case 2:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 1:
        v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        swift_bridgeObjectRetain();
LABEL_16:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for MessagePayload.RequestContent(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 3)
  {
    v3 = sub_23F267D84();
    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = (int *)type metadata accessor for SystemPromptResolution(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1 + v4[5], v3);
    v5 = a1 + v4[6];
    type metadata accessor for SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    }
    swift_bridgeObjectRelease();
    return sub_23F137210(*(_QWORD *)(a1 + v4[8]), *(_QWORD *)(a1 + v4[8] + 8), *(_BYTE *)(a1 + v4[8] + 16));
  }
  else if ((_DWORD)result == 2 || (_DWORD)result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for MessagePayload.RequestContent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v8 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v8))
      {
        v9 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v8);
      }
      v10 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))((char *)a1 + v10[5], (char *)a2 + v10[5], v8);
      v11 = v10[6];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v15 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      v16 = v10[7];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      *(_DWORD *)v17 = *(_DWORD *)v18;
      v19 = *((_QWORD *)v18 + 2);
      *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
      *((_QWORD *)v17 + 2) = v19;
      v20 = v10[8];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = *(_QWORD *)v22;
      v24 = *((_QWORD *)v22 + 1);
      v25 = v22[16];
      swift_bridgeObjectRetain();
      sub_23F135C7C(v23, v24, v25);
      *(_QWORD *)v21 = v23;
      *((_QWORD *)v21 + 1) = v24;
      v21[16] = v25;
      goto LABEL_14;
    case 2:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 1:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for MessagePayload.RequestContent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;

  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)a1, type metadata accessor for MessagePayload.RequestContent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v7 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
        {
          v8 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
        }
        v9 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))((char *)a1 + v9[5], (char *)a2 + v9[5], v7);
        v10 = v9[6];
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v14 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        v15 = v9[7];
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        *(_DWORD *)v16 = *(_DWORD *)v17;
        *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
        *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
        v18 = v9[8];
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = *(_QWORD *)v20;
        v22 = *((_QWORD *)v20 + 1);
        v23 = v20[16];
        swift_bridgeObjectRetain();
        sub_23F135C7C(v21, v22, v23);
        *(_QWORD *)v19 = v21;
        *((_QWORD *)v19 + 1) = v22;
        v19[16] = v23;
        goto LABEL_15;
      case 2:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 1:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
LABEL_15:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *initializeWithTake for MessagePayload.RequestContent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;

  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v6 = sub_23F267D84();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
    {
      v7 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
    v8 = (int *)type metadata accessor for SystemPromptResolution(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(&a1[v8[5]], &a2[v8[5]], v6);
    v9 = v8[6];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    v14 = v8[7];
    v15 = &a1[v14];
    v16 = &a2[v14];
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
    v17 = v8[8];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v18[16] = v19[16];
    *(_OWORD *)v18 = *(_OWORD *)v19;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for MessagePayload.RequestContent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;

  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)a1, type metadata accessor for MessagePayload.RequestContent);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v6 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
      {
        v7 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
      }
      v8 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(&a1[v8[5]], &a2[v8[5]], v6);
      v9 = v8[6];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v13 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      v14 = v8[7];
      v15 = &a1[v14];
      v16 = &a2[v14];
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
      v17 = v8[8];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v18[16] = v19[16];
      *(_OWORD *)v18 = *(_OWORD *)v19;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23F228EF0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SystemPromptResolution(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void type metadata accessor for MessagePayload.RequestContent.StopContent()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.RequestContent.TextContent()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.RequestContent.SpeechContent()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.RequestContent.SpeechContent.Candidate()
{
  sub_23F131844();
}

void initializeBufferWithCopyOfBuffer for MessagePayload.RequestPrescribedPlan(uint64_t a1, uint64_t a2)
{
  sub_23F23D070(a1, a2);
}

uint64_t destroy for MessagePayload.RequestPrescribedPlan(uint64_t a1)
{
  return sub_23F137230(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void assignWithCopy for MessagePayload.RequestPrescribedPlan(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_23F23D0B0(a1, a2, a3, (uint64_t)sub_23F135C9C, (void (*)(uint64_t, uint64_t, uint64_t))sub_23F137230);
}

void assignWithTake for MessagePayload.RequestPrescribedPlan(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_23F23D10C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_23F137230);
}

uint64_t getEnumTagSinglePayload for MessagePayload.RequestPrescribedPlan(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7B && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 122;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 16) >> 5) & 0xFFFFFF87 | (8 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0xF))) ^ 0x7F;
      if (v2 >= 0x7A)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for MessagePayload.RequestPrescribedPlan(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7A)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 123;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_23F229090(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 5;
}

uint64_t sub_23F22909C(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x1Fu;
  return result;
}

uint64_t sub_23F2290AC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 1 | (32 * a2);
  return result;
}

void type metadata accessor for MessagePayload.RequestPrescribedPlan()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.RequestPrescribedPlan.SearchTool()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.RequestPrescribedPlan.TextTool()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.RequestPrescribedPlan.ConvertTool()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.RequestPrescribedPlan.DisplayTool()
{
  sub_23F131844();
}

void _s16IntelligenceFlow14MessagePayloadO21RequestPrescribedPlanO10SearchToolVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F251384(a1, a2);
  *(_BYTE *)(v2 + 16) = *(_BYTE *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_23F126078();
}

void _s16IntelligenceFlow14MessagePayloadO21RequestPrescribedPlanO10SearchToolVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F24F5F4(a1, a2);
  sub_23F131A30();
  *(_BYTE *)(v3 + 16) = *(_BYTE *)(v2 + 16);
  sub_23F12612C();
}

void _s16IntelligenceFlow14MessagePayloadO21RequestPrescribedPlanO10SearchToolVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F2509C0(a1, a2);
  *(_BYTE *)(v3 + 16) = *(_BYTE *)(v2 + 16);
  sub_23F126078();
}

uint64_t _s16IntelligenceFlow14MessagePayloadO21RequestPrescribedPlanO10SearchToolVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_23F180230(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_23F180230(v2);
}

uint64_t sub_23F2291D0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_23F250294(result, a2);
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      return sub_23F250294(result, a2);
  }
  return result;
}

void type metadata accessor for MessagePayload.RequestPrescribedPlan.KnowledgeTool()
{
  sub_23F131844();
}

uint64_t destroy for MessagePayload.Query()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagePayload.Query(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.Query(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MessagePayload.Query(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.Query(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.Query(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MessagePayload.Query()
{
  sub_23F131844();
}

uint64_t destroy for MessagePayload.SpeechQuery()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagePayload.SpeechQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.SpeechQuery(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MessagePayload.SpeechQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.SpeechQuery(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.SpeechQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MessagePayload.SpeechQuery()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.SpeechQuery.Candidate()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.PrescribedPlan()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.MockTranscript()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.DisambiguationNeeded()
{
  sub_23F131844();
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ClientEffectInvocation(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[6];
    v10 = a3[7];
    v11 = (uint64_t *)((char *)a1 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (uint64_t *)((char *)a1 + v10);
    v15 = (uint64_t *)((char *)a2 + v10);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = a3[8];
    v18 = a3[9];
    v19 = (uint64_t *)((char *)a1 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    *(uint64_t *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MessagePayload.ClientEffectInvocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_23F267D84();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagePayload.ClientEffectInvocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a3[7];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(a1 + v9);
  v14 = (_QWORD *)(a2 + v9);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[8];
  v17 = a3[9];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.ClientEffectInvocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MessagePayload.ClientEffectInvocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for MessagePayload.ClientEffectInvocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ClientEffectInvocation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F229AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F131B8C();
  sub_23F1A9650();
  if (v5)
  {
    v6 = sub_23F1A96A4();
    sub_23F1315B8(v6, v7, v8);
  }
  else
  {
    sub_23F13188C(*(_QWORD *)(a1 + *(int *)(a3 + 24) + 8));
    sub_23F12612C();
  }
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ClientEffectInvocation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F229B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F131B8C();
  sub_23F17F968();
  if (v5)
  {
    v6 = sub_23F1A92F4();
    sub_23F126098(v6, v7, v8, v9);
  }
  else
  {
    sub_23F25004C(*(int *)(a4 + 24));
    sub_23F12612C();
  }
}

uint64_t sub_23F229B80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F267D84();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ClientAction(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MessagePayload.ClientAction(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagePayload.ClientAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.ClientAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[8];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MessagePayload.ClientAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for MessagePayload.ClientAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v12 = a3[8];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ClientAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ClientAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F22A010()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F267D84();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ClientAction.ShimParameterResolution(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_23F268078();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0);
      *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for MessagePayload.ClientAction.ShimParameterResolution(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t result;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = sub_23F268078();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MessagePayload.ClientAction.ShimParameterResolution(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_23F268078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0);
    *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.ClientAction.ShimParameterResolution(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F1BE0BC(a1, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_23F268078();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v6 = type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0);
      *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for MessagePayload.ClientAction.ShimParameterResolution(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_23F268078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0);
    *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for MessagePayload.ClientAction.ShimParameterResolution(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F1BE0BC(a1, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_23F268078();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v6 = type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0);
      *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F22A454()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F268078();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ClientAction.UnresolvedParameterValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F268078();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MessagePayload.ClientAction.UnresolvedParameterValue(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F268078();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagePayload.ClientAction.UnresolvedParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F268078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.ClientAction.UnresolvedParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F268078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MessagePayload.ClientAction.UnresolvedParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F268078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for MessagePayload.ClientAction.UnresolvedParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F268078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ClientAction.UnresolvedParameterValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F22A73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F125F84();
  sub_23F1A9650();
  if (v5)
  {
    v6 = sub_23F1A96A4();
    sub_23F1315B8(v6, v7, v8);
  }
  else
  {
    sub_23F13188C(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
    sub_23F12612C();
  }
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ClientAction.UnresolvedParameterValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F22A790()
{
  sub_23F231E28();
}

void sub_23F22A79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F22B424(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18]);
}

uint64_t destroy for MessagePayload.ActionWillExecute()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagePayload.ActionWillExecute(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.ActionWillExecute(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MessagePayload.ActionWillExecute(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ActionWillExecute(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ActionWillExecute(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MessagePayload.ActionWillExecute()
{
  sub_23F131844();
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ActionWillExecute.ToolParameterValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23F268078();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for MessagePayload.ActionWillExecute.ToolParameterValue(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v2 = sub_23F268078();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *initializeWithCopy for MessagePayload.ActionWillExecute.ToolParameterValue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23F268078();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for MessagePayload.ActionWillExecute.ToolParameterValue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)a1, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_23F268078();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void assignWithTake for MessagePayload.ActionWillExecute.ToolParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F234BAC(a1, a2, a3, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
}

uint64_t sub_23F22AD20()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F268078();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Reference()
{
  sub_23F131844();
}

uint64_t initializeBufferWithCopyOfBuffer for MessagePayload.ActionWillExecute.ToolParameterValue.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F2402C0(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t destroy for MessagePayload.ActionWillExecute.ToolParameterValue.Value(uint64_t a1, uint64_t a2)
{
  return sub_23F2402F4(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

void initializeWithCopy for MessagePayload.ActionWillExecute.ToolParameterValue.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F240320(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

void assignWithCopy for MessagePayload.ActionWillExecute.ToolParameterValue.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F240358(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

void initializeWithTake for MessagePayload.ActionWillExecute.ToolParameterValue.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F240390(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

void assignWithTake for MessagePayload.ActionWillExecute.ToolParameterValue.Value(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F2403BC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

uint64_t getEnumTagSinglePayload for MessagePayload.ActionWillExecute.ToolParameterValue.Value()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F22ADF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F125F84();
  v0 = sub_23F1A99EC();
  return sub_23F1A9568(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ActionWillExecute.ToolParameterValue.Value()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F22AE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F125F84();
  v0 = sub_23F1A92F4();
  return sub_23F1A9570(v0, v1, v2, v3);
}

void sub_23F22AE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F23F9C8(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18]);
}

uint64_t getEnumTagSinglePayload for MessagePayload.ActionWillExecute.PromptSelection(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ActionWillExecute.PromptSelection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23F22AED4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

void type metadata accessor for MessagePayload.ActionWillExecute.PromptSelection()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.ActionWillExecute.PromptSelection.Confirmed()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.ActionWillExecute.PromptSelection.Denied()
{
  sub_23F131844();
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ActionWillExecute.ParameterValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23F268078();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    *(_QWORD *)v11 = *(_QWORD *)v12;
    v11[8] = v12[8];
  }
  return a1;
}

uint64_t destroy for MessagePayload.ActionWillExecute.ParameterValue(uint64_t a1)
{
  uint64_t v2;

  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v2 = sub_23F268078();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *initializeWithCopy for MessagePayload.ActionWillExecute.ParameterValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;

  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23F268078();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  v9[8] = v10[8];
  return a1;
}

_QWORD *assignWithCopy for MessagePayload.ActionWillExecute.ParameterValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)a1, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
    type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23F268078();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v8[8] = v9[8];
  *(_QWORD *)v8 = v10;
  return a1;
}

char *initializeWithTake for MessagePayload.ActionWillExecute.ParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;

  v6 = type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23F268078();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)v9 = *(_QWORD *)v10;
  v9[8] = v10[8];
  return a1;
}

char *assignWithTake for MessagePayload.ActionWillExecute.ParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;

  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)a1, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
    v6 = type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)v9 = *(_QWORD *)v10;
  v9[8] = v10[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ActionWillExecute.ParameterValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F22B36C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_23F2507D8();
  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(v0);
  sub_23F1A9650();
  if (v1)
  {
    v2 = sub_23F1A96A4();
    sub_23F1315B8(v2, v3, v4);
  }
  else
  {
    sub_23F12612C();
  }
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ActionWillExecute.ParameterValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F22B3CC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_23F2510BC();
  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(v3);
  sub_23F17F968();
  if (v4)
  {
    v5 = sub_23F1A92F4();
    sub_23F126098(v5, v6, v7, v8);
  }
  else
  {
    *(_BYTE *)(v1 + *(int *)(v2 + 20) + 8) = ~v0;
    sub_23F12612C();
  }
}

void sub_23F22B410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F22B424(a1, a2, a3, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
}

void sub_23F22B424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v4;

  sub_23F250C84(a1, a2, a3, a4);
  if (v4 <= 0x3F)
  {
    sub_23F24FED4();
    sub_23F250AA4();
    sub_23F24FEF4();
  }
  sub_23F1A9BE8();
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ClientEffectResolved(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = *(void **)v10;
      v12 = v10[8];
      sub_23F131158(v11);
      *(_QWORD *)v9 = v11;
      v9[8] = v12;
    }
    else
    {
      v14 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for MessagePayload.ClientEffectResolved(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id *v5;
  uint64_t v6;

  v4 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (id *)(a1 + *(int *)(a2 + 20));
  type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23F131164(*v5);
  }
  else
  {
    v6 = sub_23F268078();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
}

uint64_t initializeWithCopy for MessagePayload.ClientEffectResolved(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = *(void **)v9;
    v11 = *(_BYTE *)(v9 + 8);
    sub_23F131158(v10);
    *(_QWORD *)v8 = v10;
    *(_BYTE *)(v8 + 8) = v11;
  }
  else
  {
    v12 = sub_23F268078();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.ClientEffectResolved(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = a1 + v7;
    v9 = a2 + v7;
    sub_23F1BE0BC(a1 + v7, type metadata accessor for MessagePayload.ClientEffectResolved.Result);
    type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = *(void **)v9;
      v11 = *(_BYTE *)(v9 + 8);
      sub_23F131158(v10);
      *(_QWORD *)v8 = v10;
      *(_BYTE *)(v8 + 8) = v11;
    }
    else
    {
      v12 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for MessagePayload.ClientEffectResolved(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = sub_23F268078();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithTake for MessagePayload.ClientEffectResolved(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_23F1BE0BC(a1 + v7, type metadata accessor for MessagePayload.ClientEffectResolved.Result);
    v10 = type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v11 = sub_23F268078();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ClientEffectResolved()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F22B97C(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F131B8C();
  sub_23F17F9A8();
  if (v3)
  {
    v4 = sub_23F180064();
  }
  else
  {
    type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
    v4 = sub_23F2502CC();
  }
  return sub_23F1315B8(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ClientEffectResolved()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F22B9D4()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F131B8C();
  sub_23F17F968();
  if (v0)
  {
    sub_23F18010C();
  }
  else
  {
    type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
    sub_23F2502CC();
  }
  sub_23F17FE5C();
  return sub_23F126098(v1, v2, v3, v4);
}

uint64_t sub_23F22BA24()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F267D84();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MessagePayload.ClientEffectResolved.Result(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for MessagePayload.ClientEffectResolved.Result(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v6;
  char v7;
  char *v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = *a2;
      v7 = *((_BYTE *)a2 + 8);
      sub_23F131158(v6);
      *(_QWORD *)a1 = v6;
      a1[8] = v7;
    }
    else
    {
      v9 = sub_23F268078();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for MessagePayload.ClientEffectResolved.Result(id *a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23F131164(*a1);
  }
  else
  {
    v2 = sub_23F268078();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
}

uint64_t initializeWithCopy for MessagePayload.ClientEffectResolved.Result(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = *(void **)a2;
    v5 = *(_BYTE *)(a2 + 8);
    sub_23F131158(v4);
    *(_QWORD *)a1 = v4;
    *(_BYTE *)(a1 + 8) = v5;
  }
  else
  {
    v6 = sub_23F268078();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.ClientEffectResolved.Result(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F1BE0BC(a1, type metadata accessor for MessagePayload.ClientEffectResolved.Result);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = *(void **)a2;
      v5 = *(_BYTE *)(a2 + 8);
      sub_23F131158(v4);
      *(_QWORD *)a1 = v4;
      *(_BYTE *)(a1 + 8) = v5;
    }
    else
    {
      v6 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for MessagePayload.ClientEffectResolved.Result(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_23F268078();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for MessagePayload.ClientEffectResolved.Result(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)a1, type metadata accessor for MessagePayload.ClientEffectResolved.Result);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_23F268078();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23F22BE48()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F268078();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MessagePayload.ClientActionResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = sub_23F267D84();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    type metadata accessor for StatementOutcome(0);
    v7 = (char *)&loc_23F22BF50 + 4 * byte_23F279E3E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v8 = *a2;
  *a1 = *a2;
  v9 = v8 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v9;
}

uint64_t destroy for MessagePayload.ClientActionResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t result;

  v4 = sub_23F267D84();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  type metadata accessor for StatementOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v7 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      v8 = v6 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
      v9 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v8, 1, v9))
      {
        v5(v8, v4);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      goto LABEL_15;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 2u:
      goto LABEL_13;
    case 3u:
      swift_bridgeObjectRelease();
      v10 = type metadata accessor for ParameterNeedsValue(0);
      goto LABEL_10;
    case 4u:
      swift_bridgeObjectRelease();
      v11 = v6 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
      v12 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 6u:
      swift_bridgeObjectRelease();
      v10 = type metadata accessor for ParameterNotAllowed(0);
      goto LABEL_10;
    case 7u:
      swift_bridgeObjectRelease();
      v10 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_10:
      v13 = v6 + *(int *)(v10 + 20);
      v14 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      goto LABEL_15;
    case 8u:
      sub_23F137248(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_BYTE *)(v6 + 16));
      goto LABEL_15;
    case 9u:
      goto LABEL_14;
    case 0xAu:
      if (*(_QWORD *)(v6 + 8) < 0x10uLL)
        goto LABEL_15;
LABEL_13:
      swift_bridgeObjectRelease();
LABEL_14:
      swift_bridgeObjectRelease();
LABEL_15:
      v15 = (uint64_t *)(a1 + *(int *)(a2 + 24));
      result = *v15;
      if (*v15 != 1)
      {
        swift_bridgeObjectRelease();
        if (v15[2])
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (v15[10])
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (v15[17])
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      return result;
    default:
      goto LABEL_15;
  }
}

void initializeWithCopy for MessagePayload.ClientActionResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;

  v4 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  type metadata accessor for StatementOutcome(0);
  v5 = (char *)sub_23F22C840 + 4 * byte_23F279E54[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F22C840(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__dst, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;

  v29 = sub_23F268078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v25, v26, v29);
  v30 = type metadata accessor for ActionSuccess(0);
  v31 = *(int *)(v30 + 20);
  v63 = v30;
  v64 = (char *)(v25 + v31);
  v32 = (char *)(v26 + v31);
  v33 = type metadata accessor for ActionSuccess.UndoContext(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v32, 1, v33))
  {
    v34 = sub_23F1217E8(&qword_256DFEBA0);
    memcpy(v64, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v28(v64, v32, v27);
    v35 = *(int *)(v33 + 20);
    v36 = &v64[v35];
    v37 = &v32[v35];
    v38 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v38;
    v39 = *(int *)(v33 + 24);
    v40 = &v64[v39];
    v41 = &v32[v39];
    v42 = *((_QWORD *)v41 + 1);
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *((_QWORD *)v40 + 1) = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v64, 0, 1, v33);
  }
  *(_BYTE *)(v25 + *(int *)(v63 + 24)) = *(_BYTE *)(v26 + *(int *)(v63 + 24));
  swift_storeEnumTagMultiPayload();
  v43 = *(int *)(v24 + 24);
  v44 = v22 + v43;
  v45 = (_QWORD *)(v23 + v43);
  if (*v45 == 1)
  {
    memcpy((void *)(v22 + v43), v45, 0xBAuLL);
  }
  else
  {
    *(_QWORD *)v44 = *v45;
    v46 = v45[2];
    swift_bridgeObjectRetain();
    if (v46)
    {
      *(_QWORD *)(v44 + 8) = v45[1];
      *(_QWORD *)(v44 + 16) = v46;
      v47 = v45[4];
      *(_QWORD *)(v44 + 24) = v45[3];
      *(_QWORD *)(v44 + 32) = v47;
      v48 = v45[6];
      *(_QWORD *)(v44 + 40) = v45[5];
      *(_QWORD *)(v44 + 48) = v48;
      v49 = v45[8];
      *(_QWORD *)(v44 + 56) = v45[7];
      *(_QWORD *)(v44 + 64) = v49;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v50 = *(_OWORD *)(v45 + 3);
      *(_OWORD *)(v44 + 8) = *(_OWORD *)(v45 + 1);
      *(_OWORD *)(v44 + 24) = v50;
      v51 = *(_OWORD *)(v45 + 7);
      *(_OWORD *)(v44 + 40) = *(_OWORD *)(v45 + 5);
      *(_OWORD *)(v44 + 56) = v51;
    }
    v52 = v45[10];
    if (v52)
    {
      *(_QWORD *)(v44 + 72) = v45[9];
      *(_QWORD *)(v44 + 80) = v52;
      v53 = v45[12];
      *(_QWORD *)(v44 + 88) = v45[11];
      *(_QWORD *)(v44 + 96) = v53;
      v54 = v45[14];
      *(_QWORD *)(v44 + 104) = v45[13];
      *(_QWORD *)(v44 + 112) = v54;
      v55 = v45[16];
      *(_QWORD *)(v44 + 120) = v45[15];
      *(_QWORD *)(v44 + 128) = v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v56 = *(_OWORD *)(v45 + 11);
      *(_OWORD *)(v44 + 72) = *(_OWORD *)(v45 + 9);
      *(_OWORD *)(v44 + 88) = v56;
      v57 = *(_OWORD *)(v45 + 15);
      *(_OWORD *)(v44 + 104) = *(_OWORD *)(v45 + 13);
      *(_OWORD *)(v44 + 120) = v57;
    }
    v58 = v45[17];
    if (v58)
    {
      v59 = v45[18];
      *(_QWORD *)(v44 + 136) = v58;
      *(_QWORD *)(v44 + 144) = v59;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v44 + 136) = *(_OWORD *)(v45 + 17);
    }
    v60 = v45[20];
    *(_QWORD *)(v44 + 152) = v45[19];
    *(_QWORD *)(v44 + 160) = v60;
    v61 = v45[22];
    *(_QWORD *)(v44 + 168) = v45[21];
    *(_QWORD *)(v44 + 176) = v61;
    *(_WORD *)(v44 + 184) = *((_WORD *)v45 + 92);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v22;
}

uint64_t assignWithCopy for MessagePayload.ClientActionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  __int128 *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD *v29;
  __int128 *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    sub_23F1BE0BC(a1 + *(int *)(a3 + 20), type metadata accessor for StatementOutcome);
    type metadata accessor for StatementOutcome(0);
    v7 = (char *)&loc_23F22CE64 + 4 * byte_23F279E5F[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = (uint64_t *)(a2 + v8);
  v11 = *v10;
  if (*(_QWORD *)(a1 + v8) != 1)
  {
    if (v11 == 1)
    {
      sub_23F22D800((_QWORD *)(a1 + v8));
      goto LABEL_9;
    }
    *(_QWORD *)v9 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v13 = (_OWORD *)(v9 + 8);
    v14 = (__int128 *)(v10 + 1);
    v15 = v10[2];
    if (*(_QWORD *)(v9 + 16))
    {
      if (v15)
      {
        *(_QWORD *)(v9 + 8) = v10[1];
        *(_QWORD *)(v9 + 16) = v10[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 + 24) = v10[3];
        *(_QWORD *)(v9 + 32) = v10[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 + 40) = v10[5];
        *(_QWORD *)(v9 + 48) = v10[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 + 56) = v10[7];
        *(_QWORD *)(v9 + 64) = v10[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23F15CBD8(v9 + 8);
        v23 = *(_OWORD *)(v10 + 7);
        v25 = *v14;
        v24 = *(_OWORD *)(v10 + 3);
        *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 5);
        *(_OWORD *)(v9 + 56) = v23;
        *v13 = v25;
        *(_OWORD *)(v9 + 24) = v24;
      }
    }
    else if (v15)
    {
      *(_QWORD *)(v9 + 8) = v10[1];
      *(_QWORD *)(v9 + 16) = v10[2];
      *(_QWORD *)(v9 + 24) = v10[3];
      *(_QWORD *)(v9 + 32) = v10[4];
      *(_QWORD *)(v9 + 40) = v10[5];
      *(_QWORD *)(v9 + 48) = v10[6];
      *(_QWORD *)(v9 + 56) = v10[7];
      *(_QWORD *)(v9 + 64) = v10[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v26 = *v14;
      v27 = *(_OWORD *)(v10 + 3);
      v28 = *(_OWORD *)(v10 + 7);
      *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 5);
      *(_OWORD *)(v9 + 56) = v28;
      *v13 = v26;
      *(_OWORD *)(v9 + 24) = v27;
    }
    v29 = (_OWORD *)(v9 + 72);
    v30 = (__int128 *)(v10 + 9);
    v31 = v10[10];
    if (*(_QWORD *)(v9 + 80))
    {
      if (v31)
      {
        *(_QWORD *)(v9 + 72) = v10[9];
        *(_QWORD *)(v9 + 80) = v10[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 + 88) = v10[11];
        *(_QWORD *)(v9 + 96) = v10[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 + 104) = v10[13];
        *(_QWORD *)(v9 + 112) = v10[14];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 + 120) = v10[15];
        *(_QWORD *)(v9 + 128) = v10[16];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23F15CBD8(v9 + 72);
        v32 = *(_OWORD *)(v10 + 15);
        v34 = *v30;
        v33 = *(_OWORD *)(v10 + 11);
        *(_OWORD *)(v9 + 104) = *(_OWORD *)(v10 + 13);
        *(_OWORD *)(v9 + 120) = v32;
        *v29 = v34;
        *(_OWORD *)(v9 + 88) = v33;
      }
    }
    else if (v31)
    {
      *(_QWORD *)(v9 + 72) = v10[9];
      *(_QWORD *)(v9 + 80) = v10[10];
      *(_QWORD *)(v9 + 88) = v10[11];
      *(_QWORD *)(v9 + 96) = v10[12];
      *(_QWORD *)(v9 + 104) = v10[13];
      *(_QWORD *)(v9 + 112) = v10[14];
      *(_QWORD *)(v9 + 120) = v10[15];
      *(_QWORD *)(v9 + 128) = v10[16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v35 = *v30;
      v36 = *(_OWORD *)(v10 + 11);
      v37 = *(_OWORD *)(v10 + 15);
      *(_OWORD *)(v9 + 104) = *(_OWORD *)(v10 + 13);
      *(_OWORD *)(v9 + 120) = v37;
      *v29 = v35;
      *(_OWORD *)(v9 + 88) = v36;
    }
    v38 = v10[17];
    if (*(_QWORD *)(v9 + 136))
    {
      if (v38)
      {
        *(_QWORD *)(v9 + 136) = v38;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 + 144) = v10[18];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_39:
        *(_QWORD *)(v9 + 152) = v10[19];
        *(_QWORD *)(v9 + 160) = v10[20];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 + 168) = v10[21];
        *(_QWORD *)(v9 + 176) = v10[22];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_BYTE *)(v9 + 184) = *((_BYTE *)v10 + 184);
        *(_BYTE *)(v9 + 185) = *((_BYTE *)v10 + 185);
        return a1;
      }
      sub_23F15CC04(v9 + 136);
    }
    else if (v38)
    {
      *(_QWORD *)(v9 + 136) = v38;
      *(_QWORD *)(v9 + 144) = v10[18];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_39;
    }
    *(_OWORD *)(v9 + 136) = *(_OWORD *)(v10 + 17);
    goto LABEL_39;
  }
  if (v11 == 1)
  {
LABEL_9:
    memcpy((void *)v9, v10, 0xBAuLL);
    return a1;
  }
  *(_QWORD *)v9 = v11;
  v12 = v10[2];
  swift_bridgeObjectRetain();
  if (v12)
  {
    *(_QWORD *)(v9 + 8) = v10[1];
    *(_QWORD *)(v9 + 16) = v10[2];
    *(_QWORD *)(v9 + 24) = v10[3];
    *(_QWORD *)(v9 + 32) = v10[4];
    *(_QWORD *)(v9 + 40) = v10[5];
    *(_QWORD *)(v9 + 48) = v10[6];
    *(_QWORD *)(v9 + 56) = v10[7];
    *(_QWORD *)(v9 + 64) = v10[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = *(_OWORD *)(v10 + 1);
    v17 = *(_OWORD *)(v10 + 3);
    v18 = *(_OWORD *)(v10 + 7);
    *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 5);
    *(_OWORD *)(v9 + 56) = v18;
    *(_OWORD *)(v9 + 8) = v16;
    *(_OWORD *)(v9 + 24) = v17;
  }
  if (v10[10])
  {
    *(_QWORD *)(v9 + 72) = v10[9];
    *(_QWORD *)(v9 + 80) = v10[10];
    *(_QWORD *)(v9 + 88) = v10[11];
    *(_QWORD *)(v9 + 96) = v10[12];
    *(_QWORD *)(v9 + 104) = v10[13];
    *(_QWORD *)(v9 + 112) = v10[14];
    *(_QWORD *)(v9 + 120) = v10[15];
    *(_QWORD *)(v9 + 128) = v10[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(v10 + 9);
    v20 = *(_OWORD *)(v10 + 11);
    v21 = *(_OWORD *)(v10 + 15);
    *(_OWORD *)(v9 + 104) = *(_OWORD *)(v10 + 13);
    *(_OWORD *)(v9 + 120) = v21;
    *(_OWORD *)(v9 + 72) = v19;
    *(_OWORD *)(v9 + 88) = v20;
  }
  v22 = v10[17];
  if (v22)
  {
    *(_QWORD *)(v9 + 136) = v22;
    *(_QWORD *)(v9 + 144) = v10[18];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v9 + 136) = *(_OWORD *)(v10 + 17);
  }
  *(_QWORD *)(v9 + 152) = v10[19];
  *(_QWORD *)(v9 + 160) = v10[20];
  *(_QWORD *)(v9 + 168) = v10[21];
  *(_QWORD *)(v9 + 176) = v10[22];
  *(_BYTE *)(v9 + 184) = *((_BYTE *)v10 + 184);
  *(_BYTE *)(v9 + 185) = *((_BYTE *)v10 + 185);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23F22D800(_QWORD *a1)
{
  destroy for ResponseManifest(a1);
  return a1;
}

uint64_t initializeWithTake for MessagePayload.ClientActionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  char *__dst;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_BYTE *)(a1 + v8);
  v10 = (_BYTE *)(a2 + v8);
  v11 = type metadata accessor for StatementOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v12 = sub_23F268078();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      v13 = type metadata accessor for ActionSuccess(0);
      v14 = *(int *)(v13 + 20);
      v37 = v13;
      __dst = &v9[v14];
      v15 = &v10[v14];
      v16 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v16))
      {
        v17 = sub_23F1217E8(&qword_256DFEBA0);
        memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v7((uint64_t)__dst, (uint64_t)v15, v6);
        *(_OWORD *)&__dst[*(int *)(v16 + 20)] = *(_OWORD *)&v15[*(int *)(v16 + 20)];
        *(_OWORD *)&__dst[*(int *)(v16 + 24)] = *(_OWORD *)&v15[*(int *)(v16 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v16);
      }
      v9[*(int *)(v37 + 24)] = v10[*(int *)(v37 + 24)];
      goto LABEL_11;
    case 3u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v18 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      v19 = &v9[v18];
      v20 = &v10[v18];
      v21 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      goto LABEL_11;
    case 4u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      v9[24] = v10[24];
      v22 = (int *)type metadata accessor for ParameterConfirmation(0);
      v23 = v22[6];
      v24 = &v9[v23];
      v25 = &v10[v23];
      v26 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      *(_OWORD *)&v9[v22[7]] = *(_OWORD *)&v10[v22[7]];
      *(_OWORD *)&v9[v22[8]] = *(_OWORD *)&v10[v22[8]];
      goto LABEL_11;
    case 6u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v27 = type metadata accessor for ParameterNotAllowed(0);
      v28 = *(int *)(v27 + 20);
      v29 = &v9[v28];
      v30 = &v10[v28];
      v31 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      v9[*(int *)(v27 + 24)] = v10[*(int *)(v27 + 24)];
      goto LABEL_11;
    case 7u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v32 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
      v33 = &v9[v32];
      v34 = &v10[v32];
      v35 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      break;
  }
  memcpy((void *)(a1 + *(int *)(a3 + 24)), (const void *)(a2 + *(int *)(a3 + 24)), 0xBAuLL);
  return a1;
}

uint64_t assignWithTake for MessagePayload.ClientActionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  char *__dst;

  v6 = sub_23F267D84();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (_BYTE *)(a1 + v8);
    v10 = (_BYTE *)(a2 + v8);
    sub_23F1BE0BC(a1 + v8, type metadata accessor for StatementOutcome);
    v11 = type metadata accessor for StatementOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v12 = sub_23F268078();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
        v13 = type metadata accessor for ActionSuccess(0);
        v14 = *(int *)(v13 + 20);
        v55 = v13;
        __dst = &v9[v14];
        v15 = &v10[v14];
        v16 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v16))
        {
          v17 = sub_23F1217E8(&qword_256DFEBA0);
          memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(__dst, v15, v6);
          *(_OWORD *)&__dst[*(int *)(v16 + 20)] = *(_OWORD *)&v15[*(int *)(v16 + 20)];
          *(_OWORD *)&__dst[*(int *)(v16 + 24)] = *(_OWORD *)&v15[*(int *)(v16 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v16);
        }
        v9[*(int *)(v55 + 24)] = v10[*(int *)(v55 + 24)];
        goto LABEL_12;
      case 3u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        v18 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        v19 = &v9[v18];
        v20 = &v10[v18];
        v21 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        goto LABEL_12;
      case 4u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
        v9[24] = v10[24];
        v22 = (int *)type metadata accessor for ParameterConfirmation(0);
        v23 = v22[6];
        v24 = &v9[v23];
        v25 = &v10[v23];
        v26 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        *(_OWORD *)&v9[v22[7]] = *(_OWORD *)&v10[v22[7]];
        *(_OWORD *)&v9[v22[8]] = *(_OWORD *)&v10[v22[8]];
        goto LABEL_12;
      case 6u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        v27 = type metadata accessor for ParameterNotAllowed(0);
        v28 = *(int *)(v27 + 20);
        v29 = &v9[v28];
        v30 = &v10[v28];
        v31 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
        v9[*(int *)(v27 + 24)] = v10[*(int *)(v27 + 24)];
        goto LABEL_12;
      case 7u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        v32 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        v33 = &v9[v32];
        v34 = &v10[v32];
        v35 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        break;
    }
  }
  v36 = *(int *)(a3 + 24);
  v37 = a1 + v36;
  v38 = (char *)(a2 + v36);
  if (*(_QWORD *)(a1 + v36) == 1)
    goto LABEL_16;
  if (*(_QWORD *)v38 != 1)
  {
    *(_QWORD *)v37 = *(_QWORD *)v38;
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v37 + 16))
    {
      v39 = *((_QWORD *)v38 + 2);
      if (v39)
      {
        *(_QWORD *)(v37 + 8) = *((_QWORD *)v38 + 1);
        *(_QWORD *)(v37 + 16) = v39;
        swift_bridgeObjectRelease();
        v40 = *((_QWORD *)v38 + 4);
        *(_QWORD *)(v37 + 24) = *((_QWORD *)v38 + 3);
        *(_QWORD *)(v37 + 32) = v40;
        swift_bridgeObjectRelease();
        v41 = *((_QWORD *)v38 + 6);
        *(_QWORD *)(v37 + 40) = *((_QWORD *)v38 + 5);
        *(_QWORD *)(v37 + 48) = v41;
        swift_bridgeObjectRelease();
        v42 = *((_QWORD *)v38 + 8);
        *(_QWORD *)(v37 + 56) = *((_QWORD *)v38 + 7);
        *(_QWORD *)(v37 + 64) = v42;
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      sub_23F15CBD8(v37 + 8);
    }
    v43 = *(_OWORD *)(v38 + 24);
    *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
    *(_OWORD *)(v37 + 24) = v43;
    v44 = *(_OWORD *)(v38 + 56);
    *(_OWORD *)(v37 + 40) = *(_OWORD *)(v38 + 40);
    *(_OWORD *)(v37 + 56) = v44;
LABEL_22:
    if (*(_QWORD *)(v37 + 80))
    {
      v45 = *((_QWORD *)v38 + 10);
      if (v45)
      {
        *(_QWORD *)(v37 + 72) = *((_QWORD *)v38 + 9);
        *(_QWORD *)(v37 + 80) = v45;
        swift_bridgeObjectRelease();
        v46 = *((_QWORD *)v38 + 12);
        *(_QWORD *)(v37 + 88) = *((_QWORD *)v38 + 11);
        *(_QWORD *)(v37 + 96) = v46;
        swift_bridgeObjectRelease();
        v47 = *((_QWORD *)v38 + 14);
        *(_QWORD *)(v37 + 104) = *((_QWORD *)v38 + 13);
        *(_QWORD *)(v37 + 112) = v47;
        swift_bridgeObjectRelease();
        v48 = *((_QWORD *)v38 + 16);
        *(_QWORD *)(v37 + 120) = *((_QWORD *)v38 + 15);
        *(_QWORD *)(v37 + 128) = v48;
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      sub_23F15CBD8(v37 + 72);
    }
    v49 = *(_OWORD *)(v38 + 88);
    *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
    *(_OWORD *)(v37 + 88) = v49;
    v50 = *(_OWORD *)(v38 + 120);
    *(_OWORD *)(v37 + 104) = *(_OWORD *)(v38 + 104);
    *(_OWORD *)(v37 + 120) = v50;
LABEL_27:
    v51 = *((_QWORD *)v38 + 17);
    if (*(_QWORD *)(v37 + 136))
    {
      if (v51)
      {
        *(_QWORD *)(v37 + 136) = v51;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v37 + 144) = *((_QWORD *)v38 + 18);
        swift_bridgeObjectRelease();
LABEL_32:
        v52 = *((_QWORD *)v38 + 20);
        *(_QWORD *)(v37 + 152) = *((_QWORD *)v38 + 19);
        *(_QWORD *)(v37 + 160) = v52;
        swift_bridgeObjectRelease();
        v53 = *((_QWORD *)v38 + 22);
        *(_QWORD *)(v37 + 168) = *((_QWORD *)v38 + 21);
        *(_QWORD *)(v37 + 176) = v53;
        swift_bridgeObjectRelease();
        *(_WORD *)(v37 + 184) = *((_WORD *)v38 + 92);
        return a1;
      }
      sub_23F15CC04(v37 + 136);
    }
    *(_OWORD *)(v37 + 136) = *(_OWORD *)(v38 + 136);
    goto LABEL_32;
  }
  sub_23F22D800((_QWORD *)v37);
LABEL_16:
  memcpy((void *)v37, v38, 0xBAuLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ClientActionResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F22E038(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  sub_23F131B8C();
  sub_23F17F9A8();
  if (v5)
  {
    v3 = sub_23F180064();
  }
  else
  {
    type metadata accessor for StatementOutcome(0);
    sub_23F17F9A8();
    if (!v5)
    {
      sub_23F12612C();
      return;
    }
    v3 = sub_23F2502CC();
  }
  sub_23F1315B8(v3, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ClientActionResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F22E0BC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F131B8C();
  sub_23F17F968();
  if (v7)
  {
    sub_23F18010C();
  }
  else
  {
    type metadata accessor for StatementOutcome(0);
    sub_23F17F968();
    if (!v7)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 + 1);
      sub_23F12612C();
      return;
    }
    sub_23F2502CC();
  }
  sub_23F17FE5C();
  sub_23F126098(v8, v9, v10, v11);
}

uint64_t sub_23F22E128()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F267D84();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for StatementOutcome(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for MessagePayload.ClientCustom(uint64_t a1)
{
  sub_23F1311B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  sub_23F1311B4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for MessagePayload.ClientCustom(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  sub_23F131170(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[2];
  v7 = a2[3];
  sub_23F131170(v6, v7);
  a1[2] = v6;
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for MessagePayload.ClientCustom(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v4 = *a2;
  v5 = a2[1];
  sub_23F131170(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_23F1311B4(v6, v7);
  v8 = a2[2];
  v9 = a2[3];
  sub_23F131170(v8, v9);
  v10 = a1[2];
  v11 = a1[3];
  a1[2] = v8;
  a1[3] = v9;
  sub_23F1311B4(v10, v11);
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *assignWithTake for MessagePayload.ClientCustom(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_23F1311B4(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_23F1311B4(v6, v7);
  v8 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ClientCustom(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ClientCustom(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MessagePayload.ClientCustom()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.ClientIdentifier()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.ClientInitiatedClientAction()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.ContextPrewarmRequest()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.ContextPrewarmCompleted()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.SafetyModeRelease()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.SafetyModeException()
{
  sub_23F131844();
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ExternalAgentRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = type metadata accessor for MessagePayload.RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v11 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v11))
      {
        v12 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v11);
      }
      v13 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))((char *)a1 + v13[5], (char *)a2 + v13[5], v11);
      v14 = v13[6];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v18 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      v19 = v13[7];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v22 = *((_QWORD *)v21 + 2);
      *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
      *((_QWORD *)v20 + 2) = v22;
      v23 = v13[8];
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = *(_QWORD *)v25;
      v27 = *((_QWORD *)v25 + 1);
      v28 = v25[16];
      swift_bridgeObjectRetain();
      sub_23F135C7C(v26, v27, v28);
      *(_QWORD *)v24 = v26;
      *((_QWORD *)v24 + 1) = v27;
      v24[16] = v28;
      goto LABEL_16;
    case 2:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_16;
    case 1:
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      goto LABEL_17;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_17:
  v29 = *(int *)(a3 + 20);
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v31, 1, v32))
  {
    v33 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v30, 0, 1, v32);
  }
  v34 = *(int *)(a3 + 24);
  v35 = (uint64_t *)((char *)a1 + v34);
  v36 = (uint64_t *)((char *)a2 + v34);
  v37 = v36[1];
  if (v37)
  {
    *v35 = *v36;
    v35[1] = v37;
    v35[2] = v36[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v35 = *(_OWORD *)v36;
    v35[2] = v36[2];
  }
  return a1;
}

uint64_t destroy for MessagePayload.ExternalAgentRequest(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  type metadata accessor for MessagePayload.RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v5 = sub_23F267D84();
    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = (int *)type metadata accessor for SystemPromptResolution(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1 + v6[5], v5);
    v7 = a1 + v6[6];
    type metadata accessor for SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    }
    swift_bridgeObjectRelease();
    sub_23F137210(*(_QWORD *)(a1 + v6[8]), *(_QWORD *)(a1 + v6[8] + 8), *(_BYTE *)(a1 + v6[8] + 16));
  }
  else if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_23F267D84();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  result = *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for MessagePayload.ExternalAgentRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;

  v6 = type metadata accessor for MessagePayload.RequestContent(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v9 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v9))
      {
        v10 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v9);
      }
      v11 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))((char *)a1 + v11[5], (char *)a2 + v11[5], v9);
      v12 = v11[6];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v16 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      v17 = v11[7];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      *(_DWORD *)v18 = *(_DWORD *)v19;
      v20 = *((_QWORD *)v19 + 2);
      *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
      *((_QWORD *)v18 + 2) = v20;
      v21 = v11[8];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = *(_QWORD *)v23;
      v25 = *((_QWORD *)v23 + 1);
      v26 = v23[16];
      swift_bridgeObjectRetain();
      sub_23F135C7C(v24, v25, v26);
      *(_QWORD *)v22 = v24;
      *((_QWORD *)v22 + 1) = v25;
      v22[16] = v26;
      break;
    case 2:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      break;
    case 1:
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_15;
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  v27 = *(int *)(a3 + 20);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v29, 1, v30))
  {
    v31 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v28, 0, 1, v30);
  }
  v32 = *(int *)(a3 + 24);
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  v35 = v34[1];
  if (v35)
  {
    *v33 = *v34;
    v33[1] = v35;
    v33[2] = v34[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
    v33[2] = v34[2];
  }
  return a1;
}

_QWORD *assignWithCopy for MessagePayload.ExternalAgentRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;

  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)a1, type metadata accessor for MessagePayload.RequestContent);
    v6 = type metadata accessor for MessagePayload.RequestContent(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v8 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v8))
        {
          v9 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v8);
        }
        v10 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))((char *)a1 + v10[5], (char *)a2 + v10[5], v8);
        v11 = v10[6];
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v15 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        v16 = v10[7];
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        *(_DWORD *)v17 = *(_DWORD *)v18;
        *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
        *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
        v19 = v10[8];
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = *(_QWORD *)v21;
        v23 = *((_QWORD *)v21 + 1);
        v24 = v21[16];
        swift_bridgeObjectRetain();
        sub_23F135C7C(v22, v23, v24);
        *(_QWORD *)v20 = v22;
        *((_QWORD *)v20 + 1) = v23;
        v20[16] = v24;
        break;
      case 2:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      case 1:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_16;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_16:
  v25 = *(int *)(a3 + 20);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_23F267D84();
  v29 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v26, 1, v28);
  v30 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v27, 1, v28);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v26, 0, 1, v28);
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  v31 = *(_QWORD *)(v28 - 8);
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v26, v28);
LABEL_21:
    v32 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_22;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v26, v27, v28);
LABEL_22:
  v33 = *(int *)(a3 + 24);
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  v36 = *(_QWORD *)((char *)a1 + v33 + 8);
  v37 = v35[1];
  if (v36)
  {
    if (v37)
    {
      *v34 = *v35;
      v34[1] = v35[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v34[2] = v35[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F227BA4((uint64_t)v34);
      v38 = v35[2];
      *(_OWORD *)v34 = *(_OWORD *)v35;
      v34[2] = v38;
    }
  }
  else if (v37)
  {
    *v34 = *v35;
    v34[1] = v35[1];
    v34[2] = v35[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v39 = *(_OWORD *)v35;
    v34[2] = v35[2];
    *(_OWORD *)v34 = v39;
  }
  return a1;
}

char *initializeWithTake for MessagePayload.ExternalAgentRequest(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;

  v6 = type metadata accessor for MessagePayload.RequestContent(0);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v7 = sub_23F267D84();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v9 = (int *)type metadata accessor for SystemPromptResolution(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(&a1[v9[5]], &a2[v9[5]], v7);
    v10 = v9[6];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    v15 = v9[7];
    v16 = &a1[v15];
    v17 = &a2[v15];
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
    v18 = v9[8];
    v19 = &a1[v18];
    v20 = &a2[v18];
    v19[16] = v20[16];
    *(_OWORD *)v19 = *(_OWORD *)v20;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v21 = *(int *)(a3 + 20);
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v23, 1, v24))
  {
    v25 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v22, 0, 1, v24);
  }
  v26 = *(int *)(a3 + 24);
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
  return a1;
}

char *assignWithTake for MessagePayload.ExternalAgentRequest(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)a1, type metadata accessor for MessagePayload.RequestContent);
    v6 = type metadata accessor for MessagePayload.RequestContent(0);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v7 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
      {
        v8 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
      }
      v9 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(&a1[v9[5]], &a2[v9[5]], v7);
      v10 = v9[6];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v14 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      v15 = v9[7];
      v16 = &a1[v15];
      v17 = &a2[v15];
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
      v18 = v9[8];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v19[16] = v20[16];
      *(_OWORD *)v19 = *(_OWORD *)v20;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v21 = *(int *)(a3 + 20);
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_23F267D84();
  v25 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22, 1, v24);
  v26 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v22, 0, 1, v24);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  v27 = *(_QWORD *)(v24 - 8);
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v24);
LABEL_16:
    v28 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v22, v23, v24);
LABEL_17:
  v29 = *(int *)(a3 + 24);
  v30 = (uint64_t)&a1[v29];
  v31 = &a2[v29];
  if (!*(_QWORD *)&a1[v29 + 8])
  {
LABEL_21:
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *(_QWORD *)(v30 + 16) = *((_QWORD *)v31 + 2);
    return a1;
  }
  v32 = *((_QWORD *)v31 + 1);
  if (!v32)
  {
    sub_23F227BA4(v30);
    goto LABEL_21;
  }
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_QWORD *)(v30 + 8) = v32;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v30 + 16) = *((_QWORD *)v31 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ExternalAgentRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F22F4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;

  type metadata accessor for MessagePayload.RequestContent(0);
  sub_23F17F9A8();
  if (v8)
  {
    v6 = sub_23F180064();
  }
  else
  {
    sub_23F1217E8(&qword_256DFEB98);
    sub_23F17F9A8();
    if (!v8)
    {
      sub_23F17FA58(*(_QWORD *)(a1 + *(int *)(a3 + 24) + 8));
      sub_23F12612C();
      return;
    }
    v6 = sub_23F2502CC();
  }
  sub_23F1315B8(v6, a2, v7);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ExternalAgentRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F22F534(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for MessagePayload.RequestContent(0);
  sub_23F17F968();
  if (v7)
  {
    sub_23F18010C();
  }
  else
  {
    sub_23F1217E8(&qword_256DFEB98);
    sub_23F17F968();
    if (!v7)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
      sub_23F12612C();
      return;
    }
    sub_23F2502CC();
  }
  sub_23F17FE5C();
  sub_23F126098(v8, v9, v10, v11);
}

void sub_23F22F5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F23CA84(a1, a2, a3, type metadata accessor for MessagePayload.RequestContent, (unint64_t *)&qword_256E005C0, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ExternalAgentTextQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F267D84();
    swift_bridgeObjectRetain();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v14 = *(int *)(a3 + 24);
    v15 = (uint64_t *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    if (v17)
    {
      *v15 = *v16;
      v15[1] = v17;
      v15[2] = v16[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v15[2] = v16[2];
    }
  }
  return v4;
}

uint64_t destroy for MessagePayload.ExternalAgentTextQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23F267D84();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  result = *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for MessagePayload.ExternalAgentTextQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F267D84();
  swift_bridgeObjectRetain();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = v14[1];
  if (v15)
  {
    *v13 = *v14;
    v13[1] = v15;
    v13[2] = v14[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
    v13[2] = v14[2];
  }
  return a1;
}

_QWORD *assignWithCopy for MessagePayload.ExternalAgentTextQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F267D84();
  v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = *(_QWORD *)((char *)a1 + v14 + 8);
  v18 = v16[1];
  if (v17)
  {
    if (v18)
    {
      *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15[2] = v16[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F22FA80((uint64_t)v15);
      v19 = v16[2];
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v15[2] = v19;
    }
  }
  else if (v18)
  {
    *v15 = *v16;
    v15[1] = v16[1];
    v15[2] = v16[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)v16;
    v15[2] = v16[2];
    *(_OWORD *)v15 = v20;
  }
  return a1;
}

uint64_t sub_23F22FA80(uint64_t a1)
{
  destroy for MessagePayload.ExternalAgentRequestRewriteMetadata(a1, &type metadata for MessagePayload.ExternalAgentQueryRewriteMetadata);
  return a1;
}

_OWORD *initializeWithTake for MessagePayload.ExternalAgentTextQuery(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  return a1;
}

_QWORD *assignWithTake for MessagePayload.ExternalAgentTextQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F267D84();
  v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v10);
  v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (uint64_t)a1 + v15;
  v17 = (char *)a2 + v15;
  if (!*(_QWORD *)((char *)a1 + v15 + 8))
  {
LABEL_11:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
    return a1;
  }
  v18 = *((_QWORD *)v17 + 1);
  if (!v18)
  {
    sub_23F22FA80(v16);
    goto LABEL_11;
  }
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ExternalAgentTextQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F22FCF8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F2509A4();
  if (v1)
  {
    sub_23F13188C(*(_QWORD *)(v0 + 8));
    sub_23F12612C();
  }
  else
  {
    sub_23F1217E8(&qword_256DFEB98);
    v2 = sub_23F24FEE0();
    sub_23F1315B8(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ExternalAgentTextQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F22FD4C()
{
  int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F131BA4();
  if (v2)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    sub_23F12612C();
  }
  else
  {
    sub_23F1217E8(&qword_256DFEB98);
    sub_23F17FE5C();
    sub_23F126098(v3, v4, v5, v6);
  }
}

void sub_23F22FD9C()
{
  sub_23F23054C();
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ExternalAgentSpeechQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F267D84();
    swift_bridgeObjectRetain();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)v7 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    if (v16)
    {
      *v14 = *v15;
      v14[1] = v16;
      v14[2] = v15[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v14 = *(_OWORD *)v15;
      v14[2] = v15[2];
    }
  }
  return v7;
}

uint64_t destroy for MessagePayload.ExternalAgentSpeechQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23F267D84();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  result = *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for MessagePayload.ExternalAgentSpeechQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F267D84();
  swift_bridgeObjectRetain();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = v13[1];
  if (v14)
  {
    *v12 = *v13;
    v12[1] = v14;
    v12[2] = v13[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v12[2] = v13[2];
  }
  return a1;
}

_QWORD *assignWithCopy for MessagePayload.ExternalAgentSpeechQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F267D84();
  v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = *(_QWORD *)((char *)a1 + v14 + 8);
  v18 = v16[1];
  if (v17)
  {
    if (v18)
    {
      *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15[2] = v16[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F22FA80((uint64_t)v15);
      v19 = v16[2];
      *(_OWORD *)v15 = *(_OWORD *)v16;
      v15[2] = v19;
    }
  }
  else if (v18)
  {
    *v15 = *v16;
    v15[1] = v16[1];
    v15[2] = v16[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)v16;
    v15[2] = v16[2];
    *(_OWORD *)v15 = v20;
  }
  return a1;
}

_QWORD *initializeWithTake for MessagePayload.ExternalAgentSpeechQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  return a1;
}

_QWORD *assignWithTake for MessagePayload.ExternalAgentSpeechQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F267D84();
  v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  v14 = *(int *)(a3 + 24);
  v15 = (uint64_t)a1 + v14;
  v16 = (char *)a2 + v14;
  if (!*(_QWORD *)((char *)a1 + v14 + 8))
  {
LABEL_11:
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
    return a1;
  }
  v17 = *((_QWORD *)v16 + 1);
  if (!v17)
  {
    sub_23F22FA80(v15);
    goto LABEL_11;
  }
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_QWORD *)(v15 + 8) = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ExternalAgentSpeechQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F230498()
{
  unint64_t *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F2509A4();
  if (v1)
  {
    sub_23F13188C(*v0);
    sub_23F12612C();
  }
  else
  {
    sub_23F1217E8(&qword_256DFEB98);
    v2 = sub_23F24FEE0();
    sub_23F1315B8(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ExternalAgentSpeechQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F2304EC()
{
  int v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F131BA4();
  if (v2)
  {
    *v1 = (v0 - 1);
    sub_23F12612C();
  }
  else
  {
    sub_23F1217E8(&qword_256DFEB98);
    sub_23F17FE5C();
    sub_23F126098(v3, v4, v5, v6);
  }
}

void sub_23F23053C()
{
  sub_23F23054C();
}

void sub_23F23054C()
{
  unint64_t v0;

  sub_23F178624(319, (unint64_t *)&qword_256E005C0, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
  {
    sub_23F24FED4();
    sub_23F24F6B8();
    sub_23F24FEF4();
  }
  sub_23F250B00();
}

uint64_t destroy for MessagePayload.ExternalAgentSpeechQuery.Candidate()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagePayload.ExternalAgentSpeechQuery.Candidate(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.ExternalAgentSpeechQuery.Candidate(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MessagePayload.ExternalAgentSpeechQuery.Candidate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for MessagePayload.ExternalAgentSpeechQuery.Candidate()
{
  sub_23F131844();
}

uint64_t initializeBufferWithCopyOfBuffer for MessagePayload.ExternalAgentOutcome(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    type metadata accessor for StatementOutcome(0);
    v5 = (char *)&loc_23F230758 + 4 * byte_23F279E7A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for MessagePayload.ExternalAgentOutcome(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for StatementOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v2 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      v3 = a1 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
      v4 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v3, 1, v4))
      {
        v5 = sub_23F267D84();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      return swift_bridgeObjectRelease();
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 2u:
      goto LABEL_13;
    case 3u:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for ParameterNeedsValue(0);
      goto LABEL_10;
    case 4u:
      swift_bridgeObjectRelease();
      v7 = a1 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
      v8 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 6u:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for ParameterNotAllowed(0);
      goto LABEL_10;
    case 7u:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_10:
      v9 = a1 + *(int *)(v6 + 20);
      v10 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      return swift_bridgeObjectRelease();
    case 8u:
      sub_23F137248(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
      return swift_bridgeObjectRelease();
    case 9u:
      goto LABEL_14;
    case 0xAu:
      if (*(_QWORD *)(a1 + 8) < 0x10uLL)
        return swift_bridgeObjectRelease();
LABEL_13:
      swift_bridgeObjectRelease();
LABEL_14:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    default:
      return swift_bridgeObjectRelease();
  }
}

void initializeWithCopy for MessagePayload.ExternalAgentOutcome()
{
  char *v0;

  type metadata accessor for StatementOutcome(0);
  v0 = (char *)sub_23F230E34 + 4 * byte_23F279E90[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F230E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v3 = sub_23F268078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v1, v3);
  v4 = type metadata accessor for ActionSuccess(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)(v0 + v5);
  v7 = (char *)(v1 + v5);
  v8 = type metadata accessor for ActionSuccess.UndoContext(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v8))
  {
    v9 = sub_23F1217E8(&qword_256DFEBA0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = sub_23F267D84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, v7, v10);
    v11 = *(int *)(v8 + 20);
    v12 = &v6[v11];
    v13 = &v7[v11];
    v14 = *((_QWORD *)v13 + 1);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v14;
    v15 = *(int *)(v8 + 24);
    v16 = &v6[v15];
    v17 = &v7[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v6, 0, 1, v8);
  }
  *(_BYTE *)(v0 + *(int *)(v4 + 24)) = *(_BYTE *)(v1 + *(int *)(v4 + 24));
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v0 + *(int *)(v2 + 20)) = *(_QWORD *)(v1 + *(int *)(v2 + 20));
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t assignWithCopy for MessagePayload.ExternalAgentOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v4;

  if (a1 != a2)
  {
    sub_23F1BE0BC(a1, type metadata accessor for StatementOutcome);
    type metadata accessor for StatementOutcome(0);
    v4 = (char *)&loc_23F2312EC + 4 * byte_23F279E9B[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *initializeWithTake for MessagePayload.ExternalAgentOutcome(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for StatementOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v7 = sub_23F268078();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = type metadata accessor for ActionSuccess(0);
      v9 = *(int *)(v8 + 20);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v12))
      {
        v13 = sub_23F1217E8(&qword_256DFEBA0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v32 = sub_23F267D84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v10, v11, v32);
        *(_OWORD *)&v10[*(int *)(v12 + 20)] = *(_OWORD *)&v11[*(int *)(v12 + 20)];
        *(_OWORD *)&v10[*(int *)(v12 + 24)] = *(_OWORD *)&v11[*(int *)(v12 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v12);
      }
      a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
      goto LABEL_11;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v14 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      goto LABEL_11;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      a1[24] = a2[24];
      v18 = (int *)type metadata accessor for ParameterConfirmation(0);
      v19 = v18[6];
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      *(_OWORD *)&a1[v18[7]] = *(_OWORD *)&a2[v18[7]];
      *(_OWORD *)&a1[v18[8]] = *(_OWORD *)&a2[v18[8]];
      goto LABEL_11;
    case 6u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v23 = type metadata accessor for ParameterNotAllowed(0);
      v24 = *(int *)(v23 + 20);
      v25 = &a1[v24];
      v26 = &a2[v24];
      v27 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      a1[*(int *)(v23 + 24)] = a2[*(int *)(v23 + 24)];
      goto LABEL_11;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v28 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
      v29 = &a1[v28];
      v30 = &a2[v28];
      v31 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

_BYTE *assignWithTake for MessagePayload.ExternalAgentOutcome(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)a1, type metadata accessor for StatementOutcome);
    v6 = type metadata accessor for StatementOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_23F268078();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = type metadata accessor for ActionSuccess(0);
        v9 = *(int *)(v8 + 20);
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v12))
        {
          v13 = sub_23F1217E8(&qword_256DFEBA0);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          v32 = sub_23F267D84();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v10, v11, v32);
          *(_OWORD *)&v10[*(int *)(v12 + 20)] = *(_OWORD *)&v11[*(int *)(v12 + 20)];
          *(_OWORD *)&v10[*(int *)(v12 + 24)] = *(_OWORD *)&v11[*(int *)(v12 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v12);
        }
        a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
        goto LABEL_12;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v14 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        v15 = &a1[v14];
        v16 = &a2[v14];
        v17 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        goto LABEL_12;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        v18 = (int *)type metadata accessor for ParameterConfirmation(0);
        v19 = v18[6];
        v20 = &a1[v19];
        v21 = &a2[v19];
        v22 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
        *(_OWORD *)&a1[v18[7]] = *(_OWORD *)&a2[v18[7]];
        *(_OWORD *)&a1[v18[8]] = *(_OWORD *)&a2[v18[8]];
        goto LABEL_12;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v23 = type metadata accessor for ParameterNotAllowed(0);
        v24 = *(int *)(v23 + 20);
        v25 = &a1[v24];
        v26 = &a2[v24];
        v27 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        a1[*(int *)(v23 + 24)] = a2[*(int *)(v23 + 24)];
        goto LABEL_12;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v28 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ExternalAgentOutcome()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F231DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = sub_23F2507D8();
  type metadata accessor for StatementOutcome(v5);
  sub_23F1A9650();
  if (v6)
  {
    v7 = sub_23F1A96A4();
    sub_23F1315B8(v7, v8, v9);
  }
  else
  {
    sub_23F13188C(*(_QWORD *)(v3 + *(int *)(a3 + 20)));
    sub_23F12612C();
  }
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ExternalAgentOutcome()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F231E1C()
{
  sub_23F231E28();
}

void sub_23F231E28()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_23F2510BC();
  v4(v3);
  sub_23F17F968();
  if (v5)
  {
    v6 = sub_23F1A92F4();
    sub_23F126098(v6, v7, v8, v9);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
    sub_23F12612C();
  }
}

void sub_23F231E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F22B424(a1, a2, a3, type metadata accessor for StatementOutcome);
}

void type metadata accessor for MessagePayload.ExternalAgentQueryRewriteMetadata()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.ExternalAgentRequestRewriteMetadata()
{
  sub_23F131844();
}

_QWORD *initializeBufferWithCopyOfBuffer for MessagePayload.ClientUndoRedoRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v11 = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
    *((_QWORD *)v9 + 2) = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MessagePayload.ClientUndoRedoRequest(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagePayload.ClientUndoRedoRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.ClientUndoRedoRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MessagePayload.ClientUndoRedoRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for MessagePayload.ClientUndoRedoRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ClientUndoRedoRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F232188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F131B8C();
  sub_23F1A9650();
  if (v5)
  {
    v6 = sub_23F1A96A4();
    sub_23F1315B8(v6, v7, v8);
  }
  else
  {
    sub_23F17FA58(*(_QWORD *)(a1 + *(int *)(a3 + 24) + 16));
    sub_23F12612C();
  }
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ClientUndoRedoRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F2321E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F131B8C();
  sub_23F17F968();
  if (v5)
  {
    v6 = sub_23F1A92F4();
    sub_23F126098(v6, v7, v8, v9);
  }
  else
  {
    sub_23F251164(*(int *)(a4 + 24));
    sub_23F12612C();
  }
}

void sub_23F232228()
{
  sub_23F23CECC();
}

void type metadata accessor for MessagePayload.ClientUndoRedoRequest.UndoOperation()
{
  sub_23F131844();
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ActionSummaryUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v9[2] = v10[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MessagePayload.ActionSummaryUpdate(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagePayload.ActionSummaryUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.ActionSummaryUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MessagePayload.ActionSummaryUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for MessagePayload.ActionSummaryUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ActionSummaryUpdate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ActionSummaryUpdate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F232554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F22B424(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
}

void type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary()
{
  sub_23F131844();
}

void initializeBufferWithCopyOfBuffer for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary(uint64_t a1, uint64_t a2)
{
  sub_23F23D070(a1, a2);
}

uint64_t destroy for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary(uint64_t a1)
{
  return sub_23F125D40(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void assignWithCopy for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_23F23D0B0(a1, a2, a3, (uint64_t)sub_23F125D18, (void (*)(uint64_t, uint64_t, uint64_t))sub_23F125D40);
}

void assignWithTake for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_23F23D10C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_23F125D40);
}

uint64_t sub_23F2325B8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues()
{
  sub_23F131844();
}

void type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder()
{
  sub_23F131844();
}

uint64_t initializeBufferWithCopyOfBuffer for SystemPrompt(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = sub_23F267D84();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    type metadata accessor for SystemPrompt.Prompt(0);
    swift_bridgeObjectRetain();
    v12 = (char *)&loc_23F23269C + 4 * byte_23F279EB6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v13 = *a2;
  *a1 = *a2;
  v14 = v13 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v14;
}

uint64_t destroy for SystemPrompt(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  type metadata accessor for SystemPrompt.Prompt(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 1:
      swift_bridgeObjectRelease();
      v7 = v5 + *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      v8 = sub_23F268078();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    case 2:
      swift_bridgeObjectRelease();
      v9 = v5 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
      v10 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for SystemPrompt(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  type metadata accessor for SystemPrompt.Prompt(0);
  swift_bridgeObjectRetain();
  v11 = (char *)sub_23F232A7C + 4 * byte_23F279EBE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F232A7C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2[1];
  *v1 = *v2;
  v1[1] = v3;
  v4 = v2[3];
  v1[2] = v2[2];
  v1[3] = v4;
  v1[4] = v2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for SystemPrompt(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  char *v10;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_23F1BE0BC(a1 + *(int *)(a3 + 24), type metadata accessor for SystemPrompt.Prompt);
    type metadata accessor for SystemPrompt.Prompt(0);
    v10 = (char *)&loc_23F232CC4 + 4 * byte_23F279EC2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return a1;
}

uint64_t initializeWithTake for SystemPrompt(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for SystemPrompt.Prompt(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v8[2] = v9[2];
    *((_BYTE *)v8 + 24) = *((_BYTE *)v9 + 24);
    v16 = (int *)type metadata accessor for ParameterConfirmation(0);
    v17 = v16[6];
    v18 = (char *)v8 + v17;
    v19 = (char *)v9 + v17;
    v20 = sub_23F268078();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    *(_OWORD *)((char *)v8 + v16[7]) = *(_OWORD *)((char *)v9 + v16[7]);
    *(_OWORD *)((char *)v8 + v16[8]) = *(_OWORD *)((char *)v9 + v16[8]);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      return a1;
    }
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v12 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
    v13 = (char *)v8 + v12;
    v14 = (char *)v9 + v12;
    v15 = sub_23F268078();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for SystemPrompt(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 24);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_23F1BE0BC(a1 + v12, type metadata accessor for SystemPrompt.Prompt);
    v15 = type metadata accessor for SystemPrompt.Prompt(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v13[2] = v14[2];
      *((_BYTE *)v13 + 24) = *((_BYTE *)v14 + 24);
      v21 = (int *)type metadata accessor for ParameterConfirmation(0);
      v22 = v21[6];
      v23 = (char *)v13 + v22;
      v24 = (char *)v14 + v22;
      v25 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      *(_OWORD *)((char *)v13 + v21[7]) = *(_OWORD *)((char *)v14 + v21[7]);
      *(_OWORD *)((char *)v13 + v21[8]) = *(_OWORD *)((char *)v14 + v21[8]);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        return a1;
      }
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v17 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      v18 = (char *)v13 + v17;
      v19 = (char *)v14 + v17;
      v20 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemPrompt()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F2331A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F2331B4(a1, a2, a3);
}

void sub_23F2331B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F131B8C();
  sub_23F17F9A8();
  if (v6)
  {
    v7 = sub_23F180064();
  }
  else
  {
    if ((_DWORD)a2 == 0x7FFFFFFF)
    {
      sub_23F13188C(*(_QWORD *)(a1 + *(int *)(a3 + 20) + 8));
      sub_23F12612C();
      return;
    }
    sub_23F25096C();
    v7 = sub_23F25198C();
  }
  sub_23F1315B8(v7, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SystemPrompt()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F233230(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_23F23323C(a1, a2, a3, a4);
}

void sub_23F23323C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_DWORD *)(*(_QWORD *)(sub_23F131B8C() - 8) + 84) == a3)
  {
    sub_23F18010C();
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      sub_23F25004C(*(int *)(a4 + 20));
      sub_23F131ABC();
      return;
    }
    sub_23F25096C();
    sub_23F25198C();
  }
  sub_23F17FE5C();
  sub_23F250378(v6, v7, v8, v9);
}

void sub_23F2332B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F2332C0(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for SystemPrompt.Prompt);
}

void sub_23F2332C0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;

  sub_23F2520B4();
  if (v5 <= 0x3F)
  {
    sub_23F24FED4();
    a4(319);
    if (v6 <= 0x3F)
    {
      sub_23F24FED4();
      sub_23F24F6B8();
      sub_23F24FEF4();
    }
  }
  sub_23F250B00();
}

uint64_t initializeBufferWithCopyOfBuffer for SystemPrompt.Prompt(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23F233380 + 4 * byte_23F279EC6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for SystemPrompt.Prompt(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 1:
      swift_bridgeObjectRelease();
      v3 = a1 + *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      v4 = sub_23F268078();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    case 2:
      swift_bridgeObjectRelease();
      v5 = a1 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
      v6 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for SystemPrompt.Prompt()
{
  char *v0;

  v0 = (char *)sub_23F2336C4 + 4 * byte_23F279ECE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23F2336C4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = v1[3];
  v0[2] = v1[2];
  v0[3] = v3;
  v0[4] = v1[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for SystemPrompt.Prompt(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F1BE0BC(result, type metadata accessor for SystemPrompt.Prompt);
    v2 = (char *)&loc_23F23389C + 4 * byte_23F279ED2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_QWORD *initializeWithTake for SystemPrompt.Prompt(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
    v11 = (int *)type metadata accessor for ParameterConfirmation(0);
    v12 = v11[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23F268078();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    *(_OWORD *)((char *)a1 + v11[7]) = *(_OWORD *)((char *)a2 + v11[7]);
    *(_OWORD *)((char *)a1 + v11[8]) = *(_OWORD *)((char *)a2 + v11[8]);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23F268078();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithTake for SystemPrompt.Prompt(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)a1, type metadata accessor for SystemPrompt.Prompt);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      v11 = (int *)type metadata accessor for ParameterConfirmation(0);
      v12 = v11[6];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      *(_OWORD *)((char *)a1 + v11[7]) = *(_OWORD *)((char *)a2 + v11[7]);
      *(_OWORD *)((char *)a1 + v11[8]) = *(_OWORD *)((char *)a2 + v11[8]);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v7 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F233CC8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ParameterNeedsValue(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ParameterConfirmation(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SystemPromptResolution(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))((char *)a1 + a3[5], (char *)a2 + a3[5], v7);
    }
    else
    {
      v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v10(a1, a2, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
      v10((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    }
    v11 = a3[6];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    v16 = a3[7];
    v17 = a3[8];
    v18 = (char *)a1 + v16;
    v19 = (char *)a2 + v16;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v20 = *((_QWORD *)v19 + 2);
    *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
    *((_QWORD *)v18 + 2) = v20;
    v21 = (char *)a1 + v17;
    v22 = (char *)a2 + v17;
    v23 = *(uint64_t *)((char *)a2 + v17);
    v24 = *((_QWORD *)v22 + 1);
    v25 = v22[16];
    swift_bridgeObjectRetain();
    sub_23F135C7C(v23, v24, v25);
    *(_QWORD *)v21 = v23;
    *((_QWORD *)v21 + 1) = v24;
    v21[16] = v25;
  }
  return a1;
}

uint64_t destroy for SystemPromptResolution(uint64_t a1, int *a2)
{
  uint64_t v4;
  int v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23F267D84();
  v5 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v4);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  if (!v5)
    v6(a1, v4);
  v6(a1 + a2[5], v4);
  v7 = a1 + a2[6];
  type metadata accessor for SystemPromptResolution.UserAction(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_23F268078();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  return sub_23F137210(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8), *(_BYTE *)(a1 + a2[8] + 16));
}

char *initializeWithCopy for SystemPromptResolution(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;

  v6 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(&a1[a3[5]], &a2[a3[5]], v6);
  }
  else
  {
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v8(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    v8(&a1[a3[5]], &a2[a3[5]], v6);
  }
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for SystemPromptResolution.UserAction(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_23F268078();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v14 = a3[7];
  v15 = a3[8];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_DWORD *)v16 = *(_DWORD *)v17;
  v18 = *((_QWORD *)v17 + 2);
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  *((_QWORD *)v16 + 2) = v18;
  v19 = &a1[v15];
  v20 = &a2[v15];
  v21 = *(_QWORD *)&a2[v15];
  v22 = *((_QWORD *)v20 + 1);
  v23 = v20[16];
  swift_bridgeObjectRetain();
  sub_23F135C7C(v21, v22, v23);
  *(_QWORD *)v19 = v21;
  *((_QWORD *)v19 + 1) = v22;
  v19[16] = v23;
  return a1;
}

char *assignWithCopy for SystemPromptResolution(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;

  v6 = sub_23F267D84();
  v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      v9 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      v10 = *(_QWORD *)(v6 - 8);
    }
    else
    {
      v10 = *(_QWORD *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    v10 = *(_QWORD *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      v11 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(a1, a2, v6);
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(&a1[a3[5]], &a2[a3[5]], v6);
  if (a1 != a2)
  {
    v12 = a3[6];
    v13 = &a1[v12];
    v14 = &a2[v12];
    sub_23F1BE0BC((uint64_t)&a1[v12], type metadata accessor for SystemPromptResolution.UserAction);
    v15 = type metadata accessor for SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(_QWORD *)v22;
  v24 = *((_QWORD *)v22 + 1);
  v25 = v22[16];
  sub_23F135C7C(*(_QWORD *)v22, v24, v25);
  v26 = *(_QWORD *)v21;
  v27 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v21 = v23;
  *((_QWORD *)v21 + 1) = v24;
  v28 = v21[16];
  v21[16] = v25;
  sub_23F137210(v26, v27, v28);
  return a1;
}

char *initializeWithTake for SystemPromptResolution(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;

  v6 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(&a1[a3[5]], &a2[a3[5]], v6);
  }
  else
  {
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v8(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    v8(&a1[a3[5]], &a2[a3[5]], v6);
  }
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for SystemPromptResolution.UserAction(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_23F268078();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v14 = a3[7];
  v15 = a3[8];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
  v18 = &a1[v15];
  v19 = &a2[v15];
  *(_OWORD *)v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  return a1;
}

char *assignWithTake for SystemPromptResolution(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;

  v6 = sub_23F267D84();
  v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      v9 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      v10 = *(_QWORD *)(v6 - 8);
    }
    else
    {
      v10 = *(_QWORD *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    v10 = *(_QWORD *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      v11 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(a1, a2, v6);
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(&a1[a3[5]], &a2[a3[5]], v6);
  if (a1 != a2)
  {
    v12 = a3[6];
    v13 = &a1[v12];
    v14 = &a2[v12];
    sub_23F1BE0BC((uint64_t)&a1[v12], type metadata accessor for SystemPromptResolution.UserAction);
    v15 = type metadata accessor for SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  v20 = *((_QWORD *)v19 + 2);
  *((_QWORD *)v18 + 1) = v21;
  *((_QWORD *)v18 + 2) = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = v24[16];
  v26 = *(_QWORD *)v23;
  v27 = *((_QWORD *)v23 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  v28 = v23[16];
  v23[16] = v25;
  sub_23F137210(v26, v27, v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemPromptResolution()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F2346FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  sub_23F180250();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F17F9A8();
  if (v8)
  {
    v6 = sub_23F180064();
  }
  else
  {
    sub_23F131B8C();
    sub_23F17F9A8();
    if (v8)
    {
      v7 = v9;
      v10 = a3[5];
    }
    else
    {
      type metadata accessor for SystemPromptResolution.UserAction(0);
      sub_23F17F9A8();
      if (!v11)
      {
        sub_23F17FA58(*(_QWORD *)(v4 + a3[7] + 16));
        sub_23F12612C();
        return;
      }
      v7 = v12;
      v10 = a3[6];
    }
    v6 = v4 + v10;
  }
  sub_23F1315B8(v6, v3, v7);
}

uint64_t storeEnumTagSinglePayload for SystemPromptResolution()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F234794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F180250();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F17F968();
  if (v5)
  {
    sub_23F18010C();
  }
  else
  {
    sub_23F131B8C();
    sub_23F17F968();
    if (!v5)
    {
      type metadata accessor for SystemPromptResolution.UserAction(0);
      sub_23F17F968();
      if (!v6)
      {
        sub_23F251164(*(int *)(a4 + 28));
        sub_23F12612C();
        return;
      }
    }
  }
  sub_23F17FE5C();
  sub_23F126098(v7, v8, v9, v10);
}

void sub_23F23481C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F178624(319, (unint64_t *)&qword_256E005C0, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
  {
    sub_23F267D84();
    if (v1 <= 0x3F)
    {
      type metadata accessor for SystemPromptResolution.UserAction(319);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void type metadata accessor for SystemPromptResolution.InputModality()
{
  sub_23F131844();
}

void initializeBufferWithCopyOfBuffer for SystemPromptResolution.ResolutionInput(uint64_t a1, uint64_t a2)
{
  sub_23F23D070(a1, a2);
}

uint64_t destroy for SystemPromptResolution.ResolutionInput(uint64_t a1)
{
  return sub_23F137210(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void assignWithCopy for SystemPromptResolution.ResolutionInput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_23F23D0B0(a1, a2, a3, (uint64_t)sub_23F135C7C, (void (*)(uint64_t, uint64_t, uint64_t))sub_23F137210);
}

void assignWithTake for SystemPromptResolution.ResolutionInput(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_23F23D10C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_23F137210);
}

void type metadata accessor for SystemPromptResolution.ResolutionInput()
{
  sub_23F131844();
}

uint64_t *initializeBufferWithCopyOfBuffer for SystemPromptResolution.UserAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23F268078();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for SystemPromptResolution.UserAction(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_23F268078();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for SystemPromptResolution.UserAction(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23F268078();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for SystemPromptResolution.UserAction(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)a1, type metadata accessor for SystemPromptResolution.UserAction);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23F268078();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void _s16IntelligenceFlow22SystemPromptResolutionV10UserActionOwtk_0()
{
  uint64_t v0;

  if (sub_23F24FABC() == 1)
  {
    v0 = sub_23F125F84();
    sub_23F24F4FC(v0);
    sub_23F251540();
  }
  else
  {
    sub_23F24F698();
  }
  sub_23F12612C();
}

void assignWithTake for SystemPromptResolution.UserAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F234BAC(a1, a2, a3, type metadata accessor for SystemPromptResolution.UserAction);
}

void sub_23F234BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23F24FEAC(a1, a2, a3, a4);
    if (sub_23F24F958() == 1)
    {
      v4 = sub_23F125F84();
      sub_23F24F4FC(v4);
      sub_23F251540();
    }
    else
    {
      sub_23F24F698();
    }
  }
  sub_23F12612C();
}

uint64_t sub_23F234BFC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F268078();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SystemPromptResolution.RequirementResolution(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemPromptResolution.RequirementResolution(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F234D70 + 4 * byte_23F279EDB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F234DA4 + 4 * byte_23F279ED6[v4]))();
}

uint64_t sub_23F234DA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F234DAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F234DB4);
  return result;
}

uint64_t sub_23F234DC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F234DC8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F234DCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F234DD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SystemPromptResolution.RequirementResolution()
{
  sub_23F131844();
}

void type metadata accessor for SystemPromptResolution.ActionCancellation()
{
  sub_23F131844();
}

uint64_t initializeBufferWithCopyOfBuffer for ActionResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = sub_23F267D84();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (uint64_t *)((char *)a1 + v12);
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    type metadata accessor for ActionOutcome(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = (char *)&loc_23F234F38 + 4 * byte_23F279EE0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v9 = *a2;
  *a1 = *a2;
  v10 = v9 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v10;
}

uint64_t destroy for ActionResponse(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  int v17;

  v4 = sub_23F267D84();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + a2[7];
  type metadata accessor for ActionOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      v7 = v5 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
      v8 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v8))
      {
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v7, v4);
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      goto LABEL_17;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 2u:
      goto LABEL_15;
    case 3u:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for ParameterNeedsValue(0);
      goto LABEL_12;
    case 4u:
      swift_bridgeObjectRelease();
      v10 = v5 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
      v11 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 6u:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for ParameterNotAllowed(0);
      goto LABEL_12;
    case 7u:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_12:
      v12 = v5 + *(int *)(v9 + 20);
      v13 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      goto LABEL_17;
    case 8u:
      sub_23F137248(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
      goto LABEL_17;
    case 9u:
      goto LABEL_16;
    case 0xAu:
      if (*(_QWORD *)(v5 + 8) < 0x10uLL)
        goto LABEL_17;
LABEL_15:
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
LABEL_17:
      v14 = (_QWORD *)(a1 + a2[8]);
      swift_bridgeObjectRelease();
      if (v14[2])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (v14[10])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (v14[17])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = a1 + a2[9];
      if (*(_QWORD *)v15)
      {
        swift_bridgeObjectRelease();
        v16 = *(unsigned __int8 *)(v15 + 24);
        if (v16 != 255)
          sub_23F137270(*(_QWORD *)(v15 + 8), *(_QWORD *)(v15 + 16), v16);
        v17 = *(unsigned __int8 *)(v15 + 48);
        if (v17 != 255)
          sub_23F137270(*(_QWORD *)(v15 + 32), *(_QWORD *)(v15 + 40), v17);
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    default:
      goto LABEL_17;
  }
}

void initializeWithCopy for ActionResponse(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v6 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = &a1[v9];
  v14 = &a2[v9];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  type metadata accessor for ActionOutcome(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = (char *)sub_23F235904 + 4 * byte_23F279EF6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F235904(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__dst, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v81;
  char *v82;

  v30 = sub_23F268078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v27, v28, v30);
  v31 = type metadata accessor for ActionSuccess(0);
  v32 = *(int *)(v31 + 20);
  v81 = v31;
  v82 = (char *)(v27 + v32);
  v33 = (char *)(v28 + v32);
  v34 = type metadata accessor for ActionSuccess.UndoContext(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v33, 1, v34))
  {
    v35 = sub_23F1217E8(&qword_256DFEBA0);
    memcpy(v82, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v82, v33, v29);
    v36 = *(int *)(v34 + 20);
    v37 = &v82[v36];
    v38 = &v33[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    v40 = *(int *)(v34 + 24);
    v41 = &v82[v40];
    v42 = &v33[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v82, 0, 1, v34);
  }
  *(_BYTE *)(v27 + *(int *)(v81 + 24)) = *(_BYTE *)(v28 + *(int *)(v81 + 24));
  swift_storeEnumTagMultiPayload();
  v44 = v26[8];
  v45 = v24 + v44;
  v46 = v25 + v44;
  *(_QWORD *)(v24 + v44) = *(_QWORD *)(v25 + v44);
  v47 = (_OWORD *)(v24 + v44 + 8);
  v48 = *(_QWORD *)(v25 + v44 + 16);
  swift_bridgeObjectRetain();
  if (v48)
  {
    *(_QWORD *)(v45 + 8) = *(_QWORD *)(v46 + 8);
    *(_QWORD *)(v45 + 16) = v48;
    v49 = *(_QWORD *)(v46 + 32);
    *(_QWORD *)(v45 + 24) = *(_QWORD *)(v46 + 24);
    *(_QWORD *)(v45 + 32) = v49;
    v50 = *(_QWORD *)(v46 + 48);
    *(_QWORD *)(v45 + 40) = *(_QWORD *)(v46 + 40);
    *(_QWORD *)(v45 + 48) = v50;
    v51 = *(_QWORD *)(v46 + 64);
    *(_QWORD *)(v45 + 56) = *(_QWORD *)(v46 + 56);
    *(_QWORD *)(v45 + 64) = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v52 = *(_OWORD *)(v46 + 24);
    *v47 = *(_OWORD *)(v46 + 8);
    v47[1] = v52;
    v53 = *(_OWORD *)(v46 + 56);
    v47[2] = *(_OWORD *)(v46 + 40);
    v47[3] = v53;
  }
  v54 = *(_QWORD *)(v46 + 80);
  if (v54)
  {
    *(_QWORD *)(v45 + 72) = *(_QWORD *)(v46 + 72);
    *(_QWORD *)(v45 + 80) = v54;
    v55 = *(_QWORD *)(v46 + 96);
    *(_QWORD *)(v45 + 88) = *(_QWORD *)(v46 + 88);
    *(_QWORD *)(v45 + 96) = v55;
    v56 = *(_QWORD *)(v46 + 112);
    *(_QWORD *)(v45 + 104) = *(_QWORD *)(v46 + 104);
    *(_QWORD *)(v45 + 112) = v56;
    v57 = *(_QWORD *)(v46 + 128);
    *(_QWORD *)(v45 + 120) = *(_QWORD *)(v46 + 120);
    *(_QWORD *)(v45 + 128) = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v58 = *(_OWORD *)(v46 + 88);
    *(_OWORD *)(v45 + 72) = *(_OWORD *)(v46 + 72);
    *(_OWORD *)(v45 + 88) = v58;
    v59 = *(_OWORD *)(v46 + 120);
    *(_OWORD *)(v45 + 104) = *(_OWORD *)(v46 + 104);
    *(_OWORD *)(v45 + 120) = v59;
  }
  v60 = *(_QWORD *)(v46 + 136);
  if (v60)
  {
    v61 = *(_QWORD *)(v46 + 144);
    *(_QWORD *)(v45 + 136) = v60;
    *(_QWORD *)(v45 + 144) = v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v45 + 136) = *(_OWORD *)(v46 + 136);
  }
  v62 = *(_QWORD *)(v46 + 160);
  *(_QWORD *)(v45 + 152) = *(_QWORD *)(v46 + 152);
  *(_QWORD *)(v45 + 160) = v62;
  v63 = *(_QWORD *)(v46 + 176);
  *(_QWORD *)(v45 + 168) = *(_QWORD *)(v46 + 168);
  *(_QWORD *)(v45 + 176) = v63;
  *(_WORD *)(v45 + 184) = *(_WORD *)(v46 + 184);
  v64 = v26[9];
  v65 = v24 + v64;
  v66 = v25 + v64;
  v67 = *(_QWORD *)(v25 + v64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v67)
  {
    *(_QWORD *)v65 = v67;
    v68 = *(unsigned __int8 *)(v66 + 24);
    swift_bridgeObjectRetain();
    if (v68 == 255)
    {
      *(_OWORD *)(v65 + 8) = *(_OWORD *)(v66 + 8);
      *(_BYTE *)(v65 + 24) = *(_BYTE *)(v66 + 24);
    }
    else
    {
      v69 = *(_QWORD *)(v66 + 8);
      v70 = *(_QWORD *)(v66 + 16);
      sub_23F135CDC(v69, v70, v68);
      *(_QWORD *)(v65 + 8) = v69;
      *(_QWORD *)(v65 + 16) = v70;
      *(_BYTE *)(v65 + 24) = v68;
    }
    v73 = *(unsigned __int8 *)(v66 + 48);
    if (v73 == 255)
    {
      *(_OWORD *)(v65 + 32) = *(_OWORD *)(v66 + 32);
      *(_BYTE *)(v65 + 48) = *(_BYTE *)(v66 + 48);
    }
    else
    {
      v74 = *(_QWORD *)(v66 + 32);
      v75 = *(_QWORD *)(v66 + 40);
      sub_23F135CDC(v74, v75, *(_BYTE *)(v66 + 48));
      *(_QWORD *)(v65 + 32) = v74;
      *(_QWORD *)(v65 + 40) = v75;
      *(_BYTE *)(v65 + 48) = v73;
    }
    *(_BYTE *)(v65 + 49) = *(_BYTE *)(v66 + 49);
    *(_QWORD *)(v65 + 56) = *(_QWORD *)(v66 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    v71 = *(_OWORD *)(v66 + 16);
    *(_OWORD *)v65 = *(_OWORD *)v66;
    *(_OWORD *)(v65 + 16) = v71;
    v72 = *(_OWORD *)(v66 + 48);
    *(_OWORD *)(v65 + 32) = *(_OWORD *)(v66 + 32);
    *(_OWORD *)(v65 + 48) = v72;
  }
  v76 = v26[10];
  v77 = (_QWORD *)(v24 + v76);
  v78 = (_QWORD *)(v25 + v76);
  v79 = v78[1];
  *v77 = *v78;
  v77[1] = v79;
  swift_bridgeObjectRetain();
  return v24;
}

char *assignWithCopy for ActionResponse(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  _OWORD *v21;
  __int128 *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD *v30;
  __int128 *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  __int128 *v44;
  __int128 *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  char v63;
  __int128 v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 *v70;
  __int128 *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  __int128 v81;
  uint64_t v82;
  char *v83;
  char *v84;

  v6 = sub_23F267D84();
  v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)&a1[a3[7]], type metadata accessor for ActionOutcome);
    type metadata accessor for ActionOutcome(0);
    v17 = (char *)&loc_23F236004 + 4 * byte_23F279F01[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = v19 + 8;
  v22 = (__int128 *)(v20 + 8);
  v23 = *((_QWORD *)v20 + 2);
  if (*((_QWORD *)v19 + 2))
  {
    if (v23)
    {
      *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
      *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
      *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v19 + 5) = *((_QWORD *)v20 + 5);
      *((_QWORD *)v19 + 6) = *((_QWORD *)v20 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v19 + 7) = *((_QWORD *)v20 + 7);
      *((_QWORD *)v19 + 8) = *((_QWORD *)v20 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F15CBD8((uint64_t)(v19 + 8));
      v24 = *(_OWORD *)(v20 + 56);
      v26 = *v22;
      v25 = *(_OWORD *)(v20 + 24);
      *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
      *(_OWORD *)(v19 + 56) = v24;
      *v21 = v26;
      *(_OWORD *)(v19 + 24) = v25;
    }
  }
  else if (v23)
  {
    *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
    *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
    *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
    *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
    *((_QWORD *)v19 + 5) = *((_QWORD *)v20 + 5);
    *((_QWORD *)v19 + 6) = *((_QWORD *)v20 + 6);
    *((_QWORD *)v19 + 7) = *((_QWORD *)v20 + 7);
    *((_QWORD *)v19 + 8) = *((_QWORD *)v20 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *v22;
    v28 = *(_OWORD *)(v20 + 24);
    v29 = *(_OWORD *)(v20 + 56);
    *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
    *(_OWORD *)(v19 + 56) = v29;
    *v21 = v27;
    *(_OWORD *)(v19 + 24) = v28;
  }
  v30 = v19 + 72;
  v31 = (__int128 *)(v20 + 72);
  v32 = *((_QWORD *)v20 + 10);
  if (*((_QWORD *)v19 + 10))
  {
    if (v32)
    {
      *((_QWORD *)v19 + 9) = *((_QWORD *)v20 + 9);
      *((_QWORD *)v19 + 10) = *((_QWORD *)v20 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v19 + 11) = *((_QWORD *)v20 + 11);
      *((_QWORD *)v19 + 12) = *((_QWORD *)v20 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v19 + 13) = *((_QWORD *)v20 + 13);
      *((_QWORD *)v19 + 14) = *((_QWORD *)v20 + 14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v19 + 15) = *((_QWORD *)v20 + 15);
      *((_QWORD *)v19 + 16) = *((_QWORD *)v20 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F15CBD8((uint64_t)(v19 + 72));
      v33 = *(_OWORD *)(v20 + 120);
      v35 = *v31;
      v34 = *(_OWORD *)(v20 + 88);
      *(_OWORD *)(v19 + 104) = *(_OWORD *)(v20 + 104);
      *(_OWORD *)(v19 + 120) = v33;
      *v30 = v35;
      *(_OWORD *)(v19 + 88) = v34;
    }
  }
  else if (v32)
  {
    *((_QWORD *)v19 + 9) = *((_QWORD *)v20 + 9);
    *((_QWORD *)v19 + 10) = *((_QWORD *)v20 + 10);
    *((_QWORD *)v19 + 11) = *((_QWORD *)v20 + 11);
    *((_QWORD *)v19 + 12) = *((_QWORD *)v20 + 12);
    *((_QWORD *)v19 + 13) = *((_QWORD *)v20 + 13);
    *((_QWORD *)v19 + 14) = *((_QWORD *)v20 + 14);
    *((_QWORD *)v19 + 15) = *((_QWORD *)v20 + 15);
    *((_QWORD *)v19 + 16) = *((_QWORD *)v20 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v36 = *v31;
    v37 = *(_OWORD *)(v20 + 88);
    v38 = *(_OWORD *)(v20 + 120);
    *(_OWORD *)(v19 + 104) = *(_OWORD *)(v20 + 104);
    *(_OWORD *)(v19 + 120) = v38;
    *v30 = v36;
    *(_OWORD *)(v19 + 88) = v37;
  }
  v39 = *((_QWORD *)v20 + 17);
  if (*((_QWORD *)v19 + 17))
  {
    if (v39)
    {
      *((_QWORD *)v19 + 17) = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v19 + 18) = *((_QWORD *)v20 + 18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_23F15CC04((uint64_t)(v19 + 136));
  }
  else if (v39)
  {
    *((_QWORD *)v19 + 17) = v39;
    *((_QWORD *)v19 + 18) = *((_QWORD *)v20 + 18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_31;
  }
  *(_OWORD *)(v19 + 136) = *(_OWORD *)(v20 + 136);
LABEL_31:
  *((_QWORD *)v19 + 19) = *((_QWORD *)v20 + 19);
  *((_QWORD *)v19 + 20) = *((_QWORD *)v20 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v19 + 21) = *((_QWORD *)v20 + 21);
  *((_QWORD *)v19 + 22) = *((_QWORD *)v20 + 22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19[184] = v20[184];
  v19[185] = v20[185];
  v40 = a3[9];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = *(_QWORD *)&a2[v40];
  if (*(_QWORD *)&a1[v40])
  {
    if (v43)
    {
      *(_QWORD *)v41 = v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v44 = (__int128 *)(v41 + 8);
      v45 = (__int128 *)(v42 + 8);
      v46 = v42[24];
      if (v41[24] == 255)
      {
        if (v46 == 255)
        {
          v69 = *v45;
          v41[24] = v42[24];
          *v44 = v69;
        }
        else
        {
          v58 = *((_QWORD *)v42 + 1);
          v59 = *((_QWORD *)v42 + 2);
          sub_23F135CDC(v58, v59, v42[24]);
          *((_QWORD *)v41 + 1) = v58;
          *((_QWORD *)v41 + 2) = v59;
          v41[24] = v46;
        }
      }
      else if (v46 == 255)
      {
        sub_23F1640D0((uint64_t)(v41 + 8));
        v63 = v42[24];
        *v44 = *v45;
        v41[24] = v63;
      }
      else
      {
        v47 = *((_QWORD *)v42 + 1);
        v48 = *((_QWORD *)v42 + 2);
        sub_23F135CDC(v47, v48, v42[24]);
        v49 = *((_QWORD *)v41 + 1);
        v50 = *((_QWORD *)v41 + 2);
        *((_QWORD *)v41 + 1) = v47;
        *((_QWORD *)v41 + 2) = v48;
        v51 = v41[24];
        v41[24] = v46;
        sub_23F137270(v49, v50, v51);
      }
      v70 = (__int128 *)(v41 + 32);
      v71 = (__int128 *)(v42 + 32);
      v72 = v42[48];
      if (v41[48] == 255)
      {
        if (v72 == 255)
        {
          v81 = *v71;
          v41[48] = v42[48];
          *v70 = v81;
        }
        else
        {
          v78 = *((_QWORD *)v42 + 4);
          v79 = *((_QWORD *)v42 + 5);
          sub_23F135CDC(v78, v79, v42[48]);
          *((_QWORD *)v41 + 4) = v78;
          *((_QWORD *)v41 + 5) = v79;
          v41[48] = v72;
        }
      }
      else if (v72 == 255)
      {
        sub_23F1640D0((uint64_t)(v41 + 32));
        v80 = v42[48];
        *v70 = *v71;
        v41[48] = v80;
      }
      else
      {
        v73 = *((_QWORD *)v42 + 4);
        v74 = *((_QWORD *)v42 + 5);
        sub_23F135CDC(v73, v74, v42[48]);
        v75 = *((_QWORD *)v41 + 4);
        v76 = *((_QWORD *)v41 + 5);
        *((_QWORD *)v41 + 4) = v73;
        *((_QWORD *)v41 + 5) = v74;
        v77 = v41[48];
        v41[48] = v72;
        sub_23F137270(v75, v76, v77);
      }
      v41[49] = v42[49];
      *((_QWORD *)v41 + 7) = *((_QWORD *)v42 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F2369D0((uint64_t)&a1[v40]);
      v55 = *((_OWORD *)v42 + 3);
      v57 = *(_OWORD *)v42;
      v56 = *((_OWORD *)v42 + 1);
      *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
      *((_OWORD *)v41 + 3) = v55;
      *(_OWORD *)v41 = v57;
      *((_OWORD *)v41 + 1) = v56;
    }
  }
  else if (v43)
  {
    *(_QWORD *)v41 = v43;
    v52 = v42[24];
    swift_bridgeObjectRetain();
    if (v52 == 255)
    {
      v64 = *(_OWORD *)(v42 + 8);
      v41[24] = v42[24];
      *(_OWORD *)(v41 + 8) = v64;
    }
    else
    {
      v53 = *((_QWORD *)v42 + 1);
      v54 = *((_QWORD *)v42 + 2);
      sub_23F135CDC(v53, v54, v52);
      *((_QWORD *)v41 + 1) = v53;
      *((_QWORD *)v41 + 2) = v54;
      v41[24] = v52;
    }
    v65 = v42[48];
    if (v65 == 255)
    {
      v68 = *((_OWORD *)v42 + 2);
      v41[48] = v42[48];
      *((_OWORD *)v41 + 2) = v68;
    }
    else
    {
      v66 = *((_QWORD *)v42 + 4);
      v67 = *((_QWORD *)v42 + 5);
      sub_23F135CDC(v66, v67, v42[48]);
      *((_QWORD *)v41 + 4) = v66;
      *((_QWORD *)v41 + 5) = v67;
      v41[48] = v65;
    }
    v41[49] = v42[49];
    *((_QWORD *)v41 + 7) = *((_QWORD *)v42 + 7);
    swift_bridgeObjectRetain();
  }
  else
  {
    v60 = *(_OWORD *)v42;
    v61 = *((_OWORD *)v42 + 1);
    v62 = *((_OWORD *)v42 + 3);
    *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
    *((_OWORD *)v41 + 3) = v62;
    *(_OWORD *)v41 = v60;
    *((_OWORD *)v41 + 1) = v61;
  }
  v82 = a3[10];
  v83 = &a1[v82];
  v84 = &a2[v82];
  *(_QWORD *)v83 = *(_QWORD *)v84;
  *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F2369D0(uint64_t a1)
{
  destroy for ResponseOutput(a1);
  return a1;
}

char *initializeWithTake for ActionResponse(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v44;

  v6 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  v9 = a3[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for ActionOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v13 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      v44 = type metadata accessor for ActionSuccess(0);
      v14 = *(int *)(v44 + 20);
      v15 = &v10[v14];
      v16 = &v11[v14];
      v17 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v17))
      {
        v18 = sub_23F1217E8(&qword_256DFEBA0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v15, v16, v6);
        *(_OWORD *)&v15[*(int *)(v17 + 20)] = *(_OWORD *)&v16[*(int *)(v17 + 20)];
        *(_OWORD *)&v15[*(int *)(v17 + 24)] = *(_OWORD *)&v16[*(int *)(v17 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v15, 0, 1, v17);
      }
      v10[*(int *)(v44 + 24)] = v11[*(int *)(v44 + 24)];
      goto LABEL_14;
    case 3u:
      *(_OWORD *)v10 = *(_OWORD *)v11;
      v19 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      v20 = &v10[v19];
      v21 = &v11[v19];
      v22 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      goto LABEL_14;
    case 4u:
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      v10[24] = v11[24];
      v23 = (int *)type metadata accessor for ParameterConfirmation(0);
      v24 = v23[6];
      v25 = &v10[v24];
      v26 = &v11[v24];
      v27 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      *(_OWORD *)&v10[v23[7]] = *(_OWORD *)&v11[v23[7]];
      *(_OWORD *)&v10[v23[8]] = *(_OWORD *)&v11[v23[8]];
      goto LABEL_14;
    case 6u:
      *(_OWORD *)v10 = *(_OWORD *)v11;
      v28 = type metadata accessor for ParameterNotAllowed(0);
      v29 = *(int *)(v28 + 20);
      v30 = &v10[v29];
      v31 = &v11[v29];
      v32 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      v10[*(int *)(v28 + 24)] = v11[*(int *)(v28 + 24)];
      goto LABEL_14;
    case 7u:
      *(_OWORD *)v10 = *(_OWORD *)v11;
      v33 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
      v34 = &v10[v33];
      v35 = &v11[v33];
      v36 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      break;
  }
  memcpy(&a1[a3[8]], &a2[a3[8]], 0xBAuLL);
  v37 = a3[9];
  v38 = a3[10];
  v39 = &a1[v37];
  v40 = &a2[v37];
  v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v41;
  v42 = *((_OWORD *)v40 + 3);
  *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
  *((_OWORD *)v39 + 3) = v42;
  *(_OWORD *)&a1[v38] = *(_OWORD *)&a2[v38];
  return a1;
}

char *assignWithTake for ActionResponse(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  _OWORD *v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  _OWORD *v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;

  v6 = sub_23F267D84();
  v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v21 = a3[7];
    v22 = &a1[v21];
    v23 = &a2[v21];
    sub_23F1BE0BC((uint64_t)&a1[v21], type metadata accessor for ActionOutcome);
    v24 = type metadata accessor for ActionOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v25 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
        v88 = type metadata accessor for ActionSuccess(0);
        v26 = *(int *)(v88 + 20);
        v27 = &v22[v26];
        v28 = &v23[v26];
        v29 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v28, 1, v29))
        {
          v30 = sub_23F1217E8(&qword_256DFEBA0);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v27, v28, v6);
          *(_OWORD *)&v27[*(int *)(v29 + 20)] = *(_OWORD *)&v28[*(int *)(v29 + 20)];
          *(_OWORD *)&v27[*(int *)(v29 + 24)] = *(_OWORD *)&v28[*(int *)(v29 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v27, 0, 1, v29);
        }
        v22[*(int *)(v88 + 24)] = v23[*(int *)(v88 + 24)];
        goto LABEL_19;
      case 3u:
        *(_OWORD *)v22 = *(_OWORD *)v23;
        v31 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        v32 = &v22[v31];
        v33 = &v23[v31];
        v34 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
        goto LABEL_19;
      case 4u:
        *(_OWORD *)v22 = *(_OWORD *)v23;
        *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
        v22[24] = v23[24];
        v35 = (int *)type metadata accessor for ParameterConfirmation(0);
        v36 = v35[6];
        v37 = &v22[v36];
        v38 = &v23[v36];
        v39 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        *(_OWORD *)&v22[v35[7]] = *(_OWORD *)&v23[v35[7]];
        *(_OWORD *)&v22[v35[8]] = *(_OWORD *)&v23[v35[8]];
        goto LABEL_19;
      case 6u:
        *(_OWORD *)v22 = *(_OWORD *)v23;
        v40 = type metadata accessor for ParameterNotAllowed(0);
        v41 = *(int *)(v40 + 20);
        v42 = &v22[v41];
        v43 = &v23[v41];
        v44 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        v22[*(int *)(v40 + 24)] = v23[*(int *)(v40 + 24)];
        goto LABEL_19;
      case 7u:
        *(_OWORD *)v22 = *(_OWORD *)v23;
        v45 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        v46 = &v22[v45];
        v47 = &v23[v45];
        v48 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        break;
    }
  }
  v49 = a3[8];
  v50 = &a1[v49];
  v51 = &a2[v49];
  *(_QWORD *)&a1[v49] = *(_QWORD *)&a2[v49];
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v50 + 2))
  {
    v52 = *((_QWORD *)v51 + 2);
    if (v52)
    {
      *((_QWORD *)v50 + 1) = *((_QWORD *)v51 + 1);
      *((_QWORD *)v50 + 2) = v52;
      swift_bridgeObjectRelease();
      v53 = *((_QWORD *)v51 + 4);
      *((_QWORD *)v50 + 3) = *((_QWORD *)v51 + 3);
      *((_QWORD *)v50 + 4) = v53;
      swift_bridgeObjectRelease();
      v54 = *((_QWORD *)v51 + 6);
      *((_QWORD *)v50 + 5) = *((_QWORD *)v51 + 5);
      *((_QWORD *)v50 + 6) = v54;
      swift_bridgeObjectRelease();
      v55 = *((_QWORD *)v51 + 8);
      *((_QWORD *)v50 + 7) = *((_QWORD *)v51 + 7);
      *((_QWORD *)v50 + 8) = v55;
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    sub_23F15CBD8((uint64_t)(v50 + 8));
  }
  v56 = *(_OWORD *)(v51 + 24);
  *(_OWORD *)(v50 + 8) = *(_OWORD *)(v51 + 8);
  *(_OWORD *)(v50 + 24) = v56;
  v57 = *(_OWORD *)(v51 + 56);
  *(_OWORD *)(v50 + 40) = *(_OWORD *)(v51 + 40);
  *(_OWORD *)(v50 + 56) = v57;
LABEL_25:
  if (*((_QWORD *)v50 + 10))
  {
    v58 = *((_QWORD *)v51 + 10);
    if (v58)
    {
      *((_QWORD *)v50 + 9) = *((_QWORD *)v51 + 9);
      *((_QWORD *)v50 + 10) = v58;
      swift_bridgeObjectRelease();
      v59 = *((_QWORD *)v51 + 12);
      *((_QWORD *)v50 + 11) = *((_QWORD *)v51 + 11);
      *((_QWORD *)v50 + 12) = v59;
      swift_bridgeObjectRelease();
      v60 = *((_QWORD *)v51 + 14);
      *((_QWORD *)v50 + 13) = *((_QWORD *)v51 + 13);
      *((_QWORD *)v50 + 14) = v60;
      swift_bridgeObjectRelease();
      v61 = *((_QWORD *)v51 + 16);
      *((_QWORD *)v50 + 15) = *((_QWORD *)v51 + 15);
      *((_QWORD *)v50 + 16) = v61;
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    sub_23F15CBD8((uint64_t)(v50 + 72));
  }
  v62 = *(_OWORD *)(v51 + 88);
  *(_OWORD *)(v50 + 72) = *(_OWORD *)(v51 + 72);
  *(_OWORD *)(v50 + 88) = v62;
  v63 = *(_OWORD *)(v51 + 120);
  *(_OWORD *)(v50 + 104) = *(_OWORD *)(v51 + 104);
  *(_OWORD *)(v50 + 120) = v63;
LABEL_30:
  v64 = *((_QWORD *)v51 + 17);
  if (*((_QWORD *)v50 + 17))
  {
    if (v64)
    {
      *((_QWORD *)v50 + 17) = v64;
      swift_bridgeObjectRelease();
      *((_QWORD *)v50 + 18) = *((_QWORD *)v51 + 18);
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    sub_23F15CC04((uint64_t)(v50 + 136));
  }
  *(_OWORD *)(v50 + 136) = *(_OWORD *)(v51 + 136);
LABEL_35:
  v65 = *((_QWORD *)v51 + 20);
  *((_QWORD *)v50 + 19) = *((_QWORD *)v51 + 19);
  *((_QWORD *)v50 + 20) = v65;
  swift_bridgeObjectRelease();
  v66 = *((_QWORD *)v51 + 22);
  *((_QWORD *)v50 + 21) = *((_QWORD *)v51 + 21);
  *((_QWORD *)v50 + 22) = v66;
  swift_bridgeObjectRelease();
  *((_WORD *)v50 + 92) = *((_WORD *)v51 + 92);
  v67 = a3[9];
  v68 = (uint64_t)&a1[v67];
  v69 = &a2[v67];
  if (*(_QWORD *)&a1[v67])
  {
    if (*(_QWORD *)v69)
    {
      *(_QWORD *)v68 = *(_QWORD *)v69;
      swift_bridgeObjectRelease();
      v70 = v69 + 8;
      v71 = *(unsigned __int8 *)(v68 + 24);
      if (v71 != 255)
      {
        v72 = v69[24];
        if (v72 != 255)
        {
          v73 = *(_QWORD *)(v68 + 8);
          v74 = *(_QWORD *)(v68 + 16);
          *(_OWORD *)(v68 + 8) = *v70;
          *(_BYTE *)(v68 + 24) = v72;
          sub_23F137270(v73, v74, v71);
          goto LABEL_44;
        }
        sub_23F1640D0(v68 + 8);
      }
      *(_OWORD *)(v68 + 8) = *v70;
      *(_BYTE *)(v68 + 24) = v69[24];
LABEL_44:
      v77 = v69 + 32;
      v78 = *(unsigned __int8 *)(v68 + 48);
      if (v78 != 255)
      {
        v79 = v69[48];
        if (v79 != 255)
        {
          v80 = *(_QWORD *)(v68 + 32);
          v81 = *(_QWORD *)(v68 + 40);
          *(_OWORD *)(v68 + 32) = *v77;
          *(_BYTE *)(v68 + 48) = v79;
          sub_23F137270(v80, v81, v78);
LABEL_49:
          *(_BYTE *)(v68 + 49) = v69[49];
          *(_QWORD *)(v68 + 56) = *((_QWORD *)v69 + 7);
          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
        sub_23F1640D0(v68 + 32);
      }
      *(_OWORD *)(v68 + 32) = *v77;
      *(_BYTE *)(v68 + 48) = v69[48];
      goto LABEL_49;
    }
    sub_23F2369D0(v68);
  }
  v75 = *((_OWORD *)v69 + 1);
  *(_OWORD *)v68 = *(_OWORD *)v69;
  *(_OWORD *)(v68 + 16) = v75;
  v76 = *((_OWORD *)v69 + 3);
  *(_OWORD *)(v68 + 32) = *((_OWORD *)v69 + 2);
  *(_OWORD *)(v68 + 48) = v76;
LABEL_50:
  v82 = a3[10];
  v83 = &a1[v82];
  v84 = &a2[v82];
  v86 = *(_QWORD *)v84;
  v85 = *((_QWORD *)v84 + 1);
  *(_QWORD *)v83 = v86;
  *((_QWORD *)v83 + 1) = v85;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F237448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F239554(a1, a2, a3);
}

uint64_t storeEnumTagSinglePayload for ActionResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F237460(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_23F2395E4(a1, a2, a3, a4);
}

void sub_23F23746C()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F178624(319, (unint64_t *)&qword_256E005C0, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ActionOutcome(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SystemResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = sub_23F267D84();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = *((_QWORD *)v13 + 2);
    if (v14 == 1)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
    }
    else
    {
      *(_DWORD *)v12 = *(_DWORD *)v13;
      *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
      *((_QWORD *)v12 + 2) = v14;
      swift_bridgeObjectRetain();
    }
    v15 = *(int *)(a3 + 24);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    type metadata accessor for StatementOutcome(0);
    swift_bridgeObjectRetain();
    v19 = (char *)&loc_23F23768C + 4 * byte_23F279F1C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v9 = *a2;
  *a1 = *a2;
  v10 = v9 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v10;
}

uint64_t destroy for SystemResponse(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;

  v4 = sub_23F267D84();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + a2[5] + 16) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + a2[7];
  type metadata accessor for StatementOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      v7 = v5 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
      v8 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v8))
      {
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v7, v4);
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      goto LABEL_19;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 2u:
      goto LABEL_17;
    case 3u:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for ParameterNeedsValue(0);
      goto LABEL_14;
    case 4u:
      swift_bridgeObjectRelease();
      v10 = v5 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
      v11 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 6u:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for ParameterNotAllowed(0);
      goto LABEL_14;
    case 7u:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_14:
      v12 = v5 + *(int *)(v9 + 20);
      v13 = sub_23F268078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      goto LABEL_19;
    case 8u:
      sub_23F137248(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
      goto LABEL_19;
    case 9u:
      goto LABEL_18;
    case 0xAu:
      if (*(_QWORD *)(v5 + 8) < 0x10uLL)
        goto LABEL_19;
LABEL_17:
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
LABEL_19:
      v14 = a1 + a2[8];
      if (*(_QWORD *)v14)
      {
        swift_bridgeObjectRelease();
        v15 = *(unsigned __int8 *)(v14 + 24);
        if (v15 != 255)
          sub_23F137270(*(_QWORD *)(v14 + 8), *(_QWORD *)(v14 + 16), v15);
        v16 = *(unsigned __int8 *)(v14 + 48);
        if (v16 != 255)
          sub_23F137270(*(_QWORD *)(v14 + 32), *(_QWORD *)(v14 + 40), v16);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    default:
      goto LABEL_19;
  }
}

void initializeWithCopy for SystemResponse(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v6 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *((_QWORD *)v10 + 2);
  if (v11 == 1)
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
  }
  else
  {
    *(_DWORD *)v9 = *(_DWORD *)v10;
    *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
    *((_QWORD *)v9 + 2) = v11;
    swift_bridgeObjectRetain();
  }
  v12 = *(int *)(a3 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  type metadata accessor for StatementOutcome(0);
  swift_bridgeObjectRetain();
  v16 = (char *)sub_23F237EF0 + 4 * byte_23F279F32[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F237EF0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__dst, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v62;
  char *v63;

  v30 = sub_23F268078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v27, v28, v30);
  v31 = type metadata accessor for ActionSuccess(0);
  v32 = *(int *)(v31 + 20);
  v62 = v31;
  v63 = (char *)(v27 + v32);
  v33 = (char *)(v28 + v32);
  v34 = type metadata accessor for ActionSuccess.UndoContext(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v33, 1, v34))
  {
    v35 = sub_23F1217E8(&qword_256DFEBA0);
    memcpy(v63, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v63, v33, v29);
    v36 = *(int *)(v34 + 20);
    v37 = &v63[v36];
    v38 = &v33[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    v40 = *(int *)(v34 + 24);
    v41 = &v63[v40];
    v42 = &v33[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v63, 0, 1, v34);
  }
  *(_BYTE *)(v27 + *(int *)(v62 + 24)) = *(_BYTE *)(v28 + *(int *)(v62 + 24));
  swift_storeEnumTagMultiPayload();
  v44 = v26[8];
  v45 = v24 + v44;
  v46 = v25 + v44;
  v47 = *(_QWORD *)(v25 + v44);
  if (v47)
  {
    *(_QWORD *)v45 = v47;
    v48 = *(unsigned __int8 *)(v46 + 24);
    swift_bridgeObjectRetain();
    if (v48 == 255)
    {
      *(_OWORD *)(v45 + 8) = *(_OWORD *)(v46 + 8);
      *(_BYTE *)(v45 + 24) = *(_BYTE *)(v46 + 24);
    }
    else
    {
      v49 = *(_QWORD *)(v46 + 8);
      v50 = *(_QWORD *)(v46 + 16);
      sub_23F135CDC(v49, v50, v48);
      *(_QWORD *)(v45 + 8) = v49;
      *(_QWORD *)(v45 + 16) = v50;
      *(_BYTE *)(v45 + 24) = v48;
    }
    v53 = *(unsigned __int8 *)(v46 + 48);
    if (v53 == 255)
    {
      *(_OWORD *)(v45 + 32) = *(_OWORD *)(v46 + 32);
      *(_BYTE *)(v45 + 48) = *(_BYTE *)(v46 + 48);
    }
    else
    {
      v54 = *(_QWORD *)(v46 + 32);
      v55 = *(_QWORD *)(v46 + 40);
      sub_23F135CDC(v54, v55, *(_BYTE *)(v46 + 48));
      *(_QWORD *)(v45 + 32) = v54;
      *(_QWORD *)(v45 + 40) = v55;
      *(_BYTE *)(v45 + 48) = v53;
    }
    *(_BYTE *)(v45 + 49) = *(_BYTE *)(v46 + 49);
    *(_QWORD *)(v45 + 56) = *(_QWORD *)(v46 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    v51 = *(_OWORD *)(v46 + 16);
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *(_OWORD *)(v45 + 16) = v51;
    v52 = *(_OWORD *)(v46 + 48);
    *(_OWORD *)(v45 + 32) = *(_OWORD *)(v46 + 32);
    *(_OWORD *)(v45 + 48) = v52;
  }
  v56 = v26[9];
  v57 = v26[10];
  v58 = (_QWORD *)(v24 + v56);
  v59 = (_QWORD *)(v25 + v56);
  v60 = v59[1];
  *v58 = *v59;
  v58[1] = v60;
  *(_QWORD *)(v24 + v57) = *(_QWORD *)(v25 + v57);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v24;
}

char *assignWithCopy for SystemResponse(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  __int128 *v26;
  __int128 *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char v45;
  __int128 v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 *v52;
  __int128 *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;

  v6 = sub_23F267D84();
  v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = (uint64_t)&a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)&a1[v11 + 16];
  v15 = *(_QWORD *)&a2[v11 + 16];
  if (v14 == 1)
  {
    if (v15 == 1)
    {
      v16 = *(_OWORD *)v13;
      *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
      *(_OWORD *)v12 = v16;
    }
    else
    {
      *(_DWORD *)v12 = *(_DWORD *)v13;
      *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
      *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_23F238BF0(v12);
    v17 = *((_QWORD *)v13 + 2);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_QWORD *)(v12 + 16) = v17;
  }
  else
  {
    *(_DWORD *)v12 = *(_DWORD *)v13;
    *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
    *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_23F1BE0BC((uint64_t)&a1[a3[7]], type metadata accessor for StatementOutcome);
    type metadata accessor for StatementOutcome(0);
    v21 = (char *)&loc_23F238540 + 4 * byte_23F279F3D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *(_QWORD *)&a2[v22];
  if (*(_QWORD *)&a1[v22])
  {
    if (v25)
    {
      *(_QWORD *)v23 = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v26 = (__int128 *)(v23 + 8);
      v27 = (__int128 *)(v24 + 8);
      v28 = v24[24];
      if (v23[24] == 255)
      {
        if (v28 == 255)
        {
          v51 = *v27;
          v23[24] = v24[24];
          *v26 = v51;
        }
        else
        {
          v40 = *((_QWORD *)v24 + 1);
          v41 = *((_QWORD *)v24 + 2);
          sub_23F135CDC(v40, v41, v24[24]);
          *((_QWORD *)v23 + 1) = v40;
          *((_QWORD *)v23 + 2) = v41;
          v23[24] = v28;
        }
      }
      else if (v28 == 255)
      {
        sub_23F1640D0((uint64_t)(v23 + 8));
        v45 = v24[24];
        *v26 = *v27;
        v23[24] = v45;
      }
      else
      {
        v29 = *((_QWORD *)v24 + 1);
        v30 = *((_QWORD *)v24 + 2);
        sub_23F135CDC(v29, v30, v24[24]);
        v31 = *((_QWORD *)v23 + 1);
        v32 = *((_QWORD *)v23 + 2);
        *((_QWORD *)v23 + 1) = v29;
        *((_QWORD *)v23 + 2) = v30;
        v33 = v23[24];
        v23[24] = v28;
        sub_23F137270(v31, v32, v33);
      }
      v52 = (__int128 *)(v23 + 32);
      v53 = (__int128 *)(v24 + 32);
      v54 = v24[48];
      if (v23[48] == 255)
      {
        if (v54 == 255)
        {
          v63 = *v53;
          v23[48] = v24[48];
          *v52 = v63;
        }
        else
        {
          v60 = *((_QWORD *)v24 + 4);
          v61 = *((_QWORD *)v24 + 5);
          sub_23F135CDC(v60, v61, v24[48]);
          *((_QWORD *)v23 + 4) = v60;
          *((_QWORD *)v23 + 5) = v61;
          v23[48] = v54;
        }
      }
      else if (v54 == 255)
      {
        sub_23F1640D0((uint64_t)(v23 + 32));
        v62 = v24[48];
        *v52 = *v53;
        v23[48] = v62;
      }
      else
      {
        v55 = *((_QWORD *)v24 + 4);
        v56 = *((_QWORD *)v24 + 5);
        sub_23F135CDC(v55, v56, v24[48]);
        v57 = *((_QWORD *)v23 + 4);
        v58 = *((_QWORD *)v23 + 5);
        *((_QWORD *)v23 + 4) = v55;
        *((_QWORD *)v23 + 5) = v56;
        v59 = v23[48];
        v23[48] = v54;
        sub_23F137270(v57, v58, v59);
      }
      v23[49] = v24[49];
      *((_QWORD *)v23 + 7) = *((_QWORD *)v24 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F2369D0((uint64_t)&a1[v22]);
      v37 = *((_OWORD *)v24 + 3);
      v39 = *(_OWORD *)v24;
      v38 = *((_OWORD *)v24 + 1);
      *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
      *((_OWORD *)v23 + 3) = v37;
      *(_OWORD *)v23 = v39;
      *((_OWORD *)v23 + 1) = v38;
    }
  }
  else if (v25)
  {
    *(_QWORD *)v23 = v25;
    v34 = v24[24];
    swift_bridgeObjectRetain();
    if (v34 == 255)
    {
      v46 = *(_OWORD *)(v24 + 8);
      v23[24] = v24[24];
      *(_OWORD *)(v23 + 8) = v46;
    }
    else
    {
      v35 = *((_QWORD *)v24 + 1);
      v36 = *((_QWORD *)v24 + 2);
      sub_23F135CDC(v35, v36, v34);
      *((_QWORD *)v23 + 1) = v35;
      *((_QWORD *)v23 + 2) = v36;
      v23[24] = v34;
    }
    v47 = v24[48];
    if (v47 == 255)
    {
      v50 = *((_OWORD *)v24 + 2);
      v23[48] = v24[48];
      *((_OWORD *)v23 + 2) = v50;
    }
    else
    {
      v48 = *((_QWORD *)v24 + 4);
      v49 = *((_QWORD *)v24 + 5);
      sub_23F135CDC(v48, v49, v24[48]);
      *((_QWORD *)v23 + 4) = v48;
      *((_QWORD *)v23 + 5) = v49;
      v23[48] = v47;
    }
    v23[49] = v24[49];
    *((_QWORD *)v23 + 7) = *((_QWORD *)v24 + 7);
    swift_bridgeObjectRetain();
  }
  else
  {
    v42 = *(_OWORD *)v24;
    v43 = *((_OWORD *)v24 + 1);
    v44 = *((_OWORD *)v24 + 3);
    *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
    *((_OWORD *)v23 + 3) = v44;
    *(_OWORD *)v23 = v42;
    *((_OWORD *)v23 + 1) = v43;
  }
  v64 = a3[9];
  v65 = &a1[v64];
  v66 = &a2[v64];
  *(_QWORD *)v65 = *(_QWORD *)v66;
  *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

