uint64_t TypedValue.toBool.getter()
{
  uint64_t v0;
  uint64_t (**v1)(uint64_t, uint64_t);
  uint64_t (**v2)(uint64_t, uint64_t);
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_23F126080();
  sub_23F12611C();
  MEMORY[0x24BDAC7A8]();
  v4 = (unsigned __int8 *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F125F84();
  sub_23F126048();
  MEMORY[0x24BDAC7A8]();
  sub_23F125FD8(v5, v9);
  if (sub_23F126040(v0, v2[11]) != *MEMORY[0x24BEB9A00])
  {
    sub_23F126040(v0, v2[1]);
    return 2;
  }
  sub_23F126040(v0, v2[12]);
  v6 = sub_23F126390();
  sub_23F1261BC(v6);
  if (sub_23F12619C(v1[11]) != *MEMORY[0x24BEB9928])
  {
    sub_23F126038((uint64_t)v4, v1[1]);
    sub_23F126290();
    return 2;
  }
  sub_23F126038((uint64_t)v4, v1[12]);
  v7 = *v4;
  sub_23F126290();
  return v7;
}

uint64_t TypedValue.toInt.getter()
{
  uint64_t v0;
  double *v1;
  uint64_t v2;
  uint64_t (**v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v5 = v0;
  sub_23F126080();
  sub_23F126210();
  MEMORY[0x24BDAC7A8]();
  sub_23F125F14();
  sub_23F126048();
  MEMORY[0x24BDAC7A8]();
  sub_23F126000();
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v12 - v6;
  sub_23F126288((uint64_t)&v12 - v6, v5);
  if (sub_23F12619C(v3[11]) != *MEMORY[0x24BEB9A00])
    goto LABEL_9;
  sub_23F126288(v2, (uint64_t)v7);
  sub_23F126038(v2, v3[12]);
  v8 = sub_23F126318();
  if (sub_23F126040(v8, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 88)) != *MEMORY[0x24BEB9948])
  {
    sub_23F126208();
    goto LABEL_9;
  }
  sub_23F1260D4((uint64_t)v1, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_23F126040((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 96));
  v9 = *v1;
  result = sub_23F126208();
  if (v9 != floor(v9))
  {
LABEL_9:
    v11 = 0;
    goto LABEL_10;
  }
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v9 < 9.22337204e18)
  {
    v11 = (uint64_t)v9;
LABEL_10:
    sub_23F126038((uint64_t)v7, v3[1]);
    return v11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t TypedValue.toDouble.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[80];
  uint64_t v14;
  uint64_t v15;

  sub_23F125F3C();
  v14 = v5;
  v15 = v6;
  sub_23F126080();
  sub_23F126210();
  MEMORY[0x24BDAC7A8]();
  v7 = sub_23F125F14();
  sub_23F126048();
  MEMORY[0x24BDAC7A8]();
  sub_23F126000();
  MEMORY[0x24BDAC7A8]();
  v9 = &v13[-v8];
  sub_23F126288((uint64_t)&v13[-v8], v0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v3 + 88))(v9, v7) != *MEMORY[0x24BEB9A00])
    goto LABEL_5;
  sub_23F126288(v2, (uint64_t)v9);
  sub_23F126038(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 96));
  v10 = sub_23F126318();
  if (sub_23F126138(v10, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 88)) != *MEMORY[0x24BEB9948])
  {
    sub_23F126208();
LABEL_5:
    v11 = 0;
    goto LABEL_6;
  }
  sub_23F1263D8((uint64_t)v1, v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_23F126208();
  sub_23F126138((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 96));
  v11 = *v1;
LABEL_6:
  sub_23F126038((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  return v11;
}

uint64_t TypedValue.toString.getter()
{
  uint64_t v0;
  uint64_t (**v1)(uint64_t, uint64_t);
  uint64_t (**v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_23F126080();
  sub_23F12611C();
  MEMORY[0x24BDAC7A8]();
  v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F125F84();
  sub_23F126048();
  MEMORY[0x24BDAC7A8]();
  sub_23F125FD8(v5, v9);
  if (sub_23F126040(v0, v2[11]) != *MEMORY[0x24BEB9A00])
  {
    sub_23F126040(v0, v2[1]);
    return 0;
  }
  sub_23F126040(v0, v2[12]);
  v6 = sub_23F126390();
  sub_23F1261BC(v6);
  if (sub_23F12619C(v1[11]) != *MEMORY[0x24BEB9958])
  {
    sub_23F126038((uint64_t)v4, v1[1]);
    sub_23F126290();
    return 0;
  }
  sub_23F126038((uint64_t)v4, v1[12]);
  v7 = *v4;
  sub_23F126290();
  return v7;
}

uint64_t TypedValue.toArray.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_23F125F84();
  sub_23F126048();
  MEMORY[0x24BDAC7A8]();
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F268024();
  sub_23F12611C();
  MEMORY[0x24BDAC7A8]();
  sub_23F1262C8();
  v8 = v7 - v6;
  sub_23F1263D8((uint64_t)v4, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  if (sub_23F126138((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 88)) == *MEMORY[0x24BEB9988])
  {
    sub_23F126138((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
    v9 = swift_projectBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v8, v9, v5);
    swift_release();
    v10 = sub_23F268018();
    sub_23F126038(v8, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  else
  {
    sub_23F126138((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    return 0;
  }
  return v10;
}

void TypedValue.toObject.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F125F3C();
  v18 = v4;
  sub_23F126070();
  sub_23F126298();
  MEMORY[0x24BDAC7A8]();
  v5 = *(_QWORD *)(sub_23F125F14() - 8);
  MEMORY[0x24BDAC7A8]();
  sub_23F1262C8();
  v8 = v7 - v6;
  v9 = *(_QWORD *)(sub_23F268048() - 8);
  MEMORY[0x24BDAC7A8]();
  sub_23F126058();
  sub_23F1263D8(v8, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  if (sub_23F126138(v8, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 88)) == *MEMORY[0x24BEB99E0])
  {
    sub_23F126138(v8, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));
    v10 = swift_projectBox();
    sub_23F126250(v2, v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
    v11 = swift_release();
    MEMORY[0x242666428](v11);
    v12 = sub_23F268030();
    v13 = sub_23F126358();
    v14(v13);
    sub_23F1260D4(v18, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    v15 = sub_23F12601C();
    *(_QWORD *)(v18 + *(int *)(v15 + 20)) = v12;
    v16 = v18;
    v17 = 0;
  }
  else
  {
    sub_23F126138(v8, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    v15 = sub_23F12601C();
    v16 = v18;
    v17 = 1;
  }
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v16, v17, 1, v15);
  sub_23F125EFC();
}

uint64_t type metadata accessor for TypedValue.Object()
{
  uint64_t result;

  result = qword_256DFE620;
  if (!qword_256DFE620)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

void TypedValue.Object.init(type:properties:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  v6 = sub_23F126070();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  *(_QWORD *)(a3 + *(int *)(sub_23F12601C() + 20)) = a2;
  sub_23F12612C();
}

void TypedValue.subscript.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F125F3C();
  v5 = v4;
  v7 = v6;
  v8 = sub_23F125F84();
  sub_23F126210();
  MEMORY[0x24BDAC7A8]();
  sub_23F126058();
  v9 = sub_23F268024();
  sub_23F126298();
  MEMORY[0x24BDAC7A8]();
  sub_23F1262D8();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v10(v1, v0, v8);
  if (sub_23F126040(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 88)) != *MEMORY[0x24BEB9988])
  {
    sub_23F126040(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F126080();
    v13 = sub_23F1263E0();
    sub_23F126088(v14, *MEMORY[0x24BEB9940]);
    *v7 = v13;
    sub_23F1261D0(*MEMORY[0x24BEB9A00], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
    goto LABEL_6;
  }
  sub_23F126040(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
  v11 = swift_projectBox();
  sub_23F126250(v0, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  swift_release();
  v12 = sub_23F268018();
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v12 + 16) > v5)
  {
    v10((uint64_t)v7, v12+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v5, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v9);
LABEL_6:
    sub_23F125EFC();
    return;
  }
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F125F3C();
  v4 = v3;
  v21 = v5;
  v7 = v6;
  sub_23F1217E8(&qword_256DFE550);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8]();
  v8 = sub_23F125F14();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  sub_23F1262C8();
  v12 = v11 - v10;
  v13 = sub_23F268048();
  sub_23F12611C();
  MEMORY[0x24BDAC7A8]();
  sub_23F1262D8();
  sub_23F1260D4(v12, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  if (sub_23F126040(v12, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 88)) == *MEMORY[0x24BEB99E0])
  {
    sub_23F126040(v12, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 96));
    v14 = swift_projectBox();
    sub_23F1263C0(v0, v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    swift_release();
    v15 = sub_23F268030();
    sub_23F126140();
    sub_23F121828(v21, v4, v15, v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v13);
    sub_23F1263A4(v1, 1, v8);
    if (v16)
    {
      sub_23F126080();
      v17 = sub_23F1263E0();
      sub_23F126088(v18, *MEMORY[0x24BEB9940]);
      *v7 = v17;
      sub_23F1261D0(*MEMORY[0x24BEB9A00], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 104));
      sub_23F125E40(v1, &qword_256DFE550);
    }
    else
    {
      sub_23F1260D4((uint64_t)v7, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
    }
  }
  else
  {
    sub_23F126040(v12, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    sub_23F126080();
    v19 = sub_23F1263E0();
    sub_23F126088(v20, *MEMORY[0x24BEB9940]);
    *v7 = v19;
    sub_23F1261D0(*MEMORY[0x24BEB9A00], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 104));
  }
  sub_23F125EFC();
}

uint64_t sub_23F1217E8(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x242667148]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23F121828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_23F12CA90(a1, a2), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(a3 + 56);
    v10 = sub_23F268078();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v8, v10);
    v11 = a4;
    v12 = 0;
    v13 = v10;
  }
  else
  {
    v13 = sub_23F268078();
    v11 = a4;
    v12 = 1;
  }
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v11, v12, 1, v13);
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_23F1218C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_23F12CA90(a1, a2), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(a3 + 56);
    v10 = type metadata accessor for ClientAction(0);
    sub_23F125DB0(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v8, a4, type metadata accessor for ClientAction);
    return sub_23F126098(a4, 0, 1, v10);
  }
  else
  {
    v12 = type metadata accessor for ClientAction(0);
    return sub_23F126098(a4, 1, 1, v12);
  }
}

void sub_23F121954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  id v6;

  if (*(_QWORD *)(a3 + 16))
  {
    v4 = sub_23F12CA90(a1, a2);
    if ((v5 & 1) != 0)
      v6 = *(id *)(*(_QWORD *)(a3 + 56) + 8 * v4);
  }
  sub_23F126078();
}

uint64_t TypedValue.Object.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23F126070();
  return sub_23F126180(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t TypedValue.Object.type.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23F126070();
  return sub_23F126180(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*TypedValue.Object.type.modify())()
{
  return nullsub_1;
}

uint64_t TypedValue.Object.properties.getter()
{
  sub_23F12601C();
  return swift_bridgeObjectRetain();
}

void TypedValue.Object.properties.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_23F12601C() + 20);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  sub_23F12612C();
}

uint64_t (*TypedValue.Object.properties.modify())()
{
  sub_23F12601C();
  return nullsub_1;
}

uint64_t TypedValue.Object.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t i;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_23F125F3C();
  v39 = v0;
  v40 = v1;
  v2 = sub_23F125F84();
  v3 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  v34 = v3;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F125F70();
  v32 = v5;
  sub_23F1217E8(&qword_256DFE558);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1260DC(v7, v30);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - v9;
  v37 = 123;
  v38 = 0xE100000000000000;
  sub_23F12601C();
  v11 = sub_23F126240();
  v12 = sub_23F123D68(v11);
  swift_bridgeObjectRelease();
  v36 = v12;
  sub_23F123CE4((uint64_t *)&v36);
  v13 = v36;
  v14 = *(_QWORD *)(v36 + 16);
  swift_retain();
  v15 = 0;
  v31 = v10;
  v17 = v32;
  for (i = v33; ; v28(v17, i))
  {
    if (v15 == v14)
    {
      v18 = sub_23F126388();
      sub_23F126158(v35, v19, v20, v18);
      v15 = v14;
    }
    else
    {
      if (v15 >= *(_QWORD *)(v13 + 16))
      {
        __break(1u);
        result = swift_release();
        __break(1u);
        return result;
      }
      v21 = sub_23F126388();
      v22 = v35;
      sub_23F123EA0(v13+ ((*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v15++, v35);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v22, 0, 1, v21);
    }
    sub_23F125E68(v35, (uint64_t)v10, &qword_256DFE558);
    v23 = sub_23F126388();
    sub_23F1263A4((uint64_t)v10, 1, v23);
    if (v24)
      break;
    v25 = (uint64_t)&v10[*(int *)(v23 + 48)];
    v26 = v14;
    v27 = v34;
    sub_23F1263C0(v17, v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 32));
    sub_23F2681BC();
    swift_bridgeObjectRelease();
    sub_23F2681BC();
    sub_23F268060();
    sub_23F2681BC();
    swift_bridgeObjectRelease();
    sub_23F2681BC();
    v28 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v14 = v26;
    v10 = v31;
  }
  swift_release_n();
  if (v14)
  {
    sub_23F121CF8();
    swift_bridgeObjectRelease();
    sub_23F121CF8();
    swift_bridgeObjectRelease();
  }
  sub_23F2681BC();
  return v37;
}

uint64_t sub_23F121CF8()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;

  v1 = v0[1];
  v2 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v2 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  sub_23F2681B0();
  return sub_23F2681D4();
}

void static TypedValue.Object.== infix(_:_:)()
{
  if ((sub_23F26809C() & 1) != 0)
  {
    sub_23F12601C();
    sub_23F121D9C();
  }
}

void sub_23F121D9C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  int v36;
  unint64_t v37;
  uint64_t *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  char v48;
  char v49;
  char v50;
  void (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  int64_t v62;
  int v63;
  uint64_t v64;

  sub_23F125F3C();
  v2 = v1;
  v4 = v3;
  v5 = sub_23F125F84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1260DC(v7, v53);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v53 - v9;
  sub_23F1217E8(&qword_256DFE558);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1261DC();
  MEMORY[0x24BDAC7A8](v12);
  v61 = (uint64_t *)((char *)&v53 - v13);
  if (v4 == v2)
  {
    v63 = 1;
LABEL_35:
    sub_23F125EFC();
    return;
  }
  if (*(_QWORD *)(v4 + 16) != *(_QWORD *)(v2 + 16))
  {
LABEL_34:
    v63 = 0;
    goto LABEL_35;
  }
  v62 = 0;
  v57 = v4;
  v58 = v6;
  sub_23F125F54();
  v16 = v15 & v14;
  v55 = v4 + 64;
  v56 = (unint64_t)(v17 + 63) >> 6;
  v54 = v56 - 1;
  v18 = &qword_256DFE560;
  v59 = v2;
  v64 = v5;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v20 = (v16 - 1) & v16;
      v21 = v19 | (v62 << 6);
LABEL_6:
      v22 = (uint64_t *)(*(_QWORD *)(v57 + 48) + 16 * v21);
      v24 = *v22;
      v23 = v22[1];
      v25 = *(_QWORD *)(v57 + 56) + *(_QWORD *)(v6 + 72) * v21;
      v26 = sub_23F1263C8();
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(&v0[*(int *)(v26 + 48)], v25, v64);
      *(_QWORD *)v0 = v24;
      *((_QWORD *)v0 + 1) = v23;
      sub_23F126220((uint64_t)v0);
      swift_bridgeObjectRetain();
      goto LABEL_25;
    }
    v27 = v62 + 1;
    if (__OFADD__(v62, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v27 < v56)
    {
      v28 = *(_QWORD *)(v55 + 8 * v27);
      if (v28)
        goto LABEL_10;
      v29 = v62 + 2;
      ++v62;
      if (v27 + 1 < v56)
      {
        v28 = *(_QWORD *)(v55 + 8 * v29);
        if (v28)
          goto LABEL_13;
        v62 = v27 + 1;
        if (v27 + 2 < v56)
        {
          v28 = *(_QWORD *)(v55 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_10;
          }
          v29 = v27 + 3;
          v62 = v27 + 2;
          if (v27 + 3 < v56)
            break;
        }
      }
    }
LABEL_24:
    v30 = sub_23F1263C8();
    sub_23F126158((uint64_t)v0, v31, v32, v30);
    v20 = 0;
LABEL_25:
    v33 = v61;
    sub_23F125E68((uint64_t)v0, (uint64_t)v61, &qword_256DFE558);
    v34 = sub_23F1263C8();
    sub_23F1263A4((uint64_t)v33, 1, v34);
    if (v35)
      v36 = 1;
    else
      v36 = 0;
    v63 = v36;
    if (v35)
      goto LABEL_35;
    v37 = v20;
    v38 = v18;
    v39 = v0;
    v40 = (uint64_t)v33 + *(int *)(v34 + 48);
    v41 = *v33;
    v42 = v33[1];
    v6 = v58;
    v43 = v64;
    sub_23F126250((uint64_t)v10, v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 32));
    v44 = v41;
    v45 = v59;
    v46 = v10;
    v47 = sub_23F12CA90(v44, v42);
    v49 = v48;
    swift_bridgeObjectRelease();
    if ((v49 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v46, v43);
      goto LABEL_34;
    }
    sub_23F126250(v60, *(_QWORD *)(v45 + 56) + *(_QWORD *)(v6 + 72) * v47, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    sub_23F125DE4(&qword_256DFE6C8, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A38]);
    v50 = sub_23F268138();
    v51 = *(void (**)(uint64_t))(v6 + 8);
    v52 = sub_23F126358();
    v51(v52);
    ((void (*)(char *, uint64_t))v51)(v46, v43);
    v10 = v46;
    v0 = v39;
    v18 = v38;
    v16 = v37;
    if ((v50 & 1) == 0)
      goto LABEL_35;
  }
  v28 = *(_QWORD *)(v55 + 8 * v29);
  if (v28)
  {
LABEL_13:
    v27 = v29;
LABEL_10:
    v20 = (v28 - 1) & v28;
    v21 = __clz(__rbit64(v28)) + (v27 << 6);
    v62 = v27;
    goto LABEL_6;
  }
  while (!__OFADD__(v29, 1))
  {
    if (v29 + 1 >= v56)
    {
      v62 = v54;
      goto LABEL_24;
    }
    sub_23F126344();
    if (v28)
      goto LABEL_10;
  }
LABEL_37:
  __break(1u);
}

void sub_23F122130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;

  sub_23F125F3C();
  if (v2 == v3 || (sub_23F126300(), !v4))
  {
LABEL_23:
    sub_23F125EFC();
    return;
  }
  v5 = 0;
  v6 = v0 + 64;
  sub_23F125F54();
  v9 = v8 & v7;
  v11 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v5 << 6);
      goto LABEL_21;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v11)
      goto LABEL_23;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_23;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_23;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_21:
    v17 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    v20 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
    v21 = sub_23F12CA90(v18, v19);
    v23 = v22;
    sub_23F1262C0();
    if ((v23 & 1) == 0 || *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v21) != v20)
      goto LABEL_23;
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    goto LABEL_23;
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v11)
      goto LABEL_23;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
}

void sub_23F122280(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int v21;
  unint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int v28;
  BOOL v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  BOOL v44;
  _QWORD *v45;
  _QWORD *v46;
  unint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  int64_t v53;

  if (a1 == a2)
    return;
  sub_23F126300();
  if (!v29)
    return;
  v4 = 0;
  v5 = v2 + 64;
  sub_23F125F54();
  v8 = v7 & v6;
  v51 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    while (1)
    {
      if (v8)
      {
        v52 = (v8 - 1) & v8;
        v53 = v4;
        v10 = __clz(__rbit64(v8)) | (v4 << 6);
      }
      else
      {
        v11 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_73;
        if (v11 >= v51)
          return;
        v12 = *(_QWORD *)(v5 + 8 * v11);
        v13 = v4 + 1;
        if (!v12)
        {
          v13 = v4 + 2;
          if (v4 + 2 >= v51)
            return;
          v12 = *(_QWORD *)(v5 + 8 * v13);
          if (!v12)
          {
            v13 = v4 + 3;
            if (v4 + 3 >= v51)
              return;
            v12 = *(_QWORD *)(v5 + 8 * v13);
            if (!v12)
            {
              v14 = v4 + 4;
              if (v4 + 4 >= v51)
                return;
              v12 = *(_QWORD *)(v5 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  v13 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_74;
                  if (v13 >= v51)
                    return;
                  v12 = *(_QWORD *)(v5 + 8 * v13);
                  ++v14;
                  if (v12)
                    goto LABEL_20;
                }
              }
              v13 = v4 + 4;
            }
          }
        }
LABEL_20:
        v52 = (v12 - 1) & v12;
        v53 = v13;
        v10 = __clz(__rbit64(v12)) + (v13 << 6);
      }
      v15 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
      v16 = *v15;
      v17 = v15[1];
      v18 = *(_QWORD *)(v2 + 56) + 24 * v10;
      v20 = *(_QWORD **)v18;
      v19 = *(_QWORD *)(v18 + 8);
      v21 = *(unsigned __int8 *)(v18 + 16);
      sub_23F126364();
      sub_23F125D18((uint64_t)v20, v19, v21);
      v22 = sub_23F12CA90(v16, v17);
      v24 = v23;
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
        goto LABEL_71;
      v25 = *(_QWORD *)(v3 + 56) + 24 * v22;
      v27 = *(_QWORD **)v25;
      v26 = *(_QWORD *)(v25 + 8);
      v28 = *(unsigned __int8 *)(v25 + 16);
      if (!*(_BYTE *)(v25 + 16))
      {
        if (v21)
          goto LABEL_66;
        if (v27 != v20 || v26 != v19)
        {
          v30 = sub_23F1260BC();
          sub_23F126140();
          v37 = sub_23F126358();
          sub_23F125D40(v37, v38, 0);
          v33 = (uint64_t)v20;
          v34 = v19;
          v35 = 0;
          goto LABEL_36;
        }
        sub_23F126140();
        v41 = (uint64_t)v20;
        v42 = v19;
        v43 = 0;
        goto LABEL_48;
      }
      if (v28 == 1)
        break;
      if (v21 != 2)
        goto LABEL_66;
      v29 = v27 == v20 && v26 == v19;
      if (v29)
      {
        sub_23F126140();
        v41 = (uint64_t)v20;
        v42 = v19;
        v43 = 2;
        goto LABEL_48;
      }
      v30 = sub_23F1260BC();
      sub_23F126140();
      v31 = sub_23F126358();
      sub_23F125D40(v31, v32, 2);
      v33 = (uint64_t)v20;
      v34 = v19;
      v35 = 2;
LABEL_36:
      sub_23F125D40(v33, v34, v35);
      v8 = v52;
      v4 = v53;
      if ((v30 & 1) == 0)
        return;
    }
    if (v21 != 1)
    {
LABEL_66:
      sub_23F125D18(*(_QWORD *)v25, *(_QWORD *)(v25 + 8), *(_BYTE *)(v25 + 16));
LABEL_70:
      sub_23F125D40((uint64_t)v27, v26, v28);
LABEL_71:
      sub_23F125D40((uint64_t)v20, v19, v21);
      return;
    }
    v39 = v27[2];
    if (v39 != v20[2])
      goto LABEL_68;
    if (v39)
      v40 = v27 == v20;
    else
      v40 = 1;
    if (v40)
    {
      v41 = sub_23F126364();
      v42 = v26;
      v43 = 1;
LABEL_48:
      sub_23F125D40(v41, v42, v43);
      goto LABEL_49;
    }
    v44 = v27[4] == v20[4] && v27[5] == v20[5];
    if (!v44 && (sub_23F126148() & 1) == 0)
    {
LABEL_68:
      sub_23F126364();
      LOBYTE(v28) = 1;
LABEL_69:
      LOBYTE(v21) = 1;
      goto LABEL_70;
    }
    v49 = v5;
    v50 = v2;
    if (v39 != 1)
      break;
LABEL_64:
    sub_23F126258();
    sub_23F125D40((uint64_t)v27, v26, 1);
    v5 = v49;
    v2 = v50;
LABEL_49:
    v8 = v52;
    v4 = v53;
    sub_23F125D40((uint64_t)v20, v19, v28);
  }
  v45 = v20 + 7;
  v46 = v27 + 7;
  v47 = 1;
  while (v47 < v39)
  {
    v48 = *(v46 - 1) == *(v45 - 1) && *v46 == *v45;
    if (!v48 && (sub_23F126148() & 1) == 0)
    {
      LOBYTE(v28) = 1;
      sub_23F126258();
      goto LABEL_69;
    }
    ++v47;
    v45 += 2;
    v46 += 2;
    if (v39 == v47)
      goto LABEL_64;
  }
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
}

void sub_23F122610()
{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t *v58;
  int v59;
  char *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  uint64_t v68;
  uint64_t (*v69)(uint64_t);
  uint64_t v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t);
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  sub_23F125F3C();
  v4 = sub_23F1262F0();
  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value(v4);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F125F70();
  v70 = v6;
  v81 = type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(0);
  sub_23F125EEC();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v75 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v71 = (uint64_t *)((char *)&v65 - v10);
  v76 = sub_23F1217E8(&qword_256DFE690);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F125FBC();
  v73 = type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(v12);
  v80 = *(_QWORD *)(v73 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F1260FC(v14, v65);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v65 - v16;
  sub_23F1217E8(&qword_256DFE698);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F1261DC();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)&v65 - v20);
  v77 = v1;
  if (v0 == v1 || *((_QWORD *)v0 + 2) != *((_QWORD *)v77 + 2))
  {
LABEL_59:
    sub_23F125EFC();
    return;
  }
  v74 = 0;
  v69 = v0;
  sub_23F125F8C();
  v67 = v0;
  v68 = v22;
  v66 = v22 - 1;
  v23 = &unk_256DFE6A0;
  v72 = (uint64_t *)v3;
  v78 = v21;
  if (!v24)
    goto LABEL_6;
LABEL_4:
  sub_23F1262A8();
  while (2)
  {
    sub_23F126268();
    v28 = v27 + v25 * v26;
    v29 = sub_23F12636C();
    v30 = v72;
    sub_23F125DB0(v28, (uint64_t)v72 + *(int *)(v29 + 48), type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue);
    *v30 = v3;
    v30[1] = (uint64_t)v0;
    sub_23F126220((uint64_t)v30);
    sub_23F1263B8();
    v3 = (uint64_t)v30;
    v21 = v78;
    while (1)
    {
      sub_23F125E68(v3, (uint64_t)v21, &qword_256DFE698);
      v37 = v23;
      v38 = sub_23F12636C();
      sub_23F1263A4((uint64_t)v21, 1, v38);
      if (v56)
        goto LABEL_59;
      v39 = (uint64_t)v21 + *(int *)(v38 + 48);
      v40 = *v21;
      v41 = v21[1];
      sub_23F125D90(v39, (uint64_t)v17, type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue);
      sub_23F12CA90(v40, v41);
      v43 = v42;
      sub_23F1262C0();
      if ((v43 & 1) == 0)
        goto LABEL_58;
      v44 = sub_23F126374();
      v45 = v82;
      sub_23F126350(v44, v82);
      v46 = (uint64_t *)(v2 + *(int *)(v76 + 48));
      sub_23F125DB0(v45, v2, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
      sub_23F125DB0((uint64_t)v17, (uint64_t)v46, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
      if (sub_23F126334() == 1)
      {
        sub_23F126350(v2, v75);
        if (sub_23F126334() == 1)
        {
          v47 = v70;
          sub_23F125D90((uint64_t)v46, v70, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value);
          v48 = v75;
          v49 = _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
          sub_23F125D68(v47, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value);
          sub_23F125D68(v48, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value);
          goto LABEL_34;
        }
        sub_23F125D68(v75, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value);
LABEL_56:
        sub_23F125E40(v2, &qword_256DFE690);
        goto LABEL_57;
      }
      v51 = v71;
      sub_23F126350(v2, (uint64_t)v71);
      v52 = *v51;
      v53 = v51[1];
      if (sub_23F126334() == 1)
      {
        sub_23F1262C0();
        goto LABEL_56;
      }
      v54 = *v46;
      v55 = v46[1];
      v56 = v52 == v54 && v53 == v55;
      if (v56)
      {
        swift_bridgeObjectRelease_n();
        v3 = (uint64_t)v72;
        v21 = v78;
        goto LABEL_37;
      }
      v49 = sub_23F126148();
      sub_23F1262C0();
      v50 = swift_bridgeObjectRelease();
      v3 = (uint64_t)v72;
LABEL_34:
      v21 = v78;
      if ((v49 & 1) == 0)
      {
        sub_23F126324(v50, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
LABEL_57:
        sub_23F125D68(v82, type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue);
LABEL_58:
        sub_23F125D68((uint64_t)v17, type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue);
        goto LABEL_59;
      }
LABEL_37:
      sub_23F125D68(v2, type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue);
      v57 = *(int *)(v73 + 20);
      v58 = (uint64_t *)(v82 + v57);
      v59 = *(unsigned __int8 *)(v82 + v57 + 8);
      v60 = &v17[v57];
      v61 = v17[v57 + 8];
      if (v59 == 255)
      {
        v0 = type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue;
        if (v61 != 255)
          goto LABEL_57;
      }
      else
      {
        v0 = type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue;
        if (v61 == 255)
          goto LABEL_57;
        if (v59)
        {
          if (v59 == 1)
          {
            v62 = *v58;
            v63 = *(_QWORD *)v60;
            if (v61 != 1 || v62 != v63)
              goto LABEL_57;
          }
          else if (v61 != 2)
          {
            goto LABEL_57;
          }
        }
        else if (v61)
        {
          goto LABEL_57;
        }
      }
      sub_23F126280(v82);
      sub_23F126280((uint64_t)v17);
      v23 = v37;
      if (v79)
        goto LABEL_4;
LABEL_6:
      v31 = v74 + 1;
      if (__OFADD__(v74, 1))
      {
        __break(1u);
        goto LABEL_61;
      }
      if (v31 < v68)
      {
        if (*((_QWORD *)v67 + v31))
          goto LABEL_9;
        v33 = v74 + 2;
        ++v74;
        if (v31 + 1 < v68)
        {
          if (*((_QWORD *)v67 + v33))
            goto LABEL_9;
          v74 = v31 + 1;
          if (v31 + 2 < v68)
          {
            if (*((_QWORD *)v67 + v31 + 2))
              goto LABEL_9;
            v34 = v31 + 3;
            v74 = v31 + 2;
            if (v31 + 3 < v68)
              break;
          }
        }
      }
LABEL_22:
      v36 = sub_23F12636C();
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v3, 1, 1, v36);
      v79 = 0;
    }
    if (*((_QWORD *)v67 + v34))
    {
LABEL_9:
      sub_23F126164();
      v74 = v32;
      continue;
    }
    break;
  }
  while (!__OFADD__(v34, 1))
  {
    if (v34 + 1 >= v68)
    {
      v74 = v66;
      goto LABEL_22;
    }
    sub_23F126344();
    if (v35)
      goto LABEL_9;
  }
LABEL_61:
  __break(1u);
}

void sub_23F122B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;

  sub_23F125F3C();
  v3 = sub_23F1262F0();
  v66 = type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(v3);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F125F70();
  v68 = v5;
  v6 = sub_23F125F84();
  v70 = *(_QWORD *)(v6 - 8);
  v71 = v6;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F125F70();
  v67 = v8;
  v77 = sub_23F1217E8(&qword_256DFE6A8);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F125FBC();
  v80 = *(_QWORD *)(type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution(v10) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1260FC(v12, v63);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v69 = (uint64_t)&v63 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v63 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v63 - v19;
  sub_23F1217E8(&qword_256DFE6B0);
  sub_23F125EEC();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (uint64_t *)((char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v22);
  v81 = (uint64_t *)((char *)&v63 - v25);
  if (v0 == v1 || *(_QWORD *)(v0 + 16) != *(_QWORD *)(v1 + 16))
  {
LABEL_42:
    sub_23F125EFC();
    return;
  }
  v75 = v20;
  v76 = 0;
  v72 = v0;
  v73 = v1;
  sub_23F125F8C();
  v64 = v0;
  v65 = v27;
  v63 = v27 - 1;
  v28 = &qword_256DFE6B8;
  v74 = v18;
  v78 = v24;
  while (1)
  {
    v29 = v81;
    if (v26)
    {
      sub_23F1262A8();
LABEL_6:
      sub_23F126268();
      v33 = v32 + v30 * v31;
      v34 = (uint64_t)v78 + *(int *)(sub_23F12639C() + 48);
      v35 = v33;
      v24 = v78;
      sub_23F125DB0(v35, v34, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
      *v24 = v20;
      v24[1] = v0;
      sub_23F126230((uint64_t)v24);
      sub_23F1263B8();
      v20 = v75;
      v29 = v81;
      goto LABEL_24;
    }
    v36 = v76 + 1;
    if (__OFADD__(v76, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v36 < v65)
    {
      if (*(_QWORD *)(v64 + 8 * v36))
        goto LABEL_10;
      v38 = v76 + 2;
      ++v76;
      if (v36 + 1 < v65)
      {
        if (*(_QWORD *)(v64 + 8 * v38))
          goto LABEL_10;
        v76 = v36 + 1;
        if (v36 + 2 < v65)
        {
          if (*(_QWORD *)(v64 + 8 * (v36 + 2)))
            goto LABEL_10;
          v39 = v36 + 3;
          v76 = v36 + 2;
          if (v36 + 3 < v65)
            break;
        }
      }
    }
LABEL_23:
    v41 = sub_23F12639C();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v24, 1, 1, v41);
    v79 = 0;
LABEL_24:
    sub_23F125E68((uint64_t)v24, (uint64_t)v29, &qword_256DFE6B0);
    v42 = v28;
    v43 = sub_23F12639C();
    sub_23F1263A4((uint64_t)v29, 1, v43);
    if (v44)
      goto LABEL_42;
    v45 = (uint64_t)v29 + *(int *)(v43 + 48);
    v46 = *v29;
    v47 = v29[1];
    sub_23F125D90(v45, (uint64_t)v20, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
    sub_23F12CA90(v46, v47);
    v49 = v48;
    swift_bridgeObjectRelease();
    if ((v49 & 1) == 0)
      goto LABEL_41;
    v50 = sub_23F126374();
    v51 = (uint64_t)v74;
    sub_23F126150(v50, (uint64_t)v74);
    v0 = v2 + *(int *)(v77 + 48);
    sub_23F126150(v51, v2);
    sub_23F126150((uint64_t)v20, v0);
    if (sub_23F12632C() == 1)
    {
      sub_23F126150(v2, v82);
      if (sub_23F12632C() != 1)
      {
        sub_23F125D68(v82, type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue);
LABEL_39:
        sub_23F125E40(v2, &qword_256DFE6A8);
LABEL_40:
        sub_23F125D68(v51, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
LABEL_41:
        sub_23F125D68((uint64_t)v20, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
        goto LABEL_42;
      }
      v52 = v68;
      sub_23F125D90(v0, v68, type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue);
      if ((_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0() & 1) == 0
        || (sub_23F1298E0(), (v53 & 1) == 0))
      {
        sub_23F126280(v82);
        sub_23F126280(v52);
LABEL_36:
        sub_23F126324(v62, type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution);
        goto LABEL_40;
      }
      sub_23F125D68(v82, type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue);
      sub_23F125D68(v52, type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue);
    }
    else
    {
      v54 = v69;
      sub_23F126150(v2, v69);
      if (sub_23F12632C() == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v54, v71);
        goto LABEL_39;
      }
      v55 = v70;
      v56 = v71;
      v57 = v2;
      v58 = v67;
      sub_23F1263C0(v67, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 32));
      v0 = _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
      v59 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
      v59(v54, v56);
      v60 = v58;
      v2 = v57;
      v61 = v56;
      v20 = v75;
      v62 = ((uint64_t (*)(uint64_t, uint64_t))v59)(v60, v61);
      if ((v0 & 1) == 0)
        goto LABEL_36;
    }
    sub_23F12633C(v2);
    sub_23F12633C(v51);
    sub_23F12633C((uint64_t)v20);
    v24 = v78;
    v26 = v79;
    v28 = v42;
  }
  if (*(_QWORD *)(v64 + 8 * v39))
  {
LABEL_10:
    sub_23F126164();
    v76 = v37;
    goto LABEL_6;
  }
  while (!__OFADD__(v39, 1))
  {
    if (v39 + 1 >= v65)
    {
      v76 = v63;
      goto LABEL_23;
    }
    sub_23F126344();
    if (v40)
      goto LABEL_10;
  }
LABEL_44:
  __break(1u);
}

void sub_23F123100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char v40;
  char *v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;

  sub_23F125F3C();
  v3 = sub_23F1262F0();
  v53 = type metadata accessor for ParameterValue(v3);
  v4 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  sub_23F126000();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v47 - v6;
  sub_23F1217E8(&qword_256DFE680);
  sub_23F125EEC();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (uint64_t *)((char *)&v47 - v12);
  if (v0 == v1 || *(_QWORD *)(v0 + 16) != *(_QWORD *)(v1 + 16))
  {
LABEL_49:
    sub_23F125EFC();
    return;
  }
  v54 = 0;
  v51 = v0;
  v52 = v4;
  v49 = v0 + 64;
  sub_23F125F54();
  v16 = v15 & v14;
  v50 = (unint64_t)(v17 + 63) >> 6;
  v48 = v50 - 1;
  if ((v15 & v14) == 0)
    goto LABEL_6;
LABEL_4:
  v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  v19 = v18 | (v54 << 6);
  while (2)
  {
    v20 = *(_QWORD *)(v51 + 56);
    v21 = (_QWORD *)(*(_QWORD *)(v51 + 48) + 16 * v19);
    v22 = v21[1];
    *v11 = *v21;
    v11[1] = v22;
    v23 = v20 + *(_QWORD *)(v4 + 72) * v19;
    v24 = sub_23F1263D0();
    sub_23F125DB0(v23, (uint64_t)v11 + *(int *)(v24 + 48), type metadata accessor for ParameterValue);
    sub_23F126230((uint64_t)v11);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_23F125E68((uint64_t)v11, (uint64_t)v13, &qword_256DFE680);
      v31 = sub_23F1263D0();
      sub_23F1263A4((uint64_t)v13, 1, v31);
      if (v32)
        goto LABEL_49;
      v33 = *v13;
      v34 = v13[1];
      sub_23F125D90((uint64_t)v13 + *(int *)(v31 + 48), (uint64_t)v7, type metadata accessor for ParameterValue);
      v35 = sub_23F12CA90(v33, v34);
      LOBYTE(v33) = v36;
      swift_bridgeObjectRelease();
      if ((v33 & 1) == 0)
        goto LABEL_48;
      v4 = v52;
      sub_23F125DB0(*(_QWORD *)(v1 + 56) + *(_QWORD *)(v52 + 72) * v35, v2, type metadata accessor for ParameterValue);
      v37 = _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
      if ((v37 & 1) == 0)
      {
LABEL_47:
        sub_23F126324(v37, type metadata accessor for ParameterValue);
LABEL_48:
        sub_23F125D68((uint64_t)v7, type metadata accessor for ParameterValue);
        goto LABEL_49;
      }
      v38 = *(int *)(v53 + 20);
      v39 = (uint64_t *)(v2 + v38);
      v40 = *(_BYTE *)(v2 + v38 + 9);
      v41 = &v7[v38];
      v42 = v7[v38 + 9];
      if ((v40 & 1) != 0)
      {
        if ((v42 & 1) == 0)
          goto LABEL_47;
      }
      else
      {
        if ((v42 & 1) != 0)
          goto LABEL_47;
        v43 = *v39;
        v44 = *((_BYTE *)v39 + 8);
        v45 = *(_QWORD *)v41;
        v46 = v41[8];
        if ((v44 & 1) != 0)
        {
          if (v43)
          {
            if ((v46 & 1) == 0 || !v45)
              goto LABEL_47;
          }
          else if ((v46 & 1) == 0 || v45)
          {
            goto LABEL_47;
          }
        }
        else if ((v46 & 1) != 0 || v43 != v45)
        {
          goto LABEL_47;
        }
      }
      sub_23F125D68(v2, type metadata accessor for ParameterValue);
      sub_23F125D68((uint64_t)v7, type metadata accessor for ParameterValue);
      if (v16)
        goto LABEL_4;
LABEL_6:
      v25 = v54 + 1;
      if (__OFADD__(v54, 1))
      {
        __break(1u);
        goto LABEL_51;
      }
      if (v25 < v50)
      {
        v26 = *(_QWORD *)(v49 + 8 * v25);
        if (v26)
          goto LABEL_9;
        v27 = v54 + 2;
        ++v54;
        if (v25 + 1 < v50)
        {
          v26 = *(_QWORD *)(v49 + 8 * v27);
          if (v26)
            goto LABEL_12;
          v54 = v25 + 1;
          if (v25 + 2 < v50)
          {
            v26 = *(_QWORD *)(v49 + 8 * (v25 + 2));
            if (v26)
            {
              v25 += 2;
              goto LABEL_9;
            }
            v54 = v25 + 2;
            if (v25 + 3 < v50)
            {
              v26 = *(_QWORD *)(v49 + 8 * (v25 + 3));
              if (v26)
              {
                v25 += 3;
                goto LABEL_9;
              }
              v27 = v25 + 4;
              v54 = v25 + 3;
              if (v25 + 4 < v50)
                break;
            }
          }
        }
      }
LABEL_26:
      v28 = sub_23F1263D0();
      sub_23F126158((uint64_t)v11, v29, v30, v28);
      v16 = 0;
    }
    v26 = *(_QWORD *)(v49 + 8 * v27);
    if (v26)
    {
LABEL_12:
      v25 = v27;
LABEL_9:
      v16 = (v26 - 1) & v26;
      v19 = __clz(__rbit64(v26)) + (v25 << 6);
      v54 = v25;
      continue;
    }
    break;
  }
  while (!__OFADD__(v27, 1))
  {
    if (v27 + 1 >= v50)
    {
      v54 = v48;
      goto LABEL_26;
    }
    sub_23F126344();
    if (v26)
      goto LABEL_9;
  }
LABEL_51:
  __break(1u);
}

uint64_t TypedValue.Object.hash(into:)(__int128 *a1)
{
  uint64_t v1;

  sub_23F126070();
  sub_23F125DE4(&qword_256DFE568, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9D20], MEMORY[0x24BEB9D38]);
  sub_23F26812C();
  sub_23F12601C();
  sub_23F126240();
  sub_23F125098(a1, v1);
  return swift_bridgeObjectRelease();
}

BOOL sub_23F123554(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_23F123564()
{
  return sub_23F268840();
}

uint64_t sub_23F123588(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F123670()
{
  return 2;
}

uint64_t sub_23F123678()
{
  sub_23F268834();
  sub_23F268840();
  return sub_23F268864();
}

uint64_t sub_23F1236BC()
{
  return 0;
}

uint64_t sub_23F1236C8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x69747265706F7270;
  else
    return 1701869940;
}

BOOL sub_23F1236FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23F123554(*a1, *a2);
}

uint64_t sub_23F123708()
{
  return sub_23F123678();
}

uint64_t sub_23F123710()
{
  return sub_23F123564();
}

uint64_t sub_23F123718()
{
  sub_23F268834();
  sub_23F268840();
  return sub_23F268864();
}

uint64_t sub_23F123758()
{
  char *v0;

  return sub_23F1236C8(*v0);
}

uint64_t sub_23F123760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F123588(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F123784()
{
  return sub_23F1236BC();
}

uint64_t sub_23F1237A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F123670();
  *a1 = result;
  return result;
}

uint64_t sub_23F1237C4()
{
  sub_23F125480();
  return sub_23F2688B8();
}

uint64_t sub_23F1237EC()
{
  sub_23F125480();
  return sub_23F2688C4();
}

uint64_t TypedValue.Object.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;

  v4 = v1;
  v6 = sub_23F1217E8(&qword_256DFE570);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F12545C(a1, a1[3]);
  sub_23F125480();
  sub_23F2688A0();
  v13 = 0;
  sub_23F2680A8();
  sub_23F125DE4(&qword_256DFE580, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9D20], MEMORY[0x24BEB9D30]);
  sub_23F126188();
  if (!v2)
  {
    v12 = *(_QWORD *)(v4 + *(int *)(type metadata accessor for TypedValue.Object() + 20));
    v11[15] = 1;
    sub_23F1217E8(&qword_256DFE588);
    sub_23F1254BC();
    sub_23F126188();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v9, v6);
}

uint64_t TypedValue.Object.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3[4];

  sub_23F268834();
  sub_23F126070();
  sub_23F125DE4(&qword_256DFE568, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9D20], MEMORY[0x24BEB9D38]);
  sub_23F26812C();
  v1 = *(_QWORD *)(v0 + *(int *)(sub_23F12601C() + 20));
  sub_23F1263B8();
  sub_23F125098(v3, v1);
  swift_bridgeObjectRelease();
  return sub_23F268864();
}

void TypedValue.Object.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = sub_23F2680A8();
  v10 = *(_QWORD *)(v13 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F125F70();
  v11 = v6;
  v12 = sub_23F1217E8(&qword_256DFE5A0);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F125FBC();
  v7 = type metadata accessor for TypedValue.Object();
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F126058();
  sub_23F12545C(a1, a1[3]);
  sub_23F125480();
  sub_23F268888();
  if (v2)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_23F125DE4(&qword_256DFE5A8, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9D20], MEMORY[0x24BEB9D48]);
    sub_23F1263E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v3, v11, v13);
    sub_23F1217E8(&qword_256DFE588);
    sub_23F1255A4();
    sub_23F1263E8();
    sub_23F126024();
    *(_QWORD *)(v3 + *(int *)(v7 + 20)) = v14;
    sub_23F125DB0(v3, a2, (uint64_t (*)(_QWORD))type metadata accessor for TypedValue.Object);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)a1);
    sub_23F125D68(v3, (uint64_t (*)(_QWORD))type metadata accessor for TypedValue.Object);
  }
}

void sub_23F123C14(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  TypedValue.Object.init(from:)(a1, a2);
}

uint64_t sub_23F123C28(_QWORD *a1)
{
  return TypedValue.Object.encode(to:)(a1);
}

uint64_t sub_23F123C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __int128 v6[4];

  sub_23F268834();
  sub_23F2680A8();
  sub_23F125DE4(&qword_256DFE568, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9D20], MEMORY[0x24BEB9D38]);
  sub_23F26812C();
  v4 = *(_QWORD *)(v2 + *(int *)(a2 + 20));
  swift_bridgeObjectRetain();
  sub_23F125098(v6, v4);
  swift_bridgeObjectRelease();
  return sub_23F268864();
}

void sub_23F123CE4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_23F1217E8(&qword_256DFE560) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F125E2C();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_23F123EE8(v6);
  *a1 = v3;
}

size_t sub_23F123D68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  size_t result;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  sub_23F1217E8(&qword_256DFE6D0);
  v2 = *(_QWORD *)(sub_23F1217E8(&qword_256DFE560) - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v5);
  if (v3)
  {
    if (result - v4 != 0x8000000000000000 || v3 != -1)
    {
      v5[2] = v1;
      v5[3] = 2 * ((uint64_t)(result - v4) / v3);
      sub_23F1217E8(&qword_256DFE560);
      sub_23F1F35B0();
      v9 = v8;
      swift_bridgeObjectRetain();
      sub_23F125E20();
      if (v9 == v1)
        return (size_t)v5;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23F123EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F1217E8(&qword_256DFE560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23F123EE8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  BOOL v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  char v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t *v152;

  v2 = v1;
  v145 = sub_23F1217E8(&qword_256DFE560);
  v4 = *(_QWORD *)(v145 - 8);
  v5 = MEMORY[0x24BDAC7A8](v145);
  v139 = (uint64_t)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v151 = (uint64_t)&v131 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char **)((char *)&v131 - v10);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v131 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v142 = (char **)((char *)&v131 - v16);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v141 = (char **)((char *)&v131 - v18);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v137 = (char **)((char *)&v131 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v136 = (char **)((char *)&v131 - v21);
  v152 = a1;
  v22 = a1[1];
  v23 = sub_23F268774();
  if (v23 >= v22)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      if (v22)
        sub_23F1248E8(0, v22, 1, v152);
      return;
    }
    goto LABEL_160;
  }
  v24 = v23;
  sub_23F1F2B88(v22 / 2);
  v134 = v25;
  v135 = v22;
  v143 = v26;
  v144 = v4;
  if (v22 <= 0)
  {
LABEL_124:
    v28 = (char *)MEMORY[0x24BEE4AF8];
    v73 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_125:
    if (v73 < 2)
    {
LABEL_136:
      swift_bridgeObjectRelease();
      if (v135 >= -1)
        goto LABEL_137;
      goto LABEL_164;
    }
    v124 = *v152;
    while (1)
    {
      v125 = v73 - 2;
      if (v73 < 2)
        break;
      if (!v124)
        goto LABEL_168;
      v126 = v28;
      v127 = *(_QWORD *)&v28[16 * v125 + 32];
      v128 = *(_QWORD *)&v28[16 * v73 + 24];
      sub_23F124B3C(v124 + *(_QWORD *)(v144 + 72) * v127, v124 + *(_QWORD *)(v144 + 72) * *(_QWORD *)&v28[16 * v73 + 16], v124 + *(_QWORD *)(v144 + 72) * v128, v143);
      if (v2)
        goto LABEL_122;
      if (v128 < v127)
        goto LABEL_155;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v126 = sub_23F125084((uint64_t)v28);
      if (v125 >= *((_QWORD *)v126 + 2))
        goto LABEL_156;
      v129 = &v126[16 * v125 + 32];
      *(_QWORD *)v129 = v127;
      *((_QWORD *)v129 + 1) = v128;
      v130 = *((_QWORD *)v126 + 2);
      if (v73 > v130)
        goto LABEL_157;
      memmove(&v126[16 * v73 + 16], &v126[16 * v73 + 32], 16 * (v130 - v73));
      *((_QWORD *)v126 + 2) = v130 - 1;
      v73 = v130 - 1;
      v28 = v126;
      if (v130 <= 2)
        goto LABEL_136;
    }
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
    return;
  }
  v133 = v24;
  v27 = 0;
  v28 = (char *)MEMORY[0x24BEE4AF8];
  v29 = v22;
  v150 = v11;
  v146 = v14;
  while (1)
  {
    v30 = v27;
    v31 = v27 + 1;
    v140 = v27;
    if (v27 + 1 < v29)
    {
      v148 = v29;
      v32 = *v152;
      v33 = *(_QWORD *)(v4 + 72);
      v34 = v136;
      sub_23F123EA0(*v152 + v33 * v31, (uint64_t)v136);
      v147 = v32;
      v149 = v33;
      v35 = v32 + v33 * v30;
      v36 = v137;
      sub_23F123EA0(v35, (uint64_t)v137);
      if (*v34 == *v36 && v34[1] == v36[1])
        v38 = 0;
      else
        v38 = sub_23F268798();
      sub_23F125E40((uint64_t)v137, &qword_256DFE560);
      sub_23F125E40((uint64_t)v136, &qword_256DFE560);
      if (v30 + 2 >= v148)
      {
        v42 = v30 + 2;
        if ((v38 & 1) != 0)
        {
LABEL_27:
          if (v42 < v30)
            goto LABEL_161;
          v39 = v42;
          if (v30 < v42)
          {
            v131 = v28;
            v132 = v2;
            v48 = 0;
            v49 = v149 * (v42 - 1);
            v50 = v42 * v149;
            v51 = v30;
            v52 = v30 * v149;
            do
            {
              if (v51 != v39 + v48 - 1)
              {
                v53 = v147;
                if (!v147)
                  goto LABEL_167;
                v54 = v147 + v52;
                sub_23F125E68(v147 + v52, v139, &qword_256DFE560);
                if (v52 < v49 || v54 >= v53 + v50)
                {
                  swift_arrayInitWithTakeFrontToBack();
                }
                else if (v52 != v49)
                {
                  swift_arrayInitWithTakeBackToFront();
                }
                sub_23F125E68(v139, v53 + v49, &qword_256DFE560);
                v11 = v150;
                v39 = v42;
              }
              ++v51;
              --v48;
              v49 -= v149;
              v50 -= v149;
              v52 += v149;
            }
            while (v51 < v39 + v48);
            v28 = v131;
            v2 = v132;
            v4 = v144;
            v30 = v140;
          }
          goto LABEL_43;
        }
      }
      else
      {
        v40 = v149 * v31;
        v41 = v147;
        v42 = v30 + 2;
        v43 = v149 * (v30 + 2);
        while (1)
        {
          v44 = v141;
          sub_23F123EA0(v41 + v43, (uint64_t)v141);
          v45 = v142;
          sub_23F123EA0(v41 + v40, (uint64_t)v142);
          v46 = *v44 == *v45 && v44[1] == v45[1];
          v47 = v46 ? 0 : sub_23F268798();
          sub_23F125E40((uint64_t)v142, &qword_256DFE560);
          sub_23F125E40((uint64_t)v141, &qword_256DFE560);
          if (((v38 ^ v47) & 1) != 0)
            break;
          v11 = v150;
          v41 += v149;
          if (++v42 >= v148)
          {
            v42 = v148;
            v4 = v144;
            goto LABEL_26;
          }
        }
        v4 = v144;
        v11 = v150;
LABEL_26:
        v30 = v140;
        if ((v38 & 1) != 0)
          goto LABEL_27;
      }
      v39 = v42;
LABEL_43:
      v29 = v148;
      goto LABEL_44;
    }
    v39 = v27 + 1;
LABEL_44:
    if (v39 < v29)
    {
      if (__OFSUB__(v39, v30))
        goto LABEL_159;
      if (v39 - v30 < v133)
      {
        if (__OFADD__(v30, v133))
          goto LABEL_162;
        if (v30 + v133 >= v29)
          v56 = v29;
        else
          v56 = v30 + v133;
        if (v56 < v30)
          goto LABEL_163;
        if (v39 != v56)
        {
          v131 = v28;
          v132 = v2;
          v57 = *(_QWORD *)(v4 + 72);
          v58 = v57 * (v39 - 1);
          v147 = v57;
          v59 = v39 * v57;
          v138 = v56;
          do
          {
            v60 = 0;
            v61 = v30;
            v148 = v59;
            v149 = v39;
            while (1)
            {
              v62 = *v152;
              v63 = v59 + v60 + *v152;
              v64 = v146;
              sub_23F123EA0(v63, (uint64_t)v146);
              sub_23F123EA0(v58 + v60 + v62, (uint64_t)v11);
              if (*v64 == *v11 && v64[1] == v11[1])
              {
                sub_23F125E40((uint64_t)v11, &qword_256DFE560);
                sub_23F125E40((uint64_t)v64, &qword_256DFE560);
                v69 = v149;
                goto LABEL_65;
              }
              v66 = sub_23F268798();
              sub_23F125E40((uint64_t)v11, &qword_256DFE560);
              sub_23F125E40((uint64_t)v64, &qword_256DFE560);
              if ((v66 & 1) == 0)
                break;
              v67 = *v152;
              v59 = v148;
              if (!*v152)
                goto LABEL_165;
              v68 = v67 + v58 + v60;
              sub_23F125E68(v67 + v148 + v60, v151, &qword_256DFE560);
              swift_arrayInitWithTakeFrontToBack();
              sub_23F125E68(v151, v68, &qword_256DFE560);
              v60 -= v147;
              ++v61;
              v69 = v149;
              v11 = v150;
              if (v149 == v61)
                goto LABEL_66;
            }
            v69 = v149;
LABEL_65:
            v59 = v148;
LABEL_66:
            v39 = v69 + 1;
            v58 += v147;
            v59 += v147;
            v30 = v140;
          }
          while (v39 != v138);
          v39 = v138;
          v28 = v131;
          v2 = v132;
        }
      }
    }
    if (v39 < v30)
      goto LABEL_158;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v149 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v28 = sub_23F124F90(0, *((_QWORD *)v28 + 2) + 1, 1, v28);
    v72 = *((_QWORD *)v28 + 2);
    v71 = *((_QWORD *)v28 + 3);
    v73 = v72 + 1;
    if (v72 >= v71 >> 1)
      v28 = sub_23F124F90((char *)(v71 > 1), v72 + 1, 1, v28);
    v74 = v2;
    *((_QWORD *)v28 + 2) = v73;
    v75 = v28 + 32;
    v76 = &v28[16 * v72 + 32];
    v77 = v149;
    *(_QWORD *)v76 = v140;
    *((_QWORD *)v76 + 1) = v77;
    if (v72)
      break;
    v73 = 1;
LABEL_116:
    v29 = v152[1];
    v27 = v149;
    v2 = v74;
    v4 = v144;
    if (v149 >= v29)
      goto LABEL_125;
  }
  while (1)
  {
    v78 = v73 - 1;
    if (v73 >= 4)
    {
      v83 = &v75[16 * v73];
      v84 = *((_QWORD *)v83 - 8);
      v85 = *((_QWORD *)v83 - 7);
      v89 = __OFSUB__(v85, v84);
      v86 = v85 - v84;
      if (v89)
        goto LABEL_143;
      v88 = *((_QWORD *)v83 - 6);
      v87 = *((_QWORD *)v83 - 5);
      v89 = __OFSUB__(v87, v88);
      v81 = v87 - v88;
      v82 = v89;
      if (v89)
        goto LABEL_144;
      v90 = v73 - 2;
      v91 = &v75[16 * v73 - 32];
      v93 = *(_QWORD *)v91;
      v92 = *((_QWORD *)v91 + 1);
      v89 = __OFSUB__(v92, v93);
      v94 = v92 - v93;
      if (v89)
        goto LABEL_145;
      v89 = __OFADD__(v81, v94);
      v95 = v81 + v94;
      if (v89)
        goto LABEL_147;
      if (v95 >= v86)
      {
        v113 = &v75[16 * v78];
        v115 = *(_QWORD *)v113;
        v114 = *((_QWORD *)v113 + 1);
        v89 = __OFSUB__(v114, v115);
        v116 = v114 - v115;
        if (v89)
          goto LABEL_153;
        v106 = v81 < v116;
        goto LABEL_105;
      }
    }
    else
    {
      if (v73 != 3)
      {
        v107 = *((_QWORD *)v28 + 4);
        v108 = *((_QWORD *)v28 + 5);
        v89 = __OFSUB__(v108, v107);
        v100 = v108 - v107;
        v101 = v89;
        goto LABEL_99;
      }
      v80 = *((_QWORD *)v28 + 4);
      v79 = *((_QWORD *)v28 + 5);
      v89 = __OFSUB__(v79, v80);
      v81 = v79 - v80;
      v82 = v89;
    }
    if ((v82 & 1) != 0)
      goto LABEL_146;
    v90 = v73 - 2;
    v96 = &v75[16 * v73 - 32];
    v98 = *(_QWORD *)v96;
    v97 = *((_QWORD *)v96 + 1);
    v99 = __OFSUB__(v97, v98);
    v100 = v97 - v98;
    v101 = v99;
    if (v99)
      goto LABEL_148;
    v102 = &v75[16 * v78];
    v104 = *(_QWORD *)v102;
    v103 = *((_QWORD *)v102 + 1);
    v89 = __OFSUB__(v103, v104);
    v105 = v103 - v104;
    if (v89)
      goto LABEL_150;
    if (__OFADD__(v100, v105))
      goto LABEL_152;
    if (v100 + v105 >= v81)
    {
      v106 = v81 < v105;
LABEL_105:
      if (v106)
        v78 = v90;
      goto LABEL_107;
    }
LABEL_99:
    if ((v101 & 1) != 0)
      goto LABEL_149;
    v109 = &v75[16 * v78];
    v111 = *(_QWORD *)v109;
    v110 = *((_QWORD *)v109 + 1);
    v89 = __OFSUB__(v110, v111);
    v112 = v110 - v111;
    if (v89)
      goto LABEL_151;
    if (v112 < v100)
      goto LABEL_116;
LABEL_107:
    v117 = v78 - 1;
    if (v78 - 1 >= v73)
    {
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
      goto LABEL_154;
    }
    if (!*v152)
      goto LABEL_166;
    v118 = v28;
    v119 = &v75[16 * v117];
    v120 = *(_QWORD *)v119;
    v121 = &v75[16 * v78];
    v122 = *((_QWORD *)v121 + 1);
    sub_23F124B3C(*v152 + *(_QWORD *)(v144 + 72) * *(_QWORD *)v119, *v152 + *(_QWORD *)(v144 + 72) * *(_QWORD *)v121, *v152 + *(_QWORD *)(v144 + 72) * v122, v143);
    if (v74)
      break;
    if (v122 < v120)
      goto LABEL_140;
    if (v78 > *((_QWORD *)v118 + 2))
      goto LABEL_141;
    *(_QWORD *)v119 = v120;
    *(_QWORD *)&v75[16 * v117 + 8] = v122;
    v123 = *((_QWORD *)v118 + 2);
    if (v78 >= v123)
      goto LABEL_142;
    v28 = v118;
    v73 = v123 - 1;
    memmove(&v75[16 * v78], v121 + 16, 16 * (v123 - 1 - v78));
    *((_QWORD *)v118 + 2) = v123 - 1;
    v11 = v150;
    if (v123 <= 2)
      goto LABEL_116;
  }
  v2 = v74;
LABEL_122:
  swift_bridgeObjectRelease();
  if (v135 < -1)
  {
    __break(1u);
    goto LABEL_124;
  }
LABEL_137:
  *(_QWORD *)(v134 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_23F1248E8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v26 = a1;
  v27 = sub_23F1217E8(&qword_256DFE560);
  v7 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v30 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v24 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (uint64_t *)((char *)&v24 - v13);
  v29 = a3;
  v25 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v32 = v15 * (v29 - 1);
    v28 = v15;
    v31 = v15 * v29;
    while (2)
    {
      v16 = 0;
      v17 = v26;
      while (1)
      {
        v18 = *a4;
        sub_23F123EA0(v31 + v16 + *a4, (uint64_t)v14);
        sub_23F123EA0(v32 + v16 + v18, (uint64_t)v11);
        if (*v14 == *v11 && v14[1] == v11[1])
          break;
        v20 = sub_23F268798();
        sub_23F125E40((uint64_t)v11, &qword_256DFE560);
        sub_23F125E40((uint64_t)v14, &qword_256DFE560);
        if ((v20 & 1) != 0)
        {
          v21 = *a4;
          if (!*a4)
          {
            __break(1u);
            return;
          }
          v22 = a4;
          v23 = v21 + v32 + v16;
          sub_23F125E68(v21 + v31 + v16, v30, &qword_256DFE560);
          swift_arrayInitWithTakeFrontToBack();
          sub_23F125E68(v30, v23, &qword_256DFE560);
          v16 -= v28;
          ++v17;
          a4 = v22;
          if (v29 != v17)
            continue;
        }
        goto LABEL_13;
      }
      sub_23F125E40((uint64_t)v11, &qword_256DFE560);
      sub_23F125E40((uint64_t)v14, &qword_256DFE560);
LABEL_13:
      v32 += v28;
      v31 += v28;
      if (++v29 != v25)
        continue;
      break;
    }
  }
}

void sub_23F124B3C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int64_t v18;
  int64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v33;
  BOOL v35;
  unint64_t v36;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  char v46;
  int64_t v50;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;

  v53 = a4;
  v55 = a3;
  v54 = sub_23F1217E8(&qword_256DFE560);
  v6 = MEMORY[0x24BDAC7A8](v54);
  v8 = (uint64_t *)((char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x24BDAC7A8](v6);
  v58 = (uint64_t *)((char *)&v52 - v10);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (uint64_t *)((char *)&v52 - v12);
  MEMORY[0x24BDAC7A8](v11);
  v16 = (uint64_t *)((char *)&v52 - v15);
  v17 = *(_QWORD *)(v14 + 72);
  if (!v17)
  {
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  v18 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v17 == -1)
    goto LABEL_88;
  v20 = v55 - a2;
  if (v55 - a2 == 0x8000000000000000 && v17 == -1)
    goto LABEL_89;
  v22 = v18 / v17;
  v23 = v20 / v17;
  v57 = *(_QWORD *)(v14 + 72);
  if (v18 / v17 >= v20 / v17)
  {
    v36 = v53;
    sub_23F2581F0(a2, v20 / v17);
    v26 = v36 + v23 * v17;
    if (v23 * v17 < 1 || a1 >= a2)
    {
      v24 = v53;
    }
    else
    {
      v56 = -v17;
      v38 = v55;
      do
      {
        v39 = v38;
        v55 = v26;
        v40 = v56;
        v41 = v26 + v56;
        v42 = v26 + v56;
        v43 = v58;
        sub_23F123EA0(v42, (uint64_t)v58);
        v44 = a2 + v40;
        sub_23F123EA0(a2 + v40, (uint64_t)v8);
        if (*v43 == *v8 && v43[1] == v8[1])
          v46 = 0;
        else
          v46 = sub_23F268798();
        v38 = v39 + v56;
        sub_23F125E40((uint64_t)v8, &qword_256DFE560);
        sub_23F125E40((uint64_t)v58, &qword_256DFE560);
        if ((v46 & 1) != 0)
        {
          if (v39 < a2 || v38 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            a2 = v44;
            v26 = v55;
          }
          else
          {
            if (v39 != a2)
              swift_arrayInitWithTakeBackToFront();
            a2 = v44;
            v26 = v55;
          }
        }
        else if (v39 < v55 || v38 >= v55)
        {
          swift_arrayInitWithTakeFrontToBack();
          v26 = v41;
        }
        else
        {
          if (v39 != v55)
            swift_arrayInitWithTakeBackToFront();
          v26 = v41;
        }
      }
      while (v26 > v53 && a2 > a1);
      v24 = v53;
    }
  }
  else
  {
    v24 = v53;
    sub_23F2581F0(a1, v18 / v17);
    v25 = v22 * v17;
    v26 = v24 + v22 * v17;
    if (v25 >= 1 && a2 < v55)
    {
      while (1)
      {
        sub_23F123EA0(a2, (uint64_t)v16);
        sub_23F123EA0(v24, (uint64_t)v13);
        if (*v16 == *v13 && v16[1] == v13[1])
          break;
        v29 = sub_23F268798();
        sub_23F125E40((uint64_t)v13, &qword_256DFE560);
        sub_23F125E40((uint64_t)v16, &qword_256DFE560);
        if ((v29 & 1) == 0)
          goto LABEL_27;
        v30 = v57;
        v31 = a2 + v57;
        if (a1 < a2 || a1 >= v31)
        {
          swift_arrayInitWithTakeFrontToBack();
LABEL_39:
          v30 = v57;
          goto LABEL_40;
        }
        if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_39;
        }
LABEL_40:
        a1 += v30;
        v35 = v24 >= v26 || v31 >= v55;
        a2 = v31;
        if (v35)
          goto LABEL_82;
      }
      sub_23F125E40((uint64_t)v13, &qword_256DFE560);
      sub_23F125E40((uint64_t)v16, &qword_256DFE560);
LABEL_27:
      v30 = v57;
      v33 = v24 + v57;
      if (a1 < v24 || a1 >= v33)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (a1 == v24)
        {
LABEL_36:
          v31 = a2;
          v24 = v33;
          goto LABEL_40;
        }
        swift_arrayInitWithTakeBackToFront();
      }
      v30 = v57;
      goto LABEL_36;
    }
  }
LABEL_82:
  v50 = v26 - v24;
  if (v57 != -1 || v50 != 0x8000000000000000)
  {
    sub_23F2581F0(v24, v50 / v57);
    return;
  }
LABEL_90:
  __break(1u);
}

char *sub_23F124F90(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F1217E8(&qword_256DFE6D8);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_23F125084(uint64_t a1)
{
  return sub_23F124F90(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23F125098(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  int64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __int128 *v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;

  v43 = a1;
  v3 = sub_23F268078();
  v45 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v42 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F1217E8(&qword_256DFE558);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v37 - v9;
  v11 = *(_QWORD *)(a2 + 64);
  v38 = a2 + 64;
  v12 = 1 << *(_BYTE *)(a2 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v37 = v39 - 1;
  v41 = a2;
  result = swift_bridgeObjectRetain();
  v46 = 0;
  v44 = 0;
  v40 = v3;
  v16 = v45;
  if (!v14)
    goto LABEL_6;
LABEL_4:
  v17 = v46;
  v18 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  v19 = v18 | (v44 << 6);
LABEL_5:
  v46 = v17;
  v20 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * v19);
  v22 = *v20;
  v21 = v20[1];
  v23 = v45;
  v24 = *(_QWORD *)(v41 + 56) + *(_QWORD *)(v45 + 72) * v19;
  v25 = sub_23F1217E8(&qword_256DFE560);
  v26 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
  v3 = v40;
  v26(&v8[*(int *)(v25 + 48)], v24, v40);
  *(_QWORD *)v8 = v22;
  *((_QWORD *)v8 + 1) = v21;
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v25);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_23F125E68((uint64_t)v8, (uint64_t)v10, &qword_256DFE558);
    v32 = sub_23F1217E8(&qword_256DFE560);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v32) == 1)
    {
      swift_release();
      return sub_23F268840();
    }
    v33 = v42;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v42, &v10[*(int *)(v32 + 48)], v3);
    v34 = *((_QWORD *)v43 + 8);
    v35 = v43[1];
    v47 = *v43;
    v48 = v35;
    v36 = v43[3];
    v49 = v43[2];
    v50 = v36;
    v51 = v34;
    sub_23F2681A4();
    swift_bridgeObjectRelease();
    sub_23F125DE4(&qword_256DFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A30]);
    sub_23F26812C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v33, v3);
    result = sub_23F268864();
    v46 ^= result;
    if (v14)
      goto LABEL_4;
LABEL_6:
    v27 = v44 + 1;
    if (__OFADD__(v44, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 < v39)
    {
      v28 = *(_QWORD *)(v38 + 8 * v27);
      if (v28)
        goto LABEL_9;
      v29 = v44 + 2;
      ++v44;
      if (v27 + 1 < v39)
      {
        v28 = *(_QWORD *)(v38 + 8 * v29);
        if (v28)
        {
          ++v27;
LABEL_9:
          v17 = v46;
          v14 = (v28 - 1) & v28;
          v19 = __clz(__rbit64(v28)) + (v27 << 6);
          v44 = v27;
          goto LABEL_5;
        }
        v30 = v27 + 2;
        v44 = v27 + 1;
        if (v27 + 2 < v39)
          break;
      }
    }
LABEL_21:
    v31 = sub_23F1217E8(&qword_256DFE560);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 1, 1, v31);
    v14 = 0;
  }
  v28 = *(_QWORD *)(v38 + 8 * v30);
  if (v28)
  {
    v27 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v27 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v27 >= v39)
    {
      v44 = v37;
      goto LABEL_21;
    }
    v28 = *(_QWORD *)(v38 + 8 * v27);
    ++v30;
    if (v28)
      goto LABEL_9;
  }
LABEL_27:
  __break(1u);
  return result;
}

_QWORD *sub_23F12545C(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_23F125480()
{
  unint64_t result;

  result = qword_256DFE578;
  if (!qword_256DFE578)
  {
    result = MEMORY[0x242667160](&unk_23F2692E8, &_s6ObjectV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256DFE578);
  }
  return result;
}

unint64_t sub_23F1254BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256DFE590;
  if (!qword_256DFE590)
  {
    v1 = sub_23F125540(&qword_256DFE588);
    sub_23F125DE4(&qword_256DFE598, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A28]);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256DFE590);
  }
  return result;
}

uint64_t sub_23F125540(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x242667154](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t _s16IntelligenceFlow17AnySessionMessageVwxx_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_23F1255A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256DFE5B0;
  if (!qword_256DFE5B0)
  {
    v1 = sub_23F125540(&qword_256DFE588);
    sub_23F125DE4(&qword_256DFE5B8, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A40]);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256DFE5B0);
  }
  return result;
}

void sub_23F125628()
{
  sub_23F125DE4(&qword_256DFE5C0, (uint64_t (*)(uint64_t))type metadata accessor for TypedValue.Object, (uint64_t)&protocol conformance descriptor for TypedValue.Object);
}

ValueMetadata *type metadata accessor for AST()
{
  return &type metadata for AST;
}

ValueMetadata *type metadata accessor for AST.Value()
{
  return &type metadata for AST.Value;
}

uint64_t *_s6ObjectVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F2680A8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s6ObjectVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F2680A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t _s6ObjectVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F2680A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6ObjectVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F2680A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ObjectVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F2680A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s6ObjectVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F2680A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ObjectVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F1258DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F126070();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t _s6ObjectVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F12595C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_23F126070();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_23F126098(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    sub_23F12612C();
  }
}

uint64_t sub_23F1259BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F2680A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for MGDeviceClass(uint64_t a1)
{
  sub_23F125EA8(a1, &qword_256DFE658);
}

uint64_t initializeBufferWithCopyOfBuffer for SessionServerDebuggerEvent.InjectionValueCaptured(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithCopy for AuditToken(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for AuditToken(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AuditToken(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
  sub_23F125EA8(a1, &qword_256DFE660);
}

_BYTE *_s6ObjectV10CodingKeysOwCP(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s6ObjectV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s6ObjectV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F125BC4 + 4 * byte_23F2690C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F125BF8 + 4 * byte_23F2690C0[v4]))();
}

uint64_t sub_23F125BF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F125C00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F125C08);
  return result;
}

uint64_t sub_23F125C14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F125C1CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F125C20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F125C28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F125C34(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23F125C3C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *_s6ObjectV10CodingKeysOMa()
{
  return &_s6ObjectV10CodingKeysON;
}

unint64_t sub_23F125C5C()
{
  unint64_t result;

  result = qword_256DFE668;
  if (!qword_256DFE668)
  {
    result = MEMORY[0x242667160](&unk_23F2692C0, &_s6ObjectV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256DFE668);
  }
  return result;
}

unint64_t sub_23F125C9C()
{
  unint64_t result;

  result = qword_256DFE670;
  if (!qword_256DFE670)
  {
    result = MEMORY[0x242667160](&unk_23F269230, &_s6ObjectV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256DFE670);
  }
  return result;
}

unint64_t sub_23F125CDC()
{
  unint64_t result;

  result = qword_256DFE678;
  if (!qword_256DFE678)
  {
    result = MEMORY[0x242667160](&unk_23F269258, &_s6ObjectV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256DFE678);
  }
  return result;
}

uint64_t sub_23F125D18(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3 || a3 == 2 || a3 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23F125D40(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3 || a3 == 2 || a3 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_23F125D68(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_23F1261A8(v2);
  sub_23F126078();
}

void sub_23F125D90(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F1261F8(a1, a2, a3);
  sub_23F1260A4(v3);
  sub_23F126078();
}

void sub_23F125DB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_23F1261F8(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  sub_23F126078();
}

void sub_23F125DE4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x242667160](a3, v5), a1);
  }
  sub_23F126078();
}

uint64_t sub_23F125E20()
{
  return swift_release();
}

void sub_23F125E2C()
{
  sub_23F12D3D0();
}

void sub_23F125E40(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_23F1217E8(a2);
  sub_23F1261A8(v2);
  sub_23F126078();
}

void sub_23F125E68(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F1217E8(a3);
  sub_23F1260A4(v3);
  sub_23F126078();
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_23F125EA8(a1, &qword_256DFE6E0);
}

void sub_23F125EA8(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_23F125F14()
{
  return sub_23F268078();
}

uint64_t sub_23F125F84()
{
  return sub_23F268078();
}

uint64_t sub_23F125FBC()
{
  return 0;
}

uint64_t sub_23F125FD8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v2);
}

uint64_t sub_23F12601C()
{
  return type metadata accessor for TypedValue.Object();
}

uint64_t sub_23F126024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8))(v0, v1);
}

uint64_t sub_23F126038@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F126040@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F126070()
{
  return sub_23F2680A8();
}

uint64_t sub_23F126080()
{
  return sub_23F268054();
}

uint64_t sub_23F126088(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(a1, a2, v2);
}

uint64_t sub_23F126098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, a2, a3, a4);
}

uint64_t sub_23F1260A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t sub_23F1260BC()
{
  return sub_23F268798();
}

uint64_t sub_23F1260D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void sub_23F1260DC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F1260FC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F126138@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F126140()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F126148()
{
  return sub_23F268798();
}

void sub_23F126150(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F125DB0(a1, a2, v2);
}

uint64_t sub_23F126158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, 1, 1, a4);
}

void sub_23F126164()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = (v0 - 1) & v0;
}

uint64_t sub_23F126180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23F126188()
{
  return sub_23F268750();
}

uint64_t sub_23F12619C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F1261A8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_23F1261BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, a1, v1);
}

uint64_t sub_23F1261D0@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, v3);
}

uint64_t sub_23F1261F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t sub_23F126208()
{
  return swift_release();
}

uint64_t sub_23F126220(uint64_t a1)
{
  uint64_t v1;

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, 0, 1, v1);
}

uint64_t sub_23F126230(uint64_t a1)
{
  uint64_t v1;

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, 0, 1, v1);
}

uint64_t sub_23F126240()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F126250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F126258()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F125D18(v1, v0, 1);
}

void sub_23F126280(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F125D68(a1, v1);
}

uint64_t sub_23F126288(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F126290()
{
  return swift_release();
}

void sub_23F1262A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = (v0 - 1) & v0;
}

uint64_t sub_23F1262C0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F1262F0()
{
  return 0;
}

uint64_t sub_23F126318()
{
  return swift_projectBox();
}

void sub_23F126324(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F125D68(v2, a2);
}

uint64_t sub_23F12632C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F126334()
{
  return swift_getEnumCaseMultiPayload();
}

void sub_23F12633C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F125D68(a1, v1);
}

void sub_23F126350(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F125DB0(a1, a2, v2);
}

uint64_t sub_23F126358()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F126364()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F12636C()
{
  uint64_t *v0;

  return sub_23F1217E8(v0);
}

uint64_t sub_23F126374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return *(_QWORD *)(v1 + 56) + *(_QWORD *)(*(_QWORD *)(v2 - 104) + 72) * v0;
}

uint64_t sub_23F126388()
{
  uint64_t *v0;

  return sub_23F1217E8(v0);
}

uint64_t sub_23F126390()
{
  return swift_projectBox();
}

uint64_t sub_23F12639C()
{
  uint64_t *v0;

  return sub_23F1217E8(v0);
}

uint64_t sub_23F1263A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, a3);
}

uint64_t sub_23F1263B8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F1263C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F1263C8()
{
  uint64_t *v0;

  return sub_23F1217E8(v0);
}

uint64_t sub_23F1263D0()
{
  uint64_t *v0;

  return sub_23F1217E8(v0);
}

uint64_t sub_23F1263D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F1263E0()
{
  return swift_allocBox();
}

uint64_t sub_23F1263E8()
{
  return sub_23F2686B4();
}

uint64_t sub_23F1263F4()
{
  uint64_t v0;

  sub_23F126DC0();
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t sub_23F126420(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = sub_23F126DC0();
  *(_BYTE *)(v1 + 112) = a1;
  return result;
}

uint64_t sub_23F126458()
{
  sub_23F126DC0();
  return swift_bridgeObjectRetain();
}

uint64_t BreakpointManager.__allocating_init(getBreakpointIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  BreakpointManager.init(getBreakpointIdentifier:)(a1, a2);
  return v4;
}

uint64_t *BreakpointManager.init(getBreakpointIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *v2;
  swift_defaultActor_initialize();
  *((_BYTE *)v2 + 112) = 0;
  v6 = *(_QWORD *)(v5 + 80);
  v7 = sub_23F268294();
  if (MEMORY[0x2426666B0](v7, v6))
  {
    v8 = sub_23F126884(v7, v6, *(_QWORD *)(v5 + 88));
  }
  else
  {
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x24BEE4B08];
  }
  v2[15] = v8;
  v2[16] = a1;
  v2[17] = a2;
  return v2;
}

uint64_t sub_23F126564()
{
  return sub_23F126420(1);
}

uint64_t sub_23F12656C()
{
  return sub_23F126420(0);
}

uint64_t sub_23F126574(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *v1;
  if ((sub_23F1263F4() & 1) != 0)
  {
    v4 = 1;
  }
  else
  {
    v5 = ((uint64_t (*)(uint64_t))v1[16])(a1);
    v6 = sub_23F126458();
    MEMORY[0x242666734](v5, v6, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88));
    swift_bridgeObjectRelease();
    v7 = sub_23F26836C();
    swift_bridgeObjectRelease();
    v4 = v7 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F126638(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v10 - v7;
  (*(void (**)(char *))(v3 + 16))(v6);
  sub_23F126DC0();
  sub_23F268384();
  sub_23F268354();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return swift_endAccess();
}

uint64_t sub_23F126714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_23F26845C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - v2;
  sub_23F126DC0();
  sub_23F268384();
  sub_23F268360();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_endAccess();
}

uint64_t BreakpointManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t BreakpointManager.__deallocating_deinit()
{
  BreakpointManager.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t BreakpointManager.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F126828()
{
  return BreakpointManager.unownedExecutor.getter();
}

uint64_t sub_23F126840(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_23F126858()
{
  uint64_t v0;
  char v1;

  v1 = sub_23F126574(*(_QWORD *)(v0 + 16));
  return sub_23F126DB4(v1 & 1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F126884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t (*v18)(char *, unint64_t, uint64_t);
  uint64_t result;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a1;
  v45 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)&v37 - v10;
  v37 = v11;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v37 - v13;
  if (MEMORY[0x2426666A4](v12))
  {
    sub_23F268510();
    v15 = sub_23F268504();
  }
  else
  {
    v15 = MEMORY[0x24BEE4B08];
  }
  v40 = MEMORY[0x2426666B0](v5, a2);
  if (v40)
  {
    v16 = 0;
    v43 = v15 + 56;
    v38 = v14;
    v39 = v5;
    while (1)
    {
      v17 = sub_23F2682AC();
      sub_23F268288();
      if ((v17 & 1) != 0)
      {
        v18 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v45 + 16);
        result = v18(v14, v5+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v16, a2);
      }
      else
      {
        result = sub_23F268570();
        if (v37 != 8)
          goto LABEL_24;
        v46 = result;
        v18 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v45 + 16);
        v18(v14, (unint64_t)&v46, a2);
        result = swift_unknownObjectRelease();
      }
      v20 = __OFADD__(v16, 1);
      v21 = v16 + 1;
      if (v20)
        break;
      v22 = v45;
      v41 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      v42 = v21;
      v41(v44, v14, a2);
      v23 = sub_23F268120();
      v24 = -1 << *(_BYTE *)(v15 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      v27 = *(_QWORD *)(v43 + 8 * (v25 >> 6));
      v28 = 1 << v25;
      v29 = *(_QWORD *)(v22 + 72);
      if (((1 << v25) & v27) != 0)
      {
        v30 = ~v24;
        while (1)
        {
          v18(v8, *(_QWORD *)(v15 + 48) + v29 * v25, a2);
          v31 = a3;
          v32 = sub_23F268138();
          v33 = *(void (**)(char *, uint64_t))(v45 + 8);
          v33(v8, a2);
          if ((v32 & 1) != 0)
            break;
          v25 = (v25 + 1) & v30;
          v26 = v25 >> 6;
          v27 = *(_QWORD *)(v43 + 8 * (v25 >> 6));
          v28 = 1 << v25;
          a3 = v31;
          if ((v27 & (1 << v25)) == 0)
          {
            v14 = v38;
            v5 = v39;
            goto LABEL_14;
          }
        }
        v33(v44, a2);
        a3 = v31;
        v14 = v38;
        v5 = v39;
      }
      else
      {
LABEL_14:
        v34 = v44;
        *(_QWORD *)(v43 + 8 * v26) = v28 | v27;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(*(_QWORD *)(v15 + 48) + v29 * v25, v34, a2);
        v35 = *(_QWORD *)(v15 + 16);
        v20 = __OFADD__(v35, 1);
        v36 = v35 + 1;
        if (v20)
          goto LABEL_23;
        *(_QWORD *)(v15 + 16) = v36;
      }
      v16 = v42;
      if (v42 == v40)
        goto LABEL_21;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

uint64_t sub_23F126B90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F1263F4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23F126BBC(char *a1)
{
  return sub_23F126420(*a1);
}

uint64_t sub_23F126BE0()
{
  return 16;
}

__n128 sub_23F126BEC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of BreakpointPredicate.shouldBreak(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F126C70;
  return v9(a1, a2, a3);
}

uint64_t sub_23F126C70(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return sub_23F126DB4(a1, *(uint64_t (**)(void))(v4 + 8));
}

uint64_t sub_23F126CBC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for BreakpointManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F126D88(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BreakpointManager);
}

uint64_t method lookup function for BreakpointManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BreakpointManager.isStepping.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of BreakpointManager.__allocating_init(getBreakpointIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of BreakpointManager.enableStepping()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of BreakpointManager.disableStepping()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of BreakpointManager.shouldBreak(on:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of BreakpointManager.enableBreakpoint(on:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of BreakpointManager.disableBreakpoint(on:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t sub_23F126D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24266710C](a1, v6, a5);
}

uint64_t sub_23F126DB4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23F126DC0()
{
  return swift_beginAccess();
}

void ClientEffect.Registry.toolDefinitions.getter()
{
  sub_23F12BB08((void (*)(uint64_t, uint64_t *))sub_23F126DE4);
}

uint64_t sub_23F126DE4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v27 = MEMORY[0x24BEE4AF8];
  sub_23F12D2CC(0, v1, 0);
  v2 = v27;
  result = sub_23F131284(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    v6 = result;
    if (result < 1 << *(_BYTE *)(a1 + 32))
    {
      v7 = a1 + 64;
      while ((*(_QWORD *)(v7 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
      {
        if (v5 != *(_DWORD *)(a1 + 36))
          goto LABEL_18;
        v17 = v1;
        v18 = v5;
        v8 = *(_QWORD *)(a1 + 56) + 104 * v6;
        v9 = *(_QWORD *)(v8 + 8);
        v10 = *(_QWORD *)(v8 + 24);
        v22 = *(_QWORD *)(v8 + 16);
        v23 = *(_QWORD *)v8;
        v11 = *(_QWORD *)(v8 + 40);
        v20 = *(_QWORD *)(v8 + 48);
        v21 = *(_QWORD *)(v8 + 32);
        v12 = *(_QWORD *)(v8 + 64);
        v13 = *(_QWORD *)(v8 + 72);
        v19 = *(_BYTE *)(v8 + 80);
        v25 = *(_QWORD *)(v8 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26 = v11;
        swift_bridgeObjectRetain();
        v24 = v12;
        sub_23F12D304(v12);
        v15 = *(_QWORD *)(v27 + 16);
        v14 = *(_QWORD *)(v27 + 24);
        result = swift_bridgeObjectRetain();
        if (v15 >= v14 >> 1)
          result = (uint64_t)sub_23F12D2CC((char *)(v14 > 1), v15 + 1, 1);
        *(_QWORD *)(v27 + 16) = v15 + 1;
        v16 = v27 + 88 * v15;
        *(_QWORD *)(v16 + 32) = v23;
        *(_QWORD *)(v16 + 40) = v9;
        *(_QWORD *)(v16 + 48) = v22;
        *(_QWORD *)(v16 + 56) = v10;
        *(_QWORD *)(v16 + 64) = v21;
        *(_QWORD *)(v16 + 72) = v26;
        *(_QWORD *)(v16 + 80) = v20;
        *(_QWORD *)(v16 + 88) = v25;
        *(_QWORD *)(v16 + 96) = v24;
        *(_QWORD *)(v16 + 104) = v13;
        *(_BYTE *)(v16 + 112) = v19;
        if ((uint64_t)v6 >= -(-1 << *(_BYTE *)(a1 + 32)))
          goto LABEL_19;
        v7 = a1 + 64;
        if ((*(_QWORD *)(a1 + 64 + 8 * (v6 >> 6)) & (1 << v6)) == 0)
          goto LABEL_20;
        if (v18 != *(_DWORD *)(a1 + 36))
          goto LABEL_21;
        result = sub_23F2684B0();
        v1 = v17 - 1;
        if (v17 == 1)
          return v2;
        v6 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          v5 = *(_DWORD *)(a1 + 36);
          if (result < 1 << *(_BYTE *)(a1 + 32))
            continue;
        }
        goto LABEL_22;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
  }
LABEL_22:
  __break(1u);
  return result;
}

void sub_23F127034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = type metadata accessor for ClientAction(0);
  v29 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v28 = (uint64_t)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v27 = (uint64_t)v23 - v6;
  v7 = type metadata accessor for ClientAction.Definition(0);
  v26 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v23[1] = v1;
    v30 = MEMORY[0x24BEE4AF8];
    sub_23F12D348(0, v10, 0);
    v11 = sub_23F131284(a1);
    if ((v11 & 0x8000000000000000) == 0)
    {
      v13 = v11;
      if (v11 < 1 << *(_BYTE *)(a1 + 32))
      {
        v14 = v12;
        v15 = a1 + 64;
        v24 = a1 + 64;
        v25 = v9;
        while ((*(_QWORD *)(v15 + 8 * (v13 >> 6)) & (1 << v13)) != 0)
        {
          if (v14 != *(_DWORD *)(a1 + 36))
            goto LABEL_20;
          v16 = v27;
          sub_23F125DB0(*(_QWORD *)(a1 + 56) + *(_QWORD *)(v29 + 72) * v13, v27, type metadata accessor for ClientAction);
          v17 = v16;
          v18 = v28;
          sub_23F125D90(v17, v28, type metadata accessor for ClientAction);
          sub_23F125DB0(v18, (uint64_t)v9, type metadata accessor for ClientAction.Definition);
          sub_23F12E3EC(v18, type metadata accessor for ClientAction);
          v19 = v30;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F12D348(0, *(_QWORD *)(v19 + 16) + 1, 1);
            v19 = v30;
          }
          v21 = *(_QWORD *)(v19 + 16);
          v20 = *(_QWORD *)(v19 + 24);
          if (v21 >= v20 >> 1)
          {
            sub_23F12D348(v20 > 1, v21 + 1, 1);
            v19 = v30;
          }
          *(_QWORD *)(v19 + 16) = v21 + 1;
          v9 = v25;
          sub_23F125D90((uint64_t)v25, v19+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v21, type metadata accessor for ClientAction.Definition);
          if ((uint64_t)v13 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_21;
          v15 = v24;
          if ((*(_QWORD *)(v24 + 8 * (v13 >> 6)) & (1 << v13)) == 0)
            goto LABEL_22;
          if (v14 != *(_DWORD *)(a1 + 36))
            goto LABEL_23;
          v22 = sub_23F2684B0();
          if (!--v10)
            return;
          v13 = v22;
          if ((v22 & 0x8000000000000000) == 0)
          {
            v14 = *(_DWORD *)(a1 + 36);
            if (v22 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_24;
        }
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
      }
    }
LABEL_24:
    __break(1u);
  }
}

IntelligenceFlow::ClientEffect::Registry __swiftcall ClientEffect.Registry.init(clientEffects:)(Swift::OpaquePointer clientEffects)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  IntelligenceFlow::ClientEffect::Registry result;
  _QWORD *v20;
  void *rawValue;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v3 = v1;
  v4 = MEMORY[0x24BEE4AF8];
  sub_23F268108();
  v5 = *((_QWORD *)clientEffects._rawValue + 2);
  if (v5)
  {
    v20 = v3;
    sub_23F12D2E8(0, v5, 0);
    v6 = 0;
    v7 = v4;
    rawValue = clientEffects._rawValue;
    do
    {
      v8 = *(_QWORD *)((char *)clientEffects._rawValue + v6 + 40);
      v9 = *(_QWORD *)((char *)clientEffects._rawValue + v6 + 56);
      v25 = *(_QWORD *)((char *)clientEffects._rawValue + v6 + 48);
      v26 = *(_QWORD *)((char *)clientEffects._rawValue + v6 + 32);
      v10 = *(_QWORD *)((char *)clientEffects._rawValue + v6 + 72);
      v11 = *(_QWORD *)((char *)clientEffects._rawValue + v6 + 88);
      v23 = *(_QWORD *)((char *)clientEffects._rawValue + v6 + 80);
      v24 = *(_QWORD *)((char *)clientEffects._rawValue + v6 + 64);
      v13 = *(_QWORD *)((char *)clientEffects._rawValue + v6 + 96);
      v12 = *(_QWORD *)((char *)clientEffects._rawValue + v6 + 104);
      v22 = *((_BYTE *)clientEffects._rawValue + v6 + 112);
      v28 = *(_OWORD *)((char *)clientEffects._rawValue + v6 + 120);
      sub_23F131A54();
      v27 = v8;
      sub_23F1263B8();
      sub_23F131798();
      sub_23F13174C();
      sub_23F12D304(v13);
      v14 = *(_QWORD *)(v7 + 16);
      v15 = *(_QWORD *)(v7 + 24);
      sub_23F13184C();
      swift_retain();
      sub_23F13174C();
      if (v14 >= v15 >> 1)
        sub_23F12D2E8((char *)(v15 > 1), v14 + 1, 1);
      *(_QWORD *)(v7 + 16) = v14 + 1;
      v16 = v7 + 120 * v14;
      *(_QWORD *)(v16 + 32) = v24;
      *(_QWORD *)(v16 + 40) = v10;
      *(_QWORD *)(v16 + 48) = v26;
      *(_QWORD *)(v16 + 56) = v27;
      *(_QWORD *)(v16 + 64) = v25;
      *(_QWORD *)(v16 + 72) = v9;
      *(_QWORD *)(v16 + 80) = v24;
      *(_QWORD *)(v16 + 88) = v10;
      *(_QWORD *)(v16 + 96) = v23;
      *(_QWORD *)(v16 + 104) = v11;
      *(_QWORD *)(v16 + 112) = v13;
      *(_QWORD *)(v16 + 120) = v12;
      *(_BYTE *)(v16 + 128) = v22;
      v6 += 104;
      *(_OWORD *)(v16 + 136) = v28;
      --v5;
      clientEffects._rawValue = rawValue;
    }
    while (v5);
    sub_23F13190C();
    v3 = v20;
  }
  else
  {
    sub_23F13190C();
    v7 = MEMORY[0x24BEE4AF8];
  }
  sub_23F1274EC(v7, &qword_256DFEB30, (void (*)(uint64_t, uint64_t, uint64_t *))sub_23F12DA0C);
  v18 = v17;
  result.clientEffects._rawValue = (void *)sub_23F1262C0();
  *v3 = v18;
  return result;
}

void sub_23F1274EC(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F1217E8(a2);
    v4 = sub_23F268618();
  }
  else
  {
    v4 = MEMORY[0x24BEE4B00];
  }
  v6 = v4;
  v5 = sub_23F1263B8();
  a3(v5, 1, &v6);
  sub_23F1318B8();
  sub_23F131634();
}

uint64_t ClientEffect.Registry.register(definition:run:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[10];
  char v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_BYTE *)(a1 + 80);
  v14[0] = *(_QWORD *)a1;
  v14[1] = v3;
  v14[2] = v4;
  v14[3] = v5;
  v14[4] = v6;
  v14[5] = v7;
  v14[6] = v9;
  v14[7] = v8;
  v14[8] = v10;
  v14[9] = v11;
  v15 = v12;
  v16 = a2;
  v17 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_23F131798();
  sub_23F13175C();
  sub_23F12D304(v10);
  sub_23F13174C();
  sub_23F131C14();
  sub_23F12E2F0(v14, v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F127630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v6 = sub_23F1217E8(&qword_256DFE858);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ClientAction(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v12) == 1)
  {
    sub_23F12EEB4(a1);
    sub_23F12E1A8(a2, a3, (uint64_t)v8);
    swift_bridgeObjectRelease();
    return sub_23F12EEB4((uint64_t)v8);
  }
  else
  {
    sub_23F125D90(a1, (uint64_t)v11, type metadata accessor for ClientAction);
    sub_23F12E4C0((uint64_t)v11, a2, a3);
    return swift_bridgeObjectRelease();
  }
}

uint64_t ClientEffect.Registry.run(clientEffect:client:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = type metadata accessor for SessionClientMessage(0);
  v3[5] = sub_23F131384();
  v3[6] = sub_23F1314B4();
  v3[7] = type metadata accessor for MessagePayload(0);
  v3[8] = sub_23F131384();
  v3[9] = sub_23F1314B4();
  type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
  v3[10] = sub_23F1314BC();
  v4 = sub_23F131B8C();
  v3[11] = v4;
  v3[12] = *(_QWORD *)(v4 - 8);
  v3[13] = sub_23F131384();
  v3[14] = sub_23F1314B4();
  v5 = sub_23F1314B4();
  v6 = *v2;
  v3[15] = v5;
  v3[16] = v6;
  sub_23F131B50();
  return sub_23F131838();
}

uint64_t sub_23F1277EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  int *v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);

  sub_23F131A38();
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = type metadata accessor for MessagePayload.ClientEffectInvocation(0);
  v4 = (uint64_t *)(v2 + *(int *)(v3 + 32));
  v6 = *v4;
  v5 = v4[1];
  if (*(_QWORD *)(v1 + 16))
  {
    v7 = v3;
    sub_23F1263B8();
    v8 = sub_23F12CA90(v6, v5);
    if ((v9 & 1) != 0)
    {
      v21 = *(_QWORD *)(v0 + 120);
      v22 = *(_QWORD *)(v0 + 112);
      v19 = *(_QWORD *)(v0 + 96);
      v20 = *(_QWORD *)(v0 + 88);
      v10 = *(_QWORD *)(v0 + 16);
      v11 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 128) + 56) + 104 * v8);
      *(_QWORD *)(v0 + 136) = v11[1];
      *(_QWORD *)(v0 + 144) = v11[3];
      *(_QWORD *)(v0 + 152) = v11[5];
      *(_QWORD *)(v0 + 160) = v11[7];
      v12 = v11[8];
      *(_QWORD *)(v0 + 168) = v12;
      *(_QWORD *)(v0 + 176) = v11[9];
      v13 = (int *)v11[11];
      *(_QWORD *)(v0 + 184) = v11[12];
      swift_bridgeObjectRetain();
      sub_23F131A54();
      swift_bridgeObjectRetain();
      sub_23F126364();
      sub_23F12D304(v12);
      sub_23F13184C();
      swift_retain();
      sub_23F1318B8();
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
      *(_QWORD *)(v0 + 192) = v14;
      v14(v21, v10, v20);
      v14(v22, v10 + *(int *)(v7 + 20), v20);
      v15 = (_QWORD *)(v10 + *(int *)(v7 + 24));
      *(_QWORD *)(v0 + 200) = *v15;
      *(_QWORD *)(v0 + 208) = v15[1];
      v23 = (uint64_t (*)(void))((char *)v13 + *v13);
      swift_bridgeObjectRetain();
      v16 = (_QWORD *)sub_23F1314B4();
      *(_QWORD *)(v0 + 216) = v16;
      *v16 = v0;
      v16[1] = sub_23F1279C8;
      return sub_23F1315D8(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 16), v23);
    }
    sub_23F1318B8();
  }
  sub_23F12E36C();
  sub_23F131B30();
  *(_QWORD *)v18 = v6;
  *(_QWORD *)(v18 + 8) = v5;
  *(_BYTE *)(v18 + 16) = 0;
  sub_23F1263B8();
  swift_willThrow();
  sub_23F131A18();
  sub_23F131754();
  sub_23F131A28();
  sub_23F1316FC();
  sub_23F131704();
  sub_23F131744();
  sub_23F131788();
  sub_23F1317B0();
  return sub_23F131498(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F1279C8()
{
  swift_task_dealloc();
  sub_23F131B50();
  return sub_23F131820();
}

uint64_t sub_23F127A10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v23 = v0[25];
  v24 = v0[26];
  v25 = v0[21];
  v1 = v0[13];
  v20 = v0[14];
  v21 = v0[12];
  v3 = v0[10];
  v2 = v0[11];
  v5 = v0[8];
  v4 = v0[9];
  v6 = v0[4];
  v7 = v0[5];
  v22 = v0[6];
  sub_23F131ADC(v4, v0[15]);
  v8 = type metadata accessor for MessagePayload.ClientEffectResolved(0);
  sub_23F125DB0(v3, v4 + *(int *)(v8 + 20), type metadata accessor for MessagePayload.ClientEffectResolved.Result);
  swift_storeEnumTagMultiPayload();
  sub_23F131ADC(v1, v20);
  sub_23F125DB0(v4, v5, type metadata accessor for MessagePayload);
  sub_23F131ADC(v7, v1);
  sub_23F125D90(v5, v7 + *(int *)(v6 + 24), type metadata accessor for MessagePayload);
  v9 = v1;
  v10 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v10(v9, v2);
  v11 = (_QWORD *)(v7 + *(int *)(v6 + 20));
  *v11 = v23;
  v11[1] = v24;
  sub_23F125D90(v7, v22, type metadata accessor for SessionClientMessage);
  sub_23F254A74();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F12E3A8(v25);
  v12 = v0[15];
  v13 = v0[11];
  v14 = v0[9];
  v15 = v0[6];
  swift_bridgeObjectRelease();
  swift_release();
  sub_23F13186C();
  sub_23F12E3EC(v15, type metadata accessor for SessionClientMessage);
  sub_23F12E3EC(v14, type metadata accessor for MessagePayload);
  sub_23F131800(v16, type metadata accessor for MessagePayload.ClientEffectResolved.Result);
  v17 = sub_23F131BE8();
  ((void (*)(uint64_t))v10)(v17);
  v10(v12, v13);
  sub_23F131780();
  sub_23F131754();
  swift_task_dealloc();
  sub_23F131704();
  sub_23F131744();
  swift_task_dealloc();
  sub_23F1316FC();
  sub_23F131BCC();
  v18 = (uint64_t (*)(void))sub_23F131B74();
  return v18();
}

uint64_t ClientAction.Definition.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClientAction.Definition.outputType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F131678();
  sub_23F1314EC();
  v0 = sub_23F1317E0();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t ClientAction.Definition.isUndoable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(sub_23F131678() + 32));
}

uint64_t ClientAction.Definition.positiveExampleInvocations.getter()
{
  sub_23F131678();
  return swift_bridgeObjectRetain();
}

uint64_t ClientAction.Definition.negativeExampleInvocations.getter()
{
  sub_23F131678();
  return swift_bridgeObjectRetain();
}

uint64_t ClientAction.Definition.isSiriXShim.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(sub_23F131678() + 44));
}

uint64_t ClientAction.Definition.init(name:description:parameters:outputType:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  sub_23F1314D0();
  v1 = v0;
  v19 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = (int *)sub_23F131678();
  v14 = (char *)v12 + v13[7];
  v15 = sub_23F1314EC();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, v1, v15);
  *v12 = v10;
  v12[1] = v8;
  v12[2] = v6;
  v12[3] = v4;
  v12[4] = v19;
  *((_BYTE *)v12 + v13[11]) = 0;
  *((_BYTE *)v12 + v13[8]) = 0;
  v17 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)((char *)v12 + v13[9]) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)((char *)v12 + v13[10]) = v17;
  return sub_23F13147C(v1, v15, *(uint64_t (**)(void))(v16 + 8));
}

uint64_t ClientAction.Definition.init(name:description:parameters:outputType:isSiriXShim:isUndoable:)()
{
  char v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t result;
  uint64_t v19;
  char v20;

  sub_23F1314D0();
  v20 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = (int *)sub_23F131678();
  sub_23F1314EC();
  v16 = sub_23F131BE8();
  result = v17(v16);
  *v14 = v12;
  v14[1] = v10;
  v14[2] = v8;
  v14[3] = v6;
  v14[4] = v4;
  *((_BYTE *)v14 + v15[11]) = v2;
  *((_BYTE *)v14 + v15[8]) = v20;
  v19 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)((char *)v14 + v15[9]) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)((char *)v14 + v15[10]) = v19;
  return result;
}

#error "23F127F34: call analysis failed (funcsize=31)"

void ClientAction.Definition.init(name:description:parameters:outputType:isUndoable:positiveExampleInvocations:negativeExampleInvocations:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W6>, uint64_t a7@<X7>, _QWORD *a8@<X8>, uint64_t a9)
{
  int *v12;
  uint64_t v13;

  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  v12 = (int *)type metadata accessor for ClientAction.Definition(0);
  v13 = sub_23F1314EC();
  sub_23F131854(v13);
  *((_BYTE *)a8 + v12[11]) = 0;
  *((_BYTE *)a8 + v12[8]) = a6;
  *(_QWORD *)((char *)a8 + v12[9]) = a7;
  *(_QWORD *)((char *)a8 + v12[10]) = a9;
  sub_23F131680();
}

void ClientAction.Definition.init(name:description:parameters:outputType:isSiriXShim:isUndoable:positiveExampleInvocations:negativeExampleInvocations:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W6>, char a7@<W7>, _QWORD *a8@<X8>, uint64_t a9, uint64_t a10)
{
  int *v13;
  uint64_t v14;

  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  v13 = (int *)type metadata accessor for ClientAction.Definition(0);
  v14 = sub_23F1314EC();
  sub_23F131854(v14);
  *((_BYTE *)a8 + v13[11]) = a6;
  *((_BYTE *)a8 + v13[8]) = a7;
  *(_QWORD *)((char *)a8 + v13[9]) = a9;
  *(_QWORD *)((char *)a8 + v13[10]) = a10;
  sub_23F131680();
}

#error "23F1280A8: call analysis failed (funcsize=31)"

void ClientAction.Definition.ParameterDefinition.name.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ClientAction.Definition.ParameterDefinition.description.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

uint64_t ClientAction.Definition.ParameterDefinition.valueType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for ClientAction.Definition.ParameterDefinition(0);
  sub_23F1314EC();
  v0 = sub_23F1317E0();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t ClientAction.Definition.ParameterDefinition.init(name:description:valueType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  v7 = (uint64_t)a6 + *(int *)(type metadata accessor for ClientAction.Definition.ParameterDefinition(0) + 24);
  v8 = sub_23F1314EC();
  return sub_23F126180(v7, a5, v8, *(uint64_t (**)(void))(*(_QWORD *)(v8 - 8) + 32));
}

uint64_t static ClientAction.Definition.ParameterDefinition.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  BOOL v6;

  sub_23F131914(a1);
  v5 = v5 && v3 == v4;
  if (!v5 && (sub_23F126148() & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(v2 + 16) == *(_QWORD *)(v1 + 16) && *(_QWORD *)(v2 + 24) == *(_QWORD *)(v1 + 24);
  if (!v6 && (sub_23F126148() & 1) == 0)
    return 0;
  type metadata accessor for ClientAction.Definition.ParameterDefinition(0);
  return sub_23F268084();
}

void ClientAction.Definition.ParameterDefinition.hash(into:)()
{
  sub_23F13175C();
  sub_23F131A00();
  sub_23F1262C0();
  sub_23F13175C();
  sub_23F131A00();
  sub_23F1262C0();
  type metadata accessor for ClientAction.Definition.ParameterDefinition(0);
  sub_23F1314EC();
  sub_23F12E488((uint64_t)&unk_256DFE788);
  sub_23F131BE8();
  sub_23F26812C();
  sub_23F12612C();
}

BOOL sub_23F128294(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23F1282A4()
{
  return sub_23F268840();
}

uint64_t sub_23F1282C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x70795465756C6176 && a2 == 0xE900000000000065)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F128428()
{
  return 3;
}

uint64_t sub_23F128430(char a1)
{
  if (!a1)
    return 1701667182;
  if (a1 == 1)
    return 0x7470697263736564;
  return 0x70795465756C6176;
}

BOOL sub_23F12848C(char *a1, char *a2)
{
  return sub_23F128294(*a1, *a2);
}

void sub_23F128498()
{
  sub_23F12B1DC();
}

uint64_t sub_23F1284B0()
{
  return sub_23F1282A4();
}

uint64_t sub_23F1284BC()
{
  char *v0;

  return sub_23F128430(*v0);
}

uint64_t sub_23F1284C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1282C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1284E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F128428();
  *a1 = result;
  return result;
}

uint64_t sub_23F12850C()
{
  sub_23F12E44C();
  return sub_23F2688B8();
}

uint64_t sub_23F128534()
{
  sub_23F12E44C();
  return sub_23F2688C4();
}

uint64_t ClientAction.Definition.ParameterDefinition.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = sub_23F1217E8(&qword_256DFE790);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F12545C(a1, a1[3]);
  sub_23F12E44C();
  sub_23F131994();
  v8[15] = 0;
  sub_23F131644();
  if (!v1)
  {
    v8[14] = 1;
    sub_23F131644();
    type metadata accessor for ClientAction.Definition.ParameterDefinition(0);
    v8[13] = 2;
    sub_23F1314EC();
    sub_23F12E488((uint64_t)&unk_256DFE7A0);
    sub_23F1315CC();
  }
  return sub_23F126038((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

void ClientAction.Definition.ParameterDefinition.hashValue.getter()
{
  sub_23F1317B8();
  sub_23F131798();
  sub_23F131A6C();
  sub_23F131A30();
  sub_23F131798();
  sub_23F131A6C();
  sub_23F131A30();
  type metadata accessor for ClientAction.Definition.ParameterDefinition(0);
  sub_23F1314EC();
  sub_23F12E488((uint64_t)&unk_256DFE788);
  sub_23F26812C();
  sub_23F1318A0();
  sub_23F131A5C();
}

void ClientAction.Definition.ParameterDefinition.init(from:)()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F131874();
  v3 = v2;
  v14 = v4;
  v15 = sub_23F1314EC();
  v5 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1262C8();
  v8 = v7 - v6;
  v16 = sub_23F1217E8(&qword_256DFE7A8);
  v9 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  sub_23F1319C8();
  v10 = type metadata accessor for ClientAction.Definition.ParameterDefinition(0);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1319B0();
  sub_23F12545C(v3, v3[3]);
  sub_23F12E44C();
  sub_23F268888();
  if (v0)
  {
    sub_23F131B28();
  }
  else
  {
    *v1 = sub_23F1319E0();
    v1[1] = v12;
    v1[2] = sub_23F1319E0();
    v1[3] = v13;
    sub_23F12E488((uint64_t)&unk_256DFE7B0);
    sub_23F2686B4();
    sub_23F126038(0, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))((char *)v1 + *(int *)(v10 + 24), v8, v15);
    sub_23F125DB0((uint64_t)v1, v14, type metadata accessor for ClientAction.Definition.ParameterDefinition);
    sub_23F131B28();
    sub_23F12E3EC((uint64_t)v1, type metadata accessor for ClientAction.Definition.ParameterDefinition);
  }
  sub_23F1313FC();
}

void sub_23F128944()
{
  ClientAction.Definition.ParameterDefinition.init(from:)();
}

uint64_t sub_23F128958(_QWORD *a1)
{
  return ClientAction.Definition.ParameterDefinition.encode(to:)(a1);
}

uint64_t sub_23F128978()
{
  sub_23F268834();
  swift_bridgeObjectRetain();
  sub_23F2681A4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23F2681A4();
  swift_bridgeObjectRelease();
  sub_23F268090();
  sub_23F12E488((uint64_t)&unk_256DFE788);
  sub_23F26812C();
  return sub_23F268864();
}

uint64_t ClientAction.Definition.ExampleInvocationDefinition.phrases.getter()
{
  return swift_bridgeObjectRetain();
}

void ClientAction.Definition.ExampleInvocationDefinition.expectedResult.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

IntelligenceFlow::ClientAction::Definition::ExampleInvocationDefinition __swiftcall ClientAction.Definition.ExampleInvocationDefinition.init(phrases:expectedResult:)(Swift::OpaquePointer phrases, Swift::String_optional expectedResult)
{
  uint64_t v2;
  IntelligenceFlow::ClientAction::Definition::ExampleInvocationDefinition result;

  *(Swift::OpaquePointer *)v2 = phrases;
  *(Swift::String_optional *)(v2 + 8) = expectedResult;
  result.expectedResult = expectedResult;
  result.phrases = phrases;
  return result;
}

void ClientAction.Definition.ExampleInvocationDefinition.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = v1[2];
  sub_23F126140();
  sub_23F12E9BC(a1, v3);
  sub_23F1318DC();
  sub_23F26884C();
  if (v4)
  {
    sub_23F1263B8();
    sub_23F131B1C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F131ABC();
  }
}

void static ClientAction.Definition.ExampleInvocationDefinition.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_23F129820(*(_QWORD **)a1, *(_QWORD **)a2);
  if ((v6 & 1) != 0 && v3 && v5 && (v2 != v4 || v3 != v5))
    sub_23F126148();
  sub_23F12612C();
}

void sub_23F128B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  BOOL v11;
  char v12;
  char v13;
  uint64_t v15;

  sub_23F1314D0();
  v2 = *(_QWORD *)(v0 + 16);
  if (v2 == *(_QWORD *)(v1 + 16) && v2 && v0 != v1)
  {
    v3 = (_BYTE *)(v1 + 64);
    v4 = (_BYTE *)(v0 + 64);
    do
    {
      v15 = v2;
      v6 = *((_QWORD *)v4 - 2);
      v5 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      v9 = *((_QWORD *)v3 - 2);
      v8 = *((_QWORD *)v3 - 1);
      v10 = *v3;
      v11 = *((_QWORD *)v4 - 4) == *((_QWORD *)v3 - 4) && *((_QWORD *)v4 - 3) == *((_QWORD *)v3 - 3);
      if (!v11 && (sub_23F126148() & 1) == 0)
        break;
      if ((v7 & 1) != 0)
      {
        if ((v10 & 1) == 0)
          goto LABEL_24;
        sub_23F131398();
        sub_23F126364();
        sub_23F131104();
        sub_23F13174C();
        sub_23F131104();
        sub_23F131AFC();
        v13 = v12;
        sub_23F131414();
        sub_23F131110();
        sub_23F131790();
        sub_23F131110();
        sub_23F13190C();
        sub_23F131110();
        if ((v13 & 1) == 0)
          break;
      }
      else
      {
        if ((v10 & 1) != 0)
        {
LABEL_24:
          sub_23F131104();
          sub_23F131104();
          sub_23F131110();
          sub_23F131110();
          break;
        }
        if (v6 == v9 && v5 == v8)
        {
          sub_23F131578();
        }
        else
        {
          sub_23F126148();
          sub_23F13151C();
          sub_23F131110();
          if ((v10 & 1) == 0)
            break;
        }
      }
      v3 += 40;
      v4 += 40;
      v2 = v15 - 1;
    }
    while (v15 != 1);
  }
  sub_23F131500();
}

void sub_23F128CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
  {
    v3 = (_BYTE *)(a2 + 48);
    v4 = (_BYTE *)(a1 + 48);
    while (1)
    {
      v5 = *v4;
      if ((*v4 & 1) != 0)
        break;
      if ((*v3 & 1) != 0)
      {
LABEL_19:
        sub_23F131104();
        sub_23F131104();
        sub_23F131110();
        sub_23F131110();
        goto LABEL_20;
      }
      if (*((_QWORD *)v4 - 2) != *((_QWORD *)v3 - 2) || *((_QWORD *)v4 - 1) != *((_QWORD *)v3 - 1))
      {
        sub_23F126148();
        sub_23F13151C();
LABEL_14:
        sub_23F131110();
        if ((v5 & 1) == 0)
          goto LABEL_20;
        goto LABEL_17;
      }
      sub_23F131578();
LABEL_17:
      v3 += 24;
      v4 += 24;
      if (!--v2)
        goto LABEL_20;
    }
    if ((*v3 & 1) == 0)
      goto LABEL_19;
    v6 = sub_23F131398();
    v5 = sub_23F131AFC(v6);
    sub_23F131414();
    goto LABEL_14;
  }
LABEL_20:
  sub_23F131680();
}

void sub_23F128DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
    __asm { BR              X8 }
  sub_23F1317C4();
}

void sub_23F129394()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  char v16;

  sub_23F125F3C();
  v6 = sub_23F131A08();
  v7 = (int *)type metadata accessor for ClientAction.Definition(v6);
  sub_23F1318A8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F1318C0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F131940();
  if (v14 && v10 && v1 != v0)
  {
    sub_23F131BB8();
    v12 = v11 - 1;
    while (1)
    {
      v13 = v12;
      sub_23F126350(v1 + v4, (uint64_t)v3);
      sub_23F126350(v0 + v4, (uint64_t)v2);
      v14 = *v3 == *v2 && v3[1] == v2[1];
      if (!v14 && (sub_23F126148() & 1) == 0)
        break;
      v15 = v3[2] == v2[2] && v3[3] == v2[3];
      if (!v15 && (sub_23F126148() & 1) == 0
        || (sub_23F129510(v3[4], v2[4]) & 1) == 0
        || (sub_23F268084() & 1) == 0
        || *((unsigned __int8 *)v3 + v7[8]) != *((unsigned __int8 *)v2 + v7[8])
        || (sub_23F131B68(v7[9]) & 1) == 0
        || (sub_23F131B68(v7[10]) & 1) == 0)
      {
        break;
      }
      v16 = *((_BYTE *)v3 + v7[11]) ^ *((_BYTE *)v2 + v7[11]);
      sub_23F131A7C((uint64_t)v2);
      sub_23F131A7C((uint64_t)v3);
      if ((v16 & 1) == 0)
      {
        v12 = v13 - 1;
        v4 += v5;
        if (v13)
          continue;
      }
      goto LABEL_26;
    }
    sub_23F1319F0((uint64_t)v2);
    sub_23F1319F0((uint64_t)v3);
  }
LABEL_26:
  sub_23F125EFC();
}

uint64_t sub_23F129510(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  char v17;
  BOOL v19;
  uint64_t v21;

  v4 = type metadata accessor for ClientAction.Definition.ParameterDefinition(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v21 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_23:
    v17 = 0;
    return v17 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v14 = v11 - 1;
    while (1)
    {
      sub_23F125DB0(a1 + v12, (uint64_t)v10, type metadata accessor for ClientAction.Definition.ParameterDefinition);
      sub_23F125DB0(a2 + v12, (uint64_t)v7, type metadata accessor for ClientAction.Definition.ParameterDefinition);
      v15 = *v10 == *v7 && v10[1] == v7[1];
      if (!v15 && (sub_23F268798() & 1) == 0)
        break;
      v16 = v10[2] == v7[2] && v10[3] == v7[3];
      if (!v16 && (sub_23F268798() & 1) == 0)
        break;
      v17 = sub_23F268084();
      sub_23F12E3EC((uint64_t)v7, type metadata accessor for ClientAction.Definition.ParameterDefinition);
      sub_23F12E3EC((uint64_t)v10, type metadata accessor for ClientAction.Definition.ParameterDefinition);
      v19 = v14-- != 0;
      if ((v17 & 1) != 0)
      {
        v12 += v13;
        if (v19)
          continue;
      }
      return v17 & 1;
    }
    sub_23F12E3EC((uint64_t)v7, type metadata accessor for ClientAction.Definition.ParameterDefinition);
    sub_23F12E3EC((uint64_t)v10, type metadata accessor for ClientAction.Definition.ParameterDefinition);
    goto LABEL_23;
  }
  v17 = 1;
  return v17 & 1;
}

uint64_t sub_23F1296B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;
  uint64_t *v5;
  uint64_t **v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  BOOL v13;
  uint64_t result;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = 0;
    v21 = a2 + 32;
    v22 = a1 + 32;
    while (1)
    {
      v4 = (uint64_t **)(v22 + 24 * v3);
      v5 = *v4;
      v6 = (uint64_t **)(v21 + 24 * v3);
      v7 = *v6;
      v8 = (*v4)[2];
      if (v8 != (*v6)[2])
        break;
      v9 = v4[1];
      v10 = v4[2];
      v12 = v6[1];
      v11 = v6[2];
      if (v8)
        v13 = v5 == v7;
      else
        v13 = 1;
      if (!v13)
      {
        result = v5[4];
        if (result != v7[4] || v5[5] != v7[5])
        {
          result = sub_23F268798();
          if ((result & 1) == 0)
            return 0;
        }
        if (v8 != 1)
        {
          v16 = v7 + 7;
          v17 = v5 + 7;
          v18 = 1;
          while (v18 < v8)
          {
            result = *(v17 - 1);
            if (result != *(v16 - 1) || *v17 != *v16)
            {
              result = sub_23F268798();
              if ((result & 1) == 0)
                return 0;
            }
            ++v18;
            v16 += 2;
            v17 += 2;
            if (v8 == v18)
              goto LABEL_24;
          }
          __break(1u);
          return result;
        }
      }
LABEL_24:
      if (v10)
      {
        if (!v11)
          return 0;
        v20 = v9 == v12 && v10 == v11;
        if (!v20 && (sub_23F268798() & 1) == 0)
          return 0;
      }
      else if (v11)
      {
        return 0;
      }
      if (++v3 == v2)
        return 1;
    }
  }
  return 0;
}

void sub_23F129820(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  BOOL v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  BOOL v9;

  v2 = a1[2];
  if (v2 == a2[2]
    && v2
    && a1 != a2
    && (a1[4] == a2[4] ? (v5 = a1[5] == a2[5]) : (v5 = 0), (v5 || (sub_23F126148() & 1) != 0) && v2 != 1))
  {
    v6 = a2 + 7;
    v7 = a1 + 7;
    v8 = 1;
    while (v8 < v2)
    {
      v9 = *(v7 - 1) == *(v6 - 1) && *v7 == *v6;
      if (v9 || (sub_23F126148() & 1) != 0)
      {
        ++v8;
        v6 += 2;
        v7 += 2;
        if (v2 != v8)
          continue;
      }
      goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    sub_23F12612C();
  }
}

void sub_23F1298E0()
{
  sub_23F12A5BC();
}

void sub_23F1298FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  BOOL v17;
  uint64_t v18;

  sub_23F125F3C();
  v4 = sub_23F131A08();
  v5 = type metadata accessor for PlannerPromptData.OnScreenContextValue(v4);
  sub_23F1318A8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1318C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F131940();
  if (v10 && v8 && v1 != v0)
  {
    v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v18 = *(_QWORD *)(v9 + 72);
    v12 = v8 - 1;
    while (1)
    {
      sub_23F126350(v1 + v11, v3);
      sub_23F126350(v0 + v11, v2);
      if ((_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0() & 1) == 0)
        break;
      v13 = *(int *)(v5 + 20);
      v14 = *(unsigned __int8 *)(v3 + v13);
      v15 = *(unsigned __int8 *)(v2 + v13);
      sub_23F131A7C(v2);
      sub_23F131A7C(v3);
      v17 = v12-- != 0;
      if (v14 == v15)
      {
        v11 += v18;
        if (v17)
          continue;
      }
      goto LABEL_15;
    }
    sub_23F1319F0(v2);
    sub_23F1319F0(v3);
  }
LABEL_15:
  sub_23F125EFC();
}

void sub_23F129A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  BOOL v39;

  sub_23F125F3C();
  a19 = v24;
  a20 = v25;
  v26 = sub_23F131A08();
  type metadata accessor for PlannerPromptData.Tool(v26);
  sub_23F1318A8();
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&a9 - v31;
  v33 = *(_QWORD *)(v21 + 16);
  if (v33 == *(_QWORD *)(v20 + 16) && v33 && v21 != v20)
  {
    sub_23F131BB8();
    v35 = v34 - 1;
    do
    {
      sub_23F125DB0(v21 + v22, (uint64_t)v32, type metadata accessor for PlannerPromptData.Tool);
      sub_23F125DB0(v20 + v22, (uint64_t)v30, type metadata accessor for PlannerPromptData.Tool);
      static PlannerPromptData.Tool.Definition.== infix(_:_:)();
      v37 = v36;
      sub_23F12E3EC((uint64_t)v30, type metadata accessor for PlannerPromptData.Tool);
      sub_23F12E3EC((uint64_t)v32, type metadata accessor for PlannerPromptData.Tool);
      v39 = v35-- != 0;
      if ((v37 & 1) == 0)
        break;
      v22 += v23;
    }
    while (v39);
  }
  sub_23F125EFC();
}

uint64_t sub_23F129B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  char v13;
  BOOL v14;
  char v15;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a2 + 40);
    v4 = (_QWORD *)(a1 + 40);
    do
    {
      v6 = v4[1];
      v5 = v4[2];
      v7 = v4[3];
      v8 = v4[5];
      v9 = v3[1];
      v10 = v3[2];
      v11 = v3[3];
      v12 = *(v4 - 1) == *(v3 - 1) && *v4 == *v3;
      v19 = v3[4];
      v20 = v4[4];
      v21 = v3[5];
      v22 = v4[2];
      if (!v12)
      {
        v13 = sub_23F126148();
        v5 = v22;
        if ((v13 & 1) == 0)
          return 0;
      }
      v14 = v6 == v9 && v5 == v10;
      if (!v14 && (sub_23F126148() & 1) == 0)
        return 0;
      swift_bridgeObjectRetain();
      sub_23F1315C4();
      sub_23F12D318(v7);
      sub_23F131798();
      sub_23F13184C();
      sub_23F13174C();
      sub_23F12D318(v11);
      sub_23F126140();
      static TypeDefinition.== infix(_:_:)(v7);
      if ((v15 & 1) == 0)
        goto LABEL_30;
      if (v8)
      {
        if (!v21)
        {
LABEL_30:
          sub_23F131790();
          sub_23F131930();
          sub_23F13170C();
          sub_23F131A84();
LABEL_31:
          sub_23F1318DC();
          sub_23F12E3BC(v7);
          sub_23F13186C();
          return 0;
        }
        if (v20 != v19 || v8 != v21)
        {
          v17 = sub_23F126148();
          sub_23F131790();
          sub_23F131930();
          sub_23F13170C();
          sub_23F131A84();
          sub_23F1318DC();
          sub_23F12E3BC(v7);
          sub_23F13186C();
          if ((v17 & 1) == 0)
            return 0;
          goto LABEL_28;
        }
        sub_23F131790();
        sub_23F131930();
        sub_23F13170C();
        sub_23F131A84();
      }
      else
      {
        sub_23F131790();
        sub_23F131930();
        sub_23F13170C();
        sub_23F131A84();
        if (v21)
          goto LABEL_31;
      }
      sub_23F1318DC();
      sub_23F12E3BC(v7);
      sub_23F13186C();
LABEL_28:
      v3 += 7;
      v4 += 7;
      --v2;
    }
    while (v2);
  }
  return 1;
}

void sub_23F129CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  BOOL v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
  {
    v3 = 0;
    v22 = a1;
    v23 = a2;
    do
    {
      v5 = *(_QWORD *)(a1 + v3 + 48);
      v4 = *(_QWORD *)(a1 + v3 + 56);
      v6 = *(_QWORD *)(a1 + v3 + 64);
      v7 = *(_QWORD *)(a1 + v3 + 72);
      v9 = *(_QWORD *)(a2 + v3 + 48);
      v8 = *(_QWORD *)(a2 + v3 + 56);
      v10 = *(_QWORD *)(a2 + v3 + 64);
      v11 = *(_QWORD *)(a2 + v3 + 72);
      v24 = *(_QWORD *)(a1 + v3 + 80);
      v25 = *(_QWORD *)(a2 + v3 + 80);
      v12 = *(_QWORD *)(a1 + v3 + 32) == *(_QWORD *)(a2 + v3 + 32)
         && *(_QWORD *)(a1 + v3 + 40) == *(_QWORD *)(a2 + v3 + 40);
      v26 = *(_QWORD *)(a2 + v3 + 56);
      if (!v12)
      {
        v21 = *(_QWORD *)(a1 + v3 + 72);
        v13 = *(_QWORD *)(a2 + v3 + 64);
        v14 = *(_QWORD *)(a1 + v3 + 64);
        v15 = *(_QWORD *)(a1 + v3 + 56);
        v16 = *(_QWORD *)(a2 + v3 + 72);
        v17 = sub_23F268798();
        v11 = v16;
        v4 = v15;
        v6 = v14;
        v10 = v13;
        v7 = v21;
        v8 = v26;
        if ((v17 & 1) == 0)
          break;
      }
      v18 = v5 == v9 && v4 == v8;
      if (!v18 && (sub_23F268798() & 1) == 0)
        break;
      v19 = v6 == v10 && v7 == v11;
      if (!v19 && (sub_23F268798() & 1) == 0)
        break;
      swift_bridgeObjectRetain();
      sub_23F13184C();
      sub_23F131A54();
      sub_23F13175C();
      sub_23F1263B8();
      sub_23F131798();
      sub_23F126364();
      sub_23F13174C();
      v20 = sub_23F129B10(v24, v25);
      sub_23F1262C0();
      sub_23F13186C();
      sub_23F131930();
      swift_bridgeObjectRelease();
      sub_23F131790();
      sub_23F13190C();
      sub_23F131A30();
      sub_23F1317F8();
      if ((v20 & 1) == 0)
        break;
      v3 += 56;
      --v2;
      a1 = v22;
      a2 = v23;
    }
    while (v2);
  }
  sub_23F1317C4();
}

void sub_23F129EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F12A168(a1, a2, (uint64_t)type metadata accessor for ResponseOutput.VisualOutput, (uint64_t)static ResponseOutput.VisualOutput.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F129ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a2 + 48);
    v4 = (_QWORD *)(a1 + 48);
    while (*((_DWORD *)v4 - 4) == *((_DWORD *)v3 - 4))
    {
      v5 = *v3;
      if (*v4)
      {
        if (!v5)
          break;
        v6 = *(v4 - 1) == *(v3 - 1) && *v4 == v5;
        if (!v6 && (sub_23F126148() & 1) == 0)
          break;
      }
      else if (v5)
      {
        break;
      }
      v3 += 3;
      v4 += 3;
      if (!--v2)
        break;
    }
  }
  sub_23F12612C();
}

void sub_23F129F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F12A168(a1, a2, (uint64_t)type metadata accessor for InterpretedStatementResult, (uint64_t)static InterpretedStatementResult.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F129F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;

  sub_23F125F3C();
  v2 = *(_QWORD *)(v0 + 16);
  if (v2 == *(_QWORD *)(v1 + 16) && v2 && v0 != v1)
  {
    v3 = (_QWORD *)(v1 + 64);
    v4 = (_QWORD *)(v0 + 64);
    do
    {
      v5 = *((_DWORD *)v4 - 4);
      v6 = *(v4 - 1);
      v7 = *v4;
      v8 = *((_DWORD *)v3 - 4);
      v10 = *(v3 - 1);
      v9 = *v3;
      if (*(v4 - 4) == *(v3 - 4) && *(v4 - 3) == *(v3 - 3))
      {
        if (v5 != v8)
          break;
      }
      else if ((sub_23F126148() & 1) == 0 || v5 != v8)
      {
        break;
      }
      if (v7)
      {
        if (!v9)
          break;
        v12 = v6 == v10 && v7 == v9;
        if (!v12 && (sub_23F126148() & 1) == 0)
          break;
      }
      else if (v9)
      {
        break;
      }
      v3 += 5;
      v4 += 5;
      --v2;
    }
    while (v2);
  }
  sub_23F125EFC();
}

void sub_23F12A054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  char v11;
  char v12;

  sub_23F1314D0();
  v2 = *(_QWORD *)(v0 + 16);
  if (v2 == *(_QWORD *)(v1 + 16) && v2 && v0 != v1)
  {
    v3 = v1 + 64;
    v4 = v0 + 64;
    do
    {
      v6 = *(_QWORD *)(v4 - 16);
      v5 = *(_QWORD *)(v4 - 8);
      v8 = *(_QWORD *)(v3 - 16);
      v7 = *(_QWORD *)(v3 - 8);
      v9 = *(_QWORD *)(v4 - 32) == *(_QWORD *)(v3 - 32) && *(_QWORD *)(v4 - 24) == *(_QWORD *)(v3 - 24);
      if (!v9 && (sub_23F126148() & 1) == 0)
        break;
      v10 = v6 == v8 && v5 == v7;
      if (!v10 && (sub_23F126148() & 1) == 0)
        break;
      sub_23F1315C4();
      sub_23F126140();
      sub_23F126364();
      sub_23F1263B8();
      sub_23F131798();
      sub_23F13174C();
      sub_23F128B60();
      v12 = v11;
      sub_23F13190C();
      sub_23F1318DC();
      sub_23F1317F8();
      sub_23F131790();
      sub_23F131A30();
      sub_23F1318B8();
      if ((v12 & 1) == 0)
        break;
      v4 += 40;
      v3 += 40;
      --v2;
    }
    while (v2);
  }
  sub_23F131500();
}

void sub_23F12A154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F12A168(a1, a2, (uint64_t)type metadata accessor for ResponseVisual.UIType, (uint64_t)static ResponseVisual.UIType.== infix(_:_:), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F12A168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, char *);
  uint64_t (*v25)(char *, char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  BOOL v42;

  sub_23F125F3C();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  sub_23F131AA4(v26, v27, v28);
  sub_23F1318A8();
  v30 = MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v35 = (char *)&a9 - v34;
  v36 = *(_QWORD *)(v21 + 16);
  if (v36 == *(_QWORD *)(v20 + 16) && v36 && v21 != v20)
  {
    v37 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v38 = *(_QWORD *)(v33 + 72);
    v39 = v36 - 1;
    do
    {
      sub_23F1319A8(v21 + v37, (uint64_t)v35);
      sub_23F1319A8(v20 + v37, (uint64_t)v32);
      v40 = v25(v35, v32);
      sub_23F131AB4((uint64_t)v32);
      sub_23F131AB4((uint64_t)v35);
      v42 = v39-- != 0;
      if ((v40 & 1) == 0)
        break;
      v37 += v38;
    }
    while (v42);
  }
  sub_23F125EFC();
}

void sub_23F12A264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a1 + 56);
    v4 = (uint64_t *)(a2 + 56);
    do
    {
      v5 = *(v3 - 1);
      v6 = *v3;
      v7 = *(v4 - 1);
      v8 = *v4;
      v9 = *(v3 - 3) == *(v4 - 3) && *(v3 - 2) == *(v4 - 2);
      if (!v9 && (sub_23F126148() & 1) == 0)
        break;
      if (v5 != v7 || v6 != v8)
      {
        sub_23F1317E0();
        if ((sub_23F126148() & 1) == 0)
          break;
      }
      v4 += 4;
      v3 += 4;
      --v2;
    }
    while (v2);
  }
  sub_23F131680();
}

uint64_t sub_23F12A308(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  char v13;
  __int128 v14;
  char v15;
  BOOL v17;
  _QWORD v19[2];
  __int128 v20;
  __int128 v21;
  char v22;
  __int128 v23;
  char v24;
  _QWORD v25[2];
  __int128 v26;
  __int128 v27;
  char v28;
  __int128 v29;
  char v30;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v5 = 0;
      v6 = v2 - 1;
      do
      {
        v7 = *(_QWORD *)(a1 + v5 + 40);
        v8 = *(_BYTE *)(a1 + v5 + 80);
        v9 = *(_BYTE *)(a1 + v5 + 104);
        v25[0] = *(_QWORD *)(a1 + v5 + 32);
        v25[1] = v7;
        v10 = *(_OWORD *)(a1 + v5 + 64);
        v26 = *(_OWORD *)(a1 + v5 + 48);
        v27 = v10;
        v28 = v8;
        v29 = *(_OWORD *)(a1 + v5 + 88);
        v30 = v9;
        v11 = *(_QWORD *)(a2 + v5 + 40);
        v12 = *(_BYTE *)(a2 + v5 + 80);
        v13 = *(_BYTE *)(a2 + v5 + 104);
        v19[0] = *(_QWORD *)(a2 + v5 + 32);
        v19[1] = v11;
        v14 = *(_OWORD *)(a2 + v5 + 64);
        v20 = *(_OWORD *)(a2 + v5 + 48);
        v21 = v14;
        v22 = v12;
        v23 = *(_OWORD *)(a2 + v5 + 88);
        v24 = v13;
        v15 = static ResponseParameter.== infix(_:_:)((uint64_t)v25, (uint64_t)v19);
        v17 = v6-- != 0;
        if ((v15 & 1) == 0)
          break;
        v5 += 80;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

void sub_23F12A3E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  void *v12;
  char v13;
  BOOL v15;

  sub_23F1314D0();
  v2 = *(_QWORD *)(v0 + 16);
  if (v2 == *(_QWORD *)(v1 + 16))
  {
    if (v2)
    {
      v3 = v1;
      v4 = v0;
      if (v0 != v1)
      {
        sub_23F13111C();
        v5 = v2 - 1;
        v6 = (_BYTE *)(v4 + 40);
        v7 = (_BYTE *)(v3 + 40);
        do
        {
          v8 = (void *)*((_QWORD *)v6 - 1);
          v9 = (void *)*((_QWORD *)v7 - 1);
          v10 = *v7;
          if ((*v6 & 1) != 0)
          {
            sub_23F131C08();
            sub_23F131158(v9);
            sub_23F131C08();
            v11 = v8;
          }
          else
          {
            sub_23F131158(v9);
            sub_23F131158(v8);
            v11 = (void *)sub_23F267CA0();
          }
          sub_23F131158(v9);
          if ((v10 & 1) != 0)
          {
            v12 = v9;
          }
          else
          {
            v12 = (void *)sub_23F267CA0();
            sub_23F131164(v9);
          }
          v13 = sub_23F268444();

          sub_23F131164(v9);
          sub_23F131164(v8);
          v15 = v5-- != 0;
          if ((v13 & 1) == 0)
            break;
          v6 += 16;
          v7 += 16;
        }
        while (v15);
      }
    }
  }
  sub_23F131500();
}

void sub_23F12A52C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  BOOL v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a1 + 40);
    v4 = (_QWORD *)(a2 + 40);
    do
    {
      v5 = *(v3 - 1) == *(v4 - 1) && *v3 == *v4;
      if (!v5 && (sub_23F126148() & 1) == 0)
        break;
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  sub_23F12612C();
}

void sub_23F12A5A0()
{
  sub_23F12A5BC();
}

void sub_23F12A5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, unint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(uint64_t, uint64_t);
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, unint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD);

  sub_23F125F3C();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v10 = sub_23F131AA4(v8, v9, v6);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v29 - v14;
  v16 = *(_QWORD *)(v1 + 16);
  if (v16 == *(_QWORD *)(v0 + 16) && v16 && v1 != v0)
  {
    v32 = v13;
    v33 = v12;
    v34 = v7;
    v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v29 = *(_QWORD *)(v12 + 72);
    v30 = v1;
    v31 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
    v18 = v16 - 1;
    v19 = v13;
    do
    {
      v20 = v31;
      v31((uint64_t)v15, v1 + v17, v10);
      v21 = v0;
      v20(v19, v0 + v17, v10);
      v22 = v5;
      v23 = v5;
      v24 = v3;
      sub_23F12E488(v23);
      v25 = sub_23F268138();
      v26 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v26(v19, v10);
      v26((uint64_t)v15, v10);
      v28 = v18-- != 0;
      if ((v25 & 1) == 0)
        break;
      v17 += v29;
      v3 = v24;
      v5 = v22;
      v0 = v21;
      v1 = v30;
    }
    while (v28);
  }
  sub_23F125EFC();
}

uint64_t sub_23F12A738(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x73657361726870 && a2 == 0xE700000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465746365707865 && a2 == 0xEE00746C75736552)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F12A848(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6465746365707865;
  else
    return 0x73657361726870;
}

uint64_t sub_23F12A88C()
{
  char *v0;

  return sub_23F12A848(*v0);
}

uint64_t sub_23F12A894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F12A738(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F12A8B8()
{
  sub_23F12EA30();
  return sub_23F2688B8();
}

uint64_t sub_23F12A8E0()
{
  sub_23F12EA30();
  return sub_23F2688C4();
}

void ClientAction.Definition.ExampleInvocationDefinition.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F131874();
  v3 = v2;
  v4 = sub_23F1217E8(&qword_256DFE7B8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F1319C8();
  sub_23F12545C(v3, v3[3]);
  sub_23F12EA30();
  sub_23F2688A0();
  sub_23F1217E8(&qword_256DFE7C8);
  sub_23F12EA6C((uint64_t)&unk_256DFE7D0);
  sub_23F1315CC();
  if (!v0)
    sub_23F2686F0();
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23F1313FC();
}

void ClientAction.Definition.ExampleInvocationDefinition.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[72];

  v1 = *v0;
  v2 = v0[2];
  sub_23F1317B8();
  sub_23F13175C();
  sub_23F12E9BC((uint64_t)v3, v1);
  sub_23F1262C0();
  sub_23F26884C();
  if (v2)
  {
    sub_23F1263B8();
    sub_23F131B1C();
    sub_23F1318B8();
  }
  sub_23F1318A0();
  sub_23F131A5C();
}

void ClientAction.Definition.ExampleInvocationDefinition.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F131874();
  v12 = v11;
  v14 = v13;
  v15 = sub_23F1217E8(&qword_256DFE7D8);
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1316E4();
  sub_23F12545C(v12, v12[3]);
  sub_23F12EA30();
  sub_23F268888();
  if (v10)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F1217E8(&qword_256DFE7C8);
    sub_23F12EA6C((uint64_t)&unk_256DFE7E0);
    sub_23F131BD4();
    sub_23F2686B4();
    sub_23F13174C();
    v16 = sub_23F268654();
    v18 = v17;
    sub_23F1317A0();
    *v14 = a10;
    v14[1] = v16;
    v14[2] = v18;
    sub_23F1315C4();
    sub_23F131BF4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23F1313FC();
}

uint64_t sub_23F12AC0C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[2];
  sub_23F268834();
  swift_bridgeObjectRetain();
  sub_23F12E9BC((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  sub_23F26884C();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_23F2681A4();
    swift_bridgeObjectRelease();
  }
  return sub_23F268864();
}

void sub_23F12ACA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ClientAction.Definition.ExampleInvocationDefinition.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F12ACB8()
{
  ClientAction.Definition.ExampleInvocationDefinition.encode(to:)();
}

void static ClientAction.Definition.== infix(_:_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  BOOL v6;
  int *v7;

  sub_23F131914(a1);
  v5 = v5 && v3 == v4;
  if (v5 || (sub_23F126148() & 1) != 0)
  {
    v6 = v2[2] == v1[2] && v2[3] == v1[3];
    if ((v6 || (sub_23F126148() & 1) != 0) && (sub_23F129510(v2[4], v1[4]) & 1) != 0)
    {
      v7 = (int *)type metadata accessor for ClientAction.Definition(0);
      if ((sub_23F268084() & 1) != 0
        && *((unsigned __int8 *)v2 + v7[8]) == *((unsigned __int8 *)v1 + v7[8])
        && (sub_23F131B80(v7[9]) & 1) != 0)
      {
        sub_23F131B80(v7[10]);
      }
    }
  }
  sub_23F12612C();
}

void ClientAction.Definition.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F13175C();
  sub_23F131A00();
  sub_23F1262C0();
  sub_23F13175C();
  sub_23F131A00();
  sub_23F1262C0();
  sub_23F1315C4();
  v0 = sub_23F1317E0();
  sub_23F12EABC(v0, v1);
  sub_23F1317F8();
  sub_23F131678();
  sub_23F1314EC();
  sub_23F12E488((uint64_t)&unk_256DFE788);
  sub_23F26812C();
  sub_23F131B5C();
  sub_23F1315C4();
  sub_23F131BFC();
  sub_23F1317F8();
  sub_23F1315C4();
  sub_23F131BFC();
  sub_23F1317F8();
  sub_23F131B5C();
  sub_23F131ABC();
}

uint64_t sub_23F12AE8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x795474757074756FLL && a2 == 0xEA00000000006570;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x62616F646E557369 && a2 == 0xEA0000000000656CLL;
          if (v9 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023F293130 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023F293150 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0x5358697269537369 && a2 == 0xEB000000006D6968)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            v11 = sub_23F268798();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 7;
            else
              return 8;
          }
        }
      }
    }
  }
}

uint64_t sub_23F12B1D4()
{
  return 8;
}

void sub_23F12B1DC()
{
  sub_23F1317B8();
  sub_23F268840();
  sub_23F1318A0();
  sub_23F1318E4();
}

uint64_t sub_23F12B20C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F12B238 + 4 * byte_23F269430[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_23F12B238()
{
  return 0x7470697263736564;
}

uint64_t sub_23F12B258()
{
  return 0x6574656D61726170;
}

uint64_t sub_23F12B278()
{
  return 0x795474757074756FLL;
}

uint64_t sub_23F12B298()
{
  return 0x62616F646E557369;
}

unint64_t sub_23F12B2B4()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_23F12B2DC()
{
  return 0x5358697269537369;
}

void sub_23F12B2FC()
{
  sub_23F268834();
  sub_23F268840();
  sub_23F1318A0();
  sub_23F1318E4();
}

uint64_t sub_23F12B330()
{
  unsigned __int8 *v0;

  return sub_23F12B20C(*v0);
}

uint64_t sub_23F12B338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F12AE8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F12B35C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F12B1D4();
  *a1 = result;
  return result;
}

uint64_t sub_23F12B380()
{
  sub_23F12EC1C();
  return sub_23F2688B8();
}

uint64_t sub_23F12B3A8()
{
  sub_23F12EC1C();
  return sub_23F2688C4();
}

void ClientAction.Definition.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;

  sub_23F131874();
  v2 = v1;
  v3 = sub_23F1217E8(&qword_256DFE7E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F12545C(v2, v2[3]);
  sub_23F12EC1C();
  sub_23F131994();
  sub_23F131644();
  if (!v0)
  {
    sub_23F131644();
    v8 = 2;
    sub_23F1217E8(&qword_256DFE7F8);
    sub_23F12EC94((uint64_t)&unk_256DFE800);
    sub_23F1315CC();
    type metadata accessor for ClientAction.Definition(0);
    sub_23F1314EC();
    sub_23F12E488((uint64_t)&unk_256DFE7A0);
    sub_23F1315CC();
    sub_23F131808(4);
    v8 = 5;
    sub_23F1217E8(&qword_256DFE810);
    sub_23F12ED14((uint64_t)&unk_256DFE818);
    sub_23F1315CC();
    v8 = 6;
    sub_23F1315CC();
    sub_23F131808(7);
  }
  sub_23F126038((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F1313FC();
}

void ClientAction.Definition.hashValue.getter()
{
  sub_23F1317B8();
  ClientAction.Definition.hash(into:)();
  sub_23F1318A0();
  sub_23F1318E4();
}

void ClientAction.Definition.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;

  sub_23F131874();
  v13 = v12;
  v15 = v14;
  v16 = sub_23F1314EC();
  v27 = *(_QWORD *)(v16 - 8);
  v28 = v16;
  MEMORY[0x24BDAC7A8](v16);
  sub_23F1316E4();
  v26 = sub_23F1217E8(&qword_256DFE828);
  MEMORY[0x24BDAC7A8](v26);
  sub_23F1319B0();
  v30 = (int *)type metadata accessor for ClientAction.Definition(0);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F1262C8();
  v20 = (uint64_t *)(v19 - v18);
  v29 = (uint64_t)v13;
  sub_23F12545C(v13, v13[3]);
  sub_23F12EC1C();
  sub_23F268888();
  if (v10)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v13);
  }
  else
  {
    *v20 = sub_23F131ACC();
    v20[1] = v21;
    LOBYTE(a10) = 1;
    v20[2] = sub_23F131ACC();
    v20[3] = v22;
    sub_23F1217E8(&qword_256DFE7F8);
    sub_23F12EC94((uint64_t)&unk_256DFE830);
    sub_23F131BD4();
    sub_23F1317EC();
    v20[4] = a10;
    sub_23F12E488((uint64_t)&unk_256DFE7B0);
    sub_23F1317EC();
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))((char *)v20 + v30[7], v11, v28);
    LOBYTE(a10) = 4;
    *((_BYTE *)v20 + v30[8]) = sub_23F131C24() & 1;
    sub_23F1217E8(&qword_256DFE810);
    sub_23F12ED14((uint64_t)&unk_256DFE840);
    sub_23F131694();
    *(uint64_t *)((char *)v20 + v30[9]) = a10;
    sub_23F131694();
    *(uint64_t *)((char *)v20 + v30[10]) = a10;
    v23 = sub_23F131C24();
    sub_23F131568();
    *((_BYTE *)v20 + v30[11]) = v23 & 1;
    sub_23F125DB0((uint64_t)v20, v15, type metadata accessor for ClientAction.Definition);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v29);
    v24 = sub_23F1317E0();
    sub_23F12E3EC(v24, v25);
  }
  sub_23F1313FC();
}

void sub_23F12BA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ClientAction.Definition.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F12BAA4()
{
  ClientAction.Definition.encode(to:)();
}

uint64_t sub_23F12BAC4()
{
  sub_23F268834();
  ClientAction.Definition.hash(into:)();
  return sub_23F268864();
}

void ClientAction.Registry.toolDefinitions.getter()
{
  sub_23F12BB08((void (*)(uint64_t, uint64_t *))sub_23F127034);
}

void sub_23F12BB08(void (*a1)(uint64_t, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23F1315C4();
  a1(v2, &v3);
  sub_23F1317F8();
  sub_23F131634();
}

IntelligenceFlow::ClientAction::Registry __swiftcall ClientAction.Registry.init(clientActions:)(Swift::OpaquePointer clientActions)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  IntelligenceFlow::ClientAction::Registry result;
  _QWORD *v24;

  sub_23F125F3C();
  v2 = v1;
  v4 = v3;
  v5 = sub_23F1217E8(&qword_256DFE850);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1262C8();
  v9 = (_QWORD *)(v8 - v7);
  v10 = type metadata accessor for ClientAction(0);
  v11 = MEMORY[0x24BEE4AF8];
  sub_23F268108();
  v12 = *(_QWORD *)(v2 + 16);
  if (v12)
  {
    v24 = v4;
    sub_23F12D364();
    v13 = v11;
    v14 = *(_QWORD *)(v10 - 8);
    v15 = v2 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v16 = *(_QWORD *)(v14 + 72);
    do
    {
      v17 = (_QWORD *)((char *)v9 + *(int *)(v5 + 48));
      sub_23F125DB0(v15, (uint64_t)v17, type metadata accessor for ClientAction);
      v18 = v17[1];
      *v9 = *v17;
      v9[1] = v18;
      v19 = *(_QWORD *)(v13 + 16);
      v20 = *(_QWORD *)(v13 + 24);
      swift_bridgeObjectRetain();
      if (v19 >= v20 >> 1)
        sub_23F12D364();
      *(_QWORD *)(v13 + 16) = v19 + 1;
      sub_23F125E68((uint64_t)v9, v13+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v19, &qword_256DFE850);
      v15 += v16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    v4 = v24;
  }
  else
  {
    sub_23F13186C();
    v13 = MEMORY[0x24BEE4AF8];
  }
  sub_23F1274EC(v13, &qword_256DFEB08, (void (*)(uint64_t, uint64_t, uint64_t *))sub_23F12DDF4);
  v22 = v21;
  swift_bridgeObjectRelease();
  *v4 = v22;
  sub_23F125EFC();
  return result;
}

void ClientAction.Registry.register(definition:run:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F125F3C();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_23F131678();
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F1316E4();
  sub_23F1217E8(&qword_256DFE858);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F1262C8();
  v11 = v10 - v9;
  v12 = *v6;
  v13 = v6[1];
  sub_23F126350((uint64_t)v6, v0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v4;
  *(_QWORD *)(v14 + 24) = v2;
  sub_23F125D90(v0, v11, type metadata accessor for ClientAction.Definition);
  v15 = type metadata accessor for ClientAction(0);
  v16 = (_QWORD *)(v11 + *(int *)(v15 + 20));
  *v16 = &unk_256DFE868;
  v16[1] = v14;
  sub_23F131B10(v11, v17, v18, v15);
  sub_23F131A54();
  sub_23F131C14();
  sub_23F127630(v11, v12, v13);
  sub_23F125EFC();
}

uint64_t sub_23F12BDF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23F12BE64;
  return v8(a1, a2);
}

uint64_t sub_23F12BE64()
{
  uint64_t (*v0)(void);

  sub_23F131724();
  v0 = (uint64_t (*)(void))sub_23F131B74();
  return sub_23F13182C(v0);
}

void ClientAction.Registry.register(definition:run:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F1217E8(&qword_256DFE858);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1262C8();
  v9 = v8 - v7;
  v10 = *a1;
  v11 = a1[1];
  sub_23F125DB0((uint64_t)a1, v8 - v7, type metadata accessor for ClientAction.Definition);
  v12 = type metadata accessor for ClientAction(0);
  v13 = (_QWORD *)(v9 + *(int *)(v12 + 20));
  *v13 = a2;
  v13[1] = a3;
  sub_23F131B10(v9, v14, v15, v12);
  sub_23F13184C();
  sub_23F131C14();
  sub_23F127630(v9, v10, v11);
  sub_23F131680();
}

uint64_t ClientAction.Registry.run(action:client:sessionId:clientRequestId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  v6[53] = a4;
  v6[54] = a5;
  v6[51] = a2;
  v6[52] = a3;
  v6[50] = a1;
  type metadata accessor for StatementOutcome(0);
  v6[55] = sub_23F1314BC();
  v6[56] = type metadata accessor for MessagePayload.ClientActionResult(0);
  v6[57] = sub_23F1314BC();
  v7 = sub_23F131B8C();
  v6[58] = v7;
  v6[59] = *(_QWORD *)(v7 - 8);
  v6[60] = sub_23F131384();
  v6[61] = sub_23F1314B4();
  v6[62] = sub_23F1314B4();
  v6[63] = type metadata accessor for MessagePayload(0);
  v6[64] = sub_23F131384();
  v6[65] = sub_23F1314B4();
  v6[66] = sub_23F1314B4();
  type metadata accessor for ActionOutcome(0);
  v6[67] = sub_23F131384();
  v6[68] = sub_23F1314B4();
  v6[69] = type metadata accessor for SessionClientMessage(0);
  v6[70] = sub_23F131384();
  v6[71] = sub_23F1314B4();
  sub_23F1217E8(&qword_256DFE858);
  v6[72] = sub_23F1314BC();
  v6[73] = type metadata accessor for ClientAction(0);
  v6[74] = sub_23F1314BC();
  v6[75] = *v5;
  sub_23F131B50();
  return sub_23F131838();
}

uint64_t sub_23F12C044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  int **v12;
  int *v13;
  _QWORD *v14;
  uint64_t (*v15)(void);

  sub_23F131A38();
  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(_QWORD *)(v0 + 584);
  v3 = *(_QWORD *)(v0 + 576);
  v4 = *(_QWORD *)(v0 + 400);
  v5 = (uint64_t *)(v4 + *(int *)(type metadata accessor for MessagePayload.ClientAction(0) + 20));
  v7 = *v5;
  v6 = v5[1];
  sub_23F1263B8();
  sub_23F1218C8(v7, v6, v1, v3);
  sub_23F1318B8();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v3, 1, v2) == 1)
  {
    sub_23F12EEB4(*(_QWORD *)(v0 + 576));
    sub_23F12EEF4();
    sub_23F131B30();
    *(_QWORD *)v8 = v7;
    *(_QWORD *)(v8 + 8) = v6;
    *(_BYTE *)(v8 + 16) = 0;
    sub_23F1263B8();
    swift_willThrow();
    swift_task_dealloc();
    sub_23F131754();
    sub_23F131A28();
    sub_23F1316FC();
    sub_23F131704();
    sub_23F131744();
    sub_23F131788();
    sub_23F1317B0();
    sub_23F131938();
    sub_23F131780();
    sub_23F131C30();
    sub_23F131B9C();
    sub_23F131B94();
    sub_23F131C1C();
    return sub_23F131498(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 592);
    v11 = *(_QWORD *)(v0 + 584);
    sub_23F125D90(*(_QWORD *)(v0 + 576), v10, type metadata accessor for ClientAction);
    v12 = (int **)(v10 + *(int *)(v11 + 20));
    v13 = *v12;
    *(_QWORD *)(v0 + 608) = v12[1];
    v15 = (uint64_t (*)(void))((char *)v13 + *v13);
    sub_23F1319F8();
    v14 = (_QWORD *)sub_23F1314B4();
    *(_QWORD *)(v0 + 616) = v14;
    *v14 = v0;
    v14[1] = sub_23F12C1E0;
    return sub_23F1315D8(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 400), v15);
  }
}

uint64_t sub_23F12C1E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 624) = v0;
  swift_task_dealloc();
  sub_23F131B50();
  return sub_23F131820();
}

uint64_t sub_23F12C238()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = v0[71];
  v25 = v0[70];
  v27 = v0[69];
  v1 = v0[68];
  v2 = v0[67];
  v3 = v0[62];
  v22 = v0[61];
  v23 = v0[65];
  v4 = v0[58];
  v5 = v0[59];
  v6 = v0[56];
  v7 = v0[57];
  v8 = v0[55];
  v24 = v0[54];
  v26 = v0[53];
  v20 = v0[66];
  v21 = v0[52];
  v9 = v0[50];
  swift_release();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v19(v3, v9, v4);
  sub_23F125DB0(v1, v2, type metadata accessor for ActionOutcome);
  sub_23F12EF30(v0 + 26);
  v10 = v7 + *(int *)(v6 + 24);
  sub_23F125E68((uint64_t)(v0 + 26), v10, &qword_256DFE888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v7, v3, v4);
  ActionOutcome.asStatementOutcome.getter();
  sub_23F12E3EC(v2, type metadata accessor for ActionOutcome);
  sub_23F125D90(v8, v7 + *(int *)(v6 + 20), type metadata accessor for StatementOutcome);
  sub_23F125E68(v10, (uint64_t)(v0 + 2), &qword_256DFE888);
  sub_23F12EF40(v0 + 2);
  sub_23F125E68((uint64_t)(v0 + 26), v10, &qword_256DFE888);
  sub_23F125D90(v7, v20, type metadata accessor for MessagePayload.ClientActionResult);
  swift_storeEnumTagMultiPayload();
  v19(v22, v21, v4);
  sub_23F1319A8(v20, v23);
  v19(v25, v22, v4);
  sub_23F1319A8(v23, v25 + *(int *)(v27 + 24));
  if (v24)
    v11 = v26;
  else
    v11 = 0;
  if (v24)
    v12 = v24;
  else
    v12 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_23F131AB4(v23);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v22, v4);
  v13 = (_QWORD *)(v25 + *(int *)(v27 + 20));
  *v13 = v11;
  v13[1] = v12;
  sub_23F131AB4(v20);
  sub_23F12E3EC(v1, type metadata accessor for ActionOutcome);
  sub_23F125D90(v25, v28, type metadata accessor for SessionClientMessage);
  v14 = v0[78];
  sub_23F254A74();
  if (v14)
  {
    sub_23F12E3EC(v0[71], type metadata accessor for SessionClientMessage);
    sub_23F131800(v15, type metadata accessor for ClientAction);
    sub_23F1315F4();
    sub_23F131978();
    swift_task_dealloc();
    sub_23F131780();
    sub_23F131754();
    sub_23F1316FC();
    sub_23F131704();
    sub_23F131744();
    sub_23F131788();
    sub_23F1317B0();
    sub_23F131938();
    sub_23F131BCC();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v16 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_23F1316B8();
    sub_23F131978();
    swift_bridgeObjectRelease();
    sub_23F12E3EC(v4, type metadata accessor for SessionClientMessage);
    sub_23F131800(v17, type metadata accessor for ClientAction);
    sub_23F131704();
    sub_23F131744();
    sub_23F131788();
    sub_23F1317B0();
    sub_23F131938();
    sub_23F131780();
    sub_23F131754();
    sub_23F131A28();
    sub_23F1316FC();
    sub_23F131BCC();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v16 = (uint64_t (*)(void))sub_23F131B74();
  }
  return v16();
}

uint64_t sub_23F12C5B8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  _QWORD *v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v20;
  uint64_t v21;

  sub_23F131A38();
  v1 = (void *)v0[78];
  v2 = v0[71];
  v3 = v0[64];
  v20 = v0[69];
  v5 = v0[59];
  v4 = v0[60];
  v6 = v0[58];
  v7 = v0[54];
  v21 = v0[53];
  v8 = v0[52];
  swift_release();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v9(v4, v8, v6);
  sub_23F1217E8(&qword_256DFE880);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23F269B40;
  *(_QWORD *)(v10 + 32) = v1;
  *(_BYTE *)(v10 + 40) = 0;
  *(_QWORD *)v3 = v1;
  *(_BYTE *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = v10;
  swift_storeEnumTagMultiPayload();
  v9(v2, v4, v6);
  sub_23F125DB0(v3, v2 + *(int *)(v20 + 24), type metadata accessor for MessagePayload);
  if (v7)
    v11 = v21;
  else
    v11 = 0;
  if (v7)
    v12 = v7;
  else
    v12 = 0xE000000000000000;
  sub_23F13184C();
  v13 = v1;
  sub_23F12E3EC(v3, type metadata accessor for MessagePayload);
  v14 = sub_23F131BE8();
  v15(v14);
  v16 = (_QWORD *)(v2 + *(int *)(v20 + 20));
  *v16 = v11;
  v16[1] = v12;
  sub_23F254A74();
  sub_23F1316B8();
  sub_23F1318F0();
  swift_bridgeObjectRelease();
  sub_23F12E3EC(v20, type metadata accessor for SessionClientMessage);
  sub_23F131800(v17, type metadata accessor for ClientAction);
  sub_23F131704();
  sub_23F131744();
  sub_23F131788();
  sub_23F1317B0();
  sub_23F131938();
  sub_23F131780();
  sub_23F131754();
  sub_23F131A28();
  sub_23F1316FC();
  sub_23F131C30();
  sub_23F131B9C();
  sub_23F131B94();
  sub_23F131C1C();
  swift_task_dealloc();
  v18 = (uint64_t (*)(void))sub_23F131B74();
  return sub_23F131498(v18);
}

uint64_t ClientAction.Registry.run(clientAction:client:)()
{
  uint64_t v0;

  return sub_23F12F140(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F12C7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_23F12C838(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  BOOL *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  __int16 v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v40 = v37;
  v41 = v38;
  v42 = BYTE2(v38);
  v43 = BYTE3(v38);
  v44 = BYTE4(v38);
  v45 = BYTE5(v38);
  if (!v36)
  {
    __break(1u);
    JUMPOUT(0x23F12C9BCLL);
  }
  result = memcmp(v36, &v40, BYTE6(v38));
  *v35 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_23F12C9F4(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t result;
  char *v8;
  BOOL v9;
  int64_t v10;
  size_t v11;

  result = sub_23F267C7C();
  v8 = (char *)result;
  if (result)
  {
    result = sub_23F267C94();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  result = sub_23F267C88();
  if (!a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (result >= v10)
    v11 = v10;
  else
    v11 = result;
  return memcmp(a4, v8, v11) == 0;
}

unint64_t sub_23F12CA90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23F268834();
  sub_23F2681A4();
  v4 = sub_23F1318A0();
  return sub_23F12CB58(a1, a2, v4);
}

unint64_t sub_23F12CAF0(uint64_t a1)
{
  uint64_t v2;

  sub_23F131B8C();
  sub_23F12E488((uint64_t)&unk_256DFEAF0);
  v2 = sub_23F268120();
  return sub_23F12CC38(a1, v2);
}

unint64_t sub_23F12CB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23F268798() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23F268798() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_23F12CC38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_23F267D84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_23F12E488((uint64_t)&unk_256DFEAF8);
      v14 = sub_23F268138();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_23F12CD78(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 88 * a2 <= a1 || a1 + 88 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_23F268624();
  __break(1u);
  return result;
}

uint64_t sub_23F12CE4C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 120 * a2 > a1 ? (v3 = a1 + 120 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_23F268624();
    __break(1u);
  }
  else
  {
    sub_23F1217E8(&qword_256DFEB40);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_23F12CF40(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientAction.Definition(0) - 8) + 72) * a2;
    v6 = a3 + v5;
    v7 = a1 + v5;
    if (v6 <= a1 || v7 <= a3)
      return swift_arrayInitWithCopy();
  }
  result = sub_23F268624();
  __break(1u);
  return result;
}

uint64_t sub_23F12D034(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v6 = *(_QWORD *)(*(_QWORD *)(sub_23F1217E8(a4) - 8) + 72) * a2;
    v7 = a3 + v6;
    v8 = a1 + v6;
    if (v7 <= a1 || v8 <= a3)
      return swift_arrayInitWithCopy();
  }
  sub_23F131B3C();
  result = sub_23F268624();
  __break(1u);
  return result;
}

uint64_t sub_23F12D110(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 80 * a2 <= a1 || a1 + 80 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_23F268624();
  __break(1u);
  return result;
}

uint64_t sub_23F12D1E0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (v3 = a1 + 8 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_23F268624();
    __break(1u);
  }
  else
  {
    sub_23F1217E8(&qword_256DFEAD0);
    return swift_arrayInitWithCopy();
  }
  return result;
}

char *sub_23F12D2CC(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_23F12D3EC(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

char *sub_23F12D2E8(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_23F12D4D4(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

unint64_t sub_23F12D304(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_23F12D318(result);
  return result;
}

unint64_t sub_23F12D318(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

size_t sub_23F12D348(size_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  size_t result;

  result = sub_23F12D5BC(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_23F12D364()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F12D6FC();
  *v0 = v1;
}

char *sub_23F12D398(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_23F12D844(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

_QWORD *sub_23F12D3B4(_QWORD *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  _QWORD *result;

  result = sub_23F12D92C(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_23F12D3D0()
{
  sub_23F12D6FC();
}

char *sub_23F12D3EC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F1217E8(&qword_256DFEB48);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23F2581FC(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F12CD78((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_23F12D4D4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F1217E8(&qword_256DFEB38);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23F25825C(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F12CE4C((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

size_t sub_23F12D5BC(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23F1217E8(&qword_256DFEB20);
  v10 = *(_QWORD *)(type metadata accessor for ClientAction.Definition(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_24;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  v15 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClientAction.Definition(0) - 8) + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = a4 + v16;
  if ((v5 & 1) != 0)
  {
    sub_23F2582B8(v17, v8);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F12CF40(v17, v8, (unint64_t)v13 + v16);
  }
  swift_release();
  return (size_t)v13;
}

void sub_23F12D6FC()
{
  int64_t v0;
  uint64_t v1;
  uint64_t *v2;
  void (*v3)(unint64_t, uint64_t, unint64_t);
  void (*v4)(unint64_t, uint64_t, unint64_t);
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  sub_23F125F3C();
  v4 = v3;
  v6 = v5;
  v7 = v1;
  v9 = v8;
  if ((v10 & 1) != 0)
  {
    v11 = *(_QWORD *)(v1 + 24);
    v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < v0)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return;
      }
      v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= v0)
        v12 = v0;
    }
  }
  else
  {
    v12 = v0;
  }
  v13 = *(_QWORD *)(v1 + 16);
  if (v12 <= v13)
    v14 = *(_QWORD *)(v1 + 16);
  else
    v14 = v12;
  if (!v14)
  {
    v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23F1217E8(v2);
  v15 = *(_QWORD *)(sub_23F1217E8(v6) - 8);
  v16 = *(_QWORD *)(v15 + 72);
  v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v18 = (_QWORD *)swift_allocObject();
  v19 = j__malloc_size(v18);
  if (!v16)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v19 - v17 == 0x8000000000000000 && v16 == -1)
    goto LABEL_24;
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  v21 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F1217E8(v6) - 8) + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = (unint64_t)v18 + v22;
  v24 = v7 + v22;
  if ((v9 & 1) != 0)
  {
    v4(v24, v13, v23);
    *(_QWORD *)(v7 + 16) = 0;
  }
  else
  {
    sub_23F12D034(v24, v13, v23, v6);
  }
  swift_release();
}

char *sub_23F12D844(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F1217E8(&qword_256DFEAE8);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23F258360(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F12D110((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

_QWORD *sub_23F12D92C(_QWORD *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F1217E8(&qword_256DFEAC8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    sub_23F25846C(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F12D1E0(v13, v8, v12);
  }
  swift_release();
  return v10;
}

void sub_23F12DA0C(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v43;

  v3 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v32 = v4;
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v5 = 0;
  v6 = 0;
  v31 = v3;
  while (1)
  {
    if (v6 >= *(_QWORD *)(v3 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_23F2687D4();
      __break(1u);
      goto LABEL_24;
    }
    v7 = *(_QWORD *)(v3 + v5 + 32);
    v8 = *(_QWORD *)(v3 + v5 + 40);
    v9 = *(_QWORD *)(v3 + v5 + 56);
    v10 = *(_QWORD *)(v3 + v5 + 72);
    v38 = *(_QWORD *)(v3 + v5 + 64);
    v39 = *(_QWORD *)(v3 + v5 + 48);
    v11 = *(_QWORD *)(v3 + v5 + 88);
    v36 = *(_QWORD *)(v3 + v5 + 96);
    v37 = *(_QWORD *)(v3 + v5 + 80);
    v13 = *(_QWORD *)(v3 + v5 + 112);
    v12 = *(_QWORD *)(v3 + v5 + 120);
    v35 = *(_BYTE *)(v3 + v5 + 128);
    v43 = *(_OWORD *)(v3 + v5 + 136);
    v40 = *(_QWORD *)(v3 + v5 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23F12D304(v13);
    swift_bridgeObjectRetain();
    swift_retain();
    if (!v8)
      goto LABEL_18;
    v33 = v13;
    v34 = v12;
    v14 = (_QWORD *)*a3;
    v16 = sub_23F12CA90(v7, v8);
    v17 = v14[2];
    v18 = (v15 & 1) == 0;
    v19 = v17 + v18;
    if (__OFADD__(v17, v18))
      goto LABEL_21;
    v20 = v15;
    if (v14[3] < v19)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_23F1217E8(&qword_256DFEB28);
      sub_23F2685C4();
      if ((v20 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v23 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    v24 = (uint64_t *)(v23[6] + 16 * v16);
    *v24 = v7;
    v24[1] = v8;
    v25 = v23[7] + 104 * v16;
    *(_QWORD *)v25 = v39;
    *(_QWORD *)(v25 + 8) = v9;
    *(_QWORD *)(v25 + 16) = v38;
    *(_QWORD *)(v25 + 24) = v10;
    *(_QWORD *)(v25 + 32) = v37;
    *(_QWORD *)(v25 + 40) = v11;
    *(_QWORD *)(v25 + 48) = v36;
    *(_QWORD *)(v25 + 56) = v40;
    *(_QWORD *)(v25 + 64) = v33;
    *(_QWORD *)(v25 + 72) = v34;
    *(_BYTE *)(v25 + 80) = v35;
    *(_OWORD *)(v25 + 88) = v43;
    v26 = v23[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_22;
    ++v6;
    v23[2] = v28;
    v5 += 120;
    a2 = 1;
    v3 = v31;
    if (v32 == v6)
      goto LABEL_18;
  }
  sub_23F1F2C44(v19, a2 & 1);
  v21 = sub_23F12CA90(v7, v8);
  if ((v20 & 1) != (v22 & 1))
    goto LABEL_23;
  v16 = v21;
  if ((v20 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v29 = (void *)swift_allocError();
  swift_willThrow();
  v30 = v29;
  sub_23F1217E8(&qword_256DFEB10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F12E3A8(v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  sub_23F26851C();
  sub_23F2681BC();
  sub_23F2685AC();
  sub_23F2681BC();
  sub_23F2685E8();
  __break(1u);
}

void sub_23F12DDF4(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  _QWORD *v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  char v25;
  unint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  void *v33;
  id v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;

  v41 = a3;
  v6 = type metadata accessor for ClientAction(0);
  v40 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F1217E8(&qword_256DFE850);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v13 = (_QWORD *)((char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v35[0] = v3;
  v35[1] = a1;
  v39 = (uint64_t)v13 + *(int *)(v10 + 48);
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v36 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v16 = type metadata accessor for ClientAction;
  v37 = v13;
  v38 = v8;
  while (1)
  {
    sub_23F13123C(v15, (uint64_t)v13);
    v18 = v13[1];
    v44 = *v13;
    v17 = v44;
    v45 = v18;
    v19 = v16;
    sub_23F125D90(v39, (uint64_t)v8, v16);
    v20 = (_QWORD *)*v41;
    v22 = sub_23F12CA90(v17, v18);
    v23 = v20[2];
    v24 = (v21 & 1) == 0;
    if (__OFADD__(v23, v24))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_23F2687D4();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v21;
    if (v20[3] < v23 + v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v21 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_23F1217E8(&qword_256DFEB00);
      sub_23F2685C4();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = (_QWORD *)*v41;
    *(_QWORD *)(*v41 + 8 * (v22 >> 6) + 64) |= 1 << v22;
    v29 = (uint64_t *)(v28[6] + 16 * v22);
    *v29 = v17;
    v29[1] = v18;
    v8 = v38;
    v16 = v19;
    sub_23F125D90((uint64_t)v38, v28[7] + *(_QWORD *)(v40 + 72) * v22, v19);
    v30 = v28[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_18;
    v28[2] = v32;
    v13 = v37;
    v15 += v36;
    a2 = 1;
    if (!--v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_23F1F2F90();
  v26 = sub_23F12CA90(v17, v18);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v22 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v33 = (void *)swift_allocError();
  swift_willThrow();
  v46 = v33;
  v34 = v33;
  sub_23F1217E8(&qword_256DFEB10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_23F12E3EC((uint64_t)v38, type metadata accessor for ClientAction);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v42 = 0;
  v43 = 0xE000000000000000;
  sub_23F26851C();
  sub_23F2681BC();
  sub_23F2685AC();
  sub_23F2681BC();
  sub_23F2685E8();
  __break(1u);
}

uint64_t sub_23F12E1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23F12CA90(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v14 = *v4;
    *v4 = 0x8000000000000000;
    sub_23F1217E8(&qword_256DFEB00);
    sub_23F2685B8();
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v14 + 56);
    v11 = type metadata accessor for ClientAction(0);
    sub_23F125D90(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v8, a3, type metadata accessor for ClientAction);
    sub_23F2685D0();
    *v4 = v14;
    swift_bridgeObjectRelease();
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a3, 0, 1, v11);
  }
  else
  {
    v13 = type metadata accessor for ClientAction(0);
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a3, 1, 1, v13);
  }
}

uint64_t sub_23F12E2F0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  swift_isUniquelyReferenced_nonNull_native();
  v8 = *v3;
  *v3 = 0x8000000000000000;
  sub_23F12E53C(a1, a2, a3);
  *v3 = v8;
  return swift_bridgeObjectRelease();
}

unint64_t sub_23F12E36C()
{
  unint64_t result;

  result = qword_256DFE780;
  if (!qword_256DFE780)
  {
    result = MEMORY[0x242667160](&unk_23F269AF0, &unk_250FAA040);
    atomic_store(result, (unint64_t *)&qword_256DFE780);
  }
  return result;
}

unint64_t sub_23F12E3A8(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_23F12E3BC(result);
  return result;
}

unint64_t sub_23F12E3BC(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

void sub_23F12E3EC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_23F126078();
}

uint64_t type metadata accessor for ClientAction.Definition(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256DFE998);
}

uint64_t type metadata accessor for ClientAction.Definition.ParameterDefinition(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256DFEA40);
}

unint64_t sub_23F12E44C()
{
  unint64_t result;

  result = qword_256DFE798;
  if (!qword_256DFE798)
  {
    result = MEMORY[0x242667160](&unk_23F269AA0, &type metadata for ClientAction.Definition.ParameterDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFE798);
  }
  return result;
}

void sub_23F12E488(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!sub_23F131AF0(a1))
  {
    v4 = v3;
    v5 = v2(255);
    atomic_store(MEMORY[0x242667160](v4, v5), v1);
  }
  sub_23F126078();
}

uint64_t sub_23F12E4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  swift_isUniquelyReferenced_nonNull_native();
  v8 = *v3;
  *v3 = 0x8000000000000000;
  sub_23F12E650(a1, a2, a3);
  *v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F12E53C(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_23F12CA90(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_23F1217E8(&qword_256DFEB28);
  if ((sub_23F2685B8() & 1) == 0)
    goto LABEL_5;
  v13 = sub_23F12CA90(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_23F2687D4();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
    return sub_23F131304((uint64_t)a1, v15[7] + 104 * v11);
  sub_23F12E770(v11, a2, a3, a1, v15);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F12E650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_23F12CA90(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_23F1217E8(&qword_256DFEB00);
  if ((sub_23F2685B8() & 1) == 0)
    goto LABEL_5;
  v13 = sub_23F12CA90(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_23F2687D4();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7];
    v17 = v16 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientAction(0) - 8) + 72) * v11;
    return sub_23F1311F8(a1, v17);
  }
  else
  {
    sub_23F12E7E0(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
}

void *sub_23F12E770(unint64_t a1, uint64_t a2, uint64_t a3, void *__src, _QWORD *a5)
{
  _QWORD *v6;
  void *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = memcpy((void *)(a5[7] + 104 * a1), __src, 0x68uLL);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

void sub_23F12E7E0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for ClientAction(0);
  sub_23F125D90(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, type metadata accessor for ClientAction);
  v11 = a5[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a5[2] = v13;
}

uint64_t sub_23F12E870(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_23F268840();
  if (v3)
  {
    v5 = 0;
    v11 = a2 + 32;
    do
    {
      v6 = (uint64_t *)(v11 + 24 * v5);
      v7 = *v6;
      v8 = v6[2];
      sub_23F268840();
      v9 = *(_QWORD *)(v7 + 16);
      if (v9)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        v10 = v7 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_23F2681A4();
          swift_bridgeObjectRelease();
          v10 += 16;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease();
        if (!v8)
        {
LABEL_9:
          sub_23F26884C();
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!v8)
          goto LABEL_9;
      }
      sub_23F26884C();
      swift_bridgeObjectRetain();
      sub_23F2681A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_10:
      ++v5;
      result = swift_bridgeObjectRelease();
    }
    while (v5 != v3);
  }
  return result;
}

uint64_t sub_23F12E9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_23F268840();
  if (v3)
  {
    v5 = a2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23F2681A4();
      result = swift_bridgeObjectRelease();
      v5 += 16;
      --v3;
    }
    while (v3);
  }
  return result;
}

unint64_t sub_23F12EA30()
{
  unint64_t result;

  result = qword_256DFE7C0;
  if (!qword_256DFE7C0)
  {
    result = MEMORY[0x242667160](&unk_23F269A50, &type metadata for ClientAction.Definition.ExampleInvocationDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFE7C0);
  }
  return result;
}

void sub_23F12EA6C(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!sub_23F131AF0(a1))
  {
    v4 = v3;
    v5 = v2;
    v6 = sub_23F125540(&qword_256DFE7C8);
    v7 = v5;
    atomic_store(MEMORY[0x242667160](v4, v6, &v7), v1);
  }
  sub_23F131634();
}

void sub_23F12EABC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = type metadata accessor for ClientAction.Definition.ParameterDefinition(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  sub_23F268840();
  if (v7)
  {
    v8 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v9 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_23F125DB0(v8, (uint64_t)v6, type metadata accessor for ClientAction.Definition.ParameterDefinition);
      swift_bridgeObjectRetain();
      sub_23F2681A4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23F2681A4();
      swift_bridgeObjectRelease();
      sub_23F268090();
      sub_23F12E488((uint64_t)&unk_256DFE788);
      sub_23F26812C();
      sub_23F12E3EC((uint64_t)v6, type metadata accessor for ClientAction.Definition.ParameterDefinition);
      v8 += v9;
      --v7;
    }
    while (v7);
  }
}

unint64_t sub_23F12EC1C()
{
  unint64_t result;

  result = qword_256DFE7F0;
  if (!qword_256DFE7F0)
  {
    result = MEMORY[0x242667160](&unk_23F269A00, &type metadata for ClientAction.Definition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFE7F0);
  }
  return result;
}

unint64_t sub_23F12EC58()
{
  unint64_t result;

  result = qword_256DFE820;
  if (!qword_256DFE820)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ClientAction.Definition.ExampleInvocationDefinition, &type metadata for ClientAction.Definition.ExampleInvocationDefinition);
    atomic_store(result, (unint64_t *)&qword_256DFE820);
  }
  return result;
}

unint64_t sub_23F12EC94(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_23F131AF0(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = sub_23F125540(&qword_256DFE7F8);
    sub_23F12E488(v6);
    v9 = v8;
    result = MEMORY[0x242667160](v5, v7, &v9);
    atomic_store(result, v1);
  }
  return result;
}

void sub_23F12ED14(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;

  if (!sub_23F131AF0(a1))
  {
    v4 = v3;
    v5 = v2;
    v6 = sub_23F125540(&qword_256DFE810);
    v7 = v5();
    atomic_store(MEMORY[0x242667160](v4, v6, &v7), v1);
  }
  sub_23F131634();
}

unint64_t sub_23F12ED6C()
{
  unint64_t result;

  result = qword_256DFE848;
  if (!qword_256DFE848)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ClientAction.Definition.ExampleInvocationDefinition, &type metadata for ClientAction.Definition.ExampleInvocationDefinition);
    atomic_store(result, (unint64_t *)&qword_256DFE848);
  }
  return result;
}

uint64_t type metadata accessor for ClientAction(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256DFE908);
}

uint64_t sub_23F12EDBC(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F12EDEC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F12EE10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F12EE90;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_256DFE860 + dword_256DFE860))(a1, a2, v6);
}

uint64_t sub_23F12EE90()
{
  uint64_t v0;

  sub_23F131724();
  return sub_23F13182C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F12EEB4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F1217E8(&qword_256DFE858);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23F12EEF4()
{
  unint64_t result;

  result = qword_256DFE878;
  if (!qword_256DFE878)
  {
    result = MEMORY[0x242667160](&unk_23F2699C0, &unk_250FA9E00);
    atomic_store(result, (unint64_t *)&qword_256DFE878);
  }
  return result;
}

void sub_23F12EF30(_QWORD *a1)
{
  *a1 = 1;
  bzero(a1 + 1, 0xB2uLL);
}

uint64_t *sub_23F12EF40(uint64_t *a1)
{
  sub_23F12EFB0(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17]);
  return a1;
}

uint64_t sub_23F12EFB0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    sub_23F12F0C4(a2, a3);
    sub_23F12F0C4(a10, a11);
    sub_23F12F114(a18);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F12F0C4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F12F114(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F12F140(uint64_t (*a1)(void))
{
  return a1();
}

void sub_23F12F14C()
{
  sub_23F12E488((uint64_t)&unk_256DFE898);
}

unint64_t sub_23F12F17C()
{
  unint64_t result;

  result = qword_256DFE8A0;
  if (!qword_256DFE8A0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ClientAction.Definition.ExampleInvocationDefinition, &type metadata for ClientAction.Definition.ExampleInvocationDefinition);
    atomic_store(result, (unint64_t *)&qword_256DFE8A0);
  }
  return result;
}

void sub_23F12F1B8()
{
  sub_23F12E488((uint64_t)&unk_256DFE8A8);
}

uint64_t destroy for ClientEffect(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 64);
  if ((~v2 & 0xF000000000000007) != 0)
    sub_23F12E3BC(v2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ClientEffect(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v8 & 0xF000000000000007) != 0)
    sub_23F12D318(v8);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ClientEffect(uint64_t a1, uint64_t a2)
{
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (unint64_t *)(a1 + 64);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = v5 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 64) & 0xF000000000000007) != 0)
  {
    if (v6 == 0xF000000000000007)
    {
      sub_23F12F43C((unint64_t *)(a1 + 64));
      *v4 = *(_QWORD *)(a2 + 64);
    }
    else
    {
      sub_23F12D318(*(_QWORD *)(a2 + 64));
      v7 = *v4;
      *v4 = v5;
      sub_23F12E3BC(v7);
    }
  }
  else
  {
    if (v6 != 0xF000000000000007)
      sub_23F12D318(*(_QWORD *)(a2 + 64));
    *v4 = v5;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_retain();
  swift_release();
  return a1;
}

unint64_t *sub_23F12F43C(unint64_t *a1)
{
  destroy for TypeDefinition(a1);
  return a1;
}

void *initializeWithTake for MessagePayload.ActionWillExecute(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t assignWithTake for ClientEffect(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 64);
  v10 = *(_QWORD *)(a2 + 64);
  if ((~v8 & 0xF000000000000007) != 0)
  {
    if ((~v10 & 0xF000000000000007) != 0)
    {
      *v9 = v10;
      sub_23F12E3BC(v8);
      goto LABEL_6;
    }
    sub_23F12F43C((unint64_t *)(a1 + 64));
  }
  *v9 = v10;
LABEL_6:
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientEffect(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientEffect(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ClientEffect()
{
  sub_23F131844();
}

void type metadata accessor for ClientEffect.Registry()
{
  sub_23F131844();
}

_QWORD *initializeBufferWithCopyOfBuffer for ClientAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    a1[4] = a2[4];
    v9 = (int *)type metadata accessor for ClientAction.Definition(0);
    v10 = v9[7];
    v20 = (char *)v4 + v10;
    v11 = (char *)a2 + v10;
    v12 = sub_23F268090();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v20, v11, v12);
    *((_BYTE *)v4 + v9[8]) = *((_BYTE *)a2 + v9[8]);
    *(_QWORD *)((char *)v4 + v9[9]) = *(_QWORD *)((char *)a2 + v9[9]);
    *(_QWORD *)((char *)v4 + v9[10]) = *(_QWORD *)((char *)a2 + v9[10]);
    *((_BYTE *)v4 + v9[11]) = *((_BYTE *)a2 + v9[11]);
    v14 = *(int *)(a3 + 20);
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ClientAction(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for ClientAction.Definition(0) + 28);
  v3 = sub_23F268090();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *initializeWithCopy for ClientAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  v7 = (int *)type metadata accessor for ClientAction.Definition(0);
  v8 = v7[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23F268090();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *((_BYTE *)a1 + v7[8]) = *((_BYTE *)a2 + v7[8]);
  *(_QWORD *)((char *)a1 + v7[9]) = *(_QWORD *)((char *)a2 + v7[9]);
  *(_QWORD *)((char *)a1 + v7[10]) = *(_QWORD *)((char *)a2 + v7[10]);
  *((_BYTE *)a1 + v7[11]) = *((_BYTE *)a2 + v7[11]);
  v13 = *(int *)(a3 + 20);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ClientAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for ClientAction.Definition(0);
  v7 = v6[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F268090();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[10]) = *(_QWORD *)((char *)a2 + v6[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
  v11 = *(int *)(a3 + 20);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ClientAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = (int *)type metadata accessor for ClientAction.Definition(0);
  v8 = v7[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23F268090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  *(_QWORD *)(a1 + v7[10]) = *(_QWORD *)(a2 + v7[10]);
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *assignWithTake for ClientAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for ClientAction.Definition(0);
  v9 = v8[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_23F268090();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
  *(_QWORD *)((char *)a1 + v8[9]) = *(_QWORD *)((char *)a2 + v8[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v8[10]) = *(_QWORD *)((char *)a2 + v8[10]);
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F12FBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for ClientAction.Definition(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_23F1315B8(a1, a2, v6);
  }
  else
  {
    sub_23F13188C(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
    sub_23F12612C();
  }
}

uint64_t storeEnumTagSinglePayload for ClientAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F12FC44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = type metadata accessor for ClientAction.Definition(0);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_23F126098(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    sub_23F12612C();
  }
}

uint64_t sub_23F12FCA8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ClientAction.Definition(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ClientAction.Definition(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    a1[4] = a2[4];
    v12 = sub_23F268090();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)((char *)v4 + v14) = *(_QWORD *)((char *)a2 + v14);
    v15 = a3[11];
    *(_QWORD *)((char *)v4 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    *((_BYTE *)v4 + v15) = *((_BYTE *)a2 + v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ClientAction.Definition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23F268090();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ClientAction.Definition(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  v8 = a3[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23F268090();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  v14 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ClientAction.Definition(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F268090();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for ClientAction.Definition(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F268090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

_QWORD *assignWithTake for ClientAction.Definition(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23F268090();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientAction.Definition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F1301FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23F13188C(*(_QWORD *)(a1 + 8));
    sub_23F12612C();
  }
  else
  {
    v6 = sub_23F1314EC();
    sub_23F1315B8(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ClientAction.Definition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F13025C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F131BA4();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    sub_23F12612C();
  }
  else
  {
    v4 = v2;
    v5 = sub_23F1314EC();
    sub_23F126098(v1 + *(int *)(v4 + 28), v0, v0, v5);
  }
}

uint64_t sub_23F1302A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F268090();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientAction.Definition.ParameterDefinition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23F268090();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for ClientAction.Definition.ParameterDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23F268090();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ClientAction.Definition.ParameterDefinition(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F268090();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for ClientAction.Definition.ParameterDefinition(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F268090();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ClientAction.Definition.ParameterDefinition(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23F268090();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for ClientAction.Definition.ParameterDefinition(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23F268090();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientAction.Definition.ParameterDefinition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F130648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23F13188C(*(_QWORD *)(a1 + 8));
    sub_23F12612C();
  }
  else
  {
    v6 = sub_23F1314EC();
    sub_23F1315B8(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ClientAction.Definition.ParameterDefinition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F1306A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F131BA4();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    sub_23F12612C();
  }
  else
  {
    v4 = v2;
    v5 = sub_23F1314EC();
    sub_23F126098(v1 + *(int *)(v4 + 24), v0, v0, v5);
  }
}

uint64_t sub_23F1306F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F268090();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ClientAction.Definition.ExampleInvocationDefinition()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s16IntelligenceFlow12ClientActionV10DefinitionV27ExampleInvocationDefinitionVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  sub_23F1315C4();
  sub_23F126078();
}

_QWORD *assignWithCopy for ClientAction.Definition.ExampleInvocationDefinition(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for SessionServerDebuggerEvent.SpanStarted(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for ClientAction.Definition.ExampleInvocationDefinition(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientAction.Definition.ExampleInvocationDefinition(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientAction.Definition.ExampleInvocationDefinition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ClientAction.Definition.ExampleInvocationDefinition()
{
  sub_23F131844();
}

void type metadata accessor for ClientAction.Registry()
{
  sub_23F131844();
}

uint64_t sub_23F13091C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_23F130D2C(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_23F130928);
}

uint64_t sub_23F130928()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F130930()
{
  return sub_23F130940();
}

uint64_t sub_23F130940()
{
  return swift_bridgeObjectRelease();
}

uint64_t *sub_23F130948(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_23F130D88(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_23F130928, (void (*)(uint64_t, uint64_t, uint64_t))sub_23F130940);
}

__n128 initializeWithTake for SystemPromptResolution.ResolutionInput(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

void sub_23F130970(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_23F130DF4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_23F130940);
}

uint64_t sub_23F130984(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_23F13098C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

void type metadata accessor for ClientAction.Registry.RegistryError()
{
  sub_23F131844();
}

uint64_t getEnumTagSinglePayload for ClientAction.Definition.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientAction.Definition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23F130A78 + 4 * byte_23F269445[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23F130AAC + 4 * byte_23F269440[v4]))();
}

uint64_t sub_23F130AAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F130AB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F130ABCLL);
  return result;
}

uint64_t sub_23F130AC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F130AD0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23F130AD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F130ADC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClientAction.Definition.CodingKeys()
{
  return &type metadata for ClientAction.Definition.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ClientAction.Definition.ExampleInvocationDefinition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F130B44 + 4 * byte_23F26944F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F130B78 + 4 * byte_23F26944A[v4]))();
}

uint64_t sub_23F130B78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F130B80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F130B88);
  return result;
}

uint64_t sub_23F130B94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F130B9CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F130BA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F130BA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClientAction.Definition.ExampleInvocationDefinition.CodingKeys()
{
  return &type metadata for ClientAction.Definition.ExampleInvocationDefinition.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ClientAction.Definition.ParameterDefinition.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientAction.Definition.ParameterDefinition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F130C98 + 4 * byte_23F269459[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F130CCC + 4 * byte_23F269454[v4]))();
}

uint64_t sub_23F130CCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F130CD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F130CDCLL);
  return result;
}

uint64_t sub_23F130CE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F130CF0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F130CF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F130CFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23F130D08(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClientAction.Definition.ParameterDefinition.CodingKeys()
{
  return &type metadata for ClientAction.Definition.ParameterDefinition.CodingKeys;
}

uint64_t sub_23F130D20(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_23F130D2C(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_23F131348);
}

uint64_t sub_23F130D2C(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  return a1;
}

uint64_t *sub_23F130D74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_23F130D88(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_23F131348, (void (*)(uint64_t, uint64_t, uint64_t))sub_23F13134C);
}

uint64_t *sub_23F130D88(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  v12 = *((unsigned __int8 *)a1 + 16);
  *a1 = v7;
  a1[1] = v8;
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

void sub_23F130DE8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_23F130DF4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_23F13134C);
}

void sub_23F130DF4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  v8 = *((unsigned __int8 *)a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  sub_23F126078();
}

uint64_t getEnumTagSinglePayload for AppIntentsInvocationPreview.Parameter.Value(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppIntentsInvocationPreview.Parameter.Value(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

void type metadata accessor for ClientEffect.Registry.RegistryError()
{
  sub_23F131844();
}

unint64_t sub_23F130EC8()
{
  unint64_t result;

  result = qword_256DFEA80;
  if (!qword_256DFEA80)
  {
    result = MEMORY[0x242667160](&unk_23F269828, &type metadata for ClientAction.Definition.ParameterDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFEA80);
  }
  return result;
}

unint64_t sub_23F130F08()
{
  unint64_t result;

  result = qword_256DFEA88;
  if (!qword_256DFEA88)
  {
    result = MEMORY[0x242667160](&unk_23F2698E0, &type metadata for ClientAction.Definition.ExampleInvocationDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFEA88);
  }
  return result;
}

unint64_t sub_23F130F48()
{
  unint64_t result;

  result = qword_256DFEA90;
  if (!qword_256DFEA90)
  {
    result = MEMORY[0x242667160](&unk_23F269998, &type metadata for ClientAction.Definition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFEA90);
  }
  return result;
}

unint64_t sub_23F130F88()
{
  unint64_t result;

  result = qword_256DFEA98;
  if (!qword_256DFEA98)
  {
    result = MEMORY[0x242667160](&unk_23F269908, &type metadata for ClientAction.Definition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFEA98);
  }
  return result;
}

unint64_t sub_23F130FC8()
{
  unint64_t result;

  result = qword_256DFEAA0;
  if (!qword_256DFEAA0)
  {
    result = MEMORY[0x242667160](&unk_23F269930, &type metadata for ClientAction.Definition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFEAA0);
  }
  return result;
}

unint64_t sub_23F131008()
{
  unint64_t result;

  result = qword_256DFEAA8;
  if (!qword_256DFEAA8)
  {
    result = MEMORY[0x242667160](&unk_23F269850, &type metadata for ClientAction.Definition.ExampleInvocationDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFEAA8);
  }
  return result;
}

unint64_t sub_23F131048()
{
  unint64_t result;

  result = qword_256DFEAB0;
  if (!qword_256DFEAB0)
  {
    result = MEMORY[0x242667160](&unk_23F269878, &type metadata for ClientAction.Definition.ExampleInvocationDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFEAB0);
  }
  return result;
}

unint64_t sub_23F131088()
{
  unint64_t result;

  result = qword_256DFEAB8;
  if (!qword_256DFEAB8)
  {
    result = MEMORY[0x242667160](&unk_23F269798, &type metadata for ClientAction.Definition.ParameterDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFEAB8);
  }
  return result;
}

unint64_t sub_23F1310C8()
{
  unint64_t result;

  result = qword_256DFEAC0;
  if (!qword_256DFEAC0)
  {
    result = MEMORY[0x242667160](&unk_23F2697C0, &type metadata for ClientAction.Definition.ParameterDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFEAC0);
  }
  return result;
}

uint64_t sub_23F131104()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F131110()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_23F13111C()
{
  unint64_t result;

  result = qword_256DFEAE0;
  if (!qword_256DFEAE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256DFEAE0);
  }
  return result;
}

id sub_23F131158(id a1)
{
  return a1;
}

void sub_23F131164(id a1)
{

}

uint64_t sub_23F131170(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_23F1311B4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23F1311F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClientAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F13123C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F1217E8(&qword_256DFE850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F131284(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23F131304(uint64_t a1, uint64_t a2)
{
  assignWithTake for ClientEffect(a2, a1);
  return a2;
}

uint64_t sub_23F13136C()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F131170(v1, v0);
}

uint64_t sub_23F131378()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F1311B4(v1, v0);
}

uint64_t sub_23F131384()
{
  return swift_task_alloc();
}

uint64_t sub_23F131398()
{
  sub_23F131104();
  sub_23F131104();
  sub_23F131104();
  sub_23F131104();
  sub_23F131104();
  return sub_23F131104();
}

uint64_t sub_23F131414()
{
  uint64_t v0;

  sub_23F131110();
  sub_23F131110();
  sub_23F131110();
  sub_23F131110();
  sub_23F131110();
  return v0;
}

uint64_t sub_23F13147C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23F131498(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F1314B4()
{
  return swift_task_alloc();
}

uint64_t sub_23F1314BC()
{
  return swift_task_alloc();
}

uint64_t sub_23F1314EC()
{
  return sub_23F268090();
}

uint64_t sub_23F1314F4()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F1311B4(v0, v1);
}

uint64_t sub_23F13151C()
{
  uint64_t v0;

  sub_23F131104();
  sub_23F131104();
  sub_23F131110();
  return v0;
}

uint64_t sub_23F131568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 128));
}

uint64_t sub_23F131578()
{
  sub_23F131104();
  sub_23F131104();
  sub_23F131110();
  return sub_23F131110();
}

uint64_t sub_23F1315B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, a3);
}

uint64_t sub_23F1315C4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F1315CC()
{
  return sub_23F268750();
}

uint64_t sub_23F1315D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23F1315F4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 592);
}

uint64_t sub_23F131624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F131644()
{
  return sub_23F268720();
}

void sub_23F131654(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v3 + a1;
  if (v3)
    v5 = v4;
  else
    v5 = 0;
  sub_23F12C7D8(v3, v5, v2, v1);
}

uint64_t sub_23F131678()
{
  return type metadata accessor for ClientAction.Definition(0);
}

uint64_t sub_23F131694()
{
  return sub_23F2686B4();
}

uint64_t sub_23F1316FC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F131704()
{
  return swift_task_dealloc();
}

uint64_t sub_23F13170C()
{
  unint64_t v0;

  sub_23F12E3BC(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F131724()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_23F131744()
{
  return swift_task_dealloc();
}

uint64_t sub_23F13174C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F131754()
{
  return swift_task_dealloc();
}

uint64_t sub_23F13175C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F131764(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t sub_23F131780()
{
  return swift_task_dealloc();
}

uint64_t sub_23F131788()
{
  return swift_task_dealloc();
}

uint64_t sub_23F131790()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F131798()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F1317A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F1317B0()
{
  return swift_task_dealloc();
}

uint64_t sub_23F1317B8()
{
  return sub_23F268834();
}

uint64_t sub_23F1317E0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1317EC()
{
  return sub_23F2686B4();
}

uint64_t sub_23F1317F8()
{
  return swift_bridgeObjectRelease();
}

void sub_23F131800(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F12E3EC(v2, a2);
}

uint64_t sub_23F131808@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return sub_23F26872C();
}

uint64_t sub_23F131820()
{
  return swift_task_switch();
}

uint64_t sub_23F13182C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F131838()
{
  return swift_task_switch();
}

uint64_t sub_23F13184C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F131854(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t sub_23F13186C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F13188C@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF)
    LODWORD(a1) = -1;
  return (a1 + 1);
}

uint64_t sub_23F1318A0()
{
  return sub_23F268864();
}

uint64_t sub_23F1318B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F1318DC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F13190C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F131914(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_23F131930()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F131938()
{
  return swift_task_dealloc();
}

uint64_t sub_23F13195C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + a1) = v1;
  *(_QWORD *)(v3 + *(int *)(v4 + 40)) = v1;
  return v2;
}

void sub_23F131978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 440);
  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 456);
  *(_QWORD *)(v1 - 88) = v2;
}

uint64_t sub_23F131994()
{
  return sub_23F2688A0();
}

void sub_23F1319A8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F125DB0(a1, a2, v2);
}

uint64_t sub_23F1319E0()
{
  return sub_23F268684();
}

void sub_23F1319F0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F12E3EC(a1, v1);
}

uint64_t sub_23F1319F8()
{
  return swift_retain();
}

uint64_t sub_23F131A00()
{
  return sub_23F2681A4();
}

uint64_t sub_23F131A08()
{
  return 0;
}

uint64_t sub_23F131A18()
{
  return swift_task_dealloc();
}

uint64_t sub_23F131A28()
{
  return swift_task_dealloc();
}

uint64_t sub_23F131A30()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F131A54()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F131A6C()
{
  return sub_23F2681A4();
}

void sub_23F131A7C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F12E3EC(a1, v1);
}

uint64_t sub_23F131A84()
{
  return swift_bridgeObjectRelease();
}

void sub_23F131A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  *v13 = v12;
  v13[1] = v11;
  v13[2] = v10;
  v13[3] = v9;
  v13[4] = a9;
}

uint64_t sub_23F131AA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

void sub_23F131AB4(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F12E3EC(a1, v1);
}

uint64_t sub_23F131ACC()
{
  return sub_23F268684();
}

uint64_t sub_23F131ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F131AE4()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F131170(v0, v1);
}

uint64_t sub_23F131AF0(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void sub_23F131AFC()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F128CF0(v0, v1);
}

uint64_t sub_23F131B08()
{
  return swift_release();
}

uint64_t sub_23F131B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, 0, 1, a4);
}

uint64_t sub_23F131B1C()
{
  return sub_23F2681A4();
}

uint64_t sub_23F131B28()
{
  uint64_t v0;

  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(*(_QWORD *)(v0 - 96));
}

uint64_t sub_23F131B30()
{
  return swift_allocError();
}

uint64_t sub_23F131B5C()
{
  return sub_23F26884C();
}

uint64_t sub_23F131B68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_23F1296B4(*(_QWORD *)(v2 + a1), *(_QWORD *)(v1 + a1));
}

uint64_t sub_23F131B74()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23F131B80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_23F1296B4(*(_QWORD *)(v2 + a1), *(_QWORD *)(v1 + a1));
}

uint64_t sub_23F131B8C()
{
  return sub_23F267D84();
}

uint64_t sub_23F131B94()
{
  return swift_task_dealloc();
}

uint64_t sub_23F131B9C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F131BCC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F131BD4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F131BE8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F131BF4()
{
  uint64_t v0;

  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
}

uint64_t sub_23F131BFC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F12E870(v0, v1);
}

id sub_23F131C08()
{
  void *v0;

  return sub_23F131158(v0);
}

uint64_t sub_23F131C14()
{
  return swift_retain();
}

uint64_t sub_23F131C1C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F131C24()
{
  return sub_23F268690();
}

uint64_t sub_23F131C30()
{
  return swift_task_dealloc();
}

uint64_t SessionDebuggerSubscriptionEvent.DebuggerEvent.sessionId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F131B8C();
  v0 = sub_23F1317E0();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t SessionDebuggerSubscriptionEvent.DebuggerEvent.eventId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F143978();
  sub_23F131B8C();
  v0 = sub_23F1317E0();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256DFECA8);
}

void SessionDebuggerSubscriptionEvent.DebuggerEvent.payload.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23F143978();
  sub_23F1325F8(v1 + *(int *)(v3 + 24), a1, type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload);
}

uint64_t type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256DFED58);
}

uint64_t SessionDebuggerSubscriptionEvent.DebuggerEvent.DebuggerPaused.pendingTransactions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionDebuggerSubscriptionEvent.DebuggerEvent.DebuggerPaused.pendingTransactions.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SessionDebuggerSubscriptionEvent.DebuggerEvent.DebuggerPaused.pendingTransactions.modify())()
{
  return nullsub_1;
}

void SessionDebuggerSubscriptionEvent.DebuggerEvent.DebuggerPaused.debugCommandHandler.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F1328E8(v1 + 8, a1);
}

uint64_t SessionDebuggerSubscriptionEvent.DebuggerEvent.DebuggerPaused.debugCommandHandler.setter()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;

  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0 + 8);
  v1 = (__int128 *)sub_23F1317E0();
  return sub_23F14387C(v1, v2);
}

uint64_t (*SessionDebuggerSubscriptionEvent.DebuggerEvent.DebuggerPaused.debugCommandHandler.modify())()
{
  return nullsub_1;
}

uint64_t SessionDebuggerEventsSubscription.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  sub_23F1217E8(&qword_256DFEB58);
  *(_QWORD *)(v2 + 80) = sub_23F1314BC();
  *(_QWORD *)(v2 + 88) = sub_23F143978();
  *(_QWORD *)(v2 + 96) = sub_23F1314BC();
  v3 = sub_23F131B8C();
  *(_QWORD *)(v2 + 104) = v3;
  *(_QWORD *)(v2 + 112) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 120) = sub_23F1314B4();
  *(_QWORD *)(v2 + 128) = sub_23F1314B4();
  *(_QWORD *)(v2 + 136) = sub_23F1314B4();
  type metadata accessor for SessionServerDebuggerEvent(0);
  *(_QWORD *)(v2 + 144) = sub_23F1314BC();
  *(_QWORD *)(v2 + 152) = type metadata accessor for MessagePayload(0);
  *(_QWORD *)(v2 + 160) = sub_23F1314BC();
  sub_23F1217E8(&qword_256DFEB60);
  *(_QWORD *)(v2 + 168) = sub_23F1314BC();
  *(_QWORD *)(v2 + 176) = type metadata accessor for SessionServerMessage(0);
  *(_QWORD *)(v2 + 184) = sub_23F1314BC();
  v4 = type metadata accessor for SessionDebuggerEventsSubscription.Iterator(0);
  *(_QWORD *)(v2 + 192) = v4;
  *(_DWORD *)(v2 + 248) = *(_DWORD *)(v4 + 24);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 200) = v5;
  sub_23F1217E8(&qword_256DFEB68);
  *v5 = v2;
  v5[1] = sub_23F131EC0;
  return sub_23F268318();
}

uint64_t sub_23F131EC0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F143954();
  sub_23F143930(v2);
  if (v1)
    *(_QWORD *)(v0 + 208) = v1;
  return sub_23F131838();
}

unint64_t sub_23F131F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void (*v45)(uint64_t, uint64_t);

  sub_23F143938();
  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 64);
    sub_23F125E40(v1, &qword_256DFEB60);
    v4 = sub_23F143980();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v3, 1, 1, v4);
LABEL_8:
    sub_23F1438F0();
    swift_task_dealloc();
    sub_23F131754();
    sub_23F131A28();
    sub_23F1316FC();
    sub_23F131704();
    sub_23F131744();
    sub_23F131788();
    sub_23F1317B0();
    return sub_23F143898(*(uint64_t (**)(void))(v0 + 8));
  }
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 160);
  sub_23F132624(v1, v5, type metadata accessor for SessionServerMessage);
  sub_23F1325F8(v5 + *(int *)(v2 + 32), v6, type metadata accessor for MessagePayload);
  if (swift_getEnumCaseMultiPayload() != 37)
  {
    v17 = *(_QWORD *)(v0 + 64);
    sub_23F132624(*(_QWORD *)(v0 + 184), v17, type metadata accessor for SessionServerMessage);
    v18 = sub_23F143980();
    swift_storeEnumTagMultiPayload();
    v19 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v17, 0, 1, v18);
    sub_23F143970(v19, type metadata accessor for MessagePayload);
    goto LABEL_8;
  }
  v7 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 72);
  sub_23F132624(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144), type metadata accessor for SessionServerDebuggerEvent);
  v10 = *(void (**)(uint64_t))(v8 + 16);
  v11 = sub_23F1317E0();
  v10(v11);
  v12 = *(int *)(v7 + 28);
  v13 = *(_QWORD *)(v9 + v12);
  if (*(_QWORD *)(v13 + 16) && (v14 = sub_23F12CAF0(*(_QWORD *)(v0 + 136)), (v15 & 1) != 0))
  {
    v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
    swift_retain();
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 128);
    v22 = *(_QWORD *)(v0 + 72);
    ((void (*)(uint64_t, _QWORD, _QWORD))v10)(v21, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 104));
    sub_23F1328E8(v22 + 8, v0 + 16);
    type metadata accessor for SessionDebugger();
    swift_allocObject();
    v23 = swift_retain();
    v16 = sub_23F18ADBC(v23, v21, (__int128 *)(v0 + 16));
  }
  *(_QWORD *)(v0 + 216) = v16;
  v24 = *(_QWORD *)(v0 + 184);
  v25 = *(_QWORD *)(v0 + 120);
  v26 = *(_QWORD *)(v0 + 104);
  v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 112) + 8);
  v27(*(_QWORD *)(v0 + 136), v26);
  ((void (*)(uint64_t, uint64_t, uint64_t))v10)(v25, v24, v26);
  swift_retain();
  swift_isUniquelyReferenced_nonNull_native();
  v28 = *(_QWORD *)(v9 + v12);
  *(_QWORD *)(v0 + 56) = v28;
  *(_QWORD *)(v9 + v12) = 0x8000000000000000;
  result = sub_23F12CAF0(v25);
  if (__OFADD__(*(_QWORD *)(v28 + 16), (v29 & 1) == 0))
  {
    __break(1u);
  }
  else
  {
    v30 = result;
    v31 = v29;
    v45 = v27;
    sub_23F1217E8(&qword_256DFEB70);
    if ((sub_23F2685B8() & 1) != 0)
    {
      v32 = sub_23F12CAF0(*(_QWORD *)(v0 + 120));
      if ((v31 & 1) != (v33 & 1))
        return sub_23F2687D4();
      v30 = v32;
    }
    v34 = *(_QWORD **)(v0 + 56);
    if ((v31 & 1) != 0)
    {
      v35 = v34[7];
      swift_release();
      *(_QWORD *)(v35 + 8 * v30) = v16;
LABEL_19:
      v42 = *(_QWORD *)(v0 + 120);
      v43 = *(_QWORD *)(v0 + 104);
      *(_QWORD *)(v9 + v12) = v34;
      swift_bridgeObjectRelease();
      v45(v42, v43);
      v44 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 224) = v44;
      *v44 = v0;
      v44[1] = sub_23F132324;
      return sub_23F18AE68(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 144));
    }
    v37 = *(_QWORD *)(v0 + 112);
    v36 = *(_QWORD *)(v0 + 120);
    v38 = *(_QWORD *)(v0 + 104);
    v34[(v30 >> 6) + 8] |= 1 << v30;
    result = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v10)(v34[6] + *(_QWORD *)(v37 + 72) * v30, v36, v38);
    *(_QWORD *)(v34[7] + 8 * v30) = v16;
    v39 = v34[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (!v40)
    {
      v34[2] = v41;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23F1322D4()
{
  uint64_t v0;

  sub_23F143938();
  sub_23F14390C();
  sub_23F131754();
  sub_23F131A28();
  sub_23F1316FC();
  sub_23F131704();
  sub_23F131744();
  sub_23F131788();
  sub_23F1317B0();
  swift_task_dealloc();
  return sub_23F143898(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F132324()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23F132388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  swift_release();
  sub_23F125D68(v1, type metadata accessor for SessionServerDebuggerEvent);
  sub_23F143970(v4, type metadata accessor for SessionServerMessage);
  v5 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v3, 1, v2);
  v6 = *(_QWORD *)(v0 + 80);
  if (v5 == 1)
  {
    sub_23F125E40(v6, &qword_256DFEB58);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v7;
    sub_23F1217E8(&qword_256DFEB68);
    *v7 = v0;
    v7[1] = sub_23F132504;
    return sub_23F268318();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 64);
    sub_23F132624(v6, v9, type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent);
    sub_23F132624(v9, v10, type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent);
    v11 = sub_23F143980();
    sub_23F1317E0();
    swift_storeEnumTagMultiPayload();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v10, 0, 1, v11);
    sub_23F1438F0();
    swift_task_dealloc();
    sub_23F131754();
    sub_23F131A28();
    sub_23F1316FC();
    sub_23F131704();
    sub_23F131744();
    sub_23F131788();
    sub_23F1317B0();
    return sub_23F143928(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_23F132504()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F143954();
  sub_23F143930(v2);
  if (v1)
    *(_QWORD *)(v0 + 208) = v1;
  return sub_23F131838();
}

uint64_t sub_23F132554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F143938();
  v1 = *(_QWORD *)(v0 + 144);
  swift_release();
  sub_23F125D68(v1, type metadata accessor for SessionServerDebuggerEvent);
  sub_23F143970(v2, type metadata accessor for SessionServerMessage);
  sub_23F14390C();
  sub_23F131754();
  sub_23F131A28();
  sub_23F1316FC();
  sub_23F131704();
  sub_23F131744();
  sub_23F131788();
  sub_23F1317B0();
  swift_task_dealloc();
  return sub_23F143898(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t type metadata accessor for SessionDebuggerEventsSubscription.Iterator(uint64_t a1)
{
  return sub_23F12EDBC(a1, (uint64_t *)&unk_256DFEEB8);
}

uint64_t type metadata accessor for SessionDebuggerSubscriptionEvent(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256DFEC18);
}

void sub_23F1325F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F1261F8(a1, a2, a3);
  sub_23F143964(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23F126078();
}

void sub_23F132624(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F1261F8(a1, a2, a3);
  sub_23F143964(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23F126078();
}

uint64_t sub_23F132650(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F12EE90;
  return SessionDebuggerEventsSubscription.Iterator.next()(a1);
}

uint64_t sub_23F1326A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256E09110 + dword_256E09110);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_23F132724;
  return v10(a1, a2, a3);
}

uint64_t sub_23F132724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23F143954();
  v3 = *v2;
  sub_23F143930(v4);
  if (v1)
    **(_QWORD **)(v0 + 16) = v1;
  return sub_23F143928(*(uint64_t (**)(void))(v3 + 8));
}

void sub_23F132770(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  sub_23F14387C(a2, v3 + 24);
  *(_QWORD *)(v3 + 64) = a3;
  sub_23F126078();
}

uint64_t sub_23F1327A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  sub_23F1328E8(v1 + 24, (uint64_t)(a1 + 1));
  v4 = type metadata accessor for SessionDebuggerEventsSubscription.Iterator(0);
  swift_retain();
  sub_23F1217E8(qword_256DFEB78);
  sub_23F26830C();
  v5 = *(int *)(v4 + 28);
  sub_23F131B8C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  type metadata accessor for SessionDebugger();
  sub_23F125DE4(&qword_256DFEAF0, v6, MEMORY[0x24BDCEA88]);
  result = sub_23F268108();
  *(_QWORD *)((char *)a1 + v5) = result;
  *a1 = v3;
  return result;
}

uint64_t SessionDebuggerEventsSubscription.deinit()
{
  uint64_t v0;

  swift_release();
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0 + 24);
  swift_release();
  return v0;
}

uint64_t SessionDebuggerEventsSubscription.__deallocating_deinit()
{
  SessionDebuggerEventsSubscription.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23F1328C4@<X0>(_QWORD *a1@<X8>)
{
  sub_23F1327A4(a1);
  return swift_release();
}

void sub_23F1328E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  sub_23F126078();
}

uint64_t sub_23F132928()
{
  return MEMORY[0x24BEE3F20];
}

void sub_23F132934()
{
  sub_23F125DE4(&qword_256DFEB90, type metadata accessor for SessionDebuggerEventsSubscription.Iterator, (uint64_t)&protocol conformance descriptor for SessionDebuggerEventsSubscription.Iterator);
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionDebuggerSubscriptionEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t *v41;
  char v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  id v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t *v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  unsigned __int8 v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  _QWORD *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  int *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  char *v194;
  char *v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  unsigned __int8 v211;
  int *v212;
  uint64_t v213;
  _QWORD *v214;
  char *v215;
  char *v216;
  unsigned int v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  _QWORD *v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  unsigned __int8 v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _QWORD *v249;
  _QWORD *v250;
  uint64_t v251;
  uint64_t v252;
  _QWORD *v253;
  _QWORD *v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  void (*v260)(char *, char *, uint64_t);
  uint64_t *result;
  char *__src;
  char *__srca;
  uint64_t v264;
  uint64_t v265;
  char *__dsta;
  void *__dstb;
  int *__dst;
  uint64_t *v269;
  uint64_t *v270;
  _QWORD *v271;
  _QWORD *v272;
  uint64_t v273;
  int *v274;
  int *v275;
  int *v276;
  int *v277;
  int *v278;
  int *v279;
  int *v280;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_23F267D84();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent(0);
      v8((uint64_t *)((char *)a1 + *(int *)(v9 + 20)), (uint64_t *)((char *)a2 + *(int *)(v9 + 20)), v7);
      v10 = *(int *)(v9 + 24);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v8((uint64_t *)v11, (uint64_t *)v12, v7);
        v13 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
        *(_QWORD *)&v11[*(int *)(v13 + 20)] = *(_QWORD *)&v12[*(int *)(v13 + 20)];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_QWORD *)v11 = *(_QWORD *)v12;
        v20 = v12 + 8;
        v21 = *((_OWORD *)v12 + 2);
        *((_OWORD *)v11 + 2) = v21;
        v22 = v21;
        v23 = **(void (***)(char *, char *, uint64_t))(v21 - 8);
        swift_bridgeObjectRetain();
        v23(v11 + 8, v20, v22);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v15 = (int *)type metadata accessor for SessionServerMessage(0);
      v8((uint64_t *)((char *)a1 + v15[5]), (uint64_t *)((char *)a2 + v15[5]), v7);
      v16 = v15[6];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2 + v16, 1, v7))
      {
        v19 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)v17, (uint64_t *)v18, v7);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v17, 0, 1, v7);
      }
      v24 = v15[7];
      v25 = (uint64_t *)((char *)a1 + v24);
      v26 = (uint64_t *)((char *)a2 + v24);
      v27 = v26[1];
      *v25 = *v26;
      v25[1] = v27;
      v28 = v15[8];
      v29 = (uint64_t *)((char *)a1 + v28);
      v30 = (uint64_t *)((char *)a2 + v28);
      v31 = type metadata accessor for MessagePayload(0);
      swift_bridgeObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v32 = type metadata accessor for MessagePayload.RequestContent(0);
          v33 = swift_getEnumCaseMultiPayload();
          v274 = v15;
          v269 = v29;
          v271 = v30;
          switch(v33)
          {
            case 3:
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v30, 1, v7))
              {
                v182 = sub_23F1217E8(&qword_256DFEB98);
                v183 = v29;
                memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
              }
              else
              {
                v183 = v29;
                v8(v29, v30, v7);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v29, 0, 1, v7);
              }
              v197 = type metadata accessor for SystemPromptResolution(0);
              v8((uint64_t *)((char *)v183 + *(int *)(v197 + 20)), (_QWORD *)((char *)v30 + *(int *)(v197 + 20)), v7);
              v198 = *(int *)(v197 + 24);
              __src = (char *)v183 + v198;
              v264 = v197;
              v199 = (char *)v30 + v198;
              v200 = type metadata accessor for SystemPromptResolution.UserAction(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                v201 = sub_23F268078();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 16))(__src, v199, v201);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(__src, v199, *(_QWORD *)(*(_QWORD *)(v200 - 8) + 64));
              }
              v202 = *(int *)(v264 + 28);
              v29 = v269;
              v203 = (char *)v269 + v202;
              v204 = (char *)v30 + v202;
              *(_DWORD *)v203 = *(_DWORD *)v204;
              v205 = *((_QWORD *)v204 + 2);
              *((_QWORD *)v203 + 1) = *((_QWORD *)v204 + 1);
              *((_QWORD *)v203 + 2) = v205;
              v206 = *(int *)(v264 + 32);
              v207 = (char *)v269 + v206;
              v208 = (char *)v271 + v206;
              v209 = *(_QWORD *)v208;
              v210 = *((_QWORD *)v208 + 1);
              v211 = v208[16];
              swift_bridgeObjectRetain();
              sub_23F135C7C(v209, v210, v211);
              *(_QWORD *)v207 = v209;
              *((_QWORD *)v207 + 1) = v210;
              v207[16] = v211;
              v30 = v271;
              break;
            case 2:
              *v29 = *v30;
              swift_bridgeObjectRetain();
              break;
            case 1:
              v34 = v30[1];
              *v29 = *v30;
              v29[1] = v34;
              swift_bridgeObjectRetain();
              break;
            default:
              memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
              goto LABEL_96;
          }
          swift_storeEnumTagMultiPayload();
LABEL_96:
          v212 = (int *)type metadata accessor for MessagePayload.Request(0);
          *(uint64_t *)((char *)v29 + v212[5]) = *(_QWORD *)((char *)v30 + v212[5]);
          *((_BYTE *)v29 + v212[6]) = *((_BYTE *)v30 + v212[6]);
          v213 = v212[7];
          v214 = v30;
          v215 = (char *)v29 + v213;
          v216 = (char *)v214 + v213;
          v217 = *((unsigned __int8 *)v214 + v213 + 16);
          swift_bridgeObjectRetain();
          if (v217 <= 0xFD)
          {
            v219 = *(_QWORD *)v216;
            v218 = *((_QWORD *)v216 + 1);
            sub_23F135C9C(v219, v218, v217);
            *(_QWORD *)v215 = v219;
            *((_QWORD *)v215 + 1) = v218;
            v215[16] = v217;
          }
          else
          {
            *(_OWORD *)v215 = *(_OWORD *)v216;
            v215[16] = v216[16];
          }
          v220 = v212[8];
          v221 = (char *)v269 + v220;
          v222 = (char *)v271 + v220;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v271 + v220, 1, v7))
          {
            v223 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
          }
          else
          {
            v8((uint64_t *)v221, (uint64_t *)v222, v7);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v221, 0, 1, v7);
          }
          v224 = v212[9];
          v159 = (char *)v269 + v224;
          v15 = v274;
          v160 = (char *)v271 + v224;
          v161 = *((_QWORD *)v160 + 1);
          if (v161)
            goto LABEL_115;
          *(_OWORD *)v159 = *(_OWORD *)v160;
          *((_QWORD *)v159 + 2) = *((_QWORD *)v160 + 2);
          goto LABEL_120;
        case 4u:
          v35 = v30[1];
          *v29 = *v30;
          v29[1] = v35;
          v36 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
          __dsta = (char *)v29 + v36;
          v37 = (char *)v30 + v36;
          v38 = sub_23F268078();
          v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
          swift_bridgeObjectRetain();
          v39(__dsta, v37, v38);
          goto LABEL_120;
        case 5u:
          v40 = *v30;
          v41 = v29;
          v42 = *((_BYTE *)v30 + 8);
          sub_23F131158((id)*v30);
          *v41 = v40;
          *((_BYTE *)v41 + 8) = v42;
          v41[2] = v30[2];
          swift_bridgeObjectRetain();
          goto LABEL_120;
        case 6u:
        case 9u:
        case 0x20u:
        case 0x21u:
        case 0x28u:
          v118 = v30[1];
          *v29 = *v30;
          v29[1] = v118;
          v29[2] = v30[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_120;
        case 7u:
          v43 = v30[1];
          *v29 = *v30;
          v29[1] = v43;
          v29[2] = v30[2];
          *((_BYTE *)v29 + 24) = *((_BYTE *)v30 + 24);
          v44 = v29;
          v45 = v30[5];
          v44[4] = v30[4];
          v44[5] = v45;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_120;
        case 8u:
          *v29 = *v30;
          *((_BYTE *)v29 + 8) = *((_BYTE *)v30 + 8);
          v46 = v30[3];
          v29[2] = v30[2];
          v29[3] = v46;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_120;
        case 0xAu:
        case 0xBu:
        case 0x13u:
        case 0x18u:
        case 0x19u:
        case 0x1Bu:
          v99 = v30[1];
          *v29 = *v30;
          v29[1] = v99;
          swift_bridgeObjectRetain();
          goto LABEL_120;
        case 0xCu:
          *v29 = *v30;
          swift_bridgeObjectRetain();
          goto LABEL_120;
        case 0xDu:
          v8(v29, v30, v7);
          v47 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
          v8((uint64_t *)((char *)v29 + v47[5]), (_QWORD *)((char *)v30 + v47[5]), v7);
          v48 = v47[6];
          v49 = (uint64_t *)((char *)v29 + v48);
          v50 = (_QWORD *)((char *)v30 + v48);
          v51 = v50[1];
          *v49 = *v50;
          v49[1] = v51;
          v52 = v47[7];
          v53 = (uint64_t *)((char *)v29 + v52);
          v54 = (_QWORD *)((char *)v30 + v52);
          v55 = v29;
          v56 = v54[1];
          *v53 = *v54;
          v53[1] = v56;
          v57 = v47[8];
          v58 = (uint64_t *)((char *)v55 + v57);
          v59 = (_QWORD *)((char *)v30 + v57);
          v60 = v59[1];
          *v58 = *v59;
          v58[1] = v60;
          *(uint64_t *)((char *)v55 + v47[9]) = *(_QWORD *)((char *)v30 + v47[9]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_120;
        case 0xEu:
          v8(v29, v30, v7);
          v61 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
          v62 = (char *)v29 + v61;
          v63 = (char *)v30 + v61;
          type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v64 = *(id *)v63;
            v65 = v63[8];
            sub_23F131158(*(id *)v63);
            *(_QWORD *)v62 = v64;
            v62[8] = v65;
          }
          else
          {
            v140 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v62, v63, v140);
          }
LABEL_54:
          swift_storeEnumTagMultiPayload();
          goto LABEL_120;
        case 0xFu:
          *(_DWORD *)v29 = *(_DWORD *)v30;
          v66 = v30[2];
          v29[1] = v30[1];
          v29[2] = v66;
          v67 = v30[4];
          v29[3] = v30[3];
          v29[4] = v67;
          v68 = v30;
          v69 = v30[5];
          v70 = v30[6];
          v29[5] = v69;
          v29[6] = v70;
          v71 = v68[8];
          v29[7] = v68[7];
          v29[8] = v71;
          *((_BYTE *)v29 + 72) = *((_BYTE *)v68 + 72);
          v72 = v68[11];
          v29[10] = v68[10];
          v29[11] = v72;
          v29[12] = v68[12];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_120;
        case 0x10u:
          v8(v29, v30, v7);
          v73 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
          v74 = v73[5];
          v75 = (uint64_t *)((char *)v29 + v74);
          v76 = (_QWORD *)((char *)v30 + v74);
          v78 = *v76;
          v77 = v76[1];
          *v75 = v78;
          v75[1] = v77;
          *(uint64_t *)((char *)v29 + v73[6]) = *(_QWORD *)((char *)v30 + v73[6]);
          *(uint64_t *)((char *)v29 + v73[7]) = *(_QWORD *)((char *)v30 + v73[7]);
          v79 = v73[8];
          v80 = (uint64_t *)((char *)v29 + v79);
          v81 = (_QWORD *)((char *)v30 + v79);
          v82 = v81[1];
          *v80 = *v81;
          v80[1] = v82;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_120;
        case 0x11u:
          v8(v29, v30, v7);
          type metadata accessor for MessagePayload.ClientActionResult(0);
          type metadata accessor for StatementOutcome(0);
          v83 = (char *)&loc_23F133080 + 4 * word_23F269C1C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x12u:
          v84 = *v30;
          v85 = v30;
          v86 = v29;
          v87 = v85[1];
          sub_23F131170(v84, v87);
          *v86 = v84;
          v86[1] = v87;
          v88 = v85[2];
          v89 = v85[3];
          sub_23F131170(v88, v89);
          v86[2] = v88;
          v86[3] = v89;
          v90 = v85[5];
          v86[4] = v85[4];
          v86[5] = v90;
          swift_bridgeObjectRetain();
          goto LABEL_120;
        case 0x14u:
          v8(v29, v30, v7);
          v91 = *(int *)(type metadata accessor for SystemPrompt(0) + 20);
          v92 = (uint64_t *)((char *)v29 + v91);
          v93 = (_QWORD *)((char *)v30 + v91);
          v94 = v93[1];
          *v92 = *v93;
          v92[1] = v94;
          type metadata accessor for SystemPrompt.Prompt(0);
          swift_bridgeObjectRetain();
          v95 = (char *)&loc_23F1331E8 + 4 * word_23F269C14[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x15u:
          v275 = v15;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v30, 1, v7))
          {
            v96 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
          }
          else
          {
            v8(v29, v30, v7);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v29, 0, 1, v7);
          }
          v141 = (int *)type metadata accessor for SystemPromptResolution(0);
          v8((uint64_t *)((char *)v29 + v141[5]), (_QWORD *)((char *)v30 + v141[5]), v7);
          v142 = v141[6];
          v143 = (char *)v29 + v142;
          v144 = (char *)v30 + v142;
          v145 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v146 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v143, v144, v146);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
          }
          v147 = v141[7];
          v148 = (char *)v29 + v147;
          v149 = (char *)v30 + v147;
          *(_DWORD *)v148 = *(_DWORD *)v149;
          v150 = *((_QWORD *)v149 + 2);
          *((_QWORD *)v148 + 1) = *((_QWORD *)v149 + 1);
          *((_QWORD *)v148 + 2) = v150;
          v151 = v141[8];
          v152 = v30;
          v153 = (char *)v29 + v151;
          v154 = (char *)v152 + v151;
          v155 = *(_QWORD *)v154;
          v156 = *((_QWORD *)v154 + 1);
          v157 = v154[16];
          swift_bridgeObjectRetain();
          sub_23F135C7C(v155, v156, v157);
          *(_QWORD *)v153 = v155;
          *((_QWORD *)v153 + 1) = v156;
          v153[16] = v157;
          swift_storeEnumTagMultiPayload();
          v15 = v275;
          goto LABEL_121;
        case 0x16u:
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v30, 1, v7))
          {
            v97 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          }
          else
          {
            v8(v29, v30, v7);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v29, 0, 1, v7);
          }
          v162 = type metadata accessor for ActionResponse(0);
          v163 = *(int *)(v162 + 20);
          v164 = (uint64_t *)((char *)v29 + v163);
          v165 = (_QWORD *)((char *)v30 + v163);
          v166 = v165[1];
          *v164 = *v165;
          v164[1] = v166;
          v167 = *(int *)(v162 + 24);
          v168 = (uint64_t *)((char *)v29 + v167);
          v169 = (_QWORD *)((char *)v30 + v167);
          v170 = v169[1];
          *v168 = *v169;
          v168[1] = v170;
          type metadata accessor for ActionOutcome(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v171 = (char *)&loc_23F1339F8 + 4 * word_23F269BFE[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x17u:
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v30, 1, v7))
          {
            v98 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
          }
          else
          {
            v8(v29, v30, v7);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v29, 0, 1, v7);
          }
          __dst = (int *)type metadata accessor for SystemResponse(0);
          v172 = __dst[5];
          v173 = (char *)v29 + v172;
          v174 = (char *)v30 + v172;
          v175 = *((_QWORD *)v174 + 2);
          if (v175 == 1)
          {
            *(_OWORD *)v173 = *(_OWORD *)v174;
            *((_QWORD *)v173 + 2) = *((_QWORD *)v174 + 2);
          }
          else
          {
            *(_DWORD *)v173 = *(_DWORD *)v174;
            *((_QWORD *)v173 + 1) = *((_QWORD *)v174 + 1);
            *((_QWORD *)v173 + 2) = v175;
            swift_bridgeObjectRetain();
          }
          v176 = __dst[6];
          v177 = (uint64_t *)((char *)v29 + v176);
          v178 = (_QWORD *)((char *)v30 + v176);
          v179 = v178[1];
          *v177 = *v178;
          v177[1] = v179;
          type metadata accessor for StatementOutcome(0);
          swift_bridgeObjectRetain();
          v180 = (char *)&loc_23F133B60 + 4 * word_23F269BE8[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x1Cu:
          v276 = v15;
          v100 = v29;
          v101 = v30[1];
          *v100 = *v30;
          v100[1] = v101;
          v102 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
          v103 = *(int *)(v102 + 20);
          v104 = v30;
          v105 = v100;
          v106 = (char *)v100 + v103;
          v272 = v104;
          v107 = (char *)v104 + v103;
          swift_bridgeObjectRetain();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v107, 1, v7))
          {
            v108 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
          }
          else
          {
            v8((uint64_t *)v106, (uint64_t *)v107, v7);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v106, 0, 1, v7);
          }
          v181 = *(int *)(v102 + 24);
          v159 = (char *)v105 + v181;
          v15 = v276;
          v160 = (char *)v272 + v181;
          v161 = *((_QWORD *)v160 + 1);
          if (v161)
            goto LABEL_115;
          *(_OWORD *)v159 = *(_OWORD *)v160;
          *((_QWORD *)v159 + 2) = *((_QWORD *)v160 + 2);
          goto LABEL_120;
        case 0x1Du:
          v277 = v15;
          *v29 = *v30;
          v109 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
          v110 = *(int *)(v109 + 20);
          v111 = (char *)v29 + v110;
          v112 = (char *)v30 + v110;
          swift_bridgeObjectRetain();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v112, 1, v7))
          {
            v113 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
          }
          else
          {
            v8((uint64_t *)v111, (uint64_t *)v112, v7);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v111, 0, 1, v7);
          }
          v158 = *(int *)(v109 + 24);
          v159 = (char *)v29 + v158;
          v15 = v277;
          v160 = (char *)v30 + v158;
          v161 = *((_QWORD *)v160 + 1);
          if (v161)
            goto LABEL_115;
          *(_OWORD *)v159 = *(_OWORD *)v160;
          *((_QWORD *)v159 + 2) = *((_QWORD *)v160 + 2);
          goto LABEL_120;
        case 0x1Eu:
          v114 = type metadata accessor for MessagePayload.RequestContent(0);
          v115 = swift_getEnumCaseMultiPayload();
          v278 = v15;
          switch(v115)
          {
            case 3:
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v30, 1, v7))
              {
                v184 = sub_23F1217E8(&qword_256DFEB98);
                memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
              }
              else
              {
                v8(v29, v30, v7);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v29, 0, 1, v7);
              }
              v225 = type metadata accessor for SystemPromptResolution(0);
              v8((uint64_t *)((char *)v29 + *(int *)(v225 + 20)), (_QWORD *)((char *)v30 + *(int *)(v225 + 20)), v7);
              v226 = *(int *)(v225 + 24);
              __srca = (char *)v29 + v226;
              v265 = v225;
              v227 = (char *)v30 + v226;
              v228 = type metadata accessor for SystemPromptResolution.UserAction(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                v229 = sub_23F268078();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v229 - 8) + 16))(__srca, v227, v229);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(__srca, v227, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
              }
              v230 = *(int *)(v265 + 28);
              v231 = (char *)v29 + v230;
              v232 = (char *)v30 + v230;
              *(_DWORD *)v231 = *(_DWORD *)v232;
              v233 = *((_QWORD *)v232 + 2);
              *((_QWORD *)v231 + 1) = *((_QWORD *)v232 + 1);
              *((_QWORD *)v231 + 2) = v233;
              v234 = *(int *)(v265 + 32);
              v235 = v30;
              v236 = (char *)v29 + v234;
              v237 = (char *)v235 + v234;
              v270 = v29;
              v238 = *(_QWORD *)v237;
              v239 = *((_QWORD *)v237 + 1);
              v240 = v237[16];
              swift_bridgeObjectRetain();
              sub_23F135C7C(v238, v239, v240);
              *(_QWORD *)v236 = v238;
              *((_QWORD *)v236 + 1) = v239;
              v29 = v270;
              v236[16] = v240;
              v30 = v235;
              break;
            case 2:
              *v29 = *v30;
              swift_bridgeObjectRetain();
              break;
            case 1:
              v116 = v30[1];
              *v29 = *v30;
              v29[1] = v116;
              swift_bridgeObjectRetain();
              break;
            default:
              memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
              goto LABEL_111;
          }
          swift_storeEnumTagMultiPayload();
LABEL_111:
          v241 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
          v242 = *(int *)(v241 + 20);
          v243 = (char *)v29 + v242;
          v244 = (char *)v30 + v242;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v30 + v242, 1, v7))
          {
            v245 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v243, v244, *(_QWORD *)(*(_QWORD *)(v245 - 8) + 64));
          }
          else
          {
            v8((uint64_t *)v243, (uint64_t *)v244, v7);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v243, 0, 1, v7);
          }
          v246 = *(int *)(v241 + 24);
          v159 = (char *)v29 + v246;
          v160 = (char *)v30 + v246;
          v161 = *((_QWORD *)v160 + 1);
          v15 = v278;
          if (v161)
          {
LABEL_115:
            *(_QWORD *)v159 = *(_QWORD *)v160;
            *((_QWORD *)v159 + 1) = v161;
            *((_QWORD *)v159 + 2) = *((_QWORD *)v160 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v159 = *(_OWORD *)v160;
            *((_QWORD *)v159 + 2) = *((_QWORD *)v160 + 2);
          }
LABEL_120:
          swift_storeEnumTagMultiPayload();
LABEL_121:
          v252 = v15[9];
          v253 = (uint64_t *)((char *)a1 + v252);
          v254 = (uint64_t *)((char *)a2 + v252);
          v255 = v254[1];
          *v253 = *v254;
          v253[1] = v255;
          v256 = v15[10];
          v257 = (char *)a1 + v256;
          v258 = (char *)a2 + v256;
          v259 = sub_23F267D24();
          v260 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v259 - 8) + 16);
          swift_bridgeObjectRetain();
          v260(v257, v258, v259);
          break;
        case 0x1Fu:
          type metadata accessor for StatementOutcome(0);
          v117 = (char *)&loc_23F13348C + 4 * word_23F269BD2[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x22u:
          v8(v29, v30, v7);
          v119 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
          *((_BYTE *)v29 + *(int *)(v119 + 20)) = *((_BYTE *)v30 + *(int *)(v119 + 20));
          v120 = *(int *)(v119 + 24);
          v121 = (char *)v29 + v120;
          v122 = (char *)v30 + v120;
          *(_DWORD *)v121 = *(_DWORD *)v122;
          v123 = *((_QWORD *)v122 + 2);
          *((_QWORD *)v121 + 1) = *((_QWORD *)v122 + 1);
          *((_QWORD *)v121 + 2) = v123;
          swift_bridgeObjectRetain();
          goto LABEL_120;
        case 0x23u:
          v8(v29, v30, v7);
          v124 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
          v125 = (uint64_t *)((char *)v29 + v124);
          v126 = (_QWORD *)((char *)v30 + v124);
          v127 = v126[1];
          *v125 = *v126;
          v125[1] = v127;
          v125[2] = v126[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_120;
        case 0x24u:
          v128 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 3u:
            case 5u:
            case 7u:
            case 8u:
              v8(v29, v30, v7);
              goto LABEL_86;
            case 2u:
              v280 = v15;
              v8(v29, v30, v7);
              v185 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
              *(uint64_t *)((char *)v29 + v185[5]) = *(_QWORD *)((char *)v30 + v185[5]);
              *(uint64_t *)((char *)v29 + v185[6]) = *(_QWORD *)((char *)v30 + v185[6]);
              v186 = v185[7];
              v187 = (char *)v29 + v186;
              v188 = (char *)v30 + v186;
              swift_bridgeObjectRetain();
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v188, 1, v7))
              {
                v189 = sub_23F1217E8(&qword_256DFEB98);
                memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
              }
              else
              {
                v8((uint64_t *)v187, (uint64_t *)v188, v7);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v187, 0, 1, v7);
              }
              v248 = v185[8];
              v249 = (uint64_t *)((char *)v29 + v248);
              v250 = (_QWORD *)((char *)v30 + v248);
              v251 = v250[1];
              *v249 = *v250;
              v249[1] = v251;
              *(uint64_t *)((char *)v29 + v185[9]) = *(_QWORD *)((char *)v30 + v185[9]);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              v15 = v280;
              goto LABEL_120;
            case 4u:
              v8(v29, v30, v7);
              v190 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
              *(uint64_t *)((char *)v29 + *(int *)(v190 + 20)) = *(_QWORD *)((char *)v30 + *(int *)(v190 + 20));
              swift_bridgeObjectRetain();
LABEL_86:
              swift_storeEnumTagMultiPayload();
              break;
            case 9u:
              v8(v29, v30, v7);
              v191 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
              v8((uint64_t *)((char *)v29 + *(int *)(v191 + 20)), (_QWORD *)((char *)v30 + *(int *)(v191 + 20)), v7);
              v192 = *(int *)(v191 + 24);
              v193 = v30;
              v194 = (char *)v29 + v192;
              v195 = (char *)v193 + v192;
              v196 = *((_QWORD *)v195 + 1);
              if (v196 >> 60 == 15)
              {
                *(_OWORD *)v194 = *(_OWORD *)v195;
              }
              else
              {
                v247 = *(_QWORD *)v195;
                sub_23F131170(*(_QWORD *)v195, *((_QWORD *)v195 + 1));
                *(_QWORD *)v194 = v247;
                *((_QWORD *)v194 + 1) = v196;
              }
              goto LABEL_54;
            default:
              memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
              break;
          }
          goto LABEL_120;
        case 0x25u:
          type metadata accessor for SessionServerDebuggerEvent.Payload(0);
          v129 = (char *)&loc_23F13369C + 4 * word_23F269BA2[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x26u:
          v131 = *v30;
          v130 = v30[1];
          __dstb = (void *)v130;
          v279 = v15;
          v132 = v30[2];
          v133 = v30[3];
          v134 = v30;
          v136 = v30[4];
          v135 = v30[5];
          v137 = v134[6];
          v273 = v134[7];
          sub_23F135CF4(v131, v130, v132, v133, v136, v135, v137);
          *v29 = v131;
          v29[1] = (uint64_t)__dstb;
          v29[2] = v132;
          v29[3] = v133;
          v29[4] = v136;
          v29[5] = v135;
          v15 = v279;
          v29[6] = v137;
          v29[7] = v273;
          goto LABEL_120;
        case 0x27u:
          v138 = *v30;
          v139 = v30[1];
          *v29 = v138;
          v29[1] = v139;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_120;
        default:
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
          goto LABEL_121;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F135C7C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23F135C9C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 0xBFu)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23F135CB4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0x3Fu)
    return sub_23F135CC8(a1, a2, a3);
  return a1;
}

uint64_t sub_23F135CC8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23F135CDC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23F135CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v11;
  uint64_t result;

  if (a7 < 0)
  {
    v11 = a7 & 1;
    swift_bridgeObjectRetain();
    sub_23F135D60(a3, a4, a5, a6, v11);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23F135D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for SessionDebuggerSubscriptionEvent(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = sub_23F267D84();
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(a1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    v5 = type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent(0);
    v4(a1 + *(int *)(v5 + 20), v3);
    v6 = a1 + *(int *)(v5 + 24);
    type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4(v6, v3);
      type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return _s16IntelligenceFlow17AnySessionMessageVwxx_0(v6 + 8);
    }
  }
  else
  {
    v8 = (int *)type metadata accessor for SessionServerMessage(0);
    v4(a1 + v8[5], v3);
    v9 = a1 + v8[6];
    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v9, 1, v3))
      v4(v9, v3);
    swift_bridgeObjectRelease();
    v10 = a1 + v8[8];
    type metadata accessor for MessagePayload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for MessagePayload.RequestContent(0);
        v11 = swift_getEnumCaseMultiPayload();
        if (v11 == 3)
        {
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v10, 1, v3))
            v4(v10, v3);
          v42 = (int *)type metadata accessor for SystemPromptResolution(0);
          v4(v10 + v42[5], v3);
          v43 = v10 + v42[6];
          type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v44 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
          }
          swift_bridgeObjectRelease();
          sub_23F137210(*(_QWORD *)(v10 + v42[8]), *(_QWORD *)(v10 + v42[8] + 8), *(_BYTE *)(v10 + v42[8] + 16));
        }
        else if (v11 == 2 || v11 == 1)
        {
          swift_bridgeObjectRelease();
        }
        v45 = (int *)type metadata accessor for MessagePayload.Request(0);
        swift_bridgeObjectRelease();
        v46 = v10 + v45[7];
        v47 = *(unsigned __int8 *)(v46 + 16);
        if (v47 <= 0xFD)
          sub_23F137230(*(_QWORD *)v46, *(_QWORD *)(v46 + 8), v47);
        v48 = v10 + v45[8];
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v48, 1, v3))
          v4(v48, v3);
        v49 = v45[9];
        goto LABEL_86;
      case 4u:
        swift_bridgeObjectRelease();
        v12 = type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0);
LABEL_13:
        v13 = (id *)(v10 + *(int *)(v12 + 20));
        goto LABEL_19;
      case 5u:
        sub_23F131164(*(id *)v10);
        goto LABEL_168;
      case 6u:
      case 9u:
      case 0x20u:
      case 0x21u:
      case 0x28u:
        goto LABEL_87;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_168;
      case 8u:
      case 0x27u:
        goto LABEL_167;
      case 0xAu:
      case 0xBu:
      case 0xCu:
      case 0x13u:
      case 0x18u:
      case 0x19u:
      case 0x1Bu:
        goto LABEL_168;
      case 0xDu:
        v4(v10, v3);
        v14 = type metadata accessor for MessagePayload.ClientEffectInvocation(0);
        v4(v10 + *(int *)(v14 + 20), v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_167;
      case 0xEu:
        v4(v10, v3);
        v13 = (id *)(v10 + *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20));
        type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_23F131164(*v13);
        }
        else
        {
LABEL_19:
          v15 = sub_23F268078();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
        }
        break;
      case 0xFu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_168;
      case 0x10u:
        v4(v10, v3);
        type metadata accessor for MessagePayload.ClientAction(0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_167;
      case 0x11u:
        v4(v10, v3);
        v31 = type metadata accessor for MessagePayload.ClientActionResult(0);
        v32 = v10 + *(int *)(v31 + 20);
        type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v33 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
            v34 = v32 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
            v35 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v34, 1, v35))
            {
              v4(v34, v3);
              swift_bridgeObjectRelease();
              goto LABEL_136;
            }
            goto LABEL_137;
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_136;
          case 2u:
            goto LABEL_135;
          case 3u:
            swift_bridgeObjectRelease();
            v74 = type metadata accessor for ParameterNeedsValue(0);
            goto LABEL_132;
          case 4u:
            swift_bridgeObjectRelease();
            v75 = v32 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
            v76 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 8))(v75, v76);
            swift_bridgeObjectRelease();
            goto LABEL_136;
          case 5u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_136;
          case 6u:
            swift_bridgeObjectRelease();
            v74 = type metadata accessor for ParameterNotAllowed(0);
            goto LABEL_132;
          case 7u:
            swift_bridgeObjectRelease();
            v74 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_132:
            v77 = v32 + *(int *)(v74 + 20);
            v78 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(v77, v78);
            goto LABEL_137;
          case 8u:
            sub_23F137248(*(_QWORD *)v32, *(_QWORD *)(v32 + 8), *(_BYTE *)(v32 + 16));
            goto LABEL_137;
          case 9u:
            goto LABEL_136;
          case 0xAu:
            if (*(_QWORD *)(v32 + 8) < 0x10uLL)
              goto LABEL_137;
LABEL_135:
            swift_bridgeObjectRelease();
LABEL_136:
            swift_bridgeObjectRelease();
LABEL_137:
            v79 = (_QWORD *)(v10 + *(int *)(v31 + 24));
            if (*v79 == 1)
              goto LABEL_169;
            swift_bridgeObjectRelease();
            if (v79[2])
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v79[10])
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v79[17])
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            break;
          default:
            goto LABEL_137;
        }
        goto LABEL_167;
      case 0x12u:
        sub_23F1311B4(*(_QWORD *)v10, *(_QWORD *)(v10 + 8));
        sub_23F1311B4(*(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24));
        goto LABEL_168;
      case 0x14u:
        v4(v10, v3);
        v16 = type metadata accessor for SystemPrompt(0);
        swift_bridgeObjectRelease();
        v10 += *(int *)(v16 + 24);
        type metadata accessor for SystemPrompt.Prompt(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_168;
          case 1u:
            swift_bridgeObjectRelease();
            v12 = type metadata accessor for ParameterNeedsValue(0);
            goto LABEL_13;
          case 2u:
            swift_bridgeObjectRelease();
            v55 = v10 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
            v56 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v55, v56);
            goto LABEL_167;
          case 3u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_168;
          default:
            goto LABEL_169;
        }
        break;
      case 0x15u:
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v10, 1, v3))
          v4(v10, v3);
        v17 = (int *)type metadata accessor for SystemPromptResolution(0);
        v4(v10 + v17[5], v3);
        v18 = v10 + v17[6];
        type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v19 = sub_23F268078();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
        }
        swift_bridgeObjectRelease();
        sub_23F137210(*(_QWORD *)(v10 + v17[8]), *(_QWORD *)(v10 + v17[8] + 8), *(_BYTE *)(v10 + v17[8] + 16));
        break;
      case 0x16u:
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v10, 1, v3))
          v4(v10, v3);
        v36 = (int *)type metadata accessor for ActionResponse(0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v37 = v10 + v36[7];
        type metadata accessor for ActionOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v38 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
            v39 = v37 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
            v40 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v39, 1, v40))
            {
              v4(v39, v3);
              swift_bridgeObjectRelease();
              goto LABEL_155;
            }
            goto LABEL_156;
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_155;
          case 2u:
            goto LABEL_154;
          case 3u:
            swift_bridgeObjectRelease();
            v80 = type metadata accessor for ParameterNeedsValue(0);
            goto LABEL_151;
          case 4u:
            swift_bridgeObjectRelease();
            v81 = v37 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
            v82 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 8))(v81, v82);
            swift_bridgeObjectRelease();
            goto LABEL_155;
          case 5u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_155;
          case 6u:
            swift_bridgeObjectRelease();
            v80 = type metadata accessor for ParameterNotAllowed(0);
            goto LABEL_151;
          case 7u:
            swift_bridgeObjectRelease();
            v80 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_151:
            v83 = v37 + *(int *)(v80 + 20);
            v84 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 8))(v83, v84);
            goto LABEL_156;
          case 8u:
            sub_23F137248(*(_QWORD *)v37, *(_QWORD *)(v37 + 8), *(_BYTE *)(v37 + 16));
            goto LABEL_156;
          case 9u:
            goto LABEL_155;
          case 0xAu:
            if (*(_QWORD *)(v37 + 8) < 0x10uLL)
              goto LABEL_156;
LABEL_154:
            swift_bridgeObjectRelease();
LABEL_155:
            swift_bridgeObjectRelease();
LABEL_156:
            v85 = (_QWORD *)(v10 + v36[8]);
            swift_bridgeObjectRelease();
            if (v85[2])
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v85[10])
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v85[17])
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v86 = v10 + v36[9];
            if (!*(_QWORD *)v86)
              goto LABEL_168;
            swift_bridgeObjectRelease();
            v87 = *(unsigned __int8 *)(v86 + 24);
            if (v87 != 255)
              sub_23F137270(*(_QWORD *)(v86 + 8), *(_QWORD *)(v86 + 16), v87);
            v88 = *(unsigned __int8 *)(v86 + 48);
            if (v88 != 255)
              sub_23F137270(*(_QWORD *)(v86 + 32), *(_QWORD *)(v86 + 40), v88);
            break;
          default:
            goto LABEL_156;
        }
        goto LABEL_167;
      case 0x17u:
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v10, 1, v3))
          v4(v10, v3);
        v20 = (int *)type metadata accessor for SystemResponse(0);
        if (*(_QWORD *)(v10 + v20[5] + 16) != 1)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v21 = v10 + v20[7];
        type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v22 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
            v23 = v21 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
            v24 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v23, 1, v24))
            {
              v4(v23, v3);
              swift_bridgeObjectRelease();
              goto LABEL_105;
            }
            goto LABEL_106;
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_105;
          case 2u:
            goto LABEL_104;
          case 3u:
            swift_bridgeObjectRelease();
            v61 = type metadata accessor for ParameterNeedsValue(0);
            goto LABEL_101;
          case 4u:
            swift_bridgeObjectRelease();
            v62 = v21 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
            v63 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v62, v63);
            swift_bridgeObjectRelease();
            goto LABEL_105;
          case 5u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_105;
          case 6u:
            swift_bridgeObjectRelease();
            v61 = type metadata accessor for ParameterNotAllowed(0);
            goto LABEL_101;
          case 7u:
            swift_bridgeObjectRelease();
            v61 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_101:
            v64 = v21 + *(int *)(v61 + 20);
            v65 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
            goto LABEL_106;
          case 8u:
            sub_23F137248(*(_QWORD *)v21, *(_QWORD *)(v21 + 8), *(_BYTE *)(v21 + 16));
            goto LABEL_106;
          case 9u:
            goto LABEL_105;
          case 0xAu:
            if (*(_QWORD *)(v21 + 8) < 0x10uLL)
              goto LABEL_106;
LABEL_104:
            swift_bridgeObjectRelease();
LABEL_105:
            swift_bridgeObjectRelease();
LABEL_106:
            v66 = v10 + v20[8];
            if (*(_QWORD *)v66)
            {
              swift_bridgeObjectRelease();
              v67 = *(unsigned __int8 *)(v66 + 24);
              if (v67 != 255)
                sub_23F137270(*(_QWORD *)(v66 + 8), *(_QWORD *)(v66 + 16), v67);
              v68 = *(unsigned __int8 *)(v66 + 48);
              if (v68 != 255)
                sub_23F137270(*(_QWORD *)(v66 + 32), *(_QWORD *)(v66 + 40), v68);
              swift_bridgeObjectRelease();
            }
            break;
          default:
            goto LABEL_106;
        }
LABEL_167:
        swift_bridgeObjectRelease();
        goto LABEL_168;
      case 0x1Cu:
        swift_bridgeObjectRelease();
        v25 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
        goto LABEL_83;
      case 0x1Du:
        swift_bridgeObjectRelease();
        v25 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
        goto LABEL_83;
      case 0x1Eu:
        type metadata accessor for MessagePayload.RequestContent(0);
        v41 = swift_getEnumCaseMultiPayload();
        if (v41 == 3)
        {
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v10, 1, v3))
            v4(v10, v3);
          v50 = (int *)type metadata accessor for SystemPromptResolution(0);
          v4(v10 + v50[5], v3);
          v51 = v10 + v50[6];
          type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v52 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
          }
          swift_bridgeObjectRelease();
          sub_23F137210(*(_QWORD *)(v10 + v50[8]), *(_QWORD *)(v10 + v50[8] + 8), *(_BYTE *)(v10 + v50[8] + 16));
        }
        else if (v41 == 2 || v41 == 1)
        {
          swift_bridgeObjectRelease();
        }
        v25 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
LABEL_83:
        v53 = v25;
        v54 = v10 + *(int *)(v25 + 20);
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v54, 1, v3))
          v4(v54, v3);
        v49 = *(int *)(v53 + 24);
LABEL_86:
        if (*(_QWORD *)(v10 + v49 + 8))
          goto LABEL_87;
        break;
      case 0x1Fu:
        type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v26 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v10, v26);
            v27 = v10 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
            v28 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v27, 1, v28))
            {
              v4(v27, v3);
              swift_bridgeObjectRelease();
              goto LABEL_123;
            }
            goto LABEL_124;
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_123;
          case 2u:
            goto LABEL_122;
          case 3u:
            swift_bridgeObjectRelease();
            v69 = type metadata accessor for ParameterNeedsValue(0);
            goto LABEL_119;
          case 4u:
            swift_bridgeObjectRelease();
            v70 = v10 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
            v71 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v70, v71);
            swift_bridgeObjectRelease();
            goto LABEL_123;
          case 5u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_123;
          case 6u:
            swift_bridgeObjectRelease();
            v69 = type metadata accessor for ParameterNotAllowed(0);
            goto LABEL_119;
          case 7u:
            swift_bridgeObjectRelease();
            v69 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_119:
            v72 = v10 + *(int *)(v69 + 20);
            v73 = sub_23F268078();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(v72, v73);
            goto LABEL_124;
          case 8u:
            sub_23F137248(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_BYTE *)(v10 + 16));
            goto LABEL_124;
          case 9u:
            goto LABEL_123;
          case 0xAu:
            if (*(_QWORD *)(v10 + 8) < 0x10uLL)
              goto LABEL_124;
LABEL_122:
            swift_bridgeObjectRelease();
LABEL_123:
            swift_bridgeObjectRelease();
LABEL_124:
            type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
            break;
          default:
            goto LABEL_124;
        }
        goto LABEL_168;
      case 0x22u:
        v4(v10, v3);
        type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
        goto LABEL_168;
      case 0x23u:
        v4(v10, v3);
        type metadata accessor for MessagePayload.ActionSummaryUpdate(0);
LABEL_87:
        swift_bridgeObjectRelease();
LABEL_168:
        swift_bridgeObjectRelease();
        break;
      case 0x24u:
        type metadata accessor for SessionClientDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
          case 5u:
          case 7u:
          case 8u:
            goto LABEL_63;
          case 2u:
            v4(v10, v3);
            v29 = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
            swift_bridgeObjectRelease();
            v30 = v10 + *(int *)(v29 + 28);
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v30, 1, v3))
              goto LABEL_171;
            goto LABEL_167;
          case 4u:
            v4(v10, v3);
            type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
            goto LABEL_168;
          case 9u:
            v4(v10, v3);
            v57 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
            v4(v10 + *(int *)(v57 + 20), v3);
            v58 = (uint64_t *)(v10 + *(int *)(v57 + 24));
            v59 = v58[1];
            if (v59 >> 60 == 15)
              goto LABEL_169;
            v60 = *v58;
            break;
          default:
            goto LABEL_169;
        }
LABEL_179:
        sub_23F1311B4(v60, v59);
        break;
      case 0x25u:
        type metadata accessor for SessionServerDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 2u:
          case 7u:
          case 8u:
          case 9u:
          case 0xAu:
          case 0xCu:
LABEL_63:
            v4(v10, v3);
            break;
          case 1u:
            swift_bridgeObjectRelease();
            v30 = v10
                + *(int *)(type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0) + 24);
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v30, 1, v3))
LABEL_171:
              v4(v30, v3);
            goto LABEL_167;
          case 3u:
          case 4u:
            goto LABEL_168;
          case 5u:
            swift_bridgeObjectRelease();
            v91 = v10 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0) + 24);
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v91, 1, v3))
              v4(v91, v3);
            goto LABEL_168;
          case 6u:
            v4(v10, v3);
            type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
            goto LABEL_168;
          case 0xBu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v92 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
            v4(v10 + *(int *)(v92 + 32), v3);
            swift_bridgeObjectRelease();
            sub_23F1311B4(*(_QWORD *)(v10 + *(int *)(v92 + 40)), *(_QWORD *)(v10 + *(int *)(v92 + 40) + 8));
            goto LABEL_168;
          case 0xDu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v60 = *(_QWORD *)(v10 + 72);
            v59 = *(_QWORD *)(v10 + 80);
            goto LABEL_179;
          default:
            goto LABEL_169;
        }
        break;
      case 0x26u:
        sub_23F137288(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 48));
        break;
      default:
        break;
    }
LABEL_169:
    swift_bridgeObjectRelease();
    v89 = a1 + v8[10];
    v90 = sub_23F267D24();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 8))(v89, v90);
  }
}

uint64_t sub_23F137210(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23F137230(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 0xBFu)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23F137248(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0x3Fu)
    return sub_23F13725C(a1, a2, a3);
  return a1;
}

uint64_t sub_23F13725C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23F137270(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23F137288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v7;
  uint64_t result;

  if (a7 < 0)
  {
    v7 = a7;
    swift_bridgeObjectRelease();
    sub_23F1372F4(a3, a4, a5, a6, v7 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F1372F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SessionDebuggerSubscriptionEvent(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  void **v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  int *v39;
  void (*v40)(char *, char *, uint64_t);
  void **v41;
  void *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void **v48;
  int *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  id v65;
  char v66;
  uint64_t v67;
  void **v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  void **v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void **v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  char *v108;
  void **v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  void *v122;
  uint64_t *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  void **v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  int *v149;
  uint64_t v150;
  void **v151;
  uint64_t *v152;
  char *v153;
  void **v154;
  char *v155;
  uint64_t v156;
  int *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unsigned __int8 v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  void **v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  _QWORD *v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  _QWORD *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  _QWORD *v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  void **v199;
  uint64_t v200;
  uint64_t *v201;
  int *v202;
  uint64_t v203;
  char *v204;
  void **v205;
  char *v206;
  uint64_t v207;
  void **v208;
  uint64_t *v209;
  uint64_t *v210;
  void **v211;
  uint64_t v212;
  void **v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  unsigned __int8 v233;
  int *v234;
  uint64_t v235;
  char *v236;
  void **v237;
  char *v238;
  unsigned int v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  void **v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  unsigned __int8 v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  _QWORD *v271;
  _QWORD *v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  _QWORD *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  void (*v282)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v284;
  char *v285;
  char *v286;
  int *v287;
  void **v288;
  void **v289;
  int *v290;
  int *v291;
  int *v292;
  int *v293;
  int *v294;
  uint64_t *__dst;
  void *__dstb;
  uint64_t *__dsta;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_23F267D84();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v6(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent(0);
    v6(a1 + *(int *)(v7 + 20), a2 + *(int *)(v7 + 20), v5);
    v8 = *(int *)(v7 + 24);
    v9 = a1 + v8;
    v10 = a2 + v8;
    type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6(v9, v10, v5);
      v11 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      *(_QWORD *)(v9 + *(int *)(v11 + 20)) = *(_QWORD *)(v10 + *(int *)(v11 + 20));
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v17 = v10 + 8;
      v18 = *(_OWORD *)(v10 + 32);
      *(_OWORD *)(v9 + 32) = v18;
      v19 = v18;
      v20 = **(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8);
      swift_bridgeObjectRetain();
      v20(v9 + 8, v17, v19);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_123;
  }
  v12 = (int *)type metadata accessor for SessionServerMessage(0);
  v6(a1 + v12[5], a2 + v12[5], v5);
  v13 = v12[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a2 + v13, 1, v5))
  {
    v16 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v6((uint64_t)v14, (uint64_t)v15, v5);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v5);
  }
  v21 = v12[7];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = v12[8];
  v26 = (uint64_t *)(a1 + v25);
  v27 = (void **)(a2 + v25);
  v28 = type metadata accessor for MessagePayload(0);
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v29 = type metadata accessor for MessagePayload.RequestContent(0);
      v30 = swift_getEnumCaseMultiPayload();
      v290 = v12;
      switch(v30)
      {
        case 3:
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v27, 1, v5))
          {
            v198 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v26, (uint64_t)v27, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v26, 0, 1, v5);
          }
          v219 = type metadata accessor for SystemPromptResolution(0);
          v6((uint64_t)v26 + *(int *)(v219 + 20), (uint64_t)v27 + *(int *)(v219 + 20), v5);
          v284 = v219;
          v220 = *(int *)(v219 + 24);
          v286 = (char *)v26 + v220;
          v221 = (char *)v27 + v220;
          v222 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v223 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 16))(v286, v221, v223);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v286, v221, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
          }
          v224 = *(int *)(v284 + 28);
          v225 = (char *)v26 + v224;
          v226 = (char *)v27 + v224;
          *(_DWORD *)v225 = *(_DWORD *)v226;
          v227 = *((_QWORD *)v226 + 2);
          *((_QWORD *)v225 + 1) = *((_QWORD *)v226 + 1);
          *((_QWORD *)v225 + 2) = v227;
          v228 = *(int *)(v284 + 32);
          v288 = v27;
          v229 = (char *)v26 + v228;
          v230 = (char *)v288 + v228;
          v231 = *(_QWORD *)v230;
          v232 = *((_QWORD *)v230 + 1);
          v233 = v230[16];
          swift_bridgeObjectRetain();
          sub_23F135C7C(v231, v232, v233);
          *(_QWORD *)v229 = v231;
          *((_QWORD *)v229 + 1) = v232;
          v229[16] = v233;
          v27 = v288;
          break;
        case 2:
          *v26 = (uint64_t)*v27;
          swift_bridgeObjectRetain();
          break;
        case 1:
          v31 = (uint64_t)v27[1];
          *v26 = (uint64_t)*v27;
          v26[1] = v31;
          swift_bridgeObjectRetain();
          break;
        default:
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          goto LABEL_97;
      }
      swift_storeEnumTagMultiPayload();
LABEL_97:
      v234 = (int *)type metadata accessor for MessagePayload.Request(0);
      *(uint64_t *)((char *)v26 + v234[5]) = *(uint64_t *)((char *)v27 + v234[5]);
      *((_BYTE *)v26 + v234[6]) = *((_BYTE *)v27 + v234[6]);
      v235 = v234[7];
      __dsta = v26;
      v236 = (char *)v26 + v235;
      v237 = v27;
      v238 = (char *)v27 + v235;
      v239 = v238[16];
      swift_bridgeObjectRetain();
      if (v239 <= 0xFD)
      {
        v241 = *(_QWORD *)v238;
        v240 = *((_QWORD *)v238 + 1);
        sub_23F135C9C(v241, v240, v239);
        *(_QWORD *)v236 = v241;
        *((_QWORD *)v236 + 1) = v240;
        v236[16] = v239;
      }
      else
      {
        *(_OWORD *)v236 = *(_OWORD *)v238;
        v236[16] = v238[16];
      }
      v242 = v234[8];
      v243 = (char *)__dsta + v242;
      v244 = (char *)v237 + v242;
      v12 = v290;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v237 + v242, 1, v5))
      {
        v245 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v243, v244, *(_QWORD *)(*(_QWORD *)(v245 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v243, (uint64_t)v244, v5);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v243, 0, 1, v5);
      }
      v246 = v234[9];
      v170 = (char *)__dsta + v246;
      v171 = (char *)v237 + v246;
      v172 = *((_QWORD *)v171 + 1);
      if (v172)
        goto LABEL_60;
      *(_OWORD *)v170 = *(_OWORD *)v171;
      *((_QWORD *)v170 + 2) = *((_QWORD *)v171 + 2);
      goto LABEL_121;
    case 4u:
      v32 = v27;
      v33 = *v27;
      v34 = (uint64_t)v27[1];
      *v26 = (uint64_t)v33;
      v26[1] = v34;
      v35 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
      v36 = (char *)v26 + v35;
      v37 = (char *)v32 + v35;
      v38 = sub_23F268078();
      v39 = v12;
      v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      v40(v36, v37, v38);
      v12 = v39;
      goto LABEL_121;
    case 5u:
      v41 = v27;
      v42 = *v27;
      v43 = *((_BYTE *)v41 + 8);
      sub_23F131158(v42);
      *v26 = (uint64_t)v42;
      *((_BYTE *)v26 + 8) = v43;
      v26[2] = (uint64_t)v41[2];
      swift_bridgeObjectRetain();
      goto LABEL_121;
    case 6u:
    case 9u:
    case 0x20u:
    case 0x21u:
    case 0x28u:
      v125 = (uint64_t)v27[1];
      *v26 = (uint64_t)*v27;
      v26[1] = v125;
      v26[2] = (uint64_t)v27[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_121;
    case 7u:
      v44 = (uint64_t)v27[1];
      *v26 = (uint64_t)*v27;
      v26[1] = v44;
      v26[2] = (uint64_t)v27[2];
      *((_BYTE *)v26 + 24) = *((_BYTE *)v27 + 24);
      v45 = (uint64_t)v27[5];
      v26[4] = (uint64_t)v27[4];
      v26[5] = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_121;
    case 8u:
      *v26 = (uint64_t)*v27;
      *((_BYTE *)v26 + 8) = *((_BYTE *)v27 + 8);
      v46 = (uint64_t)v27[2];
      v47 = (uint64_t)v27[3];
      v26[2] = v46;
      v26[3] = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_121;
    case 0xAu:
    case 0xBu:
    case 0x13u:
    case 0x18u:
    case 0x19u:
    case 0x1Bu:
      v99 = (uint64_t)v27[1];
      *v26 = (uint64_t)*v27;
      v26[1] = v99;
      swift_bridgeObjectRetain();
      goto LABEL_121;
    case 0xCu:
      *v26 = (uint64_t)*v27;
      swift_bridgeObjectRetain();
      goto LABEL_121;
    case 0xDu:
      v6((uint64_t)v26, (uint64_t)v27, v5);
      v48 = v27;
      v49 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
      v6((uint64_t)v26 + v49[5], (uint64_t)v48 + v49[5], v5);
      v50 = v49[6];
      v51 = (uint64_t *)((char *)v26 + v50);
      v52 = (void **)((char *)v48 + v50);
      v53 = v52[1];
      *v51 = *v52;
      v51[1] = v53;
      v54 = v49[7];
      v55 = (uint64_t *)((char *)v26 + v54);
      v56 = (void **)((char *)v48 + v54);
      v57 = v56[1];
      *v55 = *v56;
      v55[1] = v57;
      v58 = v49[8];
      v59 = (uint64_t *)((char *)v26 + v58);
      v60 = (void **)((char *)v48 + v58);
      v61 = v60[1];
      *v59 = *v60;
      v59[1] = v61;
      *(uint64_t *)((char *)v26 + v49[9]) = *(uint64_t *)((char *)v48 + v49[9]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_121;
    case 0xEu:
      v6((uint64_t)v26, (uint64_t)v27, v5);
      v62 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
      v63 = (char *)v26 + v62;
      v64 = (char *)v27 + v62;
      type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v65 = *(id *)v64;
        v66 = v64[8];
        sub_23F131158(*(id *)v64);
        *(_QWORD *)v63 = v65;
        v63[8] = v66;
      }
      else
      {
        v147 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(v63, v64, v147);
      }
LABEL_52:
      swift_storeEnumTagMultiPayload();
      goto LABEL_121;
    case 0xFu:
      *(_DWORD *)v26 = *(_DWORD *)v27;
      v67 = (uint64_t)v27[2];
      v26[1] = (uint64_t)v27[1];
      v26[2] = v67;
      v68 = v27;
      v69 = (uint64_t)v27[3];
      v70 = (uint64_t)v27[4];
      v26[3] = v69;
      v26[4] = v70;
      v71 = (uint64_t)v68[6];
      v26[5] = (uint64_t)v68[5];
      v26[6] = v71;
      v72 = (uint64_t)v68[8];
      v26[7] = (uint64_t)v68[7];
      v26[8] = v72;
      *((_BYTE *)v26 + 72) = *((_BYTE *)v68 + 72);
      v73 = (uint64_t)v68[11];
      v26[10] = (uint64_t)v68[10];
      v26[11] = v73;
      v26[12] = (uint64_t)v68[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_121;
    case 0x10u:
      v6((uint64_t)v26, (uint64_t)v27, v5);
      v74 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
      v75 = v74[5];
      v76 = (uint64_t *)((char *)v26 + v75);
      v77 = (uint64_t *)((char *)v27 + v75);
      v79 = *v77;
      v78 = v77[1];
      *v76 = v79;
      v76[1] = v78;
      *(uint64_t *)((char *)v26 + v74[6]) = *(uint64_t *)((char *)v27 + v74[6]);
      *(uint64_t *)((char *)v26 + v74[7]) = *(uint64_t *)((char *)v27 + v74[7]);
      v80 = v74[8];
      v81 = (uint64_t *)((char *)v26 + v80);
      v82 = (void **)((char *)v27 + v80);
      v83 = v82[1];
      *v81 = *v82;
      v81[1] = v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_121;
    case 0x11u:
      v6((uint64_t)v26, (uint64_t)v27, v5);
      type metadata accessor for MessagePayload.ClientActionResult(0);
      type metadata accessor for StatementOutcome(0);
      v84 = (char *)&loc_23F137A24 + 4 * word_23F269DE0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x12u:
      v85 = v27;
      v86 = (uint64_t)*v27;
      v87 = (unint64_t)v85[1];
      sub_23F131170(v86, v87);
      *v26 = v86;
      v26[1] = v87;
      v88 = (uint64_t)v85[2];
      v89 = (unint64_t)v85[3];
      sub_23F131170(v88, v89);
      v26[2] = v88;
      v26[3] = v89;
      v90 = (uint64_t)v85[5];
      v26[4] = (uint64_t)v85[4];
      v26[5] = v90;
      swift_bridgeObjectRetain();
      goto LABEL_121;
    case 0x14u:
      v6((uint64_t)v26, (uint64_t)v27, v5);
      v91 = *(int *)(type metadata accessor for SystemPrompt(0) + 20);
      v92 = (uint64_t *)((char *)v26 + v91);
      v93 = (void **)((char *)v27 + v91);
      v94 = v93[1];
      *v92 = *v93;
      v92[1] = v94;
      type metadata accessor for SystemPrompt.Prompt(0);
      swift_bridgeObjectRetain();
      v95 = (char *)&loc_23F137B90 + 4 * word_23F269DD8[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x15u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v27, 1, v5))
      {
        v96 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v26, (uint64_t)v27, v5);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v26, 0, 1, v5);
      }
      v148 = v26;
      v149 = (int *)type metadata accessor for SystemPromptResolution(0);
      v6((uint64_t)v148 + v149[5], (uint64_t)v27 + v149[5], v5);
      v150 = v149[6];
      v151 = v27;
      v152 = v148;
      v153 = (char *)v148 + v150;
      v154 = v151;
      v155 = (char *)v151 + v150;
      v156 = type metadata accessor for SystemPromptResolution.UserAction(0);
      v157 = v12;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v158 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 16))(v153, v155, v158);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v153, v155, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
      }
      v159 = v149[7];
      v160 = (uint64_t)v152 + v159;
      v161 = (uint64_t)v154 + v159;
      *(_DWORD *)v160 = *(_DWORD *)v161;
      v162 = *(_QWORD *)(v161 + 16);
      *(_QWORD *)(v160 + 8) = *(_QWORD *)(v161 + 8);
      *(_QWORD *)(v160 + 16) = v162;
      v163 = v149[8];
      v164 = (uint64_t)v152 + v163;
      v165 = (uint64_t)v154 + v163;
      v166 = *(_QWORD *)v165;
      v167 = *(_QWORD *)(v165 + 8);
      v168 = *(_BYTE *)(v165 + 16);
      swift_bridgeObjectRetain();
      sub_23F135C7C(v166, v167, v168);
      *(_QWORD *)v164 = v166;
      *(_QWORD *)(v164 + 8) = v167;
      *(_BYTE *)(v164 + 16) = v168;
      swift_storeEnumTagMultiPayload();
      v12 = v157;
      goto LABEL_122;
    case 0x16u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v27, 1, v5))
      {
        v97 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v26, (uint64_t)v27, v5);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v26, 0, 1, v5);
      }
      v173 = type metadata accessor for ActionResponse(0);
      v174 = *(int *)(v173 + 20);
      v175 = (uint64_t *)((char *)v26 + v174);
      v176 = (void **)((char *)v27 + v174);
      v177 = v27;
      v178 = v176[1];
      *v175 = *v176;
      v175[1] = v178;
      v179 = *(int *)(v173 + 24);
      v180 = (uint64_t *)((char *)v26 + v179);
      v181 = (void **)((char *)v177 + v179);
      v182 = v181[1];
      *v180 = *v181;
      v180[1] = v182;
      type metadata accessor for ActionOutcome(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v183 = (char *)&loc_23F138408 + 4 * word_23F269DC2[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x17u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v27, 1, v5))
      {
        v98 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v26, (uint64_t)v27, v5);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v26, 0, 1, v5);
      }
      v184 = type metadata accessor for SystemResponse(0);
      v185 = *(int *)(v184 + 20);
      v186 = (char *)v26 + v185;
      v187 = (char *)v27 + v185;
      v188 = *((_QWORD *)v187 + 2);
      if (v188 == 1)
      {
        *(_OWORD *)v186 = *(_OWORD *)v187;
        *((_QWORD *)v186 + 2) = *((_QWORD *)v187 + 2);
      }
      else
      {
        *(_DWORD *)v186 = *(_DWORD *)v187;
        *((_QWORD *)v186 + 1) = *((_QWORD *)v187 + 1);
        *((_QWORD *)v186 + 2) = v188;
        swift_bridgeObjectRetain();
      }
      v189 = *(int *)(v184 + 24);
      v190 = (uint64_t *)((char *)v26 + v189);
      v191 = (void **)((char *)v27 + v189);
      v192 = v191[1];
      *v190 = *v191;
      v190[1] = v192;
      type metadata accessor for StatementOutcome(0);
      swift_bridgeObjectRetain();
      v193 = (char *)&loc_23F138578 + 4 * word_23F269DAC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x1Cu:
      v291 = v12;
      v100 = v27;
      v101 = (uint64_t)*v27;
      v102 = (uint64_t)v27[1];
      *v26 = v101;
      v26[1] = v102;
      v103 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
      v104 = v26;
      v105 = v103;
      v106 = *(int *)(v103 + 20);
      v107 = v104;
      v108 = (char *)v104 + v106;
      v109 = v100;
      v110 = (char *)v100 + v106;
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v110, 1, v5))
      {
        v111 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v108, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v108, (uint64_t)v110, v5);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v108, 0, 1, v5);
      }
      v194 = *(int *)(v105 + 24);
      v195 = (uint64_t *)((char *)v107 + v194);
      v196 = (void **)((char *)v109 + v194);
      v197 = v196[1];
      if (v197)
      {
        *v195 = *v196;
        v195[1] = v197;
        v195[2] = v196[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v195 = *(_OWORD *)v196;
        v195[2] = v196[2];
      }
      v12 = v291;
      goto LABEL_121;
    case 0x1Du:
      *v26 = (uint64_t)*v27;
      v112 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
      v113 = v26;
      v114 = v112;
      v115 = *(int *)(v112 + 20);
      v116 = v113;
      v117 = (char *)v113 + v115;
      v118 = (char *)v27 + v115;
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v118, 1, v5))
      {
        v119 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v117, (uint64_t)v118, v5);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v117, 0, 1, v5);
      }
      v169 = *(int *)(v114 + 24);
      v170 = (char *)v116 + v169;
      v171 = (char *)v27 + v169;
      v172 = *((_QWORD *)v171 + 1);
      if (v172)
        goto LABEL_60;
      *(_OWORD *)v170 = *(_OWORD *)v171;
      *((_QWORD *)v170 + 2) = *((_QWORD *)v171 + 2);
      goto LABEL_121;
    case 0x1Eu:
      __dst = v26;
      v120 = type metadata accessor for MessagePayload.RequestContent(0);
      v121 = swift_getEnumCaseMultiPayload();
      switch(v121)
      {
        case 3:
          v199 = v27;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v27, 1, v5))
          {
            v200 = sub_23F1217E8(&qword_256DFEB98);
            v201 = __dst;
            memcpy(__dst, v199, *(_QWORD *)(*(_QWORD *)(v200 - 8) + 64));
          }
          else
          {
            v201 = __dst;
            v6((uint64_t)__dst, (uint64_t)v199, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v5);
          }
          v247 = type metadata accessor for SystemPromptResolution(0);
          v6((uint64_t)v201 + *(int *)(v247 + 20), (uint64_t)v199 + *(int *)(v247 + 20), v5);
          v248 = *(int *)(v247 + 24);
          v285 = (char *)v201 + v248;
          v287 = (int *)v247;
          v249 = (char *)v199 + v248;
          v250 = type metadata accessor for SystemPromptResolution.UserAction(0);
          v251 = v199;
          v294 = v12;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v252 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 16))(v285, v249, v252);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v285, v249, *(_QWORD *)(*(_QWORD *)(v250 - 8) + 64));
          }
          v253 = v287[7];
          v123 = __dst;
          v254 = (char *)__dst + v253;
          v255 = (char *)v251 + v253;
          *(_DWORD *)v254 = *(_DWORD *)v255;
          v256 = *((_QWORD *)v255 + 2);
          *((_QWORD *)v254 + 1) = *((_QWORD *)v255 + 1);
          *((_QWORD *)v254 + 2) = v256;
          v257 = v287[8];
          v258 = (char *)__dst + v257;
          v259 = (char *)v251 + v257;
          v289 = v251;
          v260 = *(_QWORD *)v259;
          v261 = *((_QWORD *)v259 + 1);
          v262 = v259[16];
          swift_bridgeObjectRetain();
          sub_23F135C7C(v260, v261, v262);
          *(_QWORD *)v258 = v260;
          *((_QWORD *)v258 + 1) = v261;
          v27 = v289;
          v258[16] = v262;
          swift_storeEnumTagMultiPayload();
          v12 = v294;
          break;
        case 2:
          v123 = __dst;
          *__dst = (uint64_t)*v27;
          swift_bridgeObjectRetain();
          goto LABEL_81;
        case 1:
          v122 = v27[1];
          v123 = __dst;
          *__dst = (uint64_t)*v27;
          __dst[1] = (uint64_t)v122;
          swift_bridgeObjectRetain();
LABEL_81:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          v123 = __dst;
          memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
          break;
      }
      v263 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
      v264 = *(int *)(v263 + 20);
      v265 = (char *)v123 + v264;
      v266 = (char *)v27 + v264;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v27 + v264, 1, v5))
      {
        v267 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v265, v266, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v265, (uint64_t)v266, v5);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v265, 0, 1, v5);
      }
      v268 = *(int *)(v263 + 24);
      v170 = (char *)__dst + v268;
      v171 = (char *)v27 + v268;
      v172 = *((_QWORD *)v171 + 1);
      if (v172)
      {
LABEL_60:
        *(_QWORD *)v170 = *(_QWORD *)v171;
        *((_QWORD *)v170 + 1) = v172;
        *((_QWORD *)v170 + 2) = *((_QWORD *)v171 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v170 = *(_OWORD *)v171;
        *((_QWORD *)v170 + 2) = *((_QWORD *)v171 + 2);
      }
LABEL_121:
      swift_storeEnumTagMultiPayload();
LABEL_122:
      v274 = v12[9];
      v275 = (_QWORD *)(a1 + v274);
      v276 = (_QWORD *)(a2 + v274);
      v277 = v276[1];
      *v275 = *v276;
      v275[1] = v277;
      v278 = v12[10];
      v279 = a1 + v278;
      v280 = a2 + v278;
      v281 = sub_23F267D24();
      v282 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v281 - 8) + 16);
      swift_bridgeObjectRetain();
      v282(v279, v280, v281);
LABEL_123:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x1Fu:
      type metadata accessor for StatementOutcome(0);
      v124 = (char *)&loc_23F137E54 + 4 * word_23F269D96[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x22u:
      v6((uint64_t)v26, (uint64_t)v27, v5);
      v126 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
      *((_BYTE *)v26 + *(int *)(v126 + 20)) = *((_BYTE *)v27 + *(int *)(v126 + 20));
      v127 = *(int *)(v126 + 24);
      v128 = (char *)v26 + v127;
      v129 = (char *)v27 + v127;
      *(_DWORD *)v128 = *(_DWORD *)v129;
      v130 = *((_QWORD *)v129 + 2);
      *((_QWORD *)v128 + 1) = *((_QWORD *)v129 + 1);
      *((_QWORD *)v128 + 2) = v130;
      swift_bridgeObjectRetain();
      goto LABEL_121;
    case 0x23u:
      v6((uint64_t)v26, (uint64_t)v27, v5);
      v131 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
      v132 = (uint64_t *)((char *)v26 + v131);
      v133 = (void **)((char *)v27 + v131);
      v134 = v133[1];
      *v132 = *v133;
      v132[1] = v134;
      v132[2] = v133[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_121;
    case 0x24u:
      v135 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
        case 5u:
        case 7u:
        case 8u:
          v6((uint64_t)v26, (uint64_t)v27, v5);
          goto LABEL_52;
        case 2u:
          v293 = v12;
          v6((uint64_t)v26, (uint64_t)v27, v5);
          v202 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
          *(uint64_t *)((char *)v26 + v202[5]) = *(uint64_t *)((char *)v27 + v202[5]);
          *(uint64_t *)((char *)v26 + v202[6]) = *(uint64_t *)((char *)v27 + v202[6]);
          v203 = v202[7];
          v204 = (char *)v26 + v203;
          v205 = v27;
          v206 = (char *)v27 + v203;
          swift_bridgeObjectRetain();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v206, 1, v5))
          {
            v207 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v204, v206, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v204, (uint64_t)v206, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v204, 0, 1, v5);
          }
          v270 = v202[8];
          v271 = (uint64_t *)((char *)v26 + v270);
          v272 = (void **)((char *)v205 + v270);
          v273 = v272[1];
          *v271 = *v272;
          v271[1] = v273;
          *(uint64_t *)((char *)v26 + v202[9]) = *(uint64_t *)((char *)v205 + v202[9]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          goto LABEL_120;
        case 4u:
          v208 = v27;
          v209 = v26;
          v210 = v26;
          v211 = v208;
          ((void (*)(uint64_t *))v6)(v210);
          v212 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
          *(uint64_t *)((char *)v209 + *(int *)(v212 + 20)) = *(uint64_t *)((char *)v211 + *(int *)(v212 + 20));
          swift_bridgeObjectRetain();
          goto LABEL_52;
        case 9u:
          v293 = v12;
          v6((uint64_t)v26, (uint64_t)v27, v5);
          v213 = v27;
          v214 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
          v6((uint64_t)v26 + *(int *)(v214 + 20), (uint64_t)v213 + *(int *)(v214 + 20), v5);
          v215 = *(int *)(v214 + 24);
          v216 = (char *)v26 + v215;
          v217 = (char *)v213 + v215;
          v218 = *((_QWORD *)v217 + 1);
          if (v218 >> 60 == 15)
          {
            *(_OWORD *)v216 = *(_OWORD *)v217;
          }
          else
          {
            v269 = *(_QWORD *)v217;
            sub_23F131170(*(_QWORD *)v217, *((_QWORD *)v217 + 1));
            *(_QWORD *)v216 = v269;
            *((_QWORD *)v216 + 1) = v218;
          }
          swift_storeEnumTagMultiPayload();
LABEL_120:
          v12 = v293;
          break;
        default:
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
          break;
      }
      goto LABEL_121;
    case 0x25u:
      type metadata accessor for SessionServerDebuggerEvent.Payload(0);
      v136 = (char *)&loc_23F138074 + 4 * word_23F269D66[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x26u:
      v137 = v27;
      v138 = (uint64_t)*v27;
      v139 = (uint64_t)v137[1];
      v140 = (uint64_t)v137[2];
      __dstb = v137[3];
      v142 = (uint64_t)v137[4];
      v141 = (uint64_t)v137[5];
      v292 = v12;
      v143 = (uint64_t)v137[6];
      v144 = (uint64_t)v137[7];
      sub_23F135CF4(v138, v139, v140, (uint64_t)__dstb, v142, v141, v143);
      *v26 = v138;
      v26[1] = v139;
      v26[2] = v140;
      v26[3] = (uint64_t)__dstb;
      v26[4] = v142;
      v26[5] = v141;
      v26[6] = v143;
      v26[7] = v144;
      v12 = v292;
      goto LABEL_121;
    case 0x27u:
      v145 = (uint64_t)*v27;
      v146 = (uint64_t)v27[1];
      *v26 = v145;
      v26[1] = v146;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_121;
    default:
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      goto LABEL_122;
  }
}

uint64_t assignWithCopy for SessionDebuggerSubscriptionEvent(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t *v24;
  id *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  id v33;
  uint64_t *v34;
  char v35;
  int *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  id v49;
  char v50;
  int *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  id *v60;
  uint64_t *v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  id *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  unsigned __int8 v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  __int128 v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  char *v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  int *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  id *v152;
  char *v153;
  char *v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  id *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  unsigned __int8 v170;
  int *v171;
  uint64_t v172;
  id *v173;
  char *v174;
  char *v175;
  unsigned int v176;
  __int128 v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  __int128 v185;
  int *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  id *v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  unsigned __int8 v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  _QWORD *v208;
  __int128 v209;
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  _QWORD *v213;
  uint64_t v214;
  _QWORD *v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  void (*v221)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v223;
  int *__src;
  char *__srca;
  char *__dsta;
  void *__dstb;
  uint64_t *__dstc;
  char *__dst;
  uint64_t *__dstd;
  id *v231;
  int *v232;
  int *v233;
  int *v234;

  if (a1 != a2)
  {
    sub_23F125D68(a1, type metadata accessor for SessionDebuggerSubscriptionEvent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_23F267D84();
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
    v6(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent(0);
      v6(a1 + *(int *)(v7 + 20), a2 + *(int *)(v7 + 20), v5);
      v8 = *(int *)(v7 + 24);
      v9 = (_QWORD *)(a1 + v8);
      v10 = (_QWORD *)(a2 + v8);
      type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v6((uint64_t)v9, (uint64_t)v10, v5);
        v11 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
        *(_QWORD *)((char *)v9 + *(int *)(v11 + 20)) = *(_QWORD *)((char *)v10 + *(int *)(v11 + 20));
        swift_bridgeObjectRetain();
      }
      else
      {
        *v9 = *v10;
        v17 = v10 + 1;
        v18 = v10[4];
        v9[4] = v18;
        v9[5] = v10[5];
        v19 = **(void (***)(_QWORD *, _QWORD *, uint64_t))(v18 - 8);
        swift_bridgeObjectRetain();
        v19(v9 + 1, v17, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v12 = (int *)type metadata accessor for SessionServerMessage(0);
      v6(a1 + v12[5], a2 + v12[5], v5);
      v13 = v12[6];
      v14 = (void *)(a1 + v13);
      v15 = (const void *)(a2 + v13);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a2 + v13, 1, v5))
      {
        v16 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v14, (uint64_t)v15, v5);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v5);
      }
      v20 = v12[7];
      v21 = (_QWORD *)(a1 + v20);
      v22 = (_QWORD *)(a2 + v20);
      *v21 = *v22;
      v21[1] = v22[1];
      v23 = v12[8];
      v24 = (uint64_t *)(a1 + v23);
      v25 = (id *)(a2 + v23);
      v26 = type metadata accessor for MessagePayload(0);
      swift_bridgeObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v27 = type metadata accessor for MessagePayload.RequestContent(0);
          v28 = swift_getEnumCaseMultiPayload();
          v232 = v12;
          switch(v28)
          {
            case 3:
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v25, 1, v5))
              {
                v142 = sub_23F1217E8(&qword_256DFEB98);
                memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
              }
              else
              {
                v6((uint64_t)v24, (uint64_t)v25, v5);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v24, 0, 1, v5);
              }
              v156 = type metadata accessor for SystemPromptResolution(0);
              v6((uint64_t)v24 + *(int *)(v156 + 20), (uint64_t)v25 + *(int *)(v156 + 20), v5);
              v223 = v156;
              v157 = *(int *)(v156 + 24);
              __srca = (char *)v24 + v157;
              v158 = (char *)v25 + v157;
              v159 = type metadata accessor for SystemPromptResolution.UserAction(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                v160 = sub_23F268078();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(__srca, v158, v160);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(__srca, v158, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
              }
              v161 = *(int *)(v223 + 28);
              v162 = (char *)v24 + v161;
              v163 = (char *)v25 + v161;
              *(_DWORD *)v162 = *(_DWORD *)v163;
              *((_QWORD *)v162 + 1) = *((_QWORD *)v163 + 1);
              *((_QWORD *)v162 + 2) = *((_QWORD *)v163 + 2);
              v164 = *(int *)(v223 + 32);
              v165 = v25;
              v166 = (char *)v24 + v164;
              v167 = (char *)v165 + v164;
              v168 = *(_QWORD *)v167;
              v169 = *((_QWORD *)v167 + 1);
              v170 = v167[16];
              swift_bridgeObjectRetain();
              sub_23F135C7C(v168, v169, v170);
              *(_QWORD *)v166 = v168;
              *((_QWORD *)v166 + 1) = v169;
              v166[16] = v170;
              v25 = v165;
              break;
            case 2:
              *v24 = (uint64_t)*v25;
              swift_bridgeObjectRetain();
              break;
            case 1:
              *v24 = (uint64_t)*v25;
              v24[1] = (uint64_t)v25[1];
              swift_bridgeObjectRetain();
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
              goto LABEL_96;
          }
          swift_storeEnumTagMultiPayload();
LABEL_96:
          v171 = (int *)type metadata accessor for MessagePayload.Request(0);
          *(uint64_t *)((char *)v24 + v171[5]) = *(uint64_t *)((char *)v25 + v171[5]);
          *((_BYTE *)v24 + v171[6]) = *((_BYTE *)v25 + v171[6]);
          v172 = v171[7];
          v173 = v25;
          v174 = (char *)v24 + v172;
          v231 = v173;
          v175 = (char *)v173 + v172;
          v176 = *((unsigned __int8 *)v173 + v172 + 16);
          swift_bridgeObjectRetain();
          if (v176 <= 0xFD)
          {
            __dstc = v24;
            v179 = *(_QWORD *)v175;
            v178 = *((_QWORD *)v175 + 1);
            sub_23F135C9C(*(_QWORD *)v175, v178, v176);
            *(_QWORD *)v174 = v179;
            *((_QWORD *)v174 + 1) = v178;
            v24 = __dstc;
            v174[16] = v176;
          }
          else
          {
            v177 = *(_OWORD *)v175;
            v174[16] = v175[16];
            *(_OWORD *)v174 = v177;
          }
          v180 = v171[8];
          v181 = (char *)v24 + v180;
          v182 = (char *)v231 + v180;
          v12 = v232;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v231 + v180, 1, v5))
          {
            v183 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v181, v182, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v181, (uint64_t)v182, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v181, 0, 1, v5);
          }
          v184 = v171[9];
          v121 = (uint64_t *)((char *)v24 + v184);
          v122 = (id *)((char *)v231 + v184);
          if (v122[1])
          {
LABEL_71:
            *v121 = *v122;
            v121[1] = v122[1];
            v121[2] = v122[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v185 = *(_OWORD *)v122;
            v121[2] = v122[2];
            *(_OWORD *)v121 = v185;
          }
          goto LABEL_121;
        case 4u:
          *v24 = (uint64_t)*v25;
          v24[1] = (uint64_t)v25[1];
          v29 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
          __dsta = (char *)v24 + v29;
          v30 = (char *)v25 + v29;
          v31 = sub_23F268078();
          v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
          swift_bridgeObjectRetain();
          v32(__dsta, v30, v31);
          goto LABEL_121;
        case 5u:
          v33 = *v25;
          v34 = v24;
          v35 = *((_BYTE *)v25 + 8);
          sub_23F131158(*v25);
          *v34 = (uint64_t)v33;
          *((_BYTE *)v34 + 8) = v35;
          v34[2] = (uint64_t)v25[2];
          swift_bridgeObjectRetain();
          goto LABEL_121;
        case 6u:
        case 9u:
        case 0x20u:
        case 0x21u:
        case 0x28u:
          *v24 = (uint64_t)*v25;
          v24[1] = (uint64_t)v25[1];
          v24[2] = (uint64_t)v25[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_121;
        case 7u:
          *v24 = (uint64_t)*v25;
          v24[1] = (uint64_t)v25[1];
          v24[2] = (uint64_t)v25[2];
          *((_BYTE *)v24 + 24) = *((_BYTE *)v25 + 24);
          v24[4] = (uint64_t)v25[4];
          v24[5] = (uint64_t)v25[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_121;
        case 8u:
          *v24 = (uint64_t)*v25;
          *((_BYTE *)v24 + 8) = *((_BYTE *)v25 + 8);
          v24[2] = (uint64_t)v25[2];
          v24[3] = (uint64_t)v25[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_121;
        case 0xAu:
        case 0xBu:
        case 0x13u:
        case 0x18u:
        case 0x19u:
        case 0x1Bu:
          *v24 = (uint64_t)*v25;
          v24[1] = (uint64_t)v25[1];
          swift_bridgeObjectRetain();
          goto LABEL_121;
        case 0xCu:
          *v24 = (uint64_t)*v25;
          swift_bridgeObjectRetain();
          goto LABEL_121;
        case 0xDu:
          v6((uint64_t)v24, (uint64_t)v25, v5);
          v36 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
          v6((uint64_t)v24 + v36[5], (uint64_t)v25 + v36[5], v5);
          v37 = v36[6];
          v38 = (uint64_t *)((char *)v24 + v37);
          v39 = (id *)((char *)v25 + v37);
          *v38 = *v39;
          v38[1] = v39[1];
          v40 = v36[7];
          v41 = (uint64_t *)((char *)v24 + v40);
          v42 = (id *)((char *)v25 + v40);
          *v41 = *v42;
          v41[1] = v42[1];
          v43 = v36[8];
          v44 = (uint64_t *)((char *)v24 + v43);
          v45 = (id *)((char *)v25 + v43);
          *v44 = *v45;
          v44[1] = v45[1];
          *(uint64_t *)((char *)v24 + v36[9]) = *(uint64_t *)((char *)v25 + v36[9]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_121;
        case 0xEu:
          v6((uint64_t)v24, (uint64_t)v25, v5);
          v46 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
          v47 = (char *)v24 + v46;
          v48 = (char *)v25 + v46;
          type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v49 = *(id *)v48;
            v50 = v48[8];
            sub_23F131158(*(id *)v48);
            *(_QWORD *)v47 = v49;
            v47[8] = v50;
          }
          else
          {
            v103 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v47, v48, v103);
          }
LABEL_53:
          swift_storeEnumTagMultiPayload();
          goto LABEL_121;
        case 0xFu:
          *(_DWORD *)v24 = *(_DWORD *)v25;
          v24[1] = (uint64_t)v25[1];
          v24[2] = (uint64_t)v25[2];
          v24[3] = (uint64_t)v25[3];
          v24[4] = (uint64_t)v25[4];
          v24[5] = (uint64_t)v25[5];
          v24[6] = (uint64_t)v25[6];
          v24[7] = (uint64_t)v25[7];
          v24[8] = (uint64_t)v25[8];
          *((_BYTE *)v24 + 72) = *((_BYTE *)v25 + 72);
          v24[10] = (uint64_t)v25[10];
          v24[11] = (uint64_t)v25[11];
          v24[12] = (uint64_t)v25[12];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_121;
        case 0x10u:
          v6((uint64_t)v24, (uint64_t)v25, v5);
          v51 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
          v52 = v51[5];
          v53 = (uint64_t *)((char *)v24 + v52);
          v54 = (id *)((char *)v25 + v52);
          *v53 = *v54;
          v53[1] = v54[1];
          *(uint64_t *)((char *)v24 + v51[6]) = *(uint64_t *)((char *)v25 + v51[6]);
          *(uint64_t *)((char *)v24 + v51[7]) = *(uint64_t *)((char *)v25 + v51[7]);
          v55 = v51[8];
          v56 = (uint64_t *)((char *)v24 + v55);
          v57 = (id *)((char *)v25 + v55);
          *v56 = *v57;
          v56[1] = v57[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_121;
        case 0x11u:
          v6((uint64_t)v24, (uint64_t)v25, v5);
          type metadata accessor for MessagePayload.ClientActionResult(0);
          type metadata accessor for StatementOutcome(0);
          v58 = (char *)&loc_23F13AF9C + 4 * word_23F269EC2[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x12u:
          v59 = (uint64_t)*v25;
          v60 = v25;
          v61 = v24;
          v62 = (unint64_t)v60[1];
          sub_23F131170(v59, v62);
          *v61 = v59;
          v61[1] = v62;
          v63 = (uint64_t)v60[2];
          v64 = (unint64_t)v60[3];
          sub_23F131170(v63, v64);
          v61[2] = v63;
          v61[3] = v64;
          v61[4] = (uint64_t)v60[4];
          v61[5] = (uint64_t)v60[5];
          swift_bridgeObjectRetain();
          goto LABEL_121;
        case 0x14u:
          v6((uint64_t)v24, (uint64_t)v25, v5);
          v65 = *(int *)(type metadata accessor for SystemPrompt(0) + 20);
          v66 = (uint64_t *)((char *)v24 + v65);
          v67 = (id *)((char *)v25 + v65);
          *v66 = *v67;
          v66[1] = v67[1];
          type metadata accessor for SystemPrompt.Prompt(0);
          swift_bridgeObjectRetain();
          v68 = (char *)&loc_23F13B120 + 4 * word_23F269EBA[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x15u:
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v25, 1, v5))
          {
            v69 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v24, (uint64_t)v25, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v24, 0, 1, v5);
          }
          v104 = (int *)type metadata accessor for SystemPromptResolution(0);
          v6((uint64_t)v24 + v104[5], (uint64_t)v25 + v104[5], v5);
          v105 = v104[6];
          v106 = (char *)v24 + v105;
          v107 = (char *)v25 + v105;
          v108 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v109 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v106, v107, v109);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
          }
          v110 = v104[7];
          v111 = (char *)v24 + v110;
          v112 = (char *)v25 + v110;
          *(_DWORD *)v111 = *(_DWORD *)v112;
          *((_QWORD *)v111 + 1) = *((_QWORD *)v112 + 1);
          *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
          v113 = v104[8];
          v114 = v25;
          v115 = (char *)v24 + v113;
          v116 = (char *)v114 + v113;
          v117 = *(_QWORD *)v116;
          v118 = *((_QWORD *)v116 + 1);
          v119 = v116[16];
          swift_bridgeObjectRetain();
          sub_23F135C7C(v117, v118, v119);
          *(_QWORD *)v115 = v117;
          *((_QWORD *)v115 + 1) = v118;
          v115[16] = v119;
          swift_storeEnumTagMultiPayload();
          goto LABEL_122;
        case 0x16u:
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v25, 1, v5))
          {
            v70 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v24, (uint64_t)v25, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v24, 0, 1, v5);
          }
          v124 = type metadata accessor for ActionResponse(0);
          v125 = *(int *)(v124 + 20);
          v126 = (uint64_t *)((char *)v24 + v125);
          v127 = (id *)((char *)v25 + v125);
          *v126 = *v127;
          v126[1] = v127[1];
          v128 = *(int *)(v124 + 24);
          v129 = (uint64_t *)((char *)v24 + v128);
          v130 = (id *)((char *)v25 + v128);
          *v129 = *v130;
          v129[1] = v130[1];
          type metadata accessor for ActionOutcome(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v131 = (char *)&loc_23F13B9D8 + 4 * word_23F269EA4[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x17u:
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v25, 1, v5))
          {
            v71 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v24, (uint64_t)v25, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v24, 0, 1, v5);
          }
          __src = (int *)type metadata accessor for SystemResponse(0);
          v132 = __src[5];
          v133 = (char *)v24 + v132;
          v134 = (char *)v25 + v132;
          if (*((_QWORD *)v134 + 2) == 1)
          {
            v135 = *(_OWORD *)v134;
            *((_QWORD *)v133 + 2) = *((_QWORD *)v134 + 2);
            *(_OWORD *)v133 = v135;
          }
          else
          {
            *(_DWORD *)v133 = *(_DWORD *)v134;
            *((_QWORD *)v133 + 1) = *((_QWORD *)v134 + 1);
            *((_QWORD *)v133 + 2) = *((_QWORD *)v134 + 2);
            swift_bridgeObjectRetain();
          }
          v136 = __src[6];
          v137 = (uint64_t *)((char *)v24 + v136);
          v138 = (id *)((char *)v25 + v136);
          *v137 = *v138;
          v137[1] = v138[1];
          type metadata accessor for StatementOutcome(0);
          swift_bridgeObjectRetain();
          v139 = (char *)&loc_23F13BB50 + 4 * word_23F269E8E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x1Cu:
          *v24 = (uint64_t)*v25;
          v24[1] = (uint64_t)v25[1];
          v72 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
          v73 = *(int *)(v72 + 20);
          v74 = (char *)v24 + v73;
          v75 = (char *)v25 + v73;
          swift_bridgeObjectRetain();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v75, 1, v5))
          {
            v76 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v74, (uint64_t)v75, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v74, 0, 1, v5);
          }
          v140 = *(int *)(v72 + 24);
          v121 = (uint64_t *)((char *)v24 + v140);
          v122 = (id *)((char *)v25 + v140);
          if (v122[1])
            goto LABEL_71;
          v141 = *(_OWORD *)v122;
          v121[2] = v122[2];
          *(_OWORD *)v121 = v141;
          goto LABEL_121;
        case 0x1Du:
          *v24 = (uint64_t)*v25;
          v77 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
          v78 = *(int *)(v77 + 20);
          v79 = (char *)v24 + v78;
          v80 = (char *)v25 + v78;
          swift_bridgeObjectRetain();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v80, 1, v5))
          {
            v81 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v79, (uint64_t)v80, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v79, 0, 1, v5);
          }
          v120 = *(int *)(v77 + 24);
          v121 = (uint64_t *)((char *)v24 + v120);
          v122 = (id *)((char *)v25 + v120);
          if (v122[1])
            goto LABEL_71;
          v123 = *(_OWORD *)v122;
          v121[2] = v122[2];
          *(_OWORD *)v121 = v123;
          goto LABEL_121;
        case 0x1Eu:
          v82 = type metadata accessor for MessagePayload.RequestContent(0);
          v83 = swift_getEnumCaseMultiPayload();
          v233 = v12;
          switch(v83)
          {
            case 3:
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v25, 1, v5))
              {
                v143 = sub_23F1217E8(&qword_256DFEB98);
                memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
              }
              else
              {
                v6((uint64_t)v24, (uint64_t)v25, v5);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v24, 0, 1, v5);
              }
              v186 = (int *)type metadata accessor for SystemPromptResolution(0);
              v6((uint64_t)v24 + v186[5], (uint64_t)v25 + v186[5], v5);
              v187 = v186[6];
              __dst = (char *)v24 + v187;
              v188 = (char *)v25 + v187;
              v189 = type metadata accessor for SystemPromptResolution.UserAction(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                v190 = sub_23F268078();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(__dst, v188, v190);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(__dst, v188, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
              }
              v191 = v186[7];
              v192 = (char *)v24 + v191;
              v193 = (char *)v25 + v191;
              *(_DWORD *)v192 = *(_DWORD *)v193;
              *((_QWORD *)v192 + 1) = *((_QWORD *)v193 + 1);
              *((_QWORD *)v192 + 2) = *((_QWORD *)v193 + 2);
              v194 = v186[8];
              v195 = v25;
              v196 = (char *)v24 + v194;
              v197 = (char *)v195 + v194;
              __dstd = v24;
              v198 = *(_QWORD *)v197;
              v199 = *((_QWORD *)v197 + 1);
              v200 = v197[16];
              swift_bridgeObjectRetain();
              sub_23F135C7C(v198, v199, v200);
              *(_QWORD *)v196 = v198;
              *((_QWORD *)v196 + 1) = v199;
              v24 = __dstd;
              v196[16] = v200;
              v25 = v195;
              break;
            case 2:
              *v24 = (uint64_t)*v25;
              swift_bridgeObjectRetain();
              break;
            case 1:
              *v24 = (uint64_t)*v25;
              v24[1] = (uint64_t)v25[1];
              swift_bridgeObjectRetain();
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
              goto LABEL_111;
          }
          swift_storeEnumTagMultiPayload();
LABEL_111:
          v201 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
          v202 = *(int *)(v201 + 20);
          v203 = (char *)v24 + v202;
          v204 = (char *)v25 + v202;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v25 + v202, 1, v5))
          {
            v205 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v203, (uint64_t)v204, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v203, 0, 1, v5);
          }
          v206 = *(int *)(v201 + 24);
          v207 = (uint64_t *)((char *)v24 + v206);
          v208 = (id *)((char *)v25 + v206);
          if (v208[1])
          {
            *v207 = *v208;
            v207[1] = v208[1];
            v207[2] = v208[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v209 = *(_OWORD *)v208;
            v207[2] = v208[2];
            *(_OWORD *)v207 = v209;
          }
          v12 = v233;
LABEL_121:
          swift_storeEnumTagMultiPayload();
LABEL_122:
          v214 = v12[9];
          v215 = (_QWORD *)(a1 + v214);
          v216 = (_QWORD *)(a2 + v214);
          *v215 = *v216;
          v215[1] = v216[1];
          v217 = v12[10];
          v218 = a1 + v217;
          v219 = a2 + v217;
          v220 = sub_23F267D24();
          v221 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v220 - 8) + 16);
          swift_bridgeObjectRetain();
          v221(v218, v219, v220);
          break;
        case 0x1Fu:
          type metadata accessor for StatementOutcome(0);
          v84 = (char *)&loc_23F13B40C + 4 * word_23F269E78[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x22u:
          v6((uint64_t)v24, (uint64_t)v25, v5);
          v85 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
          *((_BYTE *)v24 + *(int *)(v85 + 20)) = *((_BYTE *)v25 + *(int *)(v85 + 20));
          v86 = *(int *)(v85 + 24);
          v87 = (char *)v24 + v86;
          v88 = (char *)v25 + v86;
          *(_DWORD *)v87 = *(_DWORD *)v88;
          *((_QWORD *)v87 + 1) = *((_QWORD *)v88 + 1);
          *((_QWORD *)v87 + 2) = *((_QWORD *)v88 + 2);
          swift_bridgeObjectRetain();
          goto LABEL_121;
        case 0x23u:
          v6((uint64_t)v24, (uint64_t)v25, v5);
          v89 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
          v90 = (uint64_t *)((char *)v24 + v89);
          v91 = (id *)((char *)v25 + v89);
          *v90 = *v91;
          v90[1] = v91[1];
          v90[2] = v91[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_121;
        case 0x24u:
          v92 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 3u:
            case 5u:
            case 7u:
            case 8u:
              v6((uint64_t)v24, (uint64_t)v25, v5);
              goto LABEL_86;
            case 2u:
              v6((uint64_t)v24, (uint64_t)v25, v5);
              v144 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
              *(uint64_t *)((char *)v24 + v144[5]) = *(uint64_t *)((char *)v25 + v144[5]);
              *(uint64_t *)((char *)v24 + v144[6]) = *(uint64_t *)((char *)v25 + v144[6]);
              v145 = v144[7];
              v146 = (char *)v24 + v145;
              v147 = (char *)v25 + v145;
              swift_bridgeObjectRetain();
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v147, 1, v5))
              {
                v148 = sub_23F1217E8(&qword_256DFEB98);
                memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
              }
              else
              {
                v6((uint64_t)v146, (uint64_t)v147, v5);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v146, 0, 1, v5);
              }
              v211 = v144[8];
              v212 = (uint64_t *)((char *)v24 + v211);
              v213 = (id *)((char *)v25 + v211);
              *v212 = *v213;
              v212[1] = v213[1];
              *(uint64_t *)((char *)v24 + v144[9]) = *(uint64_t *)((char *)v25 + v144[9]);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              goto LABEL_121;
            case 4u:
              v6((uint64_t)v24, (uint64_t)v25, v5);
              v149 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
              *(uint64_t *)((char *)v24 + *(int *)(v149 + 20)) = *(uint64_t *)((char *)v25 + *(int *)(v149 + 20));
              swift_bridgeObjectRetain();
LABEL_86:
              swift_storeEnumTagMultiPayload();
              break;
            case 9u:
              v6((uint64_t)v24, (uint64_t)v25, v5);
              v150 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
              v6((uint64_t)v24 + *(int *)(v150 + 20), (uint64_t)v25 + *(int *)(v150 + 20), v5);
              v151 = *(int *)(v150 + 24);
              v152 = v25;
              v153 = (char *)v24 + v151;
              v154 = (char *)v152 + v151;
              v155 = *((_QWORD *)v154 + 1);
              if (v155 >> 60 == 15)
              {
                *(_OWORD *)v153 = *(_OWORD *)v154;
              }
              else
              {
                v210 = *(_QWORD *)v154;
                sub_23F131170(*(_QWORD *)v154, *((_QWORD *)v154 + 1));
                *(_QWORD *)v153 = v210;
                *((_QWORD *)v153 + 1) = v155;
              }
              goto LABEL_53;
            default:
              memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
              break;
          }
          goto LABEL_121;
        case 0x25u:
          type metadata accessor for SessionServerDebuggerEvent.Payload(0);
          v93 = (char *)&loc_23F13B640 + 4 * word_23F269E48[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x26u:
          v95 = (uint64_t)*v25;
          v94 = (uint64_t)v25[1];
          __dstb = (void *)v94;
          v96 = (uint64_t)v25[2];
          v97 = (uint64_t)v25[3];
          v98 = v25;
          v100 = (uint64_t)v25[4];
          v99 = (uint64_t)v25[5];
          v234 = v12;
          v101 = (uint64_t)v98[6];
          v102 = (uint64_t)v98[7];
          sub_23F135CF4(v95, v94, v96, v97, v100, v99, v101);
          *v24 = v95;
          v24[1] = (uint64_t)__dstb;
          v24[2] = v96;
          v24[3] = v97;
          v24[4] = v100;
          v24[5] = v99;
          v24[6] = v101;
          v24[7] = v102;
          v12 = v234;
          goto LABEL_121;
        case 0x27u:
          *v24 = (uint64_t)*v25;
          v24[1] = (uint64_t)v25[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_121;
        default:
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
          goto LABEL_122;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for SessionDebuggerSubscriptionEvent(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int *v91;
  uint64_t v92;
  char *v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  int *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  int *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  int *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  int *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  char *v199;
  int *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  char *v217;
  int *v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  int *v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  int *v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  int *v247;
  uint64_t v248;
  uint64_t v249;
  _OWORD *v250;
  _OWORD *v251;
  __int128 v252;
  __int128 v253;
  uint64_t v254;
  _OWORD *v255;
  _OWORD *v256;
  __int128 v257;
  __int128 v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  char *v272;
  char *__dst;
  int *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;
  char *__dstg;
  char *__dsth;
  char *__dsti;
  _QWORD *v283;
  char *v284;
  _QWORD *v285;
  _QWORD *v286;
  char *v287;
  char *v288;
  char *v289;
  char *v290;
  char *v291;
  int *v292;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_23F267D84();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
  v6(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent(0);
    v6(a1 + *(int *)(v7 + 20), a2 + *(int *)(v7 + 20), v5);
    v8 = *(int *)(v7 + 24);
    v9 = (char *)(a1 + v8);
    v10 = (char *)(a2 + v8);
    v11 = type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6((uint64_t)v9, (uint64_t)v10, v5);
      v12 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      *(_QWORD *)&v9[*(int *)(v12 + 20)] = *(_QWORD *)&v10[*(int *)(v12 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    goto LABEL_141;
  }
  v13 = (int *)type metadata accessor for SessionServerMessage(0);
  v6(a1 + v13[5], a2 + v13[5], v5);
  v14 = v13[6];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a2 + v14, 1, v5))
  {
    v17 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v6((uint64_t)v15, (uint64_t)v16, v5);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v15, 0, 1, v5);
  }
  *(_OWORD *)(a1 + v13[7]) = *(_OWORD *)(a2 + v13[7]);
  v18 = v13[8];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  v21 = type metadata accessor for MessagePayload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v22 = type metadata accessor for MessagePayload.RequestContent(0);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v5))
        {
          v23 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          v6((uint64_t)v19, (uint64_t)v20, v5);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v5);
        }
        v114 = (int *)type metadata accessor for SystemPromptResolution(0);
        v6((uint64_t)v19 + v114[5], (uint64_t)v20 + v114[5], v5);
        v115 = v114[6];
        v288 = (char *)v19 + v115;
        v116 = (char *)v20 + v115;
        v117 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v118 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v288, v116, v118);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v288, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
        }
        v119 = v114[7];
        v120 = (char *)v19 + v119;
        v121 = (char *)v20 + v119;
        *(_OWORD *)v120 = *(_OWORD *)v121;
        *((_QWORD *)v120 + 2) = *((_QWORD *)v121 + 2);
        v122 = v114[8];
        v123 = (char *)v19 + v122;
        v124 = (char *)v20 + v122;
        v123[16] = v124[16];
        *(_OWORD *)v123 = *(_OWORD *)v124;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      v125 = (int *)type metadata accessor for MessagePayload.Request(0);
      *(_QWORD *)((char *)v19 + v125[5]) = *(_QWORD *)((char *)v20 + v125[5]);
      *((_BYTE *)v19 + v125[6]) = *((_BYTE *)v20 + v125[6]);
      v126 = v125[7];
      v127 = (char *)v19 + v126;
      v128 = (char *)v20 + v126;
      *(_OWORD *)v127 = *(_OWORD *)v128;
      v127[16] = v128[16];
      v129 = v125[8];
      v130 = (char *)v19 + v129;
      v131 = (char *)v20 + v129;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v129, 1, v5))
      {
        v132 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v130, (uint64_t)v131, v5);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v130, 0, 1, v5);
      }
      v133 = v125[9];
      v134 = (char *)v19 + v133;
      v135 = (char *)v20 + v133;
      *(_OWORD *)v134 = *(_OWORD *)v135;
      *((_QWORD *)v134 + 2) = *((_QWORD *)v135 + 2);
      goto LABEL_139;
    case 4u:
      *v19 = *v20;
      v24 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
      v25 = (char *)v19 + v24;
      v26 = (char *)v20 + v24;
      v27 = sub_23F268078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      goto LABEL_139;
    case 0xDu:
      v6((uint64_t)v19, (uint64_t)v20, v5);
      v28 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
      v6((uint64_t)v19 + v28[5], (uint64_t)v20 + v28[5], v5);
      *(_OWORD *)((char *)v19 + v28[6]) = *(_OWORD *)((char *)v20 + v28[6]);
      *(_OWORD *)((char *)v19 + v28[7]) = *(_OWORD *)((char *)v20 + v28[7]);
      *(_OWORD *)((char *)v19 + v28[8]) = *(_OWORD *)((char *)v20 + v28[8]);
      *(_QWORD *)((char *)v19 + v28[9]) = *(_QWORD *)((char *)v20 + v28[9]);
      goto LABEL_139;
    case 0xEu:
      v6((uint64_t)v19, (uint64_t)v20, v5);
      v29 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
      v30 = (char *)v19 + v29;
      v31 = (char *)v20 + v29;
      v32 = type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        v78 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v30, v31, v78);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_139;
    case 0x10u:
      v6((uint64_t)v19, (uint64_t)v20, v5);
      v33 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
      *(_OWORD *)((char *)v19 + v33[5]) = *(_OWORD *)((char *)v20 + v33[5]);
      *(_QWORD *)((char *)v19 + v33[6]) = *(_QWORD *)((char *)v20 + v33[6]);
      *(_QWORD *)((char *)v19 + v33[7]) = *(_QWORD *)((char *)v20 + v33[7]);
      *(_OWORD *)((char *)v19 + v33[8]) = *(_OWORD *)((char *)v20 + v33[8]);
      goto LABEL_139;
    case 0x11u:
      v6((uint64_t)v19, (uint64_t)v20, v5);
      v34 = type metadata accessor for MessagePayload.ClientActionResult(0);
      v35 = *(int *)(v34 + 20);
      v36 = (char *)v19 + v35;
      v37 = (char *)v20 + v35;
      v283 = (_QWORD *)type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v270 = v34;
          v38 = sub_23F268078();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
          v267 = type metadata accessor for ActionSuccess(0);
          v39 = *(int *)(v267 + 20);
          __dst = &v36[v39];
          v40 = &v37[v39];
          v264 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v40, 1, v264))
          {
            v41 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
          }
          else
          {
            v6((uint64_t)__dst, (uint64_t)v40, v5);
            *(_OWORD *)&__dst[*(int *)(v264 + 20)] = *(_OWORD *)&v40[*(int *)(v264 + 20)];
            *(_OWORD *)&__dst[*(int *)(v264 + 24)] = *(_OWORD *)&v40[*(int *)(v264 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v264);
          }
          v36[*(int *)(v267 + 24)] = v37[*(int *)(v267 + 24)];
          swift_storeEnumTagMultiPayload();
          v34 = v270;
          break;
        case 3u:
          *(_OWORD *)v36 = *(_OWORD *)v37;
          v152 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v153 = v34;
          v154 = &v36[v152];
          v155 = &v37[v152];
          v156 = sub_23F268078();
          v157 = v154;
          v34 = v153;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(v157, v155, v156);
          goto LABEL_90;
        case 4u:
          *(_OWORD *)v36 = *(_OWORD *)v37;
          *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
          v36[24] = v37[24];
          v158 = v34;
          v159 = (int *)type metadata accessor for ParameterConfirmation(0);
          v160 = v159[6];
          v161 = &v36[v160];
          __dstd = &v37[v160];
          v162 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v161, __dstd, v162);
          *(_OWORD *)&v36[v159[7]] = *(_OWORD *)&v37[v159[7]];
          v163 = v159[8];
          v34 = v158;
          *(_OWORD *)&v36[v163] = *(_OWORD *)&v37[v163];
          goto LABEL_90;
        case 6u:
          *(_OWORD *)v36 = *(_OWORD *)v37;
          v164 = v34;
          v165 = type metadata accessor for ParameterNotAllowed(0);
          v166 = *(int *)(v165 + 20);
          v167 = &v36[v166];
          __dste = &v37[v166];
          v168 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v167, __dste, v168);
          v169 = *(int *)(v165 + 24);
          v34 = v164;
          v36[v169] = v37[v169];
          goto LABEL_90;
        case 7u:
          *(_OWORD *)v36 = *(_OWORD *)v37;
          v170 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v171 = v34;
          v172 = &v36[v170];
          v173 = &v37[v170];
          v174 = sub_23F268078();
          v175 = v172;
          v34 = v171;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v175, v173, v174);
LABEL_90:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v36, v37, *(_QWORD *)(*(v283 - 1) + 64));
          break;
      }
      memcpy((char *)v19 + *(int *)(v34 + 24), (char *)v20 + *(int *)(v34 + 24), 0xBAuLL);
      goto LABEL_139;
    case 0x14u:
      v6((uint64_t)v19, (uint64_t)v20, v5);
      v56 = type metadata accessor for SystemPrompt(0);
      *(_OWORD *)((char *)v19 + *(int *)(v56 + 20)) = *(_OWORD *)((char *)v20 + *(int *)(v56 + 20));
      v57 = *(int *)(v56 + 24);
      v58 = (char *)v19 + v57;
      v59 = (char *)v20 + v57;
      v60 = type metadata accessor for SystemPrompt.Prompt(0);
      v61 = swift_getEnumCaseMultiPayload();
      if (v61 == 2)
      {
        *(_OWORD *)v58 = *(_OWORD *)v59;
        *((_QWORD *)v58 + 2) = *((_QWORD *)v59 + 2);
        v58[24] = v59[24];
        v110 = (int *)type metadata accessor for ParameterConfirmation(0);
        v111 = v110[6];
        v112 = &v58[v111];
        v287 = &v59[v111];
        v113 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v112, v287, v113);
        *(_OWORD *)&v58[v110[7]] = *(_OWORD *)&v59[v110[7]];
        *(_OWORD *)&v58[v110[8]] = *(_OWORD *)&v59[v110[8]];
        goto LABEL_65;
      }
      if (v61 == 1)
      {
        *(_OWORD *)v58 = *(_OWORD *)v59;
        v62 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        v63 = &v58[v62];
        v64 = &v59[v62];
        v65 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
LABEL_65:
        swift_storeEnumTagMultiPayload();
        goto LABEL_139;
      }
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
LABEL_139:
      swift_storeEnumTagMultiPayload();
LABEL_140:
      *(_OWORD *)(a1 + v13[9]) = *(_OWORD *)(a2 + v13[9]);
      v259 = v13[10];
      v260 = a1 + v259;
      v261 = a2 + v259;
      v262 = sub_23F267D24();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v262 - 8) + 32))(v260, v261, v262);
LABEL_141:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x15u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v5))
      {
        v66 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v19, (uint64_t)v20, v5);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v5);
      }
      v79 = (int *)type metadata accessor for SystemPromptResolution(0);
      v6((uint64_t)v19 + v79[5], (uint64_t)v20 + v79[5], v5);
      v80 = v79[6];
      v81 = (char *)v19 + v80;
      v82 = (char *)v20 + v80;
      v83 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v84 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v81, v82, v84);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      v85 = v79[7];
      v86 = (char *)v19 + v85;
      v87 = (char *)v20 + v85;
      *(_OWORD *)v86 = *(_OWORD *)v87;
      *((_QWORD *)v86 + 2) = *((_QWORD *)v87 + 2);
      v88 = v79[8];
      v89 = (char *)v19 + v88;
      v90 = (char *)v20 + v88;
      v89[16] = v90[16];
      *(_OWORD *)v89 = *(_OWORD *)v90;
      goto LABEL_139;
    case 0x16u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v5))
      {
        v67 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v19, (uint64_t)v20, v5);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v5);
      }
      v91 = (int *)type metadata accessor for ActionResponse(0);
      *(_OWORD *)((char *)v19 + v91[5]) = *(_OWORD *)((char *)v20 + v91[5]);
      *(_OWORD *)((char *)v19 + v91[6]) = *(_OWORD *)((char *)v20 + v91[6]);
      v92 = v91[7];
      v93 = (char *)v19 + v92;
      v94 = (char *)v20 + v92;
      v285 = (_QWORD *)type metadata accessor for ActionOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v95 = sub_23F268078();
          (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v93, v94, v95);
          v268 = type metadata accessor for ActionSuccess(0);
          v271 = v93;
          v96 = *(int *)(v268 + 20);
          __dstb = &v93[v96];
          v97 = &v94[v96];
          v265 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v97, 1, v265))
          {
            v98 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(__dstb, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
          }
          else
          {
            v6((uint64_t)__dstb, (uint64_t)v97, v5);
            *(_OWORD *)&__dstb[*(int *)(v265 + 20)] = *(_OWORD *)&v97[*(int *)(v265 + 20)];
            *(_OWORD *)&__dstb[*(int *)(v265 + 24)] = *(_OWORD *)&v97[*(int *)(v265 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dstb, 0, 1, v265);
          }
          v271[*(int *)(v268 + 24)] = v94[*(int *)(v268 + 24)];
          goto LABEL_133;
        case 3u:
          *(_OWORD *)v93 = *(_OWORD *)v94;
          v195 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v196 = &v93[v195];
          v197 = &v94[v195];
          v198 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v196, v197, v198);
          goto LABEL_133;
        case 4u:
          *(_OWORD *)v93 = *(_OWORD *)v94;
          *((_QWORD *)v93 + 2) = *((_QWORD *)v94 + 2);
          v93[24] = v94[24];
          v199 = v93;
          v200 = (int *)type metadata accessor for ParameterConfirmation(0);
          v201 = v200[6];
          v202 = &v199[v201];
          __dstf = &v94[v201];
          v203 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v202, __dstf, v203);
          *(_OWORD *)&v199[v200[7]] = *(_OWORD *)&v94[v200[7]];
          *(_OWORD *)&v199[v200[8]] = *(_OWORD *)&v94[v200[8]];
          goto LABEL_133;
        case 6u:
          *(_OWORD *)v93 = *(_OWORD *)v94;
          v204 = v93;
          v205 = type metadata accessor for ParameterNotAllowed(0);
          v206 = *(int *)(v205 + 20);
          v207 = &v204[v206];
          __dstg = &v94[v206];
          v208 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 32))(v207, __dstg, v208);
          v204[*(int *)(v205 + 24)] = v94[*(int *)(v205 + 24)];
          goto LABEL_133;
        case 7u:
          *(_OWORD *)v93 = *(_OWORD *)v94;
          v209 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v210 = &v93[v209];
          v211 = &v94[v209];
          v212 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v212 - 8) + 32))(v210, v211, v212);
LABEL_133:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v93, v94, *(_QWORD *)(*(v285 - 1) + 64));
          break;
      }
      memcpy((char *)v19 + v91[8], (char *)v20 + v91[8], 0xBAuLL);
      v249 = v91[9];
      v250 = (_OWORD *)((char *)v19 + v249);
      v251 = (_OWORD *)((char *)v20 + v249);
      v252 = v251[1];
      *v250 = *v251;
      v250[1] = v252;
      v253 = v251[3];
      v250[2] = v251[2];
      v250[3] = v253;
      *(_OWORD *)((char *)v19 + v91[10]) = *(_OWORD *)((char *)v20 + v91[10]);
      goto LABEL_139;
    case 0x17u:
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v5))
      {
        v68 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v19, (uint64_t)v20, v5);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v5);
      }
      v99 = (int *)type metadata accessor for SystemResponse(0);
      v100 = v99[5];
      v101 = (char *)v19 + v100;
      v102 = (char *)v20 + v100;
      *(_OWORD *)v101 = *(_OWORD *)v102;
      *((_QWORD *)v101 + 2) = *((_QWORD *)v102 + 2);
      *(_OWORD *)((char *)v19 + v99[6]) = *(_OWORD *)((char *)v20 + v99[6]);
      v103 = v99[7];
      v104 = (char *)v19 + v103;
      v105 = (char *)v20 + v103;
      v286 = (_QWORD *)type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v106 = sub_23F268078();
          (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
          v269 = type metadata accessor for ActionSuccess(0);
          v272 = v104;
          v107 = *(int *)(v269 + 20);
          __dstc = &v104[v107];
          v108 = &v105[v107];
          v266 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v108, 1, v266))
          {
            v109 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(__dstc, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
          }
          else
          {
            v6((uint64_t)__dstc, (uint64_t)v108, v5);
            *(_OWORD *)&__dstc[*(int *)(v266 + 20)] = *(_OWORD *)&v108[*(int *)(v266 + 20)];
            *(_OWORD *)&__dstc[*(int *)(v266 + 24)] = *(_OWORD *)&v108[*(int *)(v266 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dstc, 0, 1, v266);
          }
          v272[*(int *)(v269 + 24)] = v105[*(int *)(v269 + 24)];
          goto LABEL_137;
        case 3u:
          *(_OWORD *)v104 = *(_OWORD *)v105;
          v213 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v214 = &v104[v213];
          v215 = &v105[v213];
          v216 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 32))(v214, v215, v216);
          goto LABEL_137;
        case 4u:
          *(_OWORD *)v104 = *(_OWORD *)v105;
          *((_QWORD *)v104 + 2) = *((_QWORD *)v105 + 2);
          v104[24] = v105[24];
          v217 = v104;
          v218 = (int *)type metadata accessor for ParameterConfirmation(0);
          v219 = v218[6];
          v220 = &v217[v219];
          __dsth = &v105[v219];
          v221 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v221 - 8) + 32))(v220, __dsth, v221);
          *(_OWORD *)&v217[v218[7]] = *(_OWORD *)&v105[v218[7]];
          *(_OWORD *)&v217[v218[8]] = *(_OWORD *)&v105[v218[8]];
          goto LABEL_137;
        case 6u:
          *(_OWORD *)v104 = *(_OWORD *)v105;
          v222 = v104;
          v223 = type metadata accessor for ParameterNotAllowed(0);
          v224 = *(int *)(v223 + 20);
          v225 = &v222[v224];
          __dsti = &v105[v224];
          v226 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 32))(v225, __dsti, v226);
          v222[*(int *)(v223 + 24)] = v105[*(int *)(v223 + 24)];
          goto LABEL_137;
        case 7u:
          *(_OWORD *)v104 = *(_OWORD *)v105;
          v227 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v228 = &v104[v227];
          v229 = &v105[v227];
          v230 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v230 - 8) + 32))(v228, v229, v230);
LABEL_137:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v104, v105, *(_QWORD *)(*(v286 - 1) + 64));
          break;
      }
      v254 = v99[8];
      v255 = (_OWORD *)((char *)v19 + v254);
      v256 = (_OWORD *)((char *)v20 + v254);
      v257 = v256[1];
      *v255 = *v256;
      v255[1] = v257;
      v258 = v256[3];
      v255[2] = v256[2];
      v255[3] = v258;
      *(_OWORD *)((char *)v19 + v99[9]) = *(_OWORD *)((char *)v20 + v99[9]);
      *(_QWORD *)((char *)v19 + v99[10]) = *(_QWORD *)((char *)v20 + v99[10]);
      goto LABEL_139;
    case 0x1Cu:
      *v19 = *v20;
      v42 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
      v43 = *(int *)(v42 + 20);
      v44 = (char *)v19 + v43;
      v45 = (char *)v20 + v43;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v43, 1, v5))
        goto LABEL_82;
      goto LABEL_83;
    case 0x1Du:
      *(_QWORD *)v19 = *(_QWORD *)v20;
      v42 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
      v46 = *(int *)(v42 + 20);
      v44 = (char *)v19 + v46;
      v45 = (char *)v20 + v46;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v46, 1, v5))
        goto LABEL_82;
      goto LABEL_83;
    case 0x1Eu:
      v47 = type metadata accessor for MessagePayload.RequestContent(0);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v5))
        {
          v48 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          v6((uint64_t)v19, (uint64_t)v20, v5);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v5);
        }
        v136 = (int *)type metadata accessor for SystemPromptResolution(0);
        v6((uint64_t)v19 + v136[5], (uint64_t)v20 + v136[5], v5);
        v137 = v136[6];
        v289 = (char *)v19 + v137;
        v138 = (char *)v20 + v137;
        v139 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v140 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v289, v138, v140);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v289, v138, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
        }
        v141 = v136[7];
        v142 = (char *)v19 + v141;
        v143 = (char *)v20 + v141;
        *(_OWORD *)v142 = *(_OWORD *)v143;
        *((_QWORD *)v142 + 2) = *((_QWORD *)v143 + 2);
        v144 = v136[8];
        v145 = (char *)v19 + v144;
        v146 = (char *)v20 + v144;
        v145[16] = v146[16];
        *(_OWORD *)v145 = *(_OWORD *)v146;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      v42 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
      v147 = *(int *)(v42 + 20);
      v44 = (char *)v19 + v147;
      v45 = (char *)v20 + v147;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v147, 1, v5))
      {
LABEL_82:
        v148 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
      }
      else
      {
LABEL_83:
        v6((uint64_t)v44, (uint64_t)v45, v5);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v44, 0, 1, v5);
      }
      v149 = *(int *)(v42 + 24);
      v150 = (char *)v19 + v149;
      v151 = (char *)v20 + v149;
      *(_OWORD *)v150 = *(_OWORD *)v151;
      *((_QWORD *)v150 + 2) = *((_QWORD *)v151 + 2);
      goto LABEL_139;
    case 0x1Fu:
      v49 = type metadata accessor for StatementOutcome(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v50 = sub_23F268078();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v19, v20, v50);
          v51 = type metadata accessor for ActionSuccess(0);
          v52 = *(int *)(v51 + 20);
          __dsta = (int *)v51;
          v284 = (char *)v19 + v52;
          v53 = (char *)v20 + v52;
          v54 = type metadata accessor for ActionSuccess.UndoContext(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v53, 1, v54))
          {
            v55 = sub_23F1217E8(&qword_256DFEBA0);
            memcpy(v284, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v284, (uint64_t)v53, v5);
            *(_OWORD *)&v284[*(int *)(v54 + 20)] = *(_OWORD *)&v53[*(int *)(v54 + 20)];
            *(_OWORD *)&v284[*(int *)(v54 + 24)] = *(_OWORD *)&v53[*(int *)(v54 + 24)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v284, 0, 1, v54);
          }
          *((_BYTE *)v19 + __dsta[6]) = *((_BYTE *)v20 + __dsta[6]);
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          *v19 = *v20;
          v176 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v177 = (char *)v19 + v176;
          v178 = (char *)v20 + v176;
          v179 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(v177, v178, v179);
          goto LABEL_97;
        case 4u:
          *v19 = *v20;
          *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
          *((_BYTE *)v19 + 24) = *((_BYTE *)v20 + 24);
          v180 = (int *)type metadata accessor for ParameterConfirmation(0);
          v181 = v180[6];
          v182 = (char *)v19 + v181;
          v183 = (char *)v20 + v181;
          v184 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v182, v183, v184);
          *(_OWORD *)((char *)v19 + v180[7]) = *(_OWORD *)((char *)v20 + v180[7]);
          *(_OWORD *)((char *)v19 + v180[8]) = *(_OWORD *)((char *)v20 + v180[8]);
          goto LABEL_97;
        case 6u:
          *v19 = *v20;
          v185 = type metadata accessor for ParameterNotAllowed(0);
          v186 = *(int *)(v185 + 20);
          v187 = (char *)v19 + v186;
          v188 = (char *)v20 + v186;
          v189 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v187, v188, v189);
          *((_BYTE *)v19 + *(int *)(v185 + 24)) = *((_BYTE *)v20 + *(int *)(v185 + 24));
          goto LABEL_97;
        case 7u:
          *v19 = *v20;
          v190 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
          v191 = (char *)v19 + v190;
          v192 = (char *)v20 + v190;
          v193 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v191, v192, v193);
LABEL_97:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          break;
      }
      v194 = type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
      *(_QWORD *)((char *)v19 + *(int *)(v194 + 20)) = *(_QWORD *)((char *)v20 + *(int *)(v194 + 20));
      goto LABEL_139;
    case 0x22u:
      v6((uint64_t)v19, (uint64_t)v20, v5);
      v69 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
      *((_BYTE *)v19 + *(int *)(v69 + 20)) = *((_BYTE *)v20 + *(int *)(v69 + 20));
      v70 = *(int *)(v69 + 24);
      v71 = (char *)v19 + v70;
      v72 = (char *)v20 + v70;
      *((_QWORD *)v71 + 2) = *((_QWORD *)v72 + 2);
      *(_OWORD *)v71 = *(_OWORD *)v72;
      goto LABEL_139;
    case 0x23u:
      v6((uint64_t)v19, (uint64_t)v20, v5);
      v73 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
      v74 = (char *)v19 + v73;
      v75 = (char *)v20 + v73;
      *(_OWORD *)v74 = *(_OWORD *)v75;
      *((_QWORD *)v74 + 2) = *((_QWORD *)v75 + 2);
      goto LABEL_139;
    case 0x24u:
      v76 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
        case 5u:
        case 7u:
        case 8u:
          v6((uint64_t)v19, (uint64_t)v20, v5);
          goto LABEL_114;
        case 2u:
          v6((uint64_t)v19, (uint64_t)v20, v5);
          v231 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
          *(_QWORD *)((char *)v19 + v231[5]) = *(_QWORD *)((char *)v20 + v231[5]);
          *(_QWORD *)((char *)v19 + v231[6]) = *(_QWORD *)((char *)v20 + v231[6]);
          v232 = v231[7];
          v290 = (char *)v19 + v232;
          v233 = (char *)v20 + v232;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v232, 1, v5))
          {
            v234 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v290, v233, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v290, (uint64_t)v233, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v290, 0, 1, v5);
          }
          *(_OWORD *)((char *)v19 + v231[8]) = *(_OWORD *)((char *)v20 + v231[8]);
          *(_QWORD *)((char *)v19 + v231[9]) = *(_QWORD *)((char *)v20 + v231[9]);
          swift_storeEnumTagMultiPayload();
          goto LABEL_139;
        case 4u:
          v6((uint64_t)v19, (uint64_t)v20, v5);
          v235 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
          *(_QWORD *)((char *)v19 + *(int *)(v235 + 20)) = *(_QWORD *)((char *)v20 + *(int *)(v235 + 20));
          goto LABEL_114;
        case 9u:
          v6((uint64_t)v19, (uint64_t)v20, v5);
          v236 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
          v6((uint64_t)v19 + *(int *)(v236 + 20), (uint64_t)v20 + *(int *)(v236 + 20), v5);
          *(_OWORD *)((char *)v19 + *(int *)(v236 + 24)) = *(_OWORD *)((char *)v20 + *(int *)(v236 + 24));
LABEL_114:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
          break;
      }
      goto LABEL_139;
    case 0x25u:
      v77 = type metadata accessor for SessionServerDebuggerEvent.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 7u:
        case 8u:
        case 0xAu:
          v6((uint64_t)v19, (uint64_t)v20, v5);
          goto LABEL_125;
        case 1u:
          *v19 = *v20;
          v237 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
          v238 = v237[6];
          v291 = (char *)v19 + v238;
          v239 = (char *)v20 + v238;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v238, 1, v5))
          {
            v240 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v291, v239, *(_QWORD *)(*(_QWORD *)(v240 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v291, (uint64_t)v239, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v291, 0, 1, v5);
          }
          *(_OWORD *)((char *)v19 + v237[7]) = *(_OWORD *)((char *)v20 + v237[7]);
          *(_QWORD *)((char *)v19 + v237[8]) = *(_QWORD *)((char *)v20 + v237[8]);
          goto LABEL_125;
        case 5u:
          *v19 = *v20;
          v292 = (int *)type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
          v241 = v292[6];
          v242 = (char *)v19 + v241;
          v243 = (char *)v20 + v241;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v241, 1, v5))
          {
            v244 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v242, v243, *(_QWORD *)(*(_QWORD *)(v244 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v242, (uint64_t)v243, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v242, 0, 1, v5);
          }
          *(_QWORD *)((char *)v19 + v292[7]) = *(_QWORD *)((char *)v20 + v292[7]);
          goto LABEL_125;
        case 6u:
          v6((uint64_t)v19, (uint64_t)v20, v5);
          v245 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
          *(_QWORD *)((char *)v19 + *(int *)(v245 + 20)) = *(_QWORD *)((char *)v20 + *(int *)(v245 + 20));
          goto LABEL_125;
        case 9u:
          v6((uint64_t)v19, (uint64_t)v20, v5);
          v246 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
          *((_BYTE *)v19 + *(int *)(v246 + 20)) = *((_BYTE *)v20 + *(int *)(v246 + 20));
          goto LABEL_125;
        case 0xBu:
          *(_QWORD *)v19 = *(_QWORD *)v20;
          *(_OWORD *)((char *)v19 + 8) = *(_OWORD *)((char *)v20 + 8);
          *(_OWORD *)((char *)v19 + 24) = *(_OWORD *)((char *)v20 + 24);
          *(_OWORD *)((char *)v19 + 40) = *(_OWORD *)((char *)v20 + 40);
          v247 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
          v6((uint64_t)v19 + v247[8], (uint64_t)v20 + v247[8], v5);
          *(_OWORD *)((char *)v19 + v247[9]) = *(_OWORD *)((char *)v20 + v247[9]);
          *(_OWORD *)((char *)v19 + v247[10]) = *(_OWORD *)((char *)v20 + v247[10]);
          *(_OWORD *)((char *)v19 + v247[11]) = *(_OWORD *)((char *)v20 + v247[11]);
          goto LABEL_125;
        case 0xCu:
          v6((uint64_t)v19, (uint64_t)v20, v5);
          v248 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
          *((_BYTE *)v19 + *(int *)(v248 + 20)) = *((_BYTE *)v20 + *(int *)(v248 + 20));
LABEL_125:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
          break;
      }
      goto LABEL_139;
    default:
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      goto LABEL_140;
  }
}

uint64_t assignWithTake for SessionDebuggerSubscriptionEvent(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int *v91;
  uint64_t v92;
  char *v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  int *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  int *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  int *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  int *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  char *v199;
  int *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  char *v217;
  int *v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  int *v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  int *v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  int *v247;
  uint64_t v248;
  uint64_t v249;
  _OWORD *v250;
  _OWORD *v251;
  __int128 v252;
  __int128 v253;
  uint64_t v254;
  _OWORD *v255;
  _OWORD *v256;
  __int128 v257;
  __int128 v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  char *v272;
  char *__dst;
  int *__dsta;
  char *__dstb;
  char *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;
  char *__dstg;
  char *__dsth;
  char *__dsti;
  _QWORD *v283;
  char *v284;
  _QWORD *v285;
  _QWORD *v286;
  char *v287;
  char *v288;
  char *v289;
  char *v290;
  char *v291;
  int *v292;

  if (a1 != a2)
  {
    sub_23F125D68(a1, type metadata accessor for SessionDebuggerSubscriptionEvent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_23F267D84();
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
    v6(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent(0);
      v6(a1 + *(int *)(v7 + 20), a2 + *(int *)(v7 + 20), v5);
      v8 = *(int *)(v7 + 24);
      v9 = (char *)(a1 + v8);
      v10 = (char *)(a2 + v8);
      v11 = type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v6((uint64_t)v9, (uint64_t)v10, v5);
        v12 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
        *(_QWORD *)&v9[*(int *)(v12 + 20)] = *(_QWORD *)&v10[*(int *)(v12 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
LABEL_142:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v13 = (int *)type metadata accessor for SessionServerMessage(0);
    v6(a1 + v13[5], a2 + v13[5], v5);
    v14 = v13[6];
    v15 = (void *)(a1 + v14);
    v16 = (const void *)(a2 + v14);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a2 + v14, 1, v5))
    {
      v17 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v6((uint64_t)v15, (uint64_t)v16, v5);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v15, 0, 1, v5);
    }
    *(_OWORD *)(a1 + v13[7]) = *(_OWORD *)(a2 + v13[7]);
    v18 = v13[8];
    v19 = (_OWORD *)(a1 + v18);
    v20 = (_OWORD *)(a2 + v18);
    v21 = type metadata accessor for MessagePayload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v22 = type metadata accessor for MessagePayload.RequestContent(0);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v5))
          {
            v23 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v19, (uint64_t)v20, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v5);
          }
          v114 = (int *)type metadata accessor for SystemPromptResolution(0);
          v6((uint64_t)v19 + v114[5], (uint64_t)v20 + v114[5], v5);
          v115 = v114[6];
          v288 = (char *)v19 + v115;
          v116 = (char *)v20 + v115;
          v117 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v118 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v288, v116, v118);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v288, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
          }
          v119 = v114[7];
          v120 = (char *)v19 + v119;
          v121 = (char *)v20 + v119;
          *(_OWORD *)v120 = *(_OWORD *)v121;
          *((_QWORD *)v120 + 2) = *((_QWORD *)v121 + 2);
          v122 = v114[8];
          v123 = (char *)v19 + v122;
          v124 = (char *)v20 + v122;
          v123[16] = v124[16];
          *(_OWORD *)v123 = *(_OWORD *)v124;
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        v125 = (int *)type metadata accessor for MessagePayload.Request(0);
        *(_QWORD *)((char *)v19 + v125[5]) = *(_QWORD *)((char *)v20 + v125[5]);
        *((_BYTE *)v19 + v125[6]) = *((_BYTE *)v20 + v125[6]);
        v126 = v125[7];
        v127 = (char *)v19 + v126;
        v128 = (char *)v20 + v126;
        *(_OWORD *)v127 = *(_OWORD *)v128;
        v127[16] = v128[16];
        v129 = v125[8];
        v130 = (char *)v19 + v129;
        v131 = (char *)v20 + v129;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v129, 1, v5))
        {
          v132 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
        }
        else
        {
          v6((uint64_t)v130, (uint64_t)v131, v5);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v130, 0, 1, v5);
        }
        v133 = v125[9];
        v134 = (char *)v19 + v133;
        v135 = (char *)v20 + v133;
        *(_OWORD *)v134 = *(_OWORD *)v135;
        *((_QWORD *)v134 + 2) = *((_QWORD *)v135 + 2);
        goto LABEL_140;
      case 4u:
        *v19 = *v20;
        v24 = *(int *)(type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0) + 20);
        v25 = (char *)v19 + v24;
        v26 = (char *)v20 + v24;
        v27 = sub_23F268078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        goto LABEL_140;
      case 0xDu:
        v6((uint64_t)v19, (uint64_t)v20, v5);
        v28 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
        v6((uint64_t)v19 + v28[5], (uint64_t)v20 + v28[5], v5);
        *(_OWORD *)((char *)v19 + v28[6]) = *(_OWORD *)((char *)v20 + v28[6]);
        *(_OWORD *)((char *)v19 + v28[7]) = *(_OWORD *)((char *)v20 + v28[7]);
        *(_OWORD *)((char *)v19 + v28[8]) = *(_OWORD *)((char *)v20 + v28[8]);
        *(_QWORD *)((char *)v19 + v28[9]) = *(_QWORD *)((char *)v20 + v28[9]);
        goto LABEL_140;
      case 0xEu:
        v6((uint64_t)v19, (uint64_t)v20, v5);
        v29 = *(int *)(type metadata accessor for MessagePayload.ClientEffectResolved(0) + 20);
        v30 = (char *)v19 + v29;
        v31 = (char *)v20 + v29;
        v32 = type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          v78 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v30, v31, v78);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_140;
      case 0x10u:
        v6((uint64_t)v19, (uint64_t)v20, v5);
        v33 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
        *(_OWORD *)((char *)v19 + v33[5]) = *(_OWORD *)((char *)v20 + v33[5]);
        *(_QWORD *)((char *)v19 + v33[6]) = *(_QWORD *)((char *)v20 + v33[6]);
        *(_QWORD *)((char *)v19 + v33[7]) = *(_QWORD *)((char *)v20 + v33[7]);
        *(_OWORD *)((char *)v19 + v33[8]) = *(_OWORD *)((char *)v20 + v33[8]);
        goto LABEL_140;
      case 0x11u:
        v6((uint64_t)v19, (uint64_t)v20, v5);
        v34 = type metadata accessor for MessagePayload.ClientActionResult(0);
        v35 = *(int *)(v34 + 20);
        v36 = (char *)v19 + v35;
        v37 = (char *)v20 + v35;
        v283 = (_QWORD *)type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v270 = v34;
            v38 = sub_23F268078();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
            v267 = type metadata accessor for ActionSuccess(0);
            v39 = *(int *)(v267 + 20);
            __dst = &v36[v39];
            v40 = &v37[v39];
            v264 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v40, 1, v264))
            {
              v41 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
            }
            else
            {
              v6((uint64_t)__dst, (uint64_t)v40, v5);
              *(_OWORD *)&__dst[*(int *)(v264 + 20)] = *(_OWORD *)&v40[*(int *)(v264 + 20)];
              *(_OWORD *)&__dst[*(int *)(v264 + 24)] = *(_OWORD *)&v40[*(int *)(v264 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v264);
            }
            v36[*(int *)(v267 + 24)] = v37[*(int *)(v267 + 24)];
            swift_storeEnumTagMultiPayload();
            v34 = v270;
            break;
          case 3u:
            *(_OWORD *)v36 = *(_OWORD *)v37;
            v152 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v153 = v34;
            v154 = &v36[v152];
            v155 = &v37[v152];
            v156 = sub_23F268078();
            v157 = v154;
            v34 = v153;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(v157, v155, v156);
            goto LABEL_91;
          case 4u:
            *(_OWORD *)v36 = *(_OWORD *)v37;
            *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
            v36[24] = v37[24];
            v158 = v34;
            v159 = (int *)type metadata accessor for ParameterConfirmation(0);
            v160 = v159[6];
            v161 = &v36[v160];
            __dstd = &v37[v160];
            v162 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v161, __dstd, v162);
            *(_OWORD *)&v36[v159[7]] = *(_OWORD *)&v37[v159[7]];
            v163 = v159[8];
            v34 = v158;
            *(_OWORD *)&v36[v163] = *(_OWORD *)&v37[v163];
            goto LABEL_91;
          case 6u:
            *(_OWORD *)v36 = *(_OWORD *)v37;
            v164 = v34;
            v165 = type metadata accessor for ParameterNotAllowed(0);
            v166 = *(int *)(v165 + 20);
            v167 = &v36[v166];
            __dste = &v37[v166];
            v168 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v167, __dste, v168);
            v169 = *(int *)(v165 + 24);
            v34 = v164;
            v36[v169] = v37[v169];
            goto LABEL_91;
          case 7u:
            *(_OWORD *)v36 = *(_OWORD *)v37;
            v170 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v171 = v34;
            v172 = &v36[v170];
            v173 = &v37[v170];
            v174 = sub_23F268078();
            v175 = v172;
            v34 = v171;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v175, v173, v174);
LABEL_91:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v36, v37, *(_QWORD *)(*(v283 - 1) + 64));
            break;
        }
        memcpy((char *)v19 + *(int *)(v34 + 24), (char *)v20 + *(int *)(v34 + 24), 0xBAuLL);
        goto LABEL_140;
      case 0x14u:
        v6((uint64_t)v19, (uint64_t)v20, v5);
        v56 = type metadata accessor for SystemPrompt(0);
        *(_OWORD *)((char *)v19 + *(int *)(v56 + 20)) = *(_OWORD *)((char *)v20 + *(int *)(v56 + 20));
        v57 = *(int *)(v56 + 24);
        v58 = (char *)v19 + v57;
        v59 = (char *)v20 + v57;
        v60 = type metadata accessor for SystemPrompt.Prompt(0);
        v61 = swift_getEnumCaseMultiPayload();
        if (v61 == 2)
        {
          *(_OWORD *)v58 = *(_OWORD *)v59;
          *((_QWORD *)v58 + 2) = *((_QWORD *)v59 + 2);
          v58[24] = v59[24];
          v110 = (int *)type metadata accessor for ParameterConfirmation(0);
          v111 = v110[6];
          v112 = &v58[v111];
          v287 = &v59[v111];
          v113 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v112, v287, v113);
          *(_OWORD *)&v58[v110[7]] = *(_OWORD *)&v59[v110[7]];
          *(_OWORD *)&v58[v110[8]] = *(_OWORD *)&v59[v110[8]];
        }
        else
        {
          if (v61 != 1)
          {
            memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
LABEL_140:
            swift_storeEnumTagMultiPayload();
LABEL_141:
            *(_OWORD *)(a1 + v13[9]) = *(_OWORD *)(a2 + v13[9]);
            v259 = v13[10];
            v260 = a1 + v259;
            v261 = a2 + v259;
            v262 = sub_23F267D24();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v262 - 8) + 32))(v260, v261, v262);
            goto LABEL_142;
          }
          *(_OWORD *)v58 = *(_OWORD *)v59;
          v62 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
          v63 = &v58[v62];
          v64 = &v59[v62];
          v65 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_140;
      case 0x15u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v5))
        {
          v66 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        }
        else
        {
          v6((uint64_t)v19, (uint64_t)v20, v5);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v5);
        }
        v79 = (int *)type metadata accessor for SystemPromptResolution(0);
        v6((uint64_t)v19 + v79[5], (uint64_t)v20 + v79[5], v5);
        v80 = v79[6];
        v81 = (char *)v19 + v80;
        v82 = (char *)v20 + v80;
        v83 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v84 = sub_23F268078();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v81, v82, v84);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        v85 = v79[7];
        v86 = (char *)v19 + v85;
        v87 = (char *)v20 + v85;
        *(_OWORD *)v86 = *(_OWORD *)v87;
        *((_QWORD *)v86 + 2) = *((_QWORD *)v87 + 2);
        v88 = v79[8];
        v89 = (char *)v19 + v88;
        v90 = (char *)v20 + v88;
        v89[16] = v90[16];
        *(_OWORD *)v89 = *(_OWORD *)v90;
        goto LABEL_140;
      case 0x16u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v5))
        {
          v67 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          v6((uint64_t)v19, (uint64_t)v20, v5);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v5);
        }
        v91 = (int *)type metadata accessor for ActionResponse(0);
        *(_OWORD *)((char *)v19 + v91[5]) = *(_OWORD *)((char *)v20 + v91[5]);
        *(_OWORD *)((char *)v19 + v91[6]) = *(_OWORD *)((char *)v20 + v91[6]);
        v92 = v91[7];
        v93 = (char *)v19 + v92;
        v94 = (char *)v20 + v92;
        v285 = (_QWORD *)type metadata accessor for ActionOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v95 = sub_23F268078();
            (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v93, v94, v95);
            v268 = type metadata accessor for ActionSuccess(0);
            v271 = v93;
            v96 = *(int *)(v268 + 20);
            __dstb = &v93[v96];
            v97 = &v94[v96];
            v265 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v97, 1, v265))
            {
              v98 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(__dstb, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
            }
            else
            {
              v6((uint64_t)__dstb, (uint64_t)v97, v5);
              *(_OWORD *)&__dstb[*(int *)(v265 + 20)] = *(_OWORD *)&v97[*(int *)(v265 + 20)];
              *(_OWORD *)&__dstb[*(int *)(v265 + 24)] = *(_OWORD *)&v97[*(int *)(v265 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dstb, 0, 1, v265);
            }
            v271[*(int *)(v268 + 24)] = v94[*(int *)(v268 + 24)];
            goto LABEL_134;
          case 3u:
            *(_OWORD *)v93 = *(_OWORD *)v94;
            v195 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v196 = &v93[v195];
            v197 = &v94[v195];
            v198 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v196, v197, v198);
            goto LABEL_134;
          case 4u:
            *(_OWORD *)v93 = *(_OWORD *)v94;
            *((_QWORD *)v93 + 2) = *((_QWORD *)v94 + 2);
            v93[24] = v94[24];
            v199 = v93;
            v200 = (int *)type metadata accessor for ParameterConfirmation(0);
            v201 = v200[6];
            v202 = &v199[v201];
            __dstf = &v94[v201];
            v203 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v202, __dstf, v203);
            *(_OWORD *)&v199[v200[7]] = *(_OWORD *)&v94[v200[7]];
            *(_OWORD *)&v199[v200[8]] = *(_OWORD *)&v94[v200[8]];
            goto LABEL_134;
          case 6u:
            *(_OWORD *)v93 = *(_OWORD *)v94;
            v204 = v93;
            v205 = type metadata accessor for ParameterNotAllowed(0);
            v206 = *(int *)(v205 + 20);
            v207 = &v204[v206];
            __dstg = &v94[v206];
            v208 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 32))(v207, __dstg, v208);
            v204[*(int *)(v205 + 24)] = v94[*(int *)(v205 + 24)];
            goto LABEL_134;
          case 7u:
            *(_OWORD *)v93 = *(_OWORD *)v94;
            v209 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v210 = &v93[v209];
            v211 = &v94[v209];
            v212 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v212 - 8) + 32))(v210, v211, v212);
LABEL_134:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v93, v94, *(_QWORD *)(*(v285 - 1) + 64));
            break;
        }
        memcpy((char *)v19 + v91[8], (char *)v20 + v91[8], 0xBAuLL);
        v249 = v91[9];
        v250 = (_OWORD *)((char *)v19 + v249);
        v251 = (_OWORD *)((char *)v20 + v249);
        v252 = v251[1];
        *v250 = *v251;
        v250[1] = v252;
        v253 = v251[3];
        v250[2] = v251[2];
        v250[3] = v253;
        *(_OWORD *)((char *)v19 + v91[10]) = *(_OWORD *)((char *)v20 + v91[10]);
        goto LABEL_140;
      case 0x17u:
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v5))
        {
          v68 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          v6((uint64_t)v19, (uint64_t)v20, v5);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v5);
        }
        v99 = (int *)type metadata accessor for SystemResponse(0);
        v100 = v99[5];
        v101 = (char *)v19 + v100;
        v102 = (char *)v20 + v100;
        *(_OWORD *)v101 = *(_OWORD *)v102;
        *((_QWORD *)v101 + 2) = *((_QWORD *)v102 + 2);
        *(_OWORD *)((char *)v19 + v99[6]) = *(_OWORD *)((char *)v20 + v99[6]);
        v103 = v99[7];
        v104 = (char *)v19 + v103;
        v105 = (char *)v20 + v103;
        v286 = (_QWORD *)type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v106 = sub_23F268078();
            (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
            v269 = type metadata accessor for ActionSuccess(0);
            v272 = v104;
            v107 = *(int *)(v269 + 20);
            __dstc = &v104[v107];
            v108 = &v105[v107];
            v266 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v108, 1, v266))
            {
              v109 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(__dstc, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
            }
            else
            {
              v6((uint64_t)__dstc, (uint64_t)v108, v5);
              *(_OWORD *)&__dstc[*(int *)(v266 + 20)] = *(_OWORD *)&v108[*(int *)(v266 + 20)];
              *(_OWORD *)&__dstc[*(int *)(v266 + 24)] = *(_OWORD *)&v108[*(int *)(v266 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dstc, 0, 1, v266);
            }
            v272[*(int *)(v269 + 24)] = v105[*(int *)(v269 + 24)];
            goto LABEL_138;
          case 3u:
            *(_OWORD *)v104 = *(_OWORD *)v105;
            v213 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v214 = &v104[v213];
            v215 = &v105[v213];
            v216 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 32))(v214, v215, v216);
            goto LABEL_138;
          case 4u:
            *(_OWORD *)v104 = *(_OWORD *)v105;
            *((_QWORD *)v104 + 2) = *((_QWORD *)v105 + 2);
            v104[24] = v105[24];
            v217 = v104;
            v218 = (int *)type metadata accessor for ParameterConfirmation(0);
            v219 = v218[6];
            v220 = &v217[v219];
            __dsth = &v105[v219];
            v221 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v221 - 8) + 32))(v220, __dsth, v221);
            *(_OWORD *)&v217[v218[7]] = *(_OWORD *)&v105[v218[7]];
            *(_OWORD *)&v217[v218[8]] = *(_OWORD *)&v105[v218[8]];
            goto LABEL_138;
          case 6u:
            *(_OWORD *)v104 = *(_OWORD *)v105;
            v222 = v104;
            v223 = type metadata accessor for ParameterNotAllowed(0);
            v224 = *(int *)(v223 + 20);
            v225 = &v222[v224];
            __dsti = &v105[v224];
            v226 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 32))(v225, __dsti, v226);
            v222[*(int *)(v223 + 24)] = v105[*(int *)(v223 + 24)];
            goto LABEL_138;
          case 7u:
            *(_OWORD *)v104 = *(_OWORD *)v105;
            v227 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v228 = &v104[v227];
            v229 = &v105[v227];
            v230 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v230 - 8) + 32))(v228, v229, v230);
LABEL_138:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v104, v105, *(_QWORD *)(*(v286 - 1) + 64));
            break;
        }
        v254 = v99[8];
        v255 = (_OWORD *)((char *)v19 + v254);
        v256 = (_OWORD *)((char *)v20 + v254);
        v257 = v256[1];
        *v255 = *v256;
        v255[1] = v257;
        v258 = v256[3];
        v255[2] = v256[2];
        v255[3] = v258;
        *(_OWORD *)((char *)v19 + v99[9]) = *(_OWORD *)((char *)v20 + v99[9]);
        *(_QWORD *)((char *)v19 + v99[10]) = *(_QWORD *)((char *)v20 + v99[10]);
        goto LABEL_140;
      case 0x1Cu:
        *v19 = *v20;
        v42 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
        v43 = *(int *)(v42 + 20);
        v44 = (char *)v19 + v43;
        v45 = (char *)v20 + v43;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v43, 1, v5))
          goto LABEL_83;
        goto LABEL_84;
      case 0x1Du:
        *(_QWORD *)v19 = *(_QWORD *)v20;
        v42 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
        v46 = *(int *)(v42 + 20);
        v44 = (char *)v19 + v46;
        v45 = (char *)v20 + v46;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v46, 1, v5))
          goto LABEL_83;
        goto LABEL_84;
      case 0x1Eu:
        v47 = type metadata accessor for MessagePayload.RequestContent(0);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v5))
          {
            v48 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          }
          else
          {
            v6((uint64_t)v19, (uint64_t)v20, v5);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v5);
          }
          v136 = (int *)type metadata accessor for SystemPromptResolution(0);
          v6((uint64_t)v19 + v136[5], (uint64_t)v20 + v136[5], v5);
          v137 = v136[6];
          v289 = (char *)v19 + v137;
          v138 = (char *)v20 + v137;
          v139 = type metadata accessor for SystemPromptResolution.UserAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v140 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v289, v138, v140);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v289, v138, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
          }
          v141 = v136[7];
          v142 = (char *)v19 + v141;
          v143 = (char *)v20 + v141;
          *(_OWORD *)v142 = *(_OWORD *)v143;
          *((_QWORD *)v142 + 2) = *((_QWORD *)v143 + 2);
          v144 = v136[8];
          v145 = (char *)v19 + v144;
          v146 = (char *)v20 + v144;
          v145[16] = v146[16];
          *(_OWORD *)v145 = *(_OWORD *)v146;
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        v42 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
        v147 = *(int *)(v42 + 20);
        v44 = (char *)v19 + v147;
        v45 = (char *)v20 + v147;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v147, 1, v5))
        {
LABEL_83:
          v148 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
        }
        else
        {
LABEL_84:
          v6((uint64_t)v44, (uint64_t)v45, v5);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v44, 0, 1, v5);
        }
        v149 = *(int *)(v42 + 24);
        v150 = (char *)v19 + v149;
        v151 = (char *)v20 + v149;
        *(_OWORD *)v150 = *(_OWORD *)v151;
        *((_QWORD *)v150 + 2) = *((_QWORD *)v151 + 2);
        goto LABEL_140;
      case 0x1Fu:
        v49 = type metadata accessor for StatementOutcome(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v50 = sub_23F268078();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v19, v20, v50);
            v51 = type metadata accessor for ActionSuccess(0);
            v52 = *(int *)(v51 + 20);
            __dsta = (int *)v51;
            v284 = (char *)v19 + v52;
            v53 = (char *)v20 + v52;
            v54 = type metadata accessor for ActionSuccess.UndoContext(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v53, 1, v54))
            {
              v55 = sub_23F1217E8(&qword_256DFEBA0);
              memcpy(v284, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
            }
            else
            {
              v6((uint64_t)v284, (uint64_t)v53, v5);
              *(_OWORD *)&v284[*(int *)(v54 + 20)] = *(_OWORD *)&v53[*(int *)(v54 + 20)];
              *(_OWORD *)&v284[*(int *)(v54 + 24)] = *(_OWORD *)&v53[*(int *)(v54 + 24)];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v284, 0, 1, v54);
            }
            *((_BYTE *)v19 + __dsta[6]) = *((_BYTE *)v20 + __dsta[6]);
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            *v19 = *v20;
            v176 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
            v177 = (char *)v19 + v176;
            v178 = (char *)v20 + v176;
            v179 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(v177, v178, v179);
            goto LABEL_98;
          case 4u:
            *v19 = *v20;
            *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
            *((_BYTE *)v19 + 24) = *((_BYTE *)v20 + 24);
            v180 = (int *)type metadata accessor for ParameterConfirmation(0);
            v181 = v180[6];
            v182 = (char *)v19 + v181;
            v183 = (char *)v20 + v181;
            v184 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v182, v183, v184);
            *(_OWORD *)((char *)v19 + v180[7]) = *(_OWORD *)((char *)v20 + v180[7]);
            *(_OWORD *)((char *)v19 + v180[8]) = *(_OWORD *)((char *)v20 + v180[8]);
            goto LABEL_98;
          case 6u:
            *v19 = *v20;
            v185 = type metadata accessor for ParameterNotAllowed(0);
            v186 = *(int *)(v185 + 20);
            v187 = (char *)v19 + v186;
            v188 = (char *)v20 + v186;
            v189 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v187, v188, v189);
            *((_BYTE *)v19 + *(int *)(v185 + 24)) = *((_BYTE *)v20 + *(int *)(v185 + 24));
            goto LABEL_98;
          case 7u:
            *v19 = *v20;
            v190 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
            v191 = (char *)v19 + v190;
            v192 = (char *)v20 + v190;
            v193 = sub_23F268078();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v191, v192, v193);
LABEL_98:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
            break;
        }
        v194 = type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
        *(_QWORD *)((char *)v19 + *(int *)(v194 + 20)) = *(_QWORD *)((char *)v20 + *(int *)(v194 + 20));
        goto LABEL_140;
      case 0x22u:
        v6((uint64_t)v19, (uint64_t)v20, v5);
        v69 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
        *((_BYTE *)v19 + *(int *)(v69 + 20)) = *((_BYTE *)v20 + *(int *)(v69 + 20));
        v70 = *(int *)(v69 + 24);
        v71 = (char *)v19 + v70;
        v72 = (char *)v20 + v70;
        *((_QWORD *)v71 + 2) = *((_QWORD *)v72 + 2);
        *(_OWORD *)v71 = *(_OWORD *)v72;
        goto LABEL_140;
      case 0x23u:
        v6((uint64_t)v19, (uint64_t)v20, v5);
        v73 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
        v74 = (char *)v19 + v73;
        v75 = (char *)v20 + v73;
        *(_OWORD *)v74 = *(_OWORD *)v75;
        *((_QWORD *)v74 + 2) = *((_QWORD *)v75 + 2);
        goto LABEL_140;
      case 0x24u:
        v76 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
          case 5u:
          case 7u:
          case 8u:
            v6((uint64_t)v19, (uint64_t)v20, v5);
            goto LABEL_115;
          case 2u:
            v6((uint64_t)v19, (uint64_t)v20, v5);
            v231 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
            *(_QWORD *)((char *)v19 + v231[5]) = *(_QWORD *)((char *)v20 + v231[5]);
            *(_QWORD *)((char *)v19 + v231[6]) = *(_QWORD *)((char *)v20 + v231[6]);
            v232 = v231[7];
            v290 = (char *)v19 + v232;
            v233 = (char *)v20 + v232;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v232, 1, v5))
            {
              v234 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v290, v233, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
            }
            else
            {
              v6((uint64_t)v290, (uint64_t)v233, v5);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v290, 0, 1, v5);
            }
            *(_OWORD *)((char *)v19 + v231[8]) = *(_OWORD *)((char *)v20 + v231[8]);
            *(_QWORD *)((char *)v19 + v231[9]) = *(_QWORD *)((char *)v20 + v231[9]);
            swift_storeEnumTagMultiPayload();
            goto LABEL_140;
          case 4u:
            v6((uint64_t)v19, (uint64_t)v20, v5);
            v235 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
            *(_QWORD *)((char *)v19 + *(int *)(v235 + 20)) = *(_QWORD *)((char *)v20 + *(int *)(v235 + 20));
            goto LABEL_115;
          case 9u:
            v6((uint64_t)v19, (uint64_t)v20, v5);
            v236 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
            v6((uint64_t)v19 + *(int *)(v236 + 20), (uint64_t)v20 + *(int *)(v236 + 20), v5);
            *(_OWORD *)((char *)v19 + *(int *)(v236 + 24)) = *(_OWORD *)((char *)v20 + *(int *)(v236 + 24));
LABEL_115:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
            break;
        }
        goto LABEL_140;
      case 0x25u:
        v77 = type metadata accessor for SessionServerDebuggerEvent.Payload(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 2u:
          case 7u:
          case 8u:
          case 0xAu:
            v6((uint64_t)v19, (uint64_t)v20, v5);
            goto LABEL_126;
          case 1u:
            *v19 = *v20;
            v237 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
            v238 = v237[6];
            v291 = (char *)v19 + v238;
            v239 = (char *)v20 + v238;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v238, 1, v5))
            {
              v240 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v291, v239, *(_QWORD *)(*(_QWORD *)(v240 - 8) + 64));
            }
            else
            {
              v6((uint64_t)v291, (uint64_t)v239, v5);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v291, 0, 1, v5);
            }
            *(_OWORD *)((char *)v19 + v237[7]) = *(_OWORD *)((char *)v20 + v237[7]);
            *(_QWORD *)((char *)v19 + v237[8]) = *(_QWORD *)((char *)v20 + v237[8]);
            goto LABEL_126;
          case 5u:
            *v19 = *v20;
            v292 = (int *)type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
            v241 = v292[6];
            v242 = (char *)v19 + v241;
            v243 = (char *)v20 + v241;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20 + v241, 1, v5))
            {
              v244 = sub_23F1217E8(&qword_256DFEB98);
              memcpy(v242, v243, *(_QWORD *)(*(_QWORD *)(v244 - 8) + 64));
            }
            else
            {
              v6((uint64_t)v242, (uint64_t)v243, v5);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v242, 0, 1, v5);
            }
            *(_QWORD *)((char *)v19 + v292[7]) = *(_QWORD *)((char *)v20 + v292[7]);
            goto LABEL_126;
          case 6u:
            v6((uint64_t)v19, (uint64_t)v20, v5);
            v245 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
            *(_QWORD *)((char *)v19 + *(int *)(v245 + 20)) = *(_QWORD *)((char *)v20 + *(int *)(v245 + 20));
            goto LABEL_126;
          case 9u:
            v6((uint64_t)v19, (uint64_t)v20, v5);
            v246 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
            *((_BYTE *)v19 + *(int *)(v246 + 20)) = *((_BYTE *)v20 + *(int *)(v246 + 20));
            goto LABEL_126;
          case 0xBu:
            *(_QWORD *)v19 = *(_QWORD *)v20;
            *(_OWORD *)((char *)v19 + 8) = *(_OWORD *)((char *)v20 + 8);
            *(_OWORD *)((char *)v19 + 24) = *(_OWORD *)((char *)v20 + 24);
            *(_OWORD *)((char *)v19 + 40) = *(_OWORD *)((char *)v20 + 40);
            v247 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
            v6((uint64_t)v19 + v247[8], (uint64_t)v20 + v247[8], v5);
            *(_OWORD *)((char *)v19 + v247[9]) = *(_OWORD *)((char *)v20 + v247[9]);
            *(_OWORD *)((char *)v19 + v247[10]) = *(_OWORD *)((char *)v20 + v247[10]);
            *(_OWORD *)((char *)v19 + v247[11]) = *(_OWORD *)((char *)v20 + v247[11]);
            goto LABEL_126;
          case 0xCu:
            v6((uint64_t)v19, (uint64_t)v20, v5);
            v248 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
            *((_BYTE *)v19 + *(int *)(v248 + 20)) = *((_BYTE *)v20 + *(int *)(v248 + 20));
LABEL_126:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
            break;
        }
        goto LABEL_140;
      default:
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        goto LABEL_141;
    }
  }
  return a1;
}

uint64_t sub_23F142118()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F142128()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SessionServerMessage(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionDebuggerSubscriptionEvent.DebuggerEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      v12 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      *(_QWORD *)&v10[*(int *)(v12 + 20)] = *(_QWORD *)&v11[*(int *)(v12 + 20)];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      v14 = v11 + 8;
      v15 = *((_OWORD *)v11 + 2);
      *((_OWORD *)v10 + 2) = v15;
      v16 = v15;
      v17 = **(void (***)(char *, char *, uint64_t))(v15 - 8);
      swift_bridgeObjectRetain();
      v17(v10 + 8, v14, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SessionDebuggerSubscriptionEvent.DebuggerEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v4 = sub_23F267D84();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  v6 = a1 + *(int *)(a2 + 24);
  type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5(v6, v4);
    type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _s16IntelligenceFlow17AnySessionMessageVwxx_0(v6 + 8);
  }
}

uint64_t initializeWithCopy for SessionDebuggerSubscriptionEvent.DebuggerEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7(v9, v10, v6);
    v11 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
    *(_QWORD *)(v9 + *(int *)(v11 + 20)) = *(_QWORD *)(v10 + *(int *)(v11 + 20));
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v12 = v10 + 8;
    v13 = *(_OWORD *)(v10 + 32);
    *(_OWORD *)(v9 + 32) = v13;
    v14 = v13;
    v15 = **(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8);
    swift_bridgeObjectRetain();
    v15(v9 + 8, v12, v14);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for SessionDebuggerSubscriptionEvent.DebuggerEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(_QWORD *, _QWORD *, uint64_t);

  v6 = sub_23F267D84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 24);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    sub_23F125D68(a1 + v9, type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload);
    type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v10, v11, v6);
      v12 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      *(_QWORD *)((char *)v10 + *(int *)(v12 + 20)) = *(_QWORD *)((char *)v11 + *(int *)(v12 + 20));
      swift_bridgeObjectRetain();
    }
    else
    {
      *v10 = *v11;
      v13 = v11 + 1;
      v14 = v11[4];
      v10[4] = v14;
      v10[5] = v11[5];
      v15 = **(void (***)(_QWORD *, _QWORD *, uint64_t))(v14 - 8);
      swift_bridgeObjectRetain();
      v15(v10 + 1, v13, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for SessionDebuggerSubscriptionEvent.DebuggerEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v12 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
    *(_QWORD *)&v9[*(int *)(v12 + 20)] = *(_QWORD *)&v10[*(int *)(v12 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for SessionDebuggerSubscriptionEvent.DebuggerEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23F267D84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 24);
    v10 = (char *)(a1 + v9);
    v11 = (char *)(a2 + v9);
    sub_23F125D68(a1 + v9, type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload);
    v12 = type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
      v13 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      *(_QWORD *)&v10[*(int *)(v13 + 20)] = *(_QWORD *)&v11[*(int *)(v13 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionDebuggerSubscriptionEvent.DebuggerEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F14280C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F131B8C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
    v8 = a1 + *(int *)(a3 + 24);
  }
  return sub_23F1315B8(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for SessionDebuggerSubscriptionEvent.DebuggerEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F142874(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_23F131B8C();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
    v10 = a1 + *(int *)(a4 + 24);
  }
  return sub_23F126098(v10, a2, a2, v9);
}

uint64_t sub_23F1428D8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F267D84();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23F267D84();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 20));
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_QWORD *)a1 = *a2;
      v9 = a2 + 1;
      v10 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 32) = v10;
      v11 = v10;
      v12 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v10 - 8);
      swift_bridgeObjectRetain();
      v12(a1 + 8, v9, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_23F267D84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
    type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _s16IntelligenceFlow17AnySessionMessageVwxx_0(a1 + 8);
  }
}

uint64_t initializeWithCopy for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23F267D84();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    v5 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
    *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v6 = a2 + 8;
    v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 32) = v7;
    v8 = v7;
    v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
    swift_bridgeObjectRetain();
    v9(a1 + 8, v6, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);

  if (a1 != a2)
  {
    sub_23F125D68((uint64_t)a1, type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_23F267D84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
      v5 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      *(_QWORD *)((char *)a1 + *(int *)(v5 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v5 + 20));
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = *a2;
      v6 = a2 + 1;
      v7 = a2[4];
      a1[4] = v7;
      a1[5] = a2[5];
      v8 = **(void (***)(_QWORD *, _QWORD *, uint64_t))(v7 - 8);
      swift_bridgeObjectRetain();
      v8(a1 + 1, v6, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23F267D84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
    *(_QWORD *)&a1[*(int *)(v7 + 20)] = *(_QWORD *)&a2[*(int *)(v7 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_23F125D68((uint64_t)a1, type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23F267D84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      *(_QWORD *)&a1[*(int *)(v7 + 20)] = *(_QWORD *)&a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23F142DFC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for SessionDebuggerSubscriptionEvent.DebuggerEvent.DebuggerPaused(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + 8;
  swift_bridgeObjectRelease();
  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(v1);
}

uint64_t initializeWithCopy for SessionDebuggerSubscriptionEvent.DebuggerEvent.DebuggerPaused(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = a2 + 8;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = v4;
  v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_bridgeObjectRetain();
  v6(a1 + 8, v3, v5);
  return a1;
}

_QWORD *assignWithCopy for SessionDebuggerSubscriptionEvent.DebuggerEvent.DebuggerPaused(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v3;

  v3 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_23F142F50(a1 + 1, v3);
  return a1;
}

uint64_t *sub_23F142F50(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for MessagePayload.Query(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SessionDebuggerSubscriptionEvent.DebuggerEvent.DebuggerPaused(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionDebuggerSubscriptionEvent.DebuggerEvent.DebuggerPaused(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionDebuggerSubscriptionEvent.DebuggerEvent.DebuggerPaused(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.DebuggerPaused()
{
  return &type metadata for SessionDebuggerSubscriptionEvent.DebuggerEvent.DebuggerPaused;
}

uint64_t dispatch thunk of DebugCommandHandling.continue()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)sub_23F1438C4();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F1438D8(v1, (uint64_t)sub_23F143894);
  return sub_23F1438B4(v2, v3, v4);
}

uint64_t dispatch thunk of DebugCommandHandling.requestCurrentTranscript()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)sub_23F1438C4();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F1438D8(v1, (uint64_t)sub_23F12EE90);
  return sub_23F1438B4(v2, v3, v4);
}

uint64_t dispatch thunk of DebugCommandHandling.terminate()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)sub_23F1438C4();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F1438D8(v1, (uint64_t)sub_23F143894);
  return sub_23F1438B4(v2, v3, v4);
}

uint64_t type metadata accessor for SessionDebuggerEventsSubscription()
{
  return objc_opt_self();
}

uint64_t method lookup function for SessionDebuggerEventsSubscription()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SessionDebuggerEventsSubscription.makeAsyncIterator()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t initializeBufferWithCopyOfBuffer for SessionDebuggerEventsSubscription.Iterator(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2 + 1;
    v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    v10 = v9;
    v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    v12 = *(int *)(a3 + 24);
    v13 = a1 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_23F1217E8(&qword_256DFEB68);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SessionDebuggerEventsSubscription.Iterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(a1 + 8);
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23F1217E8(&qword_256DFEB68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionDebuggerEventsSubscription.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23F1217E8(&qword_256DFEB68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SessionDebuggerEventsSubscription.Iterator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_retain();
  swift_release();
  sub_23F142F50(a1 + 1, a2 + 1);
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F1217E8(&qword_256DFEB68);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SessionDebuggerEventsSubscription.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23F1217E8(&qword_256DFEB68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for SessionDebuggerEventsSubscription.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23F1217E8(&qword_256DFEB68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionDebuggerEventsSubscription.Iterator()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F1436A4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for EventsSubscription.Iterator(0);
    return sub_23F1315B8((uint64_t)a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SessionDebuggerEventsSubscription.Iterator()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_23F14371C(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for EventsSubscription.Iterator(0);
    return (_QWORD *)sub_23F126098((uint64_t)v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_23F143780()
{
  unint64_t v0;

  sub_23F14380C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23F14380C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256DFEEC8[0])
  {
    type metadata accessor for SessionServerMessage(255);
    sub_23F125540(&qword_256DFEB10);
    v0 = sub_23F268324();
    if (!v1)
      atomic_store(v0, qword_256DFEEC8);
  }
}

uint64_t sub_23F14387C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_23F143898(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F1438B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23F1438C4()
{
  return swift_task_alloc();
}

uint64_t sub_23F1438D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_23F1438F0()
{
  return swift_task_dealloc();
}

uint64_t sub_23F14390C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F143928(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F143930@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

void sub_23F143954()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23F143964@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void sub_23F143970(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F125D68(v2, a2);
}

uint64_t sub_23F143978()
{
  return type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent(0);
}

uint64_t sub_23F143980()
{
  return type metadata accessor for SessionDebuggerSubscriptionEvent(0);
}

uint64_t EventID.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23F131B8C();
  return sub_23F126180(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t EventID.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23F131B8C();
  return sub_23F126180(a2, a1, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 32));
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v5 = sub_23F131B8C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1262C8();
  v9 = v8 - v7;
  v10 = type metadata accessor for EventID();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F126058();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v5) == 1)
  {
    sub_23F143B44(a1);
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a2, 1, 1, v10);
  }
  else
  {
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v12(v9, a1, v5);
    v12(v2, v9, v5);
    sub_23F143B84(v2, a2);
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a2, 0, 1, v10);
  }
}

uint64_t type metadata accessor for EventID()
{
  uint64_t result;

  result = qword_256DFEF88;
  if (!qword_256DFEF88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F143B44(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F1217E8(&qword_256DFEB98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F143B84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t EventID.hash(into:)()
{
  sub_23F131B8C();
  sub_23F14420C(&qword_256DFEAF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23F26812C();
}

uint64_t _s16IntelligenceFlow14MessagePayloadO9TerminateV2eeoiySbAE_AEtFZ_0()
{
  return 1;
}

uint64_t sub_23F143C28()
{
  return sub_23F268840();
}

uint64_t sub_23F143C4C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F143CC8()
{
  sub_23F268834();
  sub_23F268840();
  return sub_23F268864();
}

uint64_t sub_23F143D08()
{
  return 0x65756C6176;
}

uint64_t sub_23F143D28()
{
  sub_23F268834();
  sub_23F268840();
  return sub_23F268864();
}

uint64_t sub_23F143D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F143C4C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F143D90()
{
  return sub_23F1236BC();
}

uint64_t sub_23F143DA8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s16IntelligenceFlow14MessagePayloadO9TerminateV2eeoiySbAE_AEtFZ_0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23F143DD0()
{
  sub_23F143F20();
  return sub_23F2688B8();
}

uint64_t sub_23F143DF8()
{
  sub_23F143F20();
  return sub_23F2688C4();
}

uint64_t EventID.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23F1217E8(&qword_256DFEF00);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F126058();
  sub_23F12545C(a1, a1[3]);
  sub_23F143F20();
  sub_23F2688A0();
  sub_23F267D84();
  sub_23F14420C(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F268750();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
}

unint64_t sub_23F143F20()
{
  unint64_t result;

  result = qword_256DFEF08;
  if (!qword_256DFEF08)
  {
    result = MEMORY[0x242667160](&unk_23F26A39C, &type metadata for EventID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFEF08);
  }
  return result;
}

uint64_t EventID.hashValue.getter()
{
  sub_23F268834();
  sub_23F131B8C();
  sub_23F14420C(&qword_256DFEAF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23F26812C();
  return sub_23F268864();
}

uint64_t EventID.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v19 = sub_23F267D84();
  v16 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  sub_23F1262C8();
  v18 = v5 - v4;
  v6 = sub_23F1217E8(&qword_256DFEF18);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1262C8();
  v10 = v9 - v8;
  v11 = type metadata accessor for EventID();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1262C8();
  v14 = v13 - v12;
  sub_23F12545C(a1, a1[3]);
  sub_23F143F20();
  sub_23F268888();
  if (!v2)
  {
    sub_23F14420C(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23F2686B4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v14, v18, v19);
    sub_23F143B84(v14, a2);
  }
  return _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)a1);
}

uint64_t sub_23F144178()
{
  sub_23F268834();
  sub_23F267D84();
  sub_23F14420C(&qword_256DFEAF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23F26812C();
  return sub_23F268864();
}

uint64_t sub_23F1441E0()
{
  return sub_23F14420C(&qword_256DFEF28, (uint64_t (*)(uint64_t))type metadata accessor for EventID, (uint64_t)&protocol conformance descriptor for EventID);
}

uint64_t sub_23F14420C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x242667160](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F144250@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EventID.init(from:)(a1, a2);
}

uint64_t sub_23F144264(_QWORD *a1)
{
  return EventID.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for EventID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F267D84();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for EventID(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F267D84();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for EventID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for EventID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for EventID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for EventID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F144404(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F131B8C();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for EventID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F144440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F131B8C();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, a2, a2, v4);
}

uint64_t sub_23F144474()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F267D84();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EventID.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for EventID.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F144570 + 4 * byte_23F26A200[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F144590 + 4 * byte_23F26A205[v4]))();
}

_BYTE *sub_23F144570(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F144590(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F144598(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F1445A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F1445A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F1445B0(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23F1445BC()
{
  return 0;
}

ValueMetadata *type metadata accessor for EventID.CodingKeys()
{
  return &type metadata for EventID.CodingKeys;
}

unint64_t sub_23F1445D8()
{
  unint64_t result;

  result = qword_256DFEFC0;
  if (!qword_256DFEFC0)
  {
    result = MEMORY[0x242667160](&unk_23F26A374, &type metadata for EventID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFEFC0);
  }
  return result;
}

unint64_t sub_23F144618()
{
  unint64_t result;

  result = qword_256DFEFC8;
  if (!qword_256DFEFC8)
  {
    result = MEMORY[0x242667160]("\r", &type metadata for EventID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFEFC8);
  }
  return result;
}

unint64_t sub_23F144658()
{
  unint64_t result;

  result = qword_256DFEFD0[0];
  if (!qword_256DFEFD0[0])
  {
    result = MEMORY[0x242667160](&unk_23F26A30C, &type metadata for EventID.CodingKeys);
    atomic_store(result, qword_256DFEFD0);
  }
  return result;
}

void IndexedElements.Iterator.inner.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23F14493C(a1, a2);
}

uint64_t IndexedElements.Iterator.inner.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_23F14615C();
  sub_23F146134();
  sub_23F14617C();
  v3 = sub_23F268558();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*IndexedElements.Iterator.inner.modify())()
{
  return nullsub_1;
}

void IndexedElements.Iterator.init(inner:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23F1449DC(a1, a2, a3);
}

void IndexedElements.Iterator.next()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v25 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = sub_23F146168();
  v5 = *(_QWORD *)(v3 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24 = v4;
  v7 = sub_23F1461C4();
  v8 = sub_23F26845C();
  v9 = *(_QWORD *)(v8 - 8);
  sub_23F146194();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - v11;
  v13 = sub_23F146168();
  v14 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  v26 = v13;
  v27 = v2;
  v28 = v14;
  v29 = v5;
  sub_23F268558();
  sub_23F26854C();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v12, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v15 = sub_23F1461C4();
    v16 = v25;
    v17 = 1;
  }
  else
  {
    v18 = &v12[*(int *)(v7 + 48)];
    v19 = v24;
    v20 = sub_23F1461C4();
    v21 = v25;
    v22 = v25 + *(int *)(v20 + 48);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v25, v12, v19);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v22, v18, AssociatedTypeWitness);
    v16 = v21;
    v17 = 0;
    v15 = v20;
  }
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v16, v17, 1, v15);
  sub_23F125EFC();
}

void IndexedElements.inner.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23F14493C(a1, a2);
}

void sub_23F14493C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_23F1461CC();
  v7 = sub_23F1461A0(*(_QWORD *)(v6 + 8), AssociatedTypeWitness, v4, v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, v2, v7);
  sub_23F146144();
}

void IndexedElements.init(inner:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23F1449DC(a1, a2, a3);
}

void sub_23F1449DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F1461D8();
  v7 = sub_23F1461CC();
  v8 = sub_23F1461A0(*(_QWORD *)(v7 + 8), v6, a2, v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a3, a1, v8);
  sub_23F146144();
}

void IndexedElements.makeIterator()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE v13[32];

  v4 = *(_QWORD *)(a1 + 16);
  sub_23F14615C();
  sub_23F146134();
  sub_23F1461B0();
  v5 = sub_23F268564();
  v6 = *(_QWORD *)(v5 - 8);
  sub_23F146194();
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v13[-v8];
  sub_23F1461B0();
  sub_23F268558();
  sub_23F146194();
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v13[-v11];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v9, v2, v5);
  sub_23F268540();
  IndexedElements.Iterator.init(inner:)((uint64_t)v12, v4, a2);
  sub_23F125EFC();
}

uint64_t sub_23F144B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  IndexedElements.makeIterator()(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
}

uint64_t sub_23F144BAC()
{
  return sub_23F26821C();
}

void Collection.indexed()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[4];

  v6 = sub_23F1461D8();
  v7 = *(_QWORD *)(v6 - 8);
  sub_23F146194();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v16 - v9;
  v11 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  v12 = *(_QWORD *)(a2 + 8);
  v16[0] = v6;
  v16[1] = a1;
  v16[2] = v11;
  v16[3] = v12;
  sub_23F268564();
  sub_23F146194();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v16 - v14;
  sub_23F268390();
  sub_23F2687BC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  IndexedElements.init(inner:)((uint64_t)v15, a1, a3);
  sub_23F125EFC();
}

void sub_23F144CF4()
{
  JUMPOUT(0x242667160);
}

uint64_t sub_23F144D04()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23F144D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F145484(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BEE2610]);
}

uint64_t *sub_23F144D18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = *(_QWORD *)(v7 + 64) + v9;
  v12 = *(_DWORD *)(v7 + 80) | v9;
  v13 = v12;
  v14 = v12 & 0x100000;
  if (v13 > 7 || v14 != 0 || (v11 & (unint64_t)~v10) + *(_QWORD *)(v8 + 64) > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  else
  {
    v18 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v18, ((unint64_t)a2 + v11) & v18, v5);
  }
  return a1;
}

uint64_t sub_23F144E00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))((*(_QWORD *)(v5 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80), v3);
}

uint64_t sub_23F144E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_23F144F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_23F144F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_23F14502C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_23F1450BC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  uint64_t v22;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = AssociatedTypeWitness;
  v13 = *(_QWORD *)(v7 + 64);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = v13 + v14;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v15 & ~v14) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((a2 - v11 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v22 = a1;
          v10 = v8;
        }
        else
        {
          v22 = (v15 + a1) & ~v14;
          v12 = v5;
        }
        return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v22, v10, v12);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if ((_DWORD)v16)
  {
    if (v16 <= 3)
      v21 = v16;
    else
      v21 = 4;
    __asm { BR              X12 }
  }
  return v11 + v20 + 1;
}

void sub_23F145254(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  char v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  v12 = 8 * v11;
  if (a3 <= v10)
  {
    v13 = 0;
  }
  else if (v11 <= 3)
  {
    v15 = ((a3 - v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v10 < a2)
  {
    v14 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v16 = v14 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for IndexedElements(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F126D88(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IndexedElements);
}

uint64_t sub_23F145478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F145484(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BEE2600]);
}

uint64_t sub_23F145484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v6;

  sub_23F14615C();
  sub_23F146134();
  sub_23F14617C();
  result = a4(319);
  if (v6 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23F145538(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = v6 + v9;
  v12 = *(_QWORD *)(v8 + 64);
  v13 = *(_DWORD *)(v5 + 80) | v9;
  v14 = (*(_BYTE *)(v5 + 80) | v9);
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || v12 + (v11 & (unint64_t)~v10) + 1 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = v7;
    v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v21 = ((unint64_t)a2 + v11) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
    *(_BYTE *)((((unint64_t)a1 + v11) & v20) + v12) = *(_BYTE *)(v21 + v12);
  }
  return a1;
}

uint64_t sub_23F1456B4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))((v4 + a1 + *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80), v5);
}

uint64_t sub_23F14579C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  *(_BYTE *)(v10 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_23F1458B8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v10, v11, v7);
  *(_BYTE *)(v10 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_23F1459D4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v11, v7);
  *(_BYTE *)(v10 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_23F145AF0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v10, v11, v7);
  *(_BYTE *)(v10 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_23F145C0C(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  uint64_t v21;
  unsigned int v23;
  int v24;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0xFE)
    v10 = 254;
  if (!a2)
    return 0;
  v11 = v7;
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = *(_QWORD *)(v5 + 64) + v12;
  v14 = *(_QWORD *)(v8 + 64);
  if (a2 <= v10)
    goto LABEL_25;
  v15 = v14 + (v13 & ~v12) + 1;
  v16 = 8 * v15;
  if (v15 > 3)
    goto LABEL_9;
  v18 = ((a2 - v10 + ~(-1 << v16)) >> v16) + 1;
  if (HIWORD(v18))
  {
    v17 = *(_DWORD *)(a1 + v15);
    if (v17)
      goto LABEL_16;
  }
  else
  {
    if (v18 <= 0xFF)
    {
      if (v18 < 2)
        goto LABEL_25;
LABEL_9:
      v17 = *(unsigned __int8 *)(a1 + v15);
      if (!*(_BYTE *)(a1 + v15))
        goto LABEL_25;
LABEL_16:
      v19 = (v17 - 1) << v16;
      if (v15 > 3)
        v19 = 0;
      if ((_DWORD)v15)
      {
        if (v15 <= 3)
          v20 = v15;
        else
          v20 = 4;
        __asm { BR              X12 }
      }
      v24 = v10 + v19;
      return (v24 + 1);
    }
    v17 = *(unsigned __int16 *)(a1 + v15);
    if (*(_WORD *)(a1 + v15))
      goto LABEL_16;
  }
LABEL_25:
  if ((_DWORD)v6 == v10)
  {
    v21 = a1;
    v9 = v6;
    v11 = AssociatedTypeWitness;
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v21, v9, v11);
  }
  v21 = (v13 + a1) & ~v12;
  if ((_DWORD)v9 == v10)
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v21, v9, v11);
  v23 = *(unsigned __int8 *)(v21 + v14);
  if (v23 < 2)
    return 0;
  v24 = (v23 + 2147483646) & 0x7FFFFFFF;
  return (v24 + 1);
}

void sub_23F145E64(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  size_t v10;
  char v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= 0xFE)
    v9 = 254;
  v10 = *(_QWORD *)(v8 + 64)
      + ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
      + 1;
  v11 = 8 * v10;
  if (a3 <= v9)
  {
    v12 = 0;
  }
  else if (v10 <= 3)
  {
    v14 = ((a3 - v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = 4u;
    }
    else if (v14 >= 0x100)
    {
      v12 = 2;
    }
    else
    {
      v12 = v14 > 1;
    }
  }
  else
  {
    v12 = 1u;
  }
  if (v9 < a2)
  {
    v13 = ~v9 + a2;
    if (v10 < 4)
    {
      if (*(_DWORD *)(v8 + 64)
         + ((*(_DWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~*(unsigned __int8 *)(v8 + 80)) != -1)
      {
        v15 = v13 & ~(-1 << v11);
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if ((_DWORD)v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t type metadata accessor for IndexedElements.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F126D88(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IndexedElements.Iterator);
}

uint64_t sub_23F146134()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_23F14615C()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_23F146168()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_23F1461A0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t (*v6)(_QWORD, uint64_t *);

  a4 = a1;
  a5 = v5;
  return v6(0, &a2);
}

uint64_t sub_23F1461B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = v0;
  *(_QWORD *)(v4 - 96) = v2;
  *(_QWORD *)(v4 - 88) = v3;
  return 0;
}

uint64_t sub_23F1461C4()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t sub_23F1461CC()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_23F1461D8()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t IntelligenceFlowError.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

_QWORD *sub_23F1461F0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD v5[3];

  v2 = sub_23F146BF0(a1);
  sub_23F26887C();
  if (!v1)
  {
    sub_23F146BF0(v5);
    sub_23F146AE4();
    sub_23F2687A4();
    sub_23F146B20(0, &qword_256DFF0F0);
    sub_23F146B20(0, &qword_256DFF0F8);
    v3 = sub_23F2683B4();
    v2 = (_QWORD *)v3;
    if (v3)
    {
      sub_23F146BF8();
      _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v5);
      sub_23F131BF4();
      return v2;
    }
    sub_23F146B58();
    swift_allocError();
    swift_willThrow();
    sub_23F146BF8();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v5);
  }
  sub_23F131BF4();
  return v2;
}

uint64_t sub_23F146344(_QWORD *a1, uint64_t a2)
{
  id v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v9;
  id v10[6];

  v10[5] = *(id *)MEMORY[0x24BDAC8D0];
  v10[0] = 0;
  v3 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, a2, 1, v10);
  v4 = v10[0];
  if (v3)
  {
    v5 = sub_23F267D18();
    v7 = v6;

    sub_23F12545C(a1, a1[3]);
    sub_23F268894();
    sub_23F1467C8((uint64_t)v10, (uint64_t)v10[3]);
    sub_23F146B94();
    sub_23F2687B0();
    sub_23F1311B4(v5, v7);
    return _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v10);
  }
  else
  {
    v9 = v4;
    sub_23F267CAC();

    return swift_willThrow();
  }
}

_QWORD *sub_23F146498@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_23F1461F0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23F1464C0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23F146344(a1, *v1);
}

id IntelligenceFlowError.error.getter()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_23F131158(*v0);
  return v1;
}

id IntelligenceFlowError.nsError.getter()
{
  uint64_t v0;
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;

  v1 = *(void **)v0;
  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
    return v1;
  v5 = *(void **)v0;
  v3 = v1;
  v4 = sub_23F267CA0();
  sub_23F146BE8(v5);
  return (id)v4;
}

uint64_t IntelligenceFlowError.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  void *v7;
  _QWORD v8[4];

  sub_23F12545C(a1, a1[3]);
  sub_23F26887C();
  if (!v2)
  {
    sub_23F12545C(v8, v8[3]);
    sub_23F14665C();
    sub_23F2687A4();
    v4 = v7;
    v5 = sub_23F268420();

    if (v5)
    {

      v4 = (id)v5;
    }
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v8);
    *(_QWORD *)a2 = v4;
    *(_BYTE *)(a2 + 8) = v5 == 0;
  }
  return sub_23F131BF4();
}

unint64_t sub_23F14665C()
{
  unint64_t result;

  result = qword_256DFF0D8;
  if (!qword_256DFF0D8)
  {
    result = MEMORY[0x242667160](&unk_23F26A5EC, &unk_250FAA588);
    atomic_store(result, (unint64_t *)&qword_256DFF0D8);
  }
  return result;
}

uint64_t IntelligenceFlowError.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  char v3;
  id v4;
  void *v6;
  _BYTE v7[24];
  uint64_t v8;

  v2 = *(void **)v1;
  v3 = *(_BYTE *)(v1 + 8);
  sub_23F146BF0(a1);
  sub_23F268894();
  if ((v3 & 1) != 0)
  {
    sub_23F1467C8((uint64_t)v7, v8);
    sub_23F1467F0();
    sub_23F2687B0();
  }
  else
  {
    swift_getErrorValue();
    v4 = v2;
    v6 = (void *)sub_23F2687EC();
    sub_23F1467C8((uint64_t)v7, v8);
    sub_23F1467F0();
    sub_23F2687B0();

    sub_23F131164(v2);
  }
  return _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v7);
}

uint64_t sub_23F1467C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_23F1467F0()
{
  unint64_t result;

  result = qword_256DFF0E0;
  if (!qword_256DFF0E0)
  {
    result = MEMORY[0x242667160]("\r", &unk_250FAA588);
    atomic_store(result, (unint64_t *)&qword_256DFF0E0);
  }
  return result;
}

uint64_t sub_23F14682C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceFlowError.init(from:)(a1, a2);
}

uint64_t sub_23F146840(_QWORD *a1)
{
  return IntelligenceFlowError.encode(to:)(a1);
}

uint64_t static IntelligenceFlowError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  char v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;

  v2 = *(void **)a1;
  v3 = *(_BYTE *)(a1 + 8);
  v4 = *(void **)a2;
  v5 = *(_BYTE *)(a2 + 8);
  v6 = *(void **)a1;
  if ((v3 & 1) != 0)
  {
    sub_23F131158(v6);
    v7 = v2;
  }
  else
  {
    sub_23F131158(v6);
    v7 = (void *)sub_23F267CA0();
    sub_23F146BE8(v2);
  }
  sub_23F131158(v4);
  if ((v5 & 1) != 0)
  {
    v8 = v4;
  }
  else
  {
    v8 = (void *)sub_23F267CA0();
    sub_23F146BE8(v4);
  }
  sub_23F146B20(0, (unint64_t *)&qword_256DFEAE0);
  v9 = sub_23F268444();

  return v9 & 1;
}

uint64_t initializeWithTake for IntelligenceFlowError(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

void type metadata accessor for IntelligenceFlowError()
{
  sub_23F131844();
}

uint64_t _s16IntelligenceFlow21IntelligenceFlowErrorVwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_23F131158(*(id *)a2);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void _s16IntelligenceFlow21IntelligenceFlowErrorVwxx_0(id *a1)
{
  sub_23F131164(*a1);
}

uint64_t _s16IntelligenceFlow21IntelligenceFlowErrorVwca_0(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_23F131158(*(id *)a2);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_23F131164(v5);
  return a1;
}

uint64_t _s16IntelligenceFlow21IntelligenceFlowErrorVwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  sub_23F131164(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolboxClient.ToolboxClientError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolboxClient.ToolboxClientError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23F146AB8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_23F146AC0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

void type metadata accessor for IntelligenceFlowError.Representation()
{
  sub_23F131844();
}

void type metadata accessor for IntelligenceFlowError.WrappedNSError()
{
  sub_23F131844();
}

unint64_t sub_23F146AE4()
{
  unint64_t result;

  result = qword_256DFF0E8;
  if (!qword_256DFF0E8)
  {
    result = MEMORY[0x242667160](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256DFF0E8);
  }
  return result;
}

uint64_t sub_23F146B20(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_23F146B58()
{
  unint64_t result;

  result = qword_256DFF100;
  if (!qword_256DFF100)
  {
    result = MEMORY[0x242667160](&unk_23F26A63C, &unk_250FAA5B0);
    atomic_store(result, (unint64_t *)&qword_256DFF100);
  }
  return result;
}

unint64_t sub_23F146B94()
{
  unint64_t result;

  result = qword_256DFF108;
  if (!qword_256DFF108)
  {
    result = MEMORY[0x242667160](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256DFF108);
  }
  return result;
}

void type metadata accessor for IntelligenceFlowError.WrappedNSError.CouldNotUnarchiveNSError()
{
  sub_23F131844();
}

void sub_23F146BE8(id a1)
{
  sub_23F131164(a1);
}

_QWORD *sub_23F146BF0(_QWORD *a1)
{
  uint64_t v1;

  return sub_23F12545C(a1, v1);
}

uint64_t sub_23F146BF8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F1311B4(v1, v0);
}

uint64_t sub_23F146C04()
{
  return sub_23F146C18();
}

uint64_t sub_23F146C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_23F267DD8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE573D8], v0);
  sub_23F267DCC();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void *sub_23F146CB4()
{
  qword_256DFF110 = (uint64_t)&unk_256E63C48;
  return &unk_256E63C48;
}

id static InternalXPCService.interface.getter()
{
  if (qword_256DFE470 != -1)
    swift_once();
  return (id)qword_256DFF110;
}

unint64_t static InternalXPCService.serviceName.getter()
{
  return 0xD000000000000023;
}

void sub_23F146D24()
{
  qword_256DFF118 = MEMORY[0x24BEE4AF8];
}

uint64_t static InternalXPCService.selectorClasses.getter()
{
  if (qword_256DFE478 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F146D78()
{
  uint64_t v0;

  v0 = sub_23F267FDC();
  sub_23F1470EC(v0, qword_256DFF120);
  sub_23F146E30(v0, (uint64_t)qword_256DFF120);
  return sub_23F267E20();
}

uint64_t static InternalXPCService.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256DFE480 != -1)
    swift_once();
  v2 = sub_23F267FDC();
  v3 = sub_23F146E30(v2, (uint64_t)qword_256DFF120);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_23F146E30(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_23F146E4C()
{
  static InternalXPCService.serviceName.getter();
  return 0xD000000000000023;
}

uint64_t InternalClient.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  InternalClient.init()(v0, v1);
  return v0;
}

uint64_t InternalClient.init()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = 0;
  sub_23F147004(&qword_256DFF138, a2, (uint64_t (*)(uint64_t))type metadata accessor for InternalClient, (uint64_t)&protocol conformance descriptor for InternalClient);
  sub_23F1217E8(&qword_256DFF140);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v2 + 16) = sub_23F267ED4();
  swift_release();
  return v2;
}

uint64_t type metadata accessor for InternalClient()
{
  return objc_opt_self();
}

uint64_t InternalClient.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t InternalClient.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23F146F98(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_23F147004(&qword_256DFF138, a2, (uint64_t (*)(uint64_t))type metadata accessor for InternalClient, (uint64_t)&protocol conformance descriptor for InternalClient);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23F146FD4()
{
  return sub_23F147004(&qword_256DFF148, 255, MEMORY[0x24BE797D0], MEMORY[0x24BE797E0]);
}

uint64_t sub_23F147004(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x242667160](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F147044()
{
  type metadata accessor for InternalClient();
  return sub_23F267EEC();
}

uint64_t sub_23F147084(uint64_t a1)
{
  MEMORY[0x242667160](&unk_23F26A760, a1);
  return sub_23F146C04();
}

ValueMetadata *type metadata accessor for InternalXPCService()
{
  return &type metadata for InternalXPCService;
}

uint64_t method lookup function for InternalClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InternalClient.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t *sub_23F1470EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void static Preferences.subscript.getter(uint64_t *a1)
{
  uint64_t v1;
  void (*v2)(uint64_t *, _QWORD);
  uint64_t v3;

  v1 = *a1;
  v2 = (void (*)(uint64_t *, _QWORD))swift_readAtKeyPath();
  sub_23F14C658(*MEMORY[0x24BEE2B70] + v1);
  v2(&v3, 0);
  sub_23F14C36C();
}

void static Preferences.subscript.setter(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v3 = *(_QWORD *)(*MEMORY[0x24BEE2B70] + *a2 + 8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v8 - v5, a1, v3);
  swift_setAtWritableKeyPath();
  swift_release();
  v6 = sub_23F14C64C();
  v7(v6);
  sub_23F131ABC();
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v3 = *(_QWORD *)(*MEMORY[0x24BEE2B70] + *a2 + 8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v7 - v5;
  if (qword_256DFE488 != -1)
    swift_once();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_23F126DC0();
  sub_23F14C69C();
  swift_setAtWritableKeyPath();
  swift_endAccess();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  sub_23F131ABC();
}

void static Preferences.subscript.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t *v5;

  v0 = sub_23F14C6A8();
  v1 = sub_23F14C778(v0);
  v3 = sub_23F14C494((uint64_t)v1, v2);
  v4 = sub_23F14C744((uint64_t)v3);
  v5 = (uint64_t *)sub_23F14C7F8((uint64_t)v4);
  static Preferences.subscript.getter(v5);
  sub_23F12612C();
}

{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t *v5;

  v0 = sub_23F14C6A8();
  v1 = sub_23F14C778(v0);
  v3 = sub_23F14C494((uint64_t)v1, v2);
  v4 = sub_23F14C744((uint64_t)v3);
  v5 = (uint64_t *)sub_23F14C7F8((uint64_t)v4);
  static Preferences.subscript.getter(v5);
  sub_23F12612C();
}

void sub_23F14726C(uint64_t **a1, char a2)
{
  sub_23F149A68(a1, a2, (void (*)(void *, uint64_t))static Preferences.subscript.setter);
}

void IntelligenceFlowPreferences.plannerType.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (!*(_QWORD *)(v2 + 24))
  {
    if (*(_QWORD *)(v2 + 40))
    {
      v3 = sub_23F14C33C(a1, a2);
      v5 = sub_23F14C33C(v3, v4);
      v7 = sub_23F14C3CC(v5, v6);
      if (v8)
      {
        sub_23F14C470(v7, v8);
        goto LABEL_8;
      }
    }
    else
    {
      v9 = sub_23F14C33C(a1, a2);
      sub_23F14C33C(v9, v10);
    }
    v11 = sub_23F131798();
    sub_23F14C470(v11, v12);
    sub_23F14C66C();
    goto LABEL_8;
  }
  sub_23F14C33C(a1, a2);
LABEL_8:
  v13 = sub_23F1263B8();
  sub_23F14C470(v13, v14);
  sub_23F14C64C();
  sub_23F131A5C();
}

uint64_t sub_23F147314(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23F147364(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t IntelligenceFlowPreferences.$plannerType.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = *(_QWORD *)v1;
  a1[1] = v2;
  a1[2] = v3;
  sub_23F14C51C((uint64_t)a1, *(__n128 *)(v1 + 24));
  sub_23F1263B8();
  sub_23F1315C4();
  return sub_23F14C31C();
}

__n128 IntelligenceFlowPreferences.$plannerType.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  sub_23F14C454(a1);
  v3 = *(void **)(v1 + 48);
  swift_bridgeObjectRelease();
  sub_23F1318B8();
  sub_23F131A30();

  *(_OWORD *)v1 = v7;
  *(_OWORD *)(v1 + 16) = v6;
  *(_OWORD *)(v1 + 32) = v5;
  *(_QWORD *)(v1 + 48) = v2;
  sub_23F14C374();
  return result;
}

void IntelligenceFlowPreferences.$plannerType.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23F14C504();
  v2 = sub_23F14C5AC((uint64_t)v1);
  v3 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)v2 = *(_QWORD *)v0;
  *(_QWORD *)(v2 + 8) = v3;
  *(_QWORD *)(v2 + 16) = v4;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v0 + 24);
  sub_23F14C7AC(v2);
  sub_23F1263B8();
  sub_23F1315C4();
  sub_23F13175C();
  sub_23F14C69C();
  sub_23F131ABC();
}

#error "23F147518: call analysis failed (funcsize=32)"

void IntelligenceFlowPreferences.plannerOverride.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (!*(_QWORD *)(v2 + 80))
  {
    if (*(_QWORD *)(v2 + 96))
    {
      v3 = sub_23F14C33C(a1, a2);
      v5 = sub_23F14C33C(v3, v4);
      v7 = sub_23F14C3CC(v5, v6);
      if (v8)
      {
        sub_23F14C470(v7, v8);
        goto LABEL_8;
      }
    }
    else
    {
      v9 = sub_23F14C33C(a1, a2);
      sub_23F14C33C(v9, v10);
    }
    v11 = sub_23F131798();
    sub_23F14C470(v11, v12);
    sub_23F14C66C();
    goto LABEL_8;
  }
  sub_23F14C33C(a1, a2);
LABEL_8:
  v13 = sub_23F1263B8();
  sub_23F14C470(v13, v14);
  sub_23F14C64C();
  sub_23F131A5C();
}

uint64_t IntelligenceFlowPreferences.$plannerOverride.getter@<X0>(_QWORD *a1@<X8>)
{
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = v1[4].n128_u64[0];
  v3 = v1[4].n128_u64[1];
  *a1 = v1[3].n128_u64[1];
  a1[1] = v2;
  a1[2] = v3;
  sub_23F14C51C((uint64_t)a1, v1[5]);
  sub_23F1263B8();
  sub_23F1315C4();
  return sub_23F14C31C();
}

__n128 IntelligenceFlowPreferences.$plannerOverride.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  sub_23F14C454(a1);
  v3 = *(void **)(v1 + 104);
  swift_bridgeObjectRelease();
  sub_23F1318B8();
  sub_23F131A30();

  *(_OWORD *)(v1 + 56) = v7;
  *(_OWORD *)(v1 + 72) = v6;
  *(_OWORD *)(v1 + 88) = v5;
  *(_QWORD *)(v1 + 104) = v2;
  sub_23F14C374();
  return result;
}

void IntelligenceFlowPreferences.$plannerOverride.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23F14C504();
  v2 = sub_23F14C5AC((uint64_t)v1);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)v2 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v2 + 8) = v3;
  *(_QWORD *)(v2 + 16) = v4;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v0 + 80);
  sub_23F14C7AC(v2);
  sub_23F1263B8();
  sub_23F1315C4();
  sub_23F13175C();
  sub_23F14C69C();
  sub_23F131ABC();
}

#error "23F147734: call analysis failed (funcsize=32)"

void IntelligenceFlowPreferences.shouldWriteToShortcutsDatabase.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_23F14C328();
  if (*(_BYTE *)(v0 + 113) == 2 && *(_QWORD *)(v0 + 128))
  {
    v1 = *(void **)(v0 + 136);
    sub_23F1263B8();
    v2 = v1;
    sub_23F14C244();
    sub_23F14C350();
    sub_23F1318B8();
    sub_23F14C510();
  }
  sub_23F14C28C();
}

uint64_t IntelligenceFlowPreferences.$shouldWriteToShortcutsDatabase.getter@<X0>(uint64_t a1@<X8>)
{
  sub_23F14C2A0(a1);
  return sub_23F14C284();
}

__n128 IntelligenceFlowPreferences.$shouldWriteToShortcutsDatabase.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __n128 result;

  sub_23F14C328();
  sub_23F14C2CC(v13);
  v14 = *(void **)(v10 + 136);
  swift_bridgeObjectRelease();

  *(_BYTE *)(v10 + 112) = v9;
  *(_BYTE *)(v10 + 113) = v11;
  *(_OWORD *)(v10 + 120) = a9;
  *(_QWORD *)(v10 + 136) = v12;
  sub_23F14C28C();
  return result;
}

void IntelligenceFlowPreferences.$shouldWriteToShortcutsDatabase.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F14C344();
  v2 = sub_23F14C478((uint64_t)v1);
  v3 = sub_23F14C35C(v2, *(_BYTE *)(v0 + 112));
  sub_23F14C48C(v3);
  sub_23F1263B8();
  sub_23F14C3A8();
  sub_23F12612C();
}

void sub_23F14785C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  id v6;

  sub_23F125F3C();
  sub_23F14C2B4();
  v4 = *(void **)(v2 + 136);
  if ((v5 & 1) != 0)
  {
    sub_23F1315C4();
    v6 = v3;
    sub_23F131A30();

    sub_23F14C750();
    sub_23F14C484();

  }
  else
  {
    sub_23F131A30();

    sub_23F14C750();
  }
  sub_23F14C26C(v0);
}

double IntelligenceFlowPreferences.entityResolutionThreshold.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD v8[2];
  __int128 v9;

  v3 = *(_OWORD *)(v2 + 160);
  v8[0] = *(_OWORD *)(v2 + 144);
  v8[1] = v3;
  v9 = *(_OWORD *)(v2 + 176);
  if ((v3 & 1) == 0)
    return *((double *)v8 + 1);
  v4 = *(double *)&v9;
  if (!(_QWORD)v9)
    return *(double *)v8;
  sub_23F14C4CC(a1, a2);
  v5 = sub_23F149DE4(v2, v9, (uint64_t)v8);
  sub_23F14C434(v5, v6);
  if ((v2 & 1) != 0)
    return *(double *)v8;
  else
    return v4;
}

uint64_t IntelligenceFlowPreferences.$entityResolutionThreshold.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v2 = *(_QWORD *)(v1 + 152);
  v3 = *(_BYTE *)(v1 + 160);
  v4 = *(_QWORD *)(v1 + 168);
  v5 = *(_QWORD *)(v1 + 176);
  v6 = *(void **)(v1 + 184);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 144);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  v7 = v6;
  return sub_23F14C284();
}

double sub_23F147978@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  double result;
  _QWORD v6[2];
  char v7;
  __int128 v8;
  uint64_t v9;

  IntelligenceFlowPreferences.$entityResolutionThreshold.getter((uint64_t)v6);
  v2 = v6[1];
  v3 = v7;
  v4 = v9;
  *(_QWORD *)a1 = v6[0];
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  result = *(double *)&v8;
  *(_OWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 40) = v4;
  return result;
}

double sub_23F1479D0(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  double result;
  uint64_t v8[2];
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_BYTE *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v8[0] = *(_QWORD *)a1;
  v8[1] = v1;
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v6 = v5;
  swift_bridgeObjectRetain();
  *(_QWORD *)&result = IntelligenceFlowPreferences.$entityResolutionThreshold.setter(v8).n128_u64[0];
  return result;
}

__n128 IntelligenceFlowPreferences.$entityResolutionThreshold.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  __n128 result;
  __int128 v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v8 = *(_OWORD *)(a1 + 3);
  v5 = a1[5];
  v6 = *(void **)(v1 + 184);
  swift_bridgeObjectRelease();

  *(_QWORD *)(v1 + 144) = v2;
  *(_QWORD *)(v1 + 152) = v3;
  *(_BYTE *)(v1 + 160) = v4;
  *(_OWORD *)(v1 + 168) = v8;
  *(_QWORD *)(v1 + 184) = v5;
  sub_23F14C700();
  return result;
}

void IntelligenceFlowPreferences.$entityResolutionThreshold.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v1 = sub_23F14C6F8();
  v2 = sub_23F14C478((uint64_t)v1);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_BYTE *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v2 + 8) = *(_QWORD *)(v0 + 152);
  v7 = *(void **)(v0 + 184);
  *(_QWORD *)v2 = v3;
  *(_BYTE *)(v2 + 16) = v4;
  *(_QWORD *)(v2 + 24) = v5;
  *(_QWORD *)(v2 + 32) = v6;
  *(_QWORD *)(v2 + 40) = v7;
  *(_QWORD *)(v2 + 48) = v0;
  v8 = v7;
  sub_23F1263B8();
  sub_23F14C3A8();
  sub_23F12612C();
}

void sub_23F147B00(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  v5 = *(void **)(*(_QWORD *)(*(_QWORD *)a1 + 48) + 184);
  if ((a2 & 1) != 0)
  {
    sub_23F1315C4();
    v6 = v4;
    sub_23F131A30();

    sub_23F14C6D0();
    sub_23F14C6B8();

  }
  else
  {
    sub_23F131A30();

    sub_23F14C6D0();
  }
  free(v2);
}

void IntelligenceFlowPreferences.shouldShuffleTools.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_23F14C328();
  if (*(_BYTE *)(v0 + 193) == 2 && *(_QWORD *)(v0 + 208))
  {
    v1 = *(void **)(v0 + 216);
    sub_23F1263B8();
    v2 = v1;
    sub_23F14C244();
    sub_23F14C350();
    sub_23F1318B8();
    sub_23F14C510();
  }
  sub_23F14C28C();
}

uint64_t IntelligenceFlowPreferences.$shouldShuffleTools.getter@<X0>(uint64_t a1@<X8>)
{
  sub_23F14C2A0(a1);
  return sub_23F14C284();
}

__n128 IntelligenceFlowPreferences.$shouldShuffleTools.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __n128 result;

  sub_23F14C328();
  sub_23F14C2CC(v13);
  v14 = *(void **)(v10 + 216);
  swift_bridgeObjectRelease();

  *(_BYTE *)(v10 + 192) = v9;
  *(_BYTE *)(v10 + 193) = v11;
  *(_OWORD *)(v10 + 200) = a9;
  *(_QWORD *)(v10 + 216) = v12;
  sub_23F14C28C();
  return result;
}

void IntelligenceFlowPreferences.$shouldShuffleTools.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F14C344();
  v2 = sub_23F14C478((uint64_t)v1);
  v3 = sub_23F14C35C(v2, *(_BYTE *)(v0 + 192));
  sub_23F14C48C(v3);
  sub_23F1263B8();
  sub_23F14C3A8();
  sub_23F12612C();
}

void sub_23F147CA8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  id v6;

  sub_23F125F3C();
  sub_23F14C2B4();
  v4 = *(void **)(v2 + 216);
  if ((v5 & 1) != 0)
  {
    sub_23F1315C4();
    v6 = v3;
    sub_23F131A30();

    sub_23F14C78C();
    sub_23F14C484();

  }
  else
  {
    sub_23F131A30();

    sub_23F14C78C();
  }
  sub_23F14C26C(v0);
}

void IntelligenceFlowPreferences.appleConnectDawToken.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (!*(_QWORD *)(v2 + 248))
  {
    if (*(_QWORD *)(v2 + 264))
    {
      v3 = sub_23F14C33C(a1, a2);
      v5 = sub_23F14C33C(v3, v4);
      v7 = sub_23F14C3CC(v5, v6);
      if (v8)
      {
        sub_23F14C470(v7, v8);
        goto LABEL_8;
      }
    }
    else
    {
      v9 = sub_23F14C33C(a1, a2);
      sub_23F14C33C(v9, v10);
    }
    v11 = sub_23F131798();
    sub_23F14C470(v11, v12);
    sub_23F14C66C();
    goto LABEL_8;
  }
  sub_23F14C33C(a1, a2);
LABEL_8:
  v13 = sub_23F1263B8();
  sub_23F14C470(v13, v14);
  sub_23F14C64C();
  sub_23F131A5C();
}

uint64_t IntelligenceFlowPreferences.$appleConnectDawToken.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 232);
  v3 = *(_QWORD *)(v1 + 240);
  *a1 = *(_QWORD *)(v1 + 224);
  a1[1] = v2;
  a1[2] = v3;
  sub_23F14C51C((uint64_t)a1, *(__n128 *)(v1 + 248));
  sub_23F1263B8();
  sub_23F1315C4();
  return sub_23F14C31C();
}

void sub_23F147DDC(void (*a1)(_QWORD *__return_ptr)@<X3>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD v6[2];
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  a1(v6);
  v3 = v6[1];
  v4 = v9;
  *(_QWORD *)a2 = v6[0];
  *(_QWORD *)(a2 + 8) = v3;
  v5 = v8;
  *(_OWORD *)(a2 + 16) = v7;
  *(_OWORD *)(a2 + 32) = v5;
  *(_QWORD *)(a2 + 48) = v4;
  sub_23F14C700();
}

uint64_t sub_23F147E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD v12[3];
  __int128 v13;
  uint64_t v14;
  void *v15;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 40);
  v8 = *(void **)(a1 + 48);
  v12[0] = *(_QWORD *)a1;
  v12[1] = v6;
  v12[2] = v7;
  v13 = *(_OWORD *)(a1 + 24);
  v14 = v9;
  v15 = v8;
  v10 = v8;
  sub_23F131798();
  swift_bridgeObjectRetain();
  sub_23F13175C();
  return a5(v12);
}

__n128 IntelligenceFlowPreferences.$appleConnectDawToken.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  sub_23F14C454(a1);
  v3 = *(void **)(v1 + 272);
  swift_bridgeObjectRelease();
  sub_23F1318B8();
  sub_23F131A30();

  *(_OWORD *)(v1 + 224) = v7;
  *(_OWORD *)(v1 + 240) = v6;
  *(_OWORD *)(v1 + 256) = v5;
  *(_QWORD *)(v1 + 272) = v2;
  sub_23F14C374();
  return result;
}

void IntelligenceFlowPreferences.$appleConnectDawToken.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23F14C504();
  v2 = sub_23F14C5AC((uint64_t)v1);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  *(_QWORD *)v2 = *(_QWORD *)(v0 + 224);
  *(_QWORD *)(v2 + 8) = v3;
  *(_QWORD *)(v2 + 16) = v4;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v0 + 248);
  sub_23F14C7AC(v2);
  sub_23F1263B8();
  sub_23F1315C4();
  sub_23F13175C();
  sub_23F14C69C();
  sub_23F131ABC();
}

#error "23F147FC4: call analysis failed (funcsize=32)"

void IntelligenceFlowPreferences.toolBoxAllowedTools.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v3 = *(_OWORD *)(v2 + 296);
  v14 = *(_OWORD *)(v2 + 280);
  v15 = v3;
  v16 = *(_QWORD *)(v2 + 312);
  if (!*((_QWORD *)&v14 + 1))
  {
    if (*((_QWORD *)&v15 + 1))
    {
      v4 = sub_23F14C638(a1, a2);
      sub_23F14C638(v4, v5);
      v6 = sub_23F14A040(v15, *((uint64_t *)&v15 + 1), (uint64_t)&v14);
      if (v6)
      {
        sub_23F14C728(v6, v7);
        goto LABEL_8;
      }
    }
    else
    {
      v8 = sub_23F14C638(a1, a2);
      sub_23F14C638(v8, v9);
    }
    v10 = sub_23F1315C4();
    sub_23F14C728(v10, v11);
    sub_23F14C66C();
    goto LABEL_8;
  }
  sub_23F14C638(a1, a2);
LABEL_8:
  v12 = sub_23F1263B8();
  sub_23F14C728(v12, v13);
  sub_23F14C444();
}

uint64_t IntelligenceFlowPreferences.$toolBoxAllowedTools.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(v1 + 304);
  v2 = *(void **)(v1 + 312);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 280);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 288);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  v4 = v2;
  sub_23F1263B8();
  sub_23F1315C4();
  return sub_23F14C31C();
}

double sub_23F1480BC@<D0>(uint64_t a1@<X8>)
{
  double result;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  IntelligenceFlowPreferences.$toolBoxAllowedTools.getter((uint64_t)&v3);
  *(_QWORD *)a1 = v3;
  *(_OWORD *)(a1 + 8) = v4;
  result = *(double *)&v5;
  *(_OWORD *)(a1 + 24) = v5;
  return result;
}

void sub_23F148104(uint64_t *a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void *v7;

  v2 = a1[3];
  v1 = (void *)a1[4];
  v4 = *a1;
  v5 = *(_OWORD *)(a1 + 1);
  v6 = v2;
  v7 = v1;
  v3 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  IntelligenceFlowPreferences.$toolBoxAllowedTools.setter((__int128 *)&v4);
}

void IntelligenceFlowPreferences.$toolBoxAllowedTools.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __int128 v4;
  __int128 v5;

  v4 = a1[1];
  v5 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *(void **)(v1 + 312);
  swift_bridgeObjectRelease();
  sub_23F1318B8();
  sub_23F131A30();

  *(_OWORD *)(v1 + 280) = v5;
  *(_OWORD *)(v1 + 296) = v4;
  *(_QWORD *)(v1 + 312) = v2;
  sub_23F14C700();
}

void IntelligenceFlowPreferences.$toolBoxAllowedTools.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;

  v1 = malloc(0x30uLL);
  v2 = sub_23F14C478((uint64_t)v1);
  v4 = *(_QWORD *)(v0 + 304);
  v3 = *(void **)(v0 + 312);
  *(_QWORD *)v2 = *(_QWORD *)(v0 + 280);
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(v0 + 288);
  *(_QWORD *)(v2 + 24) = v4;
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v0;
  v5 = v3;
  sub_23F1263B8();
  sub_23F1315C4();
  sub_23F13175C();
  sub_23F14C69C();
  sub_23F131ABC();
}

#error "23F1482C4: call analysis failed (funcsize=37)"

uint64_t IntelligenceFlowPreferences.selectedToolBoxAllowList.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;

  v19 = *(_OWORD *)(v2 + 320);
  v3 = *(_OWORD *)(v2 + 336);
  if (*((_QWORD *)&v3 + 1) != 1)
  {
    sub_23F14C630(a1, a2);
    v4 = v3;
    goto LABEL_8;
  }
  v4 = *(_QWORD *)(v2 + 360);
  if (!v4)
  {
    v12 = sub_23F14C630(a1, a2);
    sub_23F14C630((uint64_t)v12, v13);
    goto LABEL_7;
  }
  v5 = sub_23F14C630(a1, a2);
  sub_23F14C630((uint64_t)v5, v6);
  v7 = sub_23F14C3A8();
  v10 = sub_23F14A268(v7, v8, v9);
  v4 = v10;
  if (v11 == 1)
  {
LABEL_7:
    v14 = sub_23F13175C();
    sub_23F14C720(v14, v15);
    sub_23F14A254(v4, 1);
    v4 = v19;
    goto LABEL_8;
  }
  sub_23F14C720(v10, v11);
LABEL_8:
  v16 = sub_23F14A1E8(v3, *((uint64_t *)&v3 + 1));
  sub_23F14C720(v16, v17);
  return v4;
}

uint64_t IntelligenceFlowPreferences.$selectedToolBoxAllowList.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __int128 v18;

  v2 = v1 + 40;
  v4 = v1[40];
  v3 = v1[41];
  v5 = v1[42];
  v7 = v1[45];
  v6 = (void *)v1[46];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  v18 = *(_OWORD *)(v2 + 3);
  *(_OWORD *)(a1 + 24) = v18;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v6;
  v8 = swift_bridgeObjectRetain();
  sub_23F14C6C0(v8, v9, v10, v11, v12, v13, v14, v15, v18);
  v16 = v6;
  return swift_bridgeObjectRetain();
}

double sub_23F148414@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  IntelligenceFlowPreferences.$selectedToolBoxAllowList.getter((uint64_t)v5);
  v2 = v7;
  v3 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = v2;
  return result;
}

double sub_23F14845C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  double result;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void *v11;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(void **)(a1 + 48);
  *(_QWORD *)&v7 = *(_QWORD *)a1;
  *((_QWORD *)&v7 + 1) = v1;
  v8 = v2;
  v9 = *(_OWORD *)(a1 + 24);
  v10 = v3;
  v11 = v4;
  swift_bridgeObjectRetain();
  sub_23F14A1E8(v2, v9);
  v5 = v4;
  swift_bridgeObjectRetain();
  *(_QWORD *)&result = IntelligenceFlowPreferences.$selectedToolBoxAllowList.setter(&v7).n128_u64[0];
  return result;
}

__n128 IntelligenceFlowPreferences.$selectedToolBoxAllowList.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  __n128 result;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = a1[1];
  v9 = *a1;
  v7 = a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *(_QWORD *)(v1 + 336);
  v4 = *(_QWORD *)(v1 + 344);
  v5 = *(void **)(v1 + 368);
  swift_bridgeObjectRelease();
  sub_23F14A254(v3, v4);
  swift_bridgeObjectRelease();

  *(_OWORD *)(v1 + 320) = v9;
  *(_OWORD *)(v1 + 336) = v8;
  *(_OWORD *)(v1 + 352) = v7;
  *(_QWORD *)(v1 + 368) = v2;
  sub_23F14C374();
  return result;
}

uint64_t (*IntelligenceFlowPreferences.$selectedToolBoxAllowList.modify())(int, int, int, int, int, int, int, int, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  __int128 v19;

  v2 = sub_23F14C504();
  sub_23F14C5AC((uint64_t)v2);
  v3 = v0 + 40;
  v5 = v0[40];
  v4 = v0[41];
  v6 = v0[42];
  v8 = v0[45];
  v7 = (void *)v0[46];
  *(_QWORD *)v1 = v5;
  *(_QWORD *)(v1 + 8) = v4;
  *(_QWORD *)(v1 + 16) = v6;
  v19 = *(_OWORD *)(v3 + 3);
  *(_OWORD *)(v1 + 24) = v19;
  *(_QWORD *)(v1 + 40) = v8;
  *(_QWORD *)(v1 + 48) = v7;
  v9 = swift_bridgeObjectRetain();
  sub_23F14C6C0(v9, v10, v11, v12, v13, v14, v15, v16, v19);
  v17 = v7;
  sub_23F13175C();
  return sub_23F1485C8;
}

#error "23F148690: call analysis failed (funcsize=54)"

void IntelligenceFlowPreferences.disableToolBoxAllowList.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_23F14C328();
  if (*(_BYTE *)(v0 + 377) == 2 && *(_QWORD *)(v0 + 392))
  {
    v1 = *(void **)(v0 + 400);
    sub_23F1263B8();
    v2 = v1;
    sub_23F14C244();
    sub_23F14C350();
    sub_23F1318B8();
    sub_23F14C510();
  }
  sub_23F14C28C();
}

uint64_t IntelligenceFlowPreferences.$disableToolBoxAllowList.getter@<X0>(uint64_t a1@<X8>)
{
  sub_23F14C2A0(a1);
  return sub_23F14C284();
}

__n128 IntelligenceFlowPreferences.$disableToolBoxAllowList.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __n128 result;

  sub_23F14C328();
  sub_23F14C2CC(v13);
  v14 = *(void **)(v10 + 400);
  swift_bridgeObjectRelease();

  *(_BYTE *)(v10 + 376) = v9;
  *(_BYTE *)(v10 + 377) = v11;
  *(_OWORD *)(v10 + 384) = a9;
  *(_QWORD *)(v10 + 400) = v12;
  sub_23F14C28C();
  return result;
}

void IntelligenceFlowPreferences.$disableToolBoxAllowList.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F14C344();
  v2 = sub_23F14C478((uint64_t)v1);
  v3 = sub_23F14C35C(v2, *(_BYTE *)(v0 + 376));
  sub_23F14C48C(v3);
  sub_23F1263B8();
  sub_23F14C3A8();
  sub_23F12612C();
}

void sub_23F1487B8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  id v6;

  sub_23F125F3C();
  sub_23F14C2B4();
  v4 = *(void **)(v2 + 400);
  if ((v5 & 1) != 0)
  {
    sub_23F1315C4();
    v6 = v3;
    sub_23F131A30();

    sub_23F14C7E4();
    sub_23F14C484();

  }
  else
  {
    sub_23F131A30();

    sub_23F14C7E4();
  }
  sub_23F14C26C(v0);
}

void IntelligenceFlowPreferences.responseCatalog.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_23F14C328();
  if (*(_BYTE *)(v0 + 409) == 2 && *(_QWORD *)(v0 + 424))
  {
    v1 = *(void **)(v0 + 432);
    sub_23F1263B8();
    v2 = v1;
    sub_23F14C244();
    sub_23F14C350();
    sub_23F1318B8();
    sub_23F14C510();
  }
  sub_23F14C28C();
}

uint64_t IntelligenceFlowPreferences.$responseCatalog.getter@<X0>(uint64_t a1@<X8>)
{
  sub_23F14C2A0(a1);
  return sub_23F14C284();
}

__n128 IntelligenceFlowPreferences.$responseCatalog.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __n128 result;

  sub_23F14C328();
  sub_23F14C2CC(v13);
  v14 = *(void **)(v10 + 432);
  swift_bridgeObjectRelease();

  *(_BYTE *)(v10 + 408) = v9;
  *(_BYTE *)(v10 + 409) = v11;
  *(_OWORD *)(v10 + 416) = a9;
  *(_QWORD *)(v10 + 432) = v12;
  sub_23F14C28C();
  return result;
}

void IntelligenceFlowPreferences.$responseCatalog.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F14C344();
  v2 = sub_23F14C478((uint64_t)v1);
  v3 = sub_23F14C35C(v2, *(_BYTE *)(v0 + 408));
  sub_23F14C48C(v3);
  sub_23F1263B8();
  sub_23F14C3A8();
  sub_23F12612C();
}

void sub_23F148928()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  id v6;

  sub_23F125F3C();
  sub_23F14C2B4();
  v4 = *(void **)(v2 + 432);
  if ((v5 & 1) != 0)
  {
    sub_23F1315C4();
    v6 = v3;
    sub_23F131A30();

    sub_23F14C7B4();
    sub_23F14C484();

  }
  else
  {
    sub_23F131A30();

    sub_23F14C7B4();
  }
  sub_23F14C26C(v0);
}

void IntelligenceFlowPreferences.responseCatalogSideLoad.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_23F14C328();
  if (*(_BYTE *)(v0 + 441) == 2 && *(_QWORD *)(v0 + 456))
  {
    v1 = *(void **)(v0 + 464);
    sub_23F1263B8();
    v2 = v1;
    sub_23F14C244();
    sub_23F14C350();
    sub_23F1318B8();
    sub_23F14C510();
  }
  sub_23F14C28C();
}

uint64_t IntelligenceFlowPreferences.$responseCatalogSideLoad.getter@<X0>(uint64_t a1@<X8>)
{
  sub_23F14C2A0(a1);
  return sub_23F14C284();
}

__n128 IntelligenceFlowPreferences.$responseCatalogSideLoad.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __n128 result;

  sub_23F14C328();
  sub_23F14C2CC(v13);
  v14 = *(void **)(v10 + 464);
  swift_bridgeObjectRelease();

  *(_BYTE *)(v10 + 440) = v9;
  *(_BYTE *)(v10 + 441) = v11;
  *(_OWORD *)(v10 + 448) = a9;
  *(_QWORD *)(v10 + 464) = v12;
  sub_23F14C28C();
  return result;
}

void IntelligenceFlowPreferences.$responseCatalogSideLoad.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F14C344();
  v2 = sub_23F14C478((uint64_t)v1);
  v3 = sub_23F14C35C(v2, *(_BYTE *)(v0 + 440));
  sub_23F14C48C(v3);
  sub_23F1263B8();
  sub_23F14C3A8();
  sub_23F12612C();
}

void sub_23F148A98()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  id v6;

  sub_23F125F3C();
  sub_23F14C2B4();
  v4 = *(void **)(v2 + 464);
  if ((v5 & 1) != 0)
  {
    sub_23F1315C4();
    v6 = v3;
    sub_23F131A30();

    sub_23F14C764();
    sub_23F14C484();

  }
  else
  {
    sub_23F131A30();

    sub_23F14C764();
  }
  sub_23F14C26C(v0);
}

void IntelligenceFlowPreferences.inputValidation.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_23F14C328();
  if (*(_BYTE *)(v0 + 473) == 2 && *(_QWORD *)(v0 + 488))
  {
    v1 = *(void **)(v0 + 496);
    sub_23F1263B8();
    v2 = v1;
    sub_23F14C244();
    sub_23F14C350();
    sub_23F1318B8();
    sub_23F14C510();
  }
  sub_23F14C28C();
}

uint64_t IntelligenceFlowPreferences.$inputValidation.getter@<X0>(uint64_t a1@<X8>)
{
  sub_23F14C2A0(a1);
  return sub_23F14C284();
}

__n128 IntelligenceFlowPreferences.$inputValidation.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __n128 result;

  sub_23F14C328();
  sub_23F14C2CC(v13);
  v14 = *(void **)(v10 + 496);
  swift_bridgeObjectRelease();

  *(_BYTE *)(v10 + 472) = v9;
  *(_BYTE *)(v10 + 473) = v11;
  *(_OWORD *)(v10 + 480) = a9;
  *(_QWORD *)(v10 + 496) = v12;
  sub_23F14C28C();
  return result;
}

void IntelligenceFlowPreferences.$inputValidation.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F14C344();
  v2 = sub_23F14C478((uint64_t)v1);
  v3 = sub_23F14C35C(v2, *(_BYTE *)(v0 + 472));
  sub_23F14C48C(v3);
  sub_23F1263B8();
  sub_23F14C3A8();
  sub_23F12612C();
}

void sub_23F148C08()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  id v6;

  sub_23F125F3C();
  sub_23F14C2B4();
  v4 = *(void **)(v2 + 496);
  if ((v5 & 1) != 0)
  {
    sub_23F1315C4();
    v6 = v3;
    sub_23F131A30();

    sub_23F14C730();
    sub_23F14C484();

  }
  else
  {
    sub_23F131A30();

    sub_23F14C730();
  }
  sub_23F14C26C(v0);
}

void IntelligenceFlowPreferences.bypassTranscriptWriteRedaction.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_23F14C328();
  if (*(_BYTE *)(v0 + 505) == 2 && *(_QWORD *)(v0 + 520))
  {
    v1 = *(void **)(v0 + 528);
    sub_23F1263B8();
    v2 = v1;
    sub_23F14C244();
    sub_23F14C350();
    sub_23F1318B8();
    sub_23F14C510();
  }
  sub_23F14C28C();
}

uint64_t IntelligenceFlowPreferences.$bypassTranscriptWriteRedaction.getter@<X0>(uint64_t a1@<X8>)
{
  sub_23F14C2A0(a1);
  return sub_23F14C284();
}

__n128 IntelligenceFlowPreferences.$bypassTranscriptWriteRedaction.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __n128 result;

  sub_23F14C328();
  sub_23F14C2CC(v13);
  v14 = *(void **)(v10 + 528);
  swift_bridgeObjectRelease();

  *(_BYTE *)(v10 + 504) = v9;
  *(_BYTE *)(v10 + 505) = v11;
  *(_OWORD *)(v10 + 512) = a9;
  *(_QWORD *)(v10 + 528) = v12;
  sub_23F14C28C();
  return result;
}

void IntelligenceFlowPreferences.$bypassTranscriptWriteRedaction.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F14C344();
  v2 = sub_23F14C478((uint64_t)v1);
  v3 = sub_23F14C35C(v2, *(_BYTE *)(v0 + 504));
  sub_23F14C48C(v3);
  sub_23F1263B8();
  sub_23F14C3A8();
  sub_23F12612C();
}

void sub_23F148D84()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  id v6;

  sub_23F125F3C();
  sub_23F14C2B4();
  v4 = *(void **)(v2 + 528);
  if ((v5 & 1) != 0)
  {
    sub_23F1315C4();
    v6 = v3;
    sub_23F131A30();

    sub_23F14C708();
    sub_23F14C484();

  }
  else
  {
    sub_23F131A30();

    sub_23F14C708();
  }
  sub_23F14C26C(v0);
}

void IntelligenceFlowPreferences.queryDecorationCacheSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)&v3 = sub_23F14C3FC((__n128 *)(v0 + 536)).n128_u64[0];
  if (v4 && v9)
  {
    v5 = sub_23F14C4CC(v1, v2, v3);
    v7 = sub_23F14C3B4(v5, v6);
    sub_23F14C434(v7, v8);
  }
  sub_23F14C444();
}

uint64_t IntelligenceFlowPreferences.$queryDecorationCacheSize.getter@<X0>(uint64_t a1@<X8>)
{
  sub_23F14C3E4(a1);
  return sub_23F14C284();
}

__n128 IntelligenceFlowPreferences.$queryDecorationCacheSize.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  __n128 result;

  sub_23F14C328();
  sub_23F14C4B4(v14);
  v15 = *(void **)(v10 + 576);
  swift_bridgeObjectRelease();

  *(_QWORD *)(v10 + 536) = v9;
  *(_QWORD *)(v10 + 544) = v11;
  *(_BYTE *)(v10 + 552) = v12;
  *(_OWORD *)(v10 + 560) = a9;
  *(_QWORD *)(v10 + 576) = v13;
  sub_23F14C28C();
  return result;
}

void IntelligenceFlowPreferences.$queryDecorationCacheSize.modify()
{
  void *v0;
  __n128 *v1;
  unsigned __int8 v2;
  uint64_t v3;

  v0 = sub_23F14C6F8();
  v1 = (__n128 *)sub_23F14C68C((uint64_t)v0);
  sub_23F14C5FC(v1, v2);
  sub_23F14C7C8(v3);
  sub_23F1263B8();
  sub_23F14C3A8();
  sub_23F12612C();
}

#error "23F148F44: call analysis failed (funcsize=24)"

void IntelligenceFlowPreferences.shouldDisableSearchPlusActConfirmation.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_23F14C328();
  if (*(_BYTE *)(v0 + 585) == 2 && *(_QWORD *)(v0 + 600))
  {
    v1 = *(void **)(v0 + 608);
    sub_23F1263B8();
    v2 = v1;
    sub_23F14C244();
    sub_23F14C350();
    sub_23F1318B8();
    sub_23F14C510();
  }
  sub_23F14C28C();
}

uint64_t IntelligenceFlowPreferences.$shouldDisableSearchPlusActConfirmation.getter@<X0>(uint64_t a1@<X8>)
{
  sub_23F14C2A0(a1);
  return sub_23F14C284();
}

__n128 sub_23F148FE8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __n128 result;
  uint64_t v10;
  char v11;
  char v12;
  __n128 v13;
  uint64_t v14;

  sub_23F14C6E8(a1, a2, a3, a4, a5, a6, a7, a8, v10);
  *(_BYTE *)v8 = v11;
  *(_BYTE *)(v8 + 1) = v12;
  result = v13;
  *(__n128 *)(v8 + 8) = v13;
  *(_QWORD *)(v8 + 24) = v14;
  return result;
}

void sub_23F14902C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *))
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  _BYTE v11[8];
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v6 = *(_BYTE *)(a1 + 1);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(void **)(a1 + 24);
  v11[0] = *(_BYTE *)a1;
  v11[1] = v6;
  v12 = v7;
  v13 = v8;
  v14 = v9;
  v10 = v9;
  sub_23F131798();
  a5(v11);
  sub_23F14C36C();
}

__n128 IntelligenceFlowPreferences.$shouldDisableSearchPlusActConfirmation.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __n128 result;

  sub_23F14C328();
  sub_23F14C2CC(v13);
  v14 = *(void **)(v10 + 608);
  swift_bridgeObjectRelease();

  *(_BYTE *)(v10 + 584) = v9;
  *(_BYTE *)(v10 + 585) = v11;
  *(_OWORD *)(v10 + 592) = a9;
  *(_QWORD *)(v10 + 608) = v12;
  sub_23F14C28C();
  return result;
}

void IntelligenceFlowPreferences.$shouldDisableSearchPlusActConfirmation.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F14C344();
  v2 = sub_23F14C478((uint64_t)v1);
  v3 = sub_23F14C35C(v2, *(_BYTE *)(v0 + 584));
  sub_23F14C48C(v3);
  sub_23F1263B8();
  sub_23F14C3A8();
  sub_23F12612C();
}

void sub_23F149118()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  id v6;

  sub_23F125F3C();
  sub_23F14C2B4();
  v4 = *(void **)(v2 + 608);
  if ((v5 & 1) != 0)
  {
    sub_23F1315C4();
    v6 = v3;
    sub_23F131A30();

    sub_23F14C674();
    sub_23F14C484();

  }
  else
  {
    sub_23F131A30();

    sub_23F14C674();
  }
  sub_23F14C26C(v0);
}

void IntelligenceFlowPreferences.planOverridesDelayDurationInMs.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)&v3 = sub_23F14C3FC((__n128 *)(v0 + 616)).n128_u64[0];
  if (v4 && v9)
  {
    v5 = sub_23F14C4CC(v1, v2, v3);
    v7 = sub_23F14C3B4(v5, v6);
    sub_23F14C434(v7, v8);
  }
  sub_23F14C444();
}

uint64_t IntelligenceFlowPreferences.$planOverridesDelayDurationInMs.getter@<X0>(uint64_t a1@<X8>)
{
  sub_23F14C3E4(a1);
  return sub_23F14C284();
}

__n128 IntelligenceFlowPreferences.$planOverridesDelayDurationInMs.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  __n128 result;

  sub_23F14C328();
  sub_23F14C4B4(v14);
  v15 = *(void **)(v10 + 656);
  swift_bridgeObjectRelease();

  *(_QWORD *)(v10 + 616) = v9;
  *(_QWORD *)(v10 + 624) = v11;
  *(_BYTE *)(v10 + 632) = v12;
  *(_OWORD *)(v10 + 640) = a9;
  *(_QWORD *)(v10 + 656) = v13;
  sub_23F14C28C();
  return result;
}

void IntelligenceFlowPreferences.$planOverridesDelayDurationInMs.modify()
{
  void *v0;
  __n128 *v1;
  unsigned __int8 v2;
  uint64_t v3;

  v0 = sub_23F14C6F8();
  v1 = (__n128 *)sub_23F14C68C((uint64_t)v0);
  sub_23F14C5FC(v1, v2);
  sub_23F14C7C8(v3);
  sub_23F1263B8();
  sub_23F14C3A8();
  sub_23F12612C();
}

#error "23F1492D8: call analysis failed (funcsize=24)"

void IntelligenceFlowPreferences.planOverridesDelayDurationVariationInMs.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)&v3 = sub_23F14C3FC((__n128 *)(v0 + 664)).n128_u64[0];
  if (v4 && v9)
  {
    v5 = sub_23F14C4CC(v1, v2, v3);
    v7 = sub_23F14C3B4(v5, v6);
    sub_23F14C434(v7, v8);
  }
  sub_23F14C444();
}

uint64_t IntelligenceFlowPreferences.$planOverridesDelayDurationVariationInMs.getter@<X0>(uint64_t a1@<X8>)
{
  sub_23F14C3E4(a1);
  return sub_23F14C284();
}

__n128 sub_23F149368(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __n128 result;
  __int128 v10;
  char v11;
  __int128 v12;
  uint64_t v13;

  sub_23F14C6E8(a1, a2, a3, a4, a5, a6, a7, a8, v10);
  *(_OWORD *)v8 = v10;
  *(_BYTE *)(v8 + 16) = v11;
  *(_OWORD *)(v8 + 24) = v12;
  *(_QWORD *)(v8 + 40) = v13;
  sub_23F14C36C();
  return result;
}

void sub_23F1493A8(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(__int128 *))
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v6 = *((_BYTE *)a1 + 16);
  v7 = *((_QWORD *)a1 + 3);
  v8 = *((_QWORD *)a1 + 4);
  v9 = (void *)*((_QWORD *)a1 + 5);
  v11 = *a1;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  v15 = v9;
  v10 = v9;
  sub_23F131798();
  a5(&v11);
  sub_23F14C700();
}

__n128 IntelligenceFlowPreferences.$planOverridesDelayDurationVariationInMs.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  __n128 result;

  sub_23F14C328();
  sub_23F14C4B4(v14);
  v15 = *(void **)(v10 + 704);
  swift_bridgeObjectRelease();

  *(_QWORD *)(v10 + 664) = v9;
  *(_QWORD *)(v10 + 672) = v11;
  *(_BYTE *)(v10 + 680) = v12;
  *(_OWORD *)(v10 + 688) = a9;
  *(_QWORD *)(v10 + 704) = v13;
  sub_23F14C28C();
  return result;
}

void IntelligenceFlowPreferences.$planOverridesDelayDurationVariationInMs.modify()
{
  void *v0;
  __n128 *v1;
  unsigned __int8 v2;
  uint64_t v3;

  v0 = sub_23F14C6F8();
  v1 = (__n128 *)sub_23F14C68C((uint64_t)v0);
  sub_23F14C5FC(v1, v2);
  sub_23F14C7C8(v3);
  sub_23F1263B8();
  sub_23F14C3A8();
  sub_23F12612C();
}

#error "23F1494E8: call analysis failed (funcsize=24)"

id sub_23F1494F8@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  __int16 v34;
  uint64_t v35;
  __int128 v36;
  char v37;
  uint64_t v38;

  v2 = (_BYTE *)(a1 + 552);
  if (qword_256DFE490 != -1)
    swift_once();
  v3 = qword_256DFF240;
  *(_QWORD *)a1 = 0x647261646E617473;
  *(_QWORD *)(a1 + 8) = 0xE800000000000000;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = xmmword_23F26A810;
  *(_QWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0xE000000000000000;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = xmmword_23F26A820;
  *(_QWORD *)(a1 + 104) = v3;
  *(_WORD *)(a1 + 112) = 512;
  *(_QWORD *)(a1 + 120) = 0xD000000000000018;
  *(_QWORD *)(a1 + 128) = 0x800000023F293350;
  *(_QWORD *)(a1 + 136) = v3;
  *(_QWORD *)(a1 + 144) = 0x3FFE666666666666;
  *(_QWORD *)(a1 + 152) = 0;
  *(_BYTE *)(a1 + 160) = 1;
  sub_23F14C640();
  *(_QWORD *)(a1 + 168) = v5;
  *(_QWORD *)(a1 + 176) = v4;
  *(_QWORD *)(a1 + 184) = v6;
  *(_WORD *)(a1 + 192) = v7;
  *(_QWORD *)(a1 + 200) = v8 - 6;
  *(_QWORD *)(a1 + 208) = 0x800000023F293390;
  *(_QWORD *)(a1 + 216) = v6;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 232) = v9;
  *(_OWORD *)(a1 + 240) = v10;
  sub_23F14C640();
  *(_QWORD *)(a1 + 256) = v11;
  *(_QWORD *)(a1 + 264) = v12;
  v13 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 272) = v14;
  *(_QWORD *)(a1 + 280) = v13;
  *(_OWORD *)(a1 + 288) = xmmword_23F26A830;
  *(_QWORD *)(a1 + 304) = 0x800000023F2933D0;
  *(_QWORD *)(a1 + 312) = v14;
  *(_OWORD *)(a1 + 320) = v15;
  *(_QWORD *)(a1 + 336) = 0;
  *(_QWORD *)(a1 + 344) = v16;
  *(_QWORD *)(a1 + 352) = v17;
  *(_QWORD *)(a1 + 360) = 0x800000023F2933F0;
  *(_QWORD *)(a1 + 368) = v14;
  *(_WORD *)(a1 + 376) = v18;
  sub_23F14C640();
  *(_QWORD *)(a1 + 384) = v19;
  *(_QWORD *)(a1 + 392) = v20;
  *(_QWORD *)(a1 + 400) = v21;
  *(_WORD *)(a1 + 408) = v22;
  *(_OWORD *)(a1 + 416) = xmmword_23F26A840;
  *(_QWORD *)(a1 + 432) = v21;
  *(_WORD *)(a1 + 440) = v22;
  sub_23F14C640();
  *(_QWORD *)(a1 + 448) = v23;
  *(_QWORD *)(a1 + 456) = v24;
  *(_QWORD *)(a1 + 464) = v25;
  *(_WORD *)(a1 + 472) = v26;
  *(_OWORD *)(a1 + 480) = xmmword_23F26A850;
  *(_QWORD *)(a1 + 496) = v25;
  *(_WORD *)(a1 + 504) = v26;
  *(_QWORD *)(a1 + 512) = v27 | 6;
  sub_23F14C640();
  *(_QWORD *)(a1 + 520) = v28;
  *(_QWORD *)(a1 + 528) = v29;
  *(_QWORD *)(a1 + 536) = 3;
  *(_QWORD *)(a1 + 544) = 0;
  *v2 = v30;
  *(_QWORD *)(a1 + 560) = v31;
  sub_23F14C640();
  *(_QWORD *)(a1 + 568) = v32;
  *(_QWORD *)(a1 + 576) = v33;
  *(_WORD *)(a1 + 584) = v34;
  *(_QWORD *)(a1 + 592) = v35 + 8;
  *(_QWORD *)(a1 + 600) = 0x800000023F293490;
  *(_QWORD *)(a1 + 608) = v33;
  *(_OWORD *)(a1 + 616) = v36;
  v2[80] = v37;
  *(_QWORD *)(a1 + 640) = v38;
  *(_QWORD *)(a1 + 648) = 0x800000023F2934C0;
  *(_QWORD *)(a1 + 656) = v33;
  *(_QWORD *)(a1 + 664) = 500;
  *(_QWORD *)(a1 + 672) = 0;
  v2[128] = v37;
  *(_QWORD *)(a1 + 688) = v35 + 15;
  *(_QWORD *)(a1 + 696) = 0x800000023F2934E0;
  *(_QWORD *)(a1 + 704) = v33;
  return v33;
}

id sub_23F1497CC()
{
  return sub_23F1494F8((uint64_t)&unk_256E61600);
}

_QWORD *static Preferences.subscript.getter()
{
  _BYTE v1[712];
  _QWORD v2[89];

  if (qword_256DFE488 != -1)
    swift_once();
  sub_23F126DC0();
  sub_23F14C7A0(v2);
  sub_23F14C7A0(v1);
  sub_23F14A814(v2);
  swift_getAtKeyPath();
  return sub_23F14AAA4(v2);
}

uint64_t static Preferences.subscript.getter(uint64_t *a1)
{
  uint64_t v1;
  void (*v2)(_BYTE *, _QWORD);
  _BYTE v4[32];

  v1 = *a1;
  if (qword_256DFE488 != -1)
    swift_once();
  sub_23F126DC0();
  v2 = (void (*)(_BYTE *, _QWORD))swift_readAtKeyPath();
  sub_23F14C658(*MEMORY[0x24BEE2B70] + v1);
  v2(v4, 0);
  return swift_endAccess();
}

void sub_23F149A5C(uint64_t **a1, char a2)
{
  sub_23F149A68(a1, a2, (void (*)(void *, uint64_t))static Preferences.subscript.setter);
}

void sub_23F149A68(uint64_t **a1, char a2, void (*a3)(void *, uint64_t))
{
  uint64_t *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;

  v4 = *a1;
  v5 = (void *)(*a1)[3];
  v6 = (void *)(*a1)[4];
  if ((a2 & 1) != 0)
  {
    v7 = v4[1];
    v8 = v4[2];
    v9 = *v4;
    v10 = sub_23F14C64C();
    v11(v10);
    swift_retain();
    a3(v5, v9);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    v12 = *v4;
    swift_retain();
    a3(v6, v12);
  }
  free(v6);
  free(v5);
  free(v4);
}

uint64_t sub_23F149B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[2];
  __int128 v13;
  __int128 v14;

  v3 = *(void **)(a3 + 48);
  if (!v3)
  {
    v13 = 0u;
    v14 = 0u;
LABEL_9:
    sub_23F14C1B4((uint64_t)&v13, &qword_256DFF210);
    return 0;
  }
  v4 = (void *)sub_23F268144();
  v5 = objc_msgSend(v3, sel_objectForKey_, v4);

  if (v5)
  {
    sub_23F26848C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_23F14C200((uint64_t)v12, (uint64_t)&v13, &qword_256DFF210);
  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_9;
  sub_23F14C1B4((uint64_t)&v13, &qword_256DFF210);
  v6 = (void *)sub_23F268144();
  v7 = objc_msgSend(v3, sel_stringForKey_, v6);

  if (v7)
  {
    v8 = sub_23F26815C();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  *(_QWORD *)&v12[0] = v8;
  *((_QWORD *)&v12[0] + 1) = v10;
  sub_23F1217E8(&qword_256DFF208);
  if (swift_dynamicCast())
    return v13;
  else
    return 0;
}

uint64_t sub_23F149C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void *v7;
  id v8;
  void *v9;
  unsigned __int8 v10;
  _OWORD v12[2];
  __int128 v13;
  __int128 v14;

  if (!a6)
  {
    v13 = 0u;
    v14 = 0u;
LABEL_10:
    sub_23F14C1B4((uint64_t)&v13, &qword_256DFF210);
    return 2;
  }
  v7 = (void *)sub_23F268144();
  v8 = objc_msgSend(a6, sel_objectForKey_, v7);

  if (v8)
  {
    sub_23F26848C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_23F14C200((uint64_t)v12, (uint64_t)&v13, &qword_256DFF210);
  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_10;
  sub_23F14C1B4((uint64_t)&v13, &qword_256DFF210);
  v9 = (void *)sub_23F268144();
  v10 = objc_msgSend(a6, sel_BOOLForKey_, v9);

  LOBYTE(v12[0]) = v10;
  sub_23F1217E8(&qword_256DFF230);
  if (swift_dynamicCast())
    return v13;
  else
    return 2;
}

uint64_t sub_23F149DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];
  __int128 v11;
  __int128 v12;

  v3 = *(void **)(a3 + 40);
  if (!v3)
  {
    v11 = 0u;
    v12 = 0u;
LABEL_10:
    sub_23F14C1B4((uint64_t)&v11, &qword_256DFF210);
    return 0;
  }
  v4 = (void *)sub_23F268144();
  v5 = objc_msgSend(v3, sel_objectForKey_, v4);

  if (v5)
  {
    sub_23F26848C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_23F14C200((uint64_t)v10, (uint64_t)&v11, &qword_256DFF210);
  if (!*((_QWORD *)&v12 + 1))
    goto LABEL_10;
  sub_23F14C1B4((uint64_t)&v11, &qword_256DFF210);
  v6 = (void *)sub_23F268144();
  objc_msgSend(v3, sel_doubleForKey_, v6);
  v8 = v7;

  *(_QWORD *)&v10[0] = v8;
  BYTE8(v10[0]) = 0;
  sub_23F1217E8(&qword_256DFF220);
  if (swift_dynamicCast())
    return v11;
  else
    return 0;
}

uint64_t sub_23F149F48(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23F149F78(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 40);
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_23F149FA8(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23F149FF4(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_23F14A040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[2];
  _BYTE v11[8];
  void *v12;

  sub_23F14C200(a3 + 32, (uint64_t)v11, &qword_256DFF238);
  sub_23F14C200((uint64_t)v11, (uint64_t)&v12, &qword_256DFF238);
  v3 = v12;
  if (!v12)
  {
    v8 = 0u;
    v9 = 0u;
LABEL_10:
    sub_23F14C1B4((uint64_t)&v8, &qword_256DFF210);
    return 0;
  }
  v4 = (void *)sub_23F268144();
  v5 = objc_msgSend(v3, sel_objectForKey_, v4);

  if (v5)
  {
    sub_23F26848C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_23F14C200((uint64_t)v10, (uint64_t)&v8, &qword_256DFF210);
  if (!*((_QWORD *)&v9 + 1))
    goto LABEL_10;
  sub_23F14C1F0(&v8, v10);
  sub_23F14C1F0(v10, &v8);
  sub_23F1217E8(&qword_256DFE7C8);
  if (swift_dynamicCast())
    return v7;
  else
    return 0;
}

_QWORD *sub_23F14A190(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = a1[2];
  v3 = a1[3];
  v4 = (void *)a1[6];
  swift_bridgeObjectRetain();
  sub_23F14A1E8(v2, v3);
  v5 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23F14A1E8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

_QWORD *sub_23F14A1FC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a1[2];
  v3 = a1[3];
  v4 = (void *)a1[6];
  swift_bridgeObjectRelease();
  sub_23F14A254(v2, v3);
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_23F14A254(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23F14A268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  unsigned __int8 v14;
  uint64_t *v15;
  void *v17;
  id v18;
  void *v19;
  int v20;
  int v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[2];

  v4 = sub_23F1217E8(&qword_2543444B0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v34 - v8;
  v10 = *(void **)(a3 + 48);
  if (!v10)
  {
    v35 = 0u;
    v36 = 0u;
LABEL_9:
    sub_23F14C1B4((uint64_t)&v35, &qword_256DFF210);
    return 0;
  }
  v11 = (void *)sub_23F268144();
  v12 = objc_msgSend(v10, sel_objectForKey_, v11);

  if (v12)
  {
    sub_23F26848C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v37, 0, sizeof(v37));
  }
  sub_23F14C200((uint64_t)v37, (uint64_t)&v35, &qword_256DFF210);
  if (!*((_QWORD *)&v36 + 1))
    goto LABEL_9;
  sub_23F14C1F0(&v35, v37);
  sub_23F1217E8(&qword_256DFF208);
  if (swift_dynamicCastMetatype())
  {
    v13 = (void *)sub_23F268144();
    v14 = objc_msgSend(v10, sel_BOOLForKey_, v13);

    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v37);
    LOBYTE(v35) = v14;
    v15 = &qword_256DFF230;
LABEL_16:
    sub_23F1217E8(v15);
    goto LABEL_17;
  }
  if (swift_dynamicCastMetatype())
  {
    v17 = (void *)sub_23F268144();
    v18 = objc_msgSend(v10, sel_integerForKey_, v17);

    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v37);
    *(_QWORD *)&v35 = v18;
    BYTE8(v35) = 0;
    v15 = (uint64_t *)&unk_256DFF218;
    goto LABEL_16;
  }
  if (swift_dynamicCastMetatype())
  {
    v19 = (void *)sub_23F268144();
    objc_msgSend(v10, sel_floatForKey_, v19);
    v21 = v20;

    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v37);
    LODWORD(v35) = v21;
    BYTE4(v35) = 0;
    v15 = (uint64_t *)&unk_256DFF228;
    goto LABEL_16;
  }
  if (swift_dynamicCastMetatype())
  {
    v22 = (void *)sub_23F268144();
    objc_msgSend(v10, sel_doubleForKey_, v22);
    v24 = v23;

    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v37);
    *(_QWORD *)&v35 = v24;
    BYTE8(v35) = 0;
    v15 = &qword_256DFF220;
    goto LABEL_16;
  }
  v25 = sub_23F267CF4();
  if (swift_dynamicCastMetatype())
  {
    v26 = (void *)sub_23F268144();
    v27 = objc_msgSend(v10, sel_URLForKey_, v26);

    if (v27)
    {
      sub_23F267CD0();

      v28 = 0;
    }
    else
    {
      v28 = 1;
    }
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v37);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, v28, 1, v25);
    sub_23F14C200((uint64_t)v7, (uint64_t)v9, &qword_2543444B0);
  }
  else
  {
    if (swift_dynamicCastMetatype())
    {
      v29 = (void *)sub_23F268144();
      v30 = objc_msgSend(v10, sel_stringForKey_, v29);

      if (v30)
      {
        v31 = sub_23F26815C();
        v33 = v32;

        _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v37);
        *(_QWORD *)&v34 = v31;
        *((_QWORD *)&v34 + 1) = v33;
      }
      else
      {
        _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v37);
        return 0;
      }
      return v34;
    }
    sub_23F14C1F0(v37, &v35);
  }
LABEL_17:
  if ((swift_dynamicCast() & 1) == 0)
    return xmmword_23F26A860;
  return v34;
}

uint64_t sub_23F14A6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;

  v3 = *(void **)(a3 + 40);
  if (!v3)
  {
    v10 = 0u;
    v11 = 0u;
LABEL_11:
    sub_23F14C1B4((uint64_t)&v10, &qword_256DFF210);
    return 0;
  }
  v4 = (void *)sub_23F268144();
  v5 = objc_msgSend(v3, sel_objectForKey_, v4);

  if (v5)
  {
    sub_23F26848C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_23F14C200((uint64_t)v9, (uint64_t)&v10, &qword_256DFF210);
  if (!*((_QWORD *)&v11 + 1))
    goto LABEL_11;
  sub_23F14C1B4((uint64_t)&v10, &qword_256DFF210);
  v6 = (void *)sub_23F268144();
  v7 = objc_msgSend(v3, sel_integerForKey_, v6);

  *(_QWORD *)&v9[0] = v7;
  BYTE8(v9[0]) = 0;
  sub_23F1217E8(&qword_256DFF218);
  if (swift_dynamicCast())
    return v10;
  else
    return 0;
}

_QWORD *sub_23F14A814(_QWORD *a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;

  v2 = (void *)a1[6];
  v3 = (void *)a1[13];
  v22 = (void *)a1[17];
  v23 = (void *)a1[23];
  v24 = (void *)a1[27];
  v26 = (void *)a1[34];
  v27 = (void *)a1[39];
  v28 = a1[43];
  v29 = a1[42];
  v30 = (void *)a1[46];
  v31 = (void *)a1[50];
  v32 = (void *)a1[54];
  v33 = (void *)a1[58];
  v34 = (void *)a1[62];
  v35 = (void *)a1[66];
  v36 = (void *)a1[72];
  v37 = (void *)a1[76];
  v38 = (void *)a1[82];
  v25 = (void *)a1[88];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v3;
  swift_bridgeObjectRetain();
  v6 = v22;
  swift_bridgeObjectRetain();
  v7 = v23;
  swift_bridgeObjectRetain();
  v8 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = v27;
  sub_23F14A1E8(v29, v28);
  v11 = v25;
  swift_bridgeObjectRetain();
  v12 = v30;
  swift_bridgeObjectRetain();
  v13 = v31;
  swift_bridgeObjectRetain();
  v14 = v32;
  swift_bridgeObjectRetain();
  v15 = v33;
  swift_bridgeObjectRetain();
  v16 = v34;
  swift_bridgeObjectRetain();
  v17 = v35;
  swift_bridgeObjectRetain();
  v18 = v36;
  swift_bridgeObjectRetain();
  v19 = v37;
  swift_bridgeObjectRetain();
  v20 = v38;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23F14AAA4(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  v2 = (void *)a1[6];
  v3 = (void *)a1[13];
  v5 = (void *)a1[17];
  v6 = (void *)a1[23];
  v7 = (void *)a1[27];
  v8 = (void *)a1[34];
  v9 = (void *)a1[39];
  v10 = a1[43];
  v11 = a1[42];
  v12 = (void *)a1[46];
  v13 = (void *)a1[50];
  v14 = (void *)a1[54];
  v15 = (void *)a1[58];
  v16 = (void *)a1[62];
  v17 = (void *)a1[66];
  v18 = (void *)a1[72];
  v19 = (void *)a1[76];
  v20 = (void *)a1[82];
  v21 = (void *)a1[88];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_23F14A254(v11, v10);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

void sub_23F14AD30(uint64_t a1@<X8>)
{
  sub_23F147DDC((void (*)(_QWORD *__return_ptr))IntelligenceFlowPreferences.$plannerType.getter, a1);
}

uint64_t sub_23F14AD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F147E24(a1, a2, a3, a4, (uint64_t (*)(_QWORD *))IntelligenceFlowPreferences.$plannerType.setter);
}

void sub_23F14AD68(uint64_t a1@<X8>)
{
  sub_23F147DDC((void (*)(_QWORD *__return_ptr))IntelligenceFlowPreferences.$plannerOverride.getter, a1);
}

uint64_t sub_23F14AD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F147E24(a1, a2, a3, a4, (uint64_t (*)(_QWORD *))IntelligenceFlowPreferences.$plannerOverride.setter);
}

double sub_23F14ADA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  *(_QWORD *)&result = sub_23F148FE8(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr))IntelligenceFlowPreferences.$shouldWriteToShortcutsDatabase.getter, a5, a6, a7, a8).n128_u64[0];
  return result;
}

void sub_23F14ADBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F14902C(a1, a2, a3, a4, (void (*)(_BYTE *))IntelligenceFlowPreferences.$shouldWriteToShortcutsDatabase.setter);
}

double sub_23F14ADE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  *(_QWORD *)&result = sub_23F148FE8(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr))IntelligenceFlowPreferences.$shouldShuffleTools.getter, a5, a6, a7, a8).n128_u64[0];
  return result;
}

void sub_23F14ADFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F14902C(a1, a2, a3, a4, (void (*)(_BYTE *))IntelligenceFlowPreferences.$shouldShuffleTools.setter);
}

void sub_23F14AE18(uint64_t a1@<X8>)
{
  sub_23F147DDC((void (*)(_QWORD *__return_ptr))IntelligenceFlowPreferences.$appleConnectDawToken.getter, a1);
}

uint64_t sub_23F14AE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F147E24(a1, a2, a3, a4, (uint64_t (*)(_QWORD *))IntelligenceFlowPreferences.$appleConnectDawToken.setter);
}

double sub_23F14AE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  *(_QWORD *)&result = sub_23F148FE8(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr))IntelligenceFlowPreferences.$disableToolBoxAllowList.getter, a5, a6, a7, a8).n128_u64[0];
  return result;
}

void sub_23F14AE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F14902C(a1, a2, a3, a4, (void (*)(_BYTE *))IntelligenceFlowPreferences.$disableToolBoxAllowList.setter);
}

double sub_23F14AE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  *(_QWORD *)&result = sub_23F148FE8(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr))IntelligenceFlowPreferences.$responseCatalog.getter, a5, a6, a7, a8).n128_u64[0];
  return result;
}

void sub_23F14AEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F14902C(a1, a2, a3, a4, (void (*)(_BYTE *))IntelligenceFlowPreferences.$responseCatalog.setter);
}

double sub_23F14AED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  *(_QWORD *)&result = sub_23F148FE8(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr))IntelligenceFlowPreferences.$responseCatalogSideLoad.getter, a5, a6, a7, a8).n128_u64[0];
  return result;
}

void sub_23F14AEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F14902C(a1, a2, a3, a4, (void (*)(_BYTE *))IntelligenceFlowPreferences.$responseCatalogSideLoad.setter);
}

double sub_23F14AF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  *(_QWORD *)&result = sub_23F148FE8(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr))IntelligenceFlowPreferences.$inputValidation.getter, a5, a6, a7, a8).n128_u64[0];
  return result;
}

void sub_23F14AF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F14902C(a1, a2, a3, a4, (void (*)(_BYTE *))IntelligenceFlowPreferences.$inputValidation.setter);
}

double sub_23F14AF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  *(_QWORD *)&result = sub_23F148FE8(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr))IntelligenceFlowPreferences.$bypassTranscriptWriteRedaction.getter, a5, a6, a7, a8).n128_u64[0];
  return result;
}

void sub_23F14AF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F14902C(a1, a2, a3, a4, (void (*)(_BYTE *))IntelligenceFlowPreferences.$bypassTranscriptWriteRedaction.setter);
}

double sub_23F14AF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  *(_QWORD *)&result = sub_23F149368(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr))IntelligenceFlowPreferences.$queryDecorationCacheSize.getter, a5, a6, a7, a8).n128_u64[0];
  return result;
}

void sub_23F14AF94(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F1493A8(a1, a2, a3, a4, (void (*)(__int128 *))IntelligenceFlowPreferences.$queryDecorationCacheSize.setter);
}

double sub_23F14AFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  *(_QWORD *)&result = sub_23F148FE8(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr))IntelligenceFlowPreferences.$shouldDisableSearchPlusActConfirmation.getter, a5, a6, a7, a8).n128_u64[0];
  return result;
}

void sub_23F14AFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F14902C(a1, a2, a3, a4, (void (*)(_BYTE *))IntelligenceFlowPreferences.$shouldDisableSearchPlusActConfirmation.setter);
}

double sub_23F14AFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  *(_QWORD *)&result = sub_23F149368(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr))IntelligenceFlowPreferences.$planOverridesDelayDurationInMs.getter, a5, a6, a7, a8).n128_u64[0];
  return result;
}

void sub_23F14B004(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F1493A8(a1, a2, a3, a4, (void (*)(__int128 *))IntelligenceFlowPreferences.$planOverridesDelayDurationInMs.setter);
}

double sub_23F14B020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  *(_QWORD *)&result = sub_23F149368(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr))IntelligenceFlowPreferences.$planOverridesDelayDurationVariationInMs.getter, a5, a6, a7, a8).n128_u64[0];
  return result;
}

void sub_23F14B03C(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F1493A8(a1, a2, a3, a4, (void (*)(__int128 *))IntelligenceFlowPreferences.$planOverridesDelayDurationVariationInMs.setter);
}

ValueMetadata *type metadata accessor for Preferences()
{
  return &type metadata for Preferences;
}

void destroy for IntelligenceFlowPreferences(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 344) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IntelligenceFlowPreferences(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  _OWORD *v64;
  void *v65;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  v52 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v52;
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v56 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v56;
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  v11 = *(_QWORD *)(a2 + 144);
  v55 = *(void **)(a2 + 136);
  *(_QWORD *)(a1 + 136) = v55;
  *(_QWORD *)(a1 + 144) = v11;
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v12 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v12;
  v51 = *(void **)(a2 + 184);
  *(_QWORD *)(a1 + 184) = v51;
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  v13 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v13;
  v14 = *(_QWORD *)(a2 + 224);
  v50 = *(void **)(a2 + 216);
  *(_QWORD *)(a1 + 216) = v50;
  *(_QWORD *)(a1 + 224) = v14;
  v15 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v15;
  v16 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v16;
  v17 = *(void **)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v17;
  v54 = v17;
  v18 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v18;
  v19 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v19;
  v21 = *(void **)(a2 + 312);
  v20 = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = v21;
  *(_QWORD *)(a1 + 320) = v20;
  v59 = v21;
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  v62 = *(_QWORD *)(a2 + 344);
  v64 = (_OWORD *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = v52;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = v56;
  swift_bridgeObjectRetain();
  v24 = v55;
  swift_bridgeObjectRetain();
  v25 = v51;
  swift_bridgeObjectRetain();
  v26 = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = v59;
  swift_bridgeObjectRetain();
  if (v62 == 1)
  {
    *(_OWORD *)(a1 + 336) = *v64;
  }
  else
  {
    *(_QWORD *)(a1 + 336) = *(_QWORD *)v64;
    *(_QWORD *)(a1 + 344) = v62;
    swift_bridgeObjectRetain();
  }
  v29 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v29;
  v65 = *(void **)(a2 + 368);
  *(_QWORD *)(a1 + 368) = v65;
  *(_WORD *)(a1 + 376) = *(_WORD *)(a2 + 376);
  v30 = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = v30;
  v63 = *(void **)(a2 + 400);
  *(_QWORD *)(a1 + 400) = v63;
  *(_WORD *)(a1 + 408) = *(_WORD *)(a2 + 408);
  v31 = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = v31;
  v61 = *(void **)(a2 + 432);
  *(_QWORD *)(a1 + 432) = v61;
  *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
  v32 = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = v32;
  v60 = *(void **)(a2 + 464);
  *(_QWORD *)(a1 + 464) = v60;
  *(_WORD *)(a1 + 472) = *(_WORD *)(a2 + 472);
  v33 = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = v33;
  v58 = *(void **)(a2 + 496);
  *(_QWORD *)(a1 + 496) = v58;
  *(_WORD *)(a1 + 504) = *(_WORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  v57 = *(void **)(a2 + 528);
  *(_QWORD *)(a1 + 528) = v57;
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  v53 = *(void **)(a2 + 576);
  *(_QWORD *)(a1 + 576) = v53;
  *(_BYTE *)(a1 + 584) = *(_BYTE *)(a2 + 584);
  *(_BYTE *)(a1 + 585) = *(_BYTE *)(a2 + 585);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  v34 = *(void **)(a2 + 608);
  *(_QWORD *)(a1 + 608) = v34;
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  v35 = *(_QWORD *)(a2 + 624);
  *(_BYTE *)(a1 + 632) = *(_BYTE *)(a2 + 632);
  *(_QWORD *)(a1 + 624) = v35;
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  v36 = *(void **)(a2 + 656);
  *(_QWORD *)(a1 + 656) = v36;
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  v37 = *(_QWORD *)(a2 + 672);
  *(_BYTE *)(a1 + 680) = *(_BYTE *)(a2 + 680);
  *(_QWORD *)(a1 + 672) = v37;
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  v38 = *(void **)(a2 + 704);
  *(_QWORD *)(a1 + 704) = v38;
  swift_bridgeObjectRetain();
  v39 = v65;
  swift_bridgeObjectRetain();
  v40 = v63;
  swift_bridgeObjectRetain();
  v41 = v61;
  swift_bridgeObjectRetain();
  v42 = v60;
  swift_bridgeObjectRetain();
  v43 = v58;
  swift_bridgeObjectRetain();
  v44 = v57;
  swift_bridgeObjectRetain();
  v45 = v53;
  swift_bridgeObjectRetain();
  v46 = v34;
  swift_bridgeObjectRetain();
  v47 = v36;
  swift_bridgeObjectRetain();
  v48 = v38;
  return a1;
}

uint64_t assignWithCopy for IntelligenceFlowPreferences(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;

  v4 = (_BYTE *)(a2 + 376);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 48);
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = v6;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 104);
  v9 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v9;
  v10 = v9;

  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(void **)(a1 + 136);
  v12 = *(void **)(a2 + 136);
  *(_QWORD *)(a1 + 136) = v12;
  v13 = v12;

  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v14 = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = v14;
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(void **)(a1 + 184);
  v16 = *(void **)(a2 + 184);
  *(_QWORD *)(a1 + 184) = v16;
  v17 = v16;

  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = *(void **)(a1 + 216);
  v19 = *(void **)(a2 + 216);
  *(_QWORD *)(a1 + 216) = v19;
  v20 = v19;

  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = *(void **)(a1 + 272);
  v22 = *(void **)(a2 + 272);
  *(_QWORD *)(a1 + 272) = v22;
  v23 = v22;

  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = *(void **)(a1 + 312);
  v25 = *(void **)(a2 + 312);
  *(_QWORD *)(a1 + 312) = v25;
  v26 = v25;

  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(a2 + 344);
  if (*(_QWORD *)(a1 + 344) != 1)
  {
    if (v27 != 1)
    {
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_23F14C1B4(a1 + 336, &qword_256DFF208);
    goto LABEL_6;
  }
  if (v27 == 1)
  {
LABEL_6:
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  swift_bridgeObjectRetain();
LABEL_8:
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = *(void **)(a1 + 368);
  v29 = *(void **)(a2 + 368);
  *(_QWORD *)(a1 + 368) = v29;
  v30 = v29;

  *(_BYTE *)(a1 + 376) = *v4;
  *(_BYTE *)(a1 + 377) = *(_BYTE *)(a2 + 377);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = *(void **)(a1 + 400);
  v32 = *(void **)(a2 + 400);
  *(_QWORD *)(a1 + 400) = v32;
  v33 = v32;

  *(_BYTE *)(a1 + 408) = v4[32];
  *(_BYTE *)(a1 + 409) = *(_BYTE *)(a2 + 409);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = *(void **)(a1 + 432);
  v35 = *(void **)(a2 + 432);
  *(_QWORD *)(a1 + 432) = v35;
  v36 = v35;

  *(_BYTE *)(a1 + 440) = v4[64];
  *(_BYTE *)(a1 + 441) = *(_BYTE *)(a2 + 441);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = *(void **)(a1 + 464);
  v38 = *(void **)(a2 + 464);
  *(_QWORD *)(a1 + 464) = v38;
  v39 = v38;

  *(_BYTE *)(a1 + 472) = v4[96];
  *(_BYTE *)(a1 + 473) = *(_BYTE *)(a2 + 473);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = *(void **)(a1 + 496);
  v41 = *(void **)(a2 + 496);
  *(_QWORD *)(a1 + 496) = v41;
  v42 = v41;

  *(_BYTE *)(a1 + 504) = v4[128];
  *(_BYTE *)(a1 + 505) = *(_BYTE *)(a2 + 505);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = *(void **)(a1 + 528);
  v44 = *(void **)(a2 + 528);
  *(_QWORD *)(a1 + 528) = v44;
  v45 = v44;

  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  v46 = *(_QWORD *)(a2 + 544);
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  *(_QWORD *)(a1 + 544) = v46;
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = *(void **)(a1 + 576);
  v48 = *(void **)(a2 + 576);
  *(_QWORD *)(a1 + 576) = v48;
  v49 = v48;

  *(_BYTE *)(a1 + 584) = v4[208];
  *(_BYTE *)(a1 + 585) = *(_BYTE *)(a2 + 585);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = *(void **)(a1 + 608);
  v51 = *(void **)(a2 + 608);
  *(_QWORD *)(a1 + 608) = v51;
  v52 = v51;

  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  v53 = *(_QWORD *)(a2 + 624);
  *(_BYTE *)(a1 + 632) = *(_BYTE *)(a2 + 632);
  *(_QWORD *)(a1 + 624) = v53;
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54 = *(void **)(a1 + 656);
  v55 = *(void **)(a2 + 656);
  *(_QWORD *)(a1 + 656) = v55;
  v56 = v55;

  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  v57 = *(_QWORD *)(a2 + 672);
  *(_BYTE *)(a1 + 680) = *(_BYTE *)(a2 + 680);
  *(_QWORD *)(a1 + 672) = v57;
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v58 = *(void **)(a1 + 704);
  v59 = *(void **)(a2 + 704);
  *(_QWORD *)(a1 + 704) = v59;
  v60 = v59;

  return a1;
}

void *initializeWithTake for IntelligenceFlowPreferences(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x2C8uLL);
}

uint64_t assignWithTake for IntelligenceFlowPreferences(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;

  v4 = (_BYTE *)(a2 + 376);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  v12 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);

  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  v13 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v13;
  swift_bridgeObjectRelease();
  v14 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);

  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  v15 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v15;
  swift_bridgeObjectRelease();
  v16 = *(void **)(a1 + 184);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);

  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  v17 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v17;
  swift_bridgeObjectRelease();
  v18 = *(void **)(a1 + 216);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);

  v19 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v21;
  swift_bridgeObjectRelease();
  v22 = *(void **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);

  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v23;
  swift_bridgeObjectRelease();
  v24 = *(void **)(a1 + 312);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);

  v25 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v25;
  swift_bridgeObjectRelease();
  v26 = (_QWORD *)(a2 + 336);
  if (*(_QWORD *)(a1 + 344) != 1)
  {
    v27 = *(_QWORD *)(a2 + 344);
    if (v27 != 1)
    {
      *(_QWORD *)(a1 + 336) = *v26;
      *(_QWORD *)(a1 + 344) = v27;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23F14C1B4(a1 + 336, &qword_256DFF208);
  }
  *(_OWORD *)(a1 + 336) = *(_OWORD *)v26;
LABEL_6:
  v28 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v28;
  swift_bridgeObjectRelease();
  v29 = *(void **)(a1 + 368);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);

  *(_BYTE *)(a1 + 376) = *v4;
  *(_BYTE *)(a1 + 377) = *(_BYTE *)(a2 + 377);
  v30 = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = v30;
  swift_bridgeObjectRelease();
  v31 = *(void **)(a1 + 400);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);

  *(_BYTE *)(a1 + 408) = v4[32];
  *(_BYTE *)(a1 + 409) = *(_BYTE *)(a2 + 409);
  v32 = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = v32;
  swift_bridgeObjectRelease();
  v33 = *(void **)(a1 + 432);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);

  *(_BYTE *)(a1 + 440) = v4[64];
  *(_BYTE *)(a1 + 441) = *(_BYTE *)(a2 + 441);
  v34 = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = v34;
  swift_bridgeObjectRelease();
  v35 = *(void **)(a1 + 464);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);

  *(_BYTE *)(a1 + 472) = v4[96];
  *(_BYTE *)(a1 + 473) = *(_BYTE *)(a2 + 473);
  v36 = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = v36;
  swift_bridgeObjectRelease();
  v37 = *(void **)(a1 + 496);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);

  *(_BYTE *)(a1 + 504) = v4[128];
  *(_BYTE *)(a1 + 505) = *(_BYTE *)(a2 + 505);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_bridgeObjectRelease();
  v38 = *(void **)(a1 + 528);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);

  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  swift_bridgeObjectRelease();
  v39 = *(void **)(a1 + 576);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);

  *(_BYTE *)(a1 + 584) = v4[208];
  *(_BYTE *)(a1 + 585) = *(_BYTE *)(a2 + 585);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  swift_bridgeObjectRelease();
  v40 = *(void **)(a1 + 608);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);

  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_BYTE *)(a1 + 632) = *(_BYTE *)(a2 + 632);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  swift_bridgeObjectRelease();
  v41 = *(void **)(a1 + 656);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);

  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_BYTE *)(a1 + 680) = *(_BYTE *)(a2 + 680);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  swift_bridgeObjectRelease();
  v42 = *(void **)(a1 + 704);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);

  return a1;
}

uint64_t getEnumTagSinglePayload for IntelligenceFlowPreferences(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 712))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceFlowPreferences(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 712) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 712) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceFlowPreferences()
{
  return &type metadata for IntelligenceFlowPreferences;
}

uint64_t sub_23F14C1B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23F1217E8(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_23F14C1F0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_23F14C200(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23F1217E8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23F14C244()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23F149C94(v2, v0, v3, v2, v0, v1);
}

void sub_23F14C26C(void *a1)
{
  free(a1);
}

uint64_t sub_23F14C284()
{
  return swift_bridgeObjectRetain();
}

id sub_23F14C2A0@<X0>(uint64_t a1@<X8>)
{
  char v1;
  char v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  *(_BYTE *)a1 = v1;
  *(_BYTE *)(a1 + 1) = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  return v4;
}

__n128 sub_23F14C2CC(uint64_t a1)
{
  return *(__n128 *)(a1 + 8);
}

void sub_23F14C2E4(void *a1)
{
  free(a1);
}

void sub_23F14C300(void *a1)
{
  free(a1);
}

uint64_t sub_23F14C31C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F14C33C(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_23F147314((uint64_t)va);
}

void *sub_23F14C344()
{
  return malloc(0x28uLL);
}

void sub_23F14C350()
{
  void *v0;

}

uint64_t sub_23F14C35C@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)result = a2;
  *(_BYTE *)(result + 1) = v2;
  *(_QWORD *)(result + 8) = v3;
  *(_QWORD *)(result + 16) = v4;
  return result;
}

uint64_t sub_23F14C3A8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F14C3B4(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  return sub_23F14A6B8(v3, v2, (uint64_t)va);
}

uint64_t sub_23F14C3CC(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  return sub_23F149B14(v3, v2, (uint64_t)va);
}

id sub_23F14C3E4@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  char v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  *(_OWORD *)a1 = *v1;
  *(_BYTE *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v4;
  return v4;
}

__n128 sub_23F14C3FC@<Q0>(__n128 *a1@<X8>)
{
  return a1[2];
}

uint64_t sub_23F14C434(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_23F149F78((uint64_t)va);
}

__n128 sub_23F14C454(__n128 *a1)
{
  return a1[2];
}

uint64_t sub_23F14C470(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_23F147364((uint64_t)va);
}

uint64_t sub_23F14C478(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_23F14C484()
{
  return swift_bridgeObjectRelease();
}

id sub_23F14C48C(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = v2;
  return v1;
}

void *sub_23F14C494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(a1 + 16) = v4;
  return malloc(*(_QWORD *)(v4 + 64));
}

__n128 sub_23F14C4B4(uint64_t a1)
{
  return *(__n128 *)(a1 + 24);
}

uint64_t sub_23F14C4CC(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_23F149F48((uint64_t)va);
}

uint64_t sub_23F14C4F4()
{
  return swift_bridgeObjectRelease();
}

void *sub_23F14C504()
{
  return malloc(0x40uLL);
}

id sub_23F14C51C@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  void *v2;
  uint64_t v3;

  *(__n128 *)(a1 + 24) = a2;
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = v2;
  return v2;
}

void sub_23F14C52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v16[40] = a11;
  v16[41] = a9;
  v16[42] = v15;
  v16[43] = v12;
  v16[44] = a12;
  v16[45] = v14;
  v16[46] = v13;
}

void sub_23F14C54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v15[28] = a10;
  v15[29] = v14;
  v15[30] = a11;
  v15[31] = v13;
  v15[32] = a12;
  v15[33] = v12;
  v15[34] = v16;
}

void sub_23F14C56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  *v15 = a10;
  v15[1] = v14;
  v15[2] = a11;
  v15[3] = v13;
  v15[4] = a12;
  v15[5] = v12;
  v15[6] = v16;
}

void sub_23F14C58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v15[7] = a10;
  v15[8] = v14;
  v15[9] = a11;
  v15[10] = v13;
  v15[11] = a12;
  v15[12] = v12;
  v15[13] = v16;
}

uint64_t sub_23F14C5AC(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = result;
  *(_QWORD *)(result + 56) = v2;
  return result;
}

void sub_23F14C5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;

  v11[67] = v15;
  v11[68] = v14;
  *v16 = v13;
  v11[70] = a10;
  v11[71] = v10;
  v11[72] = v12;
}

void sub_23F14C5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;

  v11[83] = v15;
  v11[84] = v14;
  *v16 = v13;
  v11[86] = a10;
  v11[87] = v10;
  v11[88] = v12;
}

__n128 sub_23F14C5FC@<Q0>(__n128 *a1@<X0>, unsigned __int8 a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;

  result = *v4;
  *a1 = *v4;
  a1[1].n128_u8[0] = a2;
  a1[1].n128_u64[1] = v2;
  a1[2].n128_u64[0] = v3;
  return result;
}

void sub_23F14C610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;

  v11[77] = v15;
  v11[78] = v14;
  *v16 = v13;
  v11[80] = a10;
  v11[81] = v10;
  v11[82] = v12;
}

_QWORD *sub_23F14C630(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_23F14A190((uint64_t *)va);
}

uint64_t sub_23F14C638(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_23F149FA8((uint64_t)va);
}

uint64_t sub_23F14C64C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F14C658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 8) - 8) + 16))(v1);
}

uint64_t sub_23F14C66C()
{
  return swift_bridgeObjectRelease();
}

void sub_23F14C674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  *(_BYTE *)(v1 + 584) = v5;
  *(_BYTE *)(v1 + 585) = v4;
  *(_QWORD *)(v1 + 592) = v3;
  *(_QWORD *)(v1 + 600) = v0;
  *(_QWORD *)(v1 + 608) = v2;
}

uint64_t sub_23F14C68C(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_23F14C69C()
{
  uint64_t v0;

  return v0;
}

void *sub_23F14C6A8()
{
  return malloc(0x28uLL);
}

uint64_t sub_23F14C6B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F14C6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return sub_23F14A1E8(v9, a9);
}

void sub_23F14C6D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v1 + 144) = v6;
  *(_QWORD *)(v1 + 152) = v5;
  *(_BYTE *)(v1 + 160) = v4;
  *(_QWORD *)(v1 + 168) = v3;
  *(_QWORD *)(v1 + 176) = v0;
  *(_QWORD *)(v1 + 184) = v2;
}

_QWORD *sub_23F14C6E8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a4(&a9);
}

void *sub_23F14C6F8()
{
  return malloc(0x38uLL);
}

void sub_23F14C708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  *(_BYTE *)(v1 + 504) = v5;
  *(_BYTE *)(v1 + 505) = v4;
  *(_QWORD *)(v1 + 512) = v3;
  *(_QWORD *)(v1 + 520) = v0;
  *(_QWORD *)(v1 + 528) = v2;
}

_QWORD *sub_23F14C720(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_23F14A1FC((uint64_t *)va);
}

uint64_t sub_23F14C728(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_23F149FF4((uint64_t)va);
}

void sub_23F14C730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  *(_BYTE *)(v1 + 472) = v5;
  *(_BYTE *)(v1 + 473) = v4;
  *(_QWORD *)(v1 + 480) = v3;
  *(_QWORD *)(v1 + 488) = v0;
  *(_QWORD *)(v1 + 496) = v2;
}

void *sub_23F14C744(uint64_t a1)
{
  size_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  return malloc(v1);
}

void sub_23F14C750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  *(_BYTE *)(v1 + 112) = v5;
  *(_BYTE *)(v1 + 113) = v4;
  *(_QWORD *)(v1 + 120) = v3;
  *(_QWORD *)(v1 + 128) = v0;
  *(_QWORD *)(v1 + 136) = v2;
}

void sub_23F14C764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  *(_BYTE *)(v1 + 440) = v5;
  *(_BYTE *)(v1 + 441) = v4;
  *(_QWORD *)(v1 + 448) = v3;
  *(_QWORD *)(v1 + 456) = v0;
  *(_QWORD *)(v1 + 464) = v2;
}

_QWORD *sub_23F14C778(_QWORD *result)
{
  uint64_t v1;
  _QWORD *v2;

  *v2 = result;
  *result = v1;
  return result;
}

void sub_23F14C78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  *(_BYTE *)(v1 + 192) = v5;
  *(_BYTE *)(v1 + 193) = v4;
  *(_QWORD *)(v1 + 200) = v3;
  *(_QWORD *)(v1 + 208) = v0;
  *(_QWORD *)(v1 + 216) = v2;
}

void *sub_23F14C7A0(void *a1)
{
  const void *v1;

  return memcpy(a1, v1, 0x2C8uLL);
}

id sub_23F14C7AC(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)(a1 + 48) = v1;
  return v1;
}

void sub_23F14C7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  *(_BYTE *)(v1 + 408) = v5;
  *(_BYTE *)(v1 + 409) = v4;
  *(_QWORD *)(v1 + 416) = v3;
  *(_QWORD *)(v1 + 424) = v0;
  *(_QWORD *)(v1 + 432) = v2;
}

id sub_23F14C7C8(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 40) = v1;
  *(_QWORD *)(a1 + 48) = v2;
  return v1;
}

void sub_23F14C7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v13[35] = v12;
  v13[36] = v11;
  v13[37] = a10;
  v13[38] = v10;
  v13[39] = v14;
}

void sub_23F14C7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  *(_BYTE *)(v1 + 376) = v5;
  *(_BYTE *)(v1 + 377) = v4;
  *(_QWORD *)(v1 + 384) = v3;
  *(_QWORD *)(v1 + 392) = v0;
  *(_QWORD *)(v1 + 400) = v2;
}

uint64_t sub_23F14C7F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  return v1;
}

void Preference.wrappedValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;

  sub_23F125F3C();
  v1 = v0;
  v3 = v2;
  v24 = v4;
  v5 = *(_QWORD *)(v2 - 8);
  v6 = MEMORY[0x24BDAC7A8](v2);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v23 - v10;
  v12 = *(_QWORD *)(v9 + 24);
  v13 = sub_23F14EFCC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v23 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v23 - v18, v1 + *(int *)(v3 + 44), v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v11, v1, v3);
  sub_23F14EF44((uint64_t)v19);
  if (v20)
  {
    Preference.userDefaultsValue.getter(v3, (uint64_t)v17);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v11, v3);
    sub_23F14EF44((uint64_t)v17);
    v21 = v24;
    if (v20)
    {
      sub_23F14EF80(v24, (uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16));
      sub_23F14EF24(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
      v22 = *(void (**)(char *, uint64_t))(v14 + 8);
      v22(v17, v13);
      v22(v19, v13);
    }
    else
    {
      sub_23F14EF24(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
      sub_23F14EF80(v21, (uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32));
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v3);
    sub_23F14EF80(v24, (uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32));
  }
  sub_23F125EFC();
}

uint64_t Preference.projectedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2);
}

uint64_t Preference.projectedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(_QWORD *)(a2 - 8);
  (*(void (**)(uint64_t))(v5 + 8))(v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, a1, a2);
}

uint64_t static NSUserDefaults.makeIntelligenceFlowUserDefaults()()
{
  id v0;
  uint64_t result;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  result = (uint64_t)sub_23F14E1C4(0xD00000000000001ALL, 0x800000023F293510);
  if (!result)
  {
    result = sub_23F2685E8();
    __break(1u);
  }
  return result;
}

uint64_t Preference.defaultValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2);
}

uint64_t Preference.overridenTestPreference.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = sub_23F14EF70();
  return sub_23F126180(a2, v4, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 16));
}

uint64_t Preference.overridenTestPreference.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 44);
  v5 = sub_23F14EF70();
  return sub_23F126180(v4, a1, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 40));
}

uint64_t (*Preference.overridenTestPreference.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F14CB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v5 = type metadata accessor for Preference(0, *(_QWORD *)(a4 + a3 - 24), *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v10 - v6, a1, v5);
  return Preference.projectedValue.setter((uint64_t)v7, v5);
}

void (*Preference.projectedValue.modify())(uint64_t **a1, char a2)
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void (*v6)(void);

  v3 = sub_23F14EF60();
  *v2 = v3;
  *v3 = v0;
  v3[1] = v1;
  v4 = *(_QWORD *)(v0 - 8);
  v3[2] = v4;
  v3[3] = sub_23F14EF78();
  v5 = sub_23F14EF78();
  v6 = *(void (**)(void))(v4 + 16);
  v3[4] = v5;
  v3[5] = v6;
  v6();
  return sub_23F14CC68;
}

void sub_23F14CC68(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = (void *)v2[4];
    v5 = v2[2];
    v4 = (void *)v2[3];
    v6 = *v2;
    ((void (*)(void *, void *, uint64_t))v2[5])(v4, v3, *v2);
    Preference.projectedValue.setter((uint64_t)v4, v6);
    (*(void (**)(void *, uint64_t))(v5 + 8))(v3, v6);
  }
  else
  {
    v4 = (void *)v2[3];
    v3 = (void *)v2[4];
    Preference.projectedValue.setter((uint64_t)v3, *v2);
  }
  free(v3);
  free(v4);
  free(v2);
}

void Preference.init(userDefaultsKey:defaultFromResourceFile:fallbackDefault:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  sub_23F125F3C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1262C8();
  v14 = v13 - v12;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v5;
  v15[3] = v3;
  v15[4] = v1;
  v15[5] = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v14, v7, v3);
  Preference.init(userDefaultsKey:defaultFromResourceFile:fallbackDefault:)();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v3);
  sub_23F125EFC();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[7];
  uint64_t v63;
  uint64_t v64;

  sub_23F125F3C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v61 = v6;
  v8 = v7;
  v10 = v9;
  v58 = v11;
  v59 = (uint64_t *)v12;
  v14 = v13;
  v15 = sub_23F26845C();
  v51 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  sub_23F14EFA0();
  v53 = v16;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v48 - v19;
  v60 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v18);
  sub_23F14EFA0();
  v50 = v21;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v48 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v57 = (uint64_t)&v48 - v26;
  v27 = (int *)type metadata accessor for Preference(0, v5, v3, v1);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v14 + v27[11], 1, 1, v3);
  v28 = (_QWORD *)(v14 + v27[12]);
  v29 = (uint64_t)v59;
  *v28 = v58;
  v28[1] = v29;
  v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(v5, v1);
  v58 = v14;
  v59 = &v48;
  *(_QWORD *)(v14 + v27[13]) = v30;
  if (v10)
    v31 = v8;
  else
    v31 = 0;
  v63 = v10;
  v64 = v31;
  v62[2] = v5;
  v62[3] = v3;
  v62[4] = v1;
  v55 = v10;
  v56 = v8;
  sub_23F14E280(v10);
  v49 = v1;
  swift_getAssociatedTypeWitness();
  v52 = v15;
  swift_getFunctionTypeMetadata1();
  sub_23F14EF70();
  sub_23F14CE8C((void (*)(char *, char *))sub_23F14E260, (uint64_t)v62, MEMORY[0x24BEE4078], v3, v32, (uint64_t)v20);
  sub_23F14E290(v63);
  v33 = v60;
  v34 = *(void (**)(char *))(v60 + 16);
  v54 = v25;
  v35 = v61;
  v34(v25);
  v59 = (uint64_t *)v20;
  v36 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v3);
  if ((_DWORD)v36 == 1)
  {
    v48 = (uint64_t)&v48;
    v37 = v55;
    v63 = v55;
    v64 = v31;
    MEMORY[0x24BDAC7A8](v36);
    *(&v48 - 4) = v5;
    *(&v48 - 3) = v3;
    *(&v48 - 2) = v49;
    sub_23F14E280(v37);
    v38 = v53;
    sub_23F14CE8C((void (*)(char *, char *))sub_23F14E2A0, (uint64_t)(&v48 - 6), MEMORY[0x24BEE4078], v3, v39, v53);
    sub_23F14E290(v37);
    sub_23F14EF88();
    sub_23F14E290(v63);
    v40 = v50;
    sub_23F131ADC(v50, (uint64_t)v54);
    v41 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v38, 1, v3);
    v42 = (uint64_t)v59;
    v44 = v51;
    v43 = v52;
    v45 = v57;
    if (v41 == 1)
    {
      sub_23F131ADC(v57, v40);
      v46 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v46(v38, v43);
      v46(v42, v43);
    }
    else
    {
      sub_23F14EF88();
      sub_23F131ADC(v45, v38);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    }
  }
  else
  {
    sub_23F14E290(v55);
    v47 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v47(v35, v3);
    v47((uint64_t)v54, v3);
    v45 = v57;
    sub_23F131ADC(v57, (uint64_t)v59);
  }
  sub_23F131ADC(v58, v45);
  sub_23F125EFC();
}

uint64_t sub_23F14CDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  _QWORD v10[8];

  v10[7] = a2;
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v10[5] = a1;
  swift_getAssociatedTypeWitness();
  sub_23F26845C();
  sub_23F2688AC();
  sub_23F26845C();
  return sub_23F14CE8C((void (*)(char *, char *))sub_23F14EEE0, (uint64_t)v10, MEMORY[0x24BEE4078], a4, v8, a6);
}

uint64_t sub_23F14CE8C@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *);

  v25 = a5;
  v26 = a4;
  v27 = a2;
  v28 = a1;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v22);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v14) == 1)
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a6, 1, 1, v26);
  v26 = a3;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
  v28(v18, v12);
  result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  if (v6)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v26);
  return result;
}

uint64_t sub_23F14D3CC@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  swift_getAssociatedTypeWitness();
  v10 = sub_23F26845C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v16[-v12];
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a2, a4);
  v17 = a2;
  v18 = a3;
  v19 = a4;
  v20 = *a1;
  sub_23F14CE8C((void (*)(char *, char *))sub_23F14EF10, (uint64_t)v16, MEMORY[0x24BEE4078], a3, v14, a5);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_23F14D4EC@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  swift_getAssociatedTypeWitness();
  v10 = sub_23F26845C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v16[-v12];
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a2, a4);
  v17 = a2;
  v18 = a3;
  v19 = a4;
  v20 = *a1;
  sub_23F14CE8C((void (*)(char *, char *))sub_23F14EEB8, (uint64_t)v16, MEMORY[0x24BEE4078], a3, v14, a5);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t Preference.userDefaultsValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v4 = (uint64_t *)(v2 + *(int *)(a1 + 48));
  v6 = *v4;
  v5 = v4[1];
  v12 = v6;
  v13 = v5;
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_OWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_23F1217E8(&qword_256DFF208);
  sub_23F14CE8C((void (*)(char *, char *))sub_23F14E2C0, (uint64_t)v9, MEMORY[0x24BEE4078], v11, v7, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F14D6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;

  v5 = type metadata accessor for Preference(0, *(_QWORD *)(a3 + a2 - 24), *(_QWORD *)(a3 + a2 - 16), *(_QWORD *)(a3 + a2 - 8));
  return a4(v5);
}

void sub_23F14D6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a4 + a3 - 24);
  v6 = *(_QWORD *)(a4 + a3 - 16);
  v7 = *(_QWORD *)(a4 + a3 - 8);
  v8 = sub_23F26845C();
  MEMORY[0x24BDAC7A8](v8);
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)&v11 - v10, a1);
  type metadata accessor for Preference(0, v5, v6, v7);
  Preference.userDefaultsValue.setter();
}

void Preference.userDefaultsValue.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31;
  uint64_t v32;
  void *v33;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;

  sub_23F125F3C();
  v2 = v1;
  v36 = v3;
  v35 = sub_23F267FDC();
  v4 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  sub_23F1262C8();
  v7 = v6 - v5;
  v8 = *(_QWORD *)(v2 + 24);
  v9 = sub_23F14EFCC();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v34 - v11;
  v13 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F1262C8();
  v18 = v17 - v16;
  v19 = *(void **)(v0 + *(int *)(v2 + 52));
  if (v19 && (v20 = (_QWORD *)(v0 + *(int *)(v2 + 48)), v20[1]))
  {
    v34[1] = *v20;
    v35 = v15;
    v21 = v36;
    v22 = v14;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v36, v14);
    sub_23F14EF44((uint64_t)v12);
    if (v23)
    {
      v24 = *(void (**)(char *, uint64_t))(v35 + 8);
      v25 = v19;
      v24(v12, v22);
      Preference.removeUserDefault()();

      v24(v21, v22);
    }
    else
    {
      sub_23F14EF80(v18, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32));
      v31 = v19;
      v32 = sub_23F26878C();
      v33 = (void *)sub_23F268144();
      objc_msgSend(v31, sel_setObject_forKey_, v32, v33);
      swift_unknownObjectRelease();

      sub_23F14EF24(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v18, v8);
    }
  }
  else
  {
    v26 = v15;
    v27 = v14;
    sub_23F267E20();
    v28 = sub_23F267FD0();
    v29 = sub_23F26839C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)sub_23F14EFC0();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_23F11F000, v28, v29, "Failed to set user default", v30, 2u);
      sub_23F14EFB4();
    }

    (*(void (**)(char *, uint64_t))(v26 + 8))(v36, v27);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v35);
  }
  sub_23F125EFC();
}

uint64_t sub_23F14D9EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  unsigned __int8 v21;
  uint64_t *v22;
  void *v24;
  id v25;
  void *v26;
  int v27;
  int v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD v49[2];
  __int128 v50;
  __int128 v51;
  _OWORD v52[2];

  v48 = a5;
  v9 = sub_23F1217E8(&qword_2543444B0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v44 - v13;
  v15 = sub_23F26845C();
  v46 = *(_QWORD *)(v15 - 8);
  v47 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v45 = (char *)&v44 - v16;
  v17 = *(void **)(a1 + *(int *)(type metadata accessor for Preference(0, a2, a3, a4) + 52));
  if (!v17)
  {
    v50 = 0u;
    v51 = 0u;
LABEL_9:
    sub_23F14EE78((uint64_t)&v50);
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v48, 1, 1, a3);
  }
  v18 = (void *)sub_23F268144();
  v19 = objc_msgSend(v17, sel_objectForKey_, v18);

  if (v19)
  {
    sub_23F26848C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v49, 0, sizeof(v49));
  }
  sub_23F14C200((uint64_t)v49, (uint64_t)&v50, &qword_256DFF210);
  if (!*((_QWORD *)&v51 + 1))
    goto LABEL_9;
  sub_23F14C1F0(&v50, v52);
  if (swift_dynamicCastMetatype())
  {
    v20 = (void *)sub_23F268144();
    v21 = objc_msgSend(v17, sel_BOOLForKey_, v20);

    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v52);
    LOBYTE(v50) = v21;
    v22 = &qword_256DFF230;
  }
  else if (swift_dynamicCastMetatype())
  {
    v24 = (void *)sub_23F268144();
    v25 = objc_msgSend(v17, sel_integerForKey_, v24);

    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v52);
    *(_QWORD *)&v50 = v25;
    BYTE8(v50) = 0;
    v22 = &qword_256DFF218;
  }
  else if (swift_dynamicCastMetatype())
  {
    v26 = (void *)sub_23F268144();
    objc_msgSend(v17, sel_floatForKey_, v26);
    v28 = v27;

    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v52);
    LODWORD(v50) = v28;
    BYTE4(v50) = 0;
    v22 = (uint64_t *)&unk_256DFF228;
  }
  else if (swift_dynamicCastMetatype())
  {
    v29 = (void *)sub_23F268144();
    objc_msgSend(v17, sel_doubleForKey_, v29);
    v31 = v30;

    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v52);
    *(_QWORD *)&v50 = v31;
    BYTE8(v50) = 0;
    v22 = &qword_256DFF220;
  }
  else
  {
    v35 = sub_23F267CF4();
    if (swift_dynamicCastMetatype())
    {
      v36 = (void *)sub_23F268144();
      v37 = objc_msgSend(v17, sel_URLForKey_, v36);

      if (v37)
      {
        sub_23F267CD0();

        v38 = 0;
      }
      else
      {
        v38 = 1;
      }
      v32 = v45;
      _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v52);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v12, v38, 1, v35);
      sub_23F14C200((uint64_t)v12, (uint64_t)v14, &qword_2543444B0);
      if (swift_dynamicCast())
      {
        v34 = (uint64_t)v32;
        v33 = 0;
      }
      else
      {
        v34 = (uint64_t)v32;
        v33 = 1;
      }
      goto LABEL_18;
    }
    if (!swift_dynamicCastMetatype())
    {
      sub_23F14C1F0(v52, &v50);
      goto LABEL_17;
    }
    v39 = (void *)sub_23F268144();
    v40 = objc_msgSend(v17, sel_stringForKey_, v39);

    if (v40)
    {
      v41 = sub_23F26815C();
      v43 = v42;

    }
    else
    {
      v41 = 0;
      v43 = 0;
    }
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v52);
    *(_QWORD *)&v50 = v41;
    *((_QWORD *)&v50 + 1) = v43;
    v22 = &qword_256DFF208;
  }
  sub_23F1217E8(v22);
LABEL_17:
  v32 = v45;
  v33 = swift_dynamicCast() ^ 1;
  v34 = (uint64_t)v32;
LABEL_18:
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v34, v33, 1, a3);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v46 + 32))(v48, v32, v47);
}

Swift::Void __swiftcall Preference.removeUserDefault()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;

  v2 = v0;
  v3 = sub_23F267FDC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F1262C8();
  v7 = v6 - v5;
  v8 = *(void **)(v1 + *(int *)(v2 + 52));
  if (v8 && *(_QWORD *)(v1 + *(int *)(v2 + 48) + 8))
  {
    v9 = v8;
    v13 = (void *)sub_23F268144();
    objc_msgSend(v9, sel_removeObjectForKey_, v13);

  }
  else
  {
    sub_23F267E20();
    v10 = sub_23F267FD0();
    v11 = sub_23F26839C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)sub_23F14EFC0();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_23F11F000, v10, v11, "Failed to remove user default", v12, 2u);
      sub_23F14EFB4();
    }

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
}

void (*Preference.userDefaultsValue.modify())(uint64_t a1, char a2)
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = sub_23F14EF60();
  *v2 = v3;
  *v3 = v0;
  v3[1] = v1;
  v4 = sub_23F14EF70();
  v3[2] = v4;
  v3[3] = *(_QWORD *)(v4 - 8);
  v3[4] = sub_23F14EF78();
  v5 = sub_23F14EF78();
  v3[5] = v5;
  Preference.userDefaultsValue.getter(v0, (uint64_t)v5);
  return sub_23F14E098;
}

void sub_23F14E098(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    v5 = v2[2];
    v6 = v2[3];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 32), v4, v5);
    Preference.userDefaultsValue.setter();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    Preference.userDefaultsValue.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_23F14E130()
{
  uint64_t result;

  sub_23F14EE3C();
  result = static NSUserDefaults.makeIntelligenceFlowUserDefaults()();
  qword_256DFF240 = result;
  return result;
}

uint64_t static IntelligenceFlowPreferencesDomain.userDefaultsContainer.getter()
{
  uint64_t v0;
  id v1;

  if (qword_256DFE490 != -1)
    swift_once();
  v0 = qword_256DFF240;
  v1 = (id)qword_256DFF240;
  return v0;
}

uint64_t static IntelligenceFlowPreferencesDomain.otaResource.getter()
{
  return 1;
}

uint64_t static IntelligenceFlowPreferencesDomain.bundleResource.getter()
{
  return 1;
}

void sub_23F14E1B8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

id sub_23F14E1C4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)sub_23F268144();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

uint64_t sub_23F14E224()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F14E248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23F14CDD0(a1, v2[5], v2[2], v2[3], v2[4], a2);
}

uint64_t type metadata accessor for Preference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F126D88(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Preference);
}

uint64_t sub_23F14E260@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23F14D3CC(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_23F14E280(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_23F14E290(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_23F14E2A0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23F14D4EC(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_23F14E2C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23F14D9EC(v1[5], v1[2], v1[3], v1[4], a1);
}

uint64_t sub_23F14E2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F14D6B4(a1, a2, a3, (uint64_t (*)(uint64_t))Preference.projectedValue.getter);
}

uint64_t sub_23F14E308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F14D6B4(a1, a2, a3, (uint64_t (*)(uint64_t))Preference.userDefaultsValue.getter);
}

uint64_t dispatch thunk of static PreferencesDomain.userDefaultsContainer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static PreferencesDomain.otaResource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static PreferencesDomain.bundleResource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_23F14E348()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23F14E350()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v0 = sub_23F26845C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_23F14E3FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  int v12;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t *, uint64_t);
  _QWORD *v18;
  _QWORD *v20;
  _QWORD *v21;
  void **v22;
  void *v23;
  id v24;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = v7 + v8;
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = v7 + 1;
  v12 = v8 & 0x100000;
  if (v9 > 7
    || v12 != 0
    || ((((v11 + (v10 & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v9 & 0xF8 ^ 0x1F8) & (v9 + 16)));
    swift_retain();
  }
  else
  {
    v16 = ~v9;
    v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v17(a1, a2, *(_QWORD *)(a3 + 24));
    v18 = (_QWORD *)(((unint64_t)a2 + v10) & v16);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18, 1, v5))
    {
      memcpy((void *)(((unint64_t)v4 + v10) & v16), v18, v11);
    }
    else
    {
      v17((uint64_t *)(((unint64_t)v4 + v10) & v16), v18, v5);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(((unint64_t)v4 + v10) & v16, 0, 1, v5);
    }
    v20 = (_QWORD *)(((((unint64_t)v4 + v10) & v16) + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)v18 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v20 = *v21;
    v20[1] = v21[1];
    v22 = (void **)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFF8);
    v23 = *v22;
    *(_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8) = *v22;
    swift_bridgeObjectRetain();
    v24 = v23;
  }
  return v4;
}

void sub_23F14E568(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(unint64_t, uint64_t);
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = (v6 + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v3))
    v5(v7, v3);
  v8 = v6 + v7;
  if (!*(_DWORD *)(v4 + 84))
    ++v8;
  v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();

}

uint64_t sub_23F14E608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  size_t v13;
  size_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void **v17;
  void *v18;
  id v19;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (void *)((v8 + v9 + a1) & ~v9);
  v11 = (const void *)((v8 + v9 + a2) & ~v9);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v5))
  {
    v12 = *(_DWORD *)(v6 + 84);
    if (v12)
      v13 = v8;
    else
      v13 = v8 + 1;
    memcpy(v10, v11, v13);
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v5);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v5);
    v12 = *(_DWORD *)(v6 + 84);
  }
  if (v12)
    v14 = v8;
  else
    v14 = v8 + 1;
  v15 = (_QWORD *)(((unint64_t)v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v15[1] = v16[1];
  v17 = (void **)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
  v18 = *v17;
  *(_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8) = *v17;
  swift_bridgeObjectRetain();
  v19 = v18;
  return a1;
}

uint64_t sub_23F14E71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  int v13;
  size_t v14;
  size_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void **v18;
  void *v19;
  void *v20;
  id v21;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (void *)((v8 + v9 + a1) & ~v9);
  v11 = (const void *)((v8 + v9 + a2) & ~v9);
  v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v5);
  v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v10, v11, v5);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v13)
    {
      v7((uint64_t)v10, (uint64_t)v11, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v14 = v8;
  else
    v14 = v8 + 1;
  memcpy(v10, v11, v14);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v15 = v8;
  else
    v15 = v8 + 1;
  v16 = (_QWORD *)(((unint64_t)v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (void **)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = *(void **)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8);
  v20 = *v18;
  *v18 = v19;
  v21 = v19;

  return a1;
}

uint64_t sub_23F14E888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  size_t v13;
  size_t v14;
  _OWORD *v15;
  _OWORD *v16;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (void *)((v8 + v9 + a1) & ~v9);
  v11 = (const void *)((v8 + v9 + a2) & ~v9);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v5))
  {
    v12 = *(_DWORD *)(v6 + 84);
    if (v12)
      v13 = v8;
    else
      v13 = v8 + 1;
    memcpy(v10, v11, v13);
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v5);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v5);
    v12 = *(_DWORD *)(v6 + 84);
  }
  if (v12)
    v14 = v8;
  else
    v14 = v8 + 1;
  v15 = (_OWORD *)(((unint64_t)v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_OWORD *)(((unint64_t)v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  *(_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23F14E984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  int v13;
  size_t v14;
  size_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void **v18;
  void *v19;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (void *)((v8 + v9 + a1) & ~v9);
  v11 = (const void *)((v8 + v9 + a2) & ~v9);
  v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v5);
  v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v10, v11, v5);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v13)
    {
      v7((uint64_t)v10, (uint64_t)v11, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v14 = v8;
  else
    v14 = v8 + 1;
  memcpy(v10, v11, v14);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v15 = v8;
  else
    v15 = v8 + 1;
  v16 = (_QWORD *)(((unint64_t)v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRelease();
  v18 = (void **)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = *v18;
  *v18 = *(void **)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_23F14EAE4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  if (v6 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = *(_DWORD *)(v5 + 84);
  v9 = *(_QWORD *)(v5 + 64);
  if ((_DWORD)v6)
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = v9 + 1;
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v5 + 80);
  v12 = v9 + v11;
  if (v8 < a2)
  {
    if (((((((v10 + (v12 & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v13 = 2;
    else
      v13 = a2 - v8 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    __asm { BR              X3 }
  }
  if (v6 >= 0x7FFFFFFE)
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, v6, v4);
  v17 = (v12 + a1) & ~v11;
  if (v7 == v8)
  {
    if (v6 < 2)
      return 0;
    v19 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v17, v6, v4);
    if (v19 >= 2)
      return v19 - 1;
    else
      return 0;
  }
  else
  {
    v18 = *(_QWORD *)(((v17 + v9 + ((_DWORD)v6 == 0) + 7) & 0xFFFFFFFFFFFFF8) + 8);
    if (v18 >= 0xFFFFFFFF)
      LODWORD(v18) = -1;
    if ((v18 + 1) >= 2)
      return v18;
    else
      return 0;
  }
}

void sub_23F14EC58(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= 0x7FFFFFFE)
    v9 = 2147483646;
  else
    v9 = *(_DWORD *)(v7 + 84);
  v10 = *(_QWORD *)(v7 + 64);
  if (v8)
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = v10 + 1;
  v12 = ((((v11 + ((v10 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v9 < a3)
  {
    v13 = a3 - v9;
    if ((((((_DWORD)v11 + (((_DWORD)v10 + *(unsigned __int8 *)(v7 + 80)) & ~*(unsigned __int8 *)(v7 + 80)) + 7) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v14 = v13 + 1;
    else
      v14 = 2;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v6 = v15;
    else
      v6 = 0;
  }
  if (a2 > v9)
  {
    if ((_DWORD)v12)
    {
      v16 = ~v9 + a2;
      bzero(a1, v12);
      *a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_23F14ED70(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  *(_BYTE *)(v9 + v10) = 0;
  if ((_DWORD)a1)
  {
    if (a2 >= 0x7FFFFFFE)
    {
      v11 = v9;
LABEL_6:
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v11, a1, a2, a3);
      return;
    }
    v11 = (v8 + v9) & a4;
    if (v5 == v4)
    {
      a1 = (a1 + 1);
      goto LABEL_6;
    }
    v12 = (_QWORD *)((v11 + v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (a1 > 0x7FFFFFFE)
    {
      *v12 = 0;
      v12[1] = 0;
      *(_DWORD *)v12 = a1 - 0x7FFFFFFF;
    }
    else
    {
      v12[1] = a1;
    }
  }
}

ValueMetadata *type metadata accessor for IntelligenceFlowPreferencesDomain()
{
  return &type metadata for IntelligenceFlowPreferencesDomain;
}

unint64_t sub_23F14EE3C()
{
  unint64_t result;

  result = qword_256DFF2F0;
  if (!qword_256DFF2F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256DFF2F0);
  }
  return result;
}

uint64_t sub_23F14EE78(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F1217E8(&qword_256DFF210);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F14EEB8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_23F14EEE0()
{
  return swift_getAtKeyPath();
}

uint64_t sub_23F14EF10()
{
  return sub_23F14EEB8();
}

uint64_t sub_23F14EF24@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

__n128 sub_23F14EF30(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_23F14EF44(uint64_t a1)
{
  uint64_t v1;

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v1);
}

void *sub_23F14EF60()
{
  return malloc(0x30uLL);
}

uint64_t sub_23F14EF70()
{
  return sub_23F26845C();
}

void *sub_23F14EF78()
{
  size_t v0;

  return malloc(v0);
}

uint64_t sub_23F14EF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F14EF88()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t sub_23F14EF94()
{
  return 24;
}

void sub_23F14EFB4()
{
  JUMPOUT(0x242667238);
}

uint64_t sub_23F14EFC0()
{
  return swift_slowAlloc();
}

uint64_t sub_23F14EFCC()
{
  return sub_23F26845C();
}

uint64_t dispatch thunk of QueryDecorationProtocol.queryDecorationCollection(qdInput:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F14F068;
  return v9(a1, a2, a3);
}

uint64_t sub_23F14F068(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of QueryDecorationProtocol.queryDecorationCollection(qdInput:sessionUUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 24) + *(_QWORD *)(a4 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23F14F13C;
  return v11(a1, a2, a3, a4);
}

uint64_t QueryDecoration.__allocating_init()()
{
  uint64_t v0;

  v0 = sub_23F14F4D0();
  type metadata accessor for QueryDecorationClient();
  sub_23F14F4D0();
  *(_QWORD *)(v0 + 16) = sub_23F14FDC0();
  return v0;
}

uint64_t QueryDecoration.init()()
{
  uint64_t v0;

  type metadata accessor for QueryDecorationClient();
  sub_23F14F4D0();
  *(_QWORD *)(v0 + 16) = sub_23F14FDC0();
  return v0;
}

uint64_t QueryDecoration.queryDecorationCollection(qdInput:)(uint64_t a1)
{
  return sub_23F14F4D8(a1);
}

{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_23F14F4C4();
}

uint64_t sub_23F14F1F4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_23F14F248;
  return sub_23F14F664(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23F14F248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F14F4B0();
  v3 = sub_23F14F4A0();
  if (!v1)
    v3 = v0;
  return sub_23F14F494(v3, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t QueryDecoration.queryDecorationCollection(qdInput:sessionUUID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_23F14F4C4();
}

uint64_t sub_23F14F290()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23F14F2E4;
  return sub_23F14F8B0(v0[2], v0[3]);
}

uint64_t sub_23F14F2E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F14F4B0();
  v3 = sub_23F14F4A0();
  if (!v1)
    v3 = v0;
  return sub_23F14F494(v3, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t QueryDecoration.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t QueryDecoration.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23F14F358(uint64_t a1)
{
  return QueryDecoration.queryDecorationCollection(qdInput:)(a1);
}

uint64_t sub_23F14F378(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F14F3C8;
  return QueryDecoration.queryDecorationCollection(qdInput:)(a1);
}

uint64_t sub_23F14F3C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F14F4B0();
  v3 = sub_23F14F4A0();
  if (!v1)
    v3 = v0;
  return sub_23F14F494(v3, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23F14F3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23F14F490;
  return QueryDecoration.queryDecorationCollection(qdInput:sessionUUID:)(a1, a2);
}

uint64_t type metadata accessor for QueryDecoration()
{
  return objc_opt_self();
}

uint64_t method lookup function for QueryDecoration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of QueryDecoration.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_23F14F494(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23F14F4A0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

void sub_23F14F4B0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23F14F4C4()
{
  return swift_task_switch();
}

uint64_t sub_23F14F4D0()
{
  return swift_allocObject();
}

uint64_t sub_23F14F4D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  unint64_t v5;

  sub_23F267DE4();
  sub_23F147004(&qword_256DFF358, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE57BD8], MEMORY[0x24BE57BE8]);
  result = sub_23F267C58();
  if (!v2)
  {
    if (*(_QWORD *)(v1 + 16))
    {
      MEMORY[0x24BDAC7A8](result);
      sub_23F1319F8();
      sub_23F267EBC();
      swift_release();
      sub_23F267DF0();
      sub_23F147004(&qword_256DFF360, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE57CD8], MEMORY[0x24BE57CF0]);
      sub_23F267C34();
      sub_23F1509A4();
      sub_23F1311B4(a1, v5);
      return a1;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23F14F664(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = v1;
  return sub_23F14F4C4();
}

uint64_t sub_23F14F674()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = sub_23F150970();
  sub_23F150984(&qword_256DFF358, v3, (uint64_t (*)(uint64_t))MEMORY[0x24BE57BD8], MEMORY[0x24BE57BE8]);
  result = sub_23F15095C();
  *(_QWORD *)(v0 + 32) = result;
  *(_QWORD *)(v0 + 40) = v5;
  if (v2)
  {
    v6 = (uint64_t (*)(void))sub_23F1509B8();
    return v6();
  }
  else
  {
    v7 = *(_QWORD *)(v1[7] + 16);
    v1[10] = v7;
    if (v7)
    {
      v8 = result;
      v9 = v5;
      v10 = swift_task_alloc();
      v1[11] = v10;
      *(_QWORD *)(v10 + 16) = v8;
      *(_QWORD *)(v10 + 24) = v9;
      sub_23F1319F8();
      v11 = (_QWORD *)swift_task_alloc();
      v1[12] = v11;
      *v11 = v1;
      v11[1] = sub_23F14F774;
      return sub_23F267EC8();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23F14F774()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    sub_23F131780();
  }
  return sub_23F131838();
}

uint64_t sub_23F14F7DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v2 = *(_QWORD *)(v1 + 104);
  sub_23F15098C();
  sub_23F150984(&qword_256DFF360, v3, (uint64_t (*)(uint64_t))MEMORY[0x24BE57CD8], MEMORY[0x24BE57CF0]);
  sub_23F150924();
  sub_23F1311B4(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
  sub_23F1509C4(v0);
  if (!v2)
    return sub_23F150900(*(_QWORD *)(v1 + 40), *(uint64_t (**)(void))(v1 + 8));
  v4 = (uint64_t (*)(void))sub_23F1509B8();
  return sub_23F1508F4(v4);
}

uint64_t sub_23F14F870()
{
  uint64_t v0;

  sub_23F1311B4(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  swift_release();
  sub_23F131780();
  return sub_23F143928(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F14F8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  return sub_23F14F4C4();
}

uint64_t sub_23F14F8C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v2 = sub_23F150970();
  sub_23F150984(&qword_256DFF358, v3, (uint64_t (*)(uint64_t))MEMORY[0x24BE57BD8], MEMORY[0x24BE57BE8]);
  v4 = sub_23F15095C();
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v0 + 48) = v5;
  if (v2)
  {
    v11 = (uint64_t (*)(void))sub_23F1509B8();
    return sub_23F1508F4(v11);
  }
  else
  {
    v6 = v4;
    v7 = v5;
    sub_23F267D84();
    sub_23F150984(&qword_256DFEF10, v8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    result = sub_23F267C58();
    v1[11] = result;
    v1[12] = v10;
    v12 = *(_QWORD *)(v1[8] + 16);
    v1[13] = v12;
    if (v12)
    {
      v13 = result;
      v14 = v10;
      v15 = (_QWORD *)swift_task_alloc();
      v1[14] = v15;
      v15[2] = v6;
      v15[3] = v7;
      v15[4] = v13;
      v15[5] = v14;
      sub_23F1319F8();
      v16 = (_QWORD *)swift_task_alloc();
      v1[15] = v16;
      *v16 = v1;
      v16[1] = sub_23F14FA24;
      return sub_23F267EC8();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23F14FA24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    sub_23F131780();
  }
  return sub_23F131838();
}

uint64_t sub_23F14FA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v2 = *(_QWORD *)(v1 + 128);
  sub_23F15098C();
  sub_23F150984(&qword_256DFF360, v3, (uint64_t (*)(uint64_t))MEMORY[0x24BE57CD8], MEMORY[0x24BE57CF0]);
  sub_23F150924();
  v5 = *(_QWORD *)(v1 + 88);
  v4 = *(_QWORD *)(v1 + 96);
  sub_23F1311B4(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
  sub_23F1311B4(v5, v4);
  sub_23F1509C4(v0);
  if (!v2)
    return sub_23F150900(*(_QWORD *)(v1 + 40), *(uint64_t (**)(void))(v1 + 8));
  v6 = (uint64_t (*)(void))sub_23F1509B8();
  return sub_23F1508F4(v6);
}

uint64_t sub_23F14FB30()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  sub_23F1311B4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  sub_23F1311B4(v2, v1);
  swift_release();
  sub_23F131780();
  return sub_23F143928(*(uint64_t (**)(void))(v0 + 8));
}

void *sub_23F14FB88()
{
  qword_256DFF328 = (uint64_t)&unk_256E63CA8;
  return &unk_256E63CA8;
}

id static QueryDecorationXPCService.interface.getter()
{
  if (qword_256DFE498 != -1)
    swift_once();
  return (id)qword_256DFF328;
}

unint64_t static QueryDecorationXPCService.serviceName.getter()
{
  return sub_23F150948();
}

unint64_t static QueryDecorationXPCService.entitlementName.getter()
{
  return sub_23F150948();
}

void sub_23F14FBF4()
{
  qword_256DFF330 = MEMORY[0x24BEE4AF8];
}

uint64_t static QueryDecorationXPCService.selectorClasses.getter()
{
  if (qword_256DFE4A0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F14FC48()
{
  uint64_t v0;

  v0 = sub_23F267FDC();
  sub_23F1470EC(v0, qword_256DFF338);
  sub_23F146E30(v0, (uint64_t)qword_256DFF338);
  return sub_23F267E08();
}

uint64_t static QueryDecorationXPCService.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256DFE4A8 != -1)
    swift_once();
  v2 = sub_23F267FDC();
  v3 = sub_23F146E30(v2, (uint64_t)qword_256DFF338);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_23F14FD04()
{
  static QueryDecorationXPCService.serviceName.getter();
  return 0xD00000000000002ALL;
}

uint64_t sub_23F14FD28()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F267FDC();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23F267F88();
  sub_23F1470EC(v1, qword_254344630);
  sub_23F146E30(v1, (uint64_t)qword_254344630);
  sub_23F267E08();
  return sub_23F267F70();
}

uint64_t sub_23F14FDC0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_signpost_type_t v17;
  uint8_t *v18;
  uint8_t *v19;
  os_signpost_id_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  NSObject *v25;
  os_signpost_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  uint8_t *v31;
  os_signpost_id_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = sub_23F267FDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F125F70();
  v40 = v4;
  v34 = sub_23F267F94();
  v36 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  sub_23F125F70();
  v35 = v5;
  v41 = sub_23F267F64();
  v39 = *(_QWORD *)(v41 - 8);
  v6 = MEMORY[0x24BDAC7A8](v41);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v33 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v33 - v12;
  v0[2] = 0;
  sub_23F267C70();
  sub_23F150918();
  v0[3] = sub_23F267C64();
  sub_23F267C4C();
  sub_23F150918();
  v0[4] = sub_23F267C40();
  if (qword_254344520 != -1)
    swift_once();
  v14 = sub_23F267F88();
  v15 = sub_23F146E30(v14, (uint64_t)qword_254344630);
  sub_23F267F7C();
  sub_23F267F4C();
  v37 = v15;
  v16 = sub_23F267F7C();
  v17 = sub_23F2683FC();
  if ((sub_23F268450() & 1) != 0)
  {
    v18 = (uint8_t *)sub_23F15099C();
    v38 = v3;
    v19 = v18;
    *(_WORD *)v18 = 0;
    v20 = sub_23F267F58();
    _os_signpost_emit_with_name_impl(&dword_23F11F000, v16, v17, v20, "QueryDecorationClient.init", "", v19, 2u);
    sub_23F14EFB4();
  }

  v21 = v39;
  v22 = v41;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v11, v13, v41);
  sub_23F267FB8();
  sub_23F150918();
  v38 = sub_23F267FAC();
  v39 = *(_QWORD *)(v21 + 8);
  ((void (*)(char *, uint64_t))v39)(v13, v22);
  sub_23F147004(&qword_254344648, v23, (uint64_t (*)(uint64_t))type metadata accessor for QueryDecorationClient, (uint64_t)&protocol conformance descriptor for QueryDecorationClient);
  sub_23F1217E8(&qword_254344650);
  sub_23F150918();
  swift_retain();
  v1[2] = sub_23F267ED4();
  result = swift_release();
  if (v1[2])
  {
    sub_23F1319F8();
    sub_23F1217E8(qword_254344528);
    sub_23F267EB0();
    swift_release();
    swift_release();
    v25 = sub_23F267F7C();
    sub_23F267FA0();
    v26 = sub_23F2683F0();
    if ((sub_23F268450() & 1) != 0)
    {
      swift_retain();
      v27 = v35;
      sub_23F267FC4();
      sub_23F1509B0();
      v28 = v27;
      v29 = v34;
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v36 + 88))(v28, v34) == *MEMORY[0x24BEE7810])
      {
        v30 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v29);
        v30 = "";
      }
      v31 = (uint8_t *)sub_23F15099C();
      *(_WORD *)v31 = 0;
      v32 = sub_23F267F58();
      _os_signpost_emit_with_name_impl(&dword_23F11F000, v25, v26, v32, "QueryDecorationClient.init", v30, v31, 2u);
      sub_23F14EFB4();
    }

    ((void (*)(char *, uint64_t))v39)(v8, v41);
    sub_23F1509B0();
    return (uint64_t)v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23F150374@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_23F1508A0;
  *(_QWORD *)(v5 + 24) = v4;
  *a2 = sub_23F1508B0;
  a2[1] = (uint64_t (*)())v5;
  return swift_unknownObjectRetain();
}

uint64_t sub_23F1503E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  swift_retain();
  swift_unknownObjectRetain();
  sub_23F150518(a4, a5, (uint64_t)sub_23F1508E8, v10, a1, (uint64_t)&unk_250FAAAB8);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_23F150480(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  swift_retain();
  swift_unknownObjectRetain();
  sub_23F150518(a4, a5, (uint64_t)sub_23F1508E8, v10, a1, (uint64_t)&unk_250FAAA68);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_23F150518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  void *v10;
  void *v11;
  _QWORD v12[6];

  v10 = (void *)sub_23F267D00();
  v12[4] = a3;
  v12[5] = a4;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_23F264498;
  v12[3] = a6;
  v11 = _Block_copy(v12);
  swift_retain();
  sub_23F1509B0();
  objc_msgSend(a5, sel_queryDecorationCollectionWithQdInputData_with_, v10, v11);
  _Block_release(v11);

}

uint64_t sub_23F1505C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  swift_retain();
  swift_unknownObjectRetain();
  sub_23F150670(a4, a5, a6, a7, (uint64_t)sub_23F15084C, v14, a1);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_23F150670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  void *v10;
  void *v11;
  void *v12;
  _QWORD v13[6];

  v10 = (void *)sub_23F267D00();
  v11 = (void *)sub_23F267D00();
  v13[4] = a5;
  v13[5] = a6;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_23F264498;
  v13[3] = &unk_250FAAA18;
  v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(a7, sel_queryDecorationCollectionWithQdInputData_sessionUUIDData_with_, v10, v11, v12);
  _Block_release(v12);

}

uint64_t QueryDecorationClient.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t QueryDecorationClient.__deallocating_deinit()
{
  QueryDecorationClient.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23F150794(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_23F147004(&qword_254344648, a2, (uint64_t (*)(uint64_t))type metadata accessor for QueryDecorationClient, (uint64_t)&protocol conformance descriptor for QueryDecorationClient);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for QueryDecorationClient()
{
  return objc_opt_self();
}

uint64_t sub_23F1507F0()
{
  return sub_23F267EEC();
}

uint64_t sub_23F1507F8()
{
  return sub_23F267EE0();
}

ValueMetadata *type metadata accessor for QueryDecorationXPCService()
{
  return &type metadata for QueryDecorationXPCService;
}

uint64_t method lookup function for QueryDecorationClient()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_23F15081C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_23F1505C8(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_23F150828()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23F15084C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_23F26446C(a1, a2, a3, *(void (**)(_QWORD *, uint64_t))(v3 + 16));
}

uint64_t sub_23F150854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23F150864()
{
  return swift_release();
}

uint64_t sub_23F15086C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23F150480(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_23F150874(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23F1503E8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_23F15087C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id sub_23F1508A0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_warmup);
}

uint64_t sub_23F1508B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23F1508F4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F150900(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23F150918()
{
  return swift_allocObject();
}

uint64_t sub_23F150924()
{
  return sub_23F267C34();
}

void sub_23F150940()
{
  void *v0;

}

unint64_t sub_23F150948()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_23F15095C()
{
  return sub_23F267C58();
}

uint64_t sub_23F150970()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return sub_23F267DE4();
}

uint64_t sub_23F150984(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_23F147004(a1, 255, a3, a4);
}

uint64_t sub_23F15098C()
{
  return sub_23F267DF0();
}

uint64_t sub_23F15099C()
{
  return swift_slowAlloc();
}

uint64_t sub_23F1509A4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F1311B4(v1, v0);
}

uint64_t sub_23F1509B0()
{
  return swift_release();
}

uint64_t sub_23F1509B8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23F1509C4(uint64_t a1)
{
  unint64_t v1;

  return sub_23F1311B4(a1, v1);
}

char *sub_23F1509CC(unint64_t a1, void *a2)
{
  unint64_t v2;
  uint64_t v3;
  char *result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  char v27;
  __int128 v28;
  char v29;
  uint64_t v30;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v30 = MEMORY[0x24BEE4AF8];
      result = sub_23F12D398(0, v3 & ~(v3 >> 63), 0);
      if (v3 < 0)
        break;
      v5 = 0;
      v21 = v2 & 0xC000000000000001;
      v22 = v2;
      v6 = v30;
      while (v3 != v5)
      {
        if (v21)
          v7 = (id)MEMORY[0x242666968](v5, v2);
        else
          v7 = *(id *)(v2 + 8 * v5 + 32);
        v8 = objc_msgSend(v7, sel_title, v17, v18, v19);
        if (v8)
        {
          v9 = objc_msgSend(a2, sel_localeIdentifier);
          if (!v9)
          {
            sub_23F26815C();
            v9 = (id)sub_23F268144();
            swift_bridgeObjectRelease();
          }
          v10 = objc_msgSend(v8, sel_localizedStringForLocaleIdentifier_, v9);

          sub_23F26815C();
        }
        ResponseParameter.init(title:nlgParam:)();
        v11 = v25;
        v12 = v26;
        v13 = v28;
        v15 = *(_QWORD *)(v30 + 16);
        v14 = *(_QWORD *)(v30 + 24);
        if (v15 >= v14 >> 1)
        {
          v18 = v26;
          v19 = v25;
          v17 = v28;
          sub_23F12D398((char *)(v14 > 1), v15 + 1, 1);
          v13 = v28;
          v12 = v26;
          v11 = v25;
        }
        ++v5;
        *(_QWORD *)(v30 + 16) = v15 + 1;
        v16 = v30 + 80 * v15;
        *(_QWORD *)(v16 + 32) = v23;
        *(_QWORD *)(v16 + 40) = v24;
        *(_OWORD *)(v16 + 48) = v11;
        *(_OWORD *)(v16 + 64) = v12;
        *(_BYTE *)(v16 + 80) = v27;
        *(_OWORD *)(v16 + 88) = v13;
        *(_BYTE *)(v16 + 104) = v29;
        v2 = v22;
        if (v3 == v5)
        {

          return (char *)v6;
        }
      }
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      v3 = sub_23F2685F4();
      swift_bridgeObjectRelease();
      if (!v3)
        goto LABEL_19;
    }
    __break(1u);
  }
  else
  {
LABEL_19:

    return (char *)MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t ResponseParameter.init(key:value:type:required:format:profanityFilter:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11;
  return result;
}

void ResponseParameter.init(title:nlgParam:)()
{
  unint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23F125F3C();
  v5 = v4;
  v7 = v6;
  v33 = v8;
  v10 = v9;
  v11 = sub_23F15EB84();
  v31 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F15E660();
  v13 = sub_23F15EDB0();
  sub_23F126048();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F1319B0();
  v15 = sub_23F1263B8();
  sub_23F15ED68(v15, (SEL *)&selRef_value);
  if (!v16
    || (sub_23F268174(),
        v17 = sub_23F268168(),
        v0 = v18,
        sub_23F1262C0(),
        (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v13),
        v0 >> 60 == 15))
  {
    sub_23F267E14();
    sub_23F267FD0();
    v19 = sub_23F15EB2C();
    if (sub_23F15EAEC(v19))
    {
      v20 = (uint8_t *)sub_23F15099C();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_23F11F000, v2, (os_log_type_t)v0, "Failed to create data representation of NLG parameter value", v20, 2u);
      sub_23F14EFB4();
    }

    (*(void (**)(NSObject *, uint64_t))(v31 + 8))(v2, v32);
    v17 = 0;
    v0 = 0xF000000000000000;
  }
  v21 = sub_23F159FD0(0, 0xF000000000000000);
  v22 = sub_23F15ED68(v21, (SEL *)&selRef_type);
  v24 = v23;
  sub_23F130928();
  v25 = sub_23F14C66C();
  v26 = sub_23F15ED70(v25, sel_format);
  if (v26)
  {
    v27 = v26;
    v28 = sub_23F26815C();
    v30 = v29;

  }
  else
  {

    v28 = 0;
    v30 = 0;
  }
  swift_bridgeObjectRetain();
  sub_23F14C66C();
  sub_23F15ED18();
  sub_23F1263B8();
  sub_23F15ED18();
  sub_23F15ED24();
  sub_23F1318B8();
  *(_QWORD *)v10 = v33;
  *(_QWORD *)(v10 + 8) = v7;
  *(_QWORD *)(v10 + 16) = v17;
  *(_QWORD *)(v10 + 24) = v0;
  *(_QWORD *)(v10 + 32) = v22;
  *(_QWORD *)(v10 + 40) = v24;
  *(_BYTE *)(v10 + 48) = 1;
  *(_QWORD *)(v10 + 56) = v28;
  *(_QWORD *)(v10 + 64) = v30;
  *(_BYTE *)(v10 + 72) = 1;
  sub_23F1318B8();
  sub_23F15ED24();
  sub_23F13186C();
  swift_bridgeObjectRelease();
  sub_23F125EFC();
}

void ResponseParameter.key.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ResponseParameter.key.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*ResponseParameter.key.modify())()
{
  return nullsub_1;
}

void ResponseParameter.value.getter()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_23F1317E0();
  sub_23F159FE4(v0, v1);
  sub_23F1317E0();
  sub_23F126078();
}

void ResponseParameter.value.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15E844();
  sub_23F159FD0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  sub_23F12612C();
}

uint64_t (*ResponseParameter.value.modify())()
{
  return nullsub_1;
}

void ResponseParameter.type.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ResponseParameter.type.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15EB8C();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  sub_23F12612C();
}

uint64_t (*ResponseParameter.type.modify())()
{
  return nullsub_1;
}

uint64_t ResponseParameter.required.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t ResponseParameter.required.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*ResponseParameter.required.modify())()
{
  return nullsub_1;
}

void ResponseParameter.format.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ResponseParameter.format.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15E844();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v0;
  sub_23F12612C();
}

uint64_t (*ResponseParameter.format.modify())()
{
  return nullsub_1;
}

uint64_t ResponseParameter.profanityFilter.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t ResponseParameter.profanityFilter.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = result;
  return result;
}

uint64_t (*ResponseParameter.profanityFilter.modify())()
{
  return nullsub_1;
}

double ResponseParameter.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_23F26AB50;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 2;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 72) = 2;
  return result;
}

uint64_t static ResponseParameter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  int v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  int v19;
  char v20;
  BOOL v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v7 = *(unsigned __int8 *)(a1 + 72);
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 40);
  v28 = *(_QWORD *)(a2 + 32);
  v29 = *(_QWORD *)(a1 + 32);
  v26 = *(unsigned __int8 *)(a2 + 48);
  v27 = *(unsigned __int8 *)(a1 + 48);
  v24 = *(_QWORD *)(a2 + 56);
  v25 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  v12 = *(unsigned __int8 *)(a2 + 72);
  if (!v11)
  {
    sub_23F126148();
    result = sub_23F15E5CC();
    if ((v14 & 1) == 0)
      return result;
  }
  if (v3 >> 60 == 15)
  {
    if (v8 >> 60 == 15)
      goto LABEL_14;
LABEL_10:
    v15 = sub_23F15E8A0();
    sub_23F159FD0(v15, v16);
    sub_23F15E868(v9);
    return 0;
  }
  if (v8 >> 60 == 15)
    goto LABEL_10;
  v17 = sub_23F15E8A0();
  v23 = MEMORY[0x2426660F8](v17);
  sub_23F15E868(v9);
  sub_23F159FD0(v2, v3);
  if ((v23 & 1) == 0)
    return 0;
LABEL_14:
  if (v4)
  {
    if (!v10)
      return 0;
    v18 = v29 == v28 && v4 == v10;
    v19 = v7;
    if (!v18)
    {
      sub_23F126148();
      result = sub_23F15E5CC();
      if ((v20 & 1) == 0)
        return result;
    }
  }
  else
  {
    v19 = v7;
    if (v10)
      return 0;
  }
  if (v27 == 2)
  {
    if (v26 != 2)
      return 0;
  }
  else
  {
    result = 0;
    if (v26 == 2 || ((((v27 & 1) == 0) ^ v26) & 1) == 0)
      return result;
  }
  if (!v5)
  {
    if (!v25)
      goto LABEL_37;
    return 0;
  }
  if (!v25)
    return 0;
  v21 = v6 == v24 && v5 == v25;
  if (v21 || (sub_23F126148(), result = sub_23F15E5CC(), (v22 & 1) != 0))
  {
LABEL_37:
    if (v19 == 2)
    {
      if (v12 == 2)
        return 1;
    }
    else if (v12 != 2 && ((((v19 & 1) == 0) ^ v12) & 1) != 0)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_23F151210(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1701869940 && a2 == 0xE400000000000000;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6465726975716572 && a2 == 0xE800000000000000;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x74616D726F66 && a2 == 0xE600000000000000;
          if (v9 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x74696E61666F7270 && a2 == 0xEF7265746C694679)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_23F268798();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_23F151470()
{
  return 6;
}

uint64_t sub_23F151478(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1514A4 + 4 * byte_23F26AB60[a1]))(7955819, 0xE300000000000000);
}

uint64_t sub_23F1514A4()
{
  return 0x65756C6176;
}

uint64_t sub_23F1514B8()
{
  return 1701869940;
}

uint64_t sub_23F1514C8()
{
  return 0x6465726975716572;
}

uint64_t sub_23F1514E0()
{
  return 0x74616D726F66;
}

uint64_t sub_23F1514F4()
{
  return 0x74696E61666F7270;
}

uint64_t sub_23F15151C()
{
  unsigned __int8 *v0;

  return sub_23F151478(*v0);
}

uint64_t sub_23F151524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F151210(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F151548@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F151470();
  *a1 = result;
  return result;
}

uint64_t sub_23F15156C()
{
  sub_23F159FF8();
  return sub_23F2688B8();
}

uint64_t sub_23F151594()
{
  sub_23F159FF8();
  return sub_23F2688C4();
}

void ResponseParameter.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256DFF370);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F15E7A8();
  sub_23F15EDA4();
  sub_23F12545C(v4, v4[3]);
  sub_23F159FF8();
  sub_23F15EB4C();
  sub_23F268720();
  if (!v1)
  {
    sub_23F15EC34();
    sub_23F146B94();
    sub_23F15E5FC();
    sub_23F15E4D8();
    sub_23F15E974();
    sub_23F15E4D8();
    sub_23F15E974();
  }
  sub_23F15E7D4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void ResponseParameter.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;

  sub_23F131874();
  v3 = v2;
  v5 = v4;
  sub_23F1217E8(&qword_256DFF380);
  sub_23F126048();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1319B0();
  sub_23F12545C(v3, v3[3]);
  sub_23F159FF8();
  sub_23F15E9A0();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
    sub_23F1318DC();
    v17 = 0;
    v18 = 0xF000000000000000;
  }
  else
  {
    LOBYTE(v23) = 0;
    v7 = sub_23F268684();
    v9 = v8;
    sub_23F15EC34();
    sub_23F146AE4();
    sub_23F126140();
    sub_23F15EC74();
    sub_23F268678();
    v22 = v5;
    sub_23F159FE4(v23, v24);
    v10 = sub_23F15E764();
    v12 = v11;
    v21 = v10;
    sub_23F130928();
    v25 = sub_23F15E958();
    v20 = v7;
    v13 = sub_23F15E764();
    v15 = v14;
    v19 = v13;
    sub_23F130928();
    v16 = sub_23F15E958();
    sub_23F15E3E0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_23F126140();
    sub_23F159FE4(v23, v24);
    sub_23F159FD0(v23, v24);
    sub_23F1318DC();
    *(_QWORD *)v22 = v20;
    *(_QWORD *)(v22 + 8) = v9;
    *(_QWORD *)(v22 + 16) = v23;
    *(_QWORD *)(v22 + 24) = v24;
    *(_QWORD *)(v22 + 32) = v21;
    *(_QWORD *)(v22 + 40) = v12;
    *(_BYTE *)(v22 + 48) = v25;
    *(_QWORD *)(v22 + 56) = v19;
    *(_QWORD *)(v22 + 64) = v15;
    *(_BYTE *)(v22 + 72) = v16;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
    sub_23F1318DC();
    v17 = v23;
    v18 = v24;
  }
  sub_23F159FD0(v17, v18);
  sub_23F13190C();
  sub_23F131790();
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F151A18()
{
  ResponseParameter.init(from:)();
}

void sub_23F151A2C()
{
  ResponseParameter.encode(to:)();
}

void __swiftcall ResponseDialog.init(fullPrint:fullSpeak:supportingPrint:supportingSpeak:)(IntelligenceFlow::ResponseDialog *__return_ptr retstr, Swift::String fullPrint, Swift::String_optional fullSpeak, Swift::String_optional supportingPrint, Swift::String_optional supportingSpeak)
{
  retstr->fullPrint = fullPrint;
  retstr->fullSpeak = fullSpeak;
  retstr->supportingPrint = supportingPrint;
  retstr->supportingSpeak = supportingSpeak;
}

void ResponseDialog.fullPrint.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ResponseDialog.fullPrint.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F15EB9C();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*ResponseDialog.fullPrint.modify())()
{
  return nullsub_1;
}

void ResponseDialog.fullSpeak.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ResponseDialog.fullSpeak.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15E844();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  sub_23F12612C();
}

uint64_t (*ResponseDialog.fullSpeak.modify())()
{
  return nullsub_1;
}

void ResponseDialog.supportingPrint.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ResponseDialog.supportingPrint.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15EB8C();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  sub_23F12612C();
}

uint64_t (*ResponseDialog.supportingPrint.modify())()
{
  return nullsub_1;
}

void ResponseDialog.supportingSpeak.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ResponseDialog.supportingSpeak.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15E844();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  sub_23F12612C();
}

uint64_t (*ResponseDialog.supportingSpeak.modify())()
{
  return nullsub_1;
}

void __swiftcall ResponseDialog.init()(IntelligenceFlow::ResponseDialog *__return_ptr retstr)
{
  retstr->fullPrint._countAndFlagsBits = 0;
  retstr->fullPrint._object = (void *)0xE000000000000000;
  retstr->fullSpeak = 0u;
  retstr->supportingPrint = 0u;
  retstr->supportingSpeak = 0u;
}

uint64_t static ResponseDialog.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t result;
  char v14;
  BOOL v15;
  char v16;
  char v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v6 = a1[7];
  v8 = a2[2];
  v7 = a2[3];
  v10 = a2[4];
  v9 = a2[5];
  v11 = *a1 == *a2 && a1[1] == a2[1];
  v12 = a2[7];
  v20 = a2[6];
  v21 = a1[6];
  if (!v11)
  {
    sub_23F126148();
    result = sub_23F15E5CC();
    if ((v14 & 1) == 0)
      return result;
  }
  if (!v4)
  {
    if (v7)
      return 0;
    goto LABEL_15;
  }
  if (!v7)
    return 0;
  v15 = v2 == v8 && v4 == v7;
  if (v15 || (sub_23F126148(), result = sub_23F15E5CC(), (v16 & 1) != 0))
  {
LABEL_15:
    if (v5)
    {
      if (!v9)
        return 0;
      if (v3 != v10 || v5 != v9)
      {
        sub_23F15EB34();
        sub_23F126148();
        result = sub_23F15E5CC();
        if ((v18 & 1) == 0)
          return result;
      }
    }
    else if (v9)
    {
      return 0;
    }
    if (v6)
    {
      if (v12)
      {
        v19 = v21 == v20 && v6 == v12;
        if (v19 || (sub_23F126148() & 1) != 0)
          return 1;
      }
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_23F151CEC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  char v9;

  v3 = a1 == 0x6E6972506C6C7566 && a2 == 0xE900000000000074;
  if (v3 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x616570536C6C7566 && a2 == 0xE90000000000006BLL;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6974726F70707573 && a2 == 0xEF746E697250676ELL;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6974726F70707573 && a2 == 0xEF6B61657053676ELL)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F151EE0()
{
  return 4;
}

uint64_t sub_23F151EE8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F151F24 + 4 * byte_23F26AB66[a1]))(0x6E6972506C6C7566, 0xE900000000000074);
}

uint64_t sub_23F151F24()
{
  return 0x616570536C6C7566;
}

uint64_t sub_23F151F40()
{
  return 0x6974726F70707573;
}

void sub_23F151F78()
{
  sub_23F153E2C();
}

uint64_t sub_23F151F90()
{
  unsigned __int8 *v0;

  return sub_23F151EE8(*v0);
}

uint64_t sub_23F151F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F151CEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F151FBC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F151EE0();
  *a1 = result;
  return result;
}

uint64_t sub_23F151FE0()
{
  sub_23F15A034();
  return sub_23F2688B8();
}

uint64_t sub_23F152008()
{
  sub_23F15A034();
  return sub_23F2688C4();
}

void ResponseDialog.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256DFF388);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F15E7A8();
  sub_23F15EDA4();
  sub_23F12545C(v4, v4[3]);
  sub_23F15A034();
  sub_23F2688A0();
  sub_23F268720();
  if (!v1)
  {
    sub_23F15EC4C();
    sub_23F15E4D8();
    sub_23F15E4D8();
    sub_23F15E4D8();
  }
  sub_23F15E444(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void ResponseDialog.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  sub_23F131874();
  v4 = v3;
  v6 = v5;
  sub_23F1217E8(&qword_256DFF398);
  sub_23F126048();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15EB6C();
  sub_23F12545C(v4, v4[3]);
  sub_23F15A034();
  sub_23F15E9A0();
  if (v0)
  {
    sub_23F131BF4();
    swift_bridgeObjectRelease();
    sub_23F15EB24();
    sub_23F1318DC();
  }
  else
  {
    v8 = sub_23F268684();
    v10 = v9;
    v25 = v8;
    sub_23F130928();
    v11 = sub_23F15E69C();
    v13 = v12;
    v23 = v11;
    v24 = v6;
    sub_23F130928();
    v14 = sub_23F15E69C();
    v16 = v15;
    v22 = v14;
    sub_23F130928();
    v17 = sub_23F15E69C();
    v19 = v18;
    v20 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
    v21 = v17;
    sub_23F15E694(v2, v20);
    sub_23F1315C4();
    swift_bridgeObjectRelease();
    *v24 = v25;
    v24[1] = v10;
    v24[2] = v23;
    v24[3] = v13;
    v24[4] = v22;
    v24[5] = v16;
    v24[6] = v21;
    v24[7] = v19;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
    sub_23F1317F8();
    sub_23F15EB24();
    sub_23F13190C();
  }
  swift_bridgeObjectRelease();
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F15233C()
{
  ResponseDialog.init(from:)();
}

void sub_23F152350()
{
  ResponseDialog.encode(to:)();
}

void ResponseVisual.views.setter()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F15ECF0();
  *v1 = v0;
  sub_23F126078();
}

uint64_t (*ResponseVisual.views.modify())()
{
  return nullsub_1;
}

uint64_t ResponseVisual.labels.getter()
{
  return swift_bridgeObjectRetain();
}

void ResponseVisual.labels.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  sub_23F126078();
}

uint64_t (*ResponseVisual.labels.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::ResponseVisual __swiftcall ResponseVisual.init(views:)(Swift::OpaquePointer views)
{
  Swift::OpaquePointer *v1;
  void *v2;
  IntelligenceFlow::ResponseVisual result;

  v2 = (void *)MEMORY[0x24BEE4AF8];
  v1->_rawValue = views._rawValue;
  v1[1]._rawValue = v2;
  result.views = views;
  return result;
}

IntelligenceFlow::ResponseVisual __swiftcall ResponseVisual.init(views:labels:)(Swift::OpaquePointer views, Swift::OpaquePointer labels)
{
  Swift::OpaquePointer *v2;
  IntelligenceFlow::ResponseVisual result;

  v2->_rawValue = views._rawValue;
  v2[1]._rawValue = labels._rawValue;
  result.labels = labels;
  result.views = views;
  return result;
}

IntelligenceFlow::ResponseVisual __swiftcall ResponseVisual.init()()
{
  _QWORD *v0;
  uint64_t v1;
  IntelligenceFlow::ResponseVisual result;

  v1 = MEMORY[0x24BEE4AF8];
  *v0 = MEMORY[0x24BEE4AF8];
  v0[1] = v1;
  return result;
}

void ResponseVisual.UIType.ArchivedViewPayload.viewData.getter()
{
  sub_23F15EA8C();
  sub_23F1317E0();
  sub_23F126078();
}

void ResponseVisual.UIType.ArchivedViewPayload.containerBundleId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ResponseVisual.UIType.ArchivedViewPayload.targetBundleId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

uint64_t ResponseVisual.UIType.ArchivedViewPayload.init(viewData:containerBundleId:targetBundleId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

void static ResponseVisual.UIType.ArchivedViewPayload.== infix(_:_:)()
{
  sub_23F15EDD4();
}

uint64_t sub_23F15249C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t result;
  char v11;

  if ((a1 & 1) == 0)
    return 0;
  if (!v5)
  {
    if (v7)
      return 0;
    goto LABEL_11;
  }
  if (!v7)
    return 0;
  v9 = v6 == v8 && v5 == v7;
  if (v9 || (sub_23F15EC9C(), sub_23F126148(), result = sub_23F15E5CC(), (v11 & 1) != 0))
  {
LABEL_11:
    if (v2)
    {
      if (v3)
      {
        if (v1 == v4 && v2 == v3)
          return 1;
        sub_23F1317E0();
        if ((sub_23F126148() & 1) != 0)
          return 1;
      }
    }
    else if (!v3)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_23F15251C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6174614477656976 && a2 == 0xE800000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023F293720 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7542746567726174 && a2 == 0xEE006449656C646ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F152688(char a1)
{
  if (!a1)
    return 0x6174614477656976;
  if (a1 == 1)
    return 0xD000000000000011;
  return 0x7542746567726174;
}

uint64_t sub_23F1526F0()
{
  char *v0;

  return sub_23F152688(*v0);
}

uint64_t sub_23F1526F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F15251C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F15271C()
{
  sub_23F15A070();
  return sub_23F2688B8();
}

uint64_t sub_23F152744()
{
  sub_23F15A070();
  return sub_23F2688C4();
}

void ResponseVisual.UIType.ArchivedViewPayload.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_23F131874();
  v3 = v2;
  sub_23F1217E8(&qword_256DFF3A0);
  sub_23F126210();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F1319C8();
  sub_23F15EDA4();
  sub_23F12545C(v3, v3[3]);
  sub_23F15A070();
  sub_23F2688A0();
  sub_23F146B94();
  sub_23F15E818();
  if (!v0)
  {
    sub_23F15EA14();
    sub_23F15EB34();
    sub_23F15EA14();
  }
  sub_23F15E780(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F1313FC();
}

void ResponseVisual.UIType.ArchivedViewPayload.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  sub_23F131874();
  sub_23F15E7E8();
  sub_23F1217E8(&qword_256DFF3B0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F15E498();
  sub_23F15A070();
  sub_23F15E46C();
  if (v1)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F146AE4();
    sub_23F15E714();
    sub_23F131170(v15, v16);
    v5 = sub_23F15E764();
    v7 = v6;
    v14 = v5;
    sub_23F1315C4();
    v8 = v7;
    v9 = sub_23F15E764();
    v11 = v10;
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    v13 = v9;
    sub_23F15E3EC(v12);
    sub_23F131170(v15, v16);
    sub_23F1315C4();
    sub_23F15EBC0(v15);
    *v2 = v15;
    v2[1] = v16;
    v2[2] = v14;
    v2[3] = v8;
    v2[4] = v13;
    v2[5] = v11;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
    sub_23F15EBC0(v15);
    sub_23F1317F8();
    swift_bridgeObjectRelease();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F152A34()
{
  ResponseVisual.UIType.ArchivedViewPayload.init(from:)();
}

void sub_23F152A48()
{
  ResponseVisual.UIType.ArchivedViewPayload.encode(to:)();
}

void ResponseVisual.UIType.LiveActivityPayload.sessionId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

IntelligenceFlow::ResponseVisual::UIType::LiveActivityPayload __swiftcall ResponseVisual.UIType.LiveActivityPayload.init(sessionId:)(IntelligenceFlow::ResponseVisual::UIType::LiveActivityPayload sessionId)
{
  IntelligenceFlow::ResponseVisual::UIType::LiveActivityPayload *v1;

  *v1 = sessionId;
  return sessionId;
}

uint64_t static ResponseVisual.UIType.LiveActivityPayload.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23F268798();
}

uint64_t sub_23F152AB8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F152B48()
{
  return 0x496E6F6973736573;
}

void sub_23F152B64()
{
  sub_23F1551C0();
}

uint64_t sub_23F152B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F152AB8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F152BA8()
{
  sub_23F15A0AC();
  return sub_23F2688B8();
}

uint64_t sub_23F152BD0()
{
  sub_23F15A0AC();
  return sub_23F2688C4();
}

void ResponseVisual.UIType.LiveActivityPayload.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F131874();
  v2 = v1;
  sub_23F1217E8(&qword_256DFF3B8);
  sub_23F126048();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F126058();
  sub_23F12545C(v2, v2[3]);
  sub_23F15A0AC();
  sub_23F15E78C();
  sub_23F268720();
  sub_23F15E730(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void ResponseVisual.UIType.LiveActivityPayload.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F131874();
  v3 = v2;
  sub_23F1217E8(&qword_256DFF3C8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F126058();
  sub_23F15E498();
  sub_23F15A0AC();
  sub_23F15EB10();
  sub_23F15E564();
  if (!v0)
  {
    v5 = sub_23F268684();
    v7 = v6;
    sub_23F15E730(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *v3 = v5;
    v3[1] = v7;
  }
  sub_23F131BF4();
  sub_23F1313FC();
}

void sub_23F152D50()
{
  ResponseVisual.UIType.LiveActivityPayload.init(from:)();
}

void sub_23F152D64()
{
  ResponseVisual.UIType.LiveActivityPayload.encode(to:)();
}

void ResponseVisual.UIType.PluginSnippetPayload.pluginModelData.getter()
{
  sub_23F15EA8C();
  sub_23F1317E0();
  sub_23F126078();
}

void ResponseVisual.UIType.PluginSnippetPayload.bundleId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void static ResponseVisual.UIType.PluginSnippetPayload.== infix(_:_:)()
{
  sub_23F15EDD4();
}

void sub_23F152DE0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  if ((a1 & 1) == 0 || (v1 == v3 ? (v5 = v2 == v4) : (v5 = 0), v5))
  {
    sub_23F12612C();
  }
  else
  {
    sub_23F15E648();
    sub_23F15E7DC();
  }
}

uint64_t sub_23F152E10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6F4D6E6967756C70 && a2 == 0xEF617461446C6564;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F152F20(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6449656C646E7562;
  else
    return 0x6F4D6E6967756C70;
}

uint64_t sub_23F152F64()
{
  char *v0;

  return sub_23F152F20(*v0);
}

uint64_t sub_23F152F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F152E10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F152F90()
{
  sub_23F15A0E8();
  return sub_23F2688B8();
}

uint64_t sub_23F152FB8()
{
  sub_23F15A0E8();
  return sub_23F2688C4();
}

void ResponseVisual.UIType.PluginSnippetPayload.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F131874();
  v2 = v1;
  v3 = sub_23F1217E8(&qword_256DFF3D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F1319C8();
  sub_23F12545C(v2, v2[3]);
  sub_23F15A0E8();
  sub_23F15E78C();
  sub_23F146B94();
  sub_23F15E818();
  if (!v0)
    sub_23F131644();
  sub_23F15E780(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void ResponseVisual.UIType.PluginSnippetPayload.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F131874();
  sub_23F15E7E8();
  sub_23F1217E8(&qword_256DFF3E0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F15E498();
  sub_23F15A0E8();
  sub_23F15E46C();
  if (v1)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F146AE4();
    sub_23F15E714();
    sub_23F15ECD8();
    v5 = sub_23F15E704();
    v7 = v6;
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    v9 = v5;
    sub_23F15E3EC(v8);
    sub_23F15ECD8();
    sub_23F1315C4();
    sub_23F15E76C();
    *v2 = v10;
    v2[1] = v11;
    v2[2] = v9;
    v2[3] = v7;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
    sub_23F15E76C();
    sub_23F1317F8();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F1531D4()
{
  ResponseVisual.UIType.PluginSnippetPayload.init(from:)();
}

void sub_23F1531E8()
{
  ResponseVisual.UIType.PluginSnippetPayload.encode(to:)();
}

uint64_t ResponseVisual.UIType.ControlPayload.controlMetadata.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F15E83C();
  v0 = sub_23F1317E0();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t ResponseVisual.UIType.ControlPayload.init(controlMetadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23F15E83C();
  return sub_23F126180(a2, a1, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 32));
}

uint64_t static ResponseVisual.UIType.ControlPayload.== infix(_:_:)()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v7;

  v0 = ConfirmationView.ControlMetadata.data.getter();
  v2 = v1;
  v4 = ConfirmationView.ControlMetadata.data.getter();
  v5 = v3;
  if (v2 >> 60 == 15)
  {
    if (v3 >> 60 == 15)
      return 1;
    goto LABEL_5;
  }
  if (v3 >> 60 == 15)
  {
LABEL_5:
    sub_23F15E868(v0);
    sub_23F15ED54();
    return 0;
  }
  sub_23F131170(v0, v2);
  v7 = MEMORY[0x2426660F8](v0, v2, v4, v5);
  sub_23F15ED54();
  sub_23F15E868(v0);
  sub_23F15E868(v0);
  return v7 & 1;
}

uint64_t ConfirmationView.ControlMetadata.data.getter()
{
  uint64_t v0;

  sub_23F125F3C();
  sub_23F15EB84();
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F15E5B0();
  sub_23F267C70();
  sub_23F150918();
  sub_23F267C64();
  sub_23F15E83C();
  sub_23F12E488((uint64_t)&unk_256DFF3E8);
  sub_23F267C58();
  sub_23F131B08();
  return sub_23F15EB34();
}

uint64_t sub_23F1534E8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x4D6C6F72746E6F63 && a2 == 0xEF61746164617465)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F153590()
{
  return 0x4D6C6F72746E6F63;
}

uint64_t sub_23F1535B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1534E8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1535E0()
{
  sub_23F15A124();
  return sub_23F2688B8();
}

uint64_t sub_23F153608()
{
  sub_23F15A124();
  return sub_23F2688C4();
}

uint64_t ResponseVisual.UIType.ControlPayload.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_23F1217E8(&qword_256DFF3F8);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F126058();
  sub_23F12545C(a1, a1[3]);
  sub_23F15A124();
  sub_23F15EB10();
  sub_23F15EBF0();
  sub_23F2680B4();
  sub_23F12E488((uint64_t)&unk_256DFF3E8);
  sub_23F268750();
  return sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

void ResponseVisual.UIType.ControlPayload.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F131874();
  v4 = v3;
  v13 = v5;
  v15 = sub_23F2680B4();
  v12 = *(_QWORD *)(v15 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F125F70();
  v14 = v7;
  v8 = sub_23F1217E8(&qword_256DFF408);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = sub_23F15E9EC();
  type metadata accessor for ResponseVisual.UIType.ControlPayload(v10);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F15E660();
  sub_23F12545C(v4, v4[3]);
  sub_23F15A124();
  sub_23F268888();
  if (!v0)
  {
    sub_23F12E488((uint64_t)&unk_256DFF410);
    sub_23F2686B4();
    sub_23F15E7D4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v1, v14, v15);
    sub_23F15A480(v1, v13, (void (*)(_QWORD))type metadata accessor for ResponseVisual.UIType.ControlPayload);
  }
  sub_23F131BF4();
  sub_23F1313FC();
}

void sub_23F15388C()
{
  ResponseVisual.UIType.ControlPayload.init(from:)();
}

uint64_t sub_23F1538A0(_QWORD *a1)
{
  return ResponseVisual.UIType.ControlPayload.encode(to:)(a1);
}

void static ResponseVisual.UIType.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;

  sub_23F125F3C();
  v2 = v1;
  v4 = v3;
  type metadata accessor for ResponseVisual.UIType.ControlPayload(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23F15E5B0();
  type metadata accessor for ResponseVisual.UIType(v6);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15EB5C();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F1217E8(&qword_256DFF418);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F15E524();
  v13 = v0 + *(int *)(v12 + 48);
  sub_23F15A188(v4, v0);
  sub_23F15A188(v2, v13);
  sub_23F1317E0();
  v14 = (char *)sub_23F1539DC + 4 * byte_23F26AB6A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F1539DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  sub_23F15A188(v0, (uint64_t)v2);
  v5 = *v2;
  v4 = v2[1];
  v6 = v2[3];
  v7 = v2[5];
  if (!sub_23F15E73C())
  {
    v8 = v2[4];
    v9 = v2[2];
    v10 = *v1;
    v11 = v1[5];
    *(_QWORD *)(v3 - 128) = v5;
    *(_QWORD *)(v3 - 120) = v4;
    *(_QWORD *)(v3 - 112) = v9;
    *(_QWORD *)(v3 - 104) = v6;
    *(_QWORD *)(v3 - 96) = v8;
    *(_QWORD *)(v3 - 88) = v7;
    *(_QWORD *)(v3 - 176) = v10;
    v12 = *(_OWORD *)(v1 + 1);
    *(_OWORD *)(v3 - 208) = v12;
    *(_OWORD *)(v3 - 168) = v12;
    v13 = *(_OWORD *)(v1 + 3);
    *(_OWORD *)(v3 - 192) = v13;
    *(_OWORD *)(v3 - 152) = v13;
    *(_QWORD *)(v3 - 136) = v11;
    static ResponseVisual.UIType.ArchivedViewPayload.== infix(_:_:)();
  }
  sub_23F15EC1C();
  sub_23F1318DC();
  sub_23F1262C0();
  sub_23F15A1CC(v0);
  sub_23F125EFC();
}

uint64_t sub_23F153C2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x6465766968637261 && a2 == 0xEC00000077656956;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x697463416576696CLL && a2 == 0xEC00000079746976;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6C6F72746E6F63 && a2 == 0xE700000000000000;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6E536E6967756C70 && a2 == 0xED00007465707069)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

void sub_23F153E2C()
{
  sub_23F1317B8();
  sub_23F15EDC0();
  sub_23F1318A0();
  sub_23F1318E4();
}

uint64_t sub_23F153E58(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F153E94 + 4 * byte_23F26AB6E[a1]))(0x6465766968637261, 0xEC00000077656956);
}

uint64_t sub_23F153E94()
{
  return 0x697463416576696CLL;
}

uint64_t sub_23F153EB4()
{
  return 0x6C6F72746E6F63;
}

uint64_t sub_23F153ECC()
{
  return 0x6E536E6967756C70;
}

uint64_t sub_23F153EF0()
{
  return 12383;
}

uint64_t sub_23F153F00()
{
  sub_23F15A374();
  return sub_23F2688B8();
}

uint64_t sub_23F153F28()
{
  sub_23F15A374();
  return sub_23F2688C4();
}

void sub_23F153F50()
{
  sub_23F15E678();
  sub_23F15EA08();
  sub_23F1318A0();
  sub_23F1318E4();
}

uint64_t sub_23F153F78()
{
  unsigned __int8 *v0;

  return sub_23F153E58(*v0);
}

uint64_t sub_23F153F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F153C2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F153FA4()
{
  sub_23F15A20C();
  return sub_23F2688B8();
}

uint64_t sub_23F153FCC()
{
  sub_23F15A20C();
  return sub_23F2688C4();
}

uint64_t sub_23F153FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F15515C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F15401C()
{
  sub_23F15A2C0();
  return sub_23F2688B8();
}

uint64_t sub_23F154044()
{
  sub_23F15A2C0();
  return sub_23F2688C4();
}

uint64_t sub_23F15406C()
{
  sub_23F15A2FC();
  return sub_23F2688B8();
}

uint64_t sub_23F154094()
{
  sub_23F15A2FC();
  return sub_23F2688C4();
}

uint64_t sub_23F1540BC()
{
  sub_23F15A248();
  return sub_23F2688B8();
}

uint64_t sub_23F1540E4()
{
  sub_23F15A248();
  return sub_23F2688C4();
}

void ResponseVisual.UIType.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F131874();
  v17 = v1;
  v3 = v2;
  sub_23F1217E8(&qword_256DFF420);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F125F70();
  sub_23F1217E8(&qword_256DFF428);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F15E9D0(v6, v15);
  type metadata accessor for ResponseVisual.UIType.ControlPayload(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15E9B4(v8, v16);
  sub_23F1217E8(&qword_256DFF430);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F15E660();
  sub_23F1217E8(&qword_256DFF438);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F15E5B0();
  type metadata accessor for ResponseVisual.UIType(v11);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F15E524();
  sub_23F1217E8(&qword_256DFF440);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F15E50C();
  sub_23F12545C(v3, v3[3]);
  sub_23F15A20C();
  sub_23F15EB4C();
  sub_23F15A188(v17, v0);
  v14 = (char *)sub_23F1542A8 + 4 * byte_23F26AB72[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F1542A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *v0;
  v5 = v0[1];
  *(_QWORD *)(v3 - 72) = *v0;
  v6 = v0[2];
  v7 = v0[3];
  v8 = v0[4];
  v9 = v0[5];
  *(_QWORD *)(v3 - 176) = v8;
  *(_QWORD *)(v3 - 168) = v6;
  *(_BYTE *)(v3 - 136) = 0;
  sub_23F15A374();
  sub_23F15E6E8();
  *(_QWORD *)(v3 - 136) = v4;
  *(_QWORD *)(v3 - 128) = v5;
  *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 168);
  *(_QWORD *)(v3 - 112) = v7;
  *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 176);
  *(_QWORD *)(v3 - 96) = v9;
  sub_23F15A3B0();
  sub_23F15EB08();
  sub_23F15E7D4(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8));
  sub_23F15E44C(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 160) + 8));
  sub_23F15EA4C(*(_QWORD *)(v3 - 72));
  sub_23F13190C();
  swift_bridgeObjectRelease();
  sub_23F15EAFC();
  sub_23F1313FC();
}

void ResponseVisual.UIType.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47[8];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;

  sub_23F131874();
  v2 = v1;
  v53 = v3;
  v59 = sub_23F1217E8(&qword_256DFF490);
  v56 = *(_QWORD *)(v59 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F125F70();
  v55 = v5;
  v6 = sub_23F1217E8(&qword_256DFF498);
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15E9D0(v8, v47[0]);
  v50 = sub_23F1217E8(&qword_256DFF4A0);
  v49 = *(_QWORD *)(v50 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F15E9B4(v10, v47[0]);
  v48 = sub_23F1217E8(&qword_256DFF4A8);
  v47[7] = *(_QWORD *)(v48 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F125F70();
  v54 = v12;
  v60 = sub_23F1217E8(&qword_256DFF4B0);
  v57 = *(_QWORD *)(v60 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F15E9EC();
  v58 = type metadata accessor for ResponseVisual.UIType(v14);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F15EB5C();
  v18 = v16 - v17;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v47 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)v47 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)v47 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)v47 - v29;
  v31 = v2[3];
  v61 = v2;
  sub_23F12545C(v2, v31);
  sub_23F15A20C();
  sub_23F268888();
  if (!v0)
  {
    v47[2] = (uint64_t)v28;
    v47[3] = (uint64_t)v25;
    v47[5] = (uint64_t)v22;
    v47[4] = v18;
    v47[6] = (uint64_t)v30;
    v32 = v58;
    v33 = sub_23F2686D8();
    v35 = *(_QWORD *)(v33 + 16);
    if (v35)
    {
      v47[1] = 0;
      v36 = *(unsigned __int8 *)(v33 + 32);
      sub_23F15EBF8(1, v35, v33, v33 + 32, v34, (2 * v35) | 1);
      v38 = v37;
      v40 = v39;
      swift_bridgeObjectRelease();
      if (v38 == v40 >> 1)
        __asm { BR              X9 }
    }
    v41 = sub_23F15EDB8();
    sub_23F131B30();
    v43 = v42;
    sub_23F1217E8(&qword_256DFF4B8);
    *v43 = v32;
    v44 = v60;
    sub_23F268648();
    sub_23F15E6B4();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v43, *MEMORY[0x24BEE26D0], v41);
    swift_willThrow();
    sub_23F15E5EC();
    v45 = sub_23F15EAE0();
    v46(v45, v44);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v61);
  sub_23F15EAFC();
  sub_23F1313FC();
}

void sub_23F15492C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v2 - 144) = 1;
  sub_23F15A2FC();
  v3 = *(_QWORD *)(v2 - 216);
  sub_23F15E454();
  if (!v1)
  {
    sub_23F15A4BC();
    sub_23F15E6F4();
    v4 = *(_QWORD *)(v2 - 184);
    sub_23F15E444(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 264) + 8));
    sub_23F15E5EC();
    sub_23F15E588(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    v5 = *(_QWORD *)(v2 - 136);
    v6 = *(_QWORD **)(v2 - 312);
    *v6 = *(_QWORD *)(v2 - 144);
    v6[1] = v5;
    sub_23F15ED90();
    swift_storeEnumTagMultiPayload();
    v7 = (uint64_t)v6;
    v8 = *(_QWORD *)(v2 - 288);
    sub_23F15A480(v7, v8, (void (*)(_QWORD))type metadata accessor for ResponseVisual.UIType);
    sub_23F15A480(v8, *(_QWORD *)(v2 - 232), (void (*)(_QWORD))type metadata accessor for ResponseVisual.UIType);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(*(_QWORD *)(v2 - 152));
    JUMPOUT(0x23F154920);
  }
  sub_23F15E5EC();
  sub_23F15E588(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8));
  JUMPOUT(0x23F15491CLL);
}

void sub_23F1549A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v1 - 144) = 2;
  sub_23F15A2C0();
  sub_23F15E454();
  if (v0)
    JUMPOUT(0x23F1549D0);
  type metadata accessor for ResponseVisual.UIType.ControlPayload(0);
  sub_23F12E488((uint64_t)&unk_256DFF4C8);
  sub_23F2686B4();
  sub_23F15E944();
  sub_23F15E5EC();
  sub_23F15E588(*(_QWORD *)(v1 - 72), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 184) + 8));
  v2 = *(_QWORD *)(v1 - 296);
  sub_23F15ED90();
  swift_storeEnumTagMultiPayload();
  v3 = v2;
  v4 = *(_QWORD *)(v1 - 288);
  sub_23F15A480(v3, v4, (void (*)(_QWORD))type metadata accessor for ResponseVisual.UIType);
  sub_23F15A480(v4, *(_QWORD *)(v1 - 232), (void (*)(_QWORD))type metadata accessor for ResponseVisual.UIType);
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(*(_QWORD *)(v1 - 152));
  JUMPOUT(0x23F154920);
}

void sub_23F1549F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v3 - 144) = 3;
  sub_23F15A248();
  sub_23F15E454();
  if (v1)
  {
    sub_23F15E5EC();
    JUMPOUT(0x23F154AECLL);
  }
  sub_23F15A444();
  sub_23F2686B4();
  v4 = *(_QWORD *)(v3 - 184);
  sub_23F15E730(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F15E5EC();
  sub_23F15E588(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v5 = *(_QWORD *)(v3 - 128);
  v6 = *(_QWORD *)(v3 - 120);
  v7 = *(_QWORD *)(v3 - 304);
  *(_OWORD *)v7 = *(_OWORD *)(v3 - 144);
  *(_QWORD *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v6;
  sub_23F15ED90();
  JUMPOUT(0x23F154BA4);
}

void sub_23F154BE8()
{
  ResponseVisual.UIType.init(from:)();
}

void sub_23F154BFC()
{
  ResponseVisual.UIType.encode(to:)();
}

void ResponseVisual.UILabel.UIConfirmationPayload.affirmative.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void static ResponseVisual.UILabel.UIConfirmationPayload.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  BOOL v9;

  sub_23F15E6C4(a1);
  v7 = v7 && v5 == v6;
  if ((v7 || (sub_23F126148(), sub_23F15E5CC(), (v8 & 1) != 0)) && (v1 == v3 ? (v9 = v2 == v4) : (v9 = 0), !v9))
  {
    sub_23F15E648();
    sub_23F15E7DC();
  }
  else
  {
    sub_23F12612C();
  }
}

uint64_t sub_23F154C84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x74616D7269666661 && a2 == 0xEB00000000657669;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657669746167656ELL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F154D88(char a1)
{
  if ((a1 & 1) != 0)
    return 0x657669746167656ELL;
  else
    return 0x74616D7269666661;
}

uint64_t sub_23F154DC8()
{
  char *v0;

  return sub_23F154D88(*v0);
}

uint64_t sub_23F154DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F154C84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F154DF4()
{
  sub_23F15A534();
  return sub_23F2688B8();
}

uint64_t sub_23F154E1C()
{
  sub_23F15A534();
  return sub_23F2688C4();
}

void ResponseVisual.UILabel.UIConfirmationPayload.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F131874();
  v2 = v1;
  v4 = *(_QWORD *)(sub_23F1217E8(&qword_256DFF4E0) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F1319C8();
  sub_23F12545C(v2, v2[3]);
  sub_23F15A534();
  sub_23F2688A0();
  sub_23F131644();
  if (!v0)
  {
    sub_23F15EC4C();
    sub_23F131644();
  }
  sub_23F15E780(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void ResponseVisual.UILabel.UIConfirmationPayload.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;

  sub_23F131874();
  sub_23F15E7E8();
  sub_23F1217E8(&qword_256DFF4F0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F15E498();
  sub_23F15A534();
  sub_23F15E46C();
  if (v1)
  {
    sub_23F131BF4();
  }
  else
  {
    v5 = sub_23F15E704();
    v7 = v6;
    sub_23F130928();
    v8 = sub_23F15E704();
    v10 = v9;
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    v12 = v8;
    sub_23F15E3EC(v11);
    *v2 = v5;
    v2[1] = v7;
    v2[2] = v12;
    v2[3] = v10;
    sub_23F1315C4();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
    sub_23F1317F8();
    sub_23F131790();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F155018()
{
  ResponseVisual.UILabel.UIConfirmationPayload.init(from:)();
}

void sub_23F15502C()
{
  ResponseVisual.UILabel.UIConfirmationPayload.encode(to:)();
}

void static ResponseVisual.UILabel.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  sub_23F15E6C4(a1);
  v7 = v7 && v5 == v6;
  if ((v7 || (sub_23F126148() & 1) != 0) && (v1 != v3 || v2 != v4))
    sub_23F126148();
  sub_23F12612C();
}

uint64_t sub_23F1550A0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x616D7269666E6F63 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F15513C()
{
  return 0x616D7269666E6F63;
}

uint64_t sub_23F15515C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F126148();
    sub_23F1318B8();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_23F1551C0()
{
  sub_23F1317B8();
  sub_23F15EDC8();
  sub_23F1318A0();
  sub_23F1318E4();
}

uint64_t sub_23F1551E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1550A0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F155210()
{
  sub_23F15A570();
  return sub_23F2688B8();
}

uint64_t sub_23F155238()
{
  sub_23F15A570();
  return sub_23F2688C4();
}

void sub_23F155260()
{
  sub_23F15E678();
  sub_23F15EDC8();
  sub_23F1318A0();
  sub_23F1318E4();
}

uint64_t sub_23F155284()
{
  sub_23F15A5AC();
  return sub_23F2688B8();
}

uint64_t sub_23F1552AC()
{
  sub_23F15A5AC();
  return sub_23F2688C4();
}

void ResponseVisual.UILabel.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  sub_23F131874();
  v1 = v0;
  sub_23F1217E8(&qword_256DFF4F8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F15E50C();
  v6 = *(_QWORD *)(sub_23F1217E8(&qword_256DFF500) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F1316E4();
  sub_23F12545C(v1, v1[3]);
  sub_23F15A570();
  sub_23F15E78C();
  sub_23F15A5AC();
  sub_23F2686E4();
  sub_23F15A5E8();
  sub_23F268750();
  v4 = sub_23F15ECE4();
  sub_23F15E588(v4, v5);
  sub_23F15E3EC(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void ResponseVisual.UILabel.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  sub_23F131874();
  v3 = v2;
  v20 = v4;
  sub_23F1217E8(&qword_256DFF520);
  sub_23F15E850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1319B0();
  v6 = sub_23F1217E8(&qword_256DFF528);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F126058();
  sub_23F12545C(v3, v3[3]);
  sub_23F15A570();
  sub_23F15EB10();
  v8 = (uint64_t)v3;
  sub_23F268888();
  if (!v0)
  {
    v9 = sub_23F2686D8();
    v11 = *(_QWORD *)(v9 + 16);
    if (v11)
    {
      sub_23F15EBF8(1, v11, v9, v9 + 32, v10, (2 * v11) | 1);
      v13 = v12;
      v15 = v14;
      sub_23F1262C0();
      if (v13 == v15 >> 1)
      {
        sub_23F15A5AC();
        sub_23F26863C();
        sub_23F15A624();
        sub_23F15E6F4();
        v8 = (uint64_t)v3;
        sub_23F15E980();
        sub_23F15EB1C();
        sub_23F15E44C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
        *(_OWORD *)v20 = v21;
        *(_QWORD *)(v20 + 16) = v22;
        *(_QWORD *)(v20 + 24) = v23;
        goto LABEL_8;
      }
      v16 = v6;
    }
    else
    {
      v16 = v6;
    }
    v17 = sub_23F15EDB8();
    sub_23F131B30();
    v19 = v18;
    sub_23F1217E8(&qword_256DFF4B8);
    *v19 = &type metadata for ResponseVisual.UILabel;
    sub_23F268648();
    sub_23F15E6B4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    sub_23F15EB1C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v16);
    v8 = (uint64_t)v3;
  }
LABEL_8:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v8);
  sub_23F15E830();
  sub_23F1313FC();
}

void sub_23F1556A4()
{
  ResponseVisual.UILabel.init(from:)();
}

void sub_23F1556B8()
{
  ResponseVisual.UILabel.encode(to:)();
}

#error "23F1556EC: call analysis failed (funcsize=17)"

uint64_t sub_23F155714(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7377656976 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1557F0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x736C6562616CLL;
  else
    return 0x7377656976;
}

void sub_23F155820()
{
  sub_23F1568B0();
}

uint64_t sub_23F155838()
{
  char *v0;

  return sub_23F1557F0(*v0);
}

uint64_t sub_23F155840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F155714(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F155864()
{
  sub_23F15A660();
  return sub_23F2688B8();
}

uint64_t sub_23F15588C()
{
  sub_23F15A660();
  return sub_23F2688C4();
}

void ResponseVisual.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_23F131874();
  v3 = v2;
  sub_23F1217E8(&qword_256DFF538);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F1319C8();
  sub_23F12545C(v3, v3[3]);
  sub_23F15A660();
  sub_23F15EBF0();
  sub_23F1217E8(&qword_256DFF548);
  sub_23F15A6D8((uint64_t)&unk_256DFF550);
  sub_23F15ED30();
  sub_23F1315CC();
  if (!v0)
  {
    sub_23F12636C();
    sub_23F15E778((uint64_t)&unk_256DFF568);
    sub_23F15ED30();
    sub_23F1315CC();
  }
  sub_23F15E780(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void ResponseVisual.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  sub_23F131874();
  sub_23F15E7E8();
  sub_23F1217E8(&qword_256DFF578);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F15E498();
  sub_23F15A660();
  sub_23F15E46C();
  if (v11)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F1217E8(&qword_256DFF548);
    sub_23F15A6D8((uint64_t)&unk_256DFF580);
    sub_23F15E79C();
    sub_23F12636C();
    v15 = sub_23F15E778((uint64_t)&unk_256DFF590);
    swift_bridgeObjectRetain();
    sub_23F15E79C();
    sub_23F15E3EC(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    if (v15)
    {
      sub_23F131790();
      sub_23F131BF4();
    }
    else
    {
      *v12 = a10;
      v12[1] = a10;
      sub_23F1315C4();
      _s16IntelligenceFlow17AnySessionMessageVwxx_0(v10);
      sub_23F1317F8();
    }
    sub_23F131790();
  }
  sub_23F15E910();
  sub_23F1313FC();
}

void sub_23F155B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ResponseVisual.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F155B78()
{
  ResponseVisual.encode(to:)();
}

IntelligenceFlow::ResponseManifest::CodingKeys_optional __swiftcall ResponseManifest.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  IntelligenceFlow::ResponseManifest::CodingKeys_optional result;

  v2 = v1;
  v3 = sub_23F268630();
  sub_23F1318B8();
  v4 = 7;
  if (v3 < 7)
    v4 = v3;
  *v2 = v4;
  sub_23F12612C();
  return result;
}

IntelligenceFlow::ResponseManifest::CodingKeys_optional __swiftcall ResponseManifest.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  IntelligenceFlow::ResponseManifest::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = ResponseManifest.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

IntelligenceFlow::ResponseManifest::CodingKeys_optional __swiftcall ResponseManifest.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 7;
  return (IntelligenceFlow::ResponseManifest::CodingKeys_optional)intValue;
}

void *static ResponseManifest.CodingKeys.allCases.getter()
{
  return &unk_250FA95B8;
}

uint64_t ResponseManifest.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t ResponseManifest.CodingKeys.rawValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F15E484();
  return ((uint64_t (*)(uint64_t))((char *)sub_23F155C68 + 4 * byte_23F26AB7A[v1]))(v0);
}

unint64_t sub_23F155C74()
{
  return sub_23F15E870();
}

unint64_t sub_23F155C80()
{
  return 0xD000000000000015;
}

uint64_t ResponseManifest.CodingKeys.stringValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F15E484();
  return ((uint64_t (*)(uint64_t))((char *)sub_23F155CF0 + 4 * byte_23F26AB81[v1]))(v0);
}

unint64_t sub_23F155CFC()
{
  return sub_23F15E870();
}

unint64_t sub_23F155D08()
{
  return 0xD000000000000015;
}

void sub_23F155D44(char *a1)
{
  sub_23F155EF4(*a1);
}

void sub_23F155D50(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6574656D61726170;
  else
    v3 = 0x74616469646E6163;
  if (v2)
    v4 = 0xE900000000000065;
  else
    v4 = 0xE900000000000072;
  if ((a2 & 1) != 0)
    v5 = 0x6574656D61726170;
  else
    v5 = 0x74616469646E6163;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000072;
  else
    v6 = 0xE900000000000065;
  if (v3 == v5 && v4 == v6)
    sub_23F15EC28();
  else
    sub_23F126148();
  sub_23F1318B8();
  sub_23F1317F8();
  sub_23F12612C();
}

void sub_23F155DDC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23F155E2C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23F155E84 + 4 * byte_23F26AB8C[a2]))(0x796D6D7564);
}

void sub_23F155E84(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x796D6D7564 && v1 == 0xE500000000000000)
    sub_23F15EC28();
  else
    sub_23F126148();
  sub_23F1318B8();
  sub_23F1317F8();
  sub_23F12612C();
}

void sub_23F155EF4(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_23F155F64(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23F156008 + 4 * byte_23F26AB97[a2]))(0x676F6C616964);
}

uint64_t sub_23F156008(uint64_t a1)
{
  uint64_t v1;
  char v3;

  if (a1 == 0x676F6C616964 && v1 == 0xE600000000000000)
    v3 = 1;
  else
    v3 = sub_23F268798();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_23F1560DC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23F156124(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23F15617C + 4 * byte_23F26ABA2[a2]))(0x6C616E6F6974706FLL);
}

void sub_23F15617C(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x6C616E6F6974706FLL && v1 == 0xE800000000000000)
    sub_23F15EC28();
  else
    sub_23F126148();
  sub_23F1318B8();
  sub_23F1317F8();
  sub_23F12612C();
}

void sub_23F1561EC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7972657571;
  else
    v3 = 0x6E6F69746361;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x7972657571;
  else
    v5 = 0x6E6F69746361;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    sub_23F15EC28();
  else
    sub_23F126148();
  sub_23F1318B8();
  sub_23F1317F8();
  sub_23F12612C();
}

BOOL sub_23F15626C(int a1, int a2)
{
  return a1 == a2;
}

void sub_23F156278()
{
  unsigned __int8 *v0;

  sub_23F25E198(*v0);
}

void sub_23F156280()
{
  sub_23F156384();
}

uint64_t sub_23F156288()
{
  sub_23F15E7CC();
  return sub_23F15E420();
}

void sub_23F1562DC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23F15631C()
{
  sub_23F15E7CC();
  return sub_23F15E420();
}

void sub_23F156364()
{
  sub_23F268840();
  sub_23F126078();
}

void sub_23F156384()
{
  sub_23F15EBAC();
  __asm { BR              X10 }
}

uint64_t sub_23F1563C0()
{
  sub_23F15E7CC();
  return sub_23F15E420();
}

void sub_23F156458(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23F156494()
{
  sub_23F15E7CC();
  return sub_23F15E420();
}

void sub_23F1564DC()
{
  sub_23F268858();
  sub_23F126078();
}

uint64_t sub_23F1564FC()
{
  sub_23F15E7CC();
  return sub_23F15E420();
}

void sub_23F156544(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_23F156634(a1, *v1, (void (*)(_BYTE *, uint64_t))sub_23F156384);
}

void sub_23F156564()
{
  sub_23F15E678();
  sub_23F15E7CC();
  sub_23F1318B8();
  sub_23F1318A0();
  sub_23F1318E4();
}

void sub_23F1565C0()
{
  sub_23F15E678();
  sub_23F268858();
  sub_23F1318A0();
  sub_23F1318E4();
}

void sub_23F1565F0(uint64_t a1, uint64_t a2)
{
  sub_23F156634(a1, a2, (void (*)(_BYTE *, uint64_t))sub_23F156458);
}

void sub_23F1565FC()
{
  sub_23F15E678();
  sub_23F15EDC0();
  sub_23F1318A0();
  sub_23F1318E4();
}

void sub_23F156628(uint64_t a1, uint64_t a2)
{
  sub_23F156634(a1, a2, (void (*)(_BYTE *, uint64_t))sub_23F1562DC);
}

void sub_23F156634(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t))
{
  _BYTE v5[72];

  sub_23F15E678();
  a3(v5, a2);
  sub_23F1318A0();
  sub_23F1318E4();
}

void sub_23F156668()
{
  sub_23F15E678();
  sub_23F15E7CC();
  sub_23F1318B8();
  sub_23F1318A0();
  sub_23F1318E4();
}

IntelligenceFlow::ResponseManifest::CodingKeys_optional sub_23F1566D0(Swift::String *a1)
{
  return ResponseManifest.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_23F1566DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ResponseManifest.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_23F15670C(_QWORD *a1@<X8>)
{
  *a1 = &unk_250FA95B8;
}

uint64_t sub_23F15671C()
{
  sub_23F15A924();
  return sub_23F2688B8();
}

uint64_t sub_23F156744()
{
  sub_23F15A924();
  return sub_23F2688C4();
}

uint64_t ResponseManifest.EncodingConfiguration.init(codingKeys:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void ResponseManifest.ResponseDialogPresentationHint.hash(into:)()
{
  sub_23F268840();
  sub_23F126078();
}

BOOL static ResponseManifest.ResponseDialogPresentationHint.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23F1567B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373657270707573 && a2 == 0xED0000746E697250)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_23F1568B0()
{
  sub_23F1317B8();
  sub_23F15EDC0();
  sub_23F1318A0();
  sub_23F1318E4();
}

uint64_t sub_23F1568DC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7373657270707573;
  else
    return 1701736302;
}

uint64_t sub_23F156918()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_23F156934()
{
  return 0;
}

uint64_t sub_23F156940()
{
  char *v0;

  return sub_23F1568DC(*v0);
}

uint64_t sub_23F156948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1567B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F15696C()
{
  sub_23F15A7F4();
  return sub_23F2688B8();
}

uint64_t sub_23F156994()
{
  sub_23F15A7F4();
  return sub_23F2688C4();
}

uint64_t sub_23F1569C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F156918();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23F1569E8()
{
  sub_23F15A86C();
  return sub_23F2688B8();
}

uint64_t sub_23F156A10()
{
  sub_23F15A86C();
  return sub_23F2688C4();
}

uint64_t sub_23F156A38()
{
  sub_23F15A830();
  return sub_23F2688B8();
}

uint64_t sub_23F156A60()
{
  sub_23F15A830();
  return sub_23F2688C4();
}

void ResponseManifest.ResponseDialogPresentationHint.encode(to:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F131874();
  v5 = v4;
  v6 = sub_23F1217E8(&qword_256DFF5A0);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F1316E4();
  v8 = sub_23F1217E8(&qword_256DFF5A8);
  v12 = *(_QWORD *)(v8 - 8);
  v13 = v8;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F15EB6C();
  v16 = *(_QWORD *)(sub_23F1217E8(&qword_256DFF5B0) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F126058();
  v11 = *v0;
  sub_23F12545C(v5, v5[3]);
  sub_23F15A7F4();
  sub_23F15EB10();
  sub_23F2688A0();
  if ((v11 & 1) != 0)
  {
    sub_23F15EC40();
    sub_23F15EA24();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v15);
  }
  else
  {
    sub_23F15A86C();
    sub_23F15EA24();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v3, v13);
  }
  sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  sub_23F1313FC();
}

void ResponseManifest.ResponseDialogPresentationHint.hashValue.getter()
{
  sub_23F1317B8();
  sub_23F15EA08();
  sub_23F1318A0();
  sub_23F1318E4();
}

void ResponseManifest.ResponseDialogPresentationHint.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;

  sub_23F131874();
  v4 = v3;
  v31 = v5;
  v29 = sub_23F1217E8(&qword_256DFF5D0);
  v33 = *(_QWORD *)(v29 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F125F70();
  v32 = v7;
  v30 = sub_23F1217E8(&qword_256DFF5D8);
  MEMORY[0x24BDAC7A8](v30);
  sub_23F15E524();
  v8 = sub_23F1217E8(&qword_256DFF5E0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F1319C8();
  sub_23F12545C(v4, v4[3]);
  sub_23F15A7F4();
  sub_23F15E564();
  if (v0)
    goto LABEL_9;
  v28 = v4;
  v10 = sub_23F2686D8();
  v12 = *(_QWORD *)(v10 + 16);
  v13 = v8;
  if (!v12)
  {
LABEL_8:
    v20 = sub_23F15EDB8();
    sub_23F131B30();
    v22 = v21;
    sub_23F1217E8(&qword_256DFF4B8);
    *v22 = &type metadata for ResponseManifest.ResponseDialogPresentationHint;
    sub_23F268648();
    sub_23F15E6B4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    sub_23F15E96C();
    v23 = sub_23F15EAE0();
    v24(v23, v13);
    v4 = v28;
LABEL_9:
    v25 = (uint64_t)v4;
    goto LABEL_10;
  }
  v14 = *(_BYTE *)(v10 + 32);
  sub_23F15EBF8(1, v12, v10, v10 + 32, v11, (2 * v12) | 1);
  v16 = v15;
  v18 = v17;
  sub_23F15EB24();
  if (v16 != v18 >> 1)
  {
    v13 = v8;
    goto LABEL_8;
  }
  if ((v14 & 1) != 0)
  {
    sub_23F15EC40();
    sub_23F26863C();
    v19 = v31;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v29);
    sub_23F15E96C();
    sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  else
  {
    sub_23F15A86C();
    sub_23F26863C();
    v19 = v31;
    v26 = sub_23F15ECE4();
    v27(v26, v30);
    sub_23F15E96C();
    sub_23F15E7D4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  *v19 = v14;
  v25 = (uint64_t)v28;
LABEL_10:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v25);
  sub_23F1313FC();
}

void sub_23F156F30()
{
  ResponseManifest.ResponseDialogPresentationHint.init(from:)();
}

void sub_23F156F44()
{
  ResponseManifest.ResponseDialogPresentationHint.encode(to:)();
}

__n128 ResponseManifest.init(parameters:dialog:visual:templateId:templateLocation:useTemplateAsFallback:dialogPresentationHint:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v3;
  __int128 v4;
  __n128 *v5;
  __n128 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v3 = a2[1];
  *(_OWORD *)(a3 + 8) = *a2;
  *(_OWORD *)(a3 + 24) = v3;
  v4 = a2[3];
  *(_OWORD *)(a3 + 40) = a2[2];
  *(_QWORD *)a3 = a1;
  *(_OWORD *)(a3 + 56) = v4;
  sub_23F15EA64(a3);
  result = *v5;
  *(__n128 *)(v7 + 136) = *v5;
  *(_QWORD *)(v7 + 152) = v8;
  *(_QWORD *)(v7 + 160) = v9;
  *(_QWORD *)(v7 + 168) = v10;
  *(_QWORD *)(v7 + 176) = v11;
  *(_BYTE *)(v7 + 184) = v12;
  *(_BYTE *)(v7 + 185) = v13;
  return result;
}

void ResponseManifest.init(dialog:visual:)(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD *v5;
  uint64_t v6;

  *(_QWORD *)a2 = 0;
  v2 = a1[1];
  *(_OWORD *)(a2 + 8) = *a1;
  *(_OWORD *)(a2 + 24) = v2;
  v3 = a1[3];
  *(_OWORD *)(a2 + 40) = a1[2];
  *(_OWORD *)(a2 + 56) = v3;
  *(double *)&v4 = sub_23F15EA64(a2);
  *(_OWORD *)(v6 + 136) = *v5;
  *(_OWORD *)(v6 + 152) = v4;
  *(_OWORD *)(v6 + 168) = v4;
  *(_WORD *)(v6 + 184) = 514;
}

void ResponseManifest.parameters.setter()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F15ECF0();
  *v1 = v0;
  sub_23F126078();
}

uint64_t (*ResponseManifest.parameters.modify())()
{
  return nullsub_1;
}

uint64_t ResponseManifest.dialog.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_23F15E680(v1[1], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1);
}

__n128 ResponseManifest.dialog.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  sub_23F15E8CC(a1);
  sub_23F12F0C4(*(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16));
  *(_OWORD *)(v2 + 8) = v7;
  *(_OWORD *)(v2 + 24) = v6;
  *(_OWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v2 + 56) = v1;
  *(_QWORD *)(v2 + 64) = v3;
  sub_23F15EA9C();
  return result;
}

uint64_t (*ResponseManifest.dialog.modify())()
{
  return nullsub_1;
}

uint64_t ResponseManifest.fallbackDialog.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_23F15E680(v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], a1);
}

__n128 ResponseManifest.fallbackDialog.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  sub_23F15E8CC(a1);
  sub_23F12F0C4(*(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
  *(_OWORD *)(v2 + 72) = v7;
  *(_OWORD *)(v2 + 88) = v6;
  *(_OWORD *)(v2 + 104) = v5;
  *(_QWORD *)(v2 + 120) = v1;
  *(_QWORD *)(v2 + 128) = v3;
  sub_23F15EA9C();
  return result;
}

uint64_t (*ResponseManifest.fallbackDialog.modify())()
{
  return nullsub_1;
}

uint64_t ResponseManifest.visual.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 136);
  v3 = *(_QWORD *)(v1 + 144);
  *a1 = v2;
  a1[1] = v3;
  return sub_23F15A8F8(v2);
}

void ResponseManifest.visual.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  sub_23F12F114(*(_QWORD *)(v1 + 136));
  *(_QWORD *)(v1 + 136) = v2;
  *(_QWORD *)(v1 + 144) = v3;
  sub_23F12612C();
}

uint64_t (*ResponseManifest.visual.modify())()
{
  return nullsub_1;
}

void ResponseManifest.templateId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ResponseManifest.templateId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15E844();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 152) = v2;
  *(_QWORD *)(v1 + 160) = v0;
  sub_23F12612C();
}

uint64_t (*ResponseManifest.templateId.modify())()
{
  return nullsub_1;
}

void ResponseManifest.templateLocation.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ResponseManifest.templateLocation.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F15E844();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 168) = v2;
  *(_QWORD *)(v1 + 176) = v0;
  sub_23F12612C();
}

uint64_t (*ResponseManifest.templateLocation.modify())()
{
  return nullsub_1;
}

uint64_t ResponseManifest.useTemplateAsFallback.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 184);
}

uint64_t ResponseManifest.useTemplateAsFallback.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 184) = result;
  return result;
}

uint64_t (*ResponseManifest.useTemplateAsFallback.modify())()
{
  return nullsub_1;
}

void ResponseManifest.dialogPresentationHint.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 185);
}

_BYTE *ResponseManifest.dialogPresentationHint.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 185) = *result;
  return result;
}

uint64_t (*ResponseManifest.dialogPresentationHint.modify())()
{
  return nullsub_1;
}

void ResponseManifest.init()(_WORD *a1@<X8>)
{
  sub_23F15EBE8(a1);
  a1[92] = 514;
  sub_23F126078();
}

void ResponseManifest.encode(to:configuration:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v9;
  char v11;
  char v13;
  char v15;
  char v17;
  char v19;
  uint64_t v21;
  uint64_t v22;

  sub_23F131874();
  v2 = v1;
  v4 = v3;
  v22 = sub_23F1217E8(&qword_256DFF5E8);
  v21 = *(_QWORD *)(v22 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1319C8();
  v6 = *v2;
  sub_23F15EDA4();
  sub_23F12545C(v4, v4[3]);
  sub_23F15ED60();
  sub_23F15EBF0();
  if (*(_QWORD *)(v6 + 16))
  {
    sub_23F15E4B8();
    sub_23F15EBAC();
    sub_23F2681A4();
    v7 = sub_23F15E6AC() & ~(-1 << *(_BYTE *)(v6 + 32));
    if (((*(_QWORD *)(v6 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    {
      sub_23F15E590();
      __asm { BR              X9 }
    }
    if (*(_QWORD *)(v6 + 16))
    {
      sub_23F15E4B8();
      sub_23F2681A4();
      sub_23F15E6AC();
      sub_23F15E3F8();
      if ((v9 & 1) != 0)
      {
        sub_23F15E608();
        sub_23F15E484();
        __asm { BR              X9 }
      }
      if (*(_QWORD *)(v6 + 16))
      {
        sub_23F15E4B8();
        sub_23F2681A4();
        sub_23F15E6AC();
        sub_23F15E3F8();
        if ((v11 & 1) != 0)
        {
          sub_23F15E590();
          __asm { BR              X9 }
        }
        if (*(_QWORD *)(v6 + 16))
        {
          sub_23F15E4B8();
          sub_23F15EBC8();
          sub_23F2681A4();
          sub_23F15E6AC();
          sub_23F15E3F8();
          if ((v13 & 1) != 0)
          {
            sub_23F15E608();
            sub_23F15E484();
            __asm { BR              X9 }
          }
          if (*(_QWORD *)(v6 + 16))
          {
            sub_23F15E4B8();
            sub_23F2681A4();
            sub_23F15E6AC();
            sub_23F15E3F8();
            if ((v15 & 1) != 0)
            {
              sub_23F15E608();
              sub_23F15E484();
              __asm { BR              X9 }
            }
            if (*(_QWORD *)(v6 + 16))
            {
              sub_23F15E4B8();
              sub_23F15EAAC();
              sub_23F15EBDC();
              sub_23F15E6AC();
              sub_23F15E620();
              if ((v17 & 1) != 0)
              {
                sub_23F15EA34();
                sub_23F15E484();
                __asm { BR              X9 }
              }
              if (*(_QWORD *)(v6 + 16))
              {
                sub_23F15E4B8();
                sub_23F15EAAC();
                sub_23F15EBDC();
                sub_23F15E6AC();
                sub_23F15E620();
                if ((v19 & 1) != 0)
                {
                  sub_23F15EA34();
                  sub_23F15E484();
                  __asm { BR              X9 }
                }
              }
            }
          }
        }
      }
    }
  }
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v0, v22);
  sub_23F15EAFC();
  sub_23F1313FC();
}

void static ResponseManifest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  sub_23F125F3C();
  v66 = *(_QWORD *)(v0 + 8);
  v67 = *(_QWORD *)(v0 + 16);
  v65 = *(_QWORD *)(v0 + 24);
  v69 = *(_QWORD *)(v0 + 48);
  v70 = *(_QWORD *)(v0 + 40);
  v72 = *(_QWORD *)(v0 + 56);
  v73 = *(_QWORD *)(v0 + 32);
  v68 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)v1;
  v71 = *(_QWORD *)(v1 + 16);
  v58 = *(_QWORD *)(v1 + 8);
  v59 = *(_QWORD *)(v1 + 24);
  v62 = *(_QWORD *)(v1 + 40);
  v64 = *(_QWORD *)(v1 + 48);
  v60 = *(_QWORD *)(v1 + 32);
  v61 = *(_QWORD *)(v1 + 56);
  v63 = *(_QWORD *)(v1 + 64);
  v57 = *(_QWORD *)(v1 + 80);
  v52 = *(_QWORD *)(v1 + 72);
  v53 = *(_QWORD *)(v1 + 88);
  v54 = *(_QWORD *)(v1 + 96);
  v55 = *(_QWORD *)(v1 + 104);
  v10 = *(_QWORD *)(v1 + 120);
  v56 = *(_QWORD *)(v1 + 112);
  if (*(_QWORD *)v0)
  {
    if (!v9)
      goto LABEL_26;
    v50 = *(_QWORD *)(v0 + 144);
    v51 = *(_QWORD *)(v0 + 72);
    v48 = *(_QWORD *)(v0 + 136);
    v49 = *(_QWORD *)(v1 + 128);
    v46 = *(_QWORD *)(v1 + 144);
    v47 = *(_QWORD *)(v1 + 136);
    v39 = *(_QWORD *)(v1 + 152);
    v40 = *(_QWORD *)(v0 + 152);
    v42 = *(_QWORD *)(v0 + 176);
    v43 = *(_QWORD *)(v1 + 160);
    v45 = *(_QWORD *)(v0 + 160);
    v37 = *(_QWORD *)(v1 + 168);
    v38 = *(_QWORD *)(v0 + 168);
    v41 = *(_QWORD *)(v1 + 176);
    HIDWORD(v35) = *(unsigned __int8 *)(v1 + 185);
    LODWORD(v36) = *(unsigned __int8 *)(v1 + 184);
    HIDWORD(v36) = *(unsigned __int8 *)(v0 + 184);
    HIDWORD(v44) = *(unsigned __int8 *)(v0 + 185);
    swift_bridgeObjectRetain();
    v11 = swift_bridgeObjectRetain();
    v12 = sub_23F12A308(v11, v9);
    sub_23F13186C();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      goto LABEL_26;
  }
  else
  {
    v50 = *(_QWORD *)(v0 + 144);
    v51 = *(_QWORD *)(v0 + 72);
    v48 = *(_QWORD *)(v0 + 136);
    v49 = *(_QWORD *)(v1 + 128);
    v46 = *(_QWORD *)(v1 + 144);
    v47 = *(_QWORD *)(v1 + 136);
    v39 = *(_QWORD *)(v1 + 152);
    v40 = *(_QWORD *)(v0 + 152);
    v42 = *(_QWORD *)(v0 + 176);
    v43 = *(_QWORD *)(v1 + 160);
    v45 = *(_QWORD *)(v0 + 160);
    v37 = *(_QWORD *)(v1 + 168);
    v38 = *(_QWORD *)(v0 + 168);
    v41 = *(_QWORD *)(v1 + 176);
    HIDWORD(v35) = *(unsigned __int8 *)(v1 + 185);
    LODWORD(v36) = *(unsigned __int8 *)(v1 + 184);
    HIDWORD(v36) = *(unsigned __int8 *)(v0 + 184);
    HIDWORD(v44) = *(unsigned __int8 *)(v0 + 185);
    if (v9)
      goto LABEL_26;
  }
  if (!v67)
  {
    v14 = v65;
    v13 = v66;
    v16 = v72;
    v15 = v73;
    v17 = v71;
    if (!v71)
      goto LABEL_11;
LABEL_16:
    v82 = v13;
    v83 = v67;
    v84 = v14;
    v85 = v15;
    v86 = v70;
    v87 = v69;
    v88 = v16;
    v89 = v68;
    v19 = v58;
    v90 = v58;
    v91 = v17;
    v92 = v59;
    v93 = v60;
    v94 = v62;
    v95 = v64;
    v96 = v61;
    v97 = v63;
LABEL_25:
    sub_23F15A8A8(v19, v17);
    sub_23F15AAC4(&v82);
    goto LABEL_26;
  }
  v14 = v65;
  v13 = v66;
  v82 = v66;
  v83 = v67;
  v84 = v65;
  v85 = v73;
  v86 = v70;
  v87 = v69;
  v88 = v72;
  v89 = v68;
  if (!v71)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23F1315C4();
    sub_23F131798();
    v17 = 0;
    v16 = v72;
    v15 = v73;
    goto LABEL_16;
  }
  v74 = v58;
  v75 = v71;
  v76 = v59;
  v77 = v60;
  v78 = v62;
  v79 = v64;
  v80 = v61;
  v81 = v63;
  if ((static ResponseDialog.== infix(_:_:)(&v82, &v74) & 1) == 0)
    goto LABEL_26;
LABEL_11:
  if (!v3)
  {
    v18 = v50;
    v17 = v57;
    if (!v57)
      goto LABEL_18;
    goto LABEL_24;
  }
  v18 = v50;
  v82 = v51;
  v83 = v3;
  v84 = v2;
  v85 = v4;
  v86 = v5;
  v87 = v7;
  v88 = v6;
  v89 = v8;
  if (!v57)
  {
    swift_bridgeObjectRetain();
    sub_23F131798();
    sub_23F126140();
    swift_bridgeObjectRetain();
    v17 = 0;
LABEL_24:
    v19 = v52;
    v82 = v51;
    v83 = v3;
    v84 = v2;
    v85 = v4;
    v86 = v5;
    v87 = v7;
    v88 = v6;
    v89 = v8;
    v90 = v52;
    v91 = v17;
    v92 = v53;
    v93 = v54;
    v94 = v55;
    v95 = v56;
    v96 = v10;
    v97 = v49;
    goto LABEL_25;
  }
  v74 = v52;
  v75 = v57;
  v76 = v53;
  v77 = v54;
  v78 = v55;
  v79 = v56;
  v80 = v10;
  v81 = v49;
  if ((static ResponseDialog.== infix(_:_:)(&v82, &v74) & 1) == 0)
    goto LABEL_26;
LABEL_18:
  if (!v48)
  {
    v20 = v47;
    if (!v47)
      goto LABEL_28;
    goto LABEL_37;
  }
  v20 = v47;
  if (!v47)
  {
    swift_bridgeObjectRetain();
    sub_23F1263B8();
LABEL_37:
    sub_23F15A8F8(v20);
    sub_23F12F114(v48);
    v32 = v20;
LABEL_39:
    sub_23F12F114(v32);
    goto LABEL_26;
  }
  sub_23F15ECB0();
  sub_23F15ECB0();
  sub_23F15A8F8(v47);
  sub_23F12A154(v48, v47, v21, v22, v23, v24, v25, v26, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45);
  if ((v27 & 1) == 0)
  {
    sub_23F15ED78();
    sub_23F1318B8();
    sub_23F131A30();
    v32 = v48;
    goto LABEL_39;
  }
  sub_23F12A264(v18, v46);
  v29 = v28;
  sub_23F15ED78();
  sub_23F1317F8();
  sub_23F131A30();
  sub_23F12F114(v48);
  if ((v29 & 1) == 0)
    goto LABEL_26;
LABEL_28:
  if (v45)
  {
    if (!v43)
      goto LABEL_26;
    if (v40 != v39 || v45 != v43)
    {
      sub_23F126148();
      sub_23F15E5CC();
      if ((v31 & 1) == 0)
        goto LABEL_26;
    }
  }
  else if (v43)
  {
    goto LABEL_26;
  }
  if (v42 && v41 && (v38 != v37 || v42 != v41))
  {
    sub_23F126148();
    sub_23F15E5CC();
  }
LABEL_26:
  sub_23F125EFC();
}

void ResponseManifest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256DFF5E8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1319C8();
  sub_23F12545C(v4, v4[3]);
  sub_23F15ED60();
  sub_23F2688A0();
  sub_23F1217E8(&qword_256DFF668);
  sub_23F15AA64();
  sub_23F15E5FC();
  if (!v0)
  {
    sub_23F15EC34();
    sub_23F15AA28();
    sub_23F15E570();
    sub_23F15A9EC();
    sub_23F15E570();
    sub_23F15E4D8();
    sub_23F15E4D8();
    sub_23F15E974();
    sub_23F15A960();
    sub_23F15E570();
  }
  sub_23F15E694(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F15E830();
  sub_23F1313FC();
}

void ResponseManifest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[186];
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;

  sub_23F131874();
  v14 = v13;
  v16 = v15;
  sub_23F1217E8(&qword_256DFF678);
  sub_23F126210();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F1319B0();
  v18 = v14[3];
  sub_23F12545C(v14, v18);
  sub_23F15ED60();
  sub_23F268888();
  if (v10)
  {
    sub_23F15E928();
    sub_23F15ECC4();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v14);
    v51 = 0;
    v52 = v40;
    v53 = v46;
    v54 = a10;
    v55 = v44;
    v56 = v18;
    v57 = 0;
    v58 = v12;
    v60 = 0u;
    v61 = 0u;
    v62 = 0u;
    v63 = 0u;
    v59 = v42;
    v64 = v35;
    v65 = v38;
    v66 = v10;
    v67 = v34;
    v68 = (uint64_t)v16;
    v69 = v36;
    v70 = 2;
    v26 = 2;
  }
  else
  {
    sub_23F12636C();
    sub_23F15E778((uint64_t)&unk_256DFF680);
    sub_23F268678();
    sub_23F15AC84();
    swift_bridgeObjectRetain();
    sub_23F15EC74();
    sub_23F268678();
    v32 = v51;
    v19 = v55;
    v48[0] = 2;
    v47 = v52;
    v72 = v53;
    v43 = v58;
    v45 = v54;
    v33 = v56;
    v31 = v57;
    sub_23F15A8A8(v51, v52);
    sub_23F15ACC0();
    sub_23F15E88C();
    v41 = v51;
    v20 = v51;
    v21 = sub_23F15EB40();
    sub_23F15A8F8(v21);
    sub_23F15EAD0();
    v22 = sub_23F268654();
    v39 = v52;
    v24 = v23;
    v30 = v22;
    sub_23F130928();
    sub_23F15EAD0();
    v29 = sub_23F268654();
    LOBYTE(v51) = 5;
    v37 = v25;
    swift_bridgeObjectRetain();
    sub_23F15EAD0();
    v28 = sub_23F268660();
    v49 = 6;
    sub_23F15ACFC();
    sub_23F15E88C();
    sub_23F15E3E0(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    v27 = v50;
    *(_QWORD *)v48 = v32;
    *(_QWORD *)&v48[8] = v41;
    *(_QWORD *)&v48[16] = v47;
    *(_QWORD *)&v48[24] = v72;
    *(_QWORD *)&v48[32] = v45;
    *(_QWORD *)&v48[40] = v19;
    *(_QWORD *)&v48[48] = v33;
    *(_QWORD *)&v48[56] = v31;
    *(_QWORD *)&v48[64] = v43;
    memset(&v48[72], 0, 64);
    *(_QWORD *)&v48[136] = v20;
    *(_QWORD *)&v48[144] = v39;
    *(_QWORD *)&v48[152] = v30;
    *(_QWORD *)&v48[160] = v24;
    *(_QWORD *)&v48[168] = v29;
    *(_QWORD *)&v48[176] = v37;
    v48[184] = v28;
    v48[185] = v50;
    sub_23F15AD38(v48);
    swift_bridgeObjectRelease();
    sub_23F1262C0();
    sub_23F12F114(v20);
    sub_23F12F0C4(v41, v47);
    swift_bridgeObjectRelease();
    memcpy(v16, v48, 0xBAuLL);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v14);
    v51 = v32;
    v52 = v41;
    v53 = v47;
    v54 = v72;
    v55 = v45;
    v56 = v19;
    v57 = v33;
    v58 = v31;
    sub_23F15EA64((uint64_t)&v51);
    v59 = v43;
    v64 = v20;
    v65 = v39;
    v66 = v30;
    v67 = v24;
    v68 = v29;
    v69 = v37;
    v70 = v28;
    v26 = v27;
  }
  v71 = v26;
  sub_23F15AB50(&v51);
  sub_23F1313FC();
}

void sub_23F158A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ResponseManifest.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F158A98()
{
  ResponseManifest.encode(to:)();
}

void sub_23F158AB0()
{
  ResponseManifest.encode(to:configuration:)();
}

void ResponseManifest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  char v68;
  char v69;
  __int128 v70;
  _QWORD v71[21];
  __int16 v72;

  sub_23F125F3C();
  v3 = v2;
  v5 = v4;
  v6 = sub_23F15EDB0();
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F1316E4();
  if (!v3)
    goto LABEL_16;
  objc_opt_self();
  v8 = sub_23F15ED84();
  if (!v8)
  {
    objc_opt_self();
    v31 = sub_23F15ED84();
    if (v31)
    {
      v32 = (void *)v31;
      v33 = v3;
      v34 = sub_23F15ED68((uint64_t)v33, (SEL *)&selRef_options);
      v35 = 0xF000000000000000;
      if (v36)
      {
        sub_23F268174();
        v37 = v33;
        v38 = sub_23F268168();
        v40 = v39;
        swift_bridgeObjectRelease();
        v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v6);
        if (v40 >> 60 == 15)
          v41 = 0;
        else
          v41 = v38;
        v33 = v37;
        v35 = 0xF000000000000000;
        if (v40 >> 60 != 15)
          v35 = v40;
      }
      else
      {
        v41 = 0;
      }
      v43 = sub_23F15ED70(v34, sel_nlgParams);
      sub_23F15AE30(0, &qword_256DFF6A8);
      v44 = sub_23F26827C();

      v45 = v33;
      v16 = sub_23F1509CC(v44, v32);
      sub_23F14C66C();
      v46 = swift_bridgeObjectRelease();
      v47 = sub_23F15ED70(v46, sel_fallbackDialog);
      if (v47)
      {
        sub_23F15940C(v47, (uint64_t *)&v70);

        sub_23F159FD0(v41, v35);
        v53 = *(_OWORD *)v71;
        v54 = v70;
        v51 = *(_OWORD *)&v71[4];
        v52 = *(_OWORD *)&v71[2];
        sub_23F12F0C4(0, 0);
        v26 = v51;
        v25 = v52;
        v28 = v53;
        v27 = v54;
        v18 = 0;
        v17 = 0;
        v29 = 0uLL;
        v19 = 2;
        v20 = 2;
        v30 = 0uLL;
        v23 = 0uLL;
LABEL_22:
        v24 = 0uLL;
        v21 = 0uLL;
        v22 = 0uLL;
        goto LABEL_23;
      }

      sub_23F159FD0(v41, v35);
      v18 = 0;
      v17 = 0;
      v29 = 0uLL;
      v30 = 0uLL;
      v23 = 0uLL;
      v19 = 2;
      v27 = 0uLL;
LABEL_21:
      v20 = 2;
      v28 = 0uLL;
      v25 = 0uLL;
      v26 = 0uLL;
      goto LABEL_22;
    }
    v42 = v3;
    sub_23F15940C(v42, (uint64_t *)&v70);
    v18 = *((_QWORD *)&v70 + 1);
    if (*((_QWORD *)&v70 + 1))
    {
      v48 = *(_OWORD *)&v71[4];
      v49 = *(_OWORD *)&v71[2];
      v50 = *(_OWORD *)v71;
      v17 = v70;

      v23 = v48;
      v30 = v49;
      v29 = v50;
      v16 = 0;
      v27 = 0uLL;
      v19 = 2;
      goto LABEL_21;
    }
LABEL_16:
    ResponseManifest.init(from:)();

    v17 = *((_QWORD *)&v70 + 1);
    v16 = (char *)v70;
    v18 = v71[0];
    v29 = *(_OWORD *)&v71[1];
    v30 = *(_OWORD *)&v71[3];
    v23 = *(_OWORD *)&v71[5];
    v27 = *(_OWORD *)&v71[7];
    v28 = *(_OWORD *)&v71[9];
    v25 = *(_OWORD *)&v71[11];
    v26 = *(_OWORD *)&v71[13];
    v24 = *(_OWORD *)&v71[15];
    v21 = *(_OWORD *)&v71[17];
    v22 = *(_OWORD *)&v71[19];
    v19 = v72;
    v20 = HIBYTE(v72);
    goto LABEL_23;
  }
  v9 = (void *)v8;
  v10 = v3;
  v11 = objc_msgSend(v9, sel_parameters);
  sub_23F15AE30(0, &qword_256DFF6B0);
  v12 = sub_23F2680FC();

  sub_23F121954(0xD000000000000010, 0x800000023F293700, v12);
  v14 = v13;
  sub_23F1318DC();
  if (v14)
  {
    v15 = objc_msgSend(v14, sel_value);

    sub_23F26848C();
    swift_unknownObjectRelease();
    swift_dynamicCast();
  }
  ResponseManifest.init(from:)();

  v16 = v55;
  v17 = v56;
  v18 = v57;
  v19 = v68;
  v20 = v69;
  sub_23F15EBE8(&v70);
  v72 = 514;
  sub_23F15AB50(&v70);
  v22 = v67;
  v21 = v66;
  v24 = v65;
  v23 = v60;
  v26 = v64;
  v25 = v63;
  v28 = v62;
  v27 = v61;
  v30 = v59;
  v29 = v58;
LABEL_23:
  *(_QWORD *)v5 = v16;
  *(_QWORD *)(v5 + 8) = v17;
  *(_QWORD *)(v5 + 16) = v18;
  *(_OWORD *)(v5 + 24) = v29;
  *(_OWORD *)(v5 + 40) = v30;
  *(_OWORD *)(v5 + 56) = v23;
  *(_OWORD *)(v5 + 72) = v27;
  *(_OWORD *)(v5 + 88) = v28;
  *(_OWORD *)(v5 + 104) = v25;
  *(_OWORD *)(v5 + 120) = v26;
  *(_OWORD *)(v5 + 136) = v24;
  *(_OWORD *)(v5 + 152) = v21;
  *(_OWORD *)(v5 + 168) = v22;
  *(_BYTE *)(v5 + 184) = v19;
  *(_BYTE *)(v5 + 185) = v20;
  sub_23F125EFC();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  _QWORD v30[23];
  __int16 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  char v45;

  sub_23F125F3C();
  v3 = v2;
  v29 = sub_23F15EB84();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F15EB5C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23F15EDB0();
  sub_23F126210();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15E50C();
  sub_23F268174();
  v8 = sub_23F268168();
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v6);
  if (v10 >> 60 == 15)
  {
    sub_23F267E20();
    sub_23F126364();
    v11 = sub_23F267FD0();
    v12 = sub_23F26839C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)sub_23F15099C();
      *(_QWORD *)&v32 = sub_23F15099C();
      *(_DWORD *)v13 = 136315138;
      sub_23F126364();
      v30[0] = sub_23F15EA7C();
      sub_23F268468();
      sub_23F15EC90();
      sub_23F15EC00(&dword_23F11F000, v11, v12, "Unable to create response generation manifest from JSON: %s", v13);
      sub_23F15E884();
      sub_23F14EFB4();
    }

    sub_23F15EA54();
    v14 = sub_23F15EAE0();
    v28(v14, v29);
    v26 = 0;
    v15 = 0uLL;
    v16 = 0uLL;
    v27 = 2;
    v17 = 0uLL;
    v18 = 0uLL;
    v19 = 0uLL;
    v20 = 0uLL;
    v21 = 0uLL;
    v22 = 0uLL;
    v23 = 0uLL;
    v24 = 0uLL;
    v25 = 0uLL;
  }
  else
  {
    sub_23F267C4C();
    sub_23F150918();
    sub_23F267C40();
    sub_23F15AE64();
    sub_23F267C34();
    sub_23F15EBE8(v30);
    v31 = 514;
    sub_23F15AB50(v30);
    sub_23F131B08();
    swift_bridgeObjectRelease();
    sub_23F15ED44(v8);
    v15 = v32;
    v16 = v33;
    v17 = v34;
    v18 = v35;
    v19 = v36;
    v20 = v37;
    v21 = v38;
    v22 = v39;
    v23 = v40;
    v24 = v41;
    v25 = v42;
    v26 = v43;
    v27 = v44;
    LOBYTE(v11) = v45;
  }
  *(_OWORD *)v3 = v15;
  *(_OWORD *)(v3 + 16) = v16;
  *(_OWORD *)(v3 + 32) = v17;
  *(_OWORD *)(v3 + 48) = v18;
  *(_OWORD *)(v3 + 64) = v19;
  *(_OWORD *)(v3 + 80) = v20;
  *(_OWORD *)(v3 + 96) = v21;
  *(_OWORD *)(v3 + 112) = v22;
  *(_OWORD *)(v3 + 128) = v23;
  *(_OWORD *)(v3 + 144) = v24;
  *(_OWORD *)(v3 + 160) = v25;
  *(_QWORD *)(v3 + 176) = v26;
  *(_BYTE *)(v3 + 184) = v27;
  *(_BYTE *)(v3 + 185) = (_BYTE)v11;
  sub_23F125EFC();
}

double sub_23F15940C@<D0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;

  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = a1;
    v7 = objc_msgSend(v5, sel_localeIdentifier);
    v8 = v7;
    v9 = v7;
    if (!v7)
    {
      sub_23F26815C();
      v9 = (void *)sub_23F268144();
      swift_bridgeObjectRelease();
      sub_23F26815C();
      v8 = (void *)sub_23F268144();
      swift_bridgeObjectRelease();
    }
    v10 = v7;
    v11 = objc_msgSend(v5, sel_fullString);
    v12 = objc_msgSend(v11, sel_localizedStringForLocaleIdentifier_, v9);

    v13 = sub_23F26815C();
    v15 = v14;

    v16 = objc_msgSend(v5, sel_supportingString);
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, sel_localizedStringForLocaleIdentifier_, v8);

      v19 = sub_23F26815C();
      v21 = v20;

      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();

      *a2 = v13;
      a2[1] = v15;
      a2[2] = v13;
      a2[3] = v15;
      a2[4] = v19;
      a2[5] = v21;
      a2[6] = v19;
      a2[7] = v21;
    }
    else
    {

      swift_bridgeObjectRetain();
      *a2 = v13;
      a2[1] = v15;
      a2[2] = v13;
      a2[3] = v15;
      result = 0.0;
      *((_OWORD *)a2 + 2) = 0u;
      *((_OWORD *)a2 + 3) = 0u;
    }
  }
  else
  {

    result = 0.0;
    *((_OWORD *)a2 + 2) = 0u;
    *((_OWORD *)a2 + 3) = 0u;
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
  }
  return result;
}

uint64_t ResponseManifest.init(stringValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = a1;
  *(_QWORD *)(a3 + 16) = a2;
  *(_QWORD *)(a3 + 24) = a1;
  *(_QWORD *)(a3 + 32) = a2;
  bzero((void *)(a3 + 40), 0x90uLL);
  *(_WORD *)(a3 + 184) = 514;
  return swift_bridgeObjectRetain();
}

uint64_t ResponseManifest.ResponseDialogPresentationHint.suppressed.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void ConfirmationView.ControlMetadata.init(from:)()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F125F3C();
  v2 = v1;
  v4 = v3;
  v9 = v5;
  sub_23F15EB84();
  sub_23F126048();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F15E50C();
  v7 = sub_23F15E83C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15E524();
  sub_23F267C4C();
  sub_23F150918();
  sub_23F267C40();
  sub_23F12E488((uint64_t)&unk_256DFF410);
  sub_23F267C34();
  sub_23F1311B4(v4, v2);
  sub_23F15EC88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v9, v0, v7);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v9, 0, 1, v7);
  sub_23F125EFC();
}

uint64_t sub_23F15986C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_23F159938(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23F15E34C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23F15E34C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_23F131798();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_23F159938(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_23F159A8C((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_23F268474();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_23F159B50(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_23F2685A0();
    if (!v8)
    {
      result = sub_23F2685DC();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_23F159A8C(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_23F268624();
  __break(1u);
  return result;
}

uint64_t sub_23F159B50(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23F159BE4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_23F159DB8(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_23F159DB8((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23F159BE4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_23F2681E0();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  v3 = sub_23F159D54(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_23F268528();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return (uint64_t)v4;
  }
  sub_23F268624();
  __break(1u);
LABEL_14:
  result = sub_23F2685DC();
  __break(1u);
  return result;
}

_QWORD *sub_23F159D54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23F1217E8(&qword_254344658);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_23F159DB8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F1217E8(&qword_254344658);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23F159F50(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F159E8C(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_23F159E8C(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_23F268624();
  __break(1u);
  return result;
}

char *sub_23F159F50(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_23F268624();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_23F159FD0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23F1311B4(a1, a2);
  return a1;
}

uint64_t sub_23F159FE4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23F131170(a1, a2);
  return a1;
}

unint64_t sub_23F159FF8()
{
  unint64_t result;

  result = qword_256DFF378;
  if (!qword_256DFF378)
  {
    result = MEMORY[0x242667160](&unk_23F26C828, &type metadata for ResponseParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF378);
  }
  return result;
}

unint64_t sub_23F15A034()
{
  unint64_t result;

  result = qword_256DFF390;
  if (!qword_256DFF390)
  {
    result = MEMORY[0x242667160](&unk_23F26C7D8, &type metadata for ResponseDialog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF390);
  }
  return result;
}

unint64_t sub_23F15A070()
{
  unint64_t result;

  result = qword_256DFF3A8;
  if (!qword_256DFF3A8)
  {
    result = MEMORY[0x242667160](&unk_23F26C788, &type metadata for ResponseVisual.UIType.ArchivedViewPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF3A8);
  }
  return result;
}

unint64_t sub_23F15A0AC()
{
  unint64_t result;

  result = qword_256DFF3C0;
  if (!qword_256DFF3C0)
  {
    result = MEMORY[0x242667160](&unk_23F26C738, &type metadata for ResponseVisual.UIType.LiveActivityPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF3C0);
  }
  return result;
}

unint64_t sub_23F15A0E8()
{
  unint64_t result;

  result = qword_256DFF3D8;
  if (!qword_256DFF3D8)
  {
    result = MEMORY[0x242667160](&unk_23F26C6E8, &type metadata for ResponseVisual.UIType.PluginSnippetPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF3D8);
  }
  return result;
}

unint64_t sub_23F15A124()
{
  unint64_t result;

  result = qword_256DFF400;
  if (!qword_256DFF400)
  {
    result = MEMORY[0x242667160](&unk_23F26C698, &type metadata for ResponseVisual.UIType.ControlPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF400);
  }
  return result;
}

uint64_t type metadata accessor for ResponseVisual.UIType.ControlPayload(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256DFF7F0);
}

uint64_t type metadata accessor for ResponseVisual.UIType(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256DFF760);
}

uint64_t sub_23F15A188(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ResponseVisual.UIType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F15A1CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F1217E8(&qword_256DFF418);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23F15A20C()
{
  unint64_t result;

  result = qword_256DFF448;
  if (!qword_256DFF448)
  {
    result = MEMORY[0x242667160](&unk_23F26C648, &type metadata for ResponseVisual.UIType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF448);
  }
  return result;
}

unint64_t sub_23F15A248()
{
  unint64_t result;

  result = qword_256DFF450;
  if (!qword_256DFF450)
  {
    result = MEMORY[0x242667160](&unk_23F26C5F8, &type metadata for ResponseVisual.UIType.PluginSnippetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF450);
  }
  return result;
}

unint64_t sub_23F15A284()
{
  unint64_t result;

  result = qword_256DFF458;
  if (!qword_256DFF458)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseVisual.UIType.PluginSnippetPayload, &type metadata for ResponseVisual.UIType.PluginSnippetPayload);
    atomic_store(result, (unint64_t *)&qword_256DFF458);
  }
  return result;
}

unint64_t sub_23F15A2C0()
{
  unint64_t result;

  result = qword_256DFF460;
  if (!qword_256DFF460)
  {
    result = MEMORY[0x242667160](&unk_23F26C5A8, &type metadata for ResponseVisual.UIType.ControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF460);
  }
  return result;
}

unint64_t sub_23F15A2FC()
{
  unint64_t result;

  result = qword_256DFF470;
  if (!qword_256DFF470)
  {
    result = MEMORY[0x242667160](&unk_23F26C558, &type metadata for ResponseVisual.UIType.LiveActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF470);
  }
  return result;
}

unint64_t sub_23F15A338()
{
  unint64_t result;

  result = qword_256DFF478;
  if (!qword_256DFF478)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseVisual.UIType.LiveActivityPayload, &type metadata for ResponseVisual.UIType.LiveActivityPayload);
    atomic_store(result, (unint64_t *)&qword_256DFF478);
  }
  return result;
}

unint64_t sub_23F15A374()
{
  unint64_t result;

  result = qword_256DFF480;
  if (!qword_256DFF480)
  {
    result = MEMORY[0x242667160](&unk_23F26C508, &type metadata for ResponseVisual.UIType.ArchivedViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF480);
  }
  return result;
}

unint64_t sub_23F15A3B0()
{
  unint64_t result;

  result = qword_256DFF488;
  if (!qword_256DFF488)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseVisual.UIType.ArchivedViewPayload, &type metadata for ResponseVisual.UIType.ArchivedViewPayload);
    atomic_store(result, (unint64_t *)&qword_256DFF488);
  }
  return result;
}

uint64_t sub_23F15A3EC(void *a1, SEL *a2)
{
  id v2;
  void *v3;

  v2 = objc_msgSend(a1, *a2);
  if (v2)
  {
    v3 = v2;
    sub_23F26815C();

  }
  return sub_23F1317E0();
}

unint64_t sub_23F15A444()
{
  unint64_t result;

  result = qword_256DFF4C0;
  if (!qword_256DFF4C0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseVisual.UIType.PluginSnippetPayload, &type metadata for ResponseVisual.UIType.PluginSnippetPayload);
    atomic_store(result, (unint64_t *)&qword_256DFF4C0);
  }
  return result;
}

void sub_23F15A480(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  void (*v4)(uint64_t);

  a3(0);
  v3 = sub_23F1317E0();
  v4(v3);
  sub_23F126078();
}

unint64_t sub_23F15A4BC()
{
  unint64_t result;

  result = qword_256DFF4D0;
  if (!qword_256DFF4D0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseVisual.UIType.LiveActivityPayload, &type metadata for ResponseVisual.UIType.LiveActivityPayload);
    atomic_store(result, (unint64_t *)&qword_256DFF4D0);
  }
  return result;
}

unint64_t sub_23F15A4F8()
{
  unint64_t result;

  result = qword_256DFF4D8;
  if (!qword_256DFF4D8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseVisual.UIType.ArchivedViewPayload, &type metadata for ResponseVisual.UIType.ArchivedViewPayload);
    atomic_store(result, (unint64_t *)&qword_256DFF4D8);
  }
  return result;
}

unint64_t sub_23F15A534()
{
  unint64_t result;

  result = qword_256DFF4E8;
  if (!qword_256DFF4E8)
  {
    result = MEMORY[0x242667160](&unk_23F26C4B8, &type metadata for ResponseVisual.UILabel.UIConfirmationPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF4E8);
  }
  return result;
}

unint64_t sub_23F15A570()
{
  unint64_t result;

  result = qword_256DFF508;
  if (!qword_256DFF508)
  {
    result = MEMORY[0x242667160](&unk_23F26C468, &type metadata for ResponseVisual.UILabel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF508);
  }
  return result;
}

unint64_t sub_23F15A5AC()
{
  unint64_t result;

  result = qword_256DFF510;
  if (!qword_256DFF510)
  {
    result = MEMORY[0x242667160](&unk_23F26C418, &type metadata for ResponseVisual.UILabel.ConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF510);
  }
  return result;
}

unint64_t sub_23F15A5E8()
{
  unint64_t result;

  result = qword_256DFF518;
  if (!qword_256DFF518)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseVisual.UILabel.UIConfirmationPayload, &type metadata for ResponseVisual.UILabel.UIConfirmationPayload);
    atomic_store(result, (unint64_t *)&qword_256DFF518);
  }
  return result;
}

unint64_t sub_23F15A624()
{
  unint64_t result;

  result = qword_256DFF530;
  if (!qword_256DFF530)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseVisual.UILabel.UIConfirmationPayload, &type metadata for ResponseVisual.UILabel.UIConfirmationPayload);
    atomic_store(result, (unint64_t *)&qword_256DFF530);
  }
  return result;
}

unint64_t sub_23F15A660()
{
  unint64_t result;

  result = qword_256DFF540;
  if (!qword_256DFF540)
  {
    result = MEMORY[0x242667160](&unk_23F26C3C8, &type metadata for ResponseVisual.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF540);
  }
  return result;
}

unint64_t sub_23F15A69C()
{
  unint64_t result;

  result = qword_256DFF570;
  if (!qword_256DFF570)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseVisual.UILabel, &type metadata for ResponseVisual.UILabel);
    atomic_store(result, (unint64_t *)&qword_256DFF570);
  }
  return result;
}

unint64_t sub_23F15A6D8(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_23F131AF0(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = sub_23F125540(&qword_256DFF548);
    sub_23F12E488(v6);
    v9 = v8;
    result = MEMORY[0x242667160](v5, v7, &v9);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_23F15A758(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t *v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;

  result = sub_23F131AF0(a1);
  if (!result)
  {
    v6 = v5;
    v7 = v4;
    v8 = sub_23F125540(v3);
    v9 = v7();
    result = MEMORY[0x242667160](v6, v8, &v9);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_23F15A7B8()
{
  unint64_t result;

  result = qword_256DFF598;
  if (!qword_256DFF598)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseVisual.UILabel, &type metadata for ResponseVisual.UILabel);
    atomic_store(result, (unint64_t *)&qword_256DFF598);
  }
  return result;
}

unint64_t sub_23F15A7F4()
{
  unint64_t result;

  result = qword_256DFF5B8;
  if (!qword_256DFF5B8)
  {
    result = MEMORY[0x242667160](&unk_23F26C378, &type metadata for ResponseManifest.ResponseDialogPresentationHint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF5B8);
  }
  return result;
}

unint64_t sub_23F15A830()
{
  unint64_t result;

  result = qword_256DFF5C0;
  if (!qword_256DFF5C0)
  {
    result = MEMORY[0x242667160](&unk_23F26C328, &type metadata for ResponseManifest.ResponseDialogPresentationHint.SuppressPrintCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF5C0);
  }
  return result;
}

unint64_t sub_23F15A86C()
{
  unint64_t result;

  result = qword_256DFF5C8;
  if (!qword_256DFF5C8)
  {
    result = MEMORY[0x242667160](&unk_23F26C2D8, &type metadata for ResponseManifest.ResponseDialogPresentationHint.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF5C8);
  }
  return result;
}

uint64_t sub_23F15A8A8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23F15A8F8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_23F15A924()
{
  unint64_t result;

  result = qword_256DFF5F0;
  if (!qword_256DFF5F0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseManifest.CodingKeys, &type metadata for ResponseManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF5F0);
  }
  return result;
}

unint64_t sub_23F15A960()
{
  unint64_t result;

  result = qword_256DFF608;
  if (!qword_256DFF608)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseManifest.ResponseDialogPresentationHint, &type metadata for ResponseManifest.ResponseDialogPresentationHint);
    atomic_store(result, (unint64_t *)&qword_256DFF608);
  }
  return result;
}

unint64_t sub_23F15A99C(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_23F131AF0(a1);
  if (!result)
  {
    v5 = v4;
    v6 = sub_23F125540(v3);
    v7 = v5;
    result = MEMORY[0x242667160](MEMORY[0x24BEE4AA8], v6, &v7);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_23F15A9EC()
{
  unint64_t result;

  result = qword_256DFF630;
  if (!qword_256DFF630)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseVisual, &type metadata for ResponseVisual);
    atomic_store(result, (unint64_t *)&qword_256DFF630);
  }
  return result;
}

unint64_t sub_23F15AA28()
{
  unint64_t result;

  result = qword_256DFF648;
  if (!qword_256DFF648)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseDialog, &type metadata for ResponseDialog);
    atomic_store(result, (unint64_t *)&qword_256DFF648);
  }
  return result;
}

unint64_t sub_23F15AA64()
{
  return sub_23F15A758((uint64_t)&unk_256DFF660);
}

unint64_t sub_23F15AA88()
{
  unint64_t result;

  result = qword_256DFF670;
  if (!qword_256DFF670)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseParameter, &type metadata for ResponseParameter);
    atomic_store(result, (unint64_t *)&qword_256DFF670);
  }
  return result;
}

uint64_t *sub_23F15AAC4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[8];
  v3 = a1[9];
  sub_23F12F0C4(*a1, a1[1]);
  sub_23F12F0C4(v2, v3);
  return a1;
}

_QWORD *sub_23F15AB50(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[9];
  v6 = a1[10];
  v7 = a1[17];
  swift_bridgeObjectRelease();
  sub_23F12F0C4(v2, v3);
  sub_23F12F0C4(v4, v6);
  sub_23F12F114(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23F15AC48()
{
  unint64_t result;

  result = qword_256DFF688;
  if (!qword_256DFF688)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseParameter, &type metadata for ResponseParameter);
    atomic_store(result, (unint64_t *)&qword_256DFF688);
  }
  return result;
}

unint64_t sub_23F15AC84()
{
  unint64_t result;

  result = qword_256DFF690;
  if (!qword_256DFF690)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseDialog, &type metadata for ResponseDialog);
    atomic_store(result, (unint64_t *)&qword_256DFF690);
  }
  return result;
}

unint64_t sub_23F15ACC0()
{
  unint64_t result;

  result = qword_256DFF698;
  if (!qword_256DFF698)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseVisual, &type metadata for ResponseVisual);
    atomic_store(result, (unint64_t *)&qword_256DFF698);
  }
  return result;
}

unint64_t sub_23F15ACFC()
{
  unint64_t result;

  result = qword_256DFF6A0;
  if (!qword_256DFF6A0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseManifest.ResponseDialogPresentationHint, &type metadata for ResponseManifest.ResponseDialogPresentationHint);
    atomic_store(result, (unint64_t *)&qword_256DFF6A0);
  }
  return result;
}

_QWORD *sub_23F15AD38(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[9];
  v6 = a1[10];
  v7 = a1[17];
  swift_bridgeObjectRetain();
  sub_23F15A8A8(v2, v3);
  sub_23F15A8A8(v4, v6);
  sub_23F15A8F8(v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_23F15AE30(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  sub_23F126078();
}

unint64_t sub_23F15AE64()
{
  unint64_t result;

  result = qword_256DFF6B8;
  if (!qword_256DFF6B8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseManifest, &type metadata for ResponseManifest);
    atomic_store(result, (unint64_t *)&qword_256DFF6B8);
  }
  return result;
}

unint64_t sub_23F15AEA4()
{
  unint64_t result;

  result = qword_256DFF6C0;
  if (!qword_256DFF6C0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseManifest.CodingKeys, &type metadata for ResponseManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF6C0);
  }
  return result;
}

unint64_t sub_23F15AEE4()
{
  unint64_t result;

  result = qword_256DFF6C8;
  if (!qword_256DFF6C8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseManifest.CodingKeys, &type metadata for ResponseManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF6C8);
  }
  return result;
}

unint64_t sub_23F15AF24()
{
  unint64_t result;

  result = qword_256DFF6D0;
  if (!qword_256DFF6D0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseManifest.CodingKeys, &type metadata for ResponseManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF6D0);
  }
  return result;
}

unint64_t sub_23F15AF64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256DFF6D8;
  if (!qword_256DFF6D8)
  {
    v1 = sub_23F125540(&qword_256DFF6E0);
    result = MEMORY[0x242667160](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256DFF6D8);
  }
  return result;
}

unint64_t sub_23F15AFAC()
{
  unint64_t result;

  result = qword_256DFF6E8;
  if (!qword_256DFF6E8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseManifest.ResponseDialogPresentationHint, &type metadata for ResponseManifest.ResponseDialogPresentationHint);
    atomic_store(result, (unint64_t *)&qword_256DFF6E8);
  }
  return result;
}

uint64_t destroy for ResponseParameter(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >> 60 != 15)
    sub_23F1311B4(*(_QWORD *)(a1 + 16), v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ResponseParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_23F131170(v7, v6);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v6;
  }
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ResponseParameter(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (uint64_t *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_23F131170(*v4, *(_QWORD *)(a2 + 24));
      v8 = *(_QWORD *)(a1 + 16);
      v9 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 24) = v5;
      sub_23F1311B4(v8, v9);
      goto LABEL_8;
    }
    sub_23F15B1EC(a1 + 16);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  v6 = *v4;
  sub_23F131170(*v4, *(_QWORD *)(a2 + 24));
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
LABEL_8:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t sub_23F15B1EC(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

void *initializeWithTake for ResponseParameter(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t assignWithTake for ResponseParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  if (v6 >> 60 != 15)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (v7 >> 60 != 15)
    {
      v8 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 16) = *v5;
      *(_QWORD *)(a1 + 24) = v7;
      sub_23F1311B4(v8, v6);
      goto LABEL_6;
    }
    sub_23F15B1EC(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
LABEL_6:
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseParameter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseParameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResponseParameter()
{
  sub_23F131844();
}

uint64_t destroy for ResponseDialog()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ResponseDialog(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ResponseDialog(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ObjectDefinition(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for ResponseDialog(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectDefinition(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectDefinition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResponseDialog()
{
  sub_23F131844();
}

uint64_t destroy for ResponseVisual()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s16IntelligenceFlow14ResponseVisualVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  sub_23F1315C4();
  sub_23F126078();
}

_QWORD *assignWithCopy for ResponseVisual(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for MessagePayload.RequestContent.TextContent(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for ResponseVisual(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseVisual(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseVisual(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResponseVisual()
{
  sub_23F131844();
}

uint64_t initializeBufferWithCopyOfBuffer for ResponseVisual.UIType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23F15B7B4 + 4 * byte_23F26ABE6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for ResponseVisual.UIType(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      sub_23F1311B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 1:
      goto LABEL_5;
    case 2:
      v3 = sub_23F2680B4();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    case 3:
      sub_23F1311B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for ResponseVisual.UIType()
{
  char *v0;

  v0 = (char *)sub_23F15B990 + 4 * byte_23F26ABEE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t *sub_23F15B990()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  v3 = v1[1];
  sub_23F131170(*v1, v3);
  *v0 = v2;
  v0[1] = v3;
  v4 = v1[3];
  v0[2] = v1[2];
  v0[3] = v4;
  v5 = v1[4];
  v6 = v1[5];
  v0[4] = v5;
  v0[5] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for ResponseVisual.UIType(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F12E3EC(result, type metadata accessor for ResponseVisual.UIType);
    v2 = (char *)&loc_23F15BAC4 + 4 * byte_23F26ABF2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void *initializeWithTake for ResponseVisual.UIType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_23F2680B4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ResponseVisual.UIType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F12E3EC((uint64_t)a1, type metadata accessor for ResponseVisual.UIType);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_23F2680B4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23F15BCE8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F2680B4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for ResponseVisual.UIType.ArchivedViewPayload(uint64_t a1)
{
  sub_23F1311B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for ResponseVisual.UIType.ArchivedViewPayload(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  sub_23F131170(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[4];
  v8 = a2[5];
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ResponseVisual.UIType.ArchivedViewPayload(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_23F131170(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_23F1311B4(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *assignWithTake for ResponseVisual.UIType.ArchivedViewPayload(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_23F1311B4(v4, v5);
  v6 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseVisual.UIType.ArchivedViewPayload(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseVisual.UIType.ArchivedViewPayload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

void type metadata accessor for ResponseVisual.UIType.ArchivedViewPayload()
{
  sub_23F131844();
}

_QWORD *initializeBufferWithCopyOfBuffer for MessagePayload.SpeechQuery.Candidate(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MessagePayload.SpeechQuery.Candidate()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ResponseVisual.UIType.LiveActivityPayload(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MessagePayload.SpeechQuery.Candidate(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseVisual.UIType.LiveActivityPayload(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseVisual.UIType.LiveActivityPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResponseVisual.UIType.LiveActivityPayload()
{
  sub_23F131844();
}

uint64_t destroy for ResponseVisual.UIType.PluginSnippetPayload(uint64_t a1)
{
  sub_23F1311B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for ResponseVisual.UIType.PluginSnippetPayload(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *a2;
  v5 = a2[1];
  sub_23F131170(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ResponseVisual.UIType.PluginSnippetPayload(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_23F131170(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_23F1311B4(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for MessagePayload.SpeechQuery(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t *assignWithTake for ResponseVisual.UIType.PluginSnippetPayload(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_23F1311B4(v4, v5);
  v6 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseVisual.UIType.PluginSnippetPayload(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseVisual.UIType.PluginSnippetPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResponseVisual.UIType.PluginSnippetPayload()
{
  sub_23F131844();
}

uint64_t initializeBufferWithCopyOfBuffer for ResponseVisual.UIType.ControlPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2680B4();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for ResponseVisual.UIType.ControlPayload(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F2680B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for ResponseVisual.UIType.ControlPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2680B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for ResponseVisual.UIType.ControlPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2680B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for ResponseVisual.UIType.ControlPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2680B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for ResponseVisual.UIType.ControlPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F2680B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseVisual.UIType.ControlPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F15C410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F15E83C();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ResponseVisual.UIType.ControlPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F15C44C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F15E83C();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, a2, a2, v4);
}

uint64_t sub_23F15C480()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F2680B4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ResponseVisual.UILabel()
{
  sub_23F131844();
}

uint64_t _s16IntelligenceFlow14ResponseVisualV7UILabelO21UIConfirmationPayloadVwxx_0()
{
  swift_bridgeObjectRelease();
  return sub_23F15E420();
}

void _s16IntelligenceFlow14ResponseVisualV7UILabelO21UIConfirmationPayloadVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  sub_23F1315C4();
  sub_23F126078();
}

_QWORD *_s16IntelligenceFlow14ResponseVisualV7UILabelO21UIConfirmationPayloadVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  sub_23F131A30();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  sub_23F1318B8();
  return a1;
}

void _s16IntelligenceFlow14ResponseVisualV7UILabelO21UIConfirmationPayloadVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  sub_23F126078();
}

uint64_t getEnumTagSinglePayload for PlannerPromptData.Tool.Definition.UIControlTool.Command(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlannerPromptData.Tool.Definition.UIControlTool.Command(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResponseVisual.UILabel.UIConfirmationPayload()
{
  sub_23F131844();
}

uint64_t destroy for ResponseManifest(_QWORD *a1)
{
  swift_bridgeObjectRelease();
  if (a1[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[10])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[17])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ResponseManifest(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v5;
    v6 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v6;
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v7;
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 24);
    *v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v9;
    v10 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v10;
  }
  v11 = *(_QWORD *)(a2 + 80);
  if (v11)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v11;
    v12 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v12;
    v13 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v13;
    v14 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v15;
    v16 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v16;
  }
  v17 = *(_QWORD *)(a2 + 136);
  if (v17)
  {
    v18 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = v17;
    *(_QWORD *)(a1 + 144) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  }
  v19 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v19;
  v20 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v20;
  *(_WORD *)(a1 + 184) = *(_WORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ResponseManifest(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 8);
  v5 = (__int128 *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F15CBD8(a1 + 8);
      v7 = *(_OWORD *)(a2 + 56);
      v9 = *v5;
      v8 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v7;
      *v4 = v9;
      *(_OWORD *)(a1 + 24) = v8;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *v5;
    v11 = *(_OWORD *)(a2 + 24);
    v12 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v12;
    *v4 = v10;
    *(_OWORD *)(a1 + 24) = v11;
  }
  v13 = (_OWORD *)(a1 + 72);
  v14 = (__int128 *)(a2 + 72);
  v15 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v15)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F15CBD8(a1 + 72);
      v16 = *(_OWORD *)(a2 + 120);
      v18 = *v14;
      v17 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = v16;
      *v13 = v18;
      *(_OWORD *)(a1 + 88) = v17;
    }
  }
  else if (v15)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *v14;
    v20 = *(_OWORD *)(a2 + 88);
    v21 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v21;
    *v13 = v19;
    *(_OWORD *)(a1 + 88) = v20;
  }
  v22 = *(_QWORD *)(a2 + 136);
  if (!*(_QWORD *)(a1 + 136))
  {
    if (v22)
    {
      *(_QWORD *)(a1 + 136) = v22;
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    goto LABEL_22;
  }
  if (!v22)
  {
    sub_23F15CC04(a1 + 136);
    goto LABEL_21;
  }
  *(_QWORD *)(a1 + 136) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_22:
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
  return a1;
}

uint64_t sub_23F15CBD8(uint64_t a1)
{
  destroy for ResponseDialog();
  return a1;
}

uint64_t sub_23F15CC04(uint64_t a1)
{
  destroy for ResponseVisual();
  return a1;
}

void *initializeWithTake for ResponseManifest(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xBAuLL);
}

uint64_t assignWithTake for ResponseManifest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 16))
  {
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v4;
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v5;
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23F15CBD8(a1 + 8);
  }
  v8 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v8;
  v9 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v9;
LABEL_6:
  if (*(_QWORD *)(a1 + 80))
  {
    v10 = *(_QWORD *)(a2 + 80);
    if (v10)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v11;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = v12;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_23F15CBD8(a1 + 72);
  }
  v14 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v14;
  v15 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v15;
LABEL_11:
  v16 = *(_QWORD *)(a2 + 136);
  if (!*(_QWORD *)(a1 + 136))
  {
LABEL_15:
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    goto LABEL_16;
  }
  if (!v16)
  {
    sub_23F15CC04(a1 + 136);
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 136) = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
LABEL_16:
  v17 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v18;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 184) = *(_WORD *)(a2 + 184);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseManifest(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 186))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseManifest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 184) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 186) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 186) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void type metadata accessor for ResponseManifest()
{
  sub_23F131844();
}

uint64_t getEnumTagSinglePayload for ResponseManifest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseManifest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23F15CF78 + 4 * byte_23F26ABFB[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23F15CFAC + 4 * byte_23F26ABF6[v4]))();
}

uint64_t sub_23F15CFAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F15CFB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F15CFBCLL);
  return result;
}

uint64_t sub_23F15CFC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F15CFD0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23F15CFD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F15CFDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ResponseManifest.CodingKeys()
{
  sub_23F131844();
}

void type metadata accessor for ResponseManifest.EncodingConfiguration()
{
  sub_23F131844();
}

void type metadata accessor for ResponseManifest.ResponseDialogPresentationHint()
{
  sub_23F131844();
}

ValueMetadata *type metadata accessor for ResponseManifest.ResponseDialogPresentationHint.CodingKeys()
{
  return &type metadata for ResponseManifest.ResponseDialogPresentationHint.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseManifest.ResponseDialogPresentationHint.NoneCodingKeys()
{
  return &type metadata for ResponseManifest.ResponseDialogPresentationHint.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseManifest.ResponseDialogPresentationHint.SuppressPrintCodingKeys()
{
  return &type metadata for ResponseManifest.ResponseDialogPresentationHint.SuppressPrintCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.CodingKeys()
{
  return &type metadata for ResponseVisual.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UILabel.CodingKeys()
{
  return &type metadata for ResponseVisual.UILabel.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UILabel.ConfirmationCodingKeys()
{
  return &type metadata for ResponseVisual.UILabel.ConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UILabel.UIConfirmationPayload.CodingKeys()
{
  return &type metadata for ResponseVisual.UILabel.UIConfirmationPayload.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.CodingKeys()
{
  return &type metadata for ResponseVisual.UIType.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.ArchivedViewCodingKeys()
{
  return &type metadata for ResponseVisual.UIType.ArchivedViewCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.LiveActivityCodingKeys()
{
  return &type metadata for ResponseVisual.UIType.LiveActivityCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.ControlCodingKeys()
{
  return &type metadata for ResponseVisual.UIType.ControlCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.PluginSnippetCodingKeys()
{
  return &type metadata for ResponseVisual.UIType.PluginSnippetCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.ControlPayload.CodingKeys()
{
  return &type metadata for ResponseVisual.UIType.ControlPayload.CodingKeys;
}

uint64_t _s16IntelligenceFlow16ResponseManifestV30ResponseDialogPresentationHintOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F15D140 + 4 * byte_23F26AC05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F15D174 + 4 * byte_23F26AC00[v4]))();
}

uint64_t sub_23F15D174(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F15D17C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F15D184);
  return result;
}

uint64_t sub_23F15D190(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F15D198);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F15D19C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F15D1A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.PluginSnippetPayload.CodingKeys()
{
  return &type metadata for ResponseVisual.UIType.PluginSnippetPayload.CodingKeys;
}

uint64_t _s16IntelligenceFlow14ResponseVisualV7UILabelO10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F15D200 + 4 * byte_23F26AC0A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F15D220 + 4 * byte_23F26AC0F[v4]))();
}

_BYTE *sub_23F15D200(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F15D220(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F15D228(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F15D230(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F15D238(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F15D240(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.LiveActivityPayload.CodingKeys()
{
  return &type metadata for ResponseVisual.UIType.LiveActivityPayload.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ResponseVisual.UIType.ArchivedViewPayload.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F15D2A8 + 4 * byte_23F26AC19[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F15D2DC + 4 * byte_23F26AC14[v4]))();
}

uint64_t sub_23F15D2DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F15D2E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F15D2ECLL);
  return result;
}

uint64_t sub_23F15D2F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F15D300);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F15D304(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F15D30C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.ArchivedViewPayload.CodingKeys()
{
  return &type metadata for ResponseVisual.UIType.ArchivedViewPayload.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ResponseOutput.VisualOutput.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s16IntelligenceFlow14ResponseVisualV6UITypeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F15D3FC + 4 * byte_23F26AC23[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F15D430 + 4 * byte_23F26AC1E[v4]))();
}

uint64_t sub_23F15D430(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F15D438(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F15D440);
  return result;
}

uint64_t sub_23F15D44C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F15D454);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23F15D458(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F15D460(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseDialog.CodingKeys()
{
  return &type metadata for ResponseDialog.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ResponseParameter.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseParameter.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23F15D550 + 4 * byte_23F26AC2D[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23F15D584 + 4 * byte_23F26AC28[v4]))();
}

uint64_t sub_23F15D584(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F15D58C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F15D594);
  return result;
}

uint64_t sub_23F15D5A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F15D5A8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23F15D5AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F15D5B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseParameter.CodingKeys()
{
  return &type metadata for ResponseParameter.CodingKeys;
}

unint64_t sub_23F15D5D4()
{
  unint64_t result;

  result = qword_256DFF828;
  if (!qword_256DFF828)
  {
    result = MEMORY[0x242667160](&unk_23F26B748, &type metadata for ResponseParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF828);
  }
  return result;
}

unint64_t sub_23F15D614()
{
  unint64_t result;

  result = qword_256DFF830;
  if (!qword_256DFF830)
  {
    result = MEMORY[0x242667160](&unk_23F26B800, &type metadata for ResponseDialog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF830);
  }
  return result;
}

unint64_t sub_23F15D654()
{
  unint64_t result;

  result = qword_256DFF838;
  if (!qword_256DFF838)
  {
    result = MEMORY[0x242667160](&unk_23F26B8B8, &type metadata for ResponseVisual.UIType.ArchivedViewPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF838);
  }
  return result;
}

unint64_t sub_23F15D694()
{
  unint64_t result;

  result = qword_256DFF840;
  if (!qword_256DFF840)
  {
    result = MEMORY[0x242667160](&unk_23F26B970, &type metadata for ResponseVisual.UIType.LiveActivityPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF840);
  }
  return result;
}

unint64_t sub_23F15D6D4()
{
  unint64_t result;

  result = qword_256DFF848;
  if (!qword_256DFF848)
  {
    result = MEMORY[0x242667160](&unk_23F26BA28, &type metadata for ResponseVisual.UIType.PluginSnippetPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF848);
  }
  return result;
}

unint64_t sub_23F15D714()
{
  unint64_t result;

  result = qword_256DFF850;
  if (!qword_256DFF850)
  {
    result = MEMORY[0x242667160](&unk_23F26BAE0, &type metadata for ResponseVisual.UIType.ControlPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF850);
  }
  return result;
}

unint64_t sub_23F15D754()
{
  unint64_t result;

  result = qword_256DFF858;
  if (!qword_256DFF858)
  {
    result = MEMORY[0x242667160](&unk_23F26BB98, &type metadata for ResponseVisual.UIType.PluginSnippetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF858);
  }
  return result;
}

unint64_t sub_23F15D794()
{
  unint64_t result;

  result = qword_256DFF860;
  if (!qword_256DFF860)
  {
    result = MEMORY[0x242667160](&unk_23F26BC50, &type metadata for ResponseVisual.UIType.ControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF860);
  }
  return result;
}

unint64_t sub_23F15D7D4()
{
  unint64_t result;

  result = qword_256DFF868;
  if (!qword_256DFF868)
  {
    result = MEMORY[0x242667160](&unk_23F26BD08, &type metadata for ResponseVisual.UIType.LiveActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF868);
  }
  return result;
}

unint64_t sub_23F15D814()
{
  unint64_t result;

  result = qword_256DFF870;
  if (!qword_256DFF870)
  {
    result = MEMORY[0x242667160](&unk_23F26BDC0, &type metadata for ResponseVisual.UIType.ArchivedViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF870);
  }
  return result;
}

unint64_t sub_23F15D854()
{
  unint64_t result;

  result = qword_256DFF878;
  if (!qword_256DFF878)
  {
    result = MEMORY[0x242667160](&unk_23F26BE78, &type metadata for ResponseVisual.UIType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF878);
  }
  return result;
}

unint64_t sub_23F15D894()
{
  unint64_t result;

  result = qword_256DFF880;
  if (!qword_256DFF880)
  {
    result = MEMORY[0x242667160](&unk_23F26BF30, &type metadata for ResponseVisual.UILabel.UIConfirmationPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF880);
  }
  return result;
}

unint64_t sub_23F15D8D4()
{
  unint64_t result;

  result = qword_256DFF888;
  if (!qword_256DFF888)
  {
    result = MEMORY[0x242667160](&unk_23F26BFE8, &type metadata for ResponseVisual.UILabel.ConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF888);
  }
  return result;
}

unint64_t sub_23F15D914()
{
  unint64_t result;

  result = qword_256DFF890;
  if (!qword_256DFF890)
  {
    result = MEMORY[0x242667160](&unk_23F26C0A0, &type metadata for ResponseVisual.UILabel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF890);
  }
  return result;
}

unint64_t sub_23F15D954()
{
  unint64_t result;

  result = qword_256DFF898;
  if (!qword_256DFF898)
  {
    result = MEMORY[0x242667160](&unk_23F26C158, &type metadata for ResponseVisual.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF898);
  }
  return result;
}

unint64_t sub_23F15D994()
{
  unint64_t result;

  result = qword_256DFF8A0;
  if (!qword_256DFF8A0)
  {
    result = MEMORY[0x242667160](&unk_23F26C2B0, &type metadata for ResponseManifest.ResponseDialogPresentationHint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF8A0);
  }
  return result;
}

unint64_t sub_23F15D9D4()
{
  unint64_t result;

  result = qword_256DFF8A8;
  if (!qword_256DFF8A8)
  {
    result = MEMORY[0x242667160](&unk_23F26C1D0, &type metadata for ResponseManifest.ResponseDialogPresentationHint.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF8A8);
  }
  return result;
}

unint64_t sub_23F15DA14()
{
  unint64_t result;

  result = qword_256DFF8B0;
  if (!qword_256DFF8B0)
  {
    result = MEMORY[0x242667160](&unk_23F26C1F8, &type metadata for ResponseManifest.ResponseDialogPresentationHint.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF8B0);
  }
  return result;
}

unint64_t sub_23F15DA54()
{
  unint64_t result;

  result = qword_256DFF8B8;
  if (!qword_256DFF8B8)
  {
    result = MEMORY[0x242667160](&unk_23F26C180, &type metadata for ResponseManifest.ResponseDialogPresentationHint.SuppressPrintCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF8B8);
  }
  return result;
}

unint64_t sub_23F15DA94()
{
  unint64_t result;

  result = qword_256DFF8C0;
  if (!qword_256DFF8C0)
  {
    result = MEMORY[0x242667160](&unk_23F26C1A8, &type metadata for ResponseManifest.ResponseDialogPresentationHint.SuppressPrintCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF8C0);
  }
  return result;
}

unint64_t sub_23F15DAD4()
{
  unint64_t result;

  result = qword_256DFF8C8;
  if (!qword_256DFF8C8)
  {
    result = MEMORY[0x242667160](&unk_23F26C220, &type metadata for ResponseManifest.ResponseDialogPresentationHint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF8C8);
  }
  return result;
}

unint64_t sub_23F15DB14()
{
  unint64_t result;

  result = qword_256DFF8D0;
  if (!qword_256DFF8D0)
  {
    result = MEMORY[0x242667160](&unk_23F26C248, &type metadata for ResponseManifest.ResponseDialogPresentationHint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF8D0);
  }
  return result;
}

unint64_t sub_23F15DB54()
{
  unint64_t result;

  result = qword_256DFF8D8;
  if (!qword_256DFF8D8)
  {
    result = MEMORY[0x242667160](&unk_23F26C0C8, &type metadata for ResponseVisual.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF8D8);
  }
  return result;
}

unint64_t sub_23F15DB94()
{
  unint64_t result;

  result = qword_256DFF8E0;
  if (!qword_256DFF8E0)
  {
    result = MEMORY[0x242667160](&unk_23F26C0F0, &type metadata for ResponseVisual.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF8E0);
  }
  return result;
}

unint64_t sub_23F15DBD4()
{
  unint64_t result;

  result = qword_256DFF8E8;
  if (!qword_256DFF8E8)
  {
    result = MEMORY[0x242667160](&unk_23F26BF58, &type metadata for ResponseVisual.UILabel.ConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF8E8);
  }
  return result;
}

unint64_t sub_23F15DC14()
{
  unint64_t result;

  result = qword_256DFF8F0;
  if (!qword_256DFF8F0)
  {
    result = MEMORY[0x242667160](&unk_23F26BF80, &type metadata for ResponseVisual.UILabel.ConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF8F0);
  }
  return result;
}

unint64_t sub_23F15DC54()
{
  unint64_t result;

  result = qword_256DFF8F8;
  if (!qword_256DFF8F8)
  {
    result = MEMORY[0x242667160](&unk_23F26C010, &type metadata for ResponseVisual.UILabel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF8F8);
  }
  return result;
}

unint64_t sub_23F15DC94()
{
  unint64_t result;

  result = qword_256DFF900;
  if (!qword_256DFF900)
  {
    result = MEMORY[0x242667160](&unk_23F26C038, &type metadata for ResponseVisual.UILabel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF900);
  }
  return result;
}

unint64_t sub_23F15DCD4()
{
  unint64_t result;

  result = qword_256DFF908;
  if (!qword_256DFF908)
  {
    result = MEMORY[0x242667160](&unk_23F26BEA0, &type metadata for ResponseVisual.UILabel.UIConfirmationPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF908);
  }
  return result;
}

unint64_t sub_23F15DD14()
{
  unint64_t result;

  result = qword_256DFF910;
  if (!qword_256DFF910)
  {
    result = MEMORY[0x242667160](&unk_23F26BEC8, &type metadata for ResponseVisual.UILabel.UIConfirmationPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF910);
  }
  return result;
}

unint64_t sub_23F15DD54()
{
  unint64_t result;

  result = qword_256DFF918;
  if (!qword_256DFF918)
  {
    result = MEMORY[0x242667160](&unk_23F26BD30, &type metadata for ResponseVisual.UIType.ArchivedViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF918);
  }
  return result;
}

unint64_t sub_23F15DD94()
{
  unint64_t result;

  result = qword_256DFF920;
  if (!qword_256DFF920)
  {
    result = MEMORY[0x242667160](&unk_23F26BD58, &type metadata for ResponseVisual.UIType.ArchivedViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF920);
  }
  return result;
}

unint64_t sub_23F15DDD4()
{
  unint64_t result;

  result = qword_256DFF928;
  if (!qword_256DFF928)
  {
    result = MEMORY[0x242667160](&unk_23F26BC78, &type metadata for ResponseVisual.UIType.LiveActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF928);
  }
  return result;
}

unint64_t sub_23F15DE14()
{
  unint64_t result;

  result = qword_256DFF930;
  if (!qword_256DFF930)
  {
    result = MEMORY[0x242667160](&unk_23F26BCA0, &type metadata for ResponseVisual.UIType.LiveActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF930);
  }
  return result;
}

unint64_t sub_23F15DE54()
{
  unint64_t result;

  result = qword_256DFF938;
  if (!qword_256DFF938)
  {
    result = MEMORY[0x242667160](&unk_23F26BBC0, &type metadata for ResponseVisual.UIType.ControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF938);
  }
  return result;
}

unint64_t sub_23F15DE94()
{
  unint64_t result;

  result = qword_256DFF940;
  if (!qword_256DFF940)
  {
    result = MEMORY[0x242667160](&unk_23F26BBE8, &type metadata for ResponseVisual.UIType.ControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF940);
  }
  return result;
}

unint64_t sub_23F15DED4()
{
  unint64_t result;

  result = qword_256DFF948;
  if (!qword_256DFF948)
  {
    result = MEMORY[0x242667160](&unk_23F26BB08, &type metadata for ResponseVisual.UIType.PluginSnippetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF948);
  }
  return result;
}

unint64_t sub_23F15DF14()
{
  unint64_t result;

  result = qword_256DFF950;
  if (!qword_256DFF950)
  {
    result = MEMORY[0x242667160](&unk_23F26BB30, &type metadata for ResponseVisual.UIType.PluginSnippetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF950);
  }
  return result;
}

unint64_t sub_23F15DF54()
{
  unint64_t result;

  result = qword_256DFF958;
  if (!qword_256DFF958)
  {
    result = MEMORY[0x242667160](&unk_23F26BDE8, &type metadata for ResponseVisual.UIType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF958);
  }
  return result;
}

unint64_t sub_23F15DF94()
{
  unint64_t result;

  result = qword_256DFF960;
  if (!qword_256DFF960)
  {
    result = MEMORY[0x242667160](&unk_23F26BE10, &type metadata for ResponseVisual.UIType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF960);
  }
  return result;
}

unint64_t sub_23F15DFD4()
{
  unint64_t result;

  result = qword_256DFF968;
  if (!qword_256DFF968)
  {
    result = MEMORY[0x242667160](&unk_23F26BA50, &type metadata for ResponseVisual.UIType.ControlPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF968);
  }
  return result;
}

unint64_t sub_23F15E014()
{
  unint64_t result;

  result = qword_256DFF970;
  if (!qword_256DFF970)
  {
    result = MEMORY[0x242667160](&unk_23F26BA78, &type metadata for ResponseVisual.UIType.ControlPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF970);
  }
  return result;
}

unint64_t sub_23F15E054()
{
  unint64_t result;

  result = qword_256DFF978;
  if (!qword_256DFF978)
  {
    result = MEMORY[0x242667160](&unk_23F26B998, &type metadata for ResponseVisual.UIType.PluginSnippetPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF978);
  }
  return result;
}

unint64_t sub_23F15E094()
{
  unint64_t result;

  result = qword_256DFF980;
  if (!qword_256DFF980)
  {
    result = MEMORY[0x242667160](&unk_23F26B9C0, &type metadata for ResponseVisual.UIType.PluginSnippetPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF980);
  }
  return result;
}

unint64_t sub_23F15E0D4()
{
  unint64_t result;

  result = qword_256DFF988;
  if (!qword_256DFF988)
  {
    result = MEMORY[0x242667160](&unk_23F26B8E0, &type metadata for ResponseVisual.UIType.LiveActivityPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF988);
  }
  return result;
}

unint64_t sub_23F15E114()
{
  unint64_t result;

  result = qword_256DFF990;
  if (!qword_256DFF990)
  {
    result = MEMORY[0x242667160](&unk_23F26B908, &type metadata for ResponseVisual.UIType.LiveActivityPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF990);
  }
  return result;
}

unint64_t sub_23F15E154()
{
  unint64_t result;

  result = qword_256DFF998;
  if (!qword_256DFF998)
  {
    result = MEMORY[0x242667160](&unk_23F26B828, &type metadata for ResponseVisual.UIType.ArchivedViewPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF998);
  }
  return result;
}

unint64_t sub_23F15E194()
{
  unint64_t result;

  result = qword_256DFF9A0;
  if (!qword_256DFF9A0)
  {
    result = MEMORY[0x242667160](&unk_23F26B850, &type metadata for ResponseVisual.UIType.ArchivedViewPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF9A0);
  }
  return result;
}

unint64_t sub_23F15E1D4()
{
  unint64_t result;

  result = qword_256DFF9A8;
  if (!qword_256DFF9A8)
  {
    result = MEMORY[0x242667160](&unk_23F26B770, &type metadata for ResponseDialog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF9A8);
  }
  return result;
}

unint64_t sub_23F15E214()
{
  unint64_t result;

  result = qword_256DFF9B0;
  if (!qword_256DFF9B0)
  {
    result = MEMORY[0x242667160](&unk_23F26B798, &type metadata for ResponseDialog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF9B0);
  }
  return result;
}

unint64_t sub_23F15E254()
{
  unint64_t result;

  result = qword_256DFF9B8;
  if (!qword_256DFF9B8)
  {
    result = MEMORY[0x242667160](&unk_23F26B6B8, &type metadata for ResponseParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF9B8);
  }
  return result;
}

unint64_t sub_23F15E294()
{
  unint64_t result;

  result = qword_256DFF9C0;
  if (!qword_256DFF9C0)
  {
    result = MEMORY[0x242667160](&unk_23F26B6E0, &type metadata for ResponseParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF9C0);
  }
  return result;
}

uint64_t sub_23F15E2D4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_23F15E34C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23F15E3C0()
{
  return sub_23F268750();
}

uint64_t sub_23F15E3E0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F15E3EC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F15E420()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F15E428()
{
  return 0x6574616C706D6574;
}

uint64_t sub_23F15E444@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F15E44C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F15E454()
{
  return sub_23F26863C();
}

uint64_t sub_23F15E46C()
{
  return sub_23F268888();
}

uint64_t sub_23F15E484()
{
  return 0x6574656D61726170;
}

_QWORD *sub_23F15E498()
{
  _QWORD *v0;

  return sub_23F12545C(v0, v0[3]);
}

uint64_t sub_23F15E4B8()
{
  return sub_23F268834();
}

uint64_t sub_23F15E4C4(uint64_t a1, uint64_t a2)
{
  return sub_23F12F0C4(a1, a2);
}

uint64_t sub_23F15E4D8()
{
  return sub_23F2686F0();
}

uint64_t sub_23F15E4E4()
{
  return 0x6C6175736976;
}

unint64_t sub_23F15E4F8()
{
  return 0xD000000000000010;
}

uint64_t sub_23F15E564()
{
  return sub_23F268888();
}

uint64_t sub_23F15E570()
{
  return sub_23F268714();
}

uint64_t sub_23F15E588@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F15E590()
{
  return 0x676F6C616964;
}

uint64_t sub_23F15E5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F15E5B0()
{
  return 0;
}

uint64_t sub_23F15E5CC()
{
  return 0;
}

unint64_t sub_23F15E5D8()
{
  return 0xD000000000000016;
}

uint64_t sub_23F15E5EC()
{
  return swift_unknownObjectRelease();
}

id sub_23F15E5F4()
{
  void *v0;

  return v0;
}

uint64_t sub_23F15E5FC()
{
  return sub_23F268714();
}

uint64_t sub_23F15E648()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F15E678()
{
  return sub_23F268834();
}

uint64_t sub_23F15E680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return sub_23F15A8A8(a1, a2);
}

uint64_t sub_23F15E694@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F15E69C()
{
  return sub_23F268654();
}

uint64_t sub_23F15E6AC()
{
  return sub_23F268864();
}

uint64_t sub_23F15E6B4()
{
  return sub_23F268588();
}

uint64_t sub_23F15E6C4(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_23F15E6E8()
{
  return sub_23F2686E4();
}

uint64_t sub_23F15E6F4()
{
  return sub_23F2686B4();
}

uint64_t sub_23F15E704()
{
  return sub_23F268684();
}

uint64_t sub_23F15E714()
{
  return sub_23F2686B4();
}

uint64_t sub_23F15E730@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F15E73C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F15E748()
{
  return 0x6574616C706D6574;
}

uint64_t sub_23F15E764()
{
  return sub_23F268654();
}

uint64_t sub_23F15E76C()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F1311B4(v0, v1);
}

unint64_t sub_23F15E778(uint64_t a1)
{
  return sub_23F15A758(a1);
}

uint64_t sub_23F15E780@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F15E78C()
{
  return sub_23F2688A0();
}

uint64_t sub_23F15E79C()
{
  return sub_23F2686B4();
}

uint64_t sub_23F15E7CC()
{
  return sub_23F2681A4();
}

uint64_t sub_23F15E7D4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F15E7DC()
{
  return sub_23F268798();
}

uint64_t sub_23F15E818()
{
  return sub_23F268750();
}

uint64_t sub_23F15E83C()
{
  return sub_23F2680B4();
}

uint64_t _s16IntelligenceFlow14ResponseVisualV5viewsSayAC6UITypeOGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F15E868(uint64_t a1)
{
  unint64_t v1;

  return sub_23F159FD0(a1, v1);
}

unint64_t sub_23F15E870()
{
  return 0xD000000000000010;
}

uint64_t sub_23F15E884()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F15E88C()
{
  return sub_23F268678();
}

uint64_t sub_23F15E8A0()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_23F159FE4(v3, v2);
  sub_23F159FE4(v1, v0);
  return v3;
}

__n128 sub_23F15E8CC(__n128 *a1)
{
  return a1[2];
}

uint64_t sub_23F15E8E8()
{
  return 0x676F6C616964;
}

uint64_t sub_23F15E8FC()
{
  return 0x6C6175736976;
}

uint64_t sub_23F15E91C()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F1311B4(v1, v0);
}

void sub_23F15E928()
{
  _QWORD *v0;

  v0[9] = 0;
  v0[10] = 0;
  v0[13] = 0;
  v0[14] = 0;
  v0[16] = 0;
  v0[17] = 0;
}

uint64_t sub_23F15E944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 248) + 8))(v0, v1);
}

uint64_t sub_23F15E958()
{
  return sub_23F268660();
}

uint64_t sub_23F15E96C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F15E974()
{
  return sub_23F2686FC();
}

uint64_t sub_23F15E980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v1, v0);
}

uint64_t sub_23F15E994()
{
  uint64_t v0;

  return sub_23F12F114(v0);
}

uint64_t sub_23F15E9A0()
{
  return sub_23F268888();
}

void sub_23F15E9B4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F15E9D0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F15E9EC()
{
  return 0;
}

uint64_t sub_23F15EA08()
{
  return sub_23F268840();
}

uint64_t sub_23F15EA14()
{
  return sub_23F2686F0();
}

uint64_t sub_23F15EA24()
{
  return sub_23F2686E4();
}

uint64_t sub_23F15EA4C(uint64_t a1)
{
  unint64_t v1;

  return sub_23F1311B4(a1, v1);
}

uint64_t sub_23F15EA54()
{
  return swift_bridgeObjectRelease_n();
}

double sub_23F15EA64@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  return result;
}

uint64_t sub_23F15EA7C()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F15986C(*(_QWORD *)(v0 + 48), v1, (uint64_t *)(v0 + 272));
}

uint64_t sub_23F15EA8C()
{
  uint64_t v0;

  return sub_23F131170(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

unint64_t sub_23F15EAB8()
{
  return 0xD000000000000015;
}

uint64_t sub_23F15EAD0()
{
  uint64_t v0;

  return v0 + 344;
}

uint64_t sub_23F15EAE0()
{
  uint64_t v0;

  return v0;
}

BOOL sub_23F15EAEC(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F15EB08()
{
  return sub_23F268750();
}

uint64_t sub_23F15EB1C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F15EB24()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F15EB2C()
{
  return sub_23F26839C();
}

uint64_t sub_23F15EB34()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F15EB40()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F15EB4C()
{
  return sub_23F2688A0();
}

uint64_t sub_23F15EB84()
{
  return sub_23F267FDC();
}

uint64_t sub_23F15EB8C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F15EB9C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F15EBC0(uint64_t a1)
{
  unint64_t v1;

  return sub_23F1311B4(a1, v1);
}

uint64_t sub_23F15EBDC()
{
  return sub_23F2681A4();
}

void sub_23F15EBE8(void *a1)
{
  bzero(a1, 0xB8uLL);
}

uint64_t sub_23F15EBF0()
{
  return sub_23F2688A0();
}

uint64_t sub_23F15EBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  return sub_23F15E2D4(a1, a2, a3, a4, 0, a6);
}

void sub_23F15EC00(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

uint64_t sub_23F15EC08(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_23F15EC1C()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F1311B4(v1, v0);
}

void sub_23F15EC34()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
}

unint64_t sub_23F15EC40()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23F15A830();
}

uint64_t sub_23F15EC4C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return *(_QWORD *)(v0 - 96);
}

unint64_t sub_23F15EC60()
{
  return 0xD000000000000015;
}

uint64_t sub_23F15EC88()
{
  return swift_release();
}

uint64_t sub_23F15EC90()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F15EC9C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F15ECB0()
{
  uint64_t v0;

  return sub_23F15A8F8(v0);
}

uint64_t sub_23F15ECBC()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

void sub_23F15ECC4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = 0;
  *(_QWORD *)(v0 + 144) = 0;
  *(_QWORD *)(v0 + 120) = 0;
}

uint64_t sub_23F15ECD8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F131170(v0, v1);
}

uint64_t sub_23F15ECE4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F15ECF0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F15ECFC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

unint64_t sub_23F15ED10(uint64_t a1)
{
  return sub_23F15A99C(a1);
}

uint64_t sub_23F15ED18()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F159FE4(v0, v1);
}

uint64_t sub_23F15ED24()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F159FD0(v0, v1);
}

uint64_t sub_23F15ED30()
{
  uint64_t v0;

  return v0 - 72;
}

uint64_t sub_23F15ED44(uint64_t a1)
{
  unint64_t v1;

  return sub_23F159FD0(a1, v1);
}

uint64_t sub_23F15ED4C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F15ED54()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F159FD0(v1, v0);
}

unint64_t sub_23F15ED60()
{
  return sub_23F15A924();
}

uint64_t sub_23F15ED68(uint64_t a1, SEL *a2)
{
  void *v2;

  return sub_23F15A3EC(v2, a2);
}

id sub_23F15ED70(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_23F15ED78()
{
  uint64_t v0;

  return sub_23F12F114(v0);
}

uint64_t sub_23F15ED84()
{
  return swift_dynamicCastObjCClass();
}

uint64_t sub_23F15ED90()
{
  uint64_t v0;

  return v0;
}

void sub_23F15ED9C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F12E3EC(v2, a2);
}

uint64_t sub_23F15EDB0()
{
  return sub_23F268180();
}

uint64_t sub_23F15EDB8()
{
  return sub_23F268594();
}

uint64_t sub_23F15EDC0()
{
  return sub_23F268840();
}

uint64_t sub_23F15EDC8()
{
  return sub_23F268840();
}

void sub_23F15EDD4()
{
  JUMPOUT(0x2426660F8);
}

uint64_t _s16IntelligenceFlow14ResponseVisualV6UITypeO20PluginSnippetPayloadV15pluginModelData8bundleIdAG10Foundation0K0V_SStcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

void ResponseOutput.VisualOutput.LiveActivityOutputPayload.sessionId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

IntelligenceFlow::ResponseOutput::VisualOutput::LiveActivityOutputPayload __swiftcall ResponseOutput.VisualOutput.LiveActivityOutputPayload.init(sessionId:)(IntelligenceFlow::ResponseOutput::VisualOutput::LiveActivityOutputPayload sessionId)
{
  IntelligenceFlow::ResponseOutput::VisualOutput::LiveActivityOutputPayload *v1;

  *v1 = sessionId;
  return sessionId;
}

uint64_t sub_23F15EE1C()
{
  sub_23F15EE98();
  return sub_23F2688B8();
}

uint64_t sub_23F15EE44()
{
  sub_23F15EE98();
  return sub_23F2688C4();
}

void ResponseOutput.VisualOutput.LiveActivityOutputPayload.encode(to:)()
{
  sub_23F15F0A4();
}

unint64_t sub_23F15EE98()
{
  unint64_t result;

  result = qword_256DFF9D0;
  if (!qword_256DFF9D0)
  {
    result = MEMORY[0x242667160](&unk_23F26E2B0, &type metadata for ResponseOutput.VisualOutput.LiveActivityOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF9D0);
  }
  return result;
}

void ResponseOutput.VisualOutput.LiveActivityOutputPayload.init(from:)()
{
  sub_23F15F1C4();
}

void sub_23F15EF00()
{
  ResponseOutput.VisualOutput.LiveActivityOutputPayload.init(from:)();
}

void sub_23F15EF14()
{
  ResponseOutput.VisualOutput.LiveActivityOutputPayload.encode(to:)();
}

uint64_t _s16IntelligenceFlow14ResponseOutputV06VisualD0O012LiveActivityD7PayloadV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23F268798();
}

uint64_t sub_23F15EF60(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F15EFE4()
{
  return 0x6449656C646E7562;
}

uint64_t sub_23F15F000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F15EF60(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F15F028()
{
  sub_23F15F15C();
  return sub_23F2688B8();
}

uint64_t sub_23F15F050()
{
  sub_23F15F15C();
  return sub_23F2688C4();
}

void ResponseOutput.VisualOutput.InAppResponseOutputPayload.encode(to:)()
{
  sub_23F15F0A4();
}

void sub_23F15F0A4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void (*v7)(void);

  sub_23F131874();
  v7 = v2;
  sub_23F1217E8(v3);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F15E660();
  v5 = (_QWORD *)sub_23F126358();
  sub_23F12545C(v5, v6);
  v7();
  sub_23F2688A0();
  sub_23F268720();
  sub_23F15E7D4(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

unint64_t sub_23F15F15C()
{
  unint64_t result;

  result = qword_256DFF9E8;
  if (!qword_256DFF9E8)
  {
    result = MEMORY[0x242667160](&unk_23F26E260, &type metadata for ResponseOutput.VisualOutput.InAppResponseOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFF9E8);
  }
  return result;
}

void ResponseOutput.VisualOutput.InAppResponseOutputPayload.init(from:)()
{
  sub_23F15F1C4();
}

void sub_23F15F1C4()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;

  sub_23F131874();
  v2 = v1;
  v4 = v3;
  v10 = v5;
  v11 = sub_23F1217E8(v6);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F126058();
  sub_23F12545C(v4, v4[3]);
  v2();
  sub_23F268888();
  if (!v0)
  {
    v7 = sub_23F268684();
    v9 = v8;
    sub_23F16BD1C();
    *v10 = v7;
    v10[1] = v9;
  }
  sub_23F131BF4();
  sub_23F1313FC();
}

void sub_23F15F2A4()
{
  ResponseOutput.VisualOutput.InAppResponseOutputPayload.init(from:)();
}

void sub_23F15F2B8()
{
  ResponseOutput.VisualOutput.InAppResponseOutputPayload.encode(to:)();
}

void ResponseOutput.VisualOutput.SystemSnippetOutputPayload.pluginModel.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F1325F8(v1, a1, type metadata accessor for RGPluginModel);
}

void ResponseOutput.VisualOutput.SystemSnippetOutputPayload.init(pluginModel:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23F132624(a1, a2, type metadata accessor for RGPluginModel);
}

void static RGPluginModel.== infix(_:_:)()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  sub_23F16BBDC();
  sub_23F125DE4(&qword_256DFF9F8, type metadata accessor for RGPluginModel, (uint64_t)&protocol conformance descriptor for RGPluginModel);
  v0 = sub_23F267DC0();
  v2 = v1;
  v4 = sub_23F267DC0();
  v5 = v3;
  if (v2 >> 60 == 15)
  {
    if (v3 >> 60 == 15)
      goto LABEL_7;
  }
  else if (v3 >> 60 != 15)
  {
    sub_23F131170(v0, v2);
    MEMORY[0x2426660F8](v0, v2, v4, v5);
    sub_23F15ED54();
    sub_23F16BC78();
    sub_23F16BC78();
    goto LABEL_7;
  }
  sub_23F16BC78();
  sub_23F15ED54();
LABEL_7:
  sub_23F131ABC();
}

uint64_t sub_23F15F3F8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6F4D6E6967756C70 && a2 == 0xEB000000006C6564)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F15F494()
{
  return 0x6F4D6E6967756C70;
}

uint64_t sub_23F15F4B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F15F3F8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F15F4E0()
{
  sub_23F15F620();
  return sub_23F2688B8();
}

uint64_t sub_23F15F508()
{
  sub_23F15F620();
  return sub_23F2688C4();
}

uint64_t ResponseOutput.VisualOutput.SystemSnippetOutputPayload.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_23F1217E8(&qword_256DFFA00);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F126058();
  sub_23F12545C(a1, a1[3]);
  sub_23F15F620();
  sub_23F15EBF0();
  type metadata accessor for RGPluginModel(0);
  sub_23F125DE4(&qword_256DFFA10, type metadata accessor for RGPluginModel, (uint64_t)&protocol conformance descriptor for RGPluginModel);
  sub_23F268750();
  return sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

unint64_t sub_23F15F620()
{
  unint64_t result;

  result = qword_256DFFA08;
  if (!qword_256DFFA08)
  {
    result = MEMORY[0x242667160](&unk_23F26E210, &type metadata for ResponseOutput.VisualOutput.SystemSnippetOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFA08);
  }
  return result;
}

void ResponseOutput.VisualOutput.SystemSnippetOutputPayload.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F131874();
  v4 = v3;
  v11 = v5;
  type metadata accessor for RGPluginModel(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F125F70();
  v13 = v7;
  v12 = *(_QWORD *)(sub_23F1217E8(&qword_256DFFA18) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F15E9EC();
  type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(v9);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15E660();
  sub_23F12545C(v4, v4[3]);
  sub_23F15F620();
  sub_23F268888();
  if (!v0)
  {
    sub_23F125DE4(&qword_256DFFA20, type metadata accessor for RGPluginModel, (uint64_t)&protocol conformance descriptor for RGPluginModel);
    sub_23F2686B4();
    sub_23F15E7D4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    sub_23F132624(v13, v1, type metadata accessor for RGPluginModel);
    sub_23F132624(v1, v11, type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload);
  }
  sub_23F131BF4();
  sub_23F1313FC();
}

uint64_t type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256DFFDA8);
}

void sub_23F15F7DC()
{
  ResponseOutput.VisualOutput.SystemSnippetOutputPayload.init(from:)();
}

uint64_t sub_23F15F7F0(_QWORD *a1)
{
  return ResponseOutput.VisualOutput.SystemSnippetOutputPayload.encode(to:)(a1);
}

void ResponseOutput.VisualOutput.PluginSnippetOutputPayload.pluginModelData.getter()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_23F1317E0();
  sub_23F131170(v0, v1);
  sub_23F1317E0();
  sub_23F126078();
}

void ResponseOutput.VisualOutput.PluginSnippetOutputPayload.bundleId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

uint64_t ResponseOutput.VisualOutput.PluginSnippetOutputPayload.init(pluginModelData:bundleId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t static ResponseOutput.VisualOutput.PluginSnippetOutputPayload.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  if ((MEMORY[0x2426660F8](*a1, a1[1], *a2, a2[1]) & 1) == 0)
    return 0;
  if (v2 == v4 && v3 == v5)
    return 1;
  sub_23F1317E0();
  return sub_23F268798();
}

uint64_t sub_23F15F8D0()
{
  sub_23F15FA2C();
  return sub_23F2688B8();
}

uint64_t sub_23F15F8F8()
{
  sub_23F15FA2C();
  return sub_23F2688C4();
}

void ResponseOutput.VisualOutput.PluginSnippetOutputPayload.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F131874();
  v3 = v2;
  v4 = sub_23F1217E8(&qword_256DFFA28);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F1319C8();
  sub_23F12545C(v3, v3[3]);
  sub_23F15FA2C();
  sub_23F2688A0();
  sub_23F146B94();
  sub_23F268750();
  if (!v0)
    sub_23F268720();
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23F1313FC();
}

unint64_t sub_23F15FA2C()
{
  unint64_t result;

  result = qword_256DFFA30;
  if (!qword_256DFFA30)
  {
    result = MEMORY[0x242667160](&unk_23F26E1C0, &type metadata for ResponseOutput.VisualOutput.PluginSnippetOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFA30);
  }
  return result;
}

void ResponseOutput.VisualOutput.PluginSnippetOutputPayload.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F131874();
  v4 = v3;
  v6 = v5;
  sub_23F1217E8(&qword_256DFFA38);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F1316E4();
  sub_23F12545C(v4, v4[3]);
  sub_23F15FA2C();
  sub_23F268888();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F146AE4();
    sub_23F15E79C();
    sub_23F15ECD8();
    v8 = sub_23F268684();
    v10 = v9;
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
    v12 = v8;
    sub_23F15E444(v1, v11);
    sub_23F15ECD8();
    sub_23F1315C4();
    sub_23F15E76C();
    *v6 = v13;
    v6[1] = v14;
    v6[2] = v12;
    v6[3] = v10;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
    sub_23F15E76C();
    swift_bridgeObjectRelease();
  }
  sub_23F1313FC();
}

void sub_23F15FBD0()
{
  ResponseOutput.VisualOutput.PluginSnippetOutputPayload.init(from:)();
}

void sub_23F15FBE4()
{
  ResponseOutput.VisualOutput.PluginSnippetOutputPayload.encode(to:)();
}

void static ResponseOutput.VisualOutput.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;

  type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F125F70();
  type metadata accessor for ResponseOutput.VisualOutput(0);
  sub_23F125F30();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F1217E8(&qword_256DFFA40);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15E524();
  v12 = v2 + *(int *)(v11 + 48);
  sub_23F1325F8(a1, v2, type metadata accessor for ResponseOutput.VisualOutput);
  sub_23F1325F8(a2, v12, type metadata accessor for ResponseOutput.VisualOutput);
  sub_23F1317E0();
  v13 = (char *)sub_23F15FD4C + 4 * byte_23F26C890[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F15FD4C()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  char v8;

  sub_23F1325F8(v0, (uint64_t)v1, type metadata accessor for ResponseOutput.VisualOutput);
  v4 = *v1;
  v3 = v1[1];
  if (sub_23F16BAEC())
  {
    sub_23F131A30();
    sub_23F125E40(v0, &qword_256DFFA40);
  }
  else
  {
    if (v4 == *v2 && v3 == v2[1])
    {
      v7 = swift_bridgeObjectRelease_n();
LABEL_12:
      sub_23F16BDB8(v7, type metadata accessor for ResponseOutput.VisualOutput);
      v8 = 1;
      return v8 & 1;
    }
    v6 = sub_23F126148();
    sub_23F131A30();
    v7 = swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      goto LABEL_12;
    sub_23F16BDB8(v7, type metadata accessor for ResponseOutput.VisualOutput);
  }
  v8 = 0;
  return v8 & 1;
}

uint64_t type metadata accessor for ResponseOutput.VisualOutput(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256DFFD18);
}

uint64_t sub_23F15FF74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x697463416576696CLL && a2 == 0xEC00000079746976;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7365527070416E69 && a2 == 0xED000065736E6F70;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E536D6574737973 && a2 == 0xED00007465707069;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6E536E6967756C70 && a2 == 0xED00007465707069)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F16019C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1601D8 + 4 * byte_23F26C894[a1]))(0x697463416576696CLL, 0xEC00000079746976);
}

uint64_t sub_23F1601D8()
{
  return 0x7365527070416E69;
}

uint64_t sub_23F1601FC()
{
  return 0x6E536D6574737973;
}

uint64_t sub_23F160234()
{
  unsigned __int8 *v0;

  return sub_23F16019C(*v0);
}

uint64_t sub_23F16023C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F15FF74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F160260()
{
  sub_23F1607F0();
  return sub_23F2688B8();
}

uint64_t sub_23F160288()
{
  sub_23F1607F0();
  return sub_23F2688C4();
}

uint64_t sub_23F1602B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F161594(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1602D8()
{
  sub_23F1608E0();
  return sub_23F2688B8();
}

uint64_t sub_23F160300()
{
  sub_23F1608E0();
  return sub_23F2688C4();
}

uint64_t sub_23F160328()
{
  sub_23F160958();
  return sub_23F2688B8();
}

uint64_t sub_23F160350()
{
  sub_23F160958();
  return sub_23F2688C4();
}

uint64_t sub_23F160378()
{
  sub_23F16082C();
  return sub_23F2688B8();
}

uint64_t sub_23F1603A0()
{
  sub_23F16082C();
  return sub_23F2688C4();
}

uint64_t sub_23F1603C8()
{
  sub_23F1608A4();
  return sub_23F2688B8();
}

uint64_t sub_23F1603F0()
{
  sub_23F1608A4();
  return sub_23F2688C4();
}

void ResponseOutput.VisualOutput.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F131874();
  v19 = v1;
  v3 = v2;
  sub_23F1217E8(&qword_256DFFA48);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F16BC34(v5, v16);
  sub_23F1217E8(&qword_256DFFA50);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F16BC18(v7, v17);
  type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F16BA8C(v9, v18);
  sub_23F1217E8(&qword_256DFFA58);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15E660();
  sub_23F1217E8(&qword_256DFFA60);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23F15E5B0();
  type metadata accessor for ResponseOutput.VisualOutput(v12);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F15E524();
  sub_23F1217E8(&qword_256DFFA68);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F15E50C();
  sub_23F12545C(v3, v3[3]);
  sub_23F1607F0();
  sub_23F2688A0();
  sub_23F1325F8(v19, v0, type metadata accessor for ResponseOutput.VisualOutput);
  v15 = (char *)sub_23F1605C0 + 4 * byte_23F26C898[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F1605C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v0;
  v3 = v0[1];
  *(_BYTE *)(v2 - 112) = 0;
  sub_23F160958();
  sub_23F15E6E8();
  *(_QWORD *)(v2 - 112) = v4;
  *(_QWORD *)(v2 - 104) = v3;
  sub_23F160994();
  sub_23F16BCF4();
  sub_23F15E7D4(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 224) + 8));
  sub_23F16BC50();
  swift_bridgeObjectRelease();
  sub_23F15EAFC();
  sub_23F1313FC();
}

unint64_t sub_23F1607F0()
{
  unint64_t result;

  result = qword_256DFFA70;
  if (!qword_256DFFA70)
  {
    result = MEMORY[0x242667160](&unk_23F26E170, &type metadata for ResponseOutput.VisualOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFA70);
  }
  return result;
}

unint64_t sub_23F16082C()
{
  unint64_t result;

  result = qword_256DFFA78;
  if (!qword_256DFFA78)
  {
    result = MEMORY[0x242667160](&unk_23F26E120, &type metadata for ResponseOutput.VisualOutput.PluginSnippetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFA78);
  }
  return result;
}

unint64_t sub_23F160868()
{
  unint64_t result;

  result = qword_256DFFA80;
  if (!qword_256DFFA80)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseOutput.VisualOutput.PluginSnippetOutputPayload, &type metadata for ResponseOutput.VisualOutput.PluginSnippetOutputPayload);
    atomic_store(result, (unint64_t *)&qword_256DFFA80);
  }
  return result;
}

unint64_t sub_23F1608A4()
{
  unint64_t result;

  result = qword_256DFFA88;
  if (!qword_256DFFA88)
  {
    result = MEMORY[0x242667160](&unk_23F26E0D0, &type metadata for ResponseOutput.VisualOutput.SystemSnippetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFA88);
  }
  return result;
}

unint64_t sub_23F1608E0()
{
  unint64_t result;

  result = qword_256DFFA98;
  if (!qword_256DFFA98)
  {
    result = MEMORY[0x242667160](&unk_23F26E080, &type metadata for ResponseOutput.VisualOutput.InAppResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFA98);
  }
  return result;
}

unint64_t sub_23F16091C()
{
  unint64_t result;

  result = qword_256DFFAA0;
  if (!qword_256DFFAA0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseOutput.VisualOutput.InAppResponseOutputPayload, &type metadata for ResponseOutput.VisualOutput.InAppResponseOutputPayload);
    atomic_store(result, (unint64_t *)&qword_256DFFAA0);
  }
  return result;
}

unint64_t sub_23F160958()
{
  unint64_t result;

  result = qword_256DFFAA8;
  if (!qword_256DFFAA8)
  {
    result = MEMORY[0x242667160](&unk_23F26E030, &type metadata for ResponseOutput.VisualOutput.LiveActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFAA8);
  }
  return result;
}

unint64_t sub_23F160994()
{
  unint64_t result;

  result = qword_256DFFAB0;
  if (!qword_256DFFAB0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseOutput.VisualOutput.LiveActivityOutputPayload, &type metadata for ResponseOutput.VisualOutput.LiveActivityOutputPayload);
    atomic_store(result, (unint64_t *)&qword_256DFFAB0);
  }
  return result;
}

void ResponseOutput.VisualOutput.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47[8];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;

  sub_23F131874();
  v3 = v2;
  v53 = v4;
  v59 = sub_23F1217E8(&qword_256DFFAB8);
  v56 = *(_QWORD *)(v59 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F16BC18(v6, v47[0]);
  v7 = sub_23F1217E8(&qword_256DFFAC0);
  v51 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F16BA8C(v9, v47[0]);
  v10 = sub_23F1217E8(&qword_256DFFAC8);
  v49 = *(_QWORD *)(v10 - 8);
  v50 = v10;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F125F70();
  v55 = v12;
  v48 = sub_23F1217E8(&qword_256DFFAD0);
  v47[7] = *(_QWORD *)(v48 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F125F70();
  v54 = v14;
  v60 = sub_23F1217E8(&qword_256DFFAD8);
  v57 = *(_QWORD *)(v60 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23F15E9EC();
  v58 = type metadata accessor for ResponseOutput.VisualOutput(v16);
  sub_23F125F30();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)v47 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)v47 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)v47 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v47 - v30;
  v32 = v3[3];
  v61 = v3;
  sub_23F12545C(v3, v32);
  sub_23F1607F0();
  sub_23F268888();
  if (!v0)
  {
    v47[2] = (uint64_t)v29;
    v47[3] = (uint64_t)v26;
    v47[5] = (uint64_t)v23;
    v47[4] = (uint64_t)v20;
    v47[6] = (uint64_t)v31;
    v33 = v58;
    v34 = sub_23F2686D8();
    v35 = *(_QWORD *)(v34 + 16);
    if (v35)
    {
      v47[1] = 0;
      v36 = *(unsigned __int8 *)(v34 + 32);
      sub_23F15E2D0(1, v35, v34, v34 + 32, 0, (2 * v35) | 1);
      v38 = v37;
      v40 = v39;
      sub_23F13186C();
      if (v38 == v40 >> 1)
        __asm { BR              X9 }
    }
    sub_23F15EDB8();
    sub_23F131B30();
    v42 = v41;
    sub_23F1217E8(&qword_256DFF4B8);
    *v42 = v33;
    v43 = v60;
    sub_23F268648();
    sub_23F15E6B4();
    v44 = sub_23F16BD80();
    v45(v44);
    swift_willThrow();
    sub_23F15E5EC();
    sub_23F16BD50();
    v46(v1, v43);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v61);
  sub_23F15EAFC();
  sub_23F1313FC();
}

void sub_23F160D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v2 - 128) = 1;
  sub_23F1608E0();
  v3 = *(_QWORD *)(v2 - 200);
  sub_23F16BA4C();
  if (!v1)
  {
    sub_23F163830();
    sub_23F16BC64();
    v4 = *(_QWORD *)(v2 - 168);
    sub_23F15E444(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 248) + 8));
    sub_23F15E5EC();
    sub_23F15E588(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    v6 = *(_QWORD *)(v2 - 120);
    v7 = *(_QWORD **)(v2 - 296);
    *v7 = *(_QWORD *)(v2 - 128);
    v7[1] = v6;
    sub_23F15ED90();
    swift_storeEnumTagMultiPayload();
    v8 = (uint64_t)v7;
    v9 = *(_QWORD *)(v2 - 272);
    sub_23F132624(v8, v9, (uint64_t (*)(_QWORD))type metadata accessor for ResponseOutput.VisualOutput);
    sub_23F132624(v9, *(_QWORD *)(v2 - 216), (uint64_t (*)(_QWORD))type metadata accessor for ResponseOutput.VisualOutput);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(*(_QWORD *)(v2 - 136));
    JUMPOUT(0x23F160D70);
  }
  sub_23F15E5EC();
  sub_23F16BD50();
  sub_23F15E588(v0, v5);
  JUMPOUT(0x23F160D6CLL);
}

void sub_23F160DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v1 - 128) = 2;
  sub_23F1608A4();
  sub_23F16BA4C();
  if (v0)
    JUMPOUT(0x23F160E18);
  type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(0);
  sub_23F125DE4(&qword_256DFFAE8, type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload);
  sub_23F2686B4();
  sub_23F16BBE8();
  sub_23F15E5EC();
  sub_23F15E588(*(_QWORD *)(v1 - 72), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 168) + 8));
  v2 = *(_QWORD *)(v1 - 280);
  sub_23F15ED90();
  swift_storeEnumTagMultiPayload();
  v3 = v2;
  v4 = *(_QWORD *)(v1 - 272);
  sub_23F132624(v3, v4, (uint64_t (*)(_QWORD))type metadata accessor for ResponseOutput.VisualOutput);
  sub_23F132624(v4, *(_QWORD *)(v1 - 216), (uint64_t (*)(_QWORD))type metadata accessor for ResponseOutput.VisualOutput);
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(*(_QWORD *)(v1 - 136));
  JUMPOUT(0x23F160D70);
}

void sub_23F160E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v2 - 128) = 3;
  sub_23F16082C();
  sub_23F16BA4C();
  if (v1)
  {
    sub_23F15E5EC();
    sub_23F16BD50();
    JUMPOUT(0x23F160F28);
  }
  sub_23F1637F4();
  sub_23F2686B4();
  v3 = *(_QWORD *)(v2 - 168);
  v4 = sub_23F126358();
  v5(v4);
  sub_23F15E5EC();
  sub_23F15E588(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v6 = *(_QWORD *)(v2 - 112);
  v7 = *(_QWORD *)(v2 - 104);
  v8 = *(_QWORD *)(v2 - 288);
  *(_OWORD *)v8 = *(_OWORD *)(v2 - 128);
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v7;
  sub_23F15ED90();
  JUMPOUT(0x23F161020);
}

void sub_23F161064()
{
  ResponseOutput.VisualOutput.init(from:)();
}

void sub_23F161078()
{
  ResponseOutput.VisualOutput.encode(to:)();
}

void ResponseOutput.DialogType.content.getter()
{
  __asm { BR              X9 }
}

void sub_23F1610C4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_23F135CDC(a1, a2, a3);
  sub_23F1317E0();
  sub_23F126078();
}

void static ResponseOutput.DialogType.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X9 }
}

void sub_23F161118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (v5)
  {
    sub_23F135CDC(v1, v0, v5);
    sub_23F135CDC(v3, v2, v4);
    v7 = sub_23F16BCBC(v3, v2, v4);
    sub_23F137270(v7, v8, v5);
  }
  else
  {
    if (v3 != v1 || v2 != v0)
      sub_23F16BA74();
    sub_23F135CDC(v1, v0, 0);
    sub_23F135CDC(v3, v2, 0);
    v9 = sub_23F16BCBC(v3, v2, 0);
    sub_23F137270(v9, v10, 0);
  }
  sub_23F131ABC();
}

uint64_t sub_23F1612D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x6554636974617473 && a2 == 0xEA00000000007478;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x63696E6F73 && a2 == 0xE500000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x65746172656E6567 && a2 == 0xE900000000000064;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x800000023F2939A0 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x7373657270707573 && a2 == 0xEA00000000006465)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v9 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_23F1614F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F16152C + 4 * byte_23F26C8A8[a1]))(0x6554636974617473, 0xEA00000000007478);
}

uint64_t sub_23F16152C()
{
  return 0x63696E6F73;
}

uint64_t sub_23F161540()
{
  return 0x65746172656E6567;
}

unint64_t sub_23F16155C()
{
  return 0xD000000000000010;
}

uint64_t sub_23F161578()
{
  return 0x7373657270707573;
}

uint64_t sub_23F161594(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F126148();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1615FC()
{
  unsigned __int8 *v0;

  return sub_23F1614F4(*v0);
}

uint64_t sub_23F161604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1612D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F161628()
{
  sub_23F1638A8();
  return sub_23F2688B8();
}

uint64_t sub_23F161650()
{
  sub_23F1638A8();
  return sub_23F2688C4();
}

uint64_t sub_23F161678()
{
  sub_23F16395C();
  return sub_23F2688B8();
}

uint64_t sub_23F1616A0()
{
  sub_23F16395C();
  return sub_23F2688C4();
}

uint64_t sub_23F1616C8()
{
  sub_23F163998();
  return sub_23F2688B8();
}

uint64_t sub_23F1616F0()
{
  sub_23F163998();
  return sub_23F2688C4();
}

void sub_23F161718()
{
  sub_23F268834();
  sub_23F15EDC8();
  sub_23F1318A0();
  sub_23F1318E4();
}

uint64_t sub_23F161740()
{
  sub_23F1639D4();
  return sub_23F2688B8();
}

uint64_t sub_23F161768()
{
  sub_23F1639D4();
  return sub_23F2688C4();
}

uint64_t sub_23F161790()
{
  sub_23F1638E4();
  return sub_23F2688B8();
}

uint64_t sub_23F1617B8()
{
  sub_23F1638E4();
  return sub_23F2688C4();
}

uint64_t sub_23F1617E0()
{
  sub_23F163920();
  return sub_23F2688B8();
}

uint64_t sub_23F161808()
{
  sub_23F163920();
  return sub_23F2688C4();
}

void ResponseOutput.DialogType.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F131874();
  v2 = v1;
  sub_23F1217E8(&qword_256DFFB00);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F16BA8C(v4, v12);
  sub_23F1217E8(&qword_256DFFB08);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F125F70();
  sub_23F1217E8(&qword_256DFFB10);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F16BBFC(v7, v13);
  sub_23F1217E8(&qword_256DFFB18);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F1316E4();
  sub_23F1217E8(&qword_256DFFB20);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F1217E8(&qword_256DFFB28);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15E50C();
  v11 = *(unsigned __int8 *)(v0 + 16);
  sub_23F12545C(v2, v2[3]);
  sub_23F1638A8();
  sub_23F15EBF0();
  __asm { BR              X9 }
}

void sub_23F1619B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  *(_BYTE *)(v3 - 69) = 0;
  sub_23F1639D4();
  sub_23F15E6E8();
  sub_23F268720();
  sub_23F16BD50();
  v4(v2, v1);
  sub_23F15E588(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8));
  sub_23F15EAFC();
  sub_23F1313FC();
}

void ResponseOutput.DialogType.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  sub_23F131874();
  v2 = v1;
  sub_23F1217E8(&qword_256DFFB60);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F16BBFC(v4, v26);
  sub_23F1217E8(&qword_256DFFB68);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F16BC34(v6, v27);
  sub_23F1217E8(&qword_256DFFB70);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F125F70();
  sub_23F1217E8(&qword_256DFFB78);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F125F70();
  sub_23F1217E8(&qword_256DFFB80);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F126058();
  v10 = sub_23F1217E8(&qword_256DFFB88);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1316E4();
  sub_23F12545C(v2, v2[3]);
  sub_23F1638A8();
  sub_23F268888();
  if (!v0)
  {
    v12 = sub_23F2686D8();
    v13 = *(_QWORD *)(v12 + 16);
    v14 = v10;
    if (v13)
    {
      v15 = *(unsigned __int8 *)(v12 + 32);
      sub_23F15E2D0(1, v13, v12, v12 + 32, 0, (2 * v13) | 1);
      v17 = v16;
      v19 = v18;
      sub_23F13186C();
      if (v17 == v19 >> 1)
        __asm { BR              X9 }
      v14 = v10;
    }
    sub_23F15EDB8();
    sub_23F131B30();
    v21 = v20;
    sub_23F1217E8(&qword_256DFF4B8);
    *v21 = &type metadata for ResponseOutput.DialogType;
    sub_23F268648();
    sub_23F15E6B4();
    v22 = sub_23F16BD80();
    v23(v22);
    swift_willThrow();
    sub_23F15E5EC();
    v24 = sub_23F16BCE4();
    v25(v24, v14);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
  sub_23F1313FC();
}

void sub_23F161E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F16BD94();
  v2 = *(_QWORD *)(v1 - 96);
  sub_23F16BBA4();
  if (v0)
  {
    sub_23F15E5EC();
    sub_23F16BD2C();
    JUMPOUT(0x23F161E08);
  }
  sub_23F16BBC8();
  v3 = *(_QWORD *)(v1 - 216);
  sub_23F16BA64(*(_QWORD *)(v1 - 208));
  sub_23F15E5EC();
  sub_23F15E588(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  JUMPOUT(0x23F1620CCLL);
}

void sub_23F161E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F16BD68();
  v2 = *(_QWORD *)(v1 - 96);
  sub_23F16BBA4();
  if (v0)
  {
    sub_23F15E5EC();
    sub_23F16BD2C();
    JUMPOUT(0x23F161E08);
  }
  v3 = sub_23F16BBC8();
  v4 = *(_QWORD *)(v1 - 216);
  v5 = v3;
  v7 = v6;
  sub_23F16BA64(*(_QWORD *)(v1 - 184));
  sub_23F15E5EC();
  sub_23F126038(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v8 = *(_QWORD *)(v1 - 104);
  v9 = *(_QWORD *)(v1 - 136);
  *(_QWORD *)v9 = v5;
  *(_QWORD *)(v9 + 8) = v7;
  *(_BYTE *)(v9 + 16) = 2;
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v8);
  JUMPOUT(0x23F161E14);
}

void sub_23F161EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F16BD44();
  v2 = *(_QWORD *)(v1 - 160);
  v3 = *(_QWORD *)(v1 - 96);
  sub_23F16BBA4();
  if (v0)
  {
    sub_23F15E5EC();
    sub_23F16BCE4();
    JUMPOUT(0x23F161EF8);
  }
  sub_23F15E7D4(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 192) + 8));
  sub_23F15E5EC();
  sub_23F126038(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 216) + 8));
  v4 = *(_QWORD *)(v1 - 104);
  v5 = *(_QWORD *)(v1 - 136);
  *(_QWORD *)v5 = 0;
  *(_QWORD *)(v5 + 8) = 0;
  *(_BYTE *)(v5 + 16) = 3;
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v4);
  JUMPOUT(0x23F161E14);
}

void sub_23F161F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  sub_23F16BD74();
  v4 = *(_QWORD *)(v3 - 144);
  v5 = *(_QWORD *)(v3 - 96);
  sub_23F16BBA4();
  if (v1)
  {
    sub_23F15E5EC();
    v6 = sub_23F16BCE4();
    v7(v6, v0);
    JUMPOUT(0x23F161E10);
  }
  sub_23F15E588(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F15E5EC();
  sub_23F126038(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 216) + 8));
  v8 = *(_QWORD *)(v3 - 104);
  v9 = *(_QWORD *)(v3 - 136);
  *(_QWORD *)v9 = 1;
  *(_QWORD *)(v9 + 8) = 0;
  *(_BYTE *)(v9 + 16) = 3;
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v8);
  JUMPOUT(0x23F161E14);
}

void sub_23F1620E8()
{
  ResponseOutput.DialogType.init(from:)();
}

void sub_23F1620FC()
{
  ResponseOutput.DialogType.encode(to:)();
}

uint64_t ResponseOutput.ResponseType.hash(into:)()
{
  return sub_23F268840();
}

BOOL static ResponseOutput.ResponseType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23F162150(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6974656C706D6F63 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6769626D61736964 && a2 == 0xEE006E6F69746175;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x616D7269666E6F63 && a2 == 0xEC0000006E6F6974)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F1622E4(char a1)
{
  if (!a1)
    return 0x6974656C706D6F63;
  if (a1 == 1)
    return 0x6769626D61736964;
  return 0x616D7269666E6F63;
}

uint64_t sub_23F162354()
{
  char *v0;

  return sub_23F1622E4(*v0);
}

uint64_t sub_23F16235C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F162150(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F162380()
{
  sub_23F163A10();
  return sub_23F2688B8();
}

uint64_t sub_23F1623A8()
{
  sub_23F163A10();
  return sub_23F2688C4();
}

uint64_t sub_23F1623D0()
{
  sub_23F163AC4();
  return sub_23F2688B8();
}

uint64_t sub_23F1623F8()
{
  sub_23F163AC4();
  return sub_23F2688C4();
}

uint64_t sub_23F162420()
{
  sub_23F163A4C();
  return sub_23F2688B8();
}

uint64_t sub_23F162448()
{
  sub_23F163A4C();
  return sub_23F2688C4();
}

uint64_t sub_23F162470()
{
  sub_23F163A88();
  return sub_23F2688B8();
}

uint64_t sub_23F162498()
{
  sub_23F163A88();
  return sub_23F2688C4();
}

void ResponseOutput.ResponseType.encode(to:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F131874();
  v4 = v0;
  v6 = v5;
  v7 = sub_23F1217E8(&qword_256DFFB90);
  v19 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F125F70();
  v18 = v9;
  v10 = sub_23F1217E8(&qword_256DFFB98);
  v16 = *(_QWORD *)(v10 - 8);
  v17 = v10;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F15EB6C();
  v15 = sub_23F1217E8(&qword_256DFFBA0);
  v12 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  sub_23F126058();
  v21 = *(_QWORD *)(sub_23F1217E8(&qword_256DFFBA8) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F15E50C();
  v14 = *v4;
  sub_23F12545C(v6, v6[3]);
  sub_23F163A10();
  sub_23F15EBF0();
  if (v14)
  {
    if (v14 == 1)
    {
      sub_23F16BDA0();
      sub_23F15E6E8();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v3, v17);
    }
    else
    {
      sub_23F16BD5C();
      sub_23F15E6E8();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    }
  }
  else
  {
    sub_23F163AC4();
    sub_23F15E6E8();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v15);
  }
  sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  sub_23F1313FC();
}

void ResponseOutput.ResponseType.hashValue.getter()
{
  sub_23F1317B8();
  sub_23F15EA08();
  sub_23F1318A0();
  sub_23F1318E4();
}

void ResponseOutput.ResponseType.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  sub_23F131874();
  v3 = v2;
  v31 = v4;
  v30 = sub_23F1217E8(&qword_256DFFBD0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F125F70();
  v6 = sub_23F1217E8(&qword_256DFFBD8);
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F125F70();
  v32 = v8;
  v27 = sub_23F1217E8(&qword_256DFFBE0);
  MEMORY[0x24BDAC7A8](v27);
  sub_23F15EB6C();
  v9 = sub_23F1217E8(&qword_256DFFBE8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F1319C8();
  sub_23F12545C(v3, v3[3]);
  sub_23F163A10();
  sub_23F268888();
  if (v0)
    goto LABEL_10;
  v33 = (uint64_t)v3;
  v11 = v1;
  v12 = sub_23F2686D8();
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13
    || (v14 = *(unsigned __int8 *)(v12 + 32),
        sub_23F15E2D0(1, v13, v12, v12 + 32, 0, (2 * v13) | 1),
        v16 = v15,
        v18 = v17,
        swift_bridgeObjectRelease(),
        v16 != v18 >> 1))
  {
    v20 = sub_23F15EDB8();
    sub_23F131B30();
    v22 = v21;
    sub_23F1217E8(&qword_256DFF4B8);
    *v22 = &type metadata for ResponseOutput.ResponseType;
    sub_23F268648();
    sub_23F15E6B4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    sub_23F16BDC0();
    sub_23F15E444(v11, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v3 = (_QWORD *)v33;
LABEL_10:
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
    goto LABEL_11;
  }
  if (v14)
  {
    v34 = v14;
    if (v14 == 1)
    {
      sub_23F16BDA0();
      sub_23F16BAF8();
      v19 = v31;
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v29);
    }
    else
    {
      sub_23F16BD5C();
      sub_23F16BAF8();
      v19 = v31;
      v25 = sub_23F15ECE4();
      v26(v25, v30);
    }
    swift_unknownObjectRelease();
    sub_23F15E7D4(v11, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  }
  else
  {
    sub_23F163AC4();
    sub_23F16BAF8();
    v34 = 0;
    v23 = sub_23F15ECE4();
    v24(v23, v27);
    sub_23F16BDC0();
    sub_23F15E7D4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v19 = v31;
  }
  *v19 = v34;
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v33);
LABEL_11:
  sub_23F1313FC();
}

void sub_23F162A4C()
{
  ResponseOutput.ResponseType.init(from:)();
}

void sub_23F162A60()
{
  ResponseOutput.ResponseType.encode(to:)();
}

uint64_t ResponseOutput.visualOutput.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ResponseOutput.printedDialogOutput.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_23F16BBD4(v2, v3, *(_BYTE *)(v1 + 24), (uint64_t)a1);
}

uint64_t ResponseOutput.spokenDialogOutput.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  *a1 = v2;
  a1[1] = v3;
  return sub_23F16BBD4(v2, v3, *(_BYTE *)(v1 + 48), (uint64_t)a1);
}

void ResponseOutput.responseType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 49);
}

uint64_t ResponseOutput.resultStatementIds.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 ResponseOutput.init(visualOutput:printedDialogOutput:spokenDialogOutput:responseType:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v5;
  unsigned __int8 v6;
  char v7;
  __n128 result;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = a3[1].n128_u8[0];
  v7 = *a4;
  *(_QWORD *)a5 = a1;
  *(_OWORD *)(a5 + 8) = *(_OWORD *)a2;
  *(_BYTE *)(a5 + 24) = v5;
  result = *a3;
  *(__n128 *)(a5 + 32) = *a3;
  *(_BYTE *)(a5 + 48) = v6;
  *(_BYTE *)(a5 + 49) = v7;
  *(_QWORD *)(a5 + 56) = MEMORY[0x24BEE4AF8];
  return result;
}

void ResponseOutput.init(visualOutput:printedDialogOutput:spokenDialogOutput:)(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  sub_23F16BB4C(a1, a2, a3, a4);
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE4AF8];
}

void ResponseOutput.init(visualOutput:printedDialogOutput:spokenDialogOutput:resultStatementIds:)(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  sub_23F16BB4C(a1, a2, a3, a4);
  *(_QWORD *)(v5 + 56) = v4;
}

void static ResponseOutput.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v8 = *(unsigned __int8 *)(a1 + 24);
  v9 = *(unsigned __int8 *)(a1 + 48);
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(_QWORD *)(a2 + 16);
  v12 = *(unsigned __int8 *)(a2 + 24);
  v13 = *(unsigned __int8 *)(a2 + 48);
  LODWORD(v42) = *(unsigned __int8 *)(a2 + 49);
  HIDWORD(v42) = *(unsigned __int8 *)(a1 + 49);
  sub_23F129EB8(*(_QWORD *)a1, *(_QWORD *)a2, a3, a4, a5, a6, a7, a8, v38, *(_QWORD *)(a2 + 56), *(_QWORD *)(a1 + 56), v42, *(_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 40), v46, v47, v48, v49, v50,
    v51);
  if ((v14 & 1) != 0)
  {
    if (v8 == 255)
    {
      if (v12 == 255)
      {
LABEL_7:
        if (v9 == 255)
        {
          if (v13 == 255)
          {
LABEL_14:
            if (HIDWORD(v43) == (_DWORD)v43)
              sub_23F129ECC(v41, v40);
            return;
          }
        }
        else
        {
          if (v13 != 255)
          {
            v25 = sub_23F16BB7C();
            sub_23F16BDAC(v25, v26, v27, v28, v29, v30, v31, v32, v39);
            v34 = v33;
            sub_23F16BCFC();
            sub_23F16BD0C();
            if ((v34 & 1) == 0)
              return;
            goto LABEL_14;
          }
          sub_23F16BB7C();
          sub_23F16BCFC();
        }
        sub_23F163B00(v44, v45, v13);
        sub_23F16BD0C();
        v35 = v44;
        v36 = v45;
        v37 = v13;
LABEL_18:
        sub_23F163B14(v35, v36, v37);
        return;
      }
    }
    else
    {
      if (v12 != 255)
      {
        v15 = sub_23F16BB24();
        sub_23F16BDAC(v15, v16, v17, v18, v19, v20, v21, v22, v39);
        v24 = v23;
        sub_23F16BC94();
        sub_23F16BCA4();
        if ((v24 & 1) == 0)
          return;
        goto LABEL_7;
      }
      sub_23F16BB24();
      sub_23F16BC94();
    }
    sub_23F163B00(v10, v11, v12);
    sub_23F16BCA4();
    v35 = v10;
    v36 = v11;
    v37 = v12;
    goto LABEL_18;
  }
}

uint64_t sub_23F162CE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x754F6C6175736976 && a2 == 0xEC00000074757074;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023F2939C0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023F2939E0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = a1 == 0x65736E6F70736572 && a2 == 0xEC00000065707954;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x800000023F293A00)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      v7 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 4;
      else
        return 5;
    }
  }
}

uint64_t sub_23F162F0C()
{
  return 5;
}

uint64_t sub_23F162F14(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F162F50 + 4 * byte_23F26C8B6[a1]))(0x754F6C6175736976, 0xEC00000074757074);
}

unint64_t sub_23F162F50()
{
  return 0xD000000000000013;
}

unint64_t sub_23F162F70()
{
  return 0xD000000000000012;
}

void sub_23F162FB8()
{
  sub_23F268834();
  sub_23F15EA08();
  sub_23F1318A0();
  sub_23F1318E4();
}

uint64_t sub_23F162FE4()
{
  unsigned __int8 *v0;

  return sub_23F162F14(*v0);
}

uint64_t sub_23F162FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F162CE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F163010@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F162F0C();
  *a1 = result;
  return result;
}

uint64_t sub_23F163034()
{
  sub_23F163B28();
  return sub_23F2688B8();
}

uint64_t sub_23F16305C()
{
  sub_23F163B28();
  return sub_23F2688C4();
}

void ResponseOutput.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256DFFBF0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1319C8();
  sub_23F12545C(v4, v4[3]);
  sub_23F163B28();
  sub_23F15EBF0();
  sub_23F1217E8(&qword_256DFFC00);
  sub_23F163C18(&qword_256DFFC08, &qword_256DFFC10, (uint64_t)&protocol conformance descriptor for ResponseOutput.VisualOutput, MEMORY[0x24BEE12A0]);
  sub_23F16BACC();
  if (!v0)
  {
    sub_23F163B64();
    sub_23F16BB08();
    sub_23F16BB08();
    sub_23F163BA0();
    sub_23F268750();
    sub_23F1217E8(&qword_256DFFC28);
    sub_23F163D14(&qword_256DFFC30, (uint64_t (*)(void))sub_23F163BDC, MEMORY[0x24BEE12A0]);
    sub_23F16BACC();
  }
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F1313FC();
}

void ResponseOutput.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  sub_23F131874();
  v2 = v1;
  v4 = v3;
  sub_23F1217E8(&qword_256DFFC40);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1316E4();
  sub_23F12545C(v2, v2[3]);
  sub_23F163B28();
  sub_23F268888();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F1217E8(&qword_256DFFC00);
    sub_23F163C18(&qword_256DFFC48, &qword_256DFFC50, (uint64_t)&protocol conformance descriptor for ResponseOutput.VisualOutput, MEMORY[0x24BEE12D0]);
    sub_23F16BAA8();
    sub_23F163C9C();
    swift_bridgeObjectRetain();
    sub_23F16BBAC();
    sub_23F268678();
    sub_23F163B00(v6, v7, v8);
    sub_23F16BBAC();
    sub_23F268678();
    sub_23F163B00(v6, v7, v8);
    sub_23F163CD8();
    sub_23F15E79C();
    sub_23F1217E8(&qword_256DFFC28);
    sub_23F163D14(&qword_256DFFC68, (uint64_t (*)(void))sub_23F163D7C, MEMORY[0x24BEE12D0]);
    sub_23F16BAA8();
    sub_23F16BA3C();
    swift_bridgeObjectRetain();
    sub_23F163B00(v6, v7, v8);
    sub_23F163B00(v6, v7, v8);
    sub_23F1315C4();
    sub_23F16BCB4(v6, v7);
    sub_23F16BCB4(v6, v7);
    sub_23F13186C();
    *(_QWORD *)v4 = v6;
    *(_QWORD *)(v4 + 8) = v6;
    *(_QWORD *)(v4 + 16) = v7;
    *(_BYTE *)(v4 + 24) = v8;
    *(_QWORD *)(v4 + 32) = v6;
    *(_QWORD *)(v4 + 40) = v7;
    *(_BYTE *)(v4 + 48) = v8;
    *(_BYTE *)(v4 + 49) = v6;
    *(_QWORD *)(v4 + 56) = v6;
    sub_23F131BF4();
    sub_23F13186C();
    sub_23F163B14(v6, v7, v8);
    sub_23F16BCB4(v6, v7);
    swift_bridgeObjectRelease();
  }
  sub_23F1313FC();
}

void sub_23F163628()
{
  ResponseOutput.init(from:)();
}

void sub_23F16363C()
{
  ResponseOutput.encode(to:)();
}

uint64_t static ResponseOutput.VisualOutput.build(with:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F1217E8(&qword_256DFFC78);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23F15E5B0();
  type metadata accessor for RGPluginModel(v5);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1316E4();
  sub_23F267C4C();
  swift_allocObject();
  sub_23F267C40();
  sub_23F125DE4(&qword_256DFFA20, type metadata accessor for RGPluginModel, (uint64_t)&protocol conformance descriptor for RGPluginModel);
  sub_23F267C34();
  swift_release();
  sub_23F16BD38(v1, 0);
  sub_23F132624(v1, v2, type metadata accessor for RGPluginModel);
  sub_23F132624(v2, a1, type metadata accessor for RGPluginModel);
  v7 = type metadata accessor for ResponseOutput.VisualOutput(0);
  sub_23F1317E0();
  swift_storeEnumTagMultiPayload();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, 0, 1, v7);
}

unint64_t sub_23F1637F4()
{
  unint64_t result;

  result = qword_256DFFAE0;
  if (!qword_256DFFAE0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseOutput.VisualOutput.PluginSnippetOutputPayload, &type metadata for ResponseOutput.VisualOutput.PluginSnippetOutputPayload);
    atomic_store(result, (unint64_t *)&qword_256DFFAE0);
  }
  return result;
}

unint64_t sub_23F163830()
{
  unint64_t result;

  result = qword_256DFFAF0;
  if (!qword_256DFFAF0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseOutput.VisualOutput.InAppResponseOutputPayload, &type metadata for ResponseOutput.VisualOutput.InAppResponseOutputPayload);
    atomic_store(result, (unint64_t *)&qword_256DFFAF0);
  }
  return result;
}

unint64_t sub_23F16386C()
{
  unint64_t result;

  result = qword_256DFFAF8;
  if (!qword_256DFFAF8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseOutput.VisualOutput.LiveActivityOutputPayload, &type metadata for ResponseOutput.VisualOutput.LiveActivityOutputPayload);
    atomic_store(result, (unint64_t *)&qword_256DFFAF8);
  }
  return result;
}

unint64_t sub_23F1638A8()
{
  unint64_t result;

  result = qword_256DFFB30;
  if (!qword_256DFFB30)
  {
    result = MEMORY[0x242667160](&unk_23F26DFE0, &type metadata for ResponseOutput.DialogType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFB30);
  }
  return result;
}

unint64_t sub_23F1638E4()
{
  unint64_t result;

  result = qword_256DFFB38;
  if (!qword_256DFFB38)
  {
    result = MEMORY[0x242667160](&unk_23F26DF90, &type metadata for ResponseOutput.DialogType.SuppressedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFB38);
  }
  return result;
}

unint64_t sub_23F163920()
{
  unint64_t result;

  result = qword_256DFFB40;
  if (!qword_256DFFB40)
  {
    result = MEMORY[0x242667160](&unk_23F26DF40, &type metadata for ResponseOutput.DialogType.UnableToGenerateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFB40);
  }
  return result;
}

unint64_t sub_23F16395C()
{
  unint64_t result;

  result = qword_256DFFB48;
  if (!qword_256DFFB48)
  {
    result = MEMORY[0x242667160](&unk_23F26DEF0, &type metadata for ResponseOutput.DialogType.GeneratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFB48);
  }
  return result;
}

unint64_t sub_23F163998()
{
  unint64_t result;

  result = qword_256DFFB50;
  if (!qword_256DFFB50)
  {
    result = MEMORY[0x242667160](&unk_23F26DEA0, &type metadata for ResponseOutput.DialogType.SonicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFB50);
  }
  return result;
}

unint64_t sub_23F1639D4()
{
  unint64_t result;

  result = qword_256DFFB58;
  if (!qword_256DFFB58)
  {
    result = MEMORY[0x242667160](&unk_23F26DE50, &type metadata for ResponseOutput.DialogType.StaticTextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFB58);
  }
  return result;
}

unint64_t sub_23F163A10()
{
  unint64_t result;

  result = qword_256DFFBB0;
  if (!qword_256DFFBB0)
  {
    result = MEMORY[0x242667160](&unk_23F26DE00, &type metadata for ResponseOutput.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFBB0);
  }
  return result;
}

unint64_t sub_23F163A4C()
{
  unint64_t result;

  result = qword_256DFFBB8;
  if (!qword_256DFFBB8)
  {
    result = MEMORY[0x242667160](&unk_23F26DDB0, &type metadata for ResponseOutput.ResponseType.ConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFBB8);
  }
  return result;
}

unint64_t sub_23F163A88()
{
  unint64_t result;

  result = qword_256DFFBC0;
  if (!qword_256DFFBC0)
  {
    result = MEMORY[0x242667160](&unk_23F26DD60, &type metadata for ResponseOutput.ResponseType.DisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFBC0);
  }
  return result;
}

unint64_t sub_23F163AC4()
{
  unint64_t result;

  result = qword_256DFFBC8;
  if (!qword_256DFFBC8)
  {
    result = MEMORY[0x242667160](&unk_23F26DD10, &type metadata for ResponseOutput.ResponseType.CompletionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFBC8);
  }
  return result;
}

uint64_t sub_23F163B00(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_23F135CDC(a1, a2, a3);
  return a1;
}

uint64_t sub_23F163B14(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_23F137270(a1, a2, a3);
  return a1;
}

unint64_t sub_23F163B28()
{
  unint64_t result;

  result = qword_256DFFBF8;
  if (!qword_256DFFBF8)
  {
    result = MEMORY[0x242667160](&unk_23F26DCC0, &type metadata for ResponseOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFBF8);
  }
  return result;
}

unint64_t sub_23F163B64()
{
  unint64_t result;

  result = qword_256DFFC18;
  if (!qword_256DFFC18)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseOutput.DialogType, &type metadata for ResponseOutput.DialogType);
    atomic_store(result, (unint64_t *)&qword_256DFFC18);
  }
  return result;
}

unint64_t sub_23F163BA0()
{
  unint64_t result;

  result = qword_256DFFC20;
  if (!qword_256DFFC20)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseOutput.ResponseType, &type metadata for ResponseOutput.ResponseType);
    atomic_store(result, (unint64_t *)&qword_256DFFC20);
  }
  return result;
}

unint64_t sub_23F163BDC()
{
  unint64_t result;

  result = qword_256DFFC38;
  if (!qword_256DFFC38)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for StatementID, &type metadata for StatementID);
    atomic_store(result, (unint64_t *)&qword_256DFFC38);
  }
  return result;
}

uint64_t sub_23F163C18(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = sub_23F125540(&qword_256DFFC00);
    sub_23F125DE4(a2, type metadata accessor for ResponseOutput.VisualOutput, a3);
    v11 = v10;
    result = MEMORY[0x242667160](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23F163C9C()
{
  unint64_t result;

  result = qword_256DFFC58;
  if (!qword_256DFFC58)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseOutput.DialogType, &type metadata for ResponseOutput.DialogType);
    atomic_store(result, (unint64_t *)&qword_256DFFC58);
  }
  return result;
}

unint64_t sub_23F163CD8()
{
  unint64_t result;

  result = qword_256DFFC60;
  if (!qword_256DFFC60)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseOutput.ResponseType, &type metadata for ResponseOutput.ResponseType);
    atomic_store(result, (unint64_t *)&qword_256DFFC60);
  }
  return result;
}

uint64_t sub_23F163D14(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_23F125540(&qword_256DFFC28);
    v8 = a2();
    result = MEMORY[0x242667160](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23F163D7C()
{
  unint64_t result;

  result = qword_256DFFC70;
  if (!qword_256DFFC70)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for StatementID, &type metadata for StatementID);
    atomic_store(result, (unint64_t *)&qword_256DFFC70);
  }
  return result;
}

unint64_t sub_23F163DBC()
{
  unint64_t result;

  result = qword_256DFFC80;
  if (!qword_256DFFC80)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ResponseOutput.ResponseType, &type metadata for ResponseOutput.ResponseType);
    atomic_store(result, (unint64_t *)&qword_256DFFC80);
  }
  return result;
}

uint64_t destroy for ResponseOutput(uint64_t a1)
{
  int v2;
  int v3;

  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 24);
  if (v2 != 255)
    sub_23F137270(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), v2);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 != 255)
    sub_23F137270(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v3);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ResponseOutput(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(unsigned __int8 *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *v4 = *(_OWORD *)(a2 + 8);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 16);
    sub_23F135CDC(v6, v7, v5);
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 24) = v5;
  }
  v8 = *(unsigned __int8 *)(a2 + 48);
  if (v8 == 255)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    sub_23F135CDC(v9, v10, *(_BYTE *)(a2 + 48));
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_BYTE *)(a1 + 48) = v8;
  }
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ResponseOutput(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 *v16;
  __int128 *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 8);
  v5 = (__int128 *)(a2 + 8);
  v6 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v6 == 255)
    {
      v15 = *v5;
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *v4 = v15;
    }
    else
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(_QWORD *)(a2 + 16);
      sub_23F135CDC(v12, v13, *(_BYTE *)(a2 + 24));
      *(_QWORD *)(a1 + 8) = v12;
      *(_QWORD *)(a1 + 16) = v13;
      *(_BYTE *)(a1 + 24) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_23F1640D0(a1 + 8);
    v14 = *(_BYTE *)(a2 + 24);
    *v4 = *v5;
    *(_BYTE *)(a1 + 24) = v14;
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(_QWORD *)(a2 + 16);
    sub_23F135CDC(v7, v8, *(_BYTE *)(a2 + 24));
    v9 = *(_QWORD *)(a1 + 8);
    v10 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    v11 = *(_BYTE *)(a1 + 24);
    *(_BYTE *)(a1 + 24) = v6;
    sub_23F137270(v9, v10, v11);
  }
  v16 = (__int128 *)(a1 + 32);
  v17 = (__int128 *)(a2 + 32);
  v18 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) == 255)
  {
    if (v18 == 255)
    {
      v27 = *v17;
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *v16 = v27;
    }
    else
    {
      v24 = *(_QWORD *)(a2 + 32);
      v25 = *(_QWORD *)(a2 + 40);
      sub_23F135CDC(v24, v25, *(_BYTE *)(a2 + 48));
      *(_QWORD *)(a1 + 32) = v24;
      *(_QWORD *)(a1 + 40) = v25;
      *(_BYTE *)(a1 + 48) = v18;
    }
  }
  else if (v18 == 255)
  {
    sub_23F1640D0(a1 + 32);
    v26 = *(_BYTE *)(a2 + 48);
    *v16 = *v17;
    *(_BYTE *)(a1 + 48) = v26;
  }
  else
  {
    v19 = *(_QWORD *)(a2 + 32);
    v20 = *(_QWORD *)(a2 + 40);
    sub_23F135CDC(v19, v20, *(_BYTE *)(a2 + 48));
    v21 = *(_QWORD *)(a1 + 32);
    v22 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 32) = v19;
    *(_QWORD *)(a1 + 40) = v20;
    v23 = *(_BYTE *)(a1 + 48);
    *(_BYTE *)(a1 + 48) = v18;
    sub_23F137270(v21, v22, v23);
  }
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F1640D0(uint64_t a1)
{
  destroy for ResponseOutput.DialogType(a1);
  return a1;
}

uint64_t assignWithTake for ResponseOutput(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a1 + 24);
  if (v5 != 255)
  {
    v6 = *(unsigned __int8 *)(a2 + 24);
    if (v6 != 255)
    {
      v7 = *(_QWORD *)(a1 + 8);
      v8 = *(_QWORD *)(a1 + 16);
      *(_OWORD *)(a1 + 8) = *v4;
      *(_BYTE *)(a1 + 24) = v6;
      sub_23F137270(v7, v8, v5);
      goto LABEL_6;
    }
    sub_23F1640D0(a1 + 8);
  }
  *(_OWORD *)(a1 + 8) = *v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
LABEL_6:
  v9 = (_OWORD *)(a2 + 32);
  v10 = *(unsigned __int8 *)(a1 + 48);
  if (v10 == 255)
  {
LABEL_10:
    *(_OWORD *)(a1 + 32) = *v9;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    goto LABEL_11;
  }
  v11 = *(unsigned __int8 *)(a2 + 48);
  if (v11 == 255)
  {
    sub_23F1640D0(a1 + 32);
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v9;
  *(_BYTE *)(a1 + 48) = v11;
  sub_23F137270(v12, v13, v10);
LABEL_11:
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseOutput(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseOutput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResponseOutput()
{
  sub_23F131844();
}

uint64_t initializeBufferWithCopyOfBuffer for ResponseOutput.VisualOutput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23F1642EC + 4 * byte_23F26C8BB[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for ResponseOutput.VisualOutput(uint64_t *a1)
{
  uint64_t result;
  uint64_t v3;
  int *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t *, uint64_t);
  unint64_t v28;
  void (*v29)(uint64_t *, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      goto LABEL_5;
    case 2:
      type metadata accessor for RGPluginModel(0);
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          v3 = sub_23F267D84();
          v29 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
          v29(a1, v3);
          v4 = (int *)type metadata accessor for RGDisambiguationModel(0);
          v29((uint64_t *)((char *)a1 + v4[5]), v3);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v29((uint64_t *)((char *)a1 + v4[9]), v3);
          swift_bridgeObjectRelease();
          goto LABEL_23;
        case 1:
          v3 = sub_23F267D84();
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v3))
            (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
          v5 = (int *)type metadata accessor for RGActionConfirmationModel(0);
          v29 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
          v29((uint64_t *)((char *)a1 + v5[5]), v3);
          swift_bridgeObjectRelease();
          v6 = (char *)a1 + v5[7];
          v7 = sub_23F267CB8();
          v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
          v8(v6, v7);
          v8((char *)a1 + v5[8], v7);
          goto LABEL_25;
        case 2:
          v3 = sub_23F267D84();
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v3))
            (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
          v4 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
          v29 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
          v29((uint64_t *)((char *)a1 + v4[5]), v3);
          swift_bridgeObjectRelease();
          v9 = (char *)a1 + v4[7];
          v10 = sub_23F267CB8();
          v11 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
          v11(v9, v10);
          v11((char *)a1 + v4[8], v10);
          v12 = (uint64_t)a1 + v4[9];
          v13 = (int *)type metadata accessor for RGDisplayRepresentation(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v12, 1, (uint64_t)v13))
          {
            v11((char *)v12, v10);
            v14 = v12 + v13[5];
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v14, 1, v10))
              v11((char *)v14, v10);
            v15 = v12 + v13[6];
            v16 = sub_23F2680C0();
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v15, 1, v16))
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
            swift_bridgeObjectRelease();
            v17 = (uint64_t *)(v12 + v13[8]);
            v18 = v17[1];
            if (v18 >> 60 != 15)
              sub_23F1311B4(*v17, v18);
          }
          v19 = (uint64_t)a1 + v4[10];
          v20 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v19, 1, v20))
          {
            v11((char *)v19, v10);
            v21 = v19 + *(int *)(v20 + 20);
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v21, 1, v10))
              v11((char *)v21, v10);
            v22 = v19 + *(int *)(v20 + 24);
            v23 = sub_23F2680C0();
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v22, 1, v23))
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
          }
LABEL_23:
          v24 = v4[11];
          goto LABEL_26;
        case 3:
          v3 = sub_23F267D84();
          v29 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
          v29(a1, v3);
          v5 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
          v29((uint64_t *)((char *)a1 + v5[5]), v3);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_25:
          v24 = v5[9];
LABEL_26:
          v25 = (uint64_t *)((char *)a1 + v24);
          v26 = v3;
          v27 = (uint64_t (*)(uint64_t *, uint64_t))v29;
          goto LABEL_27;
        case 4:
          return sub_23F1311B4(*a1, a1[1]);
        case 5:
          sub_23F1311B4(*a1, a1[1]);
          swift_bridgeObjectRelease();
          goto LABEL_5;
        case 6:
          sub_23F1311B4(*a1, a1[1]);
          swift_bridgeObjectRelease();
          v28 = a1[5];
          if (v28 >> 60 != 15)
            sub_23F1311B4(a1[4], v28);
          goto LABEL_5;
        case 7:
          v26 = sub_23F2680B4();
          v27 = *(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 8);
          v25 = a1;
LABEL_27:
          result = v27(v25, v26);
          break;
        case 8:
          goto LABEL_5;
        default:
          return result;
      }
      break;
    case 3:
      sub_23F1311B4(*a1, a1[1]);
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for ResponseOutput.VisualOutput()
{
  char *v0;

  v0 = (char *)sub_23F1651EC + 4 * byte_23F26C8DE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23F1651EC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__dst, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v26;
}

uint64_t assignWithCopy for ResponseOutput.VisualOutput(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F125D68(result, type metadata accessor for ResponseOutput.VisualOutput);
    v2 = (char *)&loc_23F165B94 + 4 * byte_23F26C8EB[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

char *initializeWithTake for ResponseOutput.VisualOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  const void *v73;
  char *__dst;
  char *__dsta;
  void (*v76)(char *, char *, uint64_t);
  void (*v77)(char *, char *, uint64_t);
  int *v78;
  int *v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = type metadata accessor for RGPluginModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_23F267D84();
        v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
        v8(a1, a2, v7);
        v9 = (int *)type metadata accessor for RGDisambiguationModel(0);
        v8(&a1[v9[5]], &a2[v9[5]], v7);
        v10 = v9[6];
        v11 = &a1[v10];
        v12 = &a2[v10];
        *(_OWORD *)v11 = *(_OWORD *)v12;
        *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
        *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
        *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
        v8(&a1[v9[9]], &a2[v9[9]], v7);
        *(_OWORD *)&a1[v9[10]] = *(_OWORD *)&a2[v9[10]];
        v8(&a1[v9[11]], &a2[v9[11]], v7);
        goto LABEL_34;
      case 1u:
        v13 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v13))
        {
          v14 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v13);
        }
        v24 = (int *)type metadata accessor for RGActionConfirmationModel(0);
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
        v25(&a1[v24[5]], &a2[v24[5]], v13);
        v26 = v24[6];
        v27 = &a1[v26];
        v28 = &a2[v26];
        *(_OWORD *)v27 = *(_OWORD *)v28;
        *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
        v29 = v24[7];
        v30 = &a1[v29];
        v31 = &a2[v29];
        v32 = sub_23F267CB8();
        v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32);
        v33(v30, v31, v32);
        v33(&a1[v24[8]], &a2[v24[8]], v32);
        v25(&a1[v24[9]], &a2[v24[9]], v13);
        goto LABEL_34;
      case 2u:
        v15 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v15))
        {
          v16 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v15);
        }
        v34 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
        v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
        v81 = v15;
        v80(&a1[v34[5]], &a2[v34[5]], v15);
        v35 = v34[6];
        v36 = &a1[v35];
        v37 = &a2[v35];
        *(_OWORD *)v36 = *(_OWORD *)v37;
        *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
        v38 = v34[7];
        v39 = &a1[v38];
        v40 = &a2[v38];
        v41 = sub_23F267CB8();
        v42 = v39;
        v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32);
        v43(v42, v40, v41);
        v43(&a1[v34[8]], &a2[v34[8]], v41);
        v44 = v34[9];
        v45 = &a1[v44];
        v46 = &a2[v44];
        v47 = (int *)type metadata accessor for RGDisplayRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v46, 1, (uint64_t)v47))
        {
          v48 = sub_23F1217E8(&qword_256DFFC98);
          memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          v78 = v34;
          v43(v45, v46, v41);
          v49 = v47[5];
          __dst = &v45[v49];
          v50 = v43;
          v51 = &v46[v49];
          v76 = v50;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v46[v49], 1, v41))
          {
            v52 = sub_23F1217E8(&qword_256DFFC88);
            memcpy(__dst, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
          }
          else
          {
            v50(__dst, v51, v41);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v41);
          }
          v53 = v47[6];
          __dsta = &v45[v53];
          v54 = (uint64_t)&v46[v53];
          v55 = sub_23F2680C0();
          v73 = (const void *)v54;
          v56 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v54, 1, v55);
          v34 = v78;
          if (v56)
          {
            v57 = sub_23F1217E8(&qword_256DFFC90);
            memcpy(__dsta, v73, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(__dsta, v73, v55);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v55);
          }
          *(_OWORD *)&v45[v47[7]] = *(_OWORD *)&v46[v47[7]];
          *(_OWORD *)&v45[v47[8]] = *(_OWORD *)&v46[v47[8]];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v45, 0, 1, (uint64_t)v47);
          v43 = v76;
        }
        v58 = v34[10];
        v59 = &a1[v58];
        v60 = &a2[v58];
        v61 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v60, 1, v61))
        {
          v62 = sub_23F1217E8(&qword_256DFFCA0);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          v79 = v34;
          v43(v59, v60, v41);
          v63 = *(int *)(v61 + 20);
          v64 = &v59[v63];
          v77 = v43;
          v65 = &v60[v63];
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v60[v63], 1, v41))
          {
            v66 = sub_23F1217E8(&qword_256DFFC88);
            memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
          }
          else
          {
            v77(v64, v65, v41);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v64, 0, 1, v41);
          }
          v67 = *(int *)(v61 + 24);
          v68 = &v59[v67];
          v69 = &v60[v67];
          v70 = sub_23F2680C0();
          v34 = v79;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v69, 1, v70))
          {
            v71 = sub_23F1217E8(&qword_256DFFC90);
            memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v68, 0, 1, v70);
          }
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v59, 0, 1, v61);
        }
        v80(&a1[v34[11]], &a2[v34[11]], v81);
        goto LABEL_34;
      case 3u:
        v17 = sub_23F267D84();
        v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
        v18(a1, a2, v17);
        v19 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
        v18(&a1[v19[5]], &a2[v19[5]], v17);
        v20 = v19[6];
        v21 = &a1[v20];
        v22 = &a2[v20];
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
        *(_QWORD *)&a1[v19[7]] = *(_QWORD *)&a2[v19[7]];
        *(_QWORD *)&a1[v19[8]] = *(_QWORD *)&a2[v19[8]];
        v18(&a1[v19[9]], &a2[v19[9]], v17);
        goto LABEL_34;
      case 7u:
        v23 = sub_23F2680B4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
LABEL_34:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for ResponseOutput.VisualOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  const void *v73;
  char *__dst;
  char *__dsta;
  void (*v76)(char *, char *, uint64_t);
  void (*v77)(char *, char *, uint64_t);
  int *v78;
  int *v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;

  if (a1 != a2)
  {
    sub_23F125D68((uint64_t)a1, type metadata accessor for ResponseOutput.VisualOutput);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = type metadata accessor for RGPluginModel(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v7 = sub_23F267D84();
          v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
          v8(a1, a2, v7);
          v9 = (int *)type metadata accessor for RGDisambiguationModel(0);
          v8(&a1[v9[5]], &a2[v9[5]], v7);
          v10 = v9[6];
          v11 = &a1[v10];
          v12 = &a2[v10];
          *(_OWORD *)v11 = *(_OWORD *)v12;
          *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
          *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
          *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
          v8(&a1[v9[9]], &a2[v9[9]], v7);
          *(_OWORD *)&a1[v9[10]] = *(_OWORD *)&a2[v9[10]];
          v8(&a1[v9[11]], &a2[v9[11]], v7);
          goto LABEL_35;
        case 1u:
          v13 = sub_23F267D84();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v13))
          {
            v14 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v13);
          }
          v24 = (int *)type metadata accessor for RGActionConfirmationModel(0);
          v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
          v25(&a1[v24[5]], &a2[v24[5]], v13);
          v26 = v24[6];
          v27 = &a1[v26];
          v28 = &a2[v26];
          *(_OWORD *)v27 = *(_OWORD *)v28;
          *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
          v29 = v24[7];
          v30 = &a1[v29];
          v31 = &a2[v29];
          v32 = sub_23F267CB8();
          v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32);
          v33(v30, v31, v32);
          v33(&a1[v24[8]], &a2[v24[8]], v32);
          v25(&a1[v24[9]], &a2[v24[9]], v13);
          goto LABEL_35;
        case 2u:
          v15 = sub_23F267D84();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v15))
          {
            v16 = sub_23F1217E8(&qword_256DFEB98);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v15);
          }
          v34 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
          v81 = v15;
          v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
          v80(&a1[v34[5]], &a2[v34[5]], v15);
          v35 = v34[6];
          v36 = &a1[v35];
          v37 = &a2[v35];
          *(_OWORD *)v36 = *(_OWORD *)v37;
          *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
          v38 = v34[7];
          v39 = &a1[v38];
          v40 = &a2[v38];
          v41 = sub_23F267CB8();
          v42 = v39;
          v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32);
          v43(v42, v40, v41);
          v43(&a1[v34[8]], &a2[v34[8]], v41);
          v44 = v34[9];
          v45 = &a1[v44];
          v46 = &a2[v44];
          v47 = (int *)type metadata accessor for RGDisplayRepresentation(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v46, 1, (uint64_t)v47))
          {
            v48 = sub_23F1217E8(&qword_256DFFC98);
            memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          }
          else
          {
            v78 = v34;
            v43(v45, v46, v41);
            v49 = v47[5];
            __dst = &v45[v49];
            v50 = v43;
            v51 = &v46[v49];
            v76 = v50;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v46[v49], 1, v41))
            {
              v52 = sub_23F1217E8(&qword_256DFFC88);
              memcpy(__dst, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
            }
            else
            {
              v50(__dst, v51, v41);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v41);
            }
            v53 = v47[6];
            __dsta = &v45[v53];
            v54 = (uint64_t)&v46[v53];
            v55 = sub_23F2680C0();
            v73 = (const void *)v54;
            v56 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v54, 1, v55);
            v34 = v78;
            if (v56)
            {
              v57 = sub_23F1217E8(&qword_256DFFC90);
              memcpy(__dsta, v73, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(__dsta, v73, v55);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v55);
            }
            *(_OWORD *)&v45[v47[7]] = *(_OWORD *)&v46[v47[7]];
            *(_OWORD *)&v45[v47[8]] = *(_OWORD *)&v46[v47[8]];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v45, 0, 1, (uint64_t)v47);
            v43 = v76;
          }
          v58 = v34[10];
          v59 = &a1[v58];
          v60 = &a2[v58];
          v61 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v60, 1, v61))
          {
            v62 = sub_23F1217E8(&qword_256DFFCA0);
            memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
          }
          else
          {
            v79 = v34;
            v43(v59, v60, v41);
            v63 = *(int *)(v61 + 20);
            v64 = &v59[v63];
            v77 = v43;
            v65 = &v60[v63];
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v60[v63], 1, v41))
            {
              v66 = sub_23F1217E8(&qword_256DFFC88);
              memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
            }
            else
            {
              v77(v64, v65, v41);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v64, 0, 1, v41);
            }
            v67 = *(int *)(v61 + 24);
            v68 = &v59[v67];
            v69 = &v60[v67];
            v70 = sub_23F2680C0();
            v34 = v79;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v69, 1, v70))
            {
              v71 = sub_23F1217E8(&qword_256DFFC90);
              memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v68, 0, 1, v70);
            }
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v59, 0, 1, v61);
          }
          v80(&a1[v34[11]], &a2[v34[11]], v81);
          goto LABEL_35;
        case 3u:
          v17 = sub_23F267D84();
          v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
          v18(a1, a2, v17);
          v19 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
          v18(&a1[v19[5]], &a2[v19[5]], v17);
          v20 = v19[6];
          v21 = &a1[v20];
          v22 = &a2[v20];
          *(_OWORD *)v21 = *(_OWORD *)v22;
          *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
          *(_QWORD *)&a1[v19[7]] = *(_QWORD *)&a2[v19[7]];
          *(_QWORD *)&a1[v19[8]] = *(_QWORD *)&a2[v19[8]];
          v18(&a1[v19[9]], &a2[v19[9]], v17);
          goto LABEL_35;
        case 7u:
          v23 = sub_23F2680B4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
LABEL_35:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23F1674A0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for RGPluginModel(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void type metadata accessor for ResponseOutput.VisualOutput.LiveActivityOutputPayload()
{
  sub_23F131844();
}

void _s16IntelligenceFlow14MessagePayloadO14RequestContentO11TextContentVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  sub_23F1317F8();
  sub_23F126078();
}

void type metadata accessor for ResponseOutput.VisualOutput.InAppResponseOutputPayload()
{
  sub_23F131844();
}

uint64_t initializeBufferWithCopyOfBuffer for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(uint64_t *a1, uint64_t *a2)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for RGPluginModel(0) - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23F1675DC + 4 * byte_23F26C908[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(uint64_t *a1)
{
  uint64_t result;
  uint64_t v3;
  int *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t *, uint64_t);
  unint64_t v28;
  void (*v29)(uint64_t *, uint64_t);

  type metadata accessor for RGPluginModel(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_23F267D84();
      v29 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v29(a1, v3);
      v4 = (int *)type metadata accessor for RGDisambiguationModel(0);
      v29((uint64_t *)((char *)a1 + v4[5]), v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29((uint64_t *)((char *)a1 + v4[9]), v3);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 1:
      v3 = sub_23F267D84();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v3))
        (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v5 = (int *)type metadata accessor for RGActionConfirmationModel(0);
      v29 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v29((uint64_t *)((char *)a1 + v5[5]), v3);
      swift_bridgeObjectRelease();
      v6 = (char *)a1 + v5[7];
      v7 = sub_23F267CB8();
      v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
      v8(v6, v7);
      v8((char *)a1 + v5[8], v7);
      goto LABEL_22;
    case 2:
      v3 = sub_23F267D84();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v3))
        (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
      v29 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v29((uint64_t *)((char *)a1 + v4[5]), v3);
      swift_bridgeObjectRelease();
      v9 = (char *)a1 + v4[7];
      v10 = sub_23F267CB8();
      v11 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
      v11(v9, v10);
      v11((char *)a1 + v4[8], v10);
      v12 = (uint64_t)a1 + v4[9];
      v13 = (int *)type metadata accessor for RGDisplayRepresentation(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v12, 1, (uint64_t)v13))
      {
        v11((char *)v12, v10);
        v14 = v12 + v13[5];
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v14, 1, v10))
          v11((char *)v14, v10);
        v15 = v12 + v13[6];
        v16 = sub_23F2680C0();
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v15, 1, v16))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
        swift_bridgeObjectRelease();
        v17 = (uint64_t *)(v12 + v13[8]);
        v18 = v17[1];
        if (v18 >> 60 != 15)
          sub_23F1311B4(*v17, v18);
      }
      v19 = (uint64_t)a1 + v4[10];
      v20 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v19, 1, v20))
      {
        v11((char *)v19, v10);
        v21 = v19 + *(int *)(v20 + 20);
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v21, 1, v10))
          v11((char *)v21, v10);
        v22 = v19 + *(int *)(v20 + 24);
        v23 = sub_23F2680C0();
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v22, 1, v23))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      }
LABEL_20:
      v24 = v4[11];
      goto LABEL_23;
    case 3:
      v3 = sub_23F267D84();
      v29 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v29(a1, v3);
      v5 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
      v29((uint64_t *)((char *)a1 + v5[5]), v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_22:
      v24 = v5[9];
LABEL_23:
      v25 = (uint64_t *)((char *)a1 + v24);
      v26 = v3;
      v27 = (uint64_t (*)(uint64_t *, uint64_t))v29;
      goto LABEL_24;
    case 4:
      return sub_23F1311B4(*a1, a1[1]);
    case 5:
      sub_23F1311B4(*a1, a1[1]);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    case 6:
      sub_23F1311B4(*a1, a1[1]);
      swift_bridgeObjectRelease();
      v28 = a1[5];
      if (v28 >> 60 != 15)
        sub_23F1311B4(a1[4], v28);
      goto LABEL_31;
    case 7:
      v26 = sub_23F2680B4();
      v27 = *(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 8);
      v25 = a1;
LABEL_24:
      result = v27(v25, v26);
      break;
    case 8:
LABEL_31:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for ResponseOutput.VisualOutput.SystemSnippetOutputPayload()
{
  char *v0;

  type metadata accessor for RGPluginModel(0);
  v0 = (char *)sub_23F1683E0 + 4 * byte_23F26C924[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F1683E0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__dst, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v28 = sub_23F267D84();
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  v29(v26, v27, v28);
  v30 = (int *)type metadata accessor for RGDisambiguationModel(0);
  v29(v26 + v30[5], v27 + v30[5], v28);
  v31 = v30[6];
  v32 = v26 + v31;
  v33 = v27 + v31;
  *(_DWORD *)v32 = *(_DWORD *)v33;
  v34 = *(_QWORD *)(v33 + 16);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  *(_QWORD *)(v32 + 16) = v34;
  *(_QWORD *)(v26 + v30[7]) = *(_QWORD *)(v27 + v30[7]);
  *(_QWORD *)(v26 + v30[8]) = *(_QWORD *)(v27 + v30[8]);
  v35 = v30[9];
  v36 = v26 + v35;
  v37 = v27 + v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29(v36, v37, v28);
  v38 = v30[10];
  v39 = (_QWORD *)(v26 + v38);
  v40 = (_QWORD *)(v27 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = v30[11];
  v43 = v26 + v42;
  v44 = v27 + v42;
  swift_bridgeObjectRetain();
  v29(v43, v44, v28);
  swift_storeEnumTagMultiPayload();
  return v26;
}

uint64_t assignWithCopy for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F125D68(result, type metadata accessor for RGPluginModel);
    type metadata accessor for RGPluginModel(0);
    v2 = (char *)&loc_23F168CC4 + 4 * byte_23F26C92D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

char *initializeWithTake for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(char *, char *, uint64_t);
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *__dst;
  char *__dsta;
  void (*v72)(char *, char *, uint64_t);
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);

  v4 = type metadata accessor for RGPluginModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v5 = sub_23F267D84();
      v6 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
      v6(a1, a2, v5);
      v7 = (int *)type metadata accessor for RGDisambiguationModel(0);
      v6(&a1[v7[5]], &a2[v7[5]], v5);
      v8 = v7[6];
      v9 = &a1[v8];
      v10 = &a2[v8];
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *(_QWORD *)&a1[v7[7]] = *(_QWORD *)&a2[v7[7]];
      *(_QWORD *)&a1[v7[8]] = *(_QWORD *)&a2[v7[8]];
      v6(&a1[v7[9]], &a2[v7[9]], v5);
      *(_OWORD *)&a1[v7[10]] = *(_OWORD *)&a2[v7[10]];
      v6(&a1[v7[11]], &a2[v7[11]], v5);
      goto LABEL_32;
    case 1u:
      v11 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v11))
      {
        v12 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v11);
      }
      v22 = (int *)type metadata accessor for RGActionConfirmationModel(0);
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
      v23(&a1[v22[5]], &a2[v22[5]], v11);
      v24 = v22[6];
      v25 = &a1[v24];
      v26 = &a2[v24];
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
      v27 = v22[7];
      v28 = &a1[v27];
      v29 = &a2[v27];
      v30 = sub_23F267CB8();
      v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
      v31(v28, v29, v30);
      v31(&a1[v22[8]], &a2[v22[8]], v30);
      v23(&a1[v22[9]], &a2[v22[9]], v11);
      goto LABEL_32;
    case 2u:
      v13 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v13))
      {
        v14 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v13);
      }
      v32 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
      v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
      v76(&a1[v32[5]], &a2[v32[5]], v13);
      v33 = v32[6];
      v34 = &a1[v33];
      v35 = &a2[v33];
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
      v36 = v32[7];
      v37 = &a1[v36];
      v38 = &a2[v36];
      v39 = sub_23F267CB8();
      v40 = v37;
      v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
      v41(v40, v38, v39);
      v41(&a1[v32[8]], &a2[v32[8]], v39);
      v42 = v32[9];
      v43 = &a1[v42];
      v44 = &a2[v42];
      v45 = (int *)type metadata accessor for RGDisplayRepresentation(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v44, 1, (uint64_t)v45))
      {
        v46 = sub_23F1217E8(&qword_256DFFC98);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        v74 = v13;
        v41(v43, v44, v39);
        v47 = v45[5];
        __dst = &v43[v47];
        v48 = v41;
        v49 = &v44[v47];
        v72 = v48;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v44[v47], 1, v39))
        {
          v50 = sub_23F1217E8(&qword_256DFFC88);
          memcpy(__dst, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          v48(__dst, v49, v39);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v39);
        }
        v51 = v45[6];
        __dsta = &v43[v51];
        v52 = &v44[v51];
        v53 = sub_23F2680C0();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v52, 1, v53))
        {
          v54 = sub_23F1217E8(&qword_256DFFC90);
          memcpy(__dsta, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(__dsta, v52, v53);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v53);
        }
        *(_OWORD *)&v43[v45[7]] = *(_OWORD *)&v44[v45[7]];
        *(_OWORD *)&v43[v45[8]] = *(_OWORD *)&v44[v45[8]];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v43, 0, 1, (uint64_t)v45);
        v41 = v72;
        v13 = v74;
      }
      v55 = v32[10];
      v56 = &a1[v55];
      v57 = &a2[v55];
      v58 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v57, 1, v58))
      {
        v59 = sub_23F1217E8(&qword_256DFFCA0);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        v75 = v13;
        v41(v56, v57, v39);
        v60 = *(int *)(v58 + 20);
        v61 = &v56[v60];
        v73 = v41;
        v62 = &v57[v60];
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v57[v60], 1, v39))
        {
          v63 = sub_23F1217E8(&qword_256DFFC88);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          v73(v61, v62, v39);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v61, 0, 1, v39);
        }
        v64 = *(int *)(v58 + 24);
        v65 = &v56[v64];
        v66 = &v57[v64];
        v67 = sub_23F2680C0();
        v13 = v75;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v66, 1, v67))
        {
          v68 = sub_23F1217E8(&qword_256DFFC90);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v65, 0, 1, v67);
        }
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v56, 0, 1, v58);
      }
      v76(&a1[v32[11]], &a2[v32[11]], v13);
      goto LABEL_32;
    case 3u:
      v15 = sub_23F267D84();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(a1, a2, v15);
      v17 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
      v16(&a1[v17[5]], &a2[v17[5]], v15);
      v18 = v17[6];
      v19 = &a1[v18];
      v20 = &a2[v18];
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
      *(_QWORD *)&a1[v17[7]] = *(_QWORD *)&a2[v17[7]];
      *(_QWORD *)&a1[v17[8]] = *(_QWORD *)&a2[v17[8]];
      v16(&a1[v17[9]], &a2[v17[9]], v15);
      goto LABEL_32;
    case 7u:
      v21 = sub_23F2680B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
LABEL_32:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(char *, char *, uint64_t);
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *__dst;
  char *__dsta;
  void (*v72)(char *, char *, uint64_t);
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_23F125D68((uint64_t)a1, type metadata accessor for RGPluginModel);
    v4 = type metadata accessor for RGPluginModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v5 = sub_23F267D84();
        v6 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
        v6(a1, a2, v5);
        v7 = (int *)type metadata accessor for RGDisambiguationModel(0);
        v6(&a1[v7[5]], &a2[v7[5]], v5);
        v8 = v7[6];
        v9 = &a1[v8];
        v10 = &a2[v8];
        *(_OWORD *)v9 = *(_OWORD *)v10;
        *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
        *(_QWORD *)&a1[v7[7]] = *(_QWORD *)&a2[v7[7]];
        *(_QWORD *)&a1[v7[8]] = *(_QWORD *)&a2[v7[8]];
        v6(&a1[v7[9]], &a2[v7[9]], v5);
        *(_OWORD *)&a1[v7[10]] = *(_OWORD *)&a2[v7[10]];
        v6(&a1[v7[11]], &a2[v7[11]], v5);
        goto LABEL_32;
      case 1u:
        v11 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v11))
        {
          v12 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v11);
        }
        v22 = (int *)type metadata accessor for RGActionConfirmationModel(0);
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
        v23(&a1[v22[5]], &a2[v22[5]], v11);
        v24 = v22[6];
        v25 = &a1[v24];
        v26 = &a2[v24];
        *(_OWORD *)v25 = *(_OWORD *)v26;
        *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
        v27 = v22[7];
        v28 = &a1[v27];
        v29 = &a2[v27];
        v30 = sub_23F267CB8();
        v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
        v31(v28, v29, v30);
        v31(&a1[v22[8]], &a2[v22[8]], v30);
        v23(&a1[v22[9]], &a2[v22[9]], v11);
        goto LABEL_32;
      case 2u:
        v13 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v13))
        {
          v14 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v13);
        }
        v32 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
        v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
        v76(&a1[v32[5]], &a2[v32[5]], v13);
        v33 = v32[6];
        v34 = &a1[v33];
        v35 = &a2[v33];
        *(_OWORD *)v34 = *(_OWORD *)v35;
        *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
        v36 = v32[7];
        v37 = &a1[v36];
        v38 = &a2[v36];
        v39 = sub_23F267CB8();
        v40 = v37;
        v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
        v41(v40, v38, v39);
        v41(&a1[v32[8]], &a2[v32[8]], v39);
        v42 = v32[9];
        v43 = &a1[v42];
        v44 = &a2[v42];
        v45 = (int *)type metadata accessor for RGDisplayRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v44, 1, (uint64_t)v45))
        {
          v46 = sub_23F1217E8(&qword_256DFFC98);
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          v74 = v13;
          v41(v43, v44, v39);
          v47 = v45[5];
          __dst = &v43[v47];
          v48 = v41;
          v49 = &v44[v47];
          v72 = v48;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v44[v47], 1, v39))
          {
            v50 = sub_23F1217E8(&qword_256DFFC88);
            memcpy(__dst, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
          }
          else
          {
            v48(__dst, v49, v39);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v39);
          }
          v51 = v45[6];
          __dsta = &v43[v51];
          v52 = &v44[v51];
          v53 = sub_23F2680C0();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v52, 1, v53))
          {
            v54 = sub_23F1217E8(&qword_256DFFC90);
            memcpy(__dsta, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(__dsta, v52, v53);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v53);
          }
          v41 = v72;
          v13 = v74;
          *(_OWORD *)&v43[v45[7]] = *(_OWORD *)&v44[v45[7]];
          *(_OWORD *)&v43[v45[8]] = *(_OWORD *)&v44[v45[8]];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v43, 0, 1, (uint64_t)v45);
        }
        v55 = v32[10];
        v56 = &a1[v55];
        v57 = &a2[v55];
        v58 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v57, 1, v58))
        {
          v59 = sub_23F1217E8(&qword_256DFFCA0);
          memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
          v76(&a1[v32[11]], &a2[v32[11]], v13);
        }
        else
        {
          v75 = v13;
          v41(v56, v57, v39);
          v60 = *(int *)(v58 + 20);
          v61 = &v56[v60];
          v73 = v41;
          v62 = &v57[v60];
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v57[v60], 1, v39))
          {
            v63 = sub_23F1217E8(&qword_256DFFC88);
            memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          }
          else
          {
            v73(v61, v62, v39);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v61, 0, 1, v39);
          }
          v64 = *(int *)(v58 + 24);
          v65 = &v56[v64];
          v66 = &v57[v64];
          v67 = sub_23F2680C0();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v66, 1, v67))
          {
            v68 = sub_23F1217E8(&qword_256DFFC90);
            memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v65, 0, 1, v67);
          }
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v56, 0, 1, v58);
          v76(&a1[v32[11]], &a2[v32[11]], v75);
        }
        goto LABEL_32;
      case 3u:
        v15 = sub_23F267D84();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
        v16(a1, a2, v15);
        v17 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
        v16(&a1[v17[5]], &a2[v17[5]], v15);
        v18 = v17[6];
        v19 = &a1[v18];
        v20 = &a2[v18];
        *(_OWORD *)v19 = *(_OWORD *)v20;
        *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
        *(_QWORD *)&a1[v17[7]] = *(_QWORD *)&a2[v17[7]];
        *(_QWORD *)&a1[v17[8]] = *(_QWORD *)&a2[v17[8]];
        v16(&a1[v17[9]], &a2[v17[9]], v15);
        goto LABEL_32;
      case 7u:
        v21 = sub_23F2680B4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
LABEL_32:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseOutput.VisualOutput.SystemSnippetOutputPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F16A470(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_23F16BBDC();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ResponseOutput.VisualOutput.SystemSnippetOutputPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F16A4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_23F16BBDC();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v2, a2, a2, v4);
}

uint64_t sub_23F16A4D8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for RGPluginModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ResponseOutput.VisualOutput.PluginSnippetOutputPayload()
{
  sub_23F131844();
}

uint64_t destroy for ResponseOutput.DialogType(uint64_t a1)
{
  return sub_23F137270(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s16IntelligenceFlow14ResponseOutputV10DialogTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23F135CDC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ResponseOutput.DialogType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23F135CDC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23F137270(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ResponseOutput.DialogType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23F137270(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseOutput.DialogType(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseOutput.DialogType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23F16A6C4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_23F16A6DC(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void type metadata accessor for ResponseOutput.DialogType()
{
  sub_23F131844();
}

void type metadata accessor for ResponseOutput.ResponseType()
{
  sub_23F131844();
}

ValueMetadata *type metadata accessor for ResponseOutput.CodingKeys()
{
  return &type metadata for ResponseOutput.CodingKeys;
}

uint64_t _s16IntelligenceFlow14ResponseOutputV12ResponseTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F16A778 + 4 * byte_23F26C94B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F16A7AC + 4 * byte_23F26C946[v4]))();
}

uint64_t sub_23F16A7AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F16A7B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F16A7BCLL);
  return result;
}

uint64_t sub_23F16A7C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F16A7D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F16A7D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F16A7DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseOutput.ResponseType.CodingKeys()
{
  return &type metadata for ResponseOutput.ResponseType.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.ResponseType.CompletionCodingKeys()
{
  return &type metadata for ResponseOutput.ResponseType.CompletionCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.ResponseType.DisambiguationCodingKeys()
{
  return &type metadata for ResponseOutput.ResponseType.DisambiguationCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.ResponseType.ConfirmationCodingKeys()
{
  return &type metadata for ResponseOutput.ResponseType.ConfirmationCodingKeys;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionReady.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s16IntelligenceFlow14ResponseOutputV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23F16A8FC + 4 * byte_23F26C955[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23F16A930 + 4 * byte_23F26C950[v4]))();
}

uint64_t sub_23F16A930(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F16A938(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F16A940);
  return result;
}

uint64_t sub_23F16A94C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F16A954);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23F16A958(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F16A960(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseOutput.DialogType.CodingKeys()
{
  return &type metadata for ResponseOutput.DialogType.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.DialogType.StaticTextCodingKeys()
{
  return &type metadata for ResponseOutput.DialogType.StaticTextCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.DialogType.SonicCodingKeys()
{
  return &type metadata for ResponseOutput.DialogType.SonicCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.DialogType.GeneratedCodingKeys()
{
  return &type metadata for ResponseOutput.DialogType.GeneratedCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.DialogType.UnableToGenerateCodingKeys()
{
  return &type metadata for ResponseOutput.DialogType.UnableToGenerateCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.DialogType.SuppressedCodingKeys()
{
  return &type metadata for ResponseOutput.DialogType.SuppressedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for ResponseOutput.VisualOutput.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F16AA1C + 4 * byte_23F26C95F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F16AA50 + 4 * byte_23F26C95A[v4]))();
}

uint64_t sub_23F16AA50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F16AA58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F16AA60);
  return result;
}

uint64_t sub_23F16AA6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F16AA74);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23F16AA78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F16AA80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.CodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.LiveActivityCodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.LiveActivityCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.InAppResponseCodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.InAppResponseCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetCodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.SystemSnippetCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.PluginSnippetCodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.PluginSnippetCodingKeys;
}

uint64_t storeEnumTagSinglePayload for ResponseOutput.VisualOutput.PluginSnippetOutputPayload.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F16AB28 + 4 * byte_23F26C969[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F16AB5C + 4 * byte_23F26C964[v4]))();
}

uint64_t sub_23F16AB5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F16AB64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F16AB6CLL);
  return result;
}

uint64_t sub_23F16AB78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F16AB80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F16AB84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F16AB8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.PluginSnippetOutputPayload.CodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.PluginSnippetOutputPayload.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload.CodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.SystemSnippetOutputPayload.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.InAppResponseOutputPayload.CodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.InAppResponseOutputPayload.CodingKeys;
}

uint64_t _s16IntelligenceFlow14ResponseOutputV10DialogTypeO20StaticTextCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F16AC08 + 4 * byte_23F26C96E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F16AC28 + 4 * byte_23F26C973[v4]))();
}

_BYTE *sub_23F16AC08(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F16AC28(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F16AC30(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F16AC38(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F16AC40(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F16AC48(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.LiveActivityOutputPayload.CodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.LiveActivityOutputPayload.CodingKeys;
}

unint64_t sub_23F16AC68()
{
  unint64_t result;

  result = qword_256DFFDE0;
  if (!qword_256DFFDE0)
  {
    result = MEMORY[0x242667160](&unk_23F26D0F8, &type metadata for ResponseOutput.VisualOutput.LiveActivityOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFDE0);
  }
  return result;
}

unint64_t sub_23F16ACA8()
{
  unint64_t result;

  result = qword_256DFFDE8;
  if (!qword_256DFFDE8)
  {
    result = MEMORY[0x242667160](&unk_23F26D1B0, &type metadata for ResponseOutput.VisualOutput.InAppResponseOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFDE8);
  }
  return result;
}

unint64_t sub_23F16ACE8()
{
  unint64_t result;

  result = qword_256DFFDF0;
  if (!qword_256DFFDF0)
  {
    result = MEMORY[0x242667160](&unk_23F26D268, &type metadata for ResponseOutput.VisualOutput.SystemSnippetOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFDF0);
  }
  return result;
}

unint64_t sub_23F16AD28()
{
  unint64_t result;

  result = qword_256DFFDF8;
  if (!qword_256DFFDF8)
  {
    result = MEMORY[0x242667160](&unk_23F26D320, &type metadata for ResponseOutput.VisualOutput.PluginSnippetOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFDF8);
  }
  return result;
}

unint64_t sub_23F16AD68()
{
  unint64_t result;

  result = qword_256DFFE00;
  if (!qword_256DFFE00)
  {
    result = MEMORY[0x242667160](&unk_23F26D3D8, &type metadata for ResponseOutput.VisualOutput.PluginSnippetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE00);
  }
  return result;
}

unint64_t sub_23F16ADA8()
{
  unint64_t result;

  result = qword_256DFFE08;
  if (!qword_256DFFE08)
  {
    result = MEMORY[0x242667160](&unk_23F26D490, &type metadata for ResponseOutput.VisualOutput.SystemSnippetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE08);
  }
  return result;
}

unint64_t sub_23F16ADE8()
{
  unint64_t result;

  result = qword_256DFFE10;
  if (!qword_256DFFE10)
  {
    result = MEMORY[0x242667160](&unk_23F26D548, &type metadata for ResponseOutput.VisualOutput.InAppResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE10);
  }
  return result;
}

unint64_t sub_23F16AE28()
{
  unint64_t result;

  result = qword_256DFFE18;
  if (!qword_256DFFE18)
  {
    result = MEMORY[0x242667160](&unk_23F26D600, &type metadata for ResponseOutput.VisualOutput.LiveActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE18);
  }
  return result;
}

unint64_t sub_23F16AE68()
{
  unint64_t result;

  result = qword_256DFFE20;
  if (!qword_256DFFE20)
  {
    result = MEMORY[0x242667160](&unk_23F26D6B8, &type metadata for ResponseOutput.VisualOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE20);
  }
  return result;
}

unint64_t sub_23F16AEA8()
{
  unint64_t result;

  result = qword_256DFFE28;
  if (!qword_256DFFE28)
  {
    result = MEMORY[0x242667160](&unk_23F26D810, &type metadata for ResponseOutput.DialogType.GeneratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE28);
  }
  return result;
}

unint64_t sub_23F16AEE8()
{
  unint64_t result;

  result = qword_256DFFE30;
  if (!qword_256DFFE30)
  {
    result = MEMORY[0x242667160](&unk_23F26D8C8, &type metadata for ResponseOutput.DialogType.SonicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE30);
  }
  return result;
}

unint64_t sub_23F16AF28()
{
  unint64_t result;

  result = qword_256DFFE38;
  if (!qword_256DFFE38)
  {
    result = MEMORY[0x242667160](&unk_23F26D980, &type metadata for ResponseOutput.DialogType.StaticTextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE38);
  }
  return result;
}

unint64_t sub_23F16AF68()
{
  unint64_t result;

  result = qword_256DFFE40;
  if (!qword_256DFFE40)
  {
    result = MEMORY[0x242667160](&unk_23F26DA38, &type metadata for ResponseOutput.DialogType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE40);
  }
  return result;
}

unint64_t sub_23F16AFA8()
{
  unint64_t result;

  result = qword_256DFFE48;
  if (!qword_256DFFE48)
  {
    result = MEMORY[0x242667160](&unk_23F26DBE0, &type metadata for ResponseOutput.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE48);
  }
  return result;
}

unint64_t sub_23F16AFE8()
{
  unint64_t result;

  result = qword_256DFFE50;
  if (!qword_256DFFE50)
  {
    result = MEMORY[0x242667160](&unk_23F26DC98, &type metadata for ResponseOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE50);
  }
  return result;
}

unint64_t sub_23F16B028()
{
  unint64_t result;

  result = qword_256DFFE58;
  if (!qword_256DFFE58)
  {
    result = MEMORY[0x242667160](&unk_23F26DC08, &type metadata for ResponseOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE58);
  }
  return result;
}

unint64_t sub_23F16B068()
{
  unint64_t result;

  result = qword_256DFFE60;
  if (!qword_256DFFE60)
  {
    result = MEMORY[0x242667160](&unk_23F26DC30, &type metadata for ResponseOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE60);
  }
  return result;
}

unint64_t sub_23F16B0A8()
{
  unint64_t result;

  result = qword_256DFFE68;
  if (!qword_256DFFE68)
  {
    result = MEMORY[0x242667160](&unk_23F26DB00, &type metadata for ResponseOutput.ResponseType.CompletionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE68);
  }
  return result;
}

unint64_t sub_23F16B0E8()
{
  unint64_t result;

  result = qword_256DFFE70;
  if (!qword_256DFFE70)
  {
    result = MEMORY[0x242667160](&unk_23F26DB28, &type metadata for ResponseOutput.ResponseType.CompletionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE70);
  }
  return result;
}

unint64_t sub_23F16B128()
{
  unint64_t result;

  result = qword_256DFFE78;
  if (!qword_256DFFE78)
  {
    result = MEMORY[0x242667160](&unk_23F26DAB0, &type metadata for ResponseOutput.ResponseType.DisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE78);
  }
  return result;
}

unint64_t sub_23F16B168()
{
  unint64_t result;

  result = qword_256DFFE80;
  if (!qword_256DFFE80)
  {
    result = MEMORY[0x242667160](&unk_23F26DAD8, &type metadata for ResponseOutput.ResponseType.DisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE80);
  }
  return result;
}

unint64_t sub_23F16B1A8()
{
  unint64_t result;

  result = qword_256DFFE88;
  if (!qword_256DFFE88)
  {
    result = MEMORY[0x242667160](&unk_23F26DA60, &type metadata for ResponseOutput.ResponseType.ConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE88);
  }
  return result;
}

unint64_t sub_23F16B1E8()
{
  unint64_t result;

  result = qword_256DFFE90;
  if (!qword_256DFFE90)
  {
    result = MEMORY[0x242667160](&unk_23F26DA88, &type metadata for ResponseOutput.ResponseType.ConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE90);
  }
  return result;
}

unint64_t sub_23F16B228()
{
  unint64_t result;

  result = qword_256DFFE98;
  if (!qword_256DFFE98)
  {
    result = MEMORY[0x242667160](&unk_23F26DB50, &type metadata for ResponseOutput.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFE98);
  }
  return result;
}

unint64_t sub_23F16B268()
{
  unint64_t result;

  result = qword_256DFFEA0;
  if (!qword_256DFFEA0)
  {
    result = MEMORY[0x242667160](&unk_23F26DB78, &type metadata for ResponseOutput.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFEA0);
  }
  return result;
}

unint64_t sub_23F16B2A8()
{
  unint64_t result;

  result = qword_256DFFEA8;
  if (!qword_256DFFEA8)
  {
    result = MEMORY[0x242667160](&unk_23F26D8F0, &type metadata for ResponseOutput.DialogType.StaticTextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFEA8);
  }
  return result;
}

unint64_t sub_23F16B2E8()
{
  unint64_t result;

  result = qword_256DFFEB0;
  if (!qword_256DFFEB0)
  {
    result = MEMORY[0x242667160](&unk_23F26D918, &type metadata for ResponseOutput.DialogType.StaticTextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFEB0);
  }
  return result;
}

unint64_t sub_23F16B328()
{
  unint64_t result;

  result = qword_256DFFEB8;
  if (!qword_256DFFEB8)
  {
    result = MEMORY[0x242667160](&unk_23F26D838, &type metadata for ResponseOutput.DialogType.SonicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFEB8);
  }
  return result;
}

unint64_t sub_23F16B368()
{
  unint64_t result;

  result = qword_256DFFEC0;
  if (!qword_256DFFEC0)
  {
    result = MEMORY[0x242667160](&unk_23F26D860, &type metadata for ResponseOutput.DialogType.SonicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFEC0);
  }
  return result;
}

unint64_t sub_23F16B3A8()
{
  unint64_t result;

  result = qword_256DFFEC8;
  if (!qword_256DFFEC8)
  {
    result = MEMORY[0x242667160](&unk_23F26D780, &type metadata for ResponseOutput.DialogType.GeneratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFEC8);
  }
  return result;
}

unint64_t sub_23F16B3E8()
{
  unint64_t result;

  result = qword_256DFFED0;
  if (!qword_256DFFED0)
  {
    result = MEMORY[0x242667160](&unk_23F26D7A8, &type metadata for ResponseOutput.DialogType.GeneratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFED0);
  }
  return result;
}

unint64_t sub_23F16B428()
{
  unint64_t result;

  result = qword_256DFFED8;
  if (!qword_256DFFED8)
  {
    result = MEMORY[0x242667160](&unk_23F26D730, &type metadata for ResponseOutput.DialogType.UnableToGenerateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFED8);
  }
  return result;
}

unint64_t sub_23F16B468()
{
  unint64_t result;

  result = qword_256DFFEE0;
  if (!qword_256DFFEE0)
  {
    result = MEMORY[0x242667160](&unk_23F26D758, &type metadata for ResponseOutput.DialogType.UnableToGenerateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFEE0);
  }
  return result;
}

unint64_t sub_23F16B4A8()
{
  unint64_t result;

  result = qword_256DFFEE8;
  if (!qword_256DFFEE8)
  {
    result = MEMORY[0x242667160](&unk_23F26D6E0, &type metadata for ResponseOutput.DialogType.SuppressedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFEE8);
  }
  return result;
}

unint64_t sub_23F16B4E8()
{
  unint64_t result;

  result = qword_256DFFEF0;
  if (!qword_256DFFEF0)
  {
    result = MEMORY[0x242667160](&unk_23F26D708, &type metadata for ResponseOutput.DialogType.SuppressedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFEF0);
  }
  return result;
}

unint64_t sub_23F16B528()
{
  unint64_t result;

  result = qword_256DFFEF8;
  if (!qword_256DFFEF8)
  {
    result = MEMORY[0x242667160](&unk_23F26D9A8, &type metadata for ResponseOutput.DialogType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFEF8);
  }
  return result;
}

unint64_t sub_23F16B568()
{
  unint64_t result;

  result = qword_256DFFF00;
  if (!qword_256DFFF00)
  {
    result = MEMORY[0x242667160](&unk_23F26D9D0, &type metadata for ResponseOutput.DialogType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF00);
  }
  return result;
}

unint64_t sub_23F16B5A8()
{
  unint64_t result;

  result = qword_256DFFF08;
  if (!qword_256DFFF08)
  {
    result = MEMORY[0x242667160](&unk_23F26D570, &type metadata for ResponseOutput.VisualOutput.LiveActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF08);
  }
  return result;
}

unint64_t sub_23F16B5E8()
{
  unint64_t result;

  result = qword_256DFFF10;
  if (!qword_256DFFF10)
  {
    result = MEMORY[0x242667160](&unk_23F26D598, &type metadata for ResponseOutput.VisualOutput.LiveActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF10);
  }
  return result;
}

unint64_t sub_23F16B628()
{
  unint64_t result;

  result = qword_256DFFF18;
  if (!qword_256DFFF18)
  {
    result = MEMORY[0x242667160](&unk_23F26D4B8, &type metadata for ResponseOutput.VisualOutput.InAppResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF18);
  }
  return result;
}

unint64_t sub_23F16B668()
{
  unint64_t result;

  result = qword_256DFFF20;
  if (!qword_256DFFF20)
  {
    result = MEMORY[0x242667160](&unk_23F26D4E0, &type metadata for ResponseOutput.VisualOutput.InAppResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF20);
  }
  return result;
}

unint64_t sub_23F16B6A8()
{
  unint64_t result;

  result = qword_256DFFF28;
  if (!qword_256DFFF28)
  {
    result = MEMORY[0x242667160](&unk_23F26D400, &type metadata for ResponseOutput.VisualOutput.SystemSnippetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF28);
  }
  return result;
}

unint64_t sub_23F16B6E8()
{
  unint64_t result;

  result = qword_256DFFF30;
  if (!qword_256DFFF30)
  {
    result = MEMORY[0x242667160](&unk_23F26D428, &type metadata for ResponseOutput.VisualOutput.SystemSnippetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF30);
  }
  return result;
}

unint64_t sub_23F16B728()
{
  unint64_t result;

  result = qword_256DFFF38;
  if (!qword_256DFFF38)
  {
    result = MEMORY[0x242667160](&unk_23F26D348, &type metadata for ResponseOutput.VisualOutput.PluginSnippetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF38);
  }
  return result;
}

unint64_t sub_23F16B768()
{
  unint64_t result;

  result = qword_256DFFF40;
  if (!qword_256DFFF40)
  {
    result = MEMORY[0x242667160](&unk_23F26D370, &type metadata for ResponseOutput.VisualOutput.PluginSnippetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF40);
  }
  return result;
}

unint64_t sub_23F16B7A8()
{
  unint64_t result;

  result = qword_256DFFF48;
  if (!qword_256DFFF48)
  {
    result = MEMORY[0x242667160](&unk_23F26D628, &type metadata for ResponseOutput.VisualOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF48);
  }
  return result;
}

unint64_t sub_23F16B7E8()
{
  unint64_t result;

  result = qword_256DFFF50;
  if (!qword_256DFFF50)
  {
    result = MEMORY[0x242667160](&unk_23F26D650, &type metadata for ResponseOutput.VisualOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF50);
  }
  return result;
}

unint64_t sub_23F16B828()
{
  unint64_t result;

  result = qword_256DFFF58;
  if (!qword_256DFFF58)
  {
    result = MEMORY[0x242667160](&unk_23F26D290, &type metadata for ResponseOutput.VisualOutput.PluginSnippetOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF58);
  }
  return result;
}

unint64_t sub_23F16B868()
{
  unint64_t result;

  result = qword_256DFFF60;
  if (!qword_256DFFF60)
  {
    result = MEMORY[0x242667160](&unk_23F26D2B8, &type metadata for ResponseOutput.VisualOutput.PluginSnippetOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF60);
  }
  return result;
}

unint64_t sub_23F16B8A8()
{
  unint64_t result;

  result = qword_256DFFF68;
  if (!qword_256DFFF68)
  {
    result = MEMORY[0x242667160](&unk_23F26D1D8, &type metadata for ResponseOutput.VisualOutput.SystemSnippetOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF68);
  }
  return result;
}

unint64_t sub_23F16B8E8()
{
  unint64_t result;

  result = qword_256DFFF70;
  if (!qword_256DFFF70)
  {
    result = MEMORY[0x242667160](&unk_23F26D200, &type metadata for ResponseOutput.VisualOutput.SystemSnippetOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF70);
  }
  return result;
}

unint64_t sub_23F16B928()
{
  unint64_t result;

  result = qword_256DFFF78;
  if (!qword_256DFFF78)
  {
    result = MEMORY[0x242667160](&unk_23F26D120, &type metadata for ResponseOutput.VisualOutput.InAppResponseOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF78);
  }
  return result;
}

unint64_t sub_23F16B968()
{
  unint64_t result;

  result = qword_256DFFF80;
  if (!qword_256DFFF80)
  {
    result = MEMORY[0x242667160](&unk_23F26D148, &type metadata for ResponseOutput.VisualOutput.InAppResponseOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF80);
  }
  return result;
}

unint64_t sub_23F16B9A8()
{
  unint64_t result;

  result = qword_256DFFF88;
  if (!qword_256DFFF88)
  {
    result = MEMORY[0x242667160](&unk_23F26D068, &type metadata for ResponseOutput.VisualOutput.LiveActivityOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF88);
  }
  return result;
}

unint64_t sub_23F16B9E8()
{
  unint64_t result;

  result = qword_256DFFF90;
  if (!qword_256DFFF90)
  {
    result = MEMORY[0x242667160](&unk_23F26D090, &type metadata for ResponseOutput.VisualOutput.LiveActivityOutputPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFF90);
  }
  return result;
}

uint64_t sub_23F16BA3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_23F16BA4C()
{
  return sub_23F26863C();
}

uint64_t sub_23F16BA64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_23F16BA74()
{
  return sub_23F268798();
}

void sub_23F16BA8C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F16BAA8()
{
  return sub_23F2686B4();
}

uint64_t sub_23F16BACC()
{
  return sub_23F268750();
}

uint64_t sub_23F16BAEC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F16BAF8()
{
  return sub_23F26863C();
}

uint64_t sub_23F16BB08()
{
  return sub_23F268714();
}

uint64_t sub_23F16BB24()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;

  sub_23F135CDC(v0, v2, v1);
  return sub_23F135CDC(v0, v2, v1);
}

__n128 sub_23F16BB4C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, uint64_t a4@<X8>)
{
  char v4;
  unsigned __int8 v5;
  __n128 result;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = a3[1].n128_u8[0];
  *(_QWORD *)a4 = a1;
  *(_OWORD *)(a4 + 8) = *(_OWORD *)a2;
  *(_BYTE *)(a4 + 24) = v4;
  result = *a3;
  *(__n128 *)(a4 + 32) = *a3;
  *(_BYTE *)(a4 + 48) = v5;
  *(_BYTE *)(a4 + 49) = 2;
  return result;
}

uint64_t sub_23F16BB7C()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F135CDC(v2, v1, v0);
  return sub_23F135CDC(v2, v1, v0);
}

uint64_t sub_23F16BBA4()
{
  return sub_23F26863C();
}

uint64_t sub_23F16BBC8()
{
  return sub_23F268684();
}

uint64_t sub_23F16BBD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  *(_BYTE *)(a4 + 16) = a3;
  return sub_23F163B00(a1, a2, a3);
}

uint64_t sub_23F16BBDC()
{
  return type metadata accessor for RGPluginModel(0);
}

uint64_t sub_23F16BBE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 232) + 8))(v0, v1);
}

void sub_23F16BBFC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F16BC18(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F16BC34(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F16BC50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8))(v0, v1);
}

uint64_t sub_23F16BC64()
{
  return sub_23F2686B4();
}

uint64_t sub_23F16BC78()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F159FD0(v1, v0);
}

uint64_t sub_23F16BC84()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F137270(v1, v0, 3u);
}

uint64_t sub_23F16BC94()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;

  return sub_23F137270(v0, v2, v1);
}

uint64_t sub_23F16BCA4()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;

  return sub_23F163B14(v0, v2, v1);
}

uint64_t sub_23F16BCB4(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2;

  return sub_23F163B14(a1, a2, v2);
}

uint64_t sub_23F16BCBC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;

  sub_23F137270(a1, a2, a3);
  return v3;
}

uint64_t sub_23F16BCD4()
{
  return sub_23F268720();
}

uint64_t sub_23F16BCE4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F16BCF4()
{
  return sub_23F268750();
}

uint64_t sub_23F16BCFC()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23F137270(v2, v1, v0);
}

uint64_t sub_23F16BD0C()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23F163B14(v2, v1, v0);
}

uint64_t sub_23F16BD1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23F16BD38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, a2, 1, v2);
}

unint64_t sub_23F16BD44()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 3;
  return sub_23F163920();
}

unint64_t sub_23F16BD5C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23F163A4C();
}

unint64_t sub_23F16BD68()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
  return sub_23F16395C();
}

unint64_t sub_23F16BD74()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_23F1638E4();
}

uint64_t sub_23F16BD80()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F16BD94()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 1;
  return sub_23F163998();
}

unint64_t sub_23F16BDA0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_23F163A88();
}

void sub_23F16BDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  static ResponseOutput.DialogType.== infix(_:_:)((uint64_t)va);
}

void sub_23F16BDB8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F125D68(v2, a2);
}

uint64_t sub_23F16BDC0()
{
  return swift_unknownObjectRelease();
}

uint64_t static RGPluginModel.bundleName.getter()
{
  sub_23F126DC0();
  swift_bridgeObjectRetain();
  return sub_23F17FE50();
}

uint64_t static RGPluginModel.bundleName.setter(uint64_t a1, uint64_t a2)
{
  sub_23F126DC0();
  qword_256DFFF98 = a1;
  qword_256DFFFA0 = a2;
  return swift_bridgeObjectRelease();
}

void static RGPluginModel.bundleName.modify()
{
  sub_23F126DC0();
  sub_23F126078();
}

uint64_t sub_23F16BEA0(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  if (a1 == 0xD000000000000013 && a2 == 0x800000023F293A40 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023F293A60 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023F293A80 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023F293AA0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = a1 == 1685217635 && a2 == 0xE400000000000000;
    if (v5 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      v6 = a1 == 0x6465766968637261 && a2 == 0xEC00000077656956;
      if (v6 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v7 = a1 == 0x5653445369726973 && a2 == 0xEB00000000776569;
        if (v7 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          v8 = a1 == 0x6C6F72746E6F63 && a2 == 0xE700000000000000;
          if (v8 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x800000023F293AC0)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else
          {
            v9 = sub_23F268798();
            swift_bridgeObjectRelease();
            if ((v9 & 1) != 0)
              return 8;
            else
              return 9;
          }
        }
      }
    }
  }
}

uint64_t sub_23F16C22C()
{
  return 9;
}

uint64_t sub_23F16C234(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F16C270 + 4 * byte_23F26E300[a1]))(0xD000000000000013, 0x800000023F293A40);
}

unint64_t sub_23F16C270()
{
  return 0xD000000000000017;
}

uint64_t sub_23F16C2A8()
{
  return 1685217635;
}

uint64_t sub_23F16C2B8()
{
  return 0x6465766968637261;
}

uint64_t sub_23F16C2D8()
{
  return 0x5653445369726973;
}

uint64_t sub_23F16C2F8()
{
  return 0x6C6F72746E6F63;
}

void sub_23F16C310()
{
  JUMPOUT(0x23F16C31CLL);
}

uint64_t sub_23F16C328(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F16C394()
{
  sub_23F16D3B0();
  return sub_23F2688B8();
}

uint64_t sub_23F16C3BC()
{
  sub_23F16D3B0();
  return sub_23F2688C4();
}

uint64_t sub_23F16C3E4()
{
  sub_23F16D264();
  return sub_23F2688B8();
}

uint64_t sub_23F16C40C()
{
  sub_23F16D264();
  return sub_23F2688C4();
}

uint64_t sub_23F16C434()
{
  sub_23F16D2DC();
  return sub_23F2688B8();
}

uint64_t sub_23F16C45C()
{
  sub_23F16D2DC();
  return sub_23F2688C4();
}

uint64_t sub_23F16C484()
{
  unsigned __int8 *v0;

  return sub_23F16C234(*v0);
}

uint64_t sub_23F16C48C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F16BEA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F16C4B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F16C22C();
  *a1 = result;
  return result;
}

uint64_t sub_23F16C4D4()
{
  sub_23F16D138();
  return sub_23F2688B8();
}

uint64_t sub_23F16C4FC()
{
  sub_23F16D138();
  return sub_23F2688C4();
}

uint64_t sub_23F16C524()
{
  sub_23F16D1B0();
  return sub_23F2688B8();
}

uint64_t sub_23F16C54C()
{
  sub_23F16D1B0();
  return sub_23F2688C4();
}

uint64_t sub_23F16C574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F16C328(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F16C59C()
{
  sub_23F16D3EC();
  return sub_23F2688B8();
}

uint64_t sub_23F16C5C4()
{
  sub_23F16D3EC();
  return sub_23F2688C4();
}

uint64_t sub_23F16C5EC()
{
  sub_23F16D374();
  return sub_23F2688B8();
}

uint64_t sub_23F16C614()
{
  sub_23F16D374();
  return sub_23F2688C4();
}

uint64_t sub_23F16C63C()
{
  sub_23F16D174();
  return sub_23F2688B8();
}

uint64_t sub_23F16C664()
{
  sub_23F16D174();
  return sub_23F2688C4();
}

uint64_t sub_23F16C68C()
{
  sub_23F16D1EC();
  return sub_23F2688B8();
}

uint64_t sub_23F16C6B4()
{
  sub_23F16D1EC();
  return sub_23F2688C4();
}

uint64_t sub_23F16C6DC()
{
  sub_23F16D318();
  return sub_23F2688B8();
}

uint64_t sub_23F16C704()
{
  sub_23F16D318();
  return sub_23F2688C4();
}

void RGPluginModel.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72[7];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[3];
  uint64_t v88;
  uint64_t v89;

  sub_23F131874();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v24 = sub_23F1217E8(&qword_256DFFFA8);
  v86 = *(_QWORD *)(v24 - 8);
  v87[0] = v24;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F125F70();
  v85 = v26;
  v27 = sub_23F1217E8(&qword_256DFFFB0);
  v83 = *(_QWORD *)(v27 - 8);
  v84 = v27;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F17FFFC(v29, v72[0]);
  v80 = type metadata accessor for RGControlModel(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F180018(v31, v72[0]);
  v32 = sub_23F1217E8(&qword_256DFFFB8);
  v81 = *(_QWORD *)(v32 - 8);
  v82 = v32;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F17FBBC((uint64_t)v72 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = sub_23F1217E8(&qword_256DFFFC0);
  sub_23F17FB48(v35, (uint64_t)&a16);
  v79 = v36;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F17FBBC((uint64_t)v72 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = sub_23F1217E8(&qword_256DFFFC8);
  sub_23F17FB48(v39, (uint64_t)&a13);
  v78 = v40;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F125F70();
  sub_23F17FBBC(v42);
  v43 = sub_23F1217E8(&qword_256DFFFD0);
  sub_23F17FB48(v43, (uint64_t)&a10);
  v77 = v44;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F125F70();
  v47 = sub_23F18016C(v46);
  v76 = type metadata accessor for RGToolDisambiguationModel(v47);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F125F70();
  sub_23F17FBBC(v49);
  v50 = sub_23F1217E8(&qword_256DFFFD8);
  sub_23F17FB48(v50, (uint64_t)&v89);
  v75 = v51;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F125F70();
  v54 = sub_23F18016C(v53);
  v74 = type metadata accessor for RGParameterConfirmationModel(v54);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F125F70();
  sub_23F17FBBC(v56);
  v73 = sub_23F1217E8(&qword_256DFFFE0);
  v72[6] = *(_QWORD *)(v73 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F125F70();
  v59 = sub_23F18016C(v58);
  v72[3] = type metadata accessor for RGActionConfirmationModel(v59);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F125F70();
  sub_23F17FBBC(v61);
  v62 = sub_23F1217E8(&qword_256DFFFE8);
  sub_23F17FB48(v62, (uint64_t)v87);
  v72[1] = v63;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F1319B0();
  sub_23F17FD80();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v65);
  v66 = sub_23F17FFC4();
  type metadata accessor for RGPluginModel(v66);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v67);
  v69 = (char *)v72 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_23F1217E8(&qword_256DFFFF0);
  v87[1] = *(_QWORD *)(v88 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F15E524();
  sub_23F12545C(v23, v23[3]);
  sub_23F16D138();
  sub_23F180304();
  sub_23F1325F8(a10, (uint64_t)v69, type metadata accessor for RGPluginModel);
  v71 = (char *)sub_23F16CAD8 + 4 * word_23F26E30A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F16CAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  sub_23F17FF70(v1, v0);
  *(_BYTE *)(v3 - 152) = 0;
  sub_23F16D3EC();
  v5 = *(_QWORD *)(v3 - 176);
  v4 = *(_QWORD *)(v3 - 168);
  sub_23F2686E4();
  sub_23F1800B8(&qword_256E00078, v6, (uint64_t)&protocol conformance descriptor for RGDisambiguationModel);
  sub_23F17FC90();
  sub_23F15E694(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 456) + 8));
  sub_23F1800B0(v0);
  sub_23F1802DC();
  v7(v5, v4);
  sub_23F1313FC();
}

void sub_23F16D048()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 - 152) = 8;
  sub_23F16D174();
  v1 = *(_QWORD *)(v0 - 208);
  sub_23F17FF10();
  sub_23F268720();
  swift_bridgeObjectRelease();
  sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 200) + 8));
  JUMPOUT(0x23F16D034);
}

uint64_t type metadata accessor for RGControlModel(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E008E0);
}

uint64_t type metadata accessor for RGToolDisambiguationModel(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E007A8);
}

uint64_t type metadata accessor for RGParameterConfirmationModel(uint64_t a1)
{
  return sub_23F12EDBC(a1, (uint64_t *)&unk_256E00658);
}

uint64_t type metadata accessor for RGActionConfirmationModel(uint64_t a1)
{
  return sub_23F12EDBC(a1, (uint64_t *)&unk_256E005B0);
}

uint64_t type metadata accessor for RGDisambiguationModel(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E00468);
}

uint64_t type metadata accessor for RGPluginModel(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E00328);
}

unint64_t sub_23F16D138()
{
  unint64_t result;

  result = qword_256DFFFF8;
  if (!qword_256DFFFF8)
  {
    result = MEMORY[0x242667160](&unk_23F270208, &type metadata for RGPluginModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256DFFFF8);
  }
  return result;
}

unint64_t sub_23F16D174()
{
  unint64_t result;

  result = qword_256E00000;
  if (!qword_256E00000)
  {
    result = MEMORY[0x242667160](&unk_23F2701B8, &type metadata for RGPluginModel.SimulateInAppResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00000);
  }
  return result;
}

unint64_t sub_23F16D1B0()
{
  unint64_t result;

  result = qword_256E00008;
  if (!qword_256E00008)
  {
    result = MEMORY[0x242667160](&unk_23F270168, &type metadata for RGPluginModel.ControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00008);
  }
  return result;
}

unint64_t sub_23F16D1EC()
{
  unint64_t result;

  result = qword_256E00018;
  if (!qword_256E00018)
  {
    result = MEMORY[0x242667160](&unk_23F270118, &type metadata for RGPluginModel.SiriSDSViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00018);
  }
  return result;
}

unint64_t sub_23F16D228()
{
  unint64_t result;

  result = qword_256E00020;
  if (!qword_256E00020)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SiriSDSViewModel, &type metadata for SiriSDSViewModel);
    atomic_store(result, (unint64_t *)&qword_256E00020);
  }
  return result;
}

unint64_t sub_23F16D264()
{
  unint64_t result;

  result = qword_256E00028;
  if (!qword_256E00028)
  {
    result = MEMORY[0x242667160](&unk_23F2700C8, &type metadata for RGPluginModel.ArchivedViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00028);
  }
  return result;
}

unint64_t sub_23F16D2A0()
{
  unint64_t result;

  result = qword_256E00030;
  if (!qword_256E00030)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ArchivedViewModel, &type metadata for ArchivedViewModel);
    atomic_store(result, (unint64_t *)&qword_256E00030);
  }
  return result;
}

unint64_t sub_23F16D2DC()
{
  unint64_t result;

  result = qword_256E00038;
  if (!qword_256E00038)
  {
    result = MEMORY[0x242667160](&unk_23F270078, &type metadata for RGPluginModel.CardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00038);
  }
  return result;
}

unint64_t sub_23F16D318()
{
  unint64_t result;

  result = qword_256E00040;
  if (!qword_256E00040)
  {
    result = MEMORY[0x242667160](&unk_23F270028, &type metadata for RGPluginModel.ToolDisambiguationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00040);
  }
  return result;
}

void sub_23F16D354(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F17FB78(a1, a2);
  sub_23F1261A8(v2);
  sub_23F126078();
}

unint64_t sub_23F16D374()
{
  unint64_t result;

  result = qword_256E00050;
  if (!qword_256E00050)
  {
    result = MEMORY[0x242667160](&unk_23F26FFD8, &type metadata for RGPluginModel.ParameterConfirmationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00050);
  }
  return result;
}

unint64_t sub_23F16D3B0()
{
  unint64_t result;

  result = qword_256E00060;
  if (!qword_256E00060)
  {
    result = MEMORY[0x242667160](&unk_23F26FF88, &type metadata for RGPluginModel.ActionConfirmationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00060);
  }
  return result;
}

unint64_t sub_23F16D3EC()
{
  unint64_t result;

  result = qword_256E00070;
  if (!qword_256E00070)
  {
    result = MEMORY[0x242667160](&unk_23F26FF38, &type metadata for RGPluginModel.DisambiguationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00070);
  }
  return result;
}

void RGPluginModel.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96[19];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  sub_23F131874();
  a19 = v24;
  a20 = v25;
  a10 = v20;
  v27 = v26;
  v100 = v28;
  v29 = sub_23F1217E8(&qword_256E00080);
  sub_23F17FB48(v29, (uint64_t)&a13);
  v102 = v30;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F17FFFC(v32, v96[0]);
  v33 = sub_23F1217E8(&qword_256E00088);
  sub_23F17FB48(v33, (uint64_t)&a12);
  v96[16] = v34;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F180018(v36, v96[0]);
  v37 = sub_23F1217E8(&qword_256E00090);
  sub_23F17FB48(v37, (uint64_t)&a11);
  v96[15] = v38;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F125F70();
  v99 = v40;
  v41 = sub_23F1217E8(&qword_256E00098);
  sub_23F17FB48(v41, (uint64_t)&a10);
  v105 = v42;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F125F70();
  v98 = v44;
  v45 = sub_23F1217E8(&qword_256E000A0);
  sub_23F17FB48(v45, (uint64_t)&a9);
  v101 = v46;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F125F70();
  sub_23F17FBBC(v48);
  v49 = sub_23F1217E8(&qword_256E000A8);
  sub_23F17FB48(v49, (uint64_t)&v110);
  v96[14] = v50;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F17FBBC((uint64_t)v96 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = sub_23F1217E8(&qword_256E000B0);
  sub_23F17FB48(v53, (uint64_t)&v109);
  v96[13] = v54;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F125F70();
  sub_23F17FBBC(v56);
  v97 = sub_23F1217E8(&qword_256E000B8);
  v96[12] = *(_QWORD *)(v97 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F125F70();
  sub_23F17FBBC(v58);
  v59 = sub_23F1217E8(&qword_256E000C0);
  sub_23F17FB48(v59, (uint64_t)&v108);
  v96[11] = v60;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F17FBBC((uint64_t)v96 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  v106 = sub_23F1217E8(&qword_256E000C8);
  v104 = *(_QWORD *)(v106 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v63);
  v64 = sub_23F17FFA8();
  v103 = type metadata accessor for RGPluginModel(v64);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F14EFA0();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v67);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F18033C();
  sub_23F17FD00();
  v71 = MEMORY[0x24BDAC7A8](v70);
  v73 = (char *)v96 - v72;
  v74 = MEMORY[0x24BDAC7A8](v71);
  v76 = (char *)v96 - v75;
  MEMORY[0x24BDAC7A8](v74);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v77);
  sub_23F18035C();
  MEMORY[0x24BDAC7A8](v78);
  v80 = (char *)v96 - v79;
  v81 = v27[3];
  v107 = v27;
  sub_23F12545C(v27, v81);
  sub_23F16D138();
  v82 = a10;
  sub_23F268888();
  if (!v82)
  {
    v96[2] = v23;
    v96[3] = v22;
    v96[4] = (uint64_t)v76;
    v96[5] = (uint64_t)v73;
    v96[6] = (uint64_t)v80;
    a10 = v21;
    v83 = sub_23F2686D8();
    v84 = *(_QWORD *)(v83 + 16);
    if (v84)
    {
      v96[1] = 0;
      v85 = *(unsigned __int8 *)(v83 + 32);
      sub_23F15E2D0(1, v84, v83, v83 + 32, 0, (2 * v84) | 1);
      v87 = v86;
      v89 = v88;
      sub_23F131790();
      if (v87 == v89 >> 1)
        __asm { BR              X9 }
    }
    v90 = v103;
    v91 = sub_23F268594();
    swift_allocError();
    v93 = v92;
    sub_23F1217E8(&qword_256DFF4B8);
    *v93 = v90;
    v94 = v106;
    v95 = a10;
    sub_23F268648();
    sub_23F268588();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v91 - 8) + 104))(v93, *MEMORY[0x24BEE26D0], v91);
    swift_willThrow();
    sub_23F17FAB4();
    (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v95, v94);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v107);
  sub_23F17FDF4();
  sub_23F1313FC();
}

#error "23F16DFA8: call analysis failed (funcsize=5)"

#error "23F16DFBC: call analysis failed (funcsize=5)"

void RGDisplayRepresentation.init(title:subtitle:image:bundleIdentifier:snippetPluginModelData:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, int *);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  sub_23F18039C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  sub_23F17F940();
  sub_23F1801E8();
  v16(v15, v13);
  type metadata accessor for RGDisplayRepresentation(0);
  sub_23F180390();
  sub_23F17537C(v11, v15 + v17, &qword_256DFFC88);
  sub_23F17537C(v9, v15 + v13[6], &qword_256DFFC90);
  v18 = (_QWORD *)(v15 + v13[7]);
  *v18 = v7;
  v18[1] = v5;
  v19 = (_QWORD *)(v15 + v13[8]);
  *v19 = v3;
  v19[1] = v1;
}

uint64_t RGDisplayRepresentation.title.getter()
{
  return sub_23F174B7C((uint64_t (*)(_QWORD))MEMORY[0x24BDCD380]);
}

void RGDisplayRepresentation.subtitle.getter()
{
  sub_23F16EAF8(type metadata accessor for RGDisplayRepresentation);
}

void RGDisplayRepresentation.image.getter()
{
  sub_23F16EB30(type metadata accessor for RGDisplayRepresentation);
}

void RGDisplayRepresentation.bundleIdentifier.getter()
{
  sub_23F16EB68(type metadata accessor for RGDisplayRepresentation);
}

void RGDisplayRepresentation.snippetPluginModelData.getter()
{
  sub_23F16EBA0(type metadata accessor for RGDisplayRepresentation);
}

uint64_t sub_23F16E0B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656C746974627573 && a2 == 0xE800000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x800000023F293AE0 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x800000023F293B00)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_23F16E2AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F16E2DC + 4 * byte_23F26E32E[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_23F16E2DC()
{
  return 0x656C746974627573;
}

uint64_t sub_23F16E2F4()
{
  return 0x6567616D69;
}

unint64_t sub_23F16E304()
{
  return 0xD000000000000010;
}

unint64_t sub_23F16E320()
{
  return 0xD000000000000016;
}

uint64_t sub_23F16E340()
{
  unsigned __int8 *v0;

  return sub_23F16E2AC(*v0);
}

uint64_t sub_23F16E348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F16E0B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F16E36C()
{
  sub_23F174F40();
  return sub_23F2688B8();
}

uint64_t sub_23F16E394()
{
  sub_23F174F40();
  return sub_23F2688C4();
}

void RGDisplayRepresentation.encode(to:)()
{
  sub_23F16EF14();
}

void RGDisplayRepresentation.init(from:)()
{
  sub_23F16F110();
}

void sub_23F16E424()
{
  RGDisplayRepresentation.init(from:)();
}

void sub_23F16E438()
{
  RGDisplayRepresentation.encode(to:)();
}

uint64_t RGDisambiguationModel.init(eventId:title:items:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F125F3C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  swift_bridgeObjectRelease();
  v8 = (int *)sub_23F17FD80();
  v9 = v7 + v8[9];
  v10 = sub_23F131B8C();
  v11 = *(_QWORD *)(v10 - 8);
  sub_23F17FC88(v9, v5);
  v12 = v7 + v8[5];
  sub_23F17FC88(v12, v5);
  sub_23F17FC88(v7, v9);
  sub_23F17FC88(v7 + v8[11], v12);
  v13 = (_QWORD *)(v7 + v8[10]);
  *v13 = v3;
  v13[1] = v1;
  v14 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v7 + v8[8]) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v7 + v8[7]) = v14;
  v15 = v7 + v8[6];
  *(_DWORD *)v15 = 0;
  *(_QWORD *)(v15 + 8) = 0;
  *(_QWORD *)(v15 + 16) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v5, v10);
}

uint64_t RGDisambiguationModel.init(actionEventId:actionResponseEventId:title:itemDisplayRepresentations:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  sub_23F1314D0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  sub_23F131B8C();
  sub_23F17FC88(v7, v5);
  v8 = type metadata accessor for RGDisambiguationModel(0);
  sub_23F17FC88(v7 + *(int *)(v8 + 44), v3);
  sub_23F180320();
  *(_QWORD *)(v7 + v9) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v7 + *(int *)(v8 + 28)) = v1;
  sub_23F17FD60();
  v10 = sub_23F17FD10();
  return sub_23F17F90C(v10, v11, v12, v13);
}

uint64_t RGDisambiguationModel.init(actionEventId:actionResponseEventId:title:items:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  sub_23F1314D0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  sub_23F131B8C();
  sub_23F17FC88(v7, v5);
  v8 = type metadata accessor for RGDisambiguationModel(0);
  sub_23F17FC88(v7 + *(int *)(v8 + 44), v3);
  sub_23F180320();
  *(_QWORD *)(v7 + v9) = v1;
  *(_QWORD *)(v7 + *(int *)(v8 + 28)) = MEMORY[0x24BEE4AF8];
  sub_23F17FD60();
  v10 = sub_23F17FD10();
  return sub_23F17F90C(v10, v11, v12, v13);
}

#error "23F16E6B0: call analysis failed (funcsize=50)"

uint64_t RGDisambiguationModel.actionEventId.getter()
{
  return sub_23F174B7C((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*RGDisambiguationModel.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGDisambiguationModel.systemResponseEventId.getter()
{
  return sub_23F170160(type metadata accessor for RGDisambiguationModel);
}

uint64_t RGDisambiguationModel.systemResponseEventId.setter(uint64_t a1)
{
  return sub_23F170194(a1, type metadata accessor for RGDisambiguationModel);
}

uint64_t (*RGDisambiguationModel.systemResponseEventId.modify())()
{
  sub_23F17FD80();
  sub_23F180384();
  return nullsub_1;
}

uint64_t RGDisambiguationModel.statementID.getter()
{
  return sub_23F1701E8(type metadata accessor for RGDisambiguationModel);
}

void RGDisambiguationModel.statementID.setter(int *a1)
{
  sub_23F170228(a1, type metadata accessor for RGDisambiguationModel);
}

uint64_t (*RGDisambiguationModel.statementID.modify())()
{
  sub_23F17FD80();
  sub_23F18030C();
  return nullsub_1;
}

uint64_t RGDisambiguationModel.itemDisplayRepresentations.getter()
{
  return sub_23F1739A4(type metadata accessor for RGDisambiguationModel);
}

void RGDisambiguationModel.itemDisplayRepresentations.setter(uint64_t a1)
{
  sub_23F1739CC(a1, type metadata accessor for RGDisambiguationModel);
}

uint64_t (*RGDisambiguationModel.itemDisplayRepresentations.modify())()
{
  sub_23F17FD80();
  return nullsub_1;
}

uint64_t RGDisambiguationModel.items.getter()
{
  return sub_23F173A28(type metadata accessor for RGDisambiguationModel);
}

void RGDisambiguationModel.items.setter(uint64_t a1)
{
  sub_23F173A50(a1, type metadata accessor for RGDisambiguationModel);
}

uint64_t (*RGDisambiguationModel.items.modify())()
{
  sub_23F17FD80();
  return nullsub_1;
}

uint64_t RGDisambiguationModel.eventId.getter()
{
  return sub_23F1702AC(type metadata accessor for RGDisambiguationModel);
}

uint64_t RGDisambiguationModel.eventId.setter(uint64_t a1)
{
  return sub_23F1702E0(a1, type metadata accessor for RGDisambiguationModel);
}

uint64_t (*RGDisambiguationModel.eventId.modify())()
{
  sub_23F17FD80();
  return nullsub_1;
}

void RGDisambiguationModel.title.getter()
{
  type metadata accessor for RGDisambiguationModel(0);
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void RGDisambiguationModel.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RGDisambiguationModel(0) + 40));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  sub_23F12612C();
}

uint64_t (*RGDisambiguationModel.title.modify())()
{
  type metadata accessor for RGDisambiguationModel(0);
  return nullsub_1;
}

uint64_t RGDisambiguationModel.actionResponseEventId.getter()
{
  return sub_23F171154(type metadata accessor for RGDisambiguationModel);
}

uint64_t RGDisambiguationModel.actionResponseEventId.setter(uint64_t a1)
{
  return sub_23F171188(a1, type metadata accessor for RGDisambiguationModel);
}

uint64_t (*RGDisambiguationModel.actionResponseEventId.modify())()
{
  sub_23F17FD80();
  return nullsub_1;
}

void RGDisambiguationModel.Item.init(title:subtitle:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;

  v4 = (int *)sub_23F180334();
  v5 = a2 + v4[6];
  v6 = sub_23F17FD88();
  sub_23F126158(v5, v7, v8, v6);
  sub_23F17F940();
  sub_23F1801E8();
  v10 = v9(a2, a1);
  sub_23F1803B0(v10, a2 + v4[5], &qword_256DFFC88);
  v11 = (_QWORD *)(a2 + v4[7]);
  *v11 = 0;
  v11[1] = 0;
  *(_OWORD *)(a2 + v4[8]) = xmmword_23F26AB50;
  sub_23F131ABC();
}

void RGDisambiguationModel.Item.init(title:subtitle:image:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = sub_23F17F940();
  sub_23F17FEF0(v4);
  v5 = (int *)sub_23F180334();
  sub_23F17537C(a1, a2 + v5[5], &qword_256DFFC88);
  sub_23F1803B0(v6, a2 + v5[6], &qword_256DFFC90);
  v7 = (_QWORD *)(a2 + v5[7]);
  *v7 = 0;
  v7[1] = 0;
  *(_OWORD *)(a2 + v5[8]) = xmmword_23F26AB50;
  sub_23F12612C();
}

uint64_t RGDisambiguationModel.Item.init(title:snippetPluginBundleIdentifier:snippetPluginModelData:)()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  _QWORD *v20;

  sub_23F125F3C();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  sub_23F180334();
  sub_23F180390();
  v12 = v10 + v11;
  v13 = sub_23F17F940();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v12, 1, 1, v13);
  v14 = v10 + v0[6];
  v15 = sub_23F17FD88();
  sub_23F126158(v14, v16, v17, v15);
  result = sub_23F180238(v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32));
  v19 = (_QWORD *)(v10 + v0[7]);
  *v19 = v8;
  v19[1] = v6;
  v20 = (_QWORD *)(v10 + v0[8]);
  *v20 = v4;
  v20[1] = v2;
  return result;
}

uint64_t RGDisambiguationModel.Item.title.getter()
{
  return sub_23F174B7C((uint64_t (*)(_QWORD))MEMORY[0x24BDCD380]);
}

void RGDisambiguationModel.Item.subtitle.getter()
{
  sub_23F16EAF8(type metadata accessor for RGDisambiguationModel.Item);
}

void sub_23F16EAF8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23F17F978(a1);
  sub_23F180228(v1 + *(int *)(v2 + 20), v3, &qword_256DFFC88);
  sub_23F126078();
}

void RGDisambiguationModel.Item.image.getter()
{
  sub_23F16EB30(type metadata accessor for RGDisambiguationModel.Item);
}

void sub_23F16EB30(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23F17F978(a1);
  sub_23F180228(v1 + *(int *)(v2 + 24), v3, &qword_256DFFC90);
  sub_23F126078();
}

void RGDisambiguationModel.Item.snippetPluginBundleIdentifier.getter()
{
  sub_23F16EB68(type metadata accessor for RGDisambiguationModel.Item);
}

void sub_23F16EB68(uint64_t (*a1)(_QWORD))
{
  sub_23F17FDCC(a1);
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void RGDisambiguationModel.Item.snippetPluginModelData.getter()
{
  sub_23F16EBA0(type metadata accessor for RGDisambiguationModel.Item);
}

void sub_23F16EBA0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F17FDCC(a1);
  sub_23F159FE4(*(_QWORD *)(v1 + *(int *)(v2 + 32)), *(_QWORD *)(v1 + *(int *)(v2 + 32) + 8));
  sub_23F1317E0();
  sub_23F126078();
}

uint64_t sub_23F16EBD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656C746974627573 && a2 == 0xE800000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023F293B20 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x800000023F293B00)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_23F16EDD0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F16EE00 + 4 * byte_23F26E333[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_23F16EE00()
{
  return 0x656C746974627573;
}

uint64_t sub_23F16EE18()
{
  return 0x6567616D69;
}

unint64_t sub_23F16EE28()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_23F16EE48()
{
  return 0xD000000000000016;
}

uint64_t sub_23F16EE64()
{
  unsigned __int8 *v0;

  return sub_23F16EDD0(*v0);
}

uint64_t sub_23F16EE6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F16EBD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F16EE90()
{
  sub_23F174F90();
  return sub_23F2688B8();
}

uint64_t sub_23F16EEB8()
{
  sub_23F174F90();
  return sub_23F2688C4();
}

void RGDisambiguationModel.Item.encode(to:)()
{
  sub_23F16EF14();
}

void sub_23F16EF14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD);
  void (*v4)(void);
  void (*v5)(void);
  _QWORD *v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  void (*v10)(_QWORD);

  sub_23F131874();
  v10 = v3;
  v5 = v4;
  v7 = v6;
  sub_23F1217E8(v8);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F1319C8();
  sub_23F12545C(v7, v7[3]);
  v5();
  sub_23F180304();
  sub_23F17F940();
  sub_23F125DE4(&qword_256E00118, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD380], MEMORY[0x24BDCD390]);
  sub_23F180098();
  if (!v0)
  {
    v10(0);
    sub_23F180390();
    sub_23F17FAD8();
    sub_23F180268();
    sub_23F17FD88();
    sub_23F125DE4(&qword_256E00120, (uint64_t (*)(uint64_t))MEMORY[0x24BEBA448], MEMORY[0x24BEBA458]);
    sub_23F17FAD8();
    sub_23F1800A4();
    sub_23F17FF24();
    sub_23F146B94();
    sub_23F17FAD8();
  }
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F17FDF4();
  sub_23F1313FC();
}

void RGDisambiguationModel.Item.init(from:)()
{
  sub_23F16F110();
}

void sub_23F16F110()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t (*v5)(_QWORD);
  uint64_t *v6;
  uint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(void);
  uint64_t v38;
  uint64_t v39;
  __int128 v40;

  sub_23F131874();
  v37 = v2;
  v38 = v3;
  v5 = v4;
  v7 = v6;
  v39 = v0;
  v9 = v8;
  v30 = v10;
  sub_23F1217E8(&qword_256DFFC90);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F125F70();
  v32 = v12;
  sub_23F1217E8(&qword_256DFFC88);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F125F70();
  v33 = v14;
  v34 = sub_23F17F940();
  v15 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  sub_23F17FFE0(v16, v30);
  v36 = sub_23F1217E8(v7);
  v17 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v18 = sub_23F15E9EC();
  v31 = v5;
  v19 = (int *)v5(v18);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v30 - v20;
  sub_23F12545C(v9, v9[3]);
  v37();
  v37 = v1;
  v22 = v39;
  sub_23F268888();
  if (v22)
  {
    sub_23F131BF4();
  }
  else
  {
    v23 = v33;
    v39 = v17;
    LOBYTE(v40) = 0;
    sub_23F125DE4(&qword_256E00130, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD380], MEMORY[0x24BDCD3A0]);
    v24 = v34;
    sub_23F17FE48();
    v38 = v15;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v21, v35, v24);
    LOBYTE(v40) = 1;
    sub_23F180090();
    sub_23F17537C(v23, (uint64_t)&v21[v19[5]], &qword_256DFFC88);
    sub_23F17FD88();
    sub_23F180268();
    sub_23F125DE4(&qword_256E00138, v25, MEMORY[0x24BEBA460]);
    v26 = v32;
    sub_23F180090();
    sub_23F17537C(v26, (uint64_t)&v21[v19[6]], &qword_256DFFC90);
    LOBYTE(v40) = 3;
    v27 = sub_23F268654();
    v28 = (uint64_t *)&v21[v19[7]];
    *v28 = v27;
    v28[1] = v29;
    sub_23F17FF24();
    sub_23F146AE4();
    sub_23F180090();
    sub_23F17FB6C(v39);
    *(_OWORD *)&v21[v19[8]] = v40;
    sub_23F1325F8((uint64_t)v21, v30, v31);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v9);
    sub_23F180370();
  }
  sub_23F1313FC();
}

uint64_t sub_23F16F4D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v10;

  v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023F293B40 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000444974;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023F293B60 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = a1 == 0x736D657469 && a2 == 0xE500000000000000;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = a1 == 0x6449746E657665 && a2 == 0xE700000000000000;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v9 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
          if (v9 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x800000023F293B80)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            v10 = sub_23F268798();
            swift_bridgeObjectRelease();
            if ((v10 & 1) != 0)
              return 7;
            else
              return 8;
          }
        }
      }
    }
  }
}

uint64_t sub_23F16F824(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F16F864 + 4 * byte_23F26E338[a1]))(0x76456E6F69746361, 0xED00006449746E65);
}

unint64_t sub_23F16F864()
{
  return 0xD000000000000015;
}

void sub_23F16F90C()
{
  RGDisambiguationModel.Item.init(from:)();
}

void sub_23F16F920()
{
  RGDisambiguationModel.Item.encode(to:)();
}

uint64_t sub_23F16F934()
{
  unsigned __int8 *v0;

  return sub_23F16F824(*v0);
}

uint64_t sub_23F16F93C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F16F4D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F16F960()
{
  sub_23F174FCC();
  return sub_23F2688B8();
}

uint64_t sub_23F16F988()
{
  sub_23F174FCC();
  return sub_23F2688C4();
}

void RGDisambiguationModel.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F131874();
  sub_23F1217E8(&qword_256E00158);
  sub_23F17FAC4();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F174FCC();
  sub_23F131994();
  LOBYTE(v8) = 0;
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F1315CC();
  if (!v1)
  {
    v6 = (int *)sub_23F17FD80();
    sub_23F17F948(1);
    sub_23F17FA2C(v0 + v6[6]);
    sub_23F1315CC();
    v8 = *(_QWORD *)(v0 + v6[7]);
    sub_23F1217E8(&qword_256E00168);
    sub_23F175008();
    sub_23F1315CC();
    v8 = *(_QWORD *)(v0 + v6[8]);
    sub_23F17FF24();
    sub_23F1217E8(&qword_256E00180);
    sub_23F175084();
    sub_23F1315CC();
    sub_23F17F948(5);
    LOBYTE(v8) = 6;
    sub_23F268720();
    sub_23F17F948(7);
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F1313FC();
}

void RGDisambiguationModel.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23F131874();
  v5 = v4;
  v33 = v6;
  v7 = sub_23F131B8C();
  v39 = *(_QWORD *)(v7 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F180034();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F18035C();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v32 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v36 = (char *)v32 - v14;
  v35 = sub_23F1217E8(&qword_256E00198);
  v15 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v16 = sub_23F15E5B0();
  v40 = type metadata accessor for RGDisambiguationModel(v16);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F17FBC8(v18, v32[0]);
  v19 = v5[3];
  v37 = v5;
  sub_23F12545C(v5, v19);
  sub_23F174FCC();
  v34 = v1;
  sub_23F268888();
  if (v0)
  {
    sub_23F1802FC();
  }
  else
  {
    v38 = v3;
    v32[1] = v2;
    LOBYTE(v42) = 0;
    sub_23F125DE4(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v21 = v20;
    sub_23F2686B4();
    v22 = v7;
    v23 = *(void (**)(uint64_t, char *, uint64_t))(v39 + 32);
    v24 = v41;
    v23(v41, v36, v22);
    sub_23F1802A0();
    sub_23F17FABC();
    v36 = v21;
    v25 = (int *)v40;
    v23(v24 + *(int *)(v40 + 20), v13, v22);
    sub_23F17FDC0();
    sub_23F17FABC();
    v32[0] = (uint64_t)v23;
    sub_23F180144(v42);
    sub_23F1217E8(&qword_256E00168);
    sub_23F18025C();
    sub_23F17FABC();
    *(_QWORD *)(v24 + v25[7]) = v42;
    sub_23F1217E8(&qword_256E00180);
    sub_23F17FF24();
    sub_23F17517C();
    sub_23F17FABC();
    *(_QWORD *)(v24 + v25[8]) = v42;
    sub_23F17FF9C(5);
    sub_23F17FABC();
    sub_23F180218(v24 + v25[9]);
    LOBYTE(v42) = 6;
    v26 = sub_23F268684();
    v27 = (uint64_t *)(v24 + v25[10]);
    *v27 = v26;
    v27[1] = v28;
    sub_23F17FF9C(7);
    sub_23F17FABC();
    sub_23F17FAE4(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
    v29 = v41;
    sub_23F180218(v41 + *(int *)(v40 + 44));
    sub_23F18013C(v29, v33);
    sub_23F1802FC();
    v30 = sub_23F17FE50();
    sub_23F16D354(v30, v31);
  }
  sub_23F17FDF4();
  sub_23F1313FC();
}

void sub_23F1700F0()
{
  RGDisambiguationModel.init(from:)();
}

void sub_23F170104()
{
  RGDisambiguationModel.encode(to:)();
}

void RGActionConfirmationModel.actionEventId.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F1752C4(v1, a1, &qword_256DFEB98);
}

uint64_t RGActionConfirmationModel.actionEventId.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23F1751F8(a1, v1);
}

uint64_t (*RGActionConfirmationModel.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGActionConfirmationModel.systemResponseEventId.getter()
{
  return sub_23F170160(type metadata accessor for RGActionConfirmationModel);
}

uint64_t sub_23F170160(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F17F978(a1);
  sub_23F131B8C();
  v1 = sub_23F17FA04();
  return sub_23F126180(v1, v2, v3, v4);
}

uint64_t RGActionConfirmationModel.systemResponseEventId.setter(uint64_t a1)
{
  return sub_23F170194(a1, type metadata accessor for RGActionConfirmationModel);
}

uint64_t sub_23F170194(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F17FB78(a1, a2);
  sub_23F131B8C();
  v2 = sub_23F17FB54();
  return sub_23F126180(v2, v3, v4, v5);
}

uint64_t (*RGActionConfirmationModel.systemResponseEventId.modify())()
{
  sub_23F17FF8C();
  sub_23F180384();
  return nullsub_1;
}

uint64_t RGActionConfirmationModel.statementID.getter()
{
  return sub_23F1701E8(type metadata accessor for RGActionConfirmationModel);
}

uint64_t sub_23F1701E8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v2 + *(int *)(sub_23F17F978(a1) + 24);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_DWORD *)v1 = *(_DWORD *)v3;
  *(_QWORD *)(v1 + 8) = v5;
  *(_QWORD *)(v1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

void RGActionConfirmationModel.statementID.setter(int *a1)
{
  sub_23F170228(a1, type metadata accessor for RGActionConfirmationModel);
}

void sub_23F170228(int *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 2);
  v6 = v2 + *(int *)(a2(0) + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = v4;
  *(_QWORD *)(v6 + 16) = v5;
  sub_23F12612C();
}

uint64_t (*RGActionConfirmationModel.statementID.modify())()
{
  sub_23F17FF8C();
  sub_23F18030C();
  return nullsub_1;
}

uint64_t RGActionConfirmationModel.affirmative.getter()
{
  return sub_23F17108C(type metadata accessor for RGActionConfirmationModel);
}

uint64_t RGActionConfirmationModel.negative.getter()
{
  return sub_23F1710C0(type metadata accessor for RGActionConfirmationModel);
}

uint64_t RGActionConfirmationModel.actionResponseEventId.getter()
{
  return sub_23F1702AC(type metadata accessor for RGActionConfirmationModel);
}

uint64_t sub_23F1702AC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F17F978(a1);
  sub_23F131B8C();
  v1 = sub_23F17FA04();
  return sub_23F126180(v1, v2, v3, v4);
}

uint64_t RGActionConfirmationModel.actionResponseEventId.setter(uint64_t a1)
{
  return sub_23F1702E0(a1, type metadata accessor for RGActionConfirmationModel);
}

uint64_t sub_23F1702E0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F17FB78(a1, a2);
  sub_23F131B8C();
  v2 = sub_23F17FB54();
  return sub_23F126180(v2, v3, v4, v5);
}

uint64_t (*RGActionConfirmationModel.actionResponseEventId.modify())()
{
  sub_23F17FF8C();
  return nullsub_1;
}

uint64_t RGActionConfirmationModel.init(actionEventId:actionResponseEventId:affirmative:negative:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_23F1314D0();
  v17 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = sub_23F131B8C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v8, 1, 1, v9);
  sub_23F180084();
  v10 = (int *)sub_23F17FF8C();
  v11 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v8 + v10[9], v4, v9);
  v12 = v8 + v10[7];
  v13 = sub_23F17F940();
  v14 = *(_QWORD *)(v13 - 8);
  sub_23F180238(v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v8 + v10[8], v17, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v13);
  sub_23F125E40(v6, &qword_256DFEB98);
  v15 = v8 + v10[6];
  *(_DWORD *)v15 = 0;
  *(_QWORD *)(v15 + 8) = 0;
  *(_QWORD *)(v15 + 16) = 0;
  return sub_23F17F90C(v8 + v10[5], v4, v9, *(uint64_t (**)(void))(v11 + 32));
}

uint64_t RGActionConfirmationModel.init(actionEventId:systemResponseEventId:statementID:affirmative:negative:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);

  sub_23F125F3C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = *v10;
  v12 = *((_QWORD *)v10 + 1);
  v13 = *((_QWORD *)v10 + 2);
  v14 = sub_23F131B8C();
  sub_23F17FC00(v9, 1);
  sub_23F1751F8(v7, v9);
  v15 = (int *)sub_23F17FF8C();
  v16 = *(_QWORD *)(v14 - 8);
  sub_23F1802E8(v9 + v15[5], v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
  v17 = v9 + v15[6];
  *(_DWORD *)v17 = v11;
  *(_QWORD *)(v17 + 8) = v12;
  *(_QWORD *)(v17 + 16) = v13;
  v18 = v9 + v15[7];
  v19 = sub_23F17F940();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
  v20(v18, v3, v19);
  v20(v9 + v15[8], v1, v19);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v9 + v15[9], v5, v14);
}

uint64_t sub_23F170508(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023F293B40 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000444974;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x74616D7269666661 && a2 == 0xEB00000000657669;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x657669746167656ELL && a2 == 0xE800000000000000;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x800000023F293B80)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v9 = sub_23F268798();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 5;
          else
            return 6;
        }
      }
    }
  }
}

uint64_t sub_23F1707C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F170804 + 4 * byte_23F26E340[a1]))(0x76456E6F69746361, 0xED00006449746E65);
}

unint64_t sub_23F170804()
{
  return 0xD000000000000015;
}

uint64_t sub_23F170884()
{
  unsigned __int8 *v0;

  return sub_23F1707C4(*v0);
}

uint64_t sub_23F17088C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F170508(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1708B0()
{
  sub_23F175288();
  return sub_23F2688B8();
}

uint64_t sub_23F1708D8()
{
  sub_23F175288();
  return sub_23F2688C4();
}

void RGActionConfirmationModel.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];
  uint64_t v10;
  char v11;

  sub_23F131874();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E001C0);
  sub_23F17FAC4();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F175288();
  sub_23F131994();
  v11 = 0;
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F17FAD8();
  if (!v0)
  {
    v6 = type metadata accessor for RGActionConfirmationModel(0);
    v11 = 1;
    sub_23F17F928();
    sub_23F17FA2C(v1 + *(int *)(v6 + 24));
    sub_23F17F99C();
    v10 = v1 + *(int *)(v6 + 28);
    v11 = 3;
    v7 = sub_23F17F940();
    sub_23F125DE4(&qword_256E00118, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD380], MEMORY[0x24BDCD390]);
    v9[1] = v8;
    v10 = v7;
    sub_23F17F99C();
    v11 = 4;
    sub_23F17F99C();
    v11 = 5;
    sub_23F17F928();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F17FDF4();
  sub_23F1313FC();
}

void RGActionConfirmationModel.init(from:)()
{
  char *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int *v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;

  sub_23F131874();
  v56 = v0;
  v3 = v2;
  v47 = v4;
  v5 = sub_23F17F940();
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F14EFA0();
  v48 = v7;
  MEMORY[0x24BDAC7A8](v8);
  v49 = (char *)&v46 - v9;
  v10 = sub_23F131B8C();
  v52 = *(_QWORD *)(v10 - 8);
  sub_23F125F30();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v46 - v15;
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F125F70();
  v50 = v18;
  v51 = sub_23F1217E8(&qword_256E001D0);
  v19 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v20 = sub_23F17FFC4();
  v54 = type metadata accessor for RGActionConfirmationModel(v20);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v21);
  v55 = sub_23F18017C(v22, v46);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v55, 1, 1, v10);
  v23 = v3[3];
  v53 = v3;
  v24 = sub_23F12545C(v3, v23);
  sub_23F175288();
  v25 = v1;
  v26 = v56;
  sub_23F268888();
  if (v26)
  {
    sub_23F17FD90();
    v33 = v54;
    v34 = v55;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v53);
    sub_23F125E40((uint64_t)v34, &qword_256DFEB98);
    if (!v24)
    {
      if (!(_DWORD)v14)
        goto LABEL_9;
      goto LABEL_8;
    }
    sub_23F15E588((uint64_t)&v34[*(int *)(v33 + 28)], *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
    if ((_DWORD)v14)
LABEL_8:
      sub_23F15E588((uint64_t)&v34[*(int *)(v33 + 32)], *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
  }
  else
  {
    v27 = v19;
    v56 = v14;
    LOBYTE(v59) = 0;
    sub_23F125DE4(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v29 = v28;
    v30 = v50;
    v31 = v25;
    sub_23F180090();
    v32 = v10;
    v35 = v30;
    v36 = v55;
    sub_23F1751F8(v35, (uint64_t)v55);
    sub_23F1802A0();
    sub_23F17FE48();
    v37 = v16;
    v38 = (int *)v54;
    v39 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
    v39(&v36[*(int *)(v54 + 20)], v37, v32);
    sub_23F17FDC0();
    sub_23F17FE48();
    v46 = v29;
    v50 = v32;
    sub_23F180144(v59);
    LOBYTE(v59) = 3;
    sub_23F125DE4(&qword_256E00130, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD380], MEMORY[0x24BDCD3A0]);
    v40 = v49;
    v41 = v58;
    sub_23F17FE48();
    v42 = v40;
    v43 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    v43(&v36[v38[7]], v42, v41);
    sub_23F17FF9C(4);
    sub_23F17FE48();
    v43(&v36[v38[8]], v48, v41);
    sub_23F17FF9C(5);
    v44 = v56;
    v45 = v50;
    sub_23F17FE48();
    sub_23F17FB40(v31, *(uint64_t (**)(uint64_t, _QWORD))(v27 + 8));
    v39(&v36[v38[9]], v44, v45);
    sub_23F18013C((uint64_t)v36, v47);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v53);
    sub_23F1800B0((uint64_t)v36);
  }
LABEL_9:
  sub_23F1313FC();
}

void sub_23F170FD8()
{
  RGActionConfirmationModel.init(from:)();
}

void sub_23F170FEC()
{
  RGActionConfirmationModel.encode(to:)();
}

uint64_t (*RGParameterConfirmationModel.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGParameterConfirmationModel.systemResponseEventId.getter()
{
  return sub_23F170160(type metadata accessor for RGParameterConfirmationModel);
}

uint64_t RGParameterConfirmationModel.systemResponseEventId.setter(uint64_t a1)
{
  return sub_23F170194(a1, type metadata accessor for RGParameterConfirmationModel);
}

uint64_t (*RGParameterConfirmationModel.systemResponseEventId.modify())()
{
  sub_23F17FEE0();
  sub_23F180384();
  return nullsub_1;
}

uint64_t RGParameterConfirmationModel.statementID.getter()
{
  return sub_23F1701E8(type metadata accessor for RGParameterConfirmationModel);
}

void RGParameterConfirmationModel.statementID.setter(int *a1)
{
  sub_23F170228(a1, type metadata accessor for RGParameterConfirmationModel);
}

uint64_t (*RGParameterConfirmationModel.statementID.modify())()
{
  sub_23F17FEE0();
  sub_23F18030C();
  return nullsub_1;
}

uint64_t RGParameterConfirmationModel.affirmative.getter()
{
  return sub_23F17108C(type metadata accessor for RGParameterConfirmationModel);
}

uint64_t sub_23F17108C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F17F978(a1);
  sub_23F17F940();
  v1 = sub_23F17FA04();
  return sub_23F126180(v1, v2, v3, v4);
}

uint64_t RGParameterConfirmationModel.negative.getter()
{
  return sub_23F1710C0(type metadata accessor for RGParameterConfirmationModel);
}

uint64_t sub_23F1710C0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F17F978(a1);
  sub_23F17F940();
  v1 = sub_23F17FA04();
  return sub_23F126180(v1, v2, v3, v4);
}

void RGParameterConfirmationModel.parameterDisplayRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F17FEE0();
  sub_23F180228(v0 + *(int *)(v1 + 36), v2, &qword_256DFFC98);
  sub_23F126078();
}

void RGParameterConfirmationModel.parameterRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F17FEE0();
  sub_23F180228(v0 + *(int *)(v1 + 40), v2, &qword_256DFFCA0);
  sub_23F126078();
}

uint64_t RGParameterConfirmationModel.actionResponseEventId.getter()
{
  return sub_23F171154(type metadata accessor for RGParameterConfirmationModel);
}

uint64_t sub_23F171154(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F17F978(a1);
  sub_23F131B8C();
  v1 = sub_23F17FA04();
  return sub_23F126180(v1, v2, v3, v4);
}

uint64_t RGParameterConfirmationModel.actionResponseEventId.setter(uint64_t a1)
{
  return sub_23F171188(a1, type metadata accessor for RGParameterConfirmationModel);
}

uint64_t sub_23F171188(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F17FB78(a1, a2);
  sub_23F131B8C();
  v2 = sub_23F17FB54();
  return sub_23F126180(v2, v3, v4, v5);
}

uint64_t (*RGParameterConfirmationModel.actionResponseEventId.modify())()
{
  sub_23F17FEE0();
  return nullsub_1;
}

uint64_t RGParameterConfirmationModel.init(actionEventId:actionResponseEventId:affirmative:negative:parameterRepresentation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);

  v9 = sub_23F131B8C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a5, 1, 1, v9);
  sub_23F180084();
  v10 = type metadata accessor for RGParameterConfirmationModel(0);
  sub_23F17FC44(v10);
  v11 = sub_23F17F940();
  sub_23F17FE1C(v11);
  v12 = sub_23F17FF78();
  sub_23F180194(v12, a5 + *(int *)(v5 + 40), v13, v14, v15, v16, v17, v18, a4);
  v19 = type metadata accessor for RGDisplayRepresentation(0);
  sub_23F17FE88(v19);
  sub_23F1800D8(a3);
  sub_23F1800D8(a2);
  sub_23F125E40(a1, &qword_256DFEB98);
  v20 = sub_23F17FD38();
  return sub_23F17FBE4(v20, v21, v22, v23);
}

uint64_t RGParameterConfirmationModel.init(actionEventId:actionResponseEventId:affirmative:negative:parameterDisplayRepresentation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);

  v9 = sub_23F131B8C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a5, 1, 1, v9);
  sub_23F180084();
  v10 = type metadata accessor for RGParameterConfirmationModel(0);
  sub_23F17FC44(v10);
  v11 = sub_23F17F940();
  sub_23F17FE1C(v11);
  v12 = sub_23F17FF78();
  sub_23F180194(v12, a5 + *(int *)(v5 + 36), v13, v14, v15, v16, v17, v18, a4);
  v19 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  sub_23F17FE88(v19);
  sub_23F1800D8(a3);
  sub_23F1800D8(a2);
  sub_23F125E40(a1, &qword_256DFEB98);
  v20 = sub_23F17FD38();
  return sub_23F17FBE4(v20, v21, v22, v23);
}

uint64_t RGParameterConfirmationModel.init(actionEventId:systemResponseEventId:statementID:affirmative:negative:parameterDisplayRepresentation:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  sub_23F1314D0();
  v25 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = *v11;
  v13 = *((_QWORD *)v11 + 1);
  v14 = *((_QWORD *)v11 + 2);
  v15 = sub_23F131B8C();
  sub_23F17FC00(v10, 1);
  sub_23F1751F8((uint64_t)v8, v10);
  sub_23F17FEE0();
  sub_23F180390();
  v17 = *(_QWORD *)(v15 - 8);
  sub_23F1802E8(v10 + v16, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16));
  v18 = v10 + v8[6];
  *(_DWORD *)v18 = v12;
  *(_QWORD *)(v18 + 8) = v13;
  *(_QWORD *)(v18 + 16) = v14;
  v19 = v10 + v8[7];
  v20 = sub_23F17F940();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v21(v19, v4, v20);
  v21(v10 + v8[8], v2, v20);
  sub_23F17537C(v25, v10 + v8[9], &qword_256DFFC98);
  sub_23F1802E8(v10 + v8[11], v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32));
  v22 = v10 + v8[10];
  v23 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v22, 1, 1, v23);
}

void RGParameterConfirmationModel.ParameterRepresentation.init(title:subtitle:image:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23F17F940();
  sub_23F17FEF0(v4);
  v5 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  sub_23F17537C(a1, a2 + *(int *)(v5 + 20), &qword_256DFFC88);
  sub_23F1803B0(v6, a2 + *(int *)(v5 + 24), &qword_256DFFC90);
  sub_23F12612C();
}

uint64_t RGParameterConfirmationModel.ParameterRepresentation.title.getter()
{
  return sub_23F174B7C((uint64_t (*)(_QWORD))MEMORY[0x24BDCD380]);
}

void RGParameterConfirmationModel.ParameterRepresentation.subtitle.getter()
{
  sub_23F16EAF8(type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation);
}

void RGParameterConfirmationModel.ParameterRepresentation.image.getter()
{
  sub_23F16EB30(type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation);
}

uint64_t sub_23F171530(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656C746974627573 && a2 == 0xE800000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6567616D69 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F17166C(char a1)
{
  if (!a1)
    return 0x656C746974;
  if (a1 == 1)
    return 0x656C746974627573;
  return 0x6567616D69;
}

uint64_t sub_23F1716BC()
{
  char *v0;

  return sub_23F17166C(*v0);
}

uint64_t sub_23F1716C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F171530(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1716E8()
{
  sub_23F175304();
  return sub_23F2688B8();
}

uint64_t sub_23F171710()
{
  sub_23F175304();
  return sub_23F2688C4();
}

void RGParameterConfirmationModel.ParameterRepresentation.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;

  sub_23F131874();
  a22 = v25;
  a23 = v26;
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E001D8);
  sub_23F17FAC4();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F175304();
  sub_23F131994();
  a13 = 0;
  sub_23F17F940();
  sub_23F125DE4(&qword_256E00118, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD380], MEMORY[0x24BDCD390]);
  sub_23F17F928();
  if (!v23)
  {
    type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
    a12 = 1;
    sub_23F17FAD8();
    sub_23F180274();
    sub_23F17FD88();
    sub_23F125DE4(&qword_256E00120, (uint64_t (*)(uint64_t))MEMORY[0x24BEBA448], MEMORY[0x24BEBA458]);
    sub_23F17FAD8();
  }
  sub_23F126038((uint64_t)v29, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  sub_23F17FDF4();
  sub_23F1313FC();
}

void RGParameterConfirmationModel.ParameterRepresentation.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_23F131874();
  v32 = v0;
  v4 = v3;
  v25 = v5;
  sub_23F1217E8(&qword_256DFFC90);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F17FFE0(v7, v23);
  sub_23F1217E8(&qword_256DFFC88);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  v27 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23F17F940();
  v10 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  sub_23F17FBC8(v11, v23);
  v30 = sub_23F1217E8(&qword_256E001E8);
  v12 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v13 = sub_23F15E5B0();
  v14 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(v13);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1319B0();
  sub_23F12545C(v4, v4[3]);
  sub_23F175304();
  v31 = v1;
  v16 = v32;
  sub_23F268888();
  if (v16)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
  }
  else
  {
    v17 = v27;
    v32 = v12;
    v24 = v2;
    sub_23F125DE4(&qword_256E00130, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD380], MEMORY[0x24BDCD3A0]);
    v18 = v28;
    sub_23F180318();
    v23 = v10;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v24, v29, v18);
    v19 = (uint64_t)v17;
    sub_23F268678();
    v20 = v24;
    sub_23F17537C(v19, v24 + *(int *)(v14 + 20), &qword_256DFFC88);
    sub_23F17FD88();
    sub_23F180274();
    sub_23F125DE4(&qword_256E00138, v21, MEMORY[0x24BEBA460]);
    v22 = v26;
    sub_23F268678();
    sub_23F17FB20();
    sub_23F17537C(v22, v20 + *(int *)(v14 + 24), &qword_256DFFC90);
    sub_23F1325F8(v20, v25, type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
    sub_23F16D354(v20, type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation);
  }
  sub_23F1313FC();
}

uint64_t sub_23F171B88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023F293B40 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000444974;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x74616D7269666661 && a2 == 0xEB00000000657669;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x657669746167656ELL && a2 == 0xE800000000000000;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023F293BA0 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000017 && a2 == 0x800000023F293BC0 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x800000023F293B80)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else
        {
          v9 = sub_23F268798();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 7;
          else
            return 8;
        }
      }
    }
  }
}

uint64_t sub_23F171EF4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F171F34 + 4 * byte_23F26E346[a1]))(0x76456E6F69746361, 0xED00006449746E65);
}

unint64_t sub_23F171F34()
{
  return 0xD000000000000015;
}

void sub_23F171FEC()
{
  RGParameterConfirmationModel.ParameterRepresentation.init(from:)();
}

#error "23F172008: call analysis failed (funcsize=5)"

uint64_t sub_23F172014()
{
  unsigned __int8 *v0;

  return sub_23F171EF4(*v0);
}

uint64_t sub_23F17201C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F171B88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F172040()
{
  sub_23F175340();
  return sub_23F2688B8();
}

uint64_t sub_23F172068()
{
  sub_23F175340();
  return sub_23F2688C4();
}

void RGParameterConfirmationModel.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];
  uint64_t v11;
  char v12;

  sub_23F131874();
  v3 = v0;
  sub_23F1217E8(&qword_256E001F0);
  sub_23F17FAC4();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F175340();
  sub_23F131994();
  v12 = 0;
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F268714();
  if (!v1)
  {
    v7 = (int *)sub_23F17FEE0();
    sub_23F17F948(1);
    sub_23F17FA2C(v0 + v7[6]);
    sub_23F1315CC();
    v11 = v0 + v7[7];
    v12 = 3;
    v8 = sub_23F17F940();
    sub_23F125DE4(&qword_256E00118, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD380], MEMORY[0x24BDCD390]);
    v10[1] = v9;
    v11 = v8;
    sub_23F1315CC();
    v12 = 4;
    sub_23F1315CC();
    v11 = v3 + v7[9];
    v12 = 5;
    type metadata accessor for RGDisplayRepresentation(0);
    sub_23F125DE4(&qword_256E00178, type metadata accessor for RGDisplayRepresentation, (uint64_t)&protocol conformance descriptor for RGDisplayRepresentation);
    sub_23F17FC98();
    v11 = v3 + v7[10];
    v12 = 6;
    type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
    sub_23F125DE4(&qword_256E00200, type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation, (uint64_t)&protocol conformance descriptor for RGParameterConfirmationModel.ParameterRepresentation);
    sub_23F17FC98();
    sub_23F17F948(7);
  }
  sub_23F126038((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F1313FC();
}

void RGParameterConfirmationModel.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int *v34;
  char *v35;
  char *v36;
  int *v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  int *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  __int128 v68;

  sub_23F131874();
  v63 = v0;
  v4 = v3;
  v52 = v5;
  sub_23F1217E8(&qword_256DFFCA0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F125F70();
  v53 = v7;
  sub_23F1217E8(&qword_256DFFC98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F125F70();
  v54 = v9;
  v10 = sub_23F17F940();
  v65 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F14EFA0();
  v55 = v12;
  MEMORY[0x24BDAC7A8](v13);
  v56 = (char *)&v49 - v14;
  v15 = sub_23F131B8C();
  v59 = *(_QWORD *)(v15 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F180034();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v49 - v18;
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F1319B0();
  v60 = sub_23F1217E8(&qword_256E00208);
  MEMORY[0x24BDAC7A8](v60);
  v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_23F17FEE0();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v23);
  v62 = sub_23F18017C(v24, v49);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v62, 1, 1, v15);
  v25 = *(_QWORD *)(v4 + 32);
  v64 = v4;
  v26 = (_QWORD *)sub_23F17FE50();
  v28 = sub_23F12545C(v26, v27);
  sub_23F175340();
  v57 = v22;
  v29 = v63;
  sub_23F18037C();
  v58 = v15;
  if (!v29)
  {
    v30 = v56;
    v63 = v1;
    LOBYTE(v67) = 0;
    sub_23F125DE4(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v32 = v31;
    sub_23F1802C8();
    sub_23F268678();
    v35 = v62;
    sub_23F1751F8(v2, (uint64_t)v62);
    LOBYTE(v67) = 1;
    v36 = v19;
    sub_23F1802C8();
    sub_23F18012C();
    v37 = (int *)v61;
    v38 = v36;
    v39 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
    v39(&v35[*(int *)(v61 + 20)], v38, v15);
    sub_23F17FDC0();
    sub_23F18012C();
    v50 = (void (*)(char *, uint64_t, uint64_t))v39;
    v51 = v32;
    v40 = &v35[v37[6]];
    *(_DWORD *)v40 = v67;
    *(_OWORD *)(v40 + 8) = v68;
    LOBYTE(v67) = 3;
    sub_23F125DE4(&qword_256E00130, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD380], MEMORY[0x24BDCD3A0]);
    v41 = v66;
    sub_23F18012C();
    v42 = v37;
    v43 = &v35[v37[7]];
    v56 = *(char **)(v65 + 32);
    ((void (*)(char *, char *, uint64_t))v56)(v43, v30, v41);
    LOBYTE(v67) = 4;
    v44 = v55;
    sub_23F18012C();
    ((void (*)(char *, uint64_t, uint64_t))v56)(&v35[v42[8]], v44, v41);
    type metadata accessor for RGDisplayRepresentation(0);
    LOBYTE(v67) = 5;
    sub_23F125DE4(&qword_256E001A8, type metadata accessor for RGDisplayRepresentation, (uint64_t)&protocol conformance descriptor for RGDisplayRepresentation);
    v45 = v54;
    sub_23F1803B8();
    sub_23F268678();
    sub_23F17537C(v45, (uint64_t)&v35[v42[9]], &qword_256DFFC98);
    type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
    LOBYTE(v67) = 6;
    sub_23F125DE4(&qword_256E00210, type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation, (uint64_t)&protocol conformance descriptor for RGParameterConfirmationModel.ParameterRepresentation);
    v46 = v53;
    sub_23F1803B8();
    sub_23F268678();
    sub_23F17537C(v46, (uint64_t)&v35[v42[10]], &qword_256DFFCA0);
    LOBYTE(v67) = 7;
    v47 = v63;
    v48 = v58;
    sub_23F17FABC();
    sub_23F17FA1C();
    v50(&v35[v42[11]], v47, v48);
    sub_23F18013C((uint64_t)v35, v52);
    sub_23F17FF68();
    sub_23F1800B0((uint64_t)v35);
    goto LABEL_10;
  }
  v63 = v29;
  sub_23F17FC0C();
  v34 = (int *)v61;
  v33 = v62;
  sub_23F17FF68();
  sub_23F125E40((uint64_t)v33, &qword_256DFEB98);
  if ((_DWORD)v25)
  {
    sub_23F15E44C((uint64_t)&v33[v34[7]], *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
    if (!(_DWORD)v1)
    {
LABEL_6:
      if (!v28)
        goto LABEL_8;
      goto LABEL_7;
    }
  }
  else if (!(_DWORD)v1)
  {
    goto LABEL_6;
  }
  sub_23F15E44C((uint64_t)&v33[v34[8]], *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
  if (v28)
LABEL_7:
    sub_23F125E40((uint64_t)&v33[v34[9]], &qword_256DFFC98);
LABEL_8:
  if ((_DWORD)v29)
    sub_23F125E40((uint64_t)&v33[v34[10]], &qword_256DFFCA0);
LABEL_10:
  sub_23F1313FC();
}

void sub_23F17294C()
{
  RGParameterConfirmationModel.init(from:)();
}

void sub_23F172960()
{
  RGParameterConfirmationModel.encode(to:)();
}

void ArchivedViewModel.viewData.getter()
{
  uint64_t *v0;

  sub_23F17FEE8(*v0);
  sub_23F1317E0();
  sub_23F126078();
}

void ArchivedViewModel.appBundleId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void ArchivedViewModel.appDisplayName.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

uint64_t ArchivedViewModel.init(viewData:appBundleId:appDisplayName:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t sub_23F1729E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6174614477656976 && a2 == 0xE800000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6C70736944707061 && a2 == 0xEE00656D614E7961)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F172B70(char a1)
{
  if (!a1)
    return 0x6174614477656976;
  if (a1 == 1)
    return 0x6C646E7542707061;
  return 0x6C70736944707061;
}

uint64_t sub_23F172BDC()
{
  char *v0;

  return sub_23F172B70(*v0);
}

uint64_t sub_23F172BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1729E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F172C08()
{
  sub_23F1753A8();
  return sub_23F2688B8();
}

uint64_t sub_23F172C30()
{
  sub_23F1753A8();
  return sub_23F2688C4();
}

void ArchivedViewModel.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256E00218);
  sub_23F126210();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1319C8();
  sub_23F17FF4C();
  sub_23F12545C(v4, v4[3]);
  sub_23F1753A8();
  sub_23F2688A0();
  sub_23F146B94();
  sub_23F180098();
  if (!v0)
  {
    sub_23F18028C();
    sub_23F268720();
    sub_23F180268();
    sub_23F2686F0();
  }
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F1313FC();
}

void ArchivedViewModel.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  sub_23F131874();
  v2 = v1;
  v4 = v3;
  v5 = sub_23F1217E8(&qword_256E00228);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F12545C(v2, v2[3]);
  sub_23F1753A8();
  sub_23F268888();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F146AE4();
    sub_23F180318();
    sub_23F131170(v17, v18);
    v7 = sub_23F268684();
    v9 = v8;
    v16 = v7;
    sub_23F180268();
    sub_23F1315C4();
    v10 = v9;
    v11 = sub_23F268654();
    v13 = v12;
    v14 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v15 = v11;
    sub_23F15E3EC(v14);
    sub_23F131170(v17, v18);
    sub_23F1315C4();
    sub_23F15EBC0(v17);
    *v4 = v17;
    v4[1] = v18;
    v4[2] = v16;
    v4[3] = v10;
    v4[4] = v15;
    v4[5] = v13;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
    sub_23F15EBC0(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23F1313FC();
}

void sub_23F172F80()
{
  ArchivedViewModel.init(from:)();
}

void sub_23F172F94()
{
  ArchivedViewModel.encode(to:)();
}

void SiriSDSViewModel.sdsData.getter()
{
  uint64_t *v0;

  sub_23F17FEE8(*v0);
  sub_23F1317E0();
  sub_23F126078();
}

void SiriSDSViewModel.sdsBundleId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SiriSDSViewModel.snippetData.getter()
{
  uint64_t v0;

  sub_23F159FE4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_23F1317E0();
  sub_23F126078();
}

void SiriSDSViewModel.snippetBundleId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

uint64_t SiriSDSViewModel.init(sdsData:sdsBundleId:snippetData:snippetBundleId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t sub_23F173048(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x61746144736473 && a2 == 0xE700000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C646E7542736473 && a2 == 0xEB00000000644965;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x4474657070696E73 && a2 == 0xEB00000000617461;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x4274657070696E73 && a2 == 0xEF6449656C646E75)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F173248(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F17327C + 4 * byte_23F26E34E[a1]))(0x61746144736473, 0xE700000000000000);
}

uint64_t sub_23F17327C()
{
  return 0x6C646E7542736473;
}

uint64_t sub_23F17329C()
{
  return 0x4474657070696E73;
}

uint64_t sub_23F1732BC()
{
  return 0x4274657070696E73;
}

uint64_t sub_23F1732E0()
{
  unsigned __int8 *v0;

  return sub_23F173248(*v0);
}

uint64_t sub_23F1732E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F173048(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F17330C()
{
  sub_23F1753E4();
  return sub_23F2688B8();
}

uint64_t sub_23F173334()
{
  sub_23F1753E4();
  return sub_23F2688C4();
}

void SiriSDSViewModel.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F131874();
  v3 = v2;
  v4 = sub_23F1217E8(&qword_256E00230);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F1319C8();
  sub_23F17FF4C();
  sub_23F12545C(v3, v3[3]);
  sub_23F1753E4();
  sub_23F180304();
  sub_23F146B94();
  sub_23F180098();
  if (!v0)
  {
    sub_23F18028C();
    sub_23F268720();
    sub_23F17FAD8();
    sub_23F1800A4();
  }
  sub_23F17FF08(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23F17FDF4();
  sub_23F1313FC();
}

void SiriSDSViewModel.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;

  sub_23F131874();
  v2 = v1;
  v4 = v3;
  v5 = sub_23F1217E8(&qword_256E00240);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1319B0();
  sub_23F12545C(v2, v2[3]);
  sub_23F1753E4();
  sub_23F18037C();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F146AE4();
    sub_23F17FF30();
    sub_23F180318();
    v15 = v4;
    v7 = v16;
    LOBYTE(v16) = 1;
    sub_23F131170(v7, v17);
    sub_23F1803CC();
    v13 = sub_23F268684();
    v9 = v8;
    swift_bridgeObjectRetain();
    sub_23F17FF30();
    sub_23F268678();
    sub_23F159FE4(v16, v17);
    sub_23F1803CC();
    v10 = sub_23F268654();
    v12 = v11;
    v14 = v10;
    sub_23F15E3E0(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    sub_23F131170(v7, v17);
    swift_bridgeObjectRetain();
    sub_23F159FE4(v16, v17);
    sub_23F1315C4();
    sub_23F180280();
    sub_23F1318DC();
    sub_23F15EBC0(v7);
    *v15 = v7;
    v15[1] = v17;
    v15[2] = v13;
    v15[3] = v9;
    v15[4] = v16;
    v15[5] = v17;
    v15[6] = v14;
    v15[7] = v12;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
    sub_23F15EBC0(v7);
    sub_23F1318DC();
    sub_23F180280();
    swift_bridgeObjectRelease();
  }
  sub_23F1313FC();
}

void sub_23F173748()
{
  SiriSDSViewModel.init(from:)();
}

void sub_23F17375C()
{
  SiriSDSViewModel.encode(to:)();
}

uint64_t RGToolDisambiguationModel.init(actionEventId:actionResponseEventId:items:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  sub_23F18039C();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_23F131B8C();
  sub_23F17FE00(v8);
  v9 = type metadata accessor for RGToolDisambiguationModel(0);
  sub_23F17FE70(v9);
  *(_QWORD *)(v7 + *(int *)(v0 + 32)) = v3;
  *(_QWORD *)(v7 + *(int *)(v0 + 28)) = MEMORY[0x24BEE4AF8];
  sub_23F17FF08(v5, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v10 = sub_23F17FCD8();
  return sub_23F17FD9C(v10, v11, v12, v13);
}

uint64_t RGToolDisambiguationModel.init(actionEventId:actionResponseEventId:itemDisplayRepresentations:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  sub_23F18039C();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_23F131B8C();
  sub_23F17FE00(v8);
  v9 = type metadata accessor for RGToolDisambiguationModel(0);
  sub_23F17FE70(v9);
  *(_QWORD *)(v7 + *(int *)(v0 + 32)) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v7 + *(int *)(v0 + 28)) = v3;
  sub_23F17FF08(v5, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v10 = sub_23F17FCD8();
  return sub_23F17FD9C(v10, v11, v12, v13);
}

#error "23F1738AC: call analysis failed (funcsize=42)"

uint64_t RGToolDisambiguationModel.actionEventId.getter()
{
  return sub_23F174B7C((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t _s16IntelligenceFlow21RGDisambiguationModelV13actionEventId10Foundation4UUIDVvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F131B8C();
  v0 = sub_23F17FB54();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t (*RGToolDisambiguationModel.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGToolDisambiguationModel.systemResponseEventId.getter()
{
  return sub_23F170160(type metadata accessor for RGToolDisambiguationModel);
}

uint64_t RGToolDisambiguationModel.systemResponseEventId.setter(uint64_t a1)
{
  return sub_23F170194(a1, type metadata accessor for RGToolDisambiguationModel);
}

uint64_t (*RGToolDisambiguationModel.systemResponseEventId.modify())()
{
  sub_23F17FF94();
  sub_23F180384();
  return nullsub_1;
}

uint64_t RGToolDisambiguationModel.statementID.getter()
{
  return sub_23F1701E8(type metadata accessor for RGToolDisambiguationModel);
}

void RGToolDisambiguationModel.statementID.setter(int *a1)
{
  sub_23F170228(a1, type metadata accessor for RGToolDisambiguationModel);
}

uint64_t (*RGToolDisambiguationModel.statementID.modify())()
{
  sub_23F17FF94();
  sub_23F18030C();
  return nullsub_1;
}

uint64_t RGToolDisambiguationModel.itemDisplayRepresentations.getter()
{
  return sub_23F1739A4(type metadata accessor for RGToolDisambiguationModel);
}

uint64_t sub_23F1739A4(uint64_t (*a1)(_QWORD))
{
  sub_23F17FDCC(a1);
  return swift_bridgeObjectRetain();
}

void RGToolDisambiguationModel.itemDisplayRepresentations.setter(uint64_t a1)
{
  sub_23F1739CC(a1, type metadata accessor for RGToolDisambiguationModel);
}

void sub_23F1739CC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(int *)(sub_23F17FB78(a1, a2) + 28);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + v4) = v2;
  sub_23F12612C();
}

uint64_t (*RGToolDisambiguationModel.itemDisplayRepresentations.modify())()
{
  sub_23F17FF94();
  return nullsub_1;
}

uint64_t RGToolDisambiguationModel.items.getter()
{
  return sub_23F173A28(type metadata accessor for RGToolDisambiguationModel);
}

uint64_t sub_23F173A28(uint64_t (*a1)(_QWORD))
{
  sub_23F17FDCC(a1);
  return swift_bridgeObjectRetain();
}

void RGToolDisambiguationModel.items.setter(uint64_t a1)
{
  sub_23F173A50(a1, type metadata accessor for RGToolDisambiguationModel);
}

void sub_23F173A50(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(int *)(sub_23F17FB78(a1, a2) + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + v4) = v2;
  sub_23F12612C();
}

uint64_t (*RGToolDisambiguationModel.items.modify())()
{
  sub_23F17FF94();
  return nullsub_1;
}

uint64_t RGToolDisambiguationModel.actionResponseEventId.getter()
{
  return sub_23F1702AC(type metadata accessor for RGToolDisambiguationModel);
}

uint64_t RGToolDisambiguationModel.actionResponseEventId.setter(uint64_t a1)
{
  return sub_23F1702E0(a1, type metadata accessor for RGToolDisambiguationModel);
}

uint64_t (*RGToolDisambiguationModel.actionResponseEventId.modify())()
{
  sub_23F17FF94();
  return nullsub_1;
}

void RGToolDisambiguationModel.Item.init(title:subtitle:appBundleId:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;

  sub_23F17F940();
  sub_23F1801E8();
  v10(a5, a1);
  v11 = type metadata accessor for RGToolDisambiguationModel.Item(0);
  sub_23F17537C(a2, a5 + *(int *)(v11 + 20), &qword_256DFFC88);
  v12 = (_QWORD *)(a5 + *(int *)(v11 + 24));
  *v12 = a3;
  v12[1] = a4;
  sub_23F131ABC();
}

uint64_t RGToolDisambiguationModel.Item.title.getter()
{
  return sub_23F174B7C((uint64_t (*)(_QWORD))MEMORY[0x24BDCD380]);
}

void RGToolDisambiguationModel.Item.subtitle.getter()
{
  sub_23F16EAF8(type metadata accessor for RGToolDisambiguationModel.Item);
}

void RGToolDisambiguationModel.Item.appBundleId.getter()
{
  type metadata accessor for RGToolDisambiguationModel.Item(0);
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

uint64_t sub_23F173B98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656C746974627573 && a2 == 0xE800000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F173CF4(char a1)
{
  if (!a1)
    return 0x656C746974;
  if (a1 == 1)
    return 0x656C746974627573;
  return 0x6C646E7542707061;
}

uint64_t sub_23F173D50()
{
  char *v0;

  return sub_23F173CF4(*v0);
}

uint64_t sub_23F173D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F173B98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F173D7C()
{
  sub_23F175434();
  return sub_23F2688B8();
}

uint64_t sub_23F173DA4()
{
  sub_23F175434();
  return sub_23F2688C4();
}

void RGToolDisambiguationModel.Item.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;

  sub_23F131874();
  a22 = v25;
  a23 = v26;
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E00248);
  sub_23F17FAC4();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F175434();
  sub_23F131994();
  a13 = 0;
  sub_23F17F940();
  sub_23F125DE4(&qword_256E00118, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD380], MEMORY[0x24BDCD390]);
  sub_23F17F928();
  if (!v23)
  {
    type metadata accessor for RGToolDisambiguationModel.Item(0);
    a12 = 1;
    sub_23F17FAD8();
    sub_23F180274();
    sub_23F1800A4();
  }
  sub_23F126038((uint64_t)v29, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  sub_23F17FDF4();
  sub_23F1313FC();
}

void RGToolDisambiguationModel.Item.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F131874();
  v36 = v1;
  v6 = v5;
  v30 = v7;
  sub_23F1217E8(&qword_256DFFC88);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  v31 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23F17F940();
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F17FBC8(v11, v27);
  v34 = sub_23F1217E8(&qword_256E00258);
  sub_23F126210();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F15E9EC();
  v14 = type metadata accessor for RGToolDisambiguationModel.Item(v13);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F15E524();
  sub_23F12545C(v6, v6[3]);
  sub_23F175434();
  v35 = v4;
  v16 = v36;
  sub_23F268888();
  if (v16)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v6);
  }
  else
  {
    v36 = v3;
    v28 = v2;
    v29 = v6;
    sub_23F125DE4(&qword_256E00130, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD380], MEMORY[0x24BDCD3A0]);
    v18 = v32;
    v17 = v33;
    sub_23F17FE48();
    v19 = v0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v0, v17, v18);
    v20 = (uint64_t)v31;
    sub_23F180090();
    sub_23F17537C(v20, v0 + *(int *)(v14 + 20), &qword_256DFFC88);
    sub_23F180274();
    v21 = sub_23F268654();
    v22 = (uint64_t)v29;
    v23 = v21;
    v25 = v24;
    sub_23F17FB20();
    v26 = (uint64_t *)(v19 + *(int *)(v14 + 24));
    *v26 = v23;
    v26[1] = v25;
    sub_23F1325F8(v19, v30, type metadata accessor for RGToolDisambiguationModel.Item);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v22);
    sub_23F180370();
  }
  sub_23F1313FC();
}

uint64_t sub_23F17417C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023F293B40 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000444974;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023F293B60 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = a1 == 0x736D657469 && a2 == 0xE500000000000000;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x800000023F293B80)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v8 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 5;
        else
          return 6;
      }
    }
  }
}

uint64_t sub_23F174410(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F174450 + 4 * byte_23F26E352[a1]))(0x76456E6F69746361, 0xED00006449746E65);
}

unint64_t sub_23F174450()
{
  return 0xD000000000000015;
}

void sub_23F1744CC()
{
  RGToolDisambiguationModel.Item.init(from:)();
}

#error "23F1744E8: call analysis failed (funcsize=5)"

uint64_t sub_23F1744F4()
{
  unsigned __int8 *v0;

  return sub_23F174410(*v0);
}

uint64_t sub_23F1744FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F17417C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F174520()
{
  sub_23F175470();
  return sub_23F2688B8();
}

uint64_t sub_23F174548()
{
  sub_23F175470();
  return sub_23F2688C4();
}

void RGToolDisambiguationModel.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F131874();
  sub_23F17FEB0();
  sub_23F1217E8(&qword_256E00260);
  sub_23F17FAC4();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F175470();
  sub_23F131994();
  LOBYTE(v8) = 0;
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F17F928();
  if (!v0)
  {
    v6 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
    LOBYTE(v8) = 1;
    sub_23F17F928();
    sub_23F17FA2C(v1 + v6[6]);
    sub_23F17F99C();
    v8 = *(_QWORD *)(v1 + v6[7]);
    sub_23F1217E8(&qword_256E00168);
    sub_23F175008();
    sub_23F17F99C();
    v8 = *(_QWORD *)(v1 + v6[8]);
    sub_23F17FF24();
    sub_23F1217E8(&qword_256E00270);
    sub_23F1754AC();
    sub_23F17F99C();
    LOBYTE(v8) = 5;
    sub_23F17F928();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F17FDF4();
  sub_23F1313FC();
}

void RGToolDisambiguationModel.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  _QWORD v24[2];
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F131874();
  v33 = v0;
  v3 = v2;
  v26 = v4;
  v32 = sub_23F131B8C();
  v29 = *(_QWORD *)(v32 - 8);
  sub_23F125F30();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v9);
  v27 = sub_23F1217E8(&qword_256E00288);
  sub_23F126210();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F17FFA8();
  v28 = type metadata accessor for RGToolDisambiguationModel(v11);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F125F70();
  v30 = v3;
  v31 = v13;
  sub_23F12545C(v3, v3[3]);
  sub_23F175470();
  v14 = v33;
  sub_23F268888();
  if (v14)
  {
    sub_23F17FF68();
  }
  else
  {
    v33 = v1;
    v25 = v8;
    LOBYTE(v34) = 0;
    sub_23F125DE4(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v16 = v15;
    v17 = v32;
    sub_23F17FE68();
    v18 = *(_QWORD *)(v29 + 32);
    v19 = v31;
    sub_23F180244(v31);
    sub_23F17FF9C(1);
    sub_23F17FE68();
    v20 = (int *)v28;
    sub_23F180244(v19 + *(int *)(v28 + 20));
    sub_23F17FDC0();
    sub_23F17FE68();
    v24[0] = v18;
    v24[1] = v16;
    v21 = v20;
    sub_23F180144(v34);
    sub_23F1217E8(&qword_256E00168);
    sub_23F18025C();
    sub_23F17FCB8();
    v22 = v19;
    *(_QWORD *)(v19 + v21[7]) = v34;
    sub_23F1217E8(&qword_256E00270);
    sub_23F17FF24();
    sub_23F175528();
    sub_23F17FCB8();
    *(_QWORD *)(v19 + v21[8]) = v34;
    sub_23F17FF9C(5);
    v23 = v25;
    sub_23F17FE68();
    sub_23F17FC7C(*(uint64_t (**)(uint64_t, _QWORD))(v33 + 8));
    ((void (*)(uint64_t, char *, uint64_t))v24[0])(v22 + v21[9], v23, v17);
    sub_23F18013C(v22, v26);
    sub_23F17FF68();
    sub_23F1800B0(v22);
  }
  sub_23F1313FC();
}

void sub_23F174B48()
{
  RGToolDisambiguationModel.init(from:)();
}

void sub_23F174B5C()
{
  RGToolDisambiguationModel.encode(to:)();
}

uint64_t RGControlModel.controlMetadata.getter()
{
  return sub_23F174B7C((uint64_t (*)(_QWORD))MEMORY[0x24BEB9E18]);
}

uint64_t sub_23F174B7C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F17F978(a1);
  v1 = sub_23F17FA04();
  return sub_23F126180(v1, v2, v3, v4);
}

uint64_t RGControlModel.init(controlMetadata:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F2680B4();
  v0 = sub_23F17FE50();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t sub_23F174BCC()
{
  sub_23F1755A4();
  return sub_23F2688B8();
}

uint64_t sub_23F174BF4()
{
  sub_23F1755A4();
  return sub_23F2688C4();
}

uint64_t RGControlModel.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_23F1217E8(&qword_256E002A0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F1755A4();
  sub_23F2688A0();
  sub_23F2680B4();
  sub_23F125DE4(&qword_256DFF3E8, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9E18], MEMORY[0x24BEB9E28]);
  sub_23F268750();
  return sub_23F15E588((uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
}

void RGControlModel.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F131874();
  v4 = v3;
  v15 = v5;
  v17 = sub_23F2680B4();
  v14 = *(_QWORD *)(v17 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F125F70();
  v16 = v7;
  sub_23F1217E8(&qword_256E002B0);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F15E9EC();
  type metadata accessor for RGControlModel(v9);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v13 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F12545C(v4, v4[3]);
  sub_23F1755A4();
  sub_23F18037C();
  if (!v0)
  {
    sub_23F125DE4(&qword_256DFF410, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9E18], MEMORY[0x24BEB9E30]);
    sub_23F2686B4();
    sub_23F15E7D4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v12, v16, v17);
    sub_23F132624((uint64_t)v12, v15, type metadata accessor for RGControlModel);
  }
  sub_23F131BF4();
  sub_23F1313FC();
}

void sub_23F174E8C()
{
  RGControlModel.init(from:)();
}

uint64_t sub_23F174EA0()
{
  return RGControlModel.encode(to:)();
}

unint64_t sub_23F174EB4()
{
  unint64_t result;

  result = qword_256E000D8;
  if (!qword_256E000D8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SiriSDSViewModel, &type metadata for SiriSDSViewModel);
    atomic_store(result, (unint64_t *)&qword_256E000D8);
  }
  return result;
}

unint64_t sub_23F174EF0()
{
  unint64_t result;

  result = qword_256E000E0;
  if (!qword_256E000E0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ArchivedViewModel, &type metadata for ArchivedViewModel);
    atomic_store(result, (unint64_t *)&qword_256E000E0);
  }
  return result;
}

uint64_t type metadata accessor for RGDisplayRepresentation(uint64_t a1)
{
  return sub_23F12EDBC(a1, (uint64_t *)&unk_256E003B8);
}

unint64_t sub_23F174F40()
{
  unint64_t result;

  result = qword_256E00110;
  if (!qword_256E00110)
  {
    result = MEMORY[0x242667160](&unk_23F26FEE8, &type metadata for RGDisplayRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00110);
  }
  return result;
}

uint64_t type metadata accessor for RGDisambiguationModel.Item(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E00510);
}

unint64_t sub_23F174F90()
{
  unint64_t result;

  result = qword_256E00148;
  if (!qword_256E00148)
  {
    result = MEMORY[0x242667160](&unk_23F26FE98, &type metadata for RGDisambiguationModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00148);
  }
  return result;
}

unint64_t sub_23F174FCC()
{
  unint64_t result;

  result = qword_256E00160;
  if (!qword_256E00160)
  {
    result = MEMORY[0x242667160](&unk_23F26FE48, &type metadata for RGDisambiguationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00160);
  }
  return result;
}

unint64_t sub_23F175008()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E00170;
  if (!qword_256E00170)
  {
    v1 = sub_23F125540(&qword_256E00168);
    sub_23F125DE4(&qword_256E00178, type metadata accessor for RGDisplayRepresentation, (uint64_t)&protocol conformance descriptor for RGDisplayRepresentation);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E00170);
  }
  return result;
}

unint64_t sub_23F175084()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E00188;
  if (!qword_256E00188)
  {
    v1 = sub_23F125540(&qword_256E00180);
    sub_23F125DE4(&qword_256E00190, type metadata accessor for RGDisambiguationModel.Item, (uint64_t)&protocol conformance descriptor for RGDisambiguationModel.Item);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E00188);
  }
  return result;
}

unint64_t sub_23F175100()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E001A0;
  if (!qword_256E001A0)
  {
    v1 = sub_23F125540(&qword_256E00168);
    sub_23F125DE4(&qword_256E001A8, type metadata accessor for RGDisplayRepresentation, (uint64_t)&protocol conformance descriptor for RGDisplayRepresentation);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E001A0);
  }
  return result;
}

unint64_t sub_23F17517C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E001B0;
  if (!qword_256E001B0)
  {
    v1 = sub_23F125540(&qword_256E00180);
    sub_23F125DE4(&qword_256E001B8, type metadata accessor for RGDisambiguationModel.Item, (uint64_t)&protocol conformance descriptor for RGDisambiguationModel.Item);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E001B0);
  }
  return result;
}

uint64_t sub_23F1751F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F1217E8(&qword_256DFEB98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F175240(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F1217E8(&qword_256DFEB98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F175288()
{
  unint64_t result;

  result = qword_256E001C8;
  if (!qword_256E001C8)
  {
    result = MEMORY[0x242667160](&unk_23F26FDF8, &type metadata for RGActionConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E001C8);
  }
  return result;
}

void sub_23F1752C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F180208(a1, a2, a3);
  sub_23F143964(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23F126078();
}

uint64_t type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E00710);
}

unint64_t sub_23F175304()
{
  unint64_t result;

  result = qword_256E001E0;
  if (!qword_256E001E0)
  {
    result = MEMORY[0x242667160](&unk_23F26FDA8, &type metadata for RGParameterConfirmationModel.ParameterRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E001E0);
  }
  return result;
}

unint64_t sub_23F175340()
{
  unint64_t result;

  result = qword_256E001F8;
  if (!qword_256E001F8)
  {
    result = MEMORY[0x242667160](&unk_23F26FD58, &type metadata for RGParameterConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E001F8);
  }
  return result;
}

void sub_23F17537C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F180208(a1, a2, a3);
  sub_23F143964(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23F126078();
}

unint64_t sub_23F1753A8()
{
  unint64_t result;

  result = qword_256E00220;
  if (!qword_256E00220)
  {
    result = MEMORY[0x242667160](&unk_23F26FD08, &type metadata for ArchivedViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00220);
  }
  return result;
}

unint64_t sub_23F1753E4()
{
  unint64_t result;

  result = qword_256E00238;
  if (!qword_256E00238)
  {
    result = MEMORY[0x242667160](&unk_23F26FCB8, &type metadata for SiriSDSViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00238);
  }
  return result;
}

uint64_t type metadata accessor for RGToolDisambiguationModel.Item(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E00848);
}

unint64_t sub_23F175434()
{
  unint64_t result;

  result = qword_256E00250;
  if (!qword_256E00250)
  {
    result = MEMORY[0x242667160](&unk_23F26FC68, &type metadata for RGToolDisambiguationModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00250);
  }
  return result;
}

unint64_t sub_23F175470()
{
  unint64_t result;

  result = qword_256E00268;
  if (!qword_256E00268)
  {
    result = MEMORY[0x242667160](&unk_23F26FC18, &type metadata for RGToolDisambiguationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00268);
  }
  return result;
}

unint64_t sub_23F1754AC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E00278;
  if (!qword_256E00278)
  {
    v1 = sub_23F125540(&qword_256E00270);
    sub_23F125DE4(&qword_256E00280, type metadata accessor for RGToolDisambiguationModel.Item, (uint64_t)&protocol conformance descriptor for RGToolDisambiguationModel.Item);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E00278);
  }
  return result;
}

unint64_t sub_23F175528()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E00290;
  if (!qword_256E00290)
  {
    v1 = sub_23F125540(&qword_256E00270);
    sub_23F125DE4(&qword_256E00298, type metadata accessor for RGToolDisambiguationModel.Item, (uint64_t)&protocol conformance descriptor for RGToolDisambiguationModel.Item);
    v3 = v2;
    result = MEMORY[0x242667160](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E00290);
  }
  return result;
}

unint64_t sub_23F1755A4()
{
  unint64_t result;

  result = qword_256E002A8;
  if (!qword_256E002A8)
  {
    result = MEMORY[0x242667160](&unk_23F26FBC8, &type metadata for RGControlModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E002A8);
  }
  return result;
}

void sub_23F1755E0()
{
  sub_23F125DE4(&qword_256DFFA20, type metadata accessor for RGPluginModel, (uint64_t)&protocol conformance descriptor for RGPluginModel);
}

void sub_23F17560C()
{
  sub_23F125DE4(&qword_256DFFA10, type metadata accessor for RGPluginModel, (uint64_t)&protocol conformance descriptor for RGPluginModel);
}

uint64_t initializeBufferWithCopyOfBuffer for RGPluginModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23F175698 + 4 * byte_23F26E358[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for RGPluginModel(uint64_t *a1)
{
  uint64_t result;
  uint64_t v3;
  int *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t *, uint64_t);
  unint64_t v28;
  void (*v29)(uint64_t *, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_23F267D84();
      v29 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v29(a1, v3);
      v4 = (int *)type metadata accessor for RGDisambiguationModel(0);
      v29((uint64_t *)((char *)a1 + v4[5]), v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29((uint64_t *)((char *)a1 + v4[9]), v3);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 1:
      v3 = sub_23F267D84();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v3))
        (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v5 = (int *)type metadata accessor for RGActionConfirmationModel(0);
      v29 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v29((uint64_t *)((char *)a1 + v5[5]), v3);
      swift_bridgeObjectRelease();
      v6 = (char *)a1 + v5[7];
      v7 = sub_23F267CB8();
      v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
      v8(v6, v7);
      v8((char *)a1 + v5[8], v7);
      goto LABEL_22;
    case 2:
      v3 = sub_23F267D84();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v3))
        (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
      v29 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v29((uint64_t *)((char *)a1 + v4[5]), v3);
      swift_bridgeObjectRelease();
      v9 = (char *)a1 + v4[7];
      v10 = sub_23F267CB8();
      v11 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
      v11(v9, v10);
      v11((char *)a1 + v4[8], v10);
      v12 = (uint64_t)a1 + v4[9];
      v13 = (int *)type metadata accessor for RGDisplayRepresentation(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v12, 1, (uint64_t)v13))
      {
        v11((char *)v12, v10);
        v14 = v12 + v13[5];
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v14, 1, v10))
          v11((char *)v14, v10);
        v15 = v12 + v13[6];
        v16 = sub_23F2680C0();
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v15, 1, v16))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
        swift_bridgeObjectRelease();
        v17 = (uint64_t *)(v12 + v13[8]);
        v18 = v17[1];
        if (v18 >> 60 != 15)
          sub_23F1311B4(*v17, v18);
      }
      v19 = (uint64_t)a1 + v4[10];
      v20 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v19, 1, v20))
      {
        v11((char *)v19, v10);
        v21 = v19 + *(int *)(v20 + 20);
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v21, 1, v10))
          v11((char *)v21, v10);
        v22 = v19 + *(int *)(v20 + 24);
        v23 = sub_23F2680C0();
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v22, 1, v23))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      }
LABEL_20:
      v24 = v4[11];
      goto LABEL_23;
    case 3:
      v3 = sub_23F267D84();
      v29 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v29(a1, v3);
      v5 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
      v29((uint64_t *)((char *)a1 + v5[5]), v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_22:
      v24 = v5[9];
LABEL_23:
      v25 = (uint64_t *)((char *)a1 + v24);
      v26 = v3;
      v27 = (uint64_t (*)(uint64_t *, uint64_t))v29;
      goto LABEL_24;
    case 4:
      return sub_23F1311B4(*a1, a1[1]);
    case 5:
      sub_23F1311B4(*a1, a1[1]);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    case 6:
      sub_23F1311B4(*a1, a1[1]);
      swift_bridgeObjectRelease();
      v28 = a1[5];
      if (v28 >> 60 != 15)
        sub_23F1311B4(a1[4], v28);
      goto LABEL_31;
    case 7:
      v26 = sub_23F2680B4();
      v27 = *(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 8);
      v25 = a1;
LABEL_24:
      result = v27(v25, v26);
      break;
    case 8:
LABEL_31:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for RGPluginModel()
{
  char *v0;

  v0 = (char *)sub_23F176484 + 4 * byte_23F26E374[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F176484(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__dst, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v28 = sub_23F267D84();
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  v29(v26, v27, v28);
  v30 = (int *)type metadata accessor for RGDisambiguationModel(0);
  v29(v26 + v30[5], v27 + v30[5], v28);
  v31 = v30[6];
  v32 = v26 + v31;
  v33 = v27 + v31;
  *(_DWORD *)v32 = *(_DWORD *)v33;
  v34 = *(_QWORD *)(v33 + 16);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  *(_QWORD *)(v32 + 16) = v34;
  *(_QWORD *)(v26 + v30[7]) = *(_QWORD *)(v27 + v30[7]);
  *(_QWORD *)(v26 + v30[8]) = *(_QWORD *)(v27 + v30[8]);
  v35 = v30[9];
  v36 = v26 + v35;
  v37 = v27 + v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29(v36, v37, v28);
  v38 = v30[10];
  v39 = (_QWORD *)(v26 + v38);
  v40 = (_QWORD *)(v27 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = v30[11];
  v43 = v26 + v42;
  v44 = v27 + v42;
  swift_bridgeObjectRetain();
  v29(v43, v44, v28);
  swift_storeEnumTagMultiPayload();
  return v26;
}

uint64_t assignWithCopy for RGPluginModel(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F16D354(result, type metadata accessor for RGPluginModel);
    v2 = (char *)&loc_23F176D60 + 4 * byte_23F26E37D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

char *initializeWithTake for RGPluginModel(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *__dst;
  char *__dsta;
  void (*v73)(char *, char *, uint64_t);
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_23F267D84();
      v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = (int *)type metadata accessor for RGDisambiguationModel(0);
      v7(&a1[v8[5]], &a2[v8[5]], v6);
      v9 = v8[6];
      v10 = &a1[v9];
      v11 = &a2[v9];
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
      *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
      v7(&a1[v8[9]], &a2[v8[9]], v6);
      *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
      v7(&a1[v8[11]], &a2[v8[11]], v6);
      goto LABEL_32;
    case 1u:
      v12 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v12))
      {
        v13 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v12);
      }
      v23 = (int *)type metadata accessor for RGActionConfirmationModel(0);
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
      v24(&a1[v23[5]], &a2[v23[5]], v12);
      v25 = v23[6];
      v26 = &a1[v25];
      v27 = &a2[v25];
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
      v28 = v23[7];
      v29 = &a1[v28];
      v30 = &a2[v28];
      v31 = sub_23F267CB8();
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32);
      v32(v29, v30, v31);
      v32(&a1[v23[8]], &a2[v23[8]], v31);
      v24(&a1[v23[9]], &a2[v23[9]], v12);
      goto LABEL_32;
    case 2u:
      v14 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v14))
      {
        v15 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v14);
      }
      v33 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
      v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
      v77(&a1[v33[5]], &a2[v33[5]], v14);
      v34 = v33[6];
      v35 = &a1[v34];
      v36 = &a2[v34];
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
      v37 = v33[7];
      v38 = &a1[v37];
      v39 = &a2[v37];
      v40 = sub_23F267CB8();
      v41 = v38;
      v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32);
      v42(v41, v39, v40);
      v42(&a1[v33[8]], &a2[v33[8]], v40);
      v43 = v33[9];
      v44 = &a1[v43];
      v45 = &a2[v43];
      v46 = (int *)type metadata accessor for RGDisplayRepresentation(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v45, 1, (uint64_t)v46))
      {
        v47 = sub_23F1217E8(&qword_256DFFC98);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        v75 = v14;
        v42(v44, v45, v40);
        v48 = v46[5];
        __dst = &v44[v48];
        v49 = v42;
        v50 = &v45[v48];
        v73 = v49;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v45[v48], 1, v40))
        {
          v51 = sub_23F1217E8(&qword_256DFFC88);
          memcpy(__dst, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          v49(__dst, v50, v40);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v40);
        }
        v52 = v46[6];
        __dsta = &v44[v52];
        v53 = &v45[v52];
        v54 = sub_23F2680C0();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v53, 1, v54))
        {
          v55 = sub_23F1217E8(&qword_256DFFC90);
          memcpy(__dsta, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(__dsta, v53, v54);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v54);
        }
        *(_OWORD *)&v44[v46[7]] = *(_OWORD *)&v45[v46[7]];
        *(_OWORD *)&v44[v46[8]] = *(_OWORD *)&v45[v46[8]];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v44, 0, 1, (uint64_t)v46);
        v42 = v73;
        v14 = v75;
      }
      v56 = v33[10];
      v57 = &a1[v56];
      v58 = &a2[v56];
      v59 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v58, 1, v59))
      {
        v60 = sub_23F1217E8(&qword_256DFFCA0);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        v76 = v14;
        v42(v57, v58, v40);
        v61 = *(int *)(v59 + 20);
        v62 = &v57[v61];
        v74 = v42;
        v63 = &v58[v61];
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v58[v61], 1, v40))
        {
          v64 = sub_23F1217E8(&qword_256DFFC88);
          memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          v74(v62, v63, v40);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v62, 0, 1, v40);
        }
        v65 = *(int *)(v59 + 24);
        v66 = &v57[v65];
        v67 = &v58[v65];
        v68 = sub_23F2680C0();
        v14 = v76;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v67, 1, v68))
        {
          v69 = sub_23F1217E8(&qword_256DFFC90);
          memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v66, 0, 1, v68);
        }
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v57, 0, 1, v59);
      }
      v77(&a1[v33[11]], &a2[v33[11]], v14);
      goto LABEL_32;
    case 3u:
      v16 = sub_23F267D84();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
      v17(a1, a2, v16);
      v18 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
      v17(&a1[v18[5]], &a2[v18[5]], v16);
      v19 = v18[6];
      v20 = &a1[v19];
      v21 = &a2[v19];
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
      *(_QWORD *)&a1[v18[7]] = *(_QWORD *)&a2[v18[7]];
      *(_QWORD *)&a1[v18[8]] = *(_QWORD *)&a2[v18[8]];
      v17(&a1[v18[9]], &a2[v18[9]], v16);
      goto LABEL_32;
    case 7u:
      v22 = sub_23F2680B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
LABEL_32:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for RGPluginModel(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *__dst;
  char *__dsta;
  void (*v73)(char *, char *, uint64_t);
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_23F16D354((uint64_t)a1, type metadata accessor for RGPluginModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_23F267D84();
        v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
        v7(a1, a2, v6);
        v8 = (int *)type metadata accessor for RGDisambiguationModel(0);
        v7(&a1[v8[5]], &a2[v8[5]], v6);
        v9 = v8[6];
        v10 = &a1[v9];
        v11 = &a2[v9];
        *(_OWORD *)v10 = *(_OWORD *)v11;
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
        *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
        v7(&a1[v8[9]], &a2[v8[9]], v6);
        *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
        v7(&a1[v8[11]], &a2[v8[11]], v6);
        goto LABEL_32;
      case 1u:
        v12 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v12))
        {
          v13 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v12);
        }
        v23 = (int *)type metadata accessor for RGActionConfirmationModel(0);
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
        v24(&a1[v23[5]], &a2[v23[5]], v12);
        v25 = v23[6];
        v26 = &a1[v25];
        v27 = &a2[v25];
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
        v28 = v23[7];
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = sub_23F267CB8();
        v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32);
        v32(v29, v30, v31);
        v32(&a1[v23[8]], &a2[v23[8]], v31);
        v24(&a1[v23[9]], &a2[v23[9]], v12);
        goto LABEL_32;
      case 2u:
        v14 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v14))
        {
          v15 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v14);
        }
        v33 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
        v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
        v77(&a1[v33[5]], &a2[v33[5]], v14);
        v34 = v33[6];
        v35 = &a1[v34];
        v36 = &a2[v34];
        *(_OWORD *)v35 = *(_OWORD *)v36;
        *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
        v37 = v33[7];
        v38 = &a1[v37];
        v39 = &a2[v37];
        v40 = sub_23F267CB8();
        v41 = v38;
        v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32);
        v42(v41, v39, v40);
        v42(&a1[v33[8]], &a2[v33[8]], v40);
        v43 = v33[9];
        v44 = &a1[v43];
        v45 = &a2[v43];
        v46 = (int *)type metadata accessor for RGDisplayRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v45, 1, (uint64_t)v46))
        {
          v47 = sub_23F1217E8(&qword_256DFFC98);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          v75 = v14;
          v42(v44, v45, v40);
          v48 = v46[5];
          __dst = &v44[v48];
          v49 = v42;
          v50 = &v45[v48];
          v73 = v49;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v45[v48], 1, v40))
          {
            v51 = sub_23F1217E8(&qword_256DFFC88);
            memcpy(__dst, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          }
          else
          {
            v49(__dst, v50, v40);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v40);
          }
          v52 = v46[6];
          __dsta = &v44[v52];
          v53 = &v45[v52];
          v54 = sub_23F2680C0();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v53, 1, v54))
          {
            v55 = sub_23F1217E8(&qword_256DFFC90);
            memcpy(__dsta, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(__dsta, v53, v54);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v54);
          }
          v42 = v73;
          v14 = v75;
          *(_OWORD *)&v44[v46[7]] = *(_OWORD *)&v45[v46[7]];
          *(_OWORD *)&v44[v46[8]] = *(_OWORD *)&v45[v46[8]];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v44, 0, 1, (uint64_t)v46);
        }
        v56 = v33[10];
        v57 = &a1[v56];
        v58 = &a2[v56];
        v59 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v58, 1, v59))
        {
          v60 = sub_23F1217E8(&qword_256DFFCA0);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
          v77(&a1[v33[11]], &a2[v33[11]], v14);
        }
        else
        {
          v76 = v14;
          v42(v57, v58, v40);
          v61 = *(int *)(v59 + 20);
          v62 = &v57[v61];
          v74 = v42;
          v63 = &v58[v61];
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v58[v61], 1, v40))
          {
            v64 = sub_23F1217E8(&qword_256DFFC88);
            memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
          }
          else
          {
            v74(v62, v63, v40);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v62, 0, 1, v40);
          }
          v65 = *(int *)(v59 + 24);
          v66 = &v57[v65];
          v67 = &v58[v65];
          v68 = sub_23F2680C0();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v67, 1, v68))
          {
            v69 = sub_23F1217E8(&qword_256DFFC90);
            memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v66, 0, 1, v68);
          }
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v57, 0, 1, v59);
          v77(&a1[v33[11]], &a2[v33[11]], v76);
        }
        goto LABEL_32;
      case 3u:
        v16 = sub_23F267D84();
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
        v17(a1, a2, v16);
        v18 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
        v17(&a1[v18[5]], &a2[v18[5]], v16);
        v19 = v18[6];
        v20 = &a1[v19];
        v21 = &a2[v19];
        *(_OWORD *)v20 = *(_OWORD *)v21;
        *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
        *(_QWORD *)&a1[v18[7]] = *(_QWORD *)&a2[v18[7]];
        *(_QWORD *)&a1[v18[8]] = *(_QWORD *)&a2[v18[8]];
        v17(&a1[v18[9]], &a2[v18[9]], v16);
        goto LABEL_32;
      case 7u:
        v22 = sub_23F2680B4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
LABEL_32:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23F1784F0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = type metadata accessor for RGDisambiguationModel(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for RGActionConfirmationModel(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for RGParameterConfirmationModel(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for RGToolDisambiguationModel(319);
        if (v4 <= 0x3F)
        {
          result = sub_23F2680B4();
          if (v5 <= 0x3F)
          {
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RGDisplayRepresentation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for RGDisplayRepresentation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F178624(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23F26845C();
    if (!v5)
      atomic_store(v4, a2);
  }
  sub_23F126078();
}

char *initializeBufferWithCopyOfBuffer for RGDisambiguationModel(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v8(&a1[a3[5]], (char *)a2 + a3[5], v7);
    v9 = a3[6];
    v10 = a3[7];
    v11 = &a1[v9];
    v12 = (char *)a2 + v9;
    *(_DWORD *)v11 = *(_DWORD *)v12;
    v13 = *((_QWORD *)v12 + 2);
    *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
    *((_QWORD *)v11 + 2) = v13;
    *(_QWORD *)&a1[v10] = *(uint64_t *)((char *)a2 + v10);
    v14 = a3[9];
    *(_QWORD *)&a1[a3[8]] = *(uint64_t *)((char *)a2 + a3[8]);
    v15 = &a1[v14];
    v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8(v15, v16, v7);
    v17 = a3[10];
    v18 = a3[11];
    v19 = &a1[v17];
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *(_QWORD *)v19 = *v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = &a1[v18];
    v23 = (char *)a2 + v18;
    swift_bridgeObjectRetain();
    v8(v22, v23, v7);
  }
  return a1;
}

uint64_t destroy for RGDisambiguationModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_23F267D84();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  v6(a1 + a2[5], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6(a1 + a2[9], v4);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + a2[11], v4);
}

uint64_t initializeWithCopy for RGDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a3[7];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  v12 = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  *(_QWORD *)(v10 + 16) = v12;
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v13 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v14, v15, v6);
  v16 = a3[10];
  v17 = a3[11];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a1 + v17;
  v22 = a2 + v17;
  swift_bridgeObjectRetain();
  v7(v21, v22, v6);
  return a1;
}

uint64_t assignWithCopy for RGDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[9], a2 + a3[9], v6);
  v11 = a3[10];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[11], a2 + a3[11], v6);
  return a1;
}

uint64_t initializeWithTake for RGDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a3[7];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v12 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v7(a1 + v12, a2 + v12, v6);
  v13 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v7(a1 + v13, a2 + v13, v6);
  return a1;
}

uint64_t assignWithTake for RGDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = v12;
  *(_QWORD *)(v9 + 16) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  v7(a1 + a3[9], a2 + a3[9], v6);
  v13 = a3[10];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v7(a1 + a3[11], a2 + a3[11], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RGDisambiguationModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for RGDisambiguationModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F178C94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F267D84();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void _s16IntelligenceFlow23RGDisplayRepresentationVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _OWORD *v4;
  _QWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;

  sub_23F18039C();
  v5 = v3;
  if ((*(_DWORD *)(*((_QWORD *)v4 - 1) + 80) & 0x20000) != 0)
  {
    *v2 = *v3;
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = sub_23F17F940();
    sub_23F17FDD8(v7);
    if (sub_23F17FB04())
    {
      v8 = sub_23F1217E8(&qword_256DFFC88);
      sub_23F17FC68(v8);
    }
    else
    {
      sub_23F17FE38();
      sub_23F17FC00(v1, 0);
    }
    v9 = sub_23F17FA78();
    if (sub_23F17FB30())
    {
      v10 = sub_23F1217E8(&qword_256DFFC90);
      sub_23F17FA8C(v10);
    }
    else
    {
      sub_23F17FA48(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16));
      sub_23F17FAA0();
    }
    sub_23F17FC20();
    sub_23F1802F0();
    if (!v12 & v11)
    {
      *(_OWORD *)v0 = *v6;
    }
    else
    {
      v13 = *(_QWORD *)v6;
      sub_23F17FEE8(v13);
      *(_QWORD *)v0 = v13;
      *(_QWORD *)(v0 + 8) = v5;
    }
  }
  sub_23F131680();
}

void _s16IntelligenceFlow23RGDisplayRepresentationVwxx_0(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;

  v4 = sub_23F17F940();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v6, 1, v4))
    v5(v6, v4);
  v7 = a1 + a2[6];
  v8 = sub_23F17FD88();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  v9 = (uint64_t *)(a1 + a2[8]);
  v10 = v9[1];
  if (v10 >> 60 == 15)
    sub_23F131ABC();
  else
    sub_23F1311B4(*v9, v10);
}

void _s16IntelligenceFlow23RGDisplayRepresentationVwcp_0()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;

  sub_23F18039C();
  v3 = v2;
  v5 = v4;
  v6 = sub_23F17F940();
  sub_23F17FDD8(v6);
  if (sub_23F17FB04())
  {
    v7 = sub_23F1217E8(&qword_256DFFC88);
    sub_23F17FC68(v7);
  }
  else
  {
    sub_23F17FE38();
    sub_23F17FC00(v1, 0);
  }
  v8 = sub_23F17FA78();
  if (sub_23F17FB30())
  {
    v9 = sub_23F1217E8(&qword_256DFFC90);
    sub_23F17FA8C(v9);
  }
  else
  {
    sub_23F17FA48(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16));
    sub_23F17FAA0();
  }
  sub_23F17FC20();
  sub_23F1802F0();
  if (!v11 & v10)
  {
    *(_OWORD *)v0 = *v3;
  }
  else
  {
    v12 = *(_QWORD *)v3;
    sub_23F17FEE8(v12);
    *(_QWORD *)v0 = v12;
    *(_QWORD *)(v0 + 8) = v5;
  }
  sub_23F131680();
}

void _s16IntelligenceFlow23RGDisplayRepresentationVwca_0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  sub_23F125F3C();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = *(_QWORD *)(sub_23F17F940() - 8);
  sub_23F1800C0(v8, v6);
  v10 = sub_23F17FB84();
  if (v2)
  {
    if (!v10)
    {
      sub_23F1801F8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
      sub_23F180070();
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_23F17FF08(v0, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
LABEL_6:
    v11 = sub_23F1217E8(&qword_256DFFC88);
    sub_23F180050(v11);
    goto LABEL_7;
  }
  sub_23F1800C0(v0, v1);
LABEL_7:
  v12 = sub_23F17FA78();
  v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0, 1, v12);
  v14 = sub_23F17FB30();
  if (v13)
  {
    if (!v14)
    {
      sub_23F17FA48(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16));
      sub_23F17FAA0();
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v15 = *(_QWORD *)(v12 - 8);
  if (v14)
  {
    sub_23F1800FC(v15);
LABEL_12:
    v16 = sub_23F1217E8(&qword_256DFFC90);
    sub_23F17FA8C(v16);
    goto LABEL_13;
  }
  sub_23F17FA48(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 24));
LABEL_13:
  v17 = *(int *)(v4 + 28);
  v18 = (_QWORD *)(v8 + v17);
  v19 = (_QWORD *)(v6 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = *(int *)(v4 + 32);
  v21 = (uint64_t *)(v8 + v20);
  v22 = (uint64_t *)(v6 + v20);
  v23 = *(_QWORD *)(v6 + v20 + 8);
  if (*(_QWORD *)(v8 + v20 + 8) >> 60 != 15)
  {
    sub_23F1802F0();
    if (!(!v25 & v24))
    {
      v27 = *v22;
      sub_23F17FEE8(v27);
      v28 = *v21;
      v29 = v21[1];
      *v21 = v27;
      v21[1] = v23;
      sub_23F1311B4(v28, v29);
      goto LABEL_20;
    }
    sub_23F15B1EC((uint64_t)v21);
LABEL_19:
    *(_OWORD *)v21 = *(_OWORD *)v22;
    goto LABEL_20;
  }
  sub_23F1802F0();
  if (!v25 & v24)
    goto LABEL_19;
  v26 = *v22;
  sub_23F17FEE8(v26);
  *v21 = v26;
  v21[1] = v23;
LABEL_20:
  sub_23F125EFC();
}

void _s16IntelligenceFlow23RGDisplayRepresentationVwtk_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F18039C();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = sub_23F17F940();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, v4, v7);
  if (sub_23F17FB04())
  {
    v8 = sub_23F1217E8(&qword_256DFFC88);
    sub_23F17FC68(v8);
  }
  else
  {
    sub_23F17FE38();
    sub_23F17FC00(v0, 0);
  }
  v9 = sub_23F17FA78();
  if (sub_23F17FB30())
  {
    v10 = sub_23F1217E8(&qword_256DFFC90);
    sub_23F17FA8C(v10);
  }
  else
  {
    sub_23F17FA48(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32));
    sub_23F17FAA0();
  }
  v11 = *(int *)(v2 + 32);
  *(_OWORD *)(v6 + *(int *)(v2 + 28)) = *(_OWORD *)(v4 + *(int *)(v2 + 28));
  *(_OWORD *)(v6 + v11) = *(_OWORD *)(v4 + v11);
  sub_23F131680();
}

void _s16IntelligenceFlow23RGDisplayRepresentationVwta_0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;

  sub_23F125F3C();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = *(_QWORD *)(sub_23F17F940() - 8);
  sub_23F1800C0(v8, v6);
  v10 = sub_23F17FB84();
  if (v2)
  {
    if (!v10)
    {
      sub_23F1801F8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
      sub_23F180070();
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_23F17FF08(v0, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
LABEL_6:
    v11 = sub_23F1217E8(&qword_256DFFC88);
    sub_23F180050(v11);
    goto LABEL_7;
  }
  sub_23F1800C0(v0, v1);
LABEL_7:
  v12 = sub_23F17FA78();
  v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0, 1, v12);
  v14 = sub_23F17FB30();
  if (v13)
  {
    if (!v14)
    {
      sub_23F17FA48(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32));
      sub_23F17FAA0();
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v15 = *(_QWORD *)(v12 - 8);
  if (v14)
  {
    sub_23F1800FC(v15);
LABEL_12:
    v16 = sub_23F1217E8(&qword_256DFFC90);
    sub_23F17FA8C(v16);
    goto LABEL_13;
  }
  sub_23F17FA48(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 40));
LABEL_13:
  v17 = *(int *)(v4 + 28);
  v18 = (_QWORD *)(v8 + v17);
  v19 = (uint64_t *)(v6 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = *(int *)(v4 + 32);
  v23 = (uint64_t *)(v8 + v22);
  v24 = (uint64_t *)(v6 + v22);
  v25 = *(_QWORD *)(v8 + v22 + 8);
  if (v25 >> 60 != 15)
  {
    v26 = v24[1];
    if (v26 >> 60 != 15)
    {
      v27 = *v23;
      *v23 = *v24;
      v23[1] = v26;
      sub_23F1311B4(v27, v25);
      goto LABEL_18;
    }
    sub_23F15B1EC((uint64_t)v23);
  }
  *(_OWORD *)v23 = *(_OWORD *)v24;
LABEL_18:
  sub_23F125EFC();
}

uint64_t getEnumTagSinglePayload for RGDisambiguationModel.Item()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F179370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  sub_23F17F940();
  sub_23F17F9A8();
  if (v8)
  {
    v6 = sub_23F180064();
  }
  else
  {
    sub_23F1217E8(&qword_256DFFC88);
    sub_23F17F9A8();
    if (v8)
    {
      sub_23F1801DC();
    }
    else
    {
      sub_23F1217E8(&qword_256DFFC90);
      sub_23F17F9A8();
      if (!v10)
      {
        sub_23F17FA58(*(_QWORD *)(a1 + *(int *)(a3 + 28) + 8));
        sub_23F12612C();
        return;
      }
      v7 = v11;
      v9 = *(int *)(a3 + 24);
    }
    v6 = a1 + v9;
  }
  sub_23F1315B8(v6, a2, v7);
}

uint64_t storeEnumTagSinglePayload for RGDisambiguationModel.Item()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F179410(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F17F940();
  sub_23F17F968();
  if (v7)
  {
    sub_23F18010C();
  }
  else
  {
    sub_23F1217E8(&qword_256DFFC88);
    sub_23F17F968();
    if (v7)
    {
      sub_23F180118();
    }
    else
    {
      sub_23F1217E8(&qword_256DFFC90);
      sub_23F17F968();
      if (!v8)
      {
        *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = a2;
        sub_23F12612C();
        return;
      }
    }
  }
  sub_23F17FE5C();
  sub_23F126098(v9, v10, v11, v12);
}

void sub_23F1794A4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F267CB8();
  if (v0 <= 0x3F)
  {
    sub_23F178624(319, &qword_256E003C8, (void (*)(uint64_t))MEMORY[0x24BDCD380]);
    if (v1 <= 0x3F)
    {
      sub_23F178624(319, qword_256E003D0, (void (*)(uint64_t))MEMORY[0x24BEBA448]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RGActionConfirmationModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    }
    else
    {
      v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v9(a1, a2, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v9((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v11 = a3[6];
    v12 = a3[7];
    v13 = (char *)a1 + v11;
    v14 = (char *)a2 + v11;
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v15 = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
    *((_QWORD *)v13 + 2) = v15;
    v16 = (char *)a1 + v12;
    v17 = (char *)a2 + v12;
    v18 = sub_23F267CB8();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    v19((char *)a1 + a3[8], (char *)a2 + a3[8], v18);
    v9((uint64_t *)((char *)a1 + a3[9]), (uint64_t *)((char *)a2 + a3[9]), v7);
  }
  return a1;
}

uint64_t destroy for RGActionConfirmationModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t);

  v4 = sub_23F267D84();
  v5 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v4);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  if (!v5)
    v10(a1, v4);
  v10(a1 + a2[5], v4);
  swift_bridgeObjectRelease();
  v6 = a1 + a2[7];
  v7 = sub_23F267CB8();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + a2[8], v7);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1 + a2[9], v4);
}

char *initializeWithCopy for RGActionConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);

  v6 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  }
  else
  {
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v8(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = a3[7];
  v11 = &a1[v9];
  v12 = &a2[v9];
  *(_DWORD *)v11 = *(_DWORD *)v12;
  v13 = *((_QWORD *)v12 + 2);
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  *((_QWORD *)v11 + 2) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = sub_23F267CB8();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  v17(&a1[a3[8]], &a2[a3[8]], v16);
  v8(&a1[a3[9]], &a2[a3[9]], v6);
  return a1;
}

char *assignWithCopy for RGActionConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);

  v6 = sub_23F267D84();
  v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      v9 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      v10 = *(_QWORD *)(v6 - 8);
    }
    else
    {
      v10 = *(_QWORD *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    v10 = *(_QWORD *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      v11 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(a1, a2, v6);
    }
  }
  v12 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v12(&a1[a3[5]], &a2[a3[5]], v6);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_23F267CB8();
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24);
  v20(v17, v18, v19);
  v20(&a1[a3[8]], &a2[a3[8]], v19);
  v12(&a1[a3[9]], &a2[a3[9]], v6);
  return a1;
}

char *initializeWithTake for RGActionConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);

  v6 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  }
  else
  {
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v8(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = a3[7];
  v11 = &a1[v9];
  v12 = &a2[v9];
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
  v13 = &a1[v10];
  v14 = &a2[v10];
  v15 = sub_23F267CB8();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(&a1[a3[8]], &a2[a3[8]], v15);
  v8(&a1[a3[9]], &a2[a3[9]], v6);
  return a1;
}

char *assignWithTake for RGActionConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);

  v6 = sub_23F267D84();
  v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      v9 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      v10 = *(_QWORD *)(v6 - 8);
    }
    else
    {
      v10 = *(_QWORD *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    v10 = *(_QWORD *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      v11 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(a1, a2, v6);
    }
  }
  v12 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v12(&a1[a3[5]], &a2[a3[5]], v6);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v17 = *((_QWORD *)v15 + 1);
  v16 = *((_QWORD *)v15 + 2);
  *((_QWORD *)v14 + 1) = v17;
  *((_QWORD *)v14 + 2) = v16;
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_23F267CB8();
  v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40);
  v22(v19, v20, v21);
  v22(&a1[a3[8]], &a2[a3[8]], v21);
  v12(&a1[a3[9]], &a2[a3[9]], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RGActionConfirmationModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F179DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  sub_23F180250();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F17F9A8();
  if (v8)
  {
    v6 = sub_23F180064();
  }
  else
  {
    sub_23F131B8C();
    sub_23F17F9A8();
    if (v8)
    {
      sub_23F1801DC();
    }
    else
    {
      if ((_DWORD)v3 == 2147483646)
      {
        sub_23F17FA58(*(_QWORD *)(v4 + *(int *)(a3 + 24) + 16));
        sub_23F12612C();
        return;
      }
      v7 = sub_23F17F940();
      v9 = *(int *)(a3 + 28);
    }
    v6 = v4 + v9;
  }
  sub_23F1315B8(v6, v3, v7);
}

uint64_t storeEnumTagSinglePayload for RGActionConfirmationModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F179E88(uint64_t a1, uint64_t a2, int a3)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F180250();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F17F968();
  if (v4)
  {
    sub_23F18010C();
  }
  else
  {
    sub_23F131B8C();
    sub_23F17F968();
    if (v4)
    {
      sub_23F180118();
    }
    else
    {
      if (a3 == 2147483646)
      {
        sub_23F1802B4();
        sub_23F12612C();
        return;
      }
      sub_23F17F940();
    }
  }
  sub_23F17FE5C();
  sub_23F126098(v5, v6, v7, v8);
}

void sub_23F179F08()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F178624(319, (unint64_t *)&qword_256E005C0, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
  {
    sub_23F267D84();
    if (v1 <= 0x3F)
    {
      sub_23F267CB8();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RGParameterConfirmationModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *__dst;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  void (*v61)(char *, char *, uint64_t);
  void (*v62)(uint64_t *, uint64_t *, uint64_t);
  void (*v63)(uint64_t *, uint64_t *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    }
    else
    {
      v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v9(a1, a2, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v9((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v11 = a3[6];
    v12 = a3[7];
    v13 = (char *)a1 + v11;
    v14 = (char *)a2 + v11;
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v15 = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
    *((_QWORD *)v13 + 2) = v15;
    v16 = (char *)a1 + v12;
    v17 = (char *)a2 + v12;
    v18 = sub_23F267CB8();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    v19((char *)a1 + a3[8], (char *)a2 + a3[8], v18);
    v20 = a3[9];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = (int *)type metadata accessor for RGDisplayRepresentation(0);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22, 1, (uint64_t)v23))
    {
      v24 = sub_23F1217E8(&qword_256DFFC98);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v62 = v9;
      v19(v21, v22, v18);
      v25 = v23[5];
      __dst = &v21[v25];
      v26 = v19;
      v27 = &v22[v25];
      v59 = v7;
      v60 = v26;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v22[v25], 1, v18))
      {
        v28 = sub_23F1217E8(&qword_256DFFC88);
        memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        v26(__dst, v27, v18);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v18);
      }
      v29 = v23[6];
      v30 = &v21[v29];
      v31 = &v22[v29];
      v32 = sub_23F2680C0();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v31, 1, v32))
      {
        v33 = sub_23F1217E8(&qword_256DFFC90);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v30, 0, 1, v32);
      }
      v34 = v23[7];
      v35 = &v21[v34];
      v36 = &v22[v34];
      v37 = *((_QWORD *)v36 + 1);
      *(_QWORD *)v35 = *(_QWORD *)v36;
      *((_QWORD *)v35 + 1) = v37;
      v38 = v23[8];
      v39 = &v21[v38];
      v40 = &v22[v38];
      v41 = *((_QWORD *)v40 + 1);
      swift_bridgeObjectRetain();
      v7 = v59;
      if (v41 >> 60 == 15)
      {
        *(_OWORD *)v39 = *(_OWORD *)v40;
      }
      else
      {
        v42 = *(_QWORD *)v40;
        sub_23F131170(v42, v41);
        *(_QWORD *)v39 = v42;
        *((_QWORD *)v39 + 1) = v41;
      }
      v19 = v60;
      v9 = v62;
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v21, 0, 1, (uint64_t)v23);
    }
    v43 = a3[10];
    v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    v46 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v45, 1, v46))
    {
      v47 = sub_23F1217E8(&qword_256DFFCA0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v63 = v9;
      v19(v44, v45, v18);
      v48 = *(int *)(v46 + 20);
      v49 = &v44[v48];
      v61 = v19;
      v50 = &v45[v48];
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v45[v48], 1, v18))
      {
        v51 = sub_23F1217E8(&qword_256DFFC88);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        v61(v49, v50, v18);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v49, 0, 1, v18);
      }
      v52 = *(int *)(v46 + 24);
      v53 = &v44[v52];
      v54 = &v45[v52];
      v55 = sub_23F2680C0();
      v9 = v63;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v54, 1, v55))
      {
        v56 = sub_23F1217E8(&qword_256DFFC90);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v53, 0, 1, v55);
      }
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v44, 0, 1, v46);
    }
    v9((uint64_t *)((char *)a1 + a3[11]), (uint64_t *)((char *)a2 + a3[11]), v7);
  }
  return a1;
}

uint64_t destroy for RGParameterConfirmationModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  int v5;
  void (*v6)(_QWORD, _QWORD);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v23)(_QWORD, _QWORD);

  v4 = sub_23F267D84();
  v5 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v4);
  v6 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 8) + 8);
  v23 = v6;
  if (!v5)
  {
    v6(a1, v4);
    v6 = v23;
  }
  v6(a1 + a2[5], v4);
  swift_bridgeObjectRelease();
  v7 = a1 + a2[7];
  v8 = sub_23F267CB8();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + a2[8], v8);
  v10 = a1 + a2[9];
  v11 = (int *)type metadata accessor for RGDisplayRepresentation(0);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v10, 1, (uint64_t)v11))
  {
    v9(v10, v8);
    v12 = v10 + v11[5];
    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v12, 1, v8))
      v9(v12, v8);
    v13 = v10 + v11[6];
    v14 = sub_23F2680C0();
    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
    swift_bridgeObjectRelease();
    v15 = (uint64_t *)(v10 + v11[8]);
    v16 = v15[1];
    if (v16 >> 60 != 15)
      sub_23F1311B4(*v15, v16);
  }
  v17 = a1 + a2[10];
  v18 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v17, 1, v18))
  {
    v9(v17, v8);
    v19 = v17 + *(int *)(v18 + 20);
    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v19, 1, v8))
      v9(v19, v8);
    v20 = v17 + *(int *)(v18 + 24);
    v21 = sub_23F2680C0();
    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  }
  return ((uint64_t (*)(uint64_t, uint64_t))v23)(a1 + a2[11], v4);
}

char *initializeWithCopy for RGParameterConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *__dst;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(char *, char *, uint64_t);
  void (*v61)(char *, char *, uint64_t);

  v6 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  }
  else
  {
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v8(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = a3[7];
  v11 = &a1[v9];
  v12 = &a2[v9];
  *(_DWORD *)v11 = *(_DWORD *)v12;
  v13 = *((_QWORD *)v12 + 2);
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  *((_QWORD *)v11 + 2) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = sub_23F267CB8();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  v17(&a1[a3[8]], &a2[a3[8]], v16);
  v18 = a3[9];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = (int *)type metadata accessor for RGDisplayRepresentation(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, (uint64_t)v21))
  {
    v22 = sub_23F1217E8(&qword_256DFFC98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v60 = v8;
    v17(v19, v20, v16);
    v23 = v21[5];
    __dst = &v19[v23];
    v24 = v17;
    v25 = &v20[v23];
    v57 = v6;
    v58 = v24;
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v20[v23], 1, v16))
    {
      v26 = sub_23F1217E8(&qword_256DFFC88);
      memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v24(__dst, v25, v16);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v16);
    }
    v27 = v21[6];
    v28 = &v19[v27];
    v29 = &v20[v27];
    v30 = sub_23F2680C0();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v29, 1, v30))
    {
      v31 = sub_23F1217E8(&qword_256DFFC90);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v28, 0, 1, v30);
    }
    v32 = v21[7];
    v33 = &v19[v32];
    v34 = &v20[v32];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    v36 = v21[8];
    v37 = &v19[v36];
    v38 = &v20[v36];
    v39 = *((_QWORD *)v38 + 1);
    swift_bridgeObjectRetain();
    v6 = v57;
    if (v39 >> 60 == 15)
    {
      *(_OWORD *)v37 = *(_OWORD *)v38;
    }
    else
    {
      v40 = *(_QWORD *)v38;
      sub_23F131170(v40, v39);
      *(_QWORD *)v37 = v40;
      *((_QWORD *)v37 + 1) = v39;
    }
    v17 = v58;
    v8 = v60;
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, (uint64_t)v21);
  }
  v41 = a3[10];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v43, 1, v44))
  {
    v45 = sub_23F1217E8(&qword_256DFFCA0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v61 = v8;
    v17(v42, v43, v16);
    v46 = *(int *)(v44 + 20);
    v47 = &v42[v46];
    v59 = v17;
    v48 = &v43[v46];
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v43[v46], 1, v16))
    {
      v49 = sub_23F1217E8(&qword_256DFFC88);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      v59(v47, v48, v16);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v47, 0, 1, v16);
    }
    v50 = *(int *)(v44 + 24);
    v51 = &v42[v50];
    v52 = &v43[v50];
    v53 = sub_23F2680C0();
    v8 = v61;
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v52, 1, v53))
    {
      v54 = sub_23F1217E8(&qword_256DFFC90);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v51, 0, 1, v53);
    }
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v42, 0, 1, v44);
  }
  v8(&a1[a3[11]], &a2[a3[11]], v6);
  return a1;
}

char *assignWithCopy for RGParameterConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  int v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int v55;
  size_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  void (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  void *v78;
  const void *v79;
  uint64_t v80;
  size_t v81;
  void *v82;
  const void *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  int v87;
  int v88;
  uint64_t v89;
  void *v90;
  const void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  void (*v105)(char *, char *, uint64_t);
  void (*v106)(char *, char *, uint64_t);
  void (*v107)(char *, char *, uint64_t);
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v6 = sub_23F267D84();
  v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      v9 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      v10 = *(_QWORD *)(v6 - 8);
    }
    else
    {
      v10 = *(_QWORD *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    v10 = *(_QWORD *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      v11 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(a1, a2, v6);
    }
  }
  v12 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v12(&a1[a3[5]], &a2[a3[5]], v6);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_23F267CB8();
  v113 = *(_QWORD *)(v19 - 8);
  v20 = *(void (**)(char *, char *, uint64_t))(v113 + 24);
  v20(v17, v18, v19);
  v104 = v20;
  v20(&a1[a3[8]], &a2[a3[8]], v19);
  v21 = a3[9];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = (int *)type metadata accessor for RGDisplayRepresentation(0);
  LODWORD(v17) = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22, 1, (uint64_t)v24);
  v25 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v23, 1, (uint64_t)v24);
  if (!(_DWORD)v17)
  {
    if (v25)
    {
      sub_23F16D354((uint64_t)v22, type metadata accessor for RGDisplayRepresentation);
      goto LABEL_14;
    }
    v106 = v12;
    v110 = v6;
    v104(v22, v23, v19);
    v32 = v24[5];
    v33 = &v22[v32];
    v34 = &v23[v32];
    v35 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v22[v32], 1, v19);
    v36 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v34, 1, v19);
    if (v35)
    {
      if (!v36)
      {
        (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v33, v34, v19);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v33, 0, 1, v19);
        goto LABEL_29;
      }
    }
    else
    {
      if (!v36)
      {
        v104(v33, v34, v19);
LABEL_29:
        v51 = v24[6];
        v52 = (uint64_t)&v22[v51];
        v53 = &v23[v51];
        v54 = sub_23F2680C0();
        v103 = v52;
        LODWORD(v52) = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v52, 1, v54);
        v55 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v53, 1, v54);
        if ((_DWORD)v52)
        {
          if (v55)
          {
            v56 = *(_QWORD *)(*(_QWORD *)(sub_23F1217E8(&qword_256DFFC90) - 8) + 64);
            v57 = (void *)v103;
LABEL_34:
            memcpy(v57, v53, v56);
            goto LABEL_38;
          }
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v103, v53, v54);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v103, 0, 1, v54);
        }
        else
        {
          v58 = *(_QWORD *)(v54 - 8);
          if (v55)
          {
            (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v103, v54);
            v56 = *(_QWORD *)(*(_QWORD *)(sub_23F1217E8(&qword_256DFFC90) - 8) + 64);
            v57 = (void *)v103;
            goto LABEL_34;
          }
          (*(void (**)(uint64_t, char *, uint64_t))(v58 + 24))(v103, v53, v54);
        }
LABEL_38:
        v59 = v24[7];
        v60 = &v22[v59];
        v61 = &v23[v59];
        *(_QWORD *)v60 = *(_QWORD *)v61;
        *((_QWORD *)v60 + 1) = *((_QWORD *)v61 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v62 = v24[8];
        v63 = (uint64_t *)&v22[v62];
        v64 = (uint64_t *)&v23[v62];
        v65 = *(_QWORD *)&v23[v62 + 8];
        v12 = v106;
        v6 = v110;
        if ((unint64_t)v63[1] >> 60 == 15)
        {
          if (v65 >> 60 != 15)
          {
            v66 = *v64;
            sub_23F131170(v66, v65);
            *v63 = v66;
            v63[1] = v65;
            goto LABEL_45;
          }
        }
        else
        {
          if (v65 >> 60 != 15)
          {
            v67 = *v64;
            sub_23F131170(v67, v65);
            v68 = *v63;
            v69 = v63[1];
            *v63 = v67;
            v63[1] = v65;
            sub_23F1311B4(v68, v69);
            goto LABEL_45;
          }
          sub_23F15B1EC((uint64_t)v63);
        }
        *(_OWORD *)v63 = *(_OWORD *)v64;
        goto LABEL_45;
      }
      (*(void (**)(char *, uint64_t))(v113 + 8))(v33, v19);
    }
    v50 = sub_23F1217E8(&qword_256DFFC88);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_29;
  }
  if (v25)
  {
LABEL_14:
    v31 = sub_23F1217E8(&qword_256DFFC98);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_45;
  }
  v105 = v12;
  v109 = v6;
  v26 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
  v26(v22, v23, v19);
  v27 = v24[5];
  v28 = &v22[v27];
  v29 = &v23[v27];
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v23[v27], 1, v19))
  {
    v30 = sub_23F1217E8(&qword_256DFFC88);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v26(v28, v29, v19);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v28, 0, 1, v19);
  }
  v37 = v24[6];
  v38 = &v22[v37];
  v39 = &v23[v37];
  v40 = sub_23F2680C0();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v39, 1, v40))
  {
    v41 = sub_23F1217E8(&qword_256DFFC90);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v38, 0, 1, v40);
  }
  v42 = v24[7];
  v43 = &v22[v42];
  v44 = &v23[v42];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
  v45 = v24[8];
  v46 = &v22[v45];
  v47 = &v23[v45];
  v48 = *((_QWORD *)v47 + 1);
  swift_bridgeObjectRetain();
  v12 = v105;
  if (v48 >> 60 == 15)
  {
    *(_OWORD *)v46 = *(_OWORD *)v47;
  }
  else
  {
    v49 = *(_QWORD *)v47;
    sub_23F131170(v49, v48);
    *(_QWORD *)v46 = v49;
    *((_QWORD *)v46 + 1) = v48;
  }
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v22, 0, 1, (uint64_t)v24);
  v6 = v109;
LABEL_45:
  v70 = a3[10];
  v71 = (uint64_t)&a1[v70];
  v72 = (uint64_t)&a2[v70];
  v73 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  v74 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v71, 1, v73);
  v75 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v72, 1, v73);
  if (v74)
  {
    if (!v75)
    {
      v107 = v12;
      v111 = v6;
      v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16);
      v76(v71, v72, v19);
      v77 = *(int *)(v73 + 20);
      v78 = (void *)(v71 + v77);
      v79 = (const void *)(v72 + v77);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v72 + v77, 1, v19))
      {
        v80 = sub_23F1217E8(&qword_256DFFC88);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        v76((uint64_t)v78, (uint64_t)v79, v19);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v78, 0, 1, v19);
      }
      v89 = *(int *)(v73 + 24);
      v90 = (void *)(v71 + v89);
      v91 = (const void *)(v72 + v89);
      v92 = sub_23F2680C0();
      v12 = v107;
      v6 = v111;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v91, 1, v92))
      {
        v93 = sub_23F1217E8(&qword_256DFFC90);
        memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v90, v91, v92);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v90, 0, 1, v92);
      }
      v94 = v71;
      goto LABEL_61;
    }
    goto LABEL_51;
  }
  if (v75)
  {
    sub_23F16D354(v71, type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation);
LABEL_51:
    v81 = *(_QWORD *)(*(_QWORD *)(sub_23F1217E8(&qword_256DFFCA0) - 8) + 64);
    v82 = (void *)v71;
    v83 = (const void *)v72;
    goto LABEL_52;
  }
  v108 = v12;
  v112 = v6;
  v104((char *)v71, (char *)v72, v19);
  v84 = *(int *)(v73 + 20);
  v85 = (char *)(v71 + v84);
  v86 = (char *)(v72 + v84);
  v87 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v71 + v84, 1, v19);
  v88 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v86, 1, v19);
  if (!v87)
  {
    if (!v88)
    {
      v104(v85, v86, v19);
      goto LABEL_66;
    }
    (*(void (**)(char *, uint64_t))(v113 + 8))(v85, v19);
    goto LABEL_65;
  }
  if (v88)
  {
LABEL_65:
    v96 = sub_23F1217E8(&qword_256DFFC88);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    goto LABEL_66;
  }
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v85, v86, v19);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v85, 0, 1, v19);
LABEL_66:
  v97 = *(int *)(v73 + 24);
  v98 = v71 + v97;
  v99 = v72 + v97;
  v73 = sub_23F2680C0();
  v100 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v98, 1, v73);
  v101 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v99, 1, v73);
  v12 = v108;
  v6 = v112;
  if (v100)
  {
    if (!v101)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v98, v99, v73);
      v94 = v98;
LABEL_61:
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v94, 0, 1, v73);
      goto LABEL_62;
    }
  }
  else
  {
    v102 = *(_QWORD *)(v73 - 8);
    if (!v101)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 24))(v98, v99, v73);
      goto LABEL_62;
    }
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v98, v73);
  }
  v81 = *(_QWORD *)(*(_QWORD *)(sub_23F1217E8(&qword_256DFFC90) - 8) + 64);
  v82 = (void *)v98;
  v83 = (const void *)v99;
LABEL_52:
  memcpy(v82, v83, v81);
LABEL_62:
  v12(&a1[a3[11]], &a2[a3[11]], v6);
  return a1;
}

char *initializeWithTake for RGParameterConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *__dst;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);

  v6 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  }
  else
  {
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v8(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v48 = v8;
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = a3[7];
  v11 = &a1[v9];
  v12 = &a2[v9];
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
  v13 = &a1[v10];
  v14 = &a2[v10];
  v15 = sub_23F267CB8();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(&a1[a3[8]], &a2[a3[8]], v15);
  v17 = a3[9];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = (int *)type metadata accessor for RGDisplayRepresentation(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v19, 1, (uint64_t)v20))
  {
    v21 = sub_23F1217E8(&qword_256DFFC98);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v46 = v6;
    v16(v18, v19, v15);
    v22 = v20[5];
    v23 = &v18[v22];
    v24 = &v19[v22];
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v19[v22], 1, v15))
    {
      v25 = sub_23F1217E8(&qword_256DFFC88);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v16(v23, v24, v15);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v23, 0, 1, v15);
    }
    v26 = v20[6];
    __dst = &v18[v26];
    v27 = &v19[v26];
    v28 = sub_23F2680C0();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v27, 1, v28))
    {
      v29 = sub_23F1217E8(&qword_256DFFC90);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(__dst, v27, v28);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v28);
    }
    *(_OWORD *)&v18[v20[7]] = *(_OWORD *)&v19[v20[7]];
    *(_OWORD *)&v18[v20[8]] = *(_OWORD *)&v19[v20[8]];
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v18, 0, 1, (uint64_t)v20);
    v6 = v46;
  }
  v30 = a3[10];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v32, 1, v33))
  {
    v34 = sub_23F1217E8(&qword_256DFFCA0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v47 = v6;
    v16(v31, v32, v15);
    v35 = *(int *)(v33 + 20);
    v36 = &v31[v35];
    v37 = &v32[v35];
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v32[v35], 1, v15))
    {
      v38 = sub_23F1217E8(&qword_256DFFC88);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v16(v36, v37, v15);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v36, 0, 1, v15);
    }
    v39 = *(int *)(v33 + 24);
    v40 = &v31[v39];
    v41 = &v32[v39];
    v42 = sub_23F2680C0();
    v6 = v47;
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v41, 1, v42))
    {
      v43 = sub_23F1217E8(&qword_256DFFC90);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v40, 0, 1, v42);
    }
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v31, 0, 1, v33);
  }
  v48(&a1[a3[11]], &a2[a3[11]], v6);
  return a1;
}

char *assignWithTake for RGParameterConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  int v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  int v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int v49;
  size_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  void *v72;
  const void *v73;
  uint64_t v74;
  size_t v75;
  void *v76;
  const void *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int v81;
  int v82;
  uint64_t v83;
  void *v84;
  const void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  void (*v99)(char *, char *, uint64_t);
  void (*v100)(char *, char *, uint64_t);
  void (*v101)(char *, char *, uint64_t);
  void (*v102)(char *, char *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v6 = sub_23F267D84();
  v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      v9 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      v10 = *(_QWORD *)(v6 - 8);
    }
    else
    {
      v10 = *(_QWORD *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    v10 = *(_QWORD *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      v11 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(a1, a2, v6);
    }
  }
  v12 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v12(&a1[a3[5]], &a2[a3[5]], v6);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_DWORD *)v14 = *(_DWORD *)v15;
  v17 = *((_QWORD *)v15 + 1);
  v16 = *((_QWORD *)v15 + 2);
  *((_QWORD *)v14 + 1) = v17;
  *((_QWORD *)v14 + 2) = v16;
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_23F267CB8();
  v107 = *(_QWORD *)(v21 - 8);
  v22 = *(void (**)(char *, char *, uint64_t))(v107 + 40);
  v22(v19, v20, v21);
  v98 = v22;
  v22(&a1[a3[8]], &a2[a3[8]], v21);
  v23 = a3[9];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = (int *)type metadata accessor for RGDisplayRepresentation(0);
  LODWORD(v19) = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v24, 1, (uint64_t)v26);
  v27 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v25, 1, (uint64_t)v26);
  if (!(_DWORD)v19)
  {
    if (v27)
    {
      sub_23F16D354((uint64_t)v24, type metadata accessor for RGDisplayRepresentation);
      goto LABEL_14;
    }
    v100 = v12;
    v104 = v6;
    v98(v24, v25, v21);
    v34 = v26[5];
    v35 = &v24[v34];
    v36 = &v25[v34];
    v37 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v24[v34], 1, v21);
    v38 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v36, 1, v21);
    if (v37)
    {
      if (!v38)
      {
        (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v35, v36, v21);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v35, 0, 1, v21);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v38)
      {
        v98(v35, v36, v21);
LABEL_26:
        v45 = v26[6];
        v46 = (uint64_t)&v24[v45];
        v47 = &v25[v45];
        v48 = sub_23F2680C0();
        v97 = v46;
        LODWORD(v46) = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v46, 1, v48);
        v49 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v47, 1, v48);
        if ((_DWORD)v46)
        {
          if (v49)
          {
            v50 = *(_QWORD *)(*(_QWORD *)(sub_23F1217E8(&qword_256DFFC90) - 8) + 64);
            v51 = (void *)v97;
LABEL_31:
            memcpy(v51, v47, v50);
            goto LABEL_35;
          }
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v97, v47, v48);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v97, 0, 1, v48);
        }
        else
        {
          v52 = *(_QWORD *)(v48 - 8);
          if (v49)
          {
            (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v97, v48);
            v50 = *(_QWORD *)(*(_QWORD *)(sub_23F1217E8(&qword_256DFFC90) - 8) + 64);
            v51 = (void *)v97;
            goto LABEL_31;
          }
          (*(void (**)(uint64_t, char *, uint64_t))(v52 + 40))(v97, v47, v48);
        }
LABEL_35:
        v53 = v26[7];
        v54 = &v24[v53];
        v55 = &v25[v53];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        *(_QWORD *)v54 = v57;
        *((_QWORD *)v54 + 1) = v56;
        swift_bridgeObjectRelease();
        v58 = v26[8];
        v59 = (uint64_t *)&v24[v58];
        v60 = (uint64_t *)&v25[v58];
        v61 = v59[1];
        v12 = v100;
        v6 = v104;
        if (v61 >> 60 != 15)
        {
          v62 = v60[1];
          if (v62 >> 60 != 15)
          {
            v63 = *v59;
            *v59 = *v60;
            v59[1] = v62;
            sub_23F1311B4(v63, v61);
            goto LABEL_40;
          }
          sub_23F15B1EC((uint64_t)v59);
        }
        *(_OWORD *)v59 = *(_OWORD *)v60;
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v107 + 8))(v35, v21);
    }
    v44 = sub_23F1217E8(&qword_256DFFC88);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_26;
  }
  if (v27)
  {
LABEL_14:
    v33 = sub_23F1217E8(&qword_256DFFC98);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_40;
  }
  v99 = v12;
  v103 = v6;
  v28 = *(void (**)(char *, char *, uint64_t))(v107 + 32);
  v28(v24, v25, v21);
  v29 = v26[5];
  v30 = &v24[v29];
  v31 = &v25[v29];
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v25[v29], 1, v21))
  {
    v32 = sub_23F1217E8(&qword_256DFFC88);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v28(v30, v31, v21);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v30, 0, 1, v21);
  }
  v39 = v26[6];
  v40 = &v24[v39];
  v41 = &v25[v39];
  v42 = sub_23F2680C0();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v41, 1, v42))
  {
    v43 = sub_23F1217E8(&qword_256DFFC90);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v40, 0, 1, v42);
  }
  *(_OWORD *)&v24[v26[7]] = *(_OWORD *)&v25[v26[7]];
  *(_OWORD *)&v24[v26[8]] = *(_OWORD *)&v25[v26[8]];
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v24, 0, 1, (uint64_t)v26);
  v12 = v99;
  v6 = v103;
LABEL_40:
  v64 = a3[10];
  v65 = (uint64_t)&a1[v64];
  v66 = (uint64_t)&a2[v64];
  v67 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  v68 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v65, 1, v67);
  v69 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v66, 1, v67);
  if (v68)
  {
    if (!v69)
    {
      v101 = v12;
      v105 = v6;
      v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 32);
      v70(v65, v66, v21);
      v71 = *(int *)(v67 + 20);
      v72 = (void *)(v65 + v71);
      v73 = (const void *)(v66 + v71);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v66 + v71, 1, v21))
      {
        v74 = sub_23F1217E8(&qword_256DFFC88);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        v70((uint64_t)v72, (uint64_t)v73, v21);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v72, 0, 1, v21);
      }
      v83 = *(int *)(v67 + 24);
      v84 = (void *)(v65 + v83);
      v85 = (const void *)(v66 + v83);
      v86 = sub_23F2680C0();
      v12 = v101;
      v6 = v105;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v85, 1, v86))
      {
        v87 = sub_23F1217E8(&qword_256DFFC90);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v84, v85, v86);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v84, 0, 1, v86);
      }
      v88 = v65;
      goto LABEL_56;
    }
    goto LABEL_46;
  }
  if (v69)
  {
    sub_23F16D354(v65, type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation);
LABEL_46:
    v75 = *(_QWORD *)(*(_QWORD *)(sub_23F1217E8(&qword_256DFFCA0) - 8) + 64);
    v76 = (void *)v65;
    v77 = (const void *)v66;
    goto LABEL_47;
  }
  v102 = v12;
  v106 = v6;
  v98((char *)v65, (char *)v66, v21);
  v78 = *(int *)(v67 + 20);
  v79 = (char *)(v65 + v78);
  v80 = (char *)(v66 + v78);
  v81 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v65 + v78, 1, v21);
  v82 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v80, 1, v21);
  if (!v81)
  {
    if (!v82)
    {
      v98(v79, v80, v21);
      goto LABEL_61;
    }
    (*(void (**)(char *, uint64_t))(v107 + 8))(v79, v21);
    goto LABEL_60;
  }
  if (v82)
  {
LABEL_60:
    v90 = sub_23F1217E8(&qword_256DFFC88);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v79, v80, v21);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v79, 0, 1, v21);
LABEL_61:
  v91 = *(int *)(v67 + 24);
  v92 = v65 + v91;
  v93 = v66 + v91;
  v67 = sub_23F2680C0();
  v94 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v92, 1, v67);
  v95 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v93, 1, v67);
  v12 = v102;
  v6 = v106;
  if (v94)
  {
    if (!v95)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v92, v93, v67);
      v88 = v92;
LABEL_56:
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v88, 0, 1, v67);
      goto LABEL_57;
    }
  }
  else
  {
    v96 = *(_QWORD *)(v67 - 8);
    if (!v95)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 40))(v92, v93, v67);
      goto LABEL_57;
    }
    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v92, v67);
  }
  v75 = *(_QWORD *)(*(_QWORD *)(sub_23F1217E8(&qword_256DFFC90) - 8) + 64);
  v76 = (void *)v92;
  v77 = (const void *)v93;
LABEL_47:
  memcpy(v76, v77, v75);
LABEL_57:
  v12(&a1[a3[11]], &a2[a3[11]], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RGParameterConfirmationModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F17C1A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  sub_23F180250();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F17F9A8();
  if (v8)
  {
    v6 = sub_23F180064();
  }
  else
  {
    sub_23F131B8C();
    sub_23F17F9A8();
    if (v8)
    {
      sub_23F1801DC();
    }
    else
    {
      if ((_DWORD)v3 == 2147483646)
      {
        sub_23F17FA58(*(_QWORD *)(v4 + a3[6] + 16));
        sub_23F12612C();
        return;
      }
      sub_23F17F940();
      sub_23F17F9A8();
      if (v8)
      {
        v7 = v10;
        v9 = a3[7];
      }
      else
      {
        sub_23F1217E8(&qword_256DFFC98);
        sub_23F17F9A8();
        if (v11)
        {
          v7 = v12;
          v9 = a3[9];
        }
        else
        {
          v7 = sub_23F1217E8(&qword_256DFFCA0);
          v9 = a3[10];
        }
      }
    }
    v6 = v4 + v9;
  }
  sub_23F1315B8(v6, v3, v7);
}

uint64_t storeEnumTagSinglePayload for RGParameterConfirmationModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F17C274(uint64_t a1, uint64_t a2, int a3)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F180250();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F17F968();
  if (v4)
  {
    sub_23F18010C();
  }
  else
  {
    sub_23F131B8C();
    sub_23F17F968();
    if (v4)
    {
      sub_23F180118();
    }
    else
    {
      if (a3 == 2147483646)
      {
        sub_23F1802B4();
        sub_23F12612C();
        return;
      }
      sub_23F17F940();
      sub_23F17F968();
      if (!v4)
      {
        sub_23F1217E8(&qword_256DFFC98);
        sub_23F17F968();
        if (!v5)
          sub_23F1217E8(&qword_256DFFCA0);
      }
    }
  }
  sub_23F17FE5C();
  sub_23F126098(v6, v7, v8, v9);
}

void sub_23F17C334()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_23F178624(319, (unint64_t *)&qword_256E005C0, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v0 <= 0x3F)
  {
    sub_23F267D84();
    if (v1 <= 0x3F)
    {
      sub_23F267CB8();
      if (v2 <= 0x3F)
      {
        sub_23F178624(319, &qword_256E00668, (void (*)(uint64_t))type metadata accessor for RGDisplayRepresentation);
        if (v3 <= 0x3F)
        {
          sub_23F178624(319, qword_256E00670, (void (*)(uint64_t))type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RGParameterConfirmationModel.ParameterRepresentation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267CB8();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2 + v9, 1, v7))
    {
      v12 = sub_23F1217E8(&qword_256DFFC88);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v7);
    }
    v14 = *(int *)(a3 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_23F2680C0();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v17))
    {
      v18 = sub_23F1217E8(&qword_256DFFC90);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t destroy for RGParameterConfirmationModel.ParameterRepresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = sub_23F267CB8();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v6, 1, v4))
    v5(v6, v4);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_23F2680C0();
  result = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return result;
}

char *initializeWithCopy for RGParameterConfirmationModel.ParameterRepresentation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23F267CB8();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    v11 = sub_23F1217E8(&qword_256DFFC88);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23F2680C0();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v15))
  {
    v16 = sub_23F1217E8(&qword_256DFFC90);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

char *assignWithCopy for RGParameterConfirmationModel.ParameterRepresentation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23F267CB8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a1[v9], 1, v6);
  v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v14 = sub_23F1217E8(&qword_256DFFC88);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_23F2680C0();
  v19 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v18);
  v20 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    v21 = *(_QWORD *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v22 = sub_23F1217E8(&qword_256DFFC90);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v16, 0, 1, v18);
  return a1;
}

char *initializeWithTake for RGParameterConfirmationModel.ParameterRepresentation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23F267CB8();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    v11 = sub_23F1217E8(&qword_256DFFC88);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23F2680C0();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v15))
  {
    v16 = sub_23F1217E8(&qword_256DFFC90);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

char *assignWithTake for RGParameterConfirmationModel.ParameterRepresentation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23F267CB8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a1[v9], 1, v6);
  v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v14 = sub_23F1217E8(&qword_256DFFC88);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_23F2680C0();
  v19 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v18);
  v20 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    v21 = *(_QWORD *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v22 = sub_23F1217E8(&qword_256DFFC90);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v16, 0, 1, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for RGParameterConfirmationModel.ParameterRepresentation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F17CCD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  sub_23F17F940();
  sub_23F17F9A8();
  if (v8)
  {
    v6 = sub_23F180064();
  }
  else
  {
    sub_23F1217E8(&qword_256DFFC88);
    sub_23F17F9A8();
    if (v8)
    {
      sub_23F1801DC();
    }
    else
    {
      v7 = sub_23F1217E8(&qword_256DFFC90);
      v9 = *(int *)(a3 + 24);
    }
    v6 = a1 + v9;
  }
  return sub_23F1315B8(v6, a2, v7);
}

uint64_t storeEnumTagSinglePayload for RGParameterConfirmationModel.ParameterRepresentation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F17CD4C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F17F940();
  sub_23F17F968();
  if (v0)
  {
    sub_23F18010C();
  }
  else
  {
    sub_23F1217E8(&qword_256DFFC88);
    sub_23F17F968();
    if (v0)
      sub_23F180118();
    else
      sub_23F1217E8(&qword_256DFFC90);
  }
  sub_23F17FE5C();
  return sub_23F126098(v1, v2, v3, v4);
}

void sub_23F17CDC0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F267CB8();
  if (v0 <= 0x3F)
  {
    sub_23F178624(319, &qword_256E003C8, (void (*)(uint64_t))MEMORY[0x24BDCD380]);
    if (v1 <= 0x3F)
    {
      sub_23F178624(319, qword_256E003D0, (void (*)(uint64_t))MEMORY[0x24BEBA448]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for ArchivedViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArchivedViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArchivedViewModel()
{
  return &type metadata for ArchivedViewModel;
}

uint64_t destroy for SiriSDSViewModel(uint64_t *a1)
{
  unint64_t v2;

  sub_23F1311B4(*a1, a1[1]);
  swift_bridgeObjectRelease();
  v2 = a1[5];
  if (v2 >> 60 != 15)
    sub_23F1311B4(a1[4], v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SiriSDSViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a2;
  v5 = a2[1];
  sub_23F131170(*a2, v5);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v6;
  v7 = a2 + 4;
  v8 = a2[5];
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *v7;
  }
  else
  {
    v9 = *(_QWORD *)v7;
    sub_23F131170(v9, v8);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v8;
  }
  v10 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for SiriSDSViewModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v4 = *a2;
  v5 = a2[1];
  sub_23F131170(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_23F1311B4(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = a2 + 4;
  v9 = a2[5];
  if ((unint64_t)a1[5] >> 60 != 15)
  {
    if (v9 >> 60 != 15)
    {
      v11 = *v8;
      sub_23F131170(*v8, a2[5]);
      v12 = a1[4];
      v13 = a1[5];
      a1[4] = v11;
      a1[5] = v9;
      sub_23F1311B4(v12, v13);
      goto LABEL_8;
    }
    sub_23F15B1EC((uint64_t)(a1 + 4));
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 2) = *(_OWORD *)v8;
    goto LABEL_8;
  }
  v10 = *v8;
  sub_23F131170(*v8, a2[5]);
  a1[4] = v10;
  a1[5] = v9;
LABEL_8:
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *assignWithTake for SiriSDSViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_23F1311B4(v4, v5);
  v6 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  v7 = (uint64_t *)(a2 + 32);
  v8 = a1[5];
  if (v8 >> 60 != 15)
  {
    v9 = *(_QWORD *)(a2 + 40);
    if (v9 >> 60 != 15)
    {
      v10 = a1[4];
      a1[4] = *v7;
      a1[5] = v9;
      sub_23F1311B4(v10, v8);
      goto LABEL_6;
    }
    sub_23F15B1EC((uint64_t)(a1 + 4));
  }
  *((_OWORD *)a1 + 2) = *(_OWORD *)v7;
LABEL_6:
  v11 = *(_QWORD *)(a2 + 56);
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriSDSViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriSDSViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriSDSViewModel()
{
  return &type metadata for SiriSDSViewModel;
}

char *initializeBufferWithCopyOfBuffer for RGToolDisambiguationModel(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v8(&a1[a3[5]], (char *)a2 + a3[5], v7);
    v9 = a3[6];
    v10 = a3[7];
    v11 = &a1[v9];
    v12 = (char *)a2 + v9;
    *(_DWORD *)v11 = *(_DWORD *)v12;
    v13 = *((_QWORD *)v12 + 2);
    *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
    *((_QWORD *)v11 + 2) = v13;
    *(_QWORD *)&a1[v10] = *(uint64_t *)((char *)a2 + v10);
    v14 = a3[9];
    *(_QWORD *)&a1[a3[8]] = *(uint64_t *)((char *)a2 + a3[8]);
    v15 = &a1[v14];
    v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8(v15, v16, v7);
  }
  return a1;
}

uint64_t destroy for RGToolDisambiguationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_23F267D84();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  v6(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 36), v4);
}

uint64_t initializeWithCopy for RGToolDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a3[7];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_DWORD *)v10 = *(_DWORD *)v11;
  v12 = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  *(_QWORD *)(v10 + 16) = v12;
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v13 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v14, v15, v6);
  return a1;
}

uint64_t assignWithCopy for RGToolDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t initializeWithTake for RGToolDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a3[7];
  v10 = a1 + v8;
  v11 = (__int128 *)(a2 + v8);
  v12 = *v11;
  *(_QWORD *)(v10 + 16) = *((_QWORD *)v11 + 2);
  *(_OWORD *)v10 = v12;
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v13 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v7(a1 + v13, a2 + v13, v6);
  return a1;
}

uint64_t assignWithTake for RGToolDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = v12;
  *(_QWORD *)(v9 + 16) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RGToolDisambiguationModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F17D748(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F131B8C();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    sub_23F1315B8(a1, a2, v4);
  else
    sub_23F12612C();
}

uint64_t storeEnumTagSinglePayload for RGToolDisambiguationModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F17D7BC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F131B8C();
  sub_23F17F968();
  if (v7)
  {
    sub_23F17FE5C();
    sub_23F126098(v8, v9, v10, v11);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
    sub_23F12612C();
  }
}

uint64_t sub_23F17D810()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F267D84();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for RGToolDisambiguationModel.Item(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267CB8();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2 + v9, 1, v7))
    {
      v12 = sub_23F1217E8(&qword_256DFFC88);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v7);
    }
    v14 = *(int *)(a3 + 24);
    v15 = &a1[v14];
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *(_QWORD *)v15 = *v16;
    *((_QWORD *)v15 + 1) = v17;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for RGToolDisambiguationModel.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v4 = sub_23F267CB8();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v6, 1, v4))
    v5(v6, v4);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for RGToolDisambiguationModel.Item(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = sub_23F267CB8();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    v11 = sub_23F1217E8(&qword_256DFFC88);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for RGToolDisambiguationModel.Item(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = sub_23F267CB8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a1[v9], 1, v6);
  v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_23F1217E8(&qword_256DFFC88);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for RGToolDisambiguationModel.Item(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = sub_23F267CB8();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    v11 = sub_23F1217E8(&qword_256DFFC88);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for RGToolDisambiguationModel.Item(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_23F267CB8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a1[v9], 1, v6);
  v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_23F1217E8(&qword_256DFFC88);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = (uint64_t *)&a2[v15];
  v19 = *v17;
  v18 = v17[1];
  *(_QWORD *)v16 = v19;
  *((_QWORD *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RGToolDisambiguationModel.Item()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F17DE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  sub_23F17F940();
  sub_23F17F9A8();
  if (v8)
  {
    v6 = sub_23F180064();
  }
  else
  {
    sub_23F1217E8(&qword_256DFFC88);
    sub_23F17F9A8();
    if (!v8)
    {
      sub_23F17FA58(*(_QWORD *)(a1 + *(int *)(a3 + 24) + 8));
      sub_23F12612C();
      return;
    }
    sub_23F1801DC();
    v6 = a1 + v9;
  }
  sub_23F1315B8(v6, a2, v7);
}

uint64_t storeEnumTagSinglePayload for RGToolDisambiguationModel.Item()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F17DEE4(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F17F940();
  sub_23F17F968();
  if (v7)
  {
    sub_23F18010C();
  }
  else
  {
    sub_23F1217E8(&qword_256DFFC88);
    sub_23F17F968();
    if (!v7)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
      sub_23F12612C();
      return;
    }
    sub_23F180118();
  }
  sub_23F17FE5C();
  sub_23F126098(v8, v9, v10, v11);
}

void sub_23F17DF58()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F267CB8();
  if (v0 <= 0x3F)
  {
    sub_23F178624(319, &qword_256E003C8, (void (*)(uint64_t))MEMORY[0x24BDCD380]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for RGControlModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F17E000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F1800C8();
  v1 = sub_23F180064();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for RGControlModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F17E030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F1800C8();
  sub_23F17FE5C();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, v1, v2, v3);
}

ValueMetadata *type metadata accessor for RGControlModel.CodingKeys()
{
  return &type metadata for RGControlModel.CodingKeys;
}

ValueMetadata *type metadata accessor for RGToolDisambiguationModel.CodingKeys()
{
  return &type metadata for RGToolDisambiguationModel.CodingKeys;
}

ValueMetadata *type metadata accessor for RGToolDisambiguationModel.Item.CodingKeys()
{
  return &type metadata for RGToolDisambiguationModel.Item.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SiriSDSViewModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F17E0E8 + 4 * byte_23F26E39B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F17E11C + 4 * byte_23F26E396[v4]))();
}

uint64_t sub_23F17E11C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F17E124(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F17E12CLL);
  return result;
}

uint64_t sub_23F17E138(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F17E140);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23F17E144(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F17E14C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SiriSDSViewModel.CodingKeys()
{
  return &type metadata for SiriSDSViewModel.CodingKeys;
}

ValueMetadata *type metadata accessor for ArchivedViewModel.CodingKeys()
{
  return &type metadata for ArchivedViewModel.CodingKeys;
}

ValueMetadata *type metadata accessor for RGParameterConfirmationModel.CodingKeys()
{
  return &type metadata for RGParameterConfirmationModel.CodingKeys;
}

uint64_t _s16IntelligenceFlow19ParameterNotAllowedV6ReasonOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23F180230(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23F180230((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23F180230((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23F180230((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return sub_23F180230(v8);
}

uint64_t _s16IntelligenceFlow25RGToolDisambiguationModelV4ItemV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F17E260 + 4 * byte_23F26E3A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F17E294 + 4 * byte_23F26E3A0[v4]))();
}

uint64_t sub_23F17E298(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F17E2A0);
  return result;
}

uint64_t sub_23F17E2A8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F17E2B0);
  return sub_23F1801B4();
}

ValueMetadata *type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation.CodingKeys()
{
  return &type metadata for RGParameterConfirmationModel.ParameterRepresentation.CodingKeys;
}

uint64_t _s16IntelligenceFlow25RGToolDisambiguationModelV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23F180230(-1);
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23F180230((*a1 | (v4 << 8)) - 6);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23F180230((*a1 | (v4 << 8)) - 6);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23F180230((*a1 | (v4 << 8)) - 6);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return sub_23F180230(v8);
}

uint64_t _s16IntelligenceFlow25RGToolDisambiguationModelV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23F17E3A0 + 4 * byte_23F26E3AF[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23F17E3D4 + 4 * byte_23F26E3AA[v4]))();
}

uint64_t sub_23F17E3D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F17E3E0);
  return result;
}

uint64_t sub_23F17E3E8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F17E3F0);
  return sub_23F1801B4();
}

ValueMetadata *type metadata accessor for RGActionConfirmationModel.CodingKeys()
{
  return &type metadata for RGActionConfirmationModel.CodingKeys;
}

uint64_t _s16IntelligenceFlow21PermissionRequirementOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23F180230(-1);
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23F180230((*a1 | (v4 << 8)) - 8);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23F180230((*a1 | (v4 << 8)) - 8);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23F180230((*a1 | (v4 << 8)) - 8);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return sub_23F180230(v8);
}

uint64_t _s16IntelligenceFlow28RGParameterConfirmationModelV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23F17E4E0 + 4 * byte_23F26E3B9[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23F17E514 + 4 * byte_23F26E3B4[v4]))();
}

uint64_t sub_23F17E518(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F17E520);
  return result;
}

uint64_t sub_23F17E528(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F17E530);
  return sub_23F1801B4();
}

ValueMetadata *type metadata accessor for RGDisambiguationModel.CodingKeys()
{
  return &type metadata for RGDisambiguationModel.CodingKeys;
}

ValueMetadata *type metadata accessor for RGDisambiguationModel.Item.CodingKeys()
{
  return &type metadata for RGDisambiguationModel.Item.CodingKeys;
}

uint64_t _s16IntelligenceFlow21RGDisambiguationModelV4ItemV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23F180230(-1);
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23F180230((*a1 | (v4 << 8)) - 5);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23F180230((*a1 | (v4 << 8)) - 5);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23F180230((*a1 | (v4 << 8)) - 5);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return sub_23F180230(v8);
}

uint64_t _s16IntelligenceFlow21RGDisambiguationModelV4ItemV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23F17E638 + 4 * byte_23F26E3C3[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23F17E66C + 4 * byte_23F26E3BE[v4]))();
}

uint64_t sub_23F17E670(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F17E678);
  return result;
}

uint64_t sub_23F17E680(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F17E688);
  return sub_23F1801B4();
}

ValueMetadata *type metadata accessor for RGDisplayRepresentation.CodingKeys()
{
  return &type metadata for RGDisplayRepresentation.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RGPluginModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RGPluginModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23F17E77C + 4 * byte_23F26E3CD[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23F17E7B0 + 4 * byte_23F26E3C8[v4]))();
}

uint64_t sub_23F17E7B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F17E7B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F17E7C0);
  return result;
}

uint64_t sub_23F17E7CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F17E7D4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23F17E7D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F17E7E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RGPluginModel.CodingKeys()
{
  return &type metadata for RGPluginModel.CodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.DisambiguationModelCodingKeys()
{
  return &type metadata for RGPluginModel.DisambiguationModelCodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.ActionConfirmationModelCodingKeys()
{
  return &type metadata for RGPluginModel.ActionConfirmationModelCodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.ParameterConfirmationModelCodingKeys()
{
  return &type metadata for RGPluginModel.ParameterConfirmationModelCodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.ToolDisambiguationModelCodingKeys()
{
  return &type metadata for RGPluginModel.ToolDisambiguationModelCodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.CardCodingKeys()
{
  return &type metadata for RGPluginModel.CardCodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.ArchivedViewCodingKeys()
{
  return &type metadata for RGPluginModel.ArchivedViewCodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.SiriSDSViewCodingKeys()
{
  return &type metadata for RGPluginModel.SiriSDSViewCodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.ControlCodingKeys()
{
  return &type metadata for RGPluginModel.ControlCodingKeys;
}

uint64_t _s16IntelligenceFlow14RGControlModelV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F17E8BC + 4 * byte_23F26E3D2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F17E8DC + 4 * byte_23F26E3D7[v4]))();
}

_BYTE *sub_23F17E8BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F17E8DC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F17E8E4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F17E8EC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F17E8F4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F17E8FC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RGPluginModel.SimulateInAppResponseCodingKeys()
{
  return &type metadata for RGPluginModel.SimulateInAppResponseCodingKeys;
}

unint64_t sub_23F17E91C()
{
  unint64_t result;

  result = qword_256E00918;
  if (!qword_256E00918)
  {
    result = MEMORY[0x242667160](&unk_23F26ED40, &type metadata for RGPluginModel.SimulateInAppResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00918);
  }
  return result;
}

unint64_t sub_23F17E95C()
{
  unint64_t result;

  result = qword_256E00920;
  if (!qword_256E00920)
  {
    result = MEMORY[0x242667160](&unk_23F26EDF8, &type metadata for RGPluginModel.ControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00920);
  }
  return result;
}

unint64_t sub_23F17E99C()
{
  unint64_t result;

  result = qword_256E00928;
  if (!qword_256E00928)
  {
    result = MEMORY[0x242667160](&unk_23F26EEB0, &type metadata for RGPluginModel.SiriSDSViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00928);
  }
  return result;
}

unint64_t sub_23F17E9DC()
{
  unint64_t result;

  result = qword_256E00930;
  if (!qword_256E00930)
  {
    result = MEMORY[0x242667160](&unk_23F26EF68, &type metadata for RGPluginModel.ArchivedViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00930);
  }
  return result;
}

unint64_t sub_23F17EA1C()
{
  unint64_t result;

  result = qword_256E00938;
  if (!qword_256E00938)
  {
    result = MEMORY[0x242667160](&unk_23F26F020, &type metadata for RGPluginModel.CardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00938);
  }
  return result;
}

unint64_t sub_23F17EA5C()
{
  unint64_t result;

  result = qword_256E00940;
  if (!qword_256E00940)
  {
    result = MEMORY[0x242667160](&unk_23F26F0D8, &type metadata for RGPluginModel.ToolDisambiguationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00940);
  }
  return result;
}

unint64_t sub_23F17EA9C()
{
  unint64_t result;

  result = qword_256E00948;
  if (!qword_256E00948)
  {
    result = MEMORY[0x242667160](&unk_23F26F190, &type metadata for RGPluginModel.ParameterConfirmationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00948);
  }
  return result;
}

unint64_t sub_23F17EADC()
{
  unint64_t result;

  result = qword_256E00950;
  if (!qword_256E00950)
  {
    result = MEMORY[0x242667160](&unk_23F26F248, &type metadata for RGPluginModel.ActionConfirmationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00950);
  }
  return result;
}

unint64_t sub_23F17EB1C()
{
  unint64_t result;

  result = qword_256E00958;
  if (!qword_256E00958)
  {
    result = MEMORY[0x242667160](&unk_23F26F300, &type metadata for RGPluginModel.DisambiguationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00958);
  }
  return result;
}

unint64_t sub_23F17EB5C()
{
  unint64_t result;

  result = qword_256E00960;
  if (!qword_256E00960)
  {
    result = MEMORY[0x242667160](&unk_23F26F3B8, &type metadata for RGPluginModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00960);
  }
  return result;
}

unint64_t sub_23F17EB9C()
{
  unint64_t result;

  result = qword_256E00968;
  if (!qword_256E00968)
  {
    result = MEMORY[0x242667160](&unk_23F26F470, &type metadata for RGDisplayRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00968);
  }
  return result;
}

unint64_t sub_23F17EBDC()
{
  unint64_t result;

  result = qword_256E00970;
  if (!qword_256E00970)
  {
    result = MEMORY[0x242667160](&unk_23F26F528, &type metadata for RGDisambiguationModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00970);
  }
  return result;
}

unint64_t sub_23F17EC1C()
{
  unint64_t result;

  result = qword_256E00978;
  if (!qword_256E00978)
  {
    result = MEMORY[0x242667160](&unk_23F26F5E0, &type metadata for RGDisambiguationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00978);
  }
  return result;
}

unint64_t sub_23F17EC5C()
{
  unint64_t result;

  result = qword_256E00980;
  if (!qword_256E00980)
  {
    result = MEMORY[0x242667160](&unk_23F26F698, &type metadata for RGActionConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00980);
  }
  return result;
}

unint64_t sub_23F17EC9C()
{
  unint64_t result;

  result = qword_256E00988;
  if (!qword_256E00988)
  {
    result = MEMORY[0x242667160](&unk_23F26F750, &type metadata for RGParameterConfirmationModel.ParameterRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00988);
  }
  return result;
}

unint64_t sub_23F17ECDC()
{
  unint64_t result;

  result = qword_256E00990;
  if (!qword_256E00990)
  {
    result = MEMORY[0x242667160](&unk_23F26F808, &type metadata for RGParameterConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00990);
  }
  return result;
}

unint64_t sub_23F17ED1C()
{
  unint64_t result;

  result = qword_256E00998;
  if (!qword_256E00998)
  {
    result = MEMORY[0x242667160](&unk_23F26F8C0, &type metadata for ArchivedViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00998);
  }
  return result;
}

unint64_t sub_23F17ED5C()
{
  unint64_t result;

  result = qword_256E009A0;
  if (!qword_256E009A0)
  {
    result = MEMORY[0x242667160](&unk_23F26F978, &type metadata for SiriSDSViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E009A0);
  }
  return result;
}

unint64_t sub_23F17ED9C()
{
  unint64_t result;

  result = qword_256E009A8;
  if (!qword_256E009A8)
  {
    result = MEMORY[0x242667160](&unk_23F26FA30, &type metadata for RGToolDisambiguationModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E009A8);
  }
  return result;
}

unint64_t sub_23F17EDDC()
{
  unint64_t result;

  result = qword_256E009B0;
  if (!qword_256E009B0)
  {
    result = MEMORY[0x242667160](&unk_23F26FAE8, &type metadata for RGToolDisambiguationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E009B0);
  }
  return result;
}

unint64_t sub_23F17EE1C()
{
  unint64_t result;

  result = qword_256E009B8;
  if (!qword_256E009B8)
  {
    result = MEMORY[0x242667160](&unk_23F26FBA0, &type metadata for RGControlModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E009B8);
  }
  return result;
}

unint64_t sub_23F17EE5C()
{
  unint64_t result;

  result = qword_256E009C0;
  if (!qword_256E009C0)
  {
    result = MEMORY[0x242667160](&unk_23F26FB10, &type metadata for RGControlModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E009C0);
  }
  return result;
}

unint64_t sub_23F17EE9C()
{
  unint64_t result;

  result = qword_256E009C8;
  if (!qword_256E009C8)
  {
    result = MEMORY[0x242667160](&unk_23F26FB38, &type metadata for RGControlModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E009C8);
  }
  return result;
}

unint64_t sub_23F17EEDC()
{
  unint64_t result;

  result = qword_256E009D0;
  if (!qword_256E009D0)
  {
    result = MEMORY[0x242667160](&unk_23F26FA58, &type metadata for RGToolDisambiguationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E009D0);
  }
  return result;
}

unint64_t sub_23F17EF1C()
{
  unint64_t result;

  result = qword_256E009D8;
  if (!qword_256E009D8)
  {
    result = MEMORY[0x242667160](&unk_23F26FA80, &type metadata for RGToolDisambiguationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E009D8);
  }
  return result;
}

unint64_t sub_23F17EF5C()
{
  unint64_t result;

  result = qword_256E009E0;
  if (!qword_256E009E0)
  {
    result = MEMORY[0x242667160](&unk_23F26F9A0, &type metadata for RGToolDisambiguationModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E009E0);
  }
  return result;
}

unint64_t sub_23F17EF9C()
{
  unint64_t result;

  result = qword_256E009E8;
  if (!qword_256E009E8)
  {
    result = MEMORY[0x242667160](&unk_23F26F9C8, &type metadata for RGToolDisambiguationModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E009E8);
  }
  return result;
}

unint64_t sub_23F17EFDC()
{
  unint64_t result;

  result = qword_256E009F0;
  if (!qword_256E009F0)
  {
    result = MEMORY[0x242667160](&unk_23F26F8E8, &type metadata for SiriSDSViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E009F0);
  }
  return result;
}

unint64_t sub_23F17F01C()
{
  unint64_t result;

  result = qword_256E009F8;
  if (!qword_256E009F8)
  {
    result = MEMORY[0x242667160](&unk_23F26F910, &type metadata for SiriSDSViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E009F8);
  }
  return result;
}

unint64_t sub_23F17F05C()
{
  unint64_t result;

  result = qword_256E00A00;
  if (!qword_256E00A00)
  {
    result = MEMORY[0x242667160](&unk_23F26F830, &type metadata for ArchivedViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A00);
  }
  return result;
}

unint64_t sub_23F17F09C()
{
  unint64_t result;

  result = qword_256E00A08;
  if (!qword_256E00A08)
  {
    result = MEMORY[0x242667160](&unk_23F26F858, &type metadata for ArchivedViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A08);
  }
  return result;
}

unint64_t sub_23F17F0DC()
{
  unint64_t result;

  result = qword_256E00A10;
  if (!qword_256E00A10)
  {
    result = MEMORY[0x242667160](&unk_23F26F778, &type metadata for RGParameterConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A10);
  }
  return result;
}

unint64_t sub_23F17F11C()
{
  unint64_t result;

  result = qword_256E00A18;
  if (!qword_256E00A18)
  {
    result = MEMORY[0x242667160](&unk_23F26F7A0, &type metadata for RGParameterConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A18);
  }
  return result;
}

unint64_t sub_23F17F15C()
{
  unint64_t result;

  result = qword_256E00A20;
  if (!qword_256E00A20)
  {
    result = MEMORY[0x242667160](&unk_23F26F6C0, &type metadata for RGParameterConfirmationModel.ParameterRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A20);
  }
  return result;
}

unint64_t sub_23F17F19C()
{
  unint64_t result;

  result = qword_256E00A28;
  if (!qword_256E00A28)
  {
    result = MEMORY[0x242667160](&unk_23F26F6E8, &type metadata for RGParameterConfirmationModel.ParameterRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A28);
  }
  return result;
}

unint64_t sub_23F17F1DC()
{
  unint64_t result;

  result = qword_256E00A30;
  if (!qword_256E00A30)
  {
    result = MEMORY[0x242667160](&unk_23F26F608, &type metadata for RGActionConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A30);
  }
  return result;
}

unint64_t sub_23F17F21C()
{
  unint64_t result;

  result = qword_256E00A38;
  if (!qword_256E00A38)
  {
    result = MEMORY[0x242667160](&unk_23F26F630, &type metadata for RGActionConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A38);
  }
  return result;
}

unint64_t sub_23F17F25C()
{
  unint64_t result;

  result = qword_256E00A40;
  if (!qword_256E00A40)
  {
    result = MEMORY[0x242667160](&unk_23F26F550, &type metadata for RGDisambiguationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A40);
  }
  return result;
}

unint64_t sub_23F17F29C()
{
  unint64_t result;

  result = qword_256E00A48;
  if (!qword_256E00A48)
  {
    result = MEMORY[0x242667160](&unk_23F26F578, &type metadata for RGDisambiguationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A48);
  }
  return result;
}

unint64_t sub_23F17F2DC()
{
  unint64_t result;

  result = qword_256E00A50;
  if (!qword_256E00A50)
  {
    result = MEMORY[0x242667160](&unk_23F26F498, &type metadata for RGDisambiguationModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A50);
  }
  return result;
}

unint64_t sub_23F17F31C()
{
  unint64_t result;

  result = qword_256E00A58;
  if (!qword_256E00A58)
  {
    result = MEMORY[0x242667160](&unk_23F26F4C0, &type metadata for RGDisambiguationModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A58);
  }
  return result;
}

unint64_t sub_23F17F35C()
{
  unint64_t result;

  result = qword_256E00A60;
  if (!qword_256E00A60)
  {
    result = MEMORY[0x242667160](&unk_23F26F3E0, &type metadata for RGDisplayRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A60);
  }
  return result;
}

unint64_t sub_23F17F39C()
{
  unint64_t result;

  result = qword_256E00A68;
  if (!qword_256E00A68)
  {
    result = MEMORY[0x242667160](&unk_23F26F408, &type metadata for RGDisplayRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A68);
  }
  return result;
}

unint64_t sub_23F17F3DC()
{
  unint64_t result;

  result = qword_256E00A70;
  if (!qword_256E00A70)
  {
    result = MEMORY[0x242667160](&unk_23F26F270, &type metadata for RGPluginModel.DisambiguationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A70);
  }
  return result;
}

unint64_t sub_23F17F41C()
{
  unint64_t result;

  result = qword_256E00A78;
  if (!qword_256E00A78)
  {
    result = MEMORY[0x242667160](&unk_23F26F298, &type metadata for RGPluginModel.DisambiguationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A78);
  }
  return result;
}

unint64_t sub_23F17F45C()
{
  unint64_t result;

  result = qword_256E00A80;
  if (!qword_256E00A80)
  {
    result = MEMORY[0x242667160](&unk_23F26F1B8, &type metadata for RGPluginModel.ActionConfirmationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A80);
  }
  return result;
}

unint64_t sub_23F17F49C()
{
  unint64_t result;

  result = qword_256E00A88;
  if (!qword_256E00A88)
  {
    result = MEMORY[0x242667160](&unk_23F26F1E0, &type metadata for RGPluginModel.ActionConfirmationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A88);
  }
  return result;
}

unint64_t sub_23F17F4DC()
{
  unint64_t result;

  result = qword_256E00A90;
  if (!qword_256E00A90)
  {
    result = MEMORY[0x242667160](&unk_23F26F100, &type metadata for RGPluginModel.ParameterConfirmationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A90);
  }
  return result;
}

unint64_t sub_23F17F51C()
{
  unint64_t result;

  result = qword_256E00A98;
  if (!qword_256E00A98)
  {
    result = MEMORY[0x242667160](&unk_23F26F128, &type metadata for RGPluginModel.ParameterConfirmationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00A98);
  }
  return result;
}

unint64_t sub_23F17F55C()
{
  unint64_t result;

  result = qword_256E00AA0;
  if (!qword_256E00AA0)
  {
    result = MEMORY[0x242667160](&unk_23F26F048, &type metadata for RGPluginModel.ToolDisambiguationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00AA0);
  }
  return result;
}

unint64_t sub_23F17F59C()
{
  unint64_t result;

  result = qword_256E00AA8;
  if (!qword_256E00AA8)
  {
    result = MEMORY[0x242667160](&unk_23F26F070, &type metadata for RGPluginModel.ToolDisambiguationModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00AA8);
  }
  return result;
}

unint64_t sub_23F17F5DC()
{
  unint64_t result;

  result = qword_256E00AB0;
  if (!qword_256E00AB0)
  {
    result = MEMORY[0x242667160](&unk_23F26EF90, &type metadata for RGPluginModel.CardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00AB0);
  }
  return result;
}

unint64_t sub_23F17F61C()
{
  unint64_t result;

  result = qword_256E00AB8;
  if (!qword_256E00AB8)
  {
    result = MEMORY[0x242667160](&unk_23F26EFB8, &type metadata for RGPluginModel.CardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00AB8);
  }
  return result;
}

unint64_t sub_23F17F65C()
{
  unint64_t result;

  result = qword_256E00AC0;
  if (!qword_256E00AC0)
  {
    result = MEMORY[0x242667160](&unk_23F26EED8, &type metadata for RGPluginModel.ArchivedViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00AC0);
  }
  return result;
}

unint64_t sub_23F17F69C()
{
  unint64_t result;

  result = qword_256E00AC8;
  if (!qword_256E00AC8)
  {
    result = MEMORY[0x242667160](&unk_23F26EF00, &type metadata for RGPluginModel.ArchivedViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00AC8);
  }
  return result;
}

unint64_t sub_23F17F6DC()
{
  unint64_t result;

  result = qword_256E00AD0;
  if (!qword_256E00AD0)
  {
    result = MEMORY[0x242667160](&unk_23F26EE20, &type metadata for RGPluginModel.SiriSDSViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00AD0);
  }
  return result;
}

unint64_t sub_23F17F71C()
{
  unint64_t result;

  result = qword_256E00AD8;
  if (!qword_256E00AD8)
  {
    result = MEMORY[0x242667160](&unk_23F26EE48, &type metadata for RGPluginModel.SiriSDSViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00AD8);
  }
  return result;
}

unint64_t sub_23F17F75C()
{
  unint64_t result;

  result = qword_256E00AE0;
  if (!qword_256E00AE0)
  {
    result = MEMORY[0x242667160](&unk_23F26ED68, &type metadata for RGPluginModel.ControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00AE0);
  }
  return result;
}

unint64_t sub_23F17F79C()
{
  unint64_t result;

  result = qword_256E00AE8;
  if (!qword_256E00AE8)
  {
    result = MEMORY[0x242667160](&unk_23F26ED90, &type metadata for RGPluginModel.ControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00AE8);
  }
  return result;
}

unint64_t sub_23F17F7DC()
{
  unint64_t result;

  result = qword_256E00AF0;
  if (!qword_256E00AF0)
  {
    result = MEMORY[0x242667160](&unk_23F26ECB0, &type metadata for RGPluginModel.SimulateInAppResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00AF0);
  }
  return result;
}

unint64_t sub_23F17F81C()
{
  unint64_t result;

  result = qword_256E00AF8;
  if (!qword_256E00AF8)
  {
    result = MEMORY[0x242667160](&unk_23F26ECD8, &type metadata for RGPluginModel.SimulateInAppResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00AF8);
  }
  return result;
}

unint64_t sub_23F17F85C()
{
  unint64_t result;

  result = qword_256E00B00;
  if (!qword_256E00B00)
  {
    result = MEMORY[0x242667160](&unk_23F26F328, &type metadata for RGPluginModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00B00);
  }
  return result;
}

unint64_t sub_23F17F89C()
{
  unint64_t result;

  result = qword_256E00B08;
  if (!qword_256E00B08)
  {
    result = MEMORY[0x242667160](&unk_23F26F350, &type metadata for RGPluginModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00B08);
  }
  return result;
}

uint64_t sub_23F17F8F0()
{
  return sub_23F26863C();
}

uint64_t sub_23F17F90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23F17F928()
{
  return sub_23F268750();
}

uint64_t sub_23F17F940()
{
  return sub_23F267CB8();
}

uint64_t sub_23F17F948@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 104) = a1;
  return sub_23F268750();
}

uint64_t sub_23F17F978(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

uint64_t sub_23F17F988@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t sub_23F17F99C()
{
  return sub_23F268750();
}

_QWORD *sub_23F17F9B8()
{
  _QWORD *v0;

  return sub_23F12545C(v0, v0[3]);
}

uint64_t sub_23F17F9D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v1, v0);
}

uint64_t sub_23F17F9EC()
{
  return sub_23F2686B4();
}

uint64_t sub_23F17FA04()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F17FA1C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 192), *(_QWORD *)(v1 - 168));
}

unint64_t sub_23F17FA2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 - 104) = *(_DWORD *)a1;
  *(_OWORD *)(v1 - 96) = *(_OWORD *)(a1 + 8);
  *(_BYTE *)(v1 - 65) = 2;
  return sub_23F163BDC();
}

uint64_t sub_23F17FA48@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t sub_23F17FA58@<X0>(unint64_t a1@<X8>)
{
  int v1;

  if (a1 >= 0xFFFFFFFF)
    LODWORD(a1) = -1;
  v1 = a1 - 1;
  if (v1 < 0)
    v1 = -1;
  return (v1 + 1);
}

uint64_t sub_23F17FA78()
{
  return sub_23F2680C0();
}

void *sub_23F17FA8C(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t sub_23F17FAA0()
{
  uint64_t v0;
  uint64_t v1;

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, 0, 1, v1);
}

uint64_t sub_23F17FAB4()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F17FABC()
{
  return sub_23F2686B4();
}

uint64_t sub_23F17FAD8()
{
  return sub_23F268714();
}

uint64_t sub_23F17FAE4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F17FAF0()
{
  return sub_23F2686E4();
}

uint64_t sub_23F17FB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0 + *(int *)(v1 + 20), 1, v2);
}

uint64_t sub_23F17FB20()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 88) + 8))(*(_QWORD *)(v0 - 96), *(_QWORD *)(v0 - 104));
}

uint64_t sub_23F17FB30()
{
  uint64_t v0;
  uint64_t v1;

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0, 1, v1);
}

uint64_t sub_23F17FB40@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 168));
}

uint64_t sub_23F17FB48@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t sub_23F17FB54()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F17FB6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(a1 + 8))(*(_QWORD *)(v1 - 120), *(_QWORD *)(v1 - 128));
}

uint64_t sub_23F17FB78(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

uint64_t sub_23F17FB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(int *)(v2 + 20);
  v5 = v1 + v4;
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0 + v4, 1, v3);
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v5, 1, v3);
}

void sub_23F17FBBC(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

void sub_23F17FBC8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F17FBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23F17FC00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, a2, 1, v2);
}

uint64_t sub_23F17FC20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(int *)(v2 + 28);
  v4 = (_QWORD *)(v0 + v3);
  v5 = (_QWORD *)(v1 + v3);
  v6 = v5[1];
  *v4 = *v5;
  v4[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23F17FC44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v2 + *(int *)(a1 + 44), v1, v3);
}

void *sub_23F17FC68(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t sub_23F17FC7C@<X0>(uint64_t (*a1)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, *(_QWORD *)(v2 - 160));
}

uint64_t sub_23F17FC88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F17FC90()
{
  return sub_23F268750();
}

uint64_t sub_23F17FC98()
{
  return sub_23F268714();
}

uint64_t sub_23F17FCB8()
{
  return sub_23F2686B4();
}

uint64_t sub_23F17FCD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0 + *(int *)(v1 + 24);
  *(_DWORD *)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  return v0 + *(int *)(v1 + 20);
}

void sub_23F17FD00()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

uint64_t sub_23F17FD10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0 + *(int *)(v1 + 24);
  *(_DWORD *)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_23F17FD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0 + *(int *)(v1 + 24);
  *(_DWORD *)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_23F17FD60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1 + *(int *)(v3 + 36), v0, v2);
}

uint64_t sub_23F17FD80()
{
  return type metadata accessor for RGDisambiguationModel(0);
}

uint64_t sub_23F17FD88()
{
  return sub_23F2680C0();
}

uint64_t sub_23F17FD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23F17FDB0()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F17FDC0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23F163D7C();
}

uint64_t sub_23F17FDCC(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

uint64_t sub_23F17FDD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_23F17FE00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t sub_23F17FE1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t sub_23F17FE38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v2, v0);
}

uint64_t sub_23F17FE48()
{
  return sub_23F2686B4();
}

uint64_t sub_23F17FE50()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F17FE68()
{
  return sub_23F2686B4();
}

uint64_t sub_23F17FE70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v2 + *(int *)(a1 + 36), v1, v3);
}

void sub_23F17FE88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 1, 1, a1);
  sub_23F125E40(v2, v3);
}

void sub_23F17FEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = v10 + *(int *)(v11 + 24);
  *(_DWORD *)v15 = v12;
  *(_QWORD *)(v15 + 8) = v13;
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v10 + *(int *)(v11 + 28)) = a10;
}

uint64_t sub_23F17FEE0()
{
  return type metadata accessor for RGParameterConfirmationModel(0);
}

uint64_t sub_23F17FEE8(uint64_t a1)
{
  unint64_t v1;

  return sub_23F131170(a1, v1);
}

uint64_t sub_23F17FEF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t sub_23F17FF08@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F17FF10()
{
  return sub_23F2686E4();
}

void sub_23F17FF24()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
}

void sub_23F17FF4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[2];
  *(_QWORD *)(v1 - 120) = v0[3];
  *(_QWORD *)(v1 - 112) = v2;
  v3 = v0[4];
  *(_QWORD *)(v1 - 136) = v0[5];
  *(_QWORD *)(v1 - 128) = v3;
}

uint64_t sub_23F17FF68()
{
  uint64_t v0;

  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(*(_QWORD *)(v0 - 136));
}

void sub_23F17FF70(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F132624(a1, a2, v2);
}

uint64_t sub_23F17FF78()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return v0(v1 + *(int *)(v3 + 32), v2, v4);
}

uint64_t sub_23F17FF8C()
{
  return type metadata accessor for RGActionConfirmationModel(0);
}

uint64_t sub_23F17FF94()
{
  return type metadata accessor for RGToolDisambiguationModel(0);
}

void sub_23F17FF9C(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 104) = a1;
}

uint64_t sub_23F17FFA8()
{
  return 0;
}

uint64_t sub_23F17FFC4()
{
  return 0;
}

void sub_23F17FFE0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F17FFFC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F180018(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void *sub_23F180050(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t sub_23F180064()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F180070()
{
  uint64_t v0;
  uint64_t v1;

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, 0, 1, v1);
}

uint64_t sub_23F180084()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F175240(v1, v0);
}

uint64_t sub_23F180090()
{
  return sub_23F268678();
}

uint64_t sub_23F180098()
{
  return sub_23F268750();
}

uint64_t sub_23F1800A4()
{
  return sub_23F2686F0();
}

void sub_23F1800B0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F16D354(a1, v1);
}

void sub_23F1800B8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_23F125DE4(a1, v3, a3);
}

uint64_t sub_23F1800C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F1800C8()
{
  return sub_23F2680B4();
}

uint64_t sub_23F1800D8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F1800F0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1800FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t sub_23F18010C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F180124()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F18012C()
{
  return sub_23F2686B4();
}

uint64_t sub_23F180134()
{
  return swift_bridgeObjectRelease();
}

void sub_23F18013C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F1325F8(a1, a2, v2);
}

__n128 sub_23F180144@<Q0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;

  *(_DWORD *)v1 = a1;
  result = *(__n128 *)(v2 - 96);
  *(__n128 *)(v1 + 8) = result;
  return result;
}

uint64_t sub_23F18016C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

char *sub_23F18017C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F180194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;

  sub_23F1752C4(a9, a2, v9);
}

uint64_t sub_23F1801A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1801AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23F1801B4@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  *result = a2;
  return result;
}

uint64_t sub_23F1801BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1801F8@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v3, v2);
}

uint64_t sub_23F180208(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_23F1217E8(a3);
}

uint64_t sub_23F180218(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 192))(a1, v1, v2);
}

void sub_23F180228(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F1752C4(a1, v3, a3);
}

uint64_t sub_23F180230@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_23F180238@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_23F180244(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

unint64_t sub_23F18025C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_23F175100();
}

void sub_23F180268()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 2;
}

void sub_23F180274()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
}

uint64_t sub_23F180280()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F159FD0(v0, v1);
}

uint64_t sub_23F18028C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 1;
  return *(_QWORD *)(v0 - 112);
}

void sub_23F1802A0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 104) = 1;
}

void sub_23F1802B4()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + *(int *)(v2 + 24) + 16) = v0;
}

uint64_t sub_23F1802C8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1802E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F1802FC()
{
  uint64_t v0;

  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(*(_QWORD *)(v0 - 144));
}

uint64_t sub_23F180304()
{
  return sub_23F2688A0();
}

uint64_t sub_23F180318()
{
  return sub_23F2686B4();
}

void sub_23F180320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *(int *)(v3 + 40));
  *v4 = v1;
  v4[1] = v0;
}

uint64_t sub_23F180334()
{
  return type metadata accessor for RGDisambiguationModel.Item(0);
}

void sub_23F180370()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_23F16D354(v1, v0);
}

uint64_t sub_23F18037C()
{
  return sub_23F268888();
}

void sub_23F1803B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F17537C(v3, a2, a3);
}

uint64_t sub_23F1803B8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F1803CC()
{
  uint64_t v0;

  return v0 - 96;
}

uint64_t SaltedLoggingIDConvertible.toLoggingId(scope:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  _BYTE v5[24];
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_OWORD *)v5 = *a1;
  (*(void (**)(uint64_t *__return_ptr, _BYTE *))(a2 + 8))(&v9, v5);
  *(_QWORD *)v5 = v9;
  *(_OWORD *)&v5[8] = v10;
  v6 = v11;
  v7 = v12;
  v8 = v13;
  SaltedLoggingIDData.toLoggingID()(a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t SaltedLoggingIDData.toLoggingID()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[4];

  v7[1] = a1;
  v1 = sub_23F267D84();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256DFE4B0 != -1)
    swift_once();
  v5 = sub_23F146E30(v1, (uint64_t)qword_256E00B10);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  v7[2] = 0;
  v7[3] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_23F2681BC();
  swift_bridgeObjectRelease();
  sub_23F180A58();
  swift_bridgeObjectRetain();
  sub_23F2681BC();
  swift_bridgeObjectRelease();
  sub_23F180A58();
  swift_bridgeObjectRetain();
  sub_23F2681BC();
  swift_bridgeObjectRelease();
  return sub_23F267568((uint64_t)v4);
}

uint64_t sub_23F1805C4()
{
  uint64_t v0;

  v0 = sub_23F267D84();
  sub_23F1470EC(v0, qword_256E00B10);
  sub_23F146E30(v0, (uint64_t)qword_256E00B10);
  return sub_23F267D78();
}

void __swiftcall SaltedLoggingIDData.init(_:scope:category:)(IntelligenceFlow::SaltedLoggingIDData *__return_ptr retstr, Swift::String _, IntelligenceFlow::SaltedLoggingIDScope scope, Swift::String category)
{
  retstr->scope = *(IntelligenceFlow::SaltedLoggingIDScope *)scope.scopeData.value._countAndFlagsBits;
  retstr->logData = _;
  retstr->category._countAndFlagsBits = (uint64_t)scope.scopeData.value._object;
  retstr->category._object = (void *)category._countAndFlagsBits;
}

void static SaltedLoggingIDScope.process.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t static SaltedLoggingIDScope.custom(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

IntelligenceFlow::SaltedLoggingIDCategory_optional __swiftcall SaltedLoggingIDCategory.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  IntelligenceFlow::SaltedLoggingIDCategory_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23F268630();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t SaltedLoggingIDCategory.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574656D61726170;
  else
    return 0x74616469646E6163;
}

void sub_23F1806D4(char *a1, char *a2)
{
  sub_23F155D50(*a1, *a2);
}

unint64_t sub_23F1806E4()
{
  unint64_t result;

  result = qword_256E00B28;
  if (!qword_256E00B28)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SaltedLoggingIDCategory, &type metadata for SaltedLoggingIDCategory);
    atomic_store(result, (unint64_t *)&qword_256E00B28);
  }
  return result;
}

void sub_23F180720()
{
  sub_23F25E1A4();
}

uint64_t sub_23F180728()
{
  return sub_23F156288();
}

void sub_23F180730()
{
  sub_23F156668();
}

IntelligenceFlow::SaltedLoggingIDCategory_optional sub_23F180738(Swift::String *a1)
{
  return SaltedLoggingIDCategory.init(rawValue:)(*a1);
}

uint64_t sub_23F180744@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SaltedLoggingIDCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t dispatch thunk of SaltedLoggingIDConvertible.getSaltedLoggingIDData(loggingScope:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t destroy for SaltedLoggingIDData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SaltedLoggingIDData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SaltedLoggingIDData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for SaltedLoggingIDData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for SaltedLoggingIDData()
{
  sub_23F131844();
}

uint64_t getEnumTagSinglePayload for MessagePayload.SafetyModeException(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.SafetyModeException(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for SaltedLoggingIDScope()
{
  sub_23F131844();
}

uint64_t storeEnumTagSinglePayload for SaltedLoggingIDCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F1809DC + 4 * byte_23F270265[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F180A10 + 4 * byte_23F270260[v4]))();
}

uint64_t sub_23F180A10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F180A18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F180A20);
  return result;
}

uint64_t sub_23F180A2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F180A34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F180A38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F180A40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SaltedLoggingIDCategory()
{
  sub_23F131844();
}

uint64_t sub_23F180A58()
{
  return sub_23F2681BC();
}

uint64_t SessionClientConfiguration.clientActions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionClientConfiguration.clientActions.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SessionClientConfiguration.clientActions.modify())()
{
  return nullsub_1;
}

uint64_t SessionClientConfiguration.isSideChannelDebugger.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t SessionClientConfiguration.isSideChannelDebugger.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*SessionClientConfiguration.isSideChannelDebugger.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::SessionClientConfiguration __swiftcall SessionClientConfiguration.init()()
{
  uint64_t v0;
  IntelligenceFlow::SessionClientConfiguration result;

  *(_QWORD *)v0 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v0 + 8) = 0;
  return result;
}

IntelligenceFlow::SessionClientConfiguration __swiftcall SessionClientConfiguration.init(clientActions:)(Swift::OpaquePointer clientActions)
{
  uint64_t v1;
  IntelligenceFlow::SessionClientConfiguration result;

  *(Swift::OpaquePointer *)v1 = clientActions;
  *(_BYTE *)(v1 + 8) = 0;
  result.clientActions = clientActions;
  return result;
}

uint64_t static SessionClientConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  sub_23F129394();
  return v4 & ~(v2 ^ v3) & 1;
}

uint64_t sub_23F180B24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6341746E65696C63 && a2 == 0xED0000736E6F6974;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023F293BE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F180C34(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0x6341746E65696C63;
}

uint64_t sub_23F180C7C()
{
  char *v0;

  return sub_23F180C34(*v0);
}

uint64_t sub_23F180C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F180B24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F180CA8()
{
  sub_23F180E48();
  return sub_23F2688B8();
}

uint64_t sub_23F180CD0()
{
  sub_23F180E48();
  return sub_23F2688C4();
}

void SessionClientConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _DWORD v9[3];
  char v10;
  char v11;
  uint64_t v12;

  v4 = sub_23F1217E8(&qword_256E00B30);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9[2] = *((unsigned __int8 *)v1 + 8);
  sub_23F12545C(a1, a1[3]);
  sub_23F180E48();
  sub_23F2688A0();
  v12 = v8;
  v11 = 0;
  sub_23F1217E8(&qword_256E00B40);
  sub_23F181014(&qword_256E00B48, &qword_256E00B50, (uint64_t)&protocol conformance descriptor for ClientAction.Definition, MEMORY[0x24BEE12A0]);
  sub_23F268750();
  if (!v2)
  {
    v10 = 1;
    sub_23F26872C();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_23F1313FC();
}

unint64_t sub_23F180E48()
{
  unint64_t result;

  result = qword_256E00B38;
  if (!qword_256E00B38)
  {
    result = MEMORY[0x242667160](&unk_23F270500, &type metadata for SessionClientConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00B38);
  }
  return result;
}

void SessionClientConfiguration.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v5 = sub_23F1217E8(&qword_256E00B58);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F12545C(a1, a1[3]);
  sub_23F180E48();
  sub_23F268888();
  if (v2)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_23F1217E8(&qword_256E00B40);
    sub_23F181014(&qword_256E00B60, &qword_256E00B68, (uint64_t)&protocol conformance descriptor for ClientAction.Definition, MEMORY[0x24BEE12D0]);
    sub_23F2686B4();
    swift_bridgeObjectRetain();
    v6 = sub_23F268690();
    sub_23F1317A0();
    *(_QWORD *)a2 = v7;
    *(_BYTE *)(a2 + 8) = v6 & 1;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  sub_23F1313FC();
}

uint64_t sub_23F181014(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = sub_23F125540(&qword_256E00B40);
    v10 = sub_23F181090(a2, a3);
    result = MEMORY[0x242667160](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F181090(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ClientAction.Definition(255);
    result = MEMORY[0x242667160](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23F1810D0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  SessionClientConfiguration.init(from:)(a1, a2);
}

void sub_23F1810E4(_QWORD *a1)
{
  SessionClientConfiguration.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for SessionClientConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SessionClientConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for SessionClientConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for SessionClientConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionClientConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionClientConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionClientConfiguration()
{
  return &type metadata for SessionClientConfiguration;
}

uint64_t storeEnumTagSinglePayload for SessionClientConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F18129C + 4 * byte_23F270395[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F1812D0 + 4 * byte_23F270390[v4]))();
}

uint64_t sub_23F1812D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1812D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F1812E0);
  return result;
}

uint64_t sub_23F1812EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F1812F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F1812F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F181300(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionClientConfiguration.CodingKeys()
{
  return &type metadata for SessionClientConfiguration.CodingKeys;
}

unint64_t sub_23F181320()
{
  unint64_t result;

  result = qword_256E00B70;
  if (!qword_256E00B70)
  {
    result = MEMORY[0x242667160](&unk_23F2704D8, &type metadata for SessionClientConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00B70);
  }
  return result;
}

unint64_t sub_23F181360()
{
  unint64_t result;

  result = qword_256E00B78;
  if (!qword_256E00B78)
  {
    result = MEMORY[0x242667160](&unk_23F270448, &type metadata for SessionClientConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00B78);
  }
  return result;
}

unint64_t sub_23F1813A0()
{
  unint64_t result;

  result = qword_256E00B80;
  if (!qword_256E00B80)
  {
    result = MEMORY[0x242667160](&unk_23F270470, &type metadata for SessionClientConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00B80);
  }
  return result;
}

uint64_t sub_23F1813E0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_23F12D3B4(0, v1, 0);
    v2 = v10;
    v4 = (uint64_t *)(a1 + 72);
    do
    {
      v6 = *v4;
      v4 += 6;
      v5 = v6;
      v8 = *(_QWORD *)(v10 + 16);
      v7 = *(_QWORD *)(v10 + 24);
      swift_retain();
      if (v8 >= v7 >> 1)
        sub_23F12D3B4((_QWORD *)(v7 > 1), v8 + 1, 1);
      *(_QWORD *)(v10 + 16) = v8 + 1;
      *(_QWORD *)(v10 + 8 * v8 + 32) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t (*SessionConfiguration.plannerType.modify())()
{
  return nullsub_1;
}

uint64_t SessionConfiguration.clientEffects.getter()
{
  return swift_bridgeObjectRetain();
}

void SessionConfiguration.clientEffects.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F18ADB4();
  *(_QWORD *)(v1 + 8) = a1;
  sub_23F126078();
}

uint64_t (*SessionConfiguration.clientEffects.modify())()
{
  return nullsub_1;
}

uint64_t SessionConfiguration.clientActions.getter()
{
  return swift_bridgeObjectRetain();
}

void SessionConfiguration.clientActions.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  sub_23F126078();
}

uint64_t (*SessionConfiguration.clientActions.modify())()
{
  return nullsub_1;
}

uint64_t SessionConfiguration.prewarmContext.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t SessionConfiguration.prewarmContext.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*SessionConfiguration.prewarmContext.modify())()
{
  return nullsub_1;
}

uint64_t SessionConfiguration.initialLocaleSettings.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *(int *)(sub_23F18AA74() + 32);
  return sub_23F181590(v2, v0);
}

uint64_t type metadata accessor for SessionConfiguration(uint64_t a1)
{
  return sub_23F12EDBC(a1, (uint64_t *)&unk_256E00ED8);
}

uint64_t sub_23F181590(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F1217E8(&qword_256E00BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SessionConfiguration.initialLocaleSettings.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *(int *)(sub_23F18AD9C() + 32);
  return sub_23F181600(v0, v2);
}

uint64_t sub_23F181600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F1217E8(&qword_256E00BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*SessionConfiguration.initialLocaleSettings.modify())()
{
  type metadata accessor for SessionConfiguration(0);
  return nullsub_1;
}

void SessionConfiguration.participantSettings.getter()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = *(_BYTE *)(v1 + *(int *)(sub_23F18AA74() + 36));
  sub_23F126078();
}

void SessionConfiguration.participantSettings.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for SessionConfiguration(0) + 36)) = v2;
  sub_23F126078();
}

uint64_t (*SessionConfiguration.participantSettings.modify())()
{
  type metadata accessor for SessionConfiguration(0);
  return nullsub_1;
}

void SessionConfiguration.debuggerSettings.getter()
{
  uint64_t v0;
  uint64_t v1;
  __int16 *v2;
  __int16 v3;

  v2 = (__int16 *)(v1 + *(int *)(sub_23F18AA74() + 40));
  v3 = *v2;
  *(_BYTE *)(v0 + 2) = *((_BYTE *)v2 + 2);
  *(_WORD *)v0 = v3;
  sub_23F126078();
}

void SessionConfiguration.debuggerSettings.setter(__int16 *a1)
{
  uint64_t v1;
  __int16 v2;
  char v3;
  uint64_t v4;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 2);
  v4 = v1 + *(int *)(type metadata accessor for SessionConfiguration(0) + 40);
  *(_BYTE *)(v4 + 2) = v3;
  *(_WORD *)v4 = v2;
  sub_23F12612C();
}

uint64_t (*SessionConfiguration.debuggerSettings.modify())()
{
  type metadata accessor for SessionConfiguration(0);
  return nullsub_1;
}

uint64_t SessionConfiguration.identityChain.getter()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = *(_QWORD *)(v1 + *(int *)(sub_23F18AA74() + 44));
  return sub_23F14C284();
}

void SessionConfiguration.identityChain.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *(int *)(sub_23F18AD70() + 44);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = v2;
  sub_23F12612C();
}

uint64_t (*SessionConfiguration.identityChain.modify())()
{
  type metadata accessor for SessionConfiguration(0);
  return nullsub_1;
}

uint64_t SessionConfiguration.originatingDevice.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F18AA74();
  sub_23F18ACE4((uint64_t *)(v0 + *(int *)(v1 + 48)));
  return sub_23F14C284();
}

void SessionConfiguration.originatingDevice.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_DWORD *)a1 + 4);
  v5 = v1 + *(int *)(type metadata accessor for SessionConfiguration(0) + 48);
  sub_23F18ADB4();
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_DWORD *)(v5 + 16) = v4;
  sub_23F12612C();
}

uint64_t (*SessionConfiguration.originatingDevice.modify())()
{
  type metadata accessor for SessionConfiguration(0);
  return nullsub_1;
}

void SessionConfiguration.init()(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = 4;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 2;
  v2 = (int *)sub_23F18AD70();
  v3 = a1 + v2[8];
  v4 = type metadata accessor for LocaleSettings(0);
  sub_23F126158(v3, v5, v6, v4);
  *(_BYTE *)(a1 + v2[9]) = 2;
  sub_23F18AC40(a1 + v2[10]);
  *(_QWORD *)(a1 + v2[11]) = 0;
  v7 = a1 + v2[12];
  *(_QWORD *)v7 = 0;
  *(_QWORD *)(v7 + 8) = 0;
  *(_DWORD *)(v7 + 16) = 0;
  sub_23F12612C();
}

uint64_t type metadata accessor for LocaleSettings(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E00F90);
}

uint64_t sub_23F18190C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v10;

  v2 = a1 == 0x5472656E6E616C70 && a2 == 0xEB00000000657079;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6645746E65696C63 && a2 == 0xED00007374636566;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6341746E65696C63 && a2 == 0xED0000736E6F6974;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x436D726177657270 && a2 == 0xEE00747865746E6FLL;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x800000023F293C00 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x800000023F293C20 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x800000023F293C40 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          v9 = a1 == 0x797469746E656469 && a2 == 0xED00006E69616843;
          if (v9 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000011 && a2 == 0x800000023F293C60)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else
          {
            v10 = sub_23F268798();
            swift_bridgeObjectRelease();
            if ((v10 & 1) != 0)
              return 8;
            else
              return 9;
          }
        }
      }
    }
  }
}

uint64_t sub_23F181D2C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F181D68 + 4 * byte_23F270550[a1]))(0x5472656E6E616C70, 0xEB00000000657079);
}

uint64_t sub_23F181D68()
{
  return 0x6645746E65696C63;
}

uint64_t sub_23F181D8C()
{
  return 0x6341746E65696C63;
}

uint64_t sub_23F181DB0()
{
  return 0x436D726177657270;
}

unint64_t sub_23F181DD4()
{
  return 0xD000000000000015;
}

uint64_t sub_23F181E68()
{
  unsigned __int8 *v0;

  return sub_23F181D2C(*v0);
}

uint64_t sub_23F181E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F18190C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F181E94()
{
  sub_23F1821A4();
  return sub_23F2688B8();
}

uint64_t sub_23F181EBC()
{
  sub_23F1821A4();
  return sub_23F2688C4();
}

void SessionConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_23F1217E8(&qword_256E00BB0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F18AA80(a1);
  sub_23F1821A4();
  sub_23F18A998();
  sub_23F1821E0();
  sub_23F18A980();
  if (!v1)
  {
    sub_23F15EC34();
    sub_23F12636C();
    sub_23F15E778((uint64_t)&unk_256E00BD0);
    sub_23F18AD50();
    sub_23F15E5FC();
    sub_23F1217E8(&qword_256E00B40);
    sub_23F182844((uint64_t)&qword_256E00B48);
    sub_23F18AD50();
    sub_23F15E5FC();
    sub_23F2686FC();
    type metadata accessor for SessionConfiguration(0);
    sub_23F18AC70();
    sub_23F182258((uint64_t)&unk_256E00BE0);
    sub_23F15E5FC();
    sub_23F182288();
    sub_23F18A980();
    sub_23F1822C4();
    sub_23F18A980();
    sub_23F182300();
    sub_23F18A980();
    sub_23F18233C();
    sub_23F18A980();
  }
  sub_23F15E780(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F18AB98();
}

unint64_t sub_23F1821A4()
{
  unint64_t result;

  result = qword_256E00BB8;
  if (!qword_256E00BB8)
  {
    result = MEMORY[0x242667160](&unk_23F271DA8, &type metadata for SessionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00BB8);
  }
  return result;
}

unint64_t sub_23F1821E0()
{
  unint64_t result;

  result = qword_256E00BC0;
  if (!qword_256E00BC0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionConfiguration.PlannerType, &type metadata for SessionConfiguration.PlannerType);
    atomic_store(result, (unint64_t *)&qword_256E00BC0);
  }
  return result;
}

unint64_t sub_23F18221C()
{
  unint64_t result;

  result = qword_256E00BD8;
  if (!qword_256E00BD8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ToolDefinition, &type metadata for ToolDefinition);
    atomic_store(result, (unint64_t *)&qword_256E00BD8);
  }
  return result;
}

void sub_23F182258(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!sub_23F131AF0(a1))
  {
    v1(255);
    sub_23F18AD90();
  }
  sub_23F126078();
}

unint64_t sub_23F182288()
{
  unint64_t result;

  result = qword_256E00BE8;
  if (!qword_256E00BE8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionConfiguration.ParticipantSettings, &type metadata for SessionConfiguration.ParticipantSettings);
    atomic_store(result, (unint64_t *)&qword_256E00BE8);
  }
  return result;
}

unint64_t sub_23F1822C4()
{
  unint64_t result;

  result = qword_256E00BF0;
  if (!qword_256E00BF0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for DebuggerSettings, &type metadata for DebuggerSettings);
    atomic_store(result, (unint64_t *)&qword_256E00BF0);
  }
  return result;
}

unint64_t sub_23F182300()
{
  unint64_t result;

  result = qword_256E00BF8;
  if (!qword_256E00BF8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ClientIdentityChain, &type metadata for ClientIdentityChain);
    atomic_store(result, (unint64_t *)&qword_256E00BF8);
  }
  return result;
}

unint64_t sub_23F18233C()
{
  unint64_t result;

  result = qword_256E00C00;
  if (!qword_256E00C00)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for DeviceDetails, &type metadata for DeviceDetails);
    atomic_store(result, (unint64_t *)&qword_256E00C00);
  }
  return result;
}

void SessionConfiguration.init(from:)()
{
  char *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _BYTE *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;

  sub_23F131874();
  v42 = v0;
  v2 = v1;
  v33 = v3;
  sub_23F1217E8(&qword_256E00BA8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F125F70();
  v37 = v5;
  v6 = sub_23F1217E8(&qword_256E00C08);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F15E524();
  v8 = (int *)type metadata accessor for SessionConfiguration(0);
  sub_23F125F30();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v12 + 1) = 0;
  v13 = v12 + 8;
  *v12 = 4;
  *((_QWORD *)v12 + 2) = 0;
  v12[24] = 2;
  v14 = (uint64_t)&v12[*(int *)(v10 + 32)];
  v15 = sub_23F18AC70();
  v35 = v14;
  v36 = v15;
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v14, 1, 1, v15);
  v34 = v8[9];
  v12[v34] = 2;
  v16 = v8[10];
  sub_23F18AC40((uint64_t)&v12[v16]);
  v17 = v8[11];
  *(_QWORD *)&v12[v17] = 0;
  v18 = v8[12];
  v40 = v2;
  v41 = v12;
  v19 = &v12[v18];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  *((_DWORD *)v19 + 4) = 0;
  sub_23F12545C(v2, v2[3]);
  sub_23F1821A4();
  v20 = v42;
  sub_23F268888();
  if (v20)
  {
    v21 = (uint64_t)v41;
  }
  else
  {
    v42 = v13;
    v31 = v17;
    v32 = v16;
    v30 = v19;
    sub_23F1827CC();
    sub_23F18A96C();
    v21 = (uint64_t)v41;
    *v41 = v43;
    sub_23F12636C();
    sub_23F15EC34();
    sub_23F15E778((uint64_t)&unk_256E00C18);
    sub_23F18A9E4();
    *(_QWORD *)v42 = v43;
    sub_23F1217E8(&qword_256E00B40);
    sub_23F182844((uint64_t)&qword_256E00B60);
    sub_23F18A9E4();
    *(_QWORD *)(v21 + 16) = v43;
    LOBYTE(v43) = 3;
    *(_BYTE *)(v21 + 24) = sub_23F268660();
    LOBYTE(v43) = 4;
    sub_23F182258((uint64_t)&unk_256E00C28);
    v22 = v37;
    sub_23F18A96C();
    sub_23F181600(v22, v35);
    sub_23F1828C4();
    sub_23F18A96C();
    *(_BYTE *)(v21 + v34) = v43;
    sub_23F182900();
    sub_23F18A96C();
    v23 = v43;
    v24 = v21 + v32;
    *(_BYTE *)(v24 + 2) = BYTE2(v43);
    *(_WORD *)v24 = v23;
    sub_23F18293C();
    sub_23F18A96C();
    v25 = v43;
    v26 = v31;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v21 + v26) = v25;
    sub_23F182978();
    sub_23F18A96C();
    sub_23F18AADC();
    v27 = v43;
    v28 = v44;
    LODWORD(v26) = v45;
    v29 = v30;
    swift_bridgeObjectRelease();
    *(_QWORD *)v29 = v27;
    *((_QWORD *)v29 + 1) = v28;
    *((_DWORD *)v29 + 4) = v26;
    sub_23F18782C(v21, v33, type metadata accessor for SessionConfiguration);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v40);
  sub_23F12E3EC(v21, type metadata accessor for SessionConfiguration);
  sub_23F1313FC();
}

unint64_t sub_23F1827CC()
{
  unint64_t result;

  result = qword_256E00C10;
  if (!qword_256E00C10)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionConfiguration.PlannerType, &type metadata for SessionConfiguration.PlannerType);
    atomic_store(result, (unint64_t *)&qword_256E00C10);
  }
  return result;
}

unint64_t sub_23F182808()
{
  unint64_t result;

  result = qword_256E00C20;
  if (!qword_256E00C20)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ToolDefinition, &type metadata for ToolDefinition);
    atomic_store(result, (unint64_t *)&qword_256E00C20);
  }
  return result;
}

unint64_t sub_23F182844(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_23F131AF0(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = sub_23F125540(&qword_256E00B40);
    sub_23F182258(v6);
    v9 = v8;
    result = MEMORY[0x242667160](v5, v7, &v9);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_23F1828C4()
{
  unint64_t result;

  result = qword_256E00C30;
  if (!qword_256E00C30)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionConfiguration.ParticipantSettings, &type metadata for SessionConfiguration.ParticipantSettings);
    atomic_store(result, (unint64_t *)&qword_256E00C30);
  }
  return result;
}

unint64_t sub_23F182900()
{
  unint64_t result;

  result = qword_256E00C38;
  if (!qword_256E00C38)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for DebuggerSettings, &type metadata for DebuggerSettings);
    atomic_store(result, (unint64_t *)&qword_256E00C38);
  }
  return result;
}

unint64_t sub_23F18293C()
{
  unint64_t result;

  result = qword_256E00C40;
  if (!qword_256E00C40)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ClientIdentityChain, &type metadata for ClientIdentityChain);
    atomic_store(result, (unint64_t *)&qword_256E00C40);
  }
  return result;
}

unint64_t sub_23F182978()
{
  unint64_t result;

  result = qword_256E00C48;
  if (!qword_256E00C48)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for DeviceDetails, &type metadata for DeviceDetails);
    atomic_store(result, (unint64_t *)&qword_256E00C48);
  }
  return result;
}

void sub_23F1829B4()
{
  SessionConfiguration.init(from:)();
}

void sub_23F1829C8(_QWORD *a1)
{
  SessionConfiguration.encode(to:)(a1);
}

void SessionConfiguration.init(plannerType:initialLocaleSettings:participantSettings:identityChain:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F125F3C();
  sub_23F18AC84();
  v3 = *v2;
  sub_23F18A8E4(v4);
  sub_23F18AD64();
  *(_QWORD *)(v0 + v1) = v3;
  sub_23F125EFC();
}

void SessionConfiguration.init(plannerType:useCuratedToolbox:clientEffects:)(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v4 = *a1;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 2;
  v5 = (int *)sub_23F18AD70();
  v6 = a2 + v5[8];
  v7 = type metadata accessor for LocaleSettings(0);
  sub_23F126158(v6, v8, v9, v7);
  *(_BYTE *)(a2 + v5[9]) = 2;
  sub_23F18AC40(a2 + v5[10]);
  *(_QWORD *)(a2 + v5[11]) = 0;
  v10 = a2 + v5[12];
  *(_QWORD *)v10 = 0;
  *(_QWORD *)(v10 + 8) = 0;
  *(_DWORD *)(v10 + 16) = 0;
  *(_BYTE *)a2 = v4;
  sub_23F131ABC();
}

void SessionConfiguration.init(plannerType:clientActions:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F18AC84();
  *(_QWORD *)(v2 + 8) = 0;
  *(_BYTE *)(v2 + 24) = 2;
  v3 = type metadata accessor for SessionConfiguration(0);
  sub_23F18AB18(v3);
  *(_BYTE *)(v1 + v4) = 2;
  sub_23F18AA00();
  *(_QWORD *)(v1 + 16) = v0;
  sub_23F131ABC();
}

void SessionConfiguration.init(plannerType:clientActions:prewarmContext:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F18AB4C();
  *(_QWORD *)(v5 + 8) = 0;
  sub_23F18AA34();
  *(_BYTE *)(v2 + v6) = 2;
  v7 = v2 + v3[10];
  *(_BYTE *)(v7 + 2) = 0;
  *(_WORD *)v7 = 512;
  *(_QWORD *)(v2 + v3[11]) = 0;
  v8 = v2 + v3[12];
  *(_QWORD *)v8 = 0;
  *(_QWORD *)(v8 + 8) = 0;
  *(_DWORD *)(v8 + 16) = 0;
  *(_BYTE *)v2 = v4;
  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 24) = v0;
  sub_23F131ABC();
}

void SessionConfiguration.init(plannerType:prewarmContext:)(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for SessionConfiguration(0);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  sub_23F18AB18(v4);
  *(_BYTE *)(a2 + v5) = 2;
  sub_23F18AA00();
  *(_BYTE *)(a2 + 24) = a1;
  sub_23F131ABC();
}

uint64_t SessionConfiguration.init(plannerType:initialLocaleSettings:prewarmContext:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_23F18AB4C();
  *(_QWORD *)(v2 + 8) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 2;
  sub_23F18AA34();
  *(_BYTE *)(v1 + v3) = 2;
  result = sub_23F18A9A8();
  *(_BYTE *)(v1 + 24) = v0;
  return result;
}

void SessionConfiguration.init(plannerType:initialLocaleSettings:prewarmContext:participantSettings:)()
{
  char v0;
  uint64_t v1;
  char *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F125F3C();
  sub_23F18AB4C();
  v3 = *v2;
  *(_QWORD *)(v4 + 8) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 24) = 2;
  v5 = type metadata accessor for SessionConfiguration(0);
  v6 = v1 + *(int *)(v5 + 32);
  v7 = type metadata accessor for LocaleSettings(0);
  sub_23F126158(v6, v8, v9, v7);
  v10 = *(int *)(v5 + 36);
  *(_BYTE *)(v1 + v10) = 2;
  sub_23F18A9A8();
  *(_BYTE *)(v1 + 24) = v0;
  *(_BYTE *)(v1 + v10) = v3;
  sub_23F125EFC();
}

void SessionConfiguration.init(plannerType:initialLocaleSettings:prewarmContext:participantSettings:identityChain:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F125F3C();
  sub_23F18AC84();
  v3 = *v2;
  sub_23F18A8E4(v4);
  sub_23F18AD64();
  *(_QWORD *)(v0 + v1) = v3;
  sub_23F125EFC();
}

void sub_23F182C90()
{
  qword_256E00B88 = (uint64_t)&unk_250FA9630;
}

uint64_t static SessionConfiguration.PlannerType.allCases.getter()
{
  if (qword_256DFE4B8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

IntelligenceFlow::SessionConfiguration::PlannerType_optional __swiftcall SessionConfiguration.PlannerType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  IntelligenceFlow::SessionConfiguration::PlannerType_optional result;

  v2 = v1;
  v3 = sub_23F268630();
  swift_bridgeObjectRelease();
  v4 = 4;
  if (v3 < 4)
    v4 = v3;
  *v2 = v4;
  sub_23F12612C();
  return result;
}

uint64_t SessionConfiguration.PlannerType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F182D64 + 4 * byte_23F270559[*v0]))(0x647261646E617473, 0xE800000000000000);
}

uint64_t sub_23F182D64()
{
  return 0x796D6D7564;
}

uint64_t sub_23F182D78()
{
  return 0x676E6974736574;
}

uint64_t sub_23F182D90()
{
  return 7169123;
}

void sub_23F182DA0(char *a1)
{
  sub_23F155DDC(*a1);
}

void sub_23F182DAC()
{
  unsigned __int8 *v0;

  sub_23F25E1B0(*v0);
}

void sub_23F182DB4(uint64_t a1)
{
  char *v1;

  sub_23F1562DC(a1, *v1);
}

void sub_23F182DBC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_23F156628(a1, *v1);
}

IntelligenceFlow::SessionConfiguration::PlannerType_optional sub_23F182DC4(Swift::String *a1)
{
  return SessionConfiguration.PlannerType.init(rawValue:)(*a1);
}

void sub_23F182DD0(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = SessionConfiguration.PlannerType.rawValue.getter();
  a1[1] = v2;
  sub_23F126078();
}

uint64_t sub_23F182DF0()
{
  sub_23F18A8A0();
  return sub_23F26824C();
}

uint64_t sub_23F182E4C()
{
  sub_23F18A8A0();
  return sub_23F268228();
}

uint64_t sub_23F182E98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static SessionConfiguration.PlannerType.allCases.getter();
  *a1 = result;
  return result;
}

void SessionConfiguration.ParticipantSettings.SemanticPreference.hash(into:)()
{
  sub_23F18AC30();
  sub_23F126078();
}

uint64_t sub_23F182ED8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x647261646E617473 && a2 == 0xE800000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4F72656E6E616C70 && a2 == 0xEB00000000796C6ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F182FDC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x4F72656E6E616C70;
  else
    return 0x647261646E617473;
}

uint64_t sub_23F18301C()
{
  char *v0;

  return sub_23F182FDC(*v0);
}

uint64_t sub_23F183024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F182ED8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F183048()
{
  sub_23F1832A0();
  return sub_23F2688B8();
}

uint64_t sub_23F183070()
{
  sub_23F1832A0();
  return sub_23F2688C4();
}

uint64_t sub_23F183098()
{
  sub_23F1832DC();
  return sub_23F2688B8();
}

uint64_t sub_23F1830C0()
{
  sub_23F1832DC();
  return sub_23F2688C4();
}

uint64_t sub_23F1830E8()
{
  sub_23F183318();
  return sub_23F2688B8();
}

uint64_t sub_23F183110()
{
  sub_23F183318();
  return sub_23F2688C4();
}

void SessionConfiguration.ParticipantSettings.SemanticPreference.encode(to:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F131874();
  v4 = v3;
  v5 = sub_23F1217E8(&qword_256E00C50);
  v15 = *(_QWORD *)(v5 - 8);
  v16 = v5;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F1217E8(&qword_256E00C58);
  v13 = *(_QWORD *)(v9 - 8);
  v14 = v9;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15EB6C();
  v17 = *(_QWORD *)(sub_23F1217E8(&qword_256E00C60) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F126058();
  v12 = *v0;
  sub_23F12545C(v4, v4[3]);
  sub_23F1832A0();
  sub_23F2688A0();
  if ((v12 & 1) != 0)
  {
    sub_23F18AD20();
    sub_23F15EA24();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v16);
  }
  else
  {
    sub_23F183318();
    sub_23F15EA24();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v14);
  }
  sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  sub_23F1313FC();
}

unint64_t sub_23F1832A0()
{
  unint64_t result;

  result = qword_256E00C68;
  if (!qword_256E00C68)
  {
    result = MEMORY[0x242667160](&unk_23F271D58, &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00C68);
  }
  return result;
}

unint64_t sub_23F1832DC()
{
  unint64_t result;

  result = qword_256E00C70;
  if (!qword_256E00C70)
  {
    result = MEMORY[0x242667160](&unk_23F271D08, &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.PlannerOnlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00C70);
  }
  return result;
}

unint64_t sub_23F183318()
{
  unint64_t result;

  result = qword_256E00C78;
  if (!qword_256E00C78)
  {
    result = MEMORY[0x242667160](&unk_23F271CB8, &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.StandardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00C78);
  }
  return result;
}

void SessionConfiguration.ParticipantSettings.SemanticPreference.hashValue.getter()
{
  sub_23F1317B8();
  sub_23F15EA08();
  sub_23F1318A0();
  sub_23F1318E4();
}

void SessionConfiguration.ParticipantSettings.SemanticPreference.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F131874();
  v6 = v5;
  v32 = v7;
  v30 = sub_23F1217E8(&qword_256E00C80);
  v34 = *(_QWORD *)(v30 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F18ABFC(v9, v27);
  v31 = sub_23F1217E8(&qword_256E00C88);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F15E524();
  v11 = sub_23F1217E8(&qword_256E00C90);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F1319C8();
  sub_23F12545C(v6, v6[3]);
  sub_23F1832A0();
  sub_23F15E564();
  if (v1)
    goto LABEL_9;
  v28 = v0;
  v29 = v6;
  v13 = sub_23F2686D8();
  v14 = *(_QWORD *)(v13 + 16);
  v15 = v11;
  if (!v14)
  {
    v22 = v2;
LABEL_8:
    v23 = sub_23F268594();
    sub_23F131B30();
    v25 = v24;
    sub_23F1217E8(&qword_256DFF4B8);
    *v25 = &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference;
    sub_23F268648();
    sub_23F15E6B4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    sub_23F15E96C();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v22, v15);
    v6 = v29;
LABEL_9:
    v26 = (uint64_t)v6;
    goto LABEL_10;
  }
  v16 = *(_BYTE *)(v13 + 32);
  sub_23F15E2D0(1, v14, v13, v13 + 32, 0, (2 * v14) | 1);
  v18 = v17;
  v20 = v19;
  swift_bridgeObjectRelease();
  if (v18 != v20 >> 1)
  {
    v22 = v2;
    v15 = v11;
    goto LABEL_8;
  }
  if ((v16 & 1) != 0)
  {
    sub_23F18AD20();
    sub_23F26863C();
    v21 = v32;
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v30);
    sub_23F15E96C();
    sub_23F15E588(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  else
  {
    sub_23F183318();
    sub_23F26863C();
    v21 = v32;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v28, v31);
    sub_23F15E96C();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v11);
  }
  *v21 = v16;
  v26 = (uint64_t)v29;
LABEL_10:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v26);
  sub_23F1313FC();
}

void sub_23F1836B0()
{
  SessionConfiguration.ParticipantSettings.SemanticPreference.init(from:)();
}

void sub_23F1836C4()
{
  SessionConfiguration.ParticipantSettings.SemanticPreference.encode(to:)();
}

void static SessionConfiguration.ParticipantSettings.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static SessionConfiguration.ParticipantSettings.plannerOnly.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t (*SessionConfiguration.ParticipantSettings.preference.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F18370C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E65726566657270 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F18379C()
{
  return 0x6E65726566657270;
}

uint64_t sub_23F1837BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F18370C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F1837E4()
{
  sub_23F18773C();
  return sub_23F2688B8();
}

uint64_t sub_23F18380C()
{
  sub_23F18773C();
  return sub_23F2688C4();
}

void SessionConfiguration.ParticipantSettings.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_23F131874();
  v3 = v2;
  sub_23F1217E8(&qword_256E00C98);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F126058();
  sub_23F18AA80(v3);
  sub_23F18773C();
  sub_23F18A998();
  sub_23F187778();
  sub_23F18AD0C();
  sub_23F17FF08(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F1313FC();
}

void SessionConfiguration.ParticipantSettings.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;

  sub_23F131874();
  a22 = v27;
  a23 = v28;
  sub_23F18AC78();
  sub_23F1217E8(&qword_256E00CB0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F18773C();
  sub_23F15E564();
  if (!v24)
  {
    sub_23F1877B4();
    sub_23F18AD2C();
    sub_23F17FF08((uint64_t)v31, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
    *v25 = a13;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v23);
  sub_23F1313FC();
}

#error "23F1839B8: call analysis failed (funcsize=5)"

void sub_23F1839C4()
{
  SessionConfiguration.ParticipantSettings.encode(to:)();
}

void static LocaleSettings.default.getter()
{
  sub_23F267D9C();
  sub_23F18AC70();
  sub_23F267D9C();
  sub_23F267D9C();
  sub_23F126078();
}

uint64_t LocaleSettings.init(deviceLocale:userLocale:responseLocale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);

  v8 = sub_23F18A9F0();
  sub_23F18AD44(a4, a1, v9, v10, v11, v12, v13, v14, v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32));
  v15 = type metadata accessor for LocaleSettings(0);
  sub_23F18AD44(a4 + *(int *)(v15 + 20), a2, v16, v17, v18, v19, v20, v21, v24, v25);
  return v26(a4 + *(int *)(v15 + 24), a3, v8);
}

uint64_t LocaleSettings.deviceLocale.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F18A9F0();
  v0 = sub_23F17FA04();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t LocaleSettings.deviceLocale.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F18A9F0();
  v0 = sub_23F17FB54();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t (*LocaleSettings.deviceLocale.modify())()
{
  return nullsub_1;
}

uint64_t LocaleSettings.userLocale.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F18AD84();
  sub_23F18A9F0();
  v0 = sub_23F17FA04();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t LocaleSettings.userLocale.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F18ADA8();
  sub_23F18A9F0();
  v0 = sub_23F17FB54();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t (*LocaleSettings.userLocale.modify())()
{
  type metadata accessor for LocaleSettings(0);
  return nullsub_1;
}

uint64_t LocaleSettings.responseLocale.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F18AD84();
  sub_23F18A9F0();
  v0 = sub_23F17FA04();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t LocaleSettings.responseLocale.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F18ADA8();
  sub_23F18A9F0();
  v0 = sub_23F17FB54();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t (*LocaleSettings.responseLocale.modify())()
{
  type metadata accessor for LocaleSettings(0);
  return nullsub_1;
}

void LocaleSettings.hash(into:)()
{
  sub_23F18A9F0();
  sub_23F182258((uint64_t)&unk_256E00CC0);
  sub_23F18AABC();
  sub_23F18AC70();
  sub_23F18AABC();
  sub_23F18AABC();
  sub_23F131ABC();
}

void static LocaleSettings.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((MEMORY[0x24266617C]() & 1) != 0)
  {
    v4 = type metadata accessor for LocaleSettings(0);
    if ((MEMORY[0x24266617C](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0)
      JUMPOUT(0x24266617CLL);
  }
  sub_23F12612C();
}

uint64_t sub_23F183CC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6F4C656369766564 && a2 == 0xEC000000656C6163;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x61636F4C72657375 && a2 == 0xEA0000000000656CLL;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00656C61636F4CLL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F183E54(char a1)
{
  if (!a1)
    return 0x6F4C656369766564;
  if (a1 == 1)
    return 0x61636F4C72657375;
  return 0x65736E6F70736572;
}

uint64_t sub_23F183EC4()
{
  char *v0;

  return sub_23F183E54(*v0);
}

uint64_t sub_23F183ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F183CC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F183EF0()
{
  sub_23F1877F0();
  return sub_23F2688B8();
}

uint64_t sub_23F183F18()
{
  sub_23F1877F0();
  return sub_23F2688C4();
}

void LocaleSettings.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_23F131874();
  v3 = v2;
  sub_23F1217E8(&qword_256E00CC8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F18AA80(v3);
  sub_23F1877F0();
  sub_23F18A998();
  sub_23F267DA8();
  sub_23F182258((uint64_t)&unk_256E00CD8);
  sub_23F17F928();
  if (!v0)
  {
    sub_23F18AC70();
    sub_23F17F928();
    sub_23F17F928();
  }
  sub_23F15E780(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F17FDF4();
  sub_23F1313FC();
}

uint64_t LocaleSettings.hashValue.getter()
{
  sub_23F1317B8();
  sub_23F18A9F0();
  sub_23F182258((uint64_t)&unk_256E00CC0);
  sub_23F18AACC();
  sub_23F18AC70();
  sub_23F18AACC();
  sub_23F18AACC();
  return sub_23F1318A0();
}

void LocaleSettings.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;

  sub_23F131874();
  v33 = v1;
  v3 = v2;
  v26 = v4;
  v30 = sub_23F267DA8();
  v28 = *(_QWORD *)(v30 - 8);
  sub_23F125F30();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v29 = (char *)&v24 - v11;
  v31 = sub_23F1217E8(&qword_256E00CE0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F18AC70();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F15E524();
  sub_23F12545C(v3, v3[3]);
  sub_23F1877F0();
  v32 = v14;
  v17 = v33;
  sub_23F268888();
  if (v17)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
  }
  else
  {
    v18 = v10;
    v24 = v15;
    v25 = v0;
    v33 = v3;
    v19 = v28;
    sub_23F182258((uint64_t)&unk_256E00CE8);
    v20 = v29;
    v21 = v30;
    sub_23F18AD78();
    v29 = *(char **)(v19 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v29)(v25, v20, v21);
    sub_23F18AD78();
    v22 = (void (*)(uint64_t, char *, uint64_t))v29;
    ((void (*)(uint64_t, char *, uint64_t))v29)(v25 + *(int *)(v24 + 20), v18, v21);
    sub_23F2686B4();
    sub_23F18ACB8();
    v23 = v25;
    v22(v25 + *(int *)(v24 + 24), v27, v21);
    sub_23F18782C(v23, v26, type metadata accessor for LocaleSettings);
    sub_23F131BF4();
    sub_23F12E3EC(v23, type metadata accessor for LocaleSettings);
  }
  sub_23F1313FC();
}

void sub_23F1843D8()
{
  LocaleSettings.init(from:)();
}

void sub_23F1843EC()
{
  LocaleSettings.encode(to:)();
}

uint64_t sub_23F184408()
{
  sub_23F268834();
  sub_23F267DA8();
  sub_23F182258((uint64_t)&unk_256E00CC0);
  sub_23F26812C();
  sub_23F26812C();
  sub_23F26812C();
  return sub_23F268864();
}

void DebuggerSettings.DebuggerMode.hash(into:)()
{
  sub_23F18AC30();
  sub_23F126078();
}

BOOL static DebuggerSettings.DebuggerMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23F1844EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023F293C80 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023F293CA0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F184624(char a1)
{
  if (!a1)
    return 1701736302;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0xD000000000000019;
}

uint64_t sub_23F18467C()
{
  char *v0;

  return sub_23F184624(*v0);
}

uint64_t sub_23F184684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1844EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1846A8()
{
  sub_23F18786C();
  return sub_23F2688B8();
}

uint64_t sub_23F1846D0()
{
  sub_23F18786C();
  return sub_23F2688C4();
}

uint64_t sub_23F1846F8()
{
  sub_23F1878E4();
  return sub_23F2688B8();
}

uint64_t sub_23F184720()
{
  sub_23F1878E4();
  return sub_23F2688C4();
}

uint64_t sub_23F184748()
{
  sub_23F187920();
  return sub_23F2688B8();
}

uint64_t sub_23F184770()
{
  sub_23F187920();
  return sub_23F2688C4();
}

uint64_t sub_23F184798()
{
  sub_23F1878A8();
  return sub_23F2688B8();
}

uint64_t sub_23F1847C0()
{
  sub_23F1878A8();
  return sub_23F2688C4();
}

void DebuggerSettings.DebuggerMode.encode(to:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F131874();
  v4 = v0;
  v6 = v5;
  v7 = sub_23F1217E8(&qword_256E00CF0);
  v19 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F125F70();
  v18 = v9;
  v10 = sub_23F1217E8(&qword_256E00CF8);
  v16 = *(_QWORD *)(v10 - 8);
  v17 = v10;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F15EB6C();
  v15 = sub_23F1217E8(&qword_256E00D00);
  v12 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  sub_23F126058();
  v21 = *(_QWORD *)(sub_23F1217E8(&qword_256E00D08) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F15E50C();
  v14 = *v4;
  sub_23F12545C(v6, v6[3]);
  sub_23F18786C();
  sub_23F2688A0();
  if (v14)
  {
    if (v14 == 1)
    {
      sub_23F18AD14();
      sub_23F18AB08();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v3, v17);
    }
    else
    {
      sub_23F18AD00();
      sub_23F18AB08();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    }
  }
  else
  {
    sub_23F187920();
    sub_23F18AB08();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v15);
  }
  sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  sub_23F1313FC();
}

void DebuggerSettings.DebuggerMode.hashValue.getter()
{
  sub_23F1317B8();
  sub_23F15EA08();
  sub_23F1318A0();
  sub_23F1318E4();
}

void DebuggerSettings.DebuggerMode.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  sub_23F131874();
  v5 = v4;
  v33 = v6;
  v32 = sub_23F1217E8(&qword_256E00D30);
  v29 = *(_QWORD *)(v32 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F125F70();
  v35 = v8;
  v9 = sub_23F1217E8(&qword_256E00D38);
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F18ABFC(v11, v27);
  v28 = sub_23F1217E8(&qword_256E00D40);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F15EB6C();
  v13 = sub_23F1217E8(&qword_256E00D48);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F1319C8();
  sub_23F12545C(v5, v5[3]);
  sub_23F18786C();
  sub_23F268888();
  if (v0)
    goto LABEL_10;
  v36 = (uint64_t)v5;
  v15 = v1;
  v16 = sub_23F2686D8();
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17
    || (v18 = *(unsigned __int8 *)(v16 + 32),
        sub_23F15E2D0(1, v17, v16, v16 + 32, 0, (2 * v17) | 1),
        v20 = v19,
        v22 = v21,
        swift_bridgeObjectRelease(),
        v20 != v22 >> 1))
  {
    v24 = sub_23F268594();
    sub_23F131B30();
    v26 = v25;
    sub_23F1217E8(&qword_256DFF4B8);
    *v26 = &type metadata for DebuggerSettings.DebuggerMode;
    sub_23F268648();
    sub_23F15E6B4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    sub_23F16BDC0();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v13);
    v5 = (_QWORD *)v36;
LABEL_10:
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v5);
    goto LABEL_11;
  }
  if (v18)
  {
    v37 = v18;
    if (v18 == 1)
    {
      sub_23F18AD14();
      sub_23F16BAF8();
      v23 = v33;
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v34, v31);
    }
    else
    {
      sub_23F18AD00();
      sub_23F16BAF8();
      v23 = v33;
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v35, v32);
    }
    swift_unknownObjectRelease();
    sub_23F18ABF0(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
  }
  else
  {
    sub_23F187920();
    sub_23F16BAF8();
    v37 = 0;
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v28);
    sub_23F16BDC0();
    sub_23F18ABF0(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    v23 = v33;
  }
  *v23 = v37;
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v36);
LABEL_11:
  sub_23F1313FC();
}

void sub_23F184D60()
{
  DebuggerSettings.DebuggerMode.init(from:)();
}

void sub_23F184D74()
{
  DebuggerSettings.DebuggerMode.encode(to:)();
}

uint64_t (*DebuggerSettings.mode.modify())()
{
  return nullsub_1;
}

uint64_t DebuggerSettings.startInDeferredTransactionMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t DebuggerSettings.startInDeferredTransactionMode.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*DebuggerSettings.startInDeferredTransactionMode.modify())()
{
  return nullsub_1;
}

uint64_t DebuggerSettings.startInInjectionMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t DebuggerSettings.startInInjectionMode.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*DebuggerSettings.startInInjectionMode.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::DebuggerSettings __swiftcall DebuggerSettings.init()()
{
  uint64_t v0;
  IntelligenceFlow::DebuggerSettings result;

  *(_WORD *)v0 = 0;
  *(_BYTE *)(v0 + 2) = 0;
  return result;
}

BOOL static DebuggerSettings.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 != *a2) | ((a1[1] ^ a2[1]) | (a2[2] ^ a1[2])) & 1) == 0;
}

uint64_t sub_23F184E2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701080941 && a2 == 0xE400000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023F293CC0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023F293CE0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F184F68(char a1)
{
  if (!a1)
    return 1701080941;
  if (a1 == 1)
    return 0xD00000000000001ELL;
  return 0xD000000000000014;
}

uint64_t sub_23F184FC8()
{
  char *v0;

  return sub_23F184F68(*v0);
}

uint64_t sub_23F184FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F184E2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F184FF4()
{
  sub_23F18795C();
  return sub_23F2688B8();
}

uint64_t sub_23F18501C()
{
  sub_23F18795C();
  return sub_23F2688C4();
}

void DebuggerSettings.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_23F131874();
  v3 = v2;
  sub_23F1217E8(&qword_256E00D50);
  sub_23F1800E0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F1319C8();
  sub_23F12545C(v3, v3[3]);
  sub_23F18795C();
  sub_23F18ABDC();
  sub_23F187998();
  sub_23F268750();
  if (!v0)
  {
    sub_23F18AC50();
    sub_23F18AC50();
  }
  sub_23F15E780(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F17FDF4();
  sub_23F1313FC();
}

void DebuggerSettings.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;

  sub_23F131874();
  sub_23F18AC78();
  sub_23F1217E8(&qword_256E00D68);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F15E498();
  sub_23F18795C();
  sub_23F15E564();
  if (!v14)
  {
    sub_23F1879D4();
    sub_23F18ABC0();
    v17 = sub_23F18AC94();
    v18 = sub_23F18AC94();
    sub_23F18AAF8();
    *v15 = a13;
    v15[1] = v17 & 1;
    v15[2] = v18 & 1;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v13);
  sub_23F17FDF4();
  sub_23F1313FC();
}

void sub_23F18525C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  DebuggerSettings.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_23F185270()
{
  DebuggerSettings.encode(to:)();
}

void static DeviceDetails.DeviceType.unknown.getter(_DWORD *a1@<X8>)
{
  sub_23F18A9F8(a1);
}

void static DeviceDetails.DeviceType.mac.getter(_DWORD *a1@<X8>)
{
  sub_23F18A9F8(a1);
}

void static DeviceDetails.DeviceType.iphone.getter(_DWORD *a1@<X8>)
{
  sub_23F18A9F8(a1);
}

void static DeviceDetails.DeviceType.ipad.getter(_DWORD *a1@<X8>)
{
  sub_23F18A9F8(a1);
}

void static DeviceDetails.DeviceType.ipod.getter(_DWORD *a1@<X8>)
{
  sub_23F18A9F8(a1);
}

void static DeviceDetails.DeviceType.tv.getter(_DWORD *a1@<X8>)
{
  sub_23F18A9F8(a1);
}

void static DeviceDetails.DeviceType.watch.getter(_DWORD *a1@<X8>)
{
  sub_23F18A9F8(a1);
}

void static DeviceDetails.DeviceType.audioAccessory.getter(_DWORD *a1@<X8>)
{
  sub_23F18A9F8(a1);
}

uint64_t DeviceDetails.DeviceType.rawValue.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t sub_23F1852D0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = DeviceDetails.DeviceType.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t DeviceDetails.DeviceType.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

void (*DeviceDetails.DeviceType.rawValue.modify(uint64_t a1))(_DWORD **a1)
{
  _DWORD *v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *v1;
  return sub_23F18532C;
}

void sub_23F18532C(_DWORD **a1)
{
  sub_23F18A9F8(*a1);
}

void DeviceDetails.DeviceType.init(rawValue:)(_DWORD *a1@<X8>)
{
  sub_23F18A9F8(a1);
}

void sub_23F185344(uint64_t a1@<X8>)
{
  DeviceDetails.DeviceType.init(rawValue:)((_DWORD *)a1);
  *(_BYTE *)(a1 + 4) = 0;
}

void sub_23F18536C(_DWORD *a1@<X8>)
{
  *a1 = DeviceDetails.DeviceType.rawValue.getter();
  sub_23F126078();
}

uint64_t sub_23F18538C()
{
  sub_23F18A864();
  return sub_23F268264();
}

uint64_t sub_23F1853E8()
{
  sub_23F18A864();
  return sub_23F268240();
}

void sub_23F185434()
{
  sub_23F25E1BC();
}

void sub_23F18543C()
{
  sub_23F1564DC();
}

void sub_23F185444()
{
  sub_23F1565C0();
}

BOOL sub_23F18544C(int *a1, int *a2)
{
  return sub_23F15626C(*a1, *a2);
}

void sub_23F185458()
{
  sub_23F185464((uint64_t)&qword_256E00B90);
}

void sub_23F185464(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  void *v15;
  int deviceClassNumber;
  int v17;
  uint64_t v18;

  v2 = sub_23F267FDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = IDSCopyLocalDeviceUniqueID();
  if (v6)
  {
    v7 = (void *)v6;
    v8 = sub_23F26815C();
    v10 = v9;

  }
  else
  {
    sub_23F267E20();
    v11 = sub_23F267FD0();
    v12 = sub_23F2683A8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_23F11F000, v11, v12, "Unexpectedly obtained nil value from IDSCopyLocalDeviceUniqueID()", v13, 2u);
      MEMORY[0x242667238](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v8 = 0;
    v10 = 0xE000000000000000;
  }
  v14 = (id)MobileGestalt_get_current_device();
  if (v14)
  {
    v15 = v14;
    deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    if (deviceClassNumber)
      v17 = deviceClassNumber;
    else
      v17 = -1;
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v10;
    *(_DWORD *)(a1 + 16) = v17;
  }
  else
  {
    __break(1u);
  }
}

uint64_t DeviceDetails.init(deviceIdsId:type:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  int v4;

  v4 = *a3;
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_DWORD *)(a4 + 16) = v4;
  return result;
}

uint64_t static DeviceDetails.current.getter()
{
  if (qword_256DFE4C0 != -1)
    swift_once();
  sub_23F18ACE4(&qword_256E00B90);
  return sub_23F14C284();
}

uint64_t DeviceDetails.deviceIdsId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void DeviceDetails.deviceIdsId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_23F18ADB4();
  *v2 = a1;
  v2[1] = a2;
  sub_23F12612C();
}

uint64_t (*DeviceDetails.deviceIdsId.modify())()
{
  return nullsub_1;
}

void DeviceDetails.type.getter(_DWORD *a1@<X8>)
{
  sub_23F18A9F8(a1);
}

_DWORD *DeviceDetails.type.setter(_DWORD *result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = *result;
  return result;
}

uint64_t (*DeviceDetails.type.modify())()
{
  return nullsub_1;
}

BOOL DeviceDetails.isCurrentDevice.getter()
{
  uint64_t *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v6;
  _BOOL8 result;

  if (qword_256DFE4C0 != -1)
    swift_once();
  v1 = dword_256E00BA0;
  v2 = *v0;
  v3 = v0[1];
  v4 = *((_DWORD *)v0 + 4);
  if (v2 == qword_256E00B90 && v3 == *(_QWORD *)algn_256E00B98)
    return v4 == v1;
  v6 = sub_23F268798();
  result = 0;
  if ((v6 & 1) != 0)
    return v4 == v1;
  return result;
}

BOOL static DeviceDetails.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  _BOOL8 result;

  v2 = *(_DWORD *)(a1 + 16);
  v3 = *(_DWORD *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_23F268798();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t sub_23F185774(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6449656369766564 && a2 == 0xEB00000000644973;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F185868(char a1)
{
  if ((a1 & 1) != 0)
    return 1701869940;
  else
    return 0x6449656369766564;
}

void sub_23F1858A0()
{
  sub_23F1866E0();
}

uint64_t sub_23F1858B8()
{
  char *v0;

  return sub_23F185868(*v0);
}

uint64_t sub_23F1858C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F185774(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F1858E4()
{
  sub_23F187A10();
  return sub_23F2688B8();
}

uint64_t sub_23F18590C()
{
  sub_23F187A10();
  return sub_23F2688C4();
}

void DeviceDetails.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F131874();
  v2 = v1;
  v4 = *(_QWORD *)(sub_23F1217E8(&qword_256E00D78) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F1319C8();
  sub_23F12545C(v2, v2[3]);
  sub_23F187A10();
  sub_23F18ABDC();
  sub_23F268720();
  if (!v0)
  {
    sub_23F187A4C();
    sub_23F1315CC();
  }
  sub_23F15E780(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F1313FC();
}

void DeviceDetails.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F131874();
  v12 = v11;
  sub_23F1217E8(&qword_256E00D90);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F15E498();
  sub_23F187A10();
  sub_23F15E564();
  if (v10)
  {
    sub_23F131BF4();
  }
  else
  {
    v14 = sub_23F268684();
    v16 = v15;
    sub_23F187A88();
    swift_bridgeObjectRetain();
    sub_23F2686B4();
    sub_23F1317A0();
    *(_QWORD *)v12 = v14;
    *(_QWORD *)(v12 + 8) = v16;
    *(_DWORD *)(v12 + 16) = a10;
    sub_23F131BF4();
    swift_bridgeObjectRelease();
  }
  sub_23F1313FC();
}

void sub_23F185B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  int vars8;

  DeviceDetails.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F185B78()
{
  DeviceDetails.encode(to:)();
}

uint64_t AuditToken.inner.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void static AuditToken.currentProcess.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_23F267E2C();
  sub_23F18AA98(v0, v1, v2, v3);
  sub_23F126078();
}

void _s16IntelligenceFlow10AuditTokenVyACSo13audit_token_tacfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = MEMORY[0x24266623C]();
  sub_23F18AA98(v0, v1, v2, v3);
  sub_23F126078();
}

uint64_t AuditToken.hash(into:)()
{
  return sub_23F267E44();
}

uint64_t static AuditToken.== infix(_:_:)()
{
  return sub_23F267E38();
}

uint64_t sub_23F185C0C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x72656E6E69 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F185C88()
{
  return 0x72656E6E69;
}

uint64_t sub_23F185CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F185C0C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F185CC8()
{
  sub_23F187AC4();
  return sub_23F2688B8();
}

uint64_t sub_23F185CF0()
{
  sub_23F187AC4();
  return sub_23F2688C4();
}

void AuditToken.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_23F1217E8(&qword_256E00DA0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F126058();
  sub_23F18AA80(a1);
  sub_23F187AC4();
  sub_23F18A998();
  sub_23F187B00();
  sub_23F18AD0C();
  sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F18AB98();
}

uint64_t AuditToken.hashValue.getter()
{
  sub_23F1317B8();
  sub_23F267E44();
  return sub_23F1318A0();
}

void AuditToken.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  sub_23F131874();
  sub_23F18AC78();
  sub_23F1217E8(&qword_256E00DB8);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F15E498();
  sub_23F187AC4();
  sub_23F15E564();
  if (!v1)
  {
    sub_23F187B3C();
    sub_23F18ABC0();
    sub_23F18AAF8();
    *v2 = v4;
    v2[1] = v5;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_23F17FDF4();
  sub_23F1313FC();
}

uint64_t sub_23F185EF8()
{
  sub_23F268834();
  sub_23F267E44();
  return sub_23F268864();
}

void sub_23F185F54()
{
  AuditToken.init(from:)();
}

void sub_23F185F68(_QWORD *a1)
{
  AuditToken.encode(to:)(a1);
}

double sub_23F185F7C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  _OWORD v5[2];

  AuditToken.init(rawValue:)(v5, *a1, a1[1], a1[2], a1[3]);
  result = *(double *)v5;
  v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(_BYTE *)(a2 + 32) = 0;
  return result;
}

uint64_t sub_23F185FC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  result = AuditToken.inner.getter();
  *(_QWORD *)a1 = result;
  *(_DWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 20) = v6;
  *(_DWORD *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 28) = v8;
  return result;
}

uint64_t ClientIdentityChain.identities.getter()
{
  return swift_bridgeObjectRetain();
}

void ClientIdentityChain.identities.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  sub_23F126078();
}

uint64_t (*ClientIdentityChain.identities.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::ClientIdentityChain __swiftcall ClientIdentityChain.init(identities:appendingCurrentProcess:)(Swift::OpaquePointer identities, Swift::Bool appendingCurrentProcess)
{
  char *v2;
  char *v3;
  char **v4;
  char **v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  IntelligenceFlow::ClientIdentityChain result;

  sub_23F125F3C();
  v3 = v2;
  v5 = v4;
  if ((v6 & 1) != 0)
  {
    v7 = sub_23F267E2C();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    sub_23F18ABD4();
    v14 = sub_23F18ACD0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_23F18ACC4(0, *((_QWORD *)v3 + 2) + 1);
    v16 = *((_QWORD *)v3 + 2);
    v15 = *((_QWORD *)v3 + 3);
    if (v16 >= v15 >> 1)
      v3 = sub_23F18ACC4((char *)(v15 > 1), v16 + 1);
    *((_QWORD *)v3 + 2) = v16 + 1;
    v17 = &v3[48 * v16];
    *((_QWORD *)v17 + 4) = v7;
    *((_QWORD *)v17 + 5) = v9;
    *((_QWORD *)v17 + 6) = v11;
    *((_QWORD *)v17 + 7) = v13;
    v17[64] = 0;
    *((_QWORD *)v17 + 9) = v14;
  }
  *v5 = v3;
  sub_23F125EFC();
  return result;
}

void static ClientIdentity.getIdentityForCurrentProcess()(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_23F267E2C();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_23F18ABD4();
  v9 = sub_23F18ACD0();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v9;
  sub_23F131ABC();
}

uint64_t sub_23F18613C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x697469746E656469 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F268798();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F1861CC()
{
  return 0x697469746E656469;
}

uint64_t sub_23F1861EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F18613C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F186214()
{
  sub_23F187B78();
  return sub_23F2688B8();
}

uint64_t sub_23F18623C()
{
  sub_23F187B78();
  return sub_23F2688C4();
}

void ClientIdentityChain.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_23F131874();
  v3 = v2;
  sub_23F1217E8(&qword_256E00DC8);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F15E50C();
  sub_23F18AA80(v3);
  sub_23F187B78();
  sub_23F18A998();
  sub_23F12636C();
  sub_23F15E778((uint64_t)&unk_256E00DE0);
  sub_23F18AD0C();
  sub_23F15E588(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F1313FC();
}

void ClientIdentityChain.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  sub_23F131874();
  a19 = v24;
  a20 = v25;
  sub_23F18AC78();
  sub_23F1217E8(&qword_256E00DF0);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F15E498();
  sub_23F187B78();
  sub_23F15E564();
  if (!v21)
  {
    sub_23F12636C();
    sub_23F15E778((uint64_t)&unk_256E00DF8);
    sub_23F18AD2C();
    sub_23F17FF08((uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    *v22 = a10;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v20);
  sub_23F1313FC();
}

#error "23F186430: call analysis failed (funcsize=5)"

void sub_23F18643C()
{
  ClientIdentityChain.encode(to:)();
}

void static MachIdentityToken.newTokenForCurrentProcess()(uint64_t *a1@<X8>)
{
  sub_23F18ABD4();
  *a1 = sub_23F18ACD0();
  sub_23F126078();
}

__n128 ClientIdentity.init(untrustedAuditToken:identityToken:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;

  v3 = *(_BYTE *)(a1 + 32);
  v4 = *a2;
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v6;
  *(_BYTE *)(a3 + 32) = v3;
  *(_QWORD *)(a3 + 40) = v4;
  return result;
}

__n128 ClientIdentity.untrustedAuditToken.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 32);
  result = *(__n128 *)v1;
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t ClientIdentity.identityToken.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_retain();
}

uint64_t sub_23F1864B0@<X0>(_QWORD *a1@<X8>)
{
  return ClientIdentity.identityToken.getter(a1);
}

void sub_23F1864F0(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_retain();
  ClientIdentity.identityToken.setter(&v1);
}

void ClientIdentity.identityToken.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  swift_release();
  *(_QWORD *)(v1 + 40) = v2;
  sub_23F126078();
}

void (*ClientIdentity.identityToken.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  a1[1] = v1;
  swift_retain();
  return sub_23F186584;
}

void sub_23F186584(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_23F131B08();
    *(_QWORD *)(v3 + 40) = v2;
    swift_release();
  }
  else
  {
    sub_23F131B08();
    *(_QWORD *)(v3 + 40) = v2;
    sub_23F12612C();
  }
}

uint64_t sub_23F1865D4(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000013 && a2 == 0x800000023F293D00 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469746E6564695FLL && a2 == 0xEE006E656B6F5479)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_23F1866E0()
{
  sub_23F1317B8();
  sub_23F268840();
  sub_23F1318A0();
  sub_23F1318E4();
}

uint64_t sub_23F186710(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7469746E6564695FLL;
  else
    return 0xD000000000000013;
}

uint64_t sub_23F186758()
{
  char *v0;

  return sub_23F186710(*v0);
}

uint64_t sub_23F186760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1865D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F186784()
{
  sub_23F187C2C();
  return sub_23F2688B8();
}

uint64_t sub_23F1867AC()
{
  sub_23F187C2C();
  return sub_23F2688C4();
}

void ClientIdentity.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F131874();
  v2 = v1;
  v4 = *(_QWORD *)(sub_23F1217E8(&qword_256E00E08) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F1319C8();
  sub_23F18AA80(v2);
  sub_23F187C2C();
  sub_23F18A998();
  sub_23F187C68();
  sub_23F268714();
  if (!v0)
  {
    sub_23F15EC34();
    sub_23F12636C();
    sub_23F187D4C((uint64_t)&unk_256E00E28);
    sub_23F1315CC();
  }
  sub_23F15E780(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F1313FC();
}

void ClientIdentity.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_23F131874();
  sub_23F18AC78();
  sub_23F1217E8(&qword_256E00E30);
  sub_23F15E53C();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F15E498();
  sub_23F187C2C();
  sub_23F15E564();
  if (v0)
  {
    sub_23F131BF4();
  }
  else
  {
    sub_23F187CA4();
    sub_23F268678();
    sub_23F12636C();
    sub_23F15EC34();
    sub_23F187D4C((uint64_t)&unk_256E00E40);
    sub_23F2686B4();
    sub_23F1317A0();
    swift_retain();
    *(_QWORD *)v1 = v3;
    *(_QWORD *)(v1 + 8) = v4;
    *(_QWORD *)(v1 + 16) = v5;
    *(_QWORD *)(v1 + 24) = v6;
    *(_BYTE *)(v1 + 32) = v7;
    *(_QWORD *)(v1 + 40) = v3;
    sub_23F131BF4();
    swift_release();
  }
  sub_23F1313FC();
}

void sub_23F186A94()
{
  ClientIdentity.init(from:)();
}

void sub_23F186AA8()
{
  ClientIdentity.encode(to:)();
}

uint64_t MachIdentityToken.inner.getter()
{
  return swift_retain();
}

void MachIdentityToken.init(copyingToken:)(uint64_t *a1@<X8>)
{
  sub_23F18ABD4();
  sub_23F14F4D0();
  *a1 = sub_23F267E80();
  sub_23F12612C();
}

void MachIdentityToken.init(xpcObject:)(uint64_t *a1@<X8>)
{
  sub_23F18ABD4();
  sub_23F14F4D0();
  *a1 = sub_23F267E8C();
  sub_23F12612C();
}

uint64_t sub_23F186B3C()
{
  void *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  xpc_object_t empty;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v9;

  result = sub_23F18AD9C();
  v3 = *(_QWORD *)(v1 + *(int *)(result + 44));
  if (v3)
  {
    swift_bridgeObjectRetain();
    empty = xpc_array_create_empty();
    v5 = sub_23F1813E0(v3);
    swift_bridgeObjectRelease();
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v7 = (_QWORD *)(v5 + 32);
      do
      {
        if (*v7++)
        {
          swift_retain();
          v9 = (void *)sub_23F267E98();
        }
        else
        {
          v9 = xpc_null_create();
        }
        xpc_array_append_value(empty, v9);
        sub_23F131B08();
        swift_unknownObjectRelease();
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(v0, "identity_token", empty);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_23F186C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  _s16IntelligenceFlow17AnySessionMessageVwxx_0(a1);
  sub_23F18ABAC();
  v3 = sub_23F26845C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a2, v3);
  return sub_23F18ABAC();
}

uint64_t sub_23F186C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F186C20(a1, a2);
}

uint64_t sub_23F186C94(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const void *v15;
  size_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    sub_23F18AB70();
    if (v7 != v8)
    {
      sub_23F18AD38();
      if (v7)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_23F18AB60();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (!v10)
  {
    v11 = MEMORY[0x24BEE4AF8];
    goto LABEL_18;
  }
  v11 = sub_23F1217E8(&qword_256E011C0);
  v12 = *(_QWORD *)(type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0) - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = (const void *)swift_allocObject();
  v16 = sub_23F18ACF8(v15);
  if (!v13 || (v16 - v14 == 0x8000000000000000 ? (v17 = v13 == -1) : (v17 = 0), v17))
  {
LABEL_23:
    sub_23F131B3C();
    result = sub_23F18ACD8();
    __break(1u);
    return result;
  }
  *(_QWORD *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = 2 * ((uint64_t)(v16 - v14) / v13);
LABEL_18:
  type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
  sub_23F18ACA4();
  if ((a1 & 1) != 0)
  {
    sub_23F2582D0(a4 + v18, v9);
    sub_23F18AAEC();
  }
  else
  {
    v19 = sub_23F18AC60();
    sub_23F187238(v19, v20, v21, v22);
  }
  return v11;
}

void sub_23F186E10(char a1, int64_t a2, char a3, uint64_t a4)
{
  int64_t v6;
  char v7;
  char v8;
  int64_t v9;
  int64_t v10;
  const void *v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  if ((a3 & 1) != 0)
  {
    sub_23F18AB70();
    if (v7 != v8)
    {
      sub_23F18AD38();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_23F18AB60();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    sub_23F1217E8(&qword_254344658);
    v11 = (const void *)sub_23F14F4D0();
    v12 = sub_23F18ACF8(v11);
    *(_QWORD *)(v10 + 16) = v9;
    *(_QWORD *)(v10 + 24) = 2 * v12 - 64;
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  if ((a1 & 1) != 0)
  {
    sub_23F2583B8((char *)(a4 + 32), v9, (char *)(v10 + 32));
    sub_23F18AAEC();
  }
  else
  {
    v13 = sub_23F18AC60();
    sub_23F187358(v13, v14, v15, v16);
  }
  sub_23F12612C();
}

char *sub_23F186EBC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F1217E8(&qword_256E011B8);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  if ((v5 & 1) != 0)
  {
    sub_23F258410((char *)(a4 + 32), v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F187444(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

uint64_t sub_23F186FB0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_23F186FE8(a1, a2, a3, a4, &qword_256DFE6D0, &qword_256DFE560, (void (*)(uint64_t, uint64_t, unint64_t))sub_23F2581F0);
}

uint64_t sub_23F186FCC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_23F186FE8(a1, a2, a3, a4, &qword_256E01190, &qword_256E01198, (void (*)(uint64_t, uint64_t, unint64_t))sub_23F258470);
}

uint64_t sub_23F186FE8(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t *a6, void (*a7)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  size_t v20;
  BOOL v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    sub_23F18AB70();
    if (v12 != v13)
    {
      sub_23F18AD38();
      if (v12)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_23F18AB60();
    }
  }
  else
  {
    v11 = a2;
  }
  v14 = *(_QWORD *)(a4 + 16);
  if (v11 <= v14)
    v15 = *(_QWORD *)(a4 + 16);
  else
    v15 = v11;
  if (!v15)
  {
    v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_18;
  }
  sub_23F1217E8(a5);
  v16 = *(_QWORD *)(sub_23F1217E8(a6) - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = (_QWORD *)swift_allocObject();
  v20 = j__malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (v21 = v17 == -1) : (v21 = 0), v21))
  {
LABEL_23:
    sub_23F131B3C();
    result = sub_23F18ACD8();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_18:
  sub_23F1217E8(a6);
  sub_23F18ACA4();
  v23 = (unint64_t)v19 + v22;
  if ((a1 & 1) != 0)
  {
    a7(a4 + v22, v14, v23);
    sub_23F18AAEC();
  }
  else
  {
    sub_23F187540(0, v14, v23, a4, a6);
  }
  return (uint64_t)v19;
}

void sub_23F187180(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  const void *v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  if ((a3 & 1) != 0)
  {
    sub_23F18AB70();
    if (v7 != v8)
    {
      sub_23F18AD38();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_23F18AB60();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    sub_23F1217E8(&qword_256E011B0);
    v11 = (const void *)sub_23F14F4D0();
    v12 = sub_23F18ACF8(v11);
    *(_QWORD *)(v10 + 16) = v9;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v12 - 32) / 8);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  if ((a1 & 1) != 0)
  {
    sub_23F25846C(a4 + 32, v9, v10 + 32);
    sub_23F18AAEC();
  }
  else
  {
    v13 = sub_23F18AC60();
    sub_23F187648(v13, v14, v15, v16);
  }
  sub_23F12612C();
}

uint64_t sub_23F187238(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  result = sub_23F268624();
  __break(1u);
  return result;
}

char *sub_23F187358(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_23F268624();
  __break(1u);
  return result;
}

uint64_t sub_23F187444(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F268624();
  __break(1u);
  return result;
}

uint64_t sub_23F187540(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(sub_23F1217E8(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v14;
    }
  }
  sub_23F131B3C();
  result = sub_23F268624();
  __break(1u);
  return result;
}

uint64_t sub_23F187648(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F268624();
  __break(1u);
  return result;
}

unint64_t sub_23F18773C()
{
  unint64_t result;

  result = qword_256E00CA0;
  if (!qword_256E00CA0)
  {
    result = MEMORY[0x242667160](&unk_23F271C68, &type metadata for SessionConfiguration.ParticipantSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00CA0);
  }
  return result;
}

unint64_t sub_23F187778()
{
  unint64_t result;

  result = qword_256E00CA8;
  if (!qword_256E00CA8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionConfiguration.ParticipantSettings.SemanticPreference, &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference);
    atomic_store(result, (unint64_t *)&qword_256E00CA8);
  }
  return result;
}

unint64_t sub_23F1877B4()
{
  unint64_t result;

  result = qword_256E00CB8;
  if (!qword_256E00CB8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionConfiguration.ParticipantSettings.SemanticPreference, &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference);
    atomic_store(result, (unint64_t *)&qword_256E00CB8);
  }
  return result;
}

unint64_t sub_23F1877F0()
{
  unint64_t result;

  result = qword_256E00CD0;
  if (!qword_256E00CD0)
  {
    result = MEMORY[0x242667160](&unk_23F271C18, &type metadata for LocaleSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00CD0);
  }
  return result;
}

void sub_23F18782C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_23F126078();
}

unint64_t sub_23F18786C()
{
  unint64_t result;

  result = qword_256E00D10;
  if (!qword_256E00D10)
  {
    result = MEMORY[0x242667160](&unk_23F271BC8, &type metadata for DebuggerSettings.DebuggerMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00D10);
  }
  return result;
}

unint64_t sub_23F1878A8()
{
  unint64_t result;

  result = qword_256E00D18;
  if (!qword_256E00D18)
  {
    result = MEMORY[0x242667160](&unk_23F271B78, &type metadata for DebuggerSettings.DebuggerMode.UncheckedDebuggingAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00D18);
  }
  return result;
}

unint64_t sub_23F1878E4()
{
  unint64_t result;

  result = qword_256E00D20;
  if (!qword_256E00D20)
  {
    result = MEMORY[0x242667160](&unk_23F271B28, &type metadata for DebuggerSettings.DebuggerMode.DebuggingAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00D20);
  }
  return result;
}

unint64_t sub_23F187920()
{
  unint64_t result;

  result = qword_256E00D28;
  if (!qword_256E00D28)
  {
    result = MEMORY[0x242667160](&unk_23F271AD8, &type metadata for DebuggerSettings.DebuggerMode.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00D28);
  }
  return result;
}

unint64_t sub_23F18795C()
{
  unint64_t result;

  result = qword_256E00D58;
  if (!qword_256E00D58)
  {
    result = MEMORY[0x242667160](&unk_23F271A88, &type metadata for DebuggerSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00D58);
  }
  return result;
}

unint64_t sub_23F187998()
{
  unint64_t result;

  result = qword_256E00D60;
  if (!qword_256E00D60)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for DebuggerSettings.DebuggerMode, &type metadata for DebuggerSettings.DebuggerMode);
    atomic_store(result, (unint64_t *)&qword_256E00D60);
  }
  return result;
}

unint64_t sub_23F1879D4()
{
  unint64_t result;

  result = qword_256E00D70;
  if (!qword_256E00D70)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for DebuggerSettings.DebuggerMode, &type metadata for DebuggerSettings.DebuggerMode);
    atomic_store(result, (unint64_t *)&qword_256E00D70);
  }
  return result;
}

unint64_t sub_23F187A10()
{
  unint64_t result;

  result = qword_256E00D80;
  if (!qword_256E00D80)
  {
    result = MEMORY[0x242667160](&unk_23F271A38, &type metadata for DeviceDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00D80);
  }
  return result;
}

unint64_t sub_23F187A4C()
{
  unint64_t result;

  result = qword_256E00D88;
  if (!qword_256E00D88)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for DeviceDetails.DeviceType, &type metadata for DeviceDetails.DeviceType);
    atomic_store(result, (unint64_t *)&qword_256E00D88);
  }
  return result;
}

unint64_t sub_23F187A88()
{
  unint64_t result;

  result = qword_256E00D98;
  if (!qword_256E00D98)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for DeviceDetails.DeviceType, &type metadata for DeviceDetails.DeviceType);
    atomic_store(result, (unint64_t *)&qword_256E00D98);
  }
  return result;
}

unint64_t sub_23F187AC4()
{
  unint64_t result;

  result = qword_256E00DA8;
  if (!qword_256E00DA8)
  {
    result = MEMORY[0x242667160](&unk_23F2719E8, &type metadata for AuditToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00DA8);
  }
  return result;
}

unint64_t sub_23F187B00()
{
  unint64_t result;

  result = qword_256E00DB0;
  if (!qword_256E00DB0)
  {
    result = MEMORY[0x242667160](MEMORY[0x24BE79758], MEMORY[0x24BE79750]);
    atomic_store(result, (unint64_t *)&qword_256E00DB0);
  }
  return result;
}

unint64_t sub_23F187B3C()
{
  unint64_t result;

  result = qword_256E00DC0;
  if (!qword_256E00DC0)
  {
    result = MEMORY[0x242667160](MEMORY[0x24BE79760], MEMORY[0x24BE79750]);
    atomic_store(result, (unint64_t *)&qword_256E00DC0);
  }
  return result;
}

unint64_t sub_23F187B78()
{
  unint64_t result;

  result = qword_256E00DD0;
  if (!qword_256E00DD0)
  {
    result = MEMORY[0x242667160](&unk_23F271998, &type metadata for ClientIdentityChain.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00DD0);
  }
  return result;
}

unint64_t sub_23F187BB4()
{
  unint64_t result;

  result = qword_256E00DE8;
  if (!qword_256E00DE8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ClientIdentity, &type metadata for ClientIdentity);
    atomic_store(result, (unint64_t *)&qword_256E00DE8);
  }
  return result;
}

unint64_t sub_23F187BF0()
{
  unint64_t result;

  result = qword_256E00E00;
  if (!qword_256E00E00)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for ClientIdentity, &type metadata for ClientIdentity);
    atomic_store(result, (unint64_t *)&qword_256E00E00);
  }
  return result;
}

unint64_t sub_23F187C2C()
{
  unint64_t result;

  result = qword_256E00E10;
  if (!qword_256E00E10)
  {
    result = MEMORY[0x242667160](&unk_23F271948, &type metadata for ClientIdentity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E00E10);
  }
  return result;
}

unint64_t sub_23F187C68()
{
  unint64_t result;

  result = qword_256E00E18;
  if (!qword_256E00E18)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AuditToken, &type metadata for AuditToken);
    atomic_store(result, (unint64_t *)&qword_256E00E18);
  }
  return result;
}

unint64_t sub_23F187CA4()
{
  unint64_t result;

  result = qword_256E00E38;
  if (!qword_256E00E38)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AuditToken, &type metadata for AuditToken);
    atomic_store(result, (unint64_t *)&qword_256E00E38);
  }
  return result;
}

unint64_t sub_23F187CE4()
{
  unint64_t result;

  result = qword_2543444B8;
  if (!qword_2543444B8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionConfiguration.PlannerType, &type metadata for SessionConfiguration.PlannerType);
    atomic_store(result, (unint64_t *)&qword_2543444B8);
  }
  return result;
}

void sub_23F187D20()
{
  sub_23F187D4C((uint64_t)&unk_256E00E48);
}

void sub_23F187D4C(uint64_t a1)
{
  uint64_t *v1;

  if (!sub_23F131AF0(a1))
  {
    sub_23F125540(v1);
    sub_23F18AD90();
  }
  sub_23F126078();
}

unint64_t sub_23F187D80()
{
  unint64_t result;

  result = qword_256E00E58;
  if (!qword_256E00E58)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionConfiguration.ParticipantSettings.SemanticPreference, &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference);
    atomic_store(result, (unint64_t *)&qword_256E00E58);
  }
  return result;
}

void sub_23F187DBC()
{
  sub_23F182258((uint64_t)&unk_256E00E60);
}

unint64_t sub_23F187DEC()
{
  unint64_t result;

  result = qword_256E00E68;
  if (!qword_256E00E68)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for DebuggerSettings.DebuggerMode, &type metadata for DebuggerSettings.DebuggerMode);
    atomic_store(result, (unint64_t *)&qword_256E00E68);
  }
  return result;
}

unint64_t sub_23F187E2C()
{
  unint64_t result;

  result = qword_256E00E70;
  if (!qword_256E00E70)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for DeviceDetails.DeviceType, &type metadata for DeviceDetails.DeviceType);
    atomic_store(result, (unint64_t *)&qword_256E00E70);
  }
  return result;
}

unint64_t sub_23F187E6C()
{
  unint64_t result;

  result = qword_256E00E78;
  if (!qword_256E00E78)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for AuditToken, &type metadata for AuditToken);
    atomic_store(result, (unint64_t *)&qword_256E00E78);
  }
  return result;
}

void sub_23F187EAC(unsigned int *a1)
{
  DeviceDetails.DeviceType.rawValue.setter(*a1);
  sub_23F126078();
}

_QWORD *initializeBufferWithCopyOfBuffer for SessionConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = a3[8];
    v9 = (char *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for LocaleSettings(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F1217E8(&qword_256E00BA8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = sub_23F267DA8();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      v15(v9, v10, v14);
      v15(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v14);
      v15(&v9[*(int *)(v11 + 24)], &v10[*(int *)(v11 + 24)], v14);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v16 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v17 = (char *)v4 + v16;
    v18 = (uint64_t)a2 + v16;
    *(_WORD *)v17 = *(_WORD *)v18;
    v17[2] = *(_BYTE *)(v18 + 2);
    v19 = a3[12];
    *(_QWORD *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    v20 = (char *)v4 + v19;
    v21 = (uint64_t)a2 + v19;
    v22 = *(_QWORD *)(v21 + 8);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    *((_DWORD *)v20 + 4) = *(_DWORD *)(v21 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SessionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for LocaleSettings(0);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, 1, v5))
  {
    v6 = sub_23F267DA8();
    v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
    v7(v4, v6);
    v7(v4 + *(int *)(v5 + 20), v6);
    v7(v4 + *(int *)(v5 + 24), v6);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = a3[8];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for LocaleSettings(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F1217E8(&qword_256E00BA8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_23F267DA8();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v8, v9, v12);
    v13(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v12);
    v13(&v8[*(int *)(v10 + 24)], &v9[*(int *)(v10 + 24)], v12);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v14 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_WORD *)v15 = *(_WORD *)v16;
  *(_BYTE *)(v15 + 2) = *(_BYTE *)(v16 + 2);
  v17 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  *(_DWORD *)(v18 + 16) = *(_DWORD *)(v19 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 *v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[8];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for LocaleSettings(0);
  v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      v23 = sub_23F267DA8();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24);
      v24(v7, v8, v23);
      v24(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v23);
      v24(&v7[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v23);
      goto LABEL_7;
    }
    sub_23F12E3EC((uint64_t)v7, type metadata accessor for LocaleSettings);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v14 = sub_23F1217E8(&qword_256E00BA8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v12 = sub_23F267DA8();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(v7, v8, v12);
  v13(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v12);
  v13(&v7[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v12);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v15 = a3[10];
  v16 = a1 + v15;
  v17 = (__int16 *)(a2 + v15);
  v18 = *v17;
  *(_BYTE *)(v16 + 2) = *((_BYTE *)v17 + 2);
  *(_WORD *)v16 = v18;
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[12];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)(a2 + v19);
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v20 + 16) = *(_DWORD *)(v21 + 16);
  return a1;
}

uint64_t initializeWithTake for SessionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[8];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for LocaleSettings(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F1217E8(&qword_256E00BA8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = sub_23F267DA8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
    v12(v7, v8, v11);
    v12(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v11);
    v12(&v7[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v11);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v13 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_WORD *)v14 = *(_WORD *)v15;
  *(_BYTE *)(v14 + 2) = *(_BYTE *)(v15 + 2);
  v16 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_DWORD *)(v17 + 16) = *(_DWORD *)(v18 + 16);
  return a1;
}

uint64_t assignWithTake for SessionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[8];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for LocaleSettings(0);
  v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      v23 = sub_23F267DA8();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40);
      v24(v7, v8, v23);
      v24(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v23);
      v24(&v7[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v23);
      goto LABEL_7;
    }
    sub_23F12E3EC((uint64_t)v7, type metadata accessor for LocaleSettings);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v14 = sub_23F1217E8(&qword_256E00BA8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v12 = sub_23F267DA8();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v7, v8, v12);
  v13(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v12);
  v13(&v7[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v12);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v15 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_WORD *)v16 = *(_WORD *)v17;
  *(_BYTE *)(v16 + 2) = *(_BYTE *)(v17 + 2);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  v18 = a3[12];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(v20 + 8);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = v21;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v19 + 16) = *(_DWORD *)(v20 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F188810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 2147483646)
  {
    sub_23F12612C();
  }
  else
  {
    v6 = sub_23F1217E8(&qword_256E00BA8);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1 + *(int *)(a3 + 32), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for SessionConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F188898(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 2147483646)
  {
    *(_QWORD *)(a1 + 8) = a2;
    sub_23F12612C();
  }
  else
  {
    v7 = sub_23F1217E8(&qword_256E00BA8);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1 + *(int *)(a4 + 32), a2, a2, v7);
  }
}

void sub_23F188900()
{
  unint64_t v0;

  sub_23F1889A8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23F1889A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E00EE8[0])
  {
    type metadata accessor for LocaleSettings(255);
    v0 = sub_23F26845C();
    if (!v1)
      atomic_store(v0, qword_256E00EE8);
  }
}

uint64_t storeEnumTagSinglePayload for SessionConfiguration.PlannerType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F188A48 + 4 * byte_23F270562[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F188A7C + 4 * byte_23F27055D[v4]))();
}

uint64_t sub_23F188A7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F188A84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F188A8CLL);
  return result;
}

uint64_t sub_23F188A98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F188AA0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23F188AA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F188AAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SessionConfiguration.PlannerType()
{
  sub_23F131844();
}

void type metadata accessor for SessionConfiguration.ParticipantSettings()
{
  sub_23F131844();
}

void type metadata accessor for SessionConfiguration.ParticipantSettings.SemanticPreference()
{
  sub_23F131844();
}

uint64_t *initializeBufferWithCopyOfBuffer for LocaleSettings(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267DA8();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 24)), (uint64_t *)((char *)a2 + *(int *)(a3 + 24)), v7);
  }
  return a1;
}

uint64_t destroy for LocaleSettings(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_23F267DA8();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  v6(a1 + *(int *)(a2 + 20), v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 24), v4);
}

uint64_t initializeWithCopy for LocaleSettings(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F267DA8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t assignWithCopy for LocaleSettings(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F267DA8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t initializeWithTake for LocaleSettings(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F267DA8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t assignWithTake for LocaleSettings(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F267DA8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocaleSettings()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F188E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F18A9F0();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LocaleSettings()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F188E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F18A9F0();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, a2, a2, v4);
}

uint64_t sub_23F188E98()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F267DA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for DebuggerSettings(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DebuggerSettings(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  unsigned int v4;
  BOOL v5;

  if (!a2)
  {
    v3 = -1;
    return (v3 + 1);
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = a1[3];
      if (a1[3])
        goto LABEL_5;
    }
    else
    {
      v2 = *(unsigned __int16 *)(a1 + 3);
      if (*(_WORD *)(a1 + 3))
      {
LABEL_5:
        v3 = (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776962;
        return (v3 + 1);
      }
    }
  }
  v4 = a1[1];
  v5 = v4 >= 2;
  v3 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for DebuggerSettings(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)(result + 1) = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

void type metadata accessor for DebuggerSettings()
{
  sub_23F131844();
}

void type metadata accessor for DebuggerSettings.DebuggerMode()
{
  sub_23F131844();
}

void sub_23F18903C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_23F126078();
}

uint64_t assignWithCopy for DeviceDetails(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for DeviceDetails(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DeviceDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceDetails(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 20))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 20) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 20) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for DeviceDetails()
{
  sub_23F131844();
}

void type metadata accessor for DeviceDetails.DeviceType()
{
  sub_23F131844();
}

void type metadata accessor for AuditToken()
{
  sub_23F131844();
}

void type metadata accessor for ClientIdentityChain()
{
  sub_23F131844();
}

uint64_t destroy for ClientIdentity()
{
  return swift_release();
}

uint64_t initializeWithCopy for ClientIdentity(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ClientIdentity(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  __int128 v4;

  v3 = *a2;
  v4 = a2[1];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ClientIdentity(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientIdentity(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 40);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientIdentity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

void type metadata accessor for ClientIdentity()
{
  sub_23F131844();
}

void type metadata accessor for MachIdentityToken()
{
  sub_23F131844();
}

uint64_t sub_23F189358()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23F189360()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F26845C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23F1893CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_23F18949C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  result = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return result;
}

void *sub_23F1894E8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_23F189578(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  size_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v5);
  v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

void *sub_23F189650(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_23F1896E0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  size_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v5);
  v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_23F1897B8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v15;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = v6 - 1;
  if (!(_DWORD)v6)
    v7 = 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v8;
  if (!a2)
    return 0;
  v9 = a2 - v7;
  if (a2 > v7)
  {
    v10 = 8 * v8;
    if (v8 > 3)
      goto LABEL_8;
    v12 = ((v9 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v8);
      if (v11)
        goto LABEL_15;
    }
    else
    {
      if (v12 <= 0xFF)
      {
        if (v12 < 2)
          goto LABEL_22;
LABEL_8:
        v11 = *(unsigned __int8 *)(a1 + v8);
        if (!*(_BYTE *)(a1 + v8))
          goto LABEL_22;
LABEL_15:
        v13 = (v11 - 1) << v10;
        if (v8 > 3)
          v13 = 0;
        if ((_DWORD)v8)
        {
          if (v8 > 3)
            LODWORD(v8) = 4;
          __asm { BR              X12 }
        }
        return v7 + v13 + 1;
      }
      v11 = *(unsigned __int16 *)(a1 + v8);
      if (*(_WORD *)(a1 + v8))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v6 < 2)
    return 0;
  v15 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, v6, v4);
  if (v15 >= 2)
    return v15 - 1;
  else
    return 0;
}

void sub_23F1898E4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  size_t v11;
  char v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (v8)
    v11 = v10;
  else
    v11 = v10 + 1;
  v12 = 8 * v11;
  v13 = a3 >= v9;
  v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        v6 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v15 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v9 < a2)
  {
    v16 = ~v9 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v17 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v11 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_23F189A78()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_23F189A80()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t type metadata accessor for CodableIgnored(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F126D88(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableIgnored);
}

ValueMetadata *type metadata accessor for ClientIdentity.CodingKeys()
{
  return &type metadata for ClientIdentity.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientIdentityChain.CodingKeys()
{
  return &type metadata for ClientIdentityChain.CodingKeys;
}

ValueMetadata *type metadata accessor for AuditToken.CodingKeys()
{
  return &type metadata for AuditToken.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceDetails.CodingKeys()
{
  return &type metadata for DeviceDetails.CodingKeys;
}

ValueMetadata *type metadata accessor for DebuggerSettings.CodingKeys()
{
  return &type metadata for DebuggerSettings.CodingKeys;
}

ValueMetadata *type metadata accessor for DebuggerSettings.DebuggerMode.CodingKeys()
{
  return &type metadata for DebuggerSettings.DebuggerMode.CodingKeys;
}

ValueMetadata *type metadata accessor for DebuggerSettings.DebuggerMode.NoneCodingKeys()
{
  return &type metadata for DebuggerSettings.DebuggerMode.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for DebuggerSettings.DebuggerMode.DebuggingAllowedCodingKeys()
{
  return &type metadata for DebuggerSettings.DebuggerMode.DebuggingAllowedCodingKeys;
}

ValueMetadata *type metadata accessor for DebuggerSettings.DebuggerMode.UncheckedDebuggingAllowedCodingKeys()
{
  return &type metadata for DebuggerSettings.DebuggerMode.UncheckedDebuggingAllowedCodingKeys;
}

uint64_t _s16IntelligenceFlow16DebuggerSettingsV12DebuggerModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F189B90 + 4 * byte_23F27057A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F189BC4 + 4 * byte_23F270575[v4]))();
}

uint64_t sub_23F189BC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F189BCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F189BD4);
  return result;
}

uint64_t sub_23F189BE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F189BE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F189BEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F189BF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocaleSettings.CodingKeys()
{
  return &type metadata for LocaleSettings.CodingKeys;
}

uint64_t _s16IntelligenceFlow19ClientIdentityChainV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F189C50 + 4 * byte_23F27057F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F189C70 + 4 * byte_23F270584[v4]))();
}

_BYTE *sub_23F189C50(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F189C70(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F189C78(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F189C80(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F189C88(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F189C90(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SessionConfiguration.ParticipantSettings.CodingKeys()
{
  return &type metadata for SessionConfiguration.ParticipantSettings.CodingKeys;
}

uint64_t _s16IntelligenceFlow20SessionConfigurationV19ParticipantSettingsV18SemanticPreferenceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F189CF8 + 4 * byte_23F27058E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F189D2C + 4 * byte_23F270589[v4]))();
}

uint64_t sub_23F189D2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F189D34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F189D3CLL);
  return result;
}

uint64_t sub_23F189D48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F189D50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F189D54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F189D5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionConfiguration.ParticipantSettings.SemanticPreference.CodingKeys()
{
  return &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionConfiguration.ParticipantSettings.SemanticPreference.StandardCodingKeys()
{
  return &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.StandardCodingKeys;
}

ValueMetadata *type metadata accessor for SessionConfiguration.ParticipantSettings.SemanticPreference.PlannerOnlyCodingKeys()
{
  return &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.PlannerOnlyCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SessionConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23F189DE4 + 4 * byte_23F270598[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23F189E18 + 4 * byte_23F270593[v4]))();
}

uint64_t sub_23F189E18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F189E20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F189E28);
  return result;
}

uint64_t sub_23F189E34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F189E3CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23F189E40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F189E48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionConfiguration.CodingKeys()
{
  return &type metadata for SessionConfiguration.CodingKeys;
}

unint64_t sub_23F189E68()
{
  unint64_t result;

  result = qword_256E01050;
  if (!qword_256E01050)
  {
    result = MEMORY[0x242667160](&unk_23F2710C8, &type metadata for SessionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01050);
  }
  return result;
}

unint64_t sub_23F189EA8()
{
  unint64_t result;

  result = qword_256E01058;
  if (!qword_256E01058)
  {
    result = MEMORY[0x242667160](&unk_23F271220, &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01058);
  }
  return result;
}

unint64_t sub_23F189EE8()
{
  unint64_t result;

  result = qword_256E01060;
  if (!qword_256E01060)
  {
    result = MEMORY[0x242667160](&unk_23F2712D8, &type metadata for SessionConfiguration.ParticipantSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01060);
  }
  return result;
}

unint64_t sub_23F189F28()
{
  unint64_t result;

  result = qword_256E01068;
  if (!qword_256E01068)
  {
    result = MEMORY[0x242667160](&unk_23F271390, &type metadata for LocaleSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01068);
  }
  return result;
}

unint64_t sub_23F189F68()
{
  unint64_t result;

  result = qword_256E01070;
  if (!qword_256E01070)
  {
    result = MEMORY[0x242667160](&unk_23F271538, &type metadata for DebuggerSettings.DebuggerMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01070);
  }
  return result;
}

unint64_t sub_23F189FA8()
{
  unint64_t result;

  result = qword_256E01078;
  if (!qword_256E01078)
  {
    result = MEMORY[0x242667160](&unk_23F2715F0, &type metadata for DebuggerSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01078);
  }
  return result;
}

unint64_t sub_23F189FE8()
{
  unint64_t result;

  result = qword_256E01080;
  if (!qword_256E01080)
  {
    result = MEMORY[0x242667160](&unk_23F2716A8, &type metadata for DeviceDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01080);
  }
  return result;
}

unint64_t sub_23F18A028()
{
  unint64_t result;

  result = qword_256E01088;
  if (!qword_256E01088)
  {
    result = MEMORY[0x242667160](&unk_23F271760, &type metadata for AuditToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01088);
  }
  return result;
}

unint64_t sub_23F18A068()
{
  unint64_t result;

  result = qword_256E01090;
  if (!qword_256E01090)
  {
    result = MEMORY[0x242667160](&unk_23F271818, &type metadata for ClientIdentityChain.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01090);
  }
  return result;
}

unint64_t sub_23F18A0A8()
{
  unint64_t result;

  result = qword_256E01098;
  if (!qword_256E01098)
  {
    result = MEMORY[0x242667160](&unk_23F2718D0, &type metadata for ClientIdentity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01098);
  }
  return result;
}

unint64_t sub_23F18A0E8()
{
  unint64_t result;

  result = qword_256E010A0;
  if (!qword_256E010A0)
  {
    result = MEMORY[0x242667160](&unk_23F271840, &type metadata for ClientIdentity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E010A0);
  }
  return result;
}

unint64_t sub_23F18A128()
{
  unint64_t result;

  result = qword_256E010A8;
  if (!qword_256E010A8)
  {
    result = MEMORY[0x242667160](&unk_23F271868, &type metadata for ClientIdentity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E010A8);
  }
  return result;
}

unint64_t sub_23F18A168()
{
  unint64_t result;

  result = qword_256E010B0;
  if (!qword_256E010B0)
  {
    result = MEMORY[0x242667160](&unk_23F271788, &type metadata for ClientIdentityChain.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E010B0);
  }
  return result;
}

unint64_t sub_23F18A1A8()
{
  unint64_t result;

  result = qword_256E010B8;
  if (!qword_256E010B8)
  {
    result = MEMORY[0x242667160](&unk_23F2717B0, &type metadata for ClientIdentityChain.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E010B8);
  }
  return result;
}

unint64_t sub_23F18A1E8()
{
  unint64_t result;

  result = qword_256E010C0;
  if (!qword_256E010C0)
  {
    result = MEMORY[0x242667160](&unk_23F2716D0, &type metadata for AuditToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E010C0);
  }
  return result;
}

unint64_t sub_23F18A228()
{
  unint64_t result;

  result = qword_256E010C8;
  if (!qword_256E010C8)
  {
    result = MEMORY[0x242667160](&unk_23F2716F8, &type metadata for AuditToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E010C8);
  }
  return result;
}

unint64_t sub_23F18A268()
{
  unint64_t result;

  result = qword_256E010D0;
  if (!qword_256E010D0)
  {
    result = MEMORY[0x242667160](&unk_23F271618, &type metadata for DeviceDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E010D0);
  }
  return result;
}

unint64_t sub_23F18A2A8()
{
  unint64_t result;

  result = qword_256E010D8;
  if (!qword_256E010D8)
  {
    result = MEMORY[0x242667160](&unk_23F271640, &type metadata for DeviceDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E010D8);
  }
  return result;
}

unint64_t sub_23F18A2E8()
{
  unint64_t result;

  result = qword_256E010E0;
  if (!qword_256E010E0)
  {
    result = MEMORY[0x242667160](&unk_23F271560, &type metadata for DebuggerSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E010E0);
  }
  return result;
}

unint64_t sub_23F18A328()
{
  unint64_t result;

  result = qword_256E010E8;
  if (!qword_256E010E8)
  {
    result = MEMORY[0x242667160](&unk_23F271588, &type metadata for DebuggerSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E010E8);
  }
  return result;
}

unint64_t sub_23F18A368()
{
  unint64_t result;

  result = qword_256E010F0;
  if (!qword_256E010F0)
  {
    result = MEMORY[0x242667160](&unk_23F271458, &type metadata for DebuggerSettings.DebuggerMode.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E010F0);
  }
  return result;
}

unint64_t sub_23F18A3A8()
{
  unint64_t result;

  result = qword_256E010F8;
  if (!qword_256E010F8)
  {
    result = MEMORY[0x242667160](&unk_23F271480, &type metadata for DebuggerSettings.DebuggerMode.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E010F8);
  }
  return result;
}

unint64_t sub_23F18A3E8()
{
  unint64_t result;

  result = qword_256E01100;
  if (!qword_256E01100)
  {
    result = MEMORY[0x242667160](&unk_23F271408, &type metadata for DebuggerSettings.DebuggerMode.DebuggingAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01100);
  }
  return result;
}

unint64_t sub_23F18A428()
{
  unint64_t result;

  result = qword_256E01108;
  if (!qword_256E01108)
  {
    result = MEMORY[0x242667160](&unk_23F271430, &type metadata for DebuggerSettings.DebuggerMode.DebuggingAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01108);
  }
  return result;
}

unint64_t sub_23F18A468()
{
  unint64_t result;

  result = qword_256E01110;
  if (!qword_256E01110)
  {
    result = MEMORY[0x242667160](&unk_23F2713B8, &type metadata for DebuggerSettings.DebuggerMode.UncheckedDebuggingAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01110);
  }
  return result;
}

unint64_t sub_23F18A4A8()
{
  unint64_t result;

  result = qword_256E01118;
  if (!qword_256E01118)
  {
    result = MEMORY[0x242667160](&unk_23F2713E0, &type metadata for DebuggerSettings.DebuggerMode.UncheckedDebuggingAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01118);
  }
  return result;
}

unint64_t sub_23F18A4E8()
{
  unint64_t result;

  result = qword_256E01120;
  if (!qword_256E01120)
  {
    result = MEMORY[0x242667160](&unk_23F2714A8, &type metadata for DebuggerSettings.DebuggerMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01120);
  }
  return result;
}

unint64_t sub_23F18A528()
{
  unint64_t result;

  result = qword_256E01128;
  if (!qword_256E01128)
  {
    result = MEMORY[0x242667160](&unk_23F2714D0, &type metadata for DebuggerSettings.DebuggerMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01128);
  }
  return result;
}

unint64_t sub_23F18A568()
{
  unint64_t result;

  result = qword_256E01130;
  if (!qword_256E01130)
  {
    result = MEMORY[0x242667160](&unk_23F271300, &type metadata for LocaleSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01130);
  }
  return result;
}

unint64_t sub_23F18A5A8()
{
  unint64_t result;

  result = qword_256E01138;
  if (!qword_256E01138)
  {
    result = MEMORY[0x242667160](&unk_23F271328, &type metadata for LocaleSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01138);
  }
  return result;
}

unint64_t sub_23F18A5E8()
{
  unint64_t result;

  result = qword_256E01140;
  if (!qword_256E01140)
  {
    result = MEMORY[0x242667160](&unk_23F271248, &type metadata for SessionConfiguration.ParticipantSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01140);
  }
  return result;
}

unint64_t sub_23F18A628()
{
  unint64_t result;

  result = qword_256E01148;
  if (!qword_256E01148)
  {
    result = MEMORY[0x242667160](&unk_23F271270, &type metadata for SessionConfiguration.ParticipantSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01148);
  }
  return result;
}

unint64_t sub_23F18A668()
{
  unint64_t result;

  result = qword_256E01150;
  if (!qword_256E01150)
  {
    result = MEMORY[0x242667160](&unk_23F271140, &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.StandardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01150);
  }
  return result;
}

unint64_t sub_23F18A6A8()
{
  unint64_t result;

  result = qword_256E01158;
  if (!qword_256E01158)
  {
    result = MEMORY[0x242667160](&unk_23F271168, &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.StandardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01158);
  }
  return result;
}

unint64_t sub_23F18A6E8()
{
  unint64_t result;

  result = qword_256E01160;
  if (!qword_256E01160)
  {
    result = MEMORY[0x242667160](&unk_23F2710F0, &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.PlannerOnlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01160);
  }
  return result;
}

unint64_t sub_23F18A728()
{
  unint64_t result;

  result = qword_256E01168;
  if (!qword_256E01168)
  {
    result = MEMORY[0x242667160](&unk_23F271118, &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.PlannerOnlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01168);
  }
  return result;
}

unint64_t sub_23F18A768()
{
  unint64_t result;

  result = qword_256E01170;
  if (!qword_256E01170)
  {
    result = MEMORY[0x242667160](&unk_23F271190, &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01170);
  }
  return result;
}

unint64_t sub_23F18A7A8()
{
  unint64_t result;

  result = qword_256E01178;
  if (!qword_256E01178)
  {
    result = MEMORY[0x242667160](&unk_23F2711B8, &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01178);
  }
  return result;
}

unint64_t sub_23F18A7E8()
{
  unint64_t result;

  result = qword_256E01180;
  if (!qword_256E01180)
  {
    result = MEMORY[0x242667160](&unk_23F271038, &type metadata for SessionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01180);
  }
  return result;
}

unint64_t sub_23F18A828()
{
  unint64_t result;

  result = qword_256E01188;
  if (!qword_256E01188)
  {
    result = MEMORY[0x242667160](&unk_23F271060, &type metadata for SessionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01188);
  }
  return result;
}

unint64_t sub_23F18A864()
{
  unint64_t result;

  result = qword_256E011A0;
  if (!qword_256E011A0)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for DeviceDetails.DeviceType, &type metadata for DeviceDetails.DeviceType);
    atomic_store(result, (unint64_t *)&qword_256E011A0);
  }
  return result;
}

unint64_t sub_23F18A8A0()
{
  unint64_t result;

  result = qword_256E011A8;
  if (!qword_256E011A8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionConfiguration.PlannerType, &type metadata for SessionConfiguration.PlannerType);
    atomic_store(result, (unint64_t *)&qword_256E011A8);
  }
  return result;
}

uint64_t sub_23F18A8E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE *v2;
  char v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 2;
  v4 = (int *)type metadata accessor for SessionConfiguration(0);
  v5 = (uint64_t)&v2[v4[8]];
  v6 = type metadata accessor for LocaleSettings(0);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v5, 1, 1, v6);
  v2[v4[9]] = 2;
  v7 = &v2[v4[10]];
  v7[2] = 0;
  *(_WORD *)v7 = 512;
  *(_QWORD *)&v2[v4[11]] = 0;
  v8 = &v2[v4[12]];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *((_DWORD *)v8 + 4) = 0;
  *v2 = v3;
  return sub_23F181600(v1, v5);
}

uint64_t sub_23F18A96C()
{
  return sub_23F268678();
}

uint64_t sub_23F18A980()
{
  return sub_23F268714();
}

uint64_t sub_23F18A998()
{
  return sub_23F2688A0();
}

uint64_t sub_23F18A9A8()
{
  uint64_t v0;
  _BYTE *v1;
  int *v2;
  uint64_t v3;
  char v4;
  _BYTE *v5;
  _BYTE *v6;

  v5 = &v1[v2[10]];
  v5[2] = 0;
  *(_WORD *)v5 = 512;
  *(_QWORD *)&v1[v2[11]] = 0;
  v6 = &v1[v2[12]];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *((_DWORD *)v6 + 4) = 0;
  *v1 = v4;
  return sub_23F181600(v0, v3);
}

uint64_t sub_23F18A9E4()
{
  return sub_23F268678();
}

uint64_t sub_23F18A9F0()
{
  return sub_23F267DA8();
}

void sub_23F18A9F8(_DWORD *a1@<X8>)
{
  int v1;

  *a1 = v1;
}

void sub_23F18AA00()
{
  _BYTE *v0;
  int *v1;
  char v2;
  _BYTE *v3;
  _BYTE *v4;

  v3 = &v0[v1[10]];
  v3[2] = 0;
  *(_WORD *)v3 = 512;
  *(_QWORD *)&v0[v1[11]] = 0;
  v4 = &v0[v1[12]];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *((_DWORD *)v4 + 4) = 0;
  *v0 = v2;
}

uint64_t sub_23F18AA34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for SessionConfiguration(0) + 32);
  v2 = type metadata accessor for LocaleSettings(0);
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 1, 1, v2);
}

uint64_t sub_23F18AA74()
{
  return type metadata accessor for SessionConfiguration(0);
}

_QWORD *sub_23F18AA80(_QWORD *a1)
{
  uint64_t v1;

  return sub_23F12545C(a1, v1);
}

uint64_t sub_23F18AA98(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  *v4 = result;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
  return result;
}

uint64_t sub_23F18AABC()
{
  return sub_23F26812C();
}

uint64_t sub_23F18AACC()
{
  return sub_23F26812C();
}

uint64_t sub_23F18AADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F18AAEC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F18AAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F18AB08()
{
  return sub_23F2686E4();
}

uint64_t sub_23F18AB18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 32);
  v3 = type metadata accessor for LocaleSettings(0);
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v2, 1, 1, v3);
}

BOOL _s16IntelligenceFlow20SessionConfigurationV19ParticipantSettingsV18SemanticPreferenceO2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23F18ABAC()
{
  uint64_t v0;
  uint64_t v1;

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 1, 1, v0);
}

uint64_t sub_23F18ABC0()
{
  return sub_23F2686B4();
}

uint64_t sub_23F18ABD4()
{
  return sub_23F267EA4();
}

uint64_t sub_23F18ABDC()
{
  return sub_23F2688A0();
}

uint64_t sub_23F18ABF0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void sub_23F18ABFC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

_BYTE *_s16IntelligenceFlow20SessionConfigurationV11plannerTypeAC07PlannerF0OSgvs_0(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

void _s16IntelligenceFlow20SessionConfigurationV11plannerTypeAC07PlannerF0OSgvg_0(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_23F18AC30()
{
  return sub_23F268840();
}

void sub_23F18AC40(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 2) = 0;
  *(_WORD *)a1 = 512;
}

uint64_t sub_23F18AC50()
{
  return sub_23F26872C();
}

uint64_t sub_23F18AC60()
{
  return 0;
}

uint64_t sub_23F18AC70()
{
  return type metadata accessor for LocaleSettings(0);
}

uint64_t sub_23F18AC94()
{
  return sub_23F268690();
}

uint64_t sub_23F18ACB8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 96), *(_QWORD *)(v1 - 104));
}

char *sub_23F18ACC4(char *a1, int64_t a2)
{
  uint64_t v2;

  return sub_23F186EBC(a1, a2, 1, v2);
}

uint64_t sub_23F18ACD0()
{
  return sub_23F267E74();
}

uint64_t sub_23F18ACD8()
{
  return sub_23F2685DC();
}

uint64_t sub_23F18ACE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int v4;

  v3 = *a1;
  result = a1[1];
  v4 = *((_DWORD *)a1 + 4);
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = result;
  *(_DWORD *)(v1 + 16) = v4;
  return result;
}

size_t sub_23F18ACF8(const void *ptr)
{
  return j__malloc_size(ptr);
}

unint64_t sub_23F18AD00()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23F1878A8();
}

uint64_t sub_23F18AD0C()
{
  return sub_23F268750();
}

unint64_t sub_23F18AD14()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_23F1878E4();
}

unint64_t sub_23F18AD20()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23F1832DC();
}

uint64_t sub_23F18AD2C()
{
  return sub_23F2686B4();
}

uint64_t sub_23F18AD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;

  return a10(a1, a2, v10);
}

uint64_t sub_23F18AD50()
{
  uint64_t v0;

  return v0 - 96;
}

uint64_t sub_23F18AD64()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F18AD70()
{
  return type metadata accessor for SessionConfiguration(0);
}

uint64_t sub_23F18AD78()
{
  return sub_23F2686B4();
}

uint64_t sub_23F18AD84()
{
  return type metadata accessor for LocaleSettings(0);
}

void sub_23F18AD90()
{
  JUMPOUT(0x242667160);
}

uint64_t sub_23F18AD9C()
{
  return type metadata accessor for SessionConfiguration(0);
}

uint64_t sub_23F18ADA8()
{
  return type metadata accessor for LocaleSettings(0);
}

uint64_t sub_23F18ADB4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F18ADBC(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  swift_defaultActor_initialize();
  *(_BYTE *)(v3 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_shouldPauseWhenSpansAreEmpty) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_inProgressSpans) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v3 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_bufferedTransactions) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v3 + 112) = a1;
  v7 = v3 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_sessionId;
  v8 = sub_23F131B8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
  sub_23F14387C(a3, v3 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_breakpointPredicate);
  return v3;
}

uint64_t sub_23F18AE68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  v3[17] = type metadata accessor for MessagePayload(0);
  v3[18] = sub_23F18C518();
  v4 = sub_23F131B8C();
  v3[19] = v4;
  v3[20] = *(_QWORD *)(v4 - 8);
  v3[21] = sub_23F131384();
  v3[22] = sub_23F1314B4();
  v3[23] = type metadata accessor for SessionClientMessage(0);
  v3[24] = sub_23F131384();
  v3[25] = sub_23F1314B4();
  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  v3[26] = sub_23F131384();
  v3[27] = sub_23F1314B4();
  v3[28] = *(_QWORD *)(type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0) - 8);
  v3[29] = sub_23F18C518();
  v3[30] = type metadata accessor for SessionServerDebuggerEvent.Payload(0);
  v3[31] = sub_23F131384();
  v3[32] = sub_23F1314B4();
  v3[33] = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
  v3[34] = sub_23F18C518();
  return swift_task_switch();
}

uint64_t sub_23F18AF68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(_QWORD, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;

  sub_23F1325F8(v0[15], v0[32], type metadata accessor for SessionServerDebuggerEvent.Payload);
  if (sub_23F18C600() == 9)
  {
    v2 = v0[33];
    v1 = v0[34];
    sub_23F132624(v0[32], v1, type metadata accessor for SessionServerDebuggerEvent.RequestFailed);
    LOBYTE(v2) = *(_BYTE *)(v1 + *(int *)(v2 + 20));
    sub_23F18C31C();
    swift_allocError();
    *v3 = v2;
    swift_willThrow();
    sub_23F125D68(v1, type metadata accessor for SessionServerDebuggerEvent.RequestFailed);
    swift_task_dealloc();
    sub_23F131754();
    sub_23F131A28();
    sub_23F1316FC();
    sub_23F131704();
    sub_23F131744();
    sub_23F131788();
    sub_23F1317B0();
    sub_23F131938();
    sub_23F131780();
    swift_task_dealloc();
    v4 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v5 = v0[31];
    v6 = v0[15];
    sub_23F125D68(v0[32], type metadata accessor for SessionServerDebuggerEvent.Payload);
    sub_23F1325F8(v6, v5, type metadata accessor for SessionServerDebuggerEvent.Payload);
    switch(sub_23F18C600())
    {
      case 1u:
        v8 = v0[28];
        v7 = v0[29];
        v9 = v0[16];
        sub_23F132624(v0[31], v7, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady);
        v10 = (uint64_t *)(v9 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_bufferedTransactions);
        sub_23F18C528();
        sub_23F25814C();
        v11 = *(_QWORD *)(*v10 + 16);
        sub_23F2581A4(v11);
        v12 = *v10;
        *(_QWORD *)(v12 + 16) = v11 + 1;
        sub_23F1325F8(v7, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v11, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady);
        sub_23F18C5DC();
        v13 = *(_QWORD *)(v9 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_breakpointPredicate + 24);
        v14 = *(_QWORD *)(v9 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_breakpointPredicate + 32);
        sub_23F12545C((_QWORD *)(v9 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_breakpointPredicate), v13);
        v53 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v14 + 8) + *(_QWORD *)(v14 + 8));
        v15 = (_QWORD *)swift_task_alloc();
        v0[35] = v15;
        *v15 = v0;
        v15[1] = sub_23F18B5A4;
        return v53(v0[29], v13, v14);
      case 3u:
        v19 = *(_QWORD *)v0[31];
        sub_23F18C528();
        sub_23F258BA8(&v55, v19);
        sub_23F18C5DC();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      case 4u:
        v20 = v0[16];
        v21 = *(_QWORD *)v0[31];
        v22 = v20 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_inProgressSpans;
        sub_23F18C528();
        sub_23F18C214(v21);
        sub_23F18C5DC();
        swift_bridgeObjectRelease();
        if (*(_BYTE *)(v20 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_shouldPauseWhenSpansAreEmpty) != 1
          || *(_QWORD *)(*(_QWORD *)v22 + 16))
        {
          goto LABEL_13;
        }
        v23 = v0[16];
        v24 = v0[14];
        (*(void (**)(uint64_t, uint64_t, _QWORD))(v0[20] + 16))(v24, v23 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_sessionId, v0[19]);
        v25 = sub_23F143978();
        sub_23F267D78();
        v26 = (_QWORD *)(v24 + *(int *)(v25 + 24));
        v27 = (uint64_t *)(v23 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_bufferedTransactions);
        swift_beginAccess();
        v28 = *v27;
        v26[4] = type metadata accessor for SessionDebugger();
        v26[5] = &off_250FAE6E0;
        *v26 = v28;
        v26[1] = v23;
        type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
        sub_23F18C5D0();
        swift_storeEnumTagMultiPayload();
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v24, 0, 1, v25);
        swift_bridgeObjectRetain();
        swift_retain();
        break;
      case 6u:
        v29 = v0[31];
        v30 = v0[19];
        v31 = v0[20];
        v32 = v0[16];
        v33 = v0[14];
        v34 = sub_23F143978();
        sub_23F132624(v29, v33 + *(int *)(v34 + 24), type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v33, v32 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_sessionId, v30);
        sub_23F267D78();
        type metadata accessor for SessionDebuggerSubscriptionEvent.DebuggerEvent.Payload(0);
        sub_23F18C5D0();
        swift_storeEnumTagMultiPayload();
        v35 = v33;
        v36 = 0;
        v37 = 1;
        v38 = v34;
        goto LABEL_14;
      case 0xBu:
        v40 = v0[26];
        v39 = v0[27];
        v41 = v0[24];
        v54 = v0[25];
        v42 = v0[22];
        v43 = v0[20];
        v52 = v0[23];
        v45 = v0[18];
        v44 = v0[19];
        v46 = v0[16];
        sub_23F132624(v0[31], v39, type metadata accessor for SessionServerDebuggerEvent.InjectionRequest);
        v47 = v46 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_sessionId;
        v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
        v48(v42, v47, v44);
        sub_23F267D78();
        sub_23F1325F8(v39, v40, type metadata accessor for SessionServerDebuggerEvent.InjectionRequest);
        SessionClientDebuggerEvent.InjectionResponse.init(id:respondingTo:with:)();
        type metadata accessor for SessionClientDebuggerEvent.Payload(0);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        v48(v41, v42, v44);
        sub_23F132624(v45, v41 + *(int *)(v52 + 24), type metadata accessor for MessagePayload);
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
        v49 = (_QWORD *)(v41 + *(int *)(v52 + 20));
        *v49 = 0;
        v49[1] = 0xE000000000000000;
        sub_23F132624(v41, v54, type metadata accessor for SessionClientMessage);
        sub_23F254A74();
        v50 = v0[27];
        v51 = v0[25];
        swift_bridgeObjectRelease();
        sub_23F125D68(v51, type metadata accessor for SessionClientMessage);
        v18 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest;
        v17 = v50;
        goto LABEL_12;
      default:
        v17 = v0[31];
        v18 = type metadata accessor for SessionServerDebuggerEvent.Payload;
LABEL_12:
        sub_23F125D68(v17, v18);
LABEL_13:
        sub_23F143978();
        v35 = sub_23F18C5BC();
LABEL_14:
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v35, v36, v37, v38);
        break;
    }
    sub_23F18C538();
    swift_task_dealloc();
    sub_23F131780();
    sub_23F131754();
    sub_23F131A28();
    sub_23F1316FC();
    sub_23F131704();
    sub_23F131744();
    sub_23F131788();
    sub_23F1317B0();
    sub_23F131938();
    swift_task_dealloc();
    v4 = (uint64_t (*)(void))v0[1];
  }
  return v4();
}

uint64_t sub_23F18B5A4(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 288) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23F18B604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_BYTE *)(v0 + 288) == 1)
    *(_BYTE *)(*(_QWORD *)(v0 + 128) + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_shouldPauseWhenSpansAreEmpty) = 1;
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 128)
                 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_shouldPauseWhenSpansAreEmpty) & 1) == 0)
    sub_23F18B9F4();
  sub_23F125D68(*(_QWORD *)(v0 + 232), type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady);
  sub_23F143978();
  v1 = sub_23F18C5BC();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, v2, v3, v4);
  sub_23F18C538();
  swift_task_dealloc();
  sub_23F131780();
  sub_23F131754();
  sub_23F131A28();
  sub_23F1316FC();
  sub_23F131704();
  sub_23F131744();
  sub_23F131788();
  sub_23F1317B0();
  sub_23F131938();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23F18B754()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_shouldPauseWhenSpansAreEmpty) = 0;
  sub_23F18B9F4();
}

void sub_23F18B774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  sub_23F18C5EC();
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23F18C4FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_23F18C4E0();
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F18C558();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - v10;
  v15[1] = *(_QWORD *)(v0 + 112);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v12(v3, v0 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_sessionId, v5);
  sub_23F267D78();
  sub_23F18C5E4();
  sub_23F18C5D0();
  swift_storeEnumTagMultiPayload();
  sub_23F18C5A0();
  v12(v0, v3, v5);
  sub_23F132624(v2, v0 + *(int *)(v7 + 24), type metadata accessor for MessagePayload);
  sub_23F18C60C(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v13 = sub_23F18C574();
  sub_23F132624(v13, v14, type metadata accessor for SessionClientMessage);
  sub_23F18C590();
  if (!v1)
    swift_bridgeObjectRelease();
  sub_23F125D68((uint64_t)v11, type metadata accessor for SessionClientMessage);
  sub_23F1313FC();
}

void sub_23F18B8B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  sub_23F18C5EC();
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23F18C4FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_23F18C4E0();
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F18C558();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - v10;
  v15[1] = *(_QWORD *)(v0 + 112);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v12(v3, v0 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_sessionId, v5);
  sub_23F18C5E4();
  sub_23F18C5D0();
  swift_storeEnumTagMultiPayload();
  sub_23F18C5A0();
  v12(v0, v3, v5);
  sub_23F132624(v2, v0 + *(int *)(v7 + 24), type metadata accessor for MessagePayload);
  sub_23F18C60C(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v13 = sub_23F18C574();
  sub_23F132624(v13, v14, type metadata accessor for SessionClientMessage);
  sub_23F18C590();
  if (!v1)
    swift_bridgeObjectRelease();
  sub_23F125D68((uint64_t)v11, type metadata accessor for SessionClientMessage);
  sub_23F1313FC();
}

void sub_23F18B9F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, char *, uint64_t);
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;

  v2 = v1;
  v74 = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F125F70();
  v73 = v4;
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F125F70();
  v83 = v6;
  v72 = sub_23F18C5E4();
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F125F70();
  v71 = v8;
  v70 = sub_23F18C5EC();
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F125F70();
  v69 = v10;
  v68 = sub_23F267D84();
  v84 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  sub_23F14EFA0();
  v67 = v11;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v12);
  v82 = (char *)&v56 - v13;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v14);
  v81 = (char *)&v56 - v15;
  v66 = type metadata accessor for SessionClientMessage(0);
  sub_23F125EEC();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F14EFA0();
  v65 = v17;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v56 - v19;
  v64 = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
  v21 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  sub_23F14EFA0();
  v63 = (uint64_t *)v22;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v56 - v24;
  v26 = (_QWORD *)(v0 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_bufferedTransactions);
  swift_beginAccess();
  v27 = *v26;
  v28 = *(_QWORD *)(*v26 + 16);
  if (v28)
  {
    v57 = v26;
    v61 = v0 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_sessionId;
    v60 = *(_QWORD *)(v0 + 112);
    v29 = v27 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v58 = *(_QWORD *)(v21 + 72);
    v56 = v27;
    swift_bridgeObjectRetain();
    v62 = v20;
    v59 = v25;
    v30 = v68;
    while (1)
    {
      v80 = v2;
      v75 = v29;
      v76 = v28;
      sub_23F1325F8(v29, (uint64_t)v25, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady);
      v31 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
      v31(v81, v61, v30);
      v79 = (void (*)(uint64_t, char *, uint64_t))v31;
      v32 = v82;
      sub_23F267D78();
      v33 = v63;
      sub_23F1325F8((uint64_t)v25, (uint64_t)v63, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady);
      v34 = v67;
      v31(v67, (uint64_t)v32, v30);
      v35 = *v33;
      v77 = v33[1];
      v36 = v64;
      sub_23F18C1CC((uint64_t)v33 + *(int *)(v64 + 24), v83);
      v37 = *(int *)(v36 + 32);
      v38 = (uint64_t *)((char *)v33 + *(int *)(v36 + 28));
      v39 = v38[1];
      v78 = *v38;
      v40 = *(uint64_t *)((char *)v33 + v37);
      v41 = v73;
      v42 = (int *)v74;
      v43 = v73 + *(int *)(v74 + 28);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v43, 1, 1, v30);
      (*(void (**)(uint64_t, char *, uint64_t))(v84 + 32))(v41, v34, v30);
      *(_QWORD *)(v41 + v42[5]) = v35;
      *(_QWORD *)(v41 + v42[6]) = v77;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44 = (uint64_t)v62;
      sub_23F1751F8(v83, v43);
      v45 = (_QWORD *)(v41 + v42[8]);
      *v45 = v78;
      v45[1] = v39;
      *(_QWORD *)(v41 + v42[9]) = v40;
      v46 = v41;
      v47 = v71;
      sub_23F132624(v46, v71, type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction);
      sub_23F125D68((uint64_t)v33, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady);
      v48 = *(void (**)(char *, uint64_t))(v84 + 8);
      v48(v82, v30);
      swift_storeEnumTagMultiPayload();
      v49 = v47;
      v50 = v69;
      sub_23F132624(v49, v69, type metadata accessor for SessionClientDebuggerEvent.Payload);
      swift_storeEnumTagMultiPayload();
      v51 = v65;
      v52 = v81;
      v79(v65, v81, v30);
      v53 = v66;
      sub_23F132624(v50, v51 + *(int *)(v66 + 24), type metadata accessor for MessagePayload);
      v48(v52, v30);
      v54 = (_QWORD *)(v51 + *(int *)(v53 + 20));
      *v54 = 0;
      v54[1] = 0xE000000000000000;
      sub_23F132624(v51, v44, type metadata accessor for SessionClientMessage);
      v55 = v80;
      sub_23F254A74();
      v2 = v55;
      if (v55)
        break;
      swift_bridgeObjectRelease();
      sub_23F125D68(v44, type metadata accessor for SessionClientMessage);
      v25 = v59;
      sub_23F125D68((uint64_t)v59, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady);
      v29 = v75 + v58;
      v28 = v76 - 1;
      if (v76 == 1)
      {
        sub_23F18C5B0();
        v26 = v57;
        goto LABEL_6;
      }
    }
    sub_23F125D68(v44, type metadata accessor for SessionClientMessage);
    sub_23F125D68((uint64_t)v59, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady);
    sub_23F18C5B0();
    *v57 = MEMORY[0x24BEE4AF8];
  }
  else
  {
LABEL_6:
    *v26 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  sub_23F1313FC();
}

void sub_23F18BF34()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = sub_23F131B8C();
  sub_23F1261A8(v1);
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0 + OBJC_IVAR____TtC16IntelligenceFlow15SessionDebugger_breakpointPredicate);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  sub_23F126078();
}

uint64_t sub_23F18BFA0()
{
  sub_23F18BF34();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23F18BFB8()
{
  return type metadata accessor for SessionDebugger();
}

uint64_t type metadata accessor for SessionDebugger()
{
  uint64_t result;

  result = qword_256E01218;
  if (!qword_256E01218)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F18BFF8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F267D84();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23F18C0A0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F18C0AC()
{
  return sub_23F18C0A0();
}

uint64_t sub_23F18C0C4()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_23F18C0DC()
{
  uint64_t v0;

  sub_23F18B754();
  return sub_23F18C4D0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F18C11C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_23F18C134()
{
  uint64_t v0;

  sub_23F18B774();
  return sub_23F18C4D0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F18C174()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_23F18C18C()
{
  uint64_t v0;

  sub_23F18B8B8();
  return sub_23F18C4D0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F18C1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F1217E8(&qword_256DFEB98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F18C214(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  v5 = sub_23F268828();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v8 + 8 * v7) != a1)
  {
    v9 = ~v6;
    do
    {
      v7 = (v7 + 1) & v9;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v8 + 8 * v7) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23F259230();
    v11 = v14;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v7);
  sub_23F18C358(v7);
  *v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_23F18C31C()
{
  unint64_t result;

  result = qword_256E01360;
  if (!qword_256E01360)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionServerDebuggerEvent.RequestFailed.Reason, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason);
    atomic_store(result, (unint64_t *)&qword_256E01360);
  }
  return result;
}

unint64_t sub_23F18C358(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23F2684A4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        v12 = sub_23F268828() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_15:
            v15 = (_QWORD *)(v10 + 8 * v2);
            v16 = v2 != v6 || v15 >= v11 + 1;
            v2 = v6;
            if (v16)
            {
              *v15 = *v11;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v17 = *(_QWORD *)(v3 + 16);
  v18 = __OFSUB__(v17, 1);
  v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_23F18C4D0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F18C4E0()
{
  return type metadata accessor for SessionClientMessage(0);
}

uint64_t sub_23F18C4FC()
{
  return sub_23F267D84();
}

uint64_t sub_23F18C518()
{
  return swift_task_alloc();
}

uint64_t sub_23F18C528()
{
  return swift_beginAccess();
}

uint64_t sub_23F18C538()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 272);
}

uint64_t sub_23F18C574()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v0 + *(int *)(v1 + 20));
  *v2 = 0;
  v2[1] = 0xE000000000000000;
  return v0;
}

void sub_23F18C590()
{
  sub_23F254A74();
}

uint64_t sub_23F18C5A0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F18C5B0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F18C5BC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F18C5D0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F18C5DC()
{
  return swift_endAccess();
}

uint64_t sub_23F18C5E4()
{
  return type metadata accessor for SessionClientDebuggerEvent.Payload(0);
}

uint64_t sub_23F18C5EC()
{
  return type metadata accessor for MessagePayload(0);
}

uint64_t sub_23F18C600()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F18C60C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t SessionID.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23F131B8C();
  return sub_23F126180(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t SessionID.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23F131B8C();
  return sub_23F126180(a2, a1, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 32));
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v5 = sub_23F131B8C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1262C8();
  v9 = v8 - v7;
  v10 = type metadata accessor for SessionID();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F126058();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v5) == 1)
  {
    sub_23F143B44(a1);
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a2, 1, 1, v10);
  }
  else
  {
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v12(v9, a1, v5);
    v12(v2, v9, v5);
    sub_23F18C7D4(v2, a2);
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a2, 0, 1, v10);
  }
}

uint64_t type metadata accessor for SessionID()
{
  uint64_t result;

  result = qword_256E013E0;
  if (!qword_256E013E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F18C7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t SessionID.hash(into:)()
{
  sub_23F131B8C();
  sub_23F14420C(&qword_256DFEAF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23F26812C();
}

uint64_t sub_23F18C870()
{
  sub_23F18C9C0();
  return sub_23F2688B8();
}

uint64_t sub_23F18C898()
{
  sub_23F18C9C0();
  return sub_23F2688C4();
}

uint64_t SessionID.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23F1217E8(&qword_256E01368);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F126058();
  sub_23F12545C(a1, a1[3]);
  sub_23F18C9C0();
  sub_23F2688A0();
  sub_23F267D84();
  sub_23F14420C(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F268750();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
}

unint64_t sub_23F18C9C0()
{
  unint64_t result;

  result = qword_256E01370;
  if (!qword_256E01370)
  {
    result = MEMORY[0x242667160](&unk_23F272060, &type metadata for SessionID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01370);
  }
  return result;
}

uint64_t SessionID.hashValue.getter()
{
  sub_23F268834();
  sub_23F131B8C();
  sub_23F14420C(&qword_256DFEAF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23F26812C();
  return sub_23F268864();
}

uint64_t SessionID.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v19 = sub_23F267D84();
  v16 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  sub_23F1262C8();
  v18 = v5 - v4;
  v6 = sub_23F1217E8(&qword_256E01378);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1262C8();
  v10 = v9 - v8;
  v11 = type metadata accessor for SessionID();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1262C8();
  v14 = v13 - v12;
  sub_23F12545C(a1, a1[3]);
  sub_23F18C9C0();
  sub_23F268888();
  if (!v2)
  {
    sub_23F14420C(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23F2686B4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v14, v18, v19);
    sub_23F18C7D4(v14, a2);
  }
  return _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)a1);
}

uint64_t sub_23F18CC18()
{
  return sub_23F14420C(&qword_256E01380, (uint64_t (*)(uint64_t))type metadata accessor for SessionID, (uint64_t)&protocol conformance descriptor for SessionID);
}

uint64_t sub_23F18CC48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SessionID.init(from:)(a1, a2);
}

uint64_t sub_23F18CC5C(_QWORD *a1)
{
  return SessionID.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for SessionID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F18CC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F131B8C();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SessionID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F18CCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F131B8C();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, a2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SessionID.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F18CD2C + 4 * byte_23F271EC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F18CD4C + 4 * byte_23F271EC5[v4]))();
}

_BYTE *sub_23F18CD2C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F18CD4C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F18CD54(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F18CD5C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F18CD64(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F18CD6C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SessionID.CodingKeys()
{
  return &type metadata for SessionID.CodingKeys;
}

unint64_t sub_23F18CD8C()
{
  unint64_t result;

  result = qword_256E01418;
  if (!qword_256E01418)
  {
    result = MEMORY[0x242667160](&unk_23F272038, &type metadata for SessionID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01418);
  }
  return result;
}

unint64_t sub_23F18CDCC()
{
  unint64_t result;

  result = qword_256E01420;
  if (!qword_256E01420)
  {
    result = MEMORY[0x242667160](&unk_23F271FA8, &type metadata for SessionID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01420);
  }
  return result;
}

unint64_t sub_23F18CE0C()
{
  unint64_t result;

  result = qword_256E01428;
  if (!qword_256E01428)
  {
    result = MEMORY[0x242667160](&unk_23F271FD0, &type metadata for SessionID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01428);
  }
  return result;
}

void SessionClientDebuggerEvent.InjectionResponse.init(id:respondingTo:with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);

  sub_23F125F3C();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = sub_23F131B8C();
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F1A9470();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1A9A0C();
  sub_23F267D78();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v10, v13);
  v16 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v0, v8 + *(int *)(v16 + 32), v13);
  sub_23F16D354(v8, type metadata accessor for SessionServerDebuggerEvent.InjectionRequest);
  v17 = sub_23F1A9A64();
  v18 = (_QWORD *)(v12 + *(int *)(v17 + 24));
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  v19(v12, v1, v13);
  v19(v12 + *(int *)(v17 + 20), v0, v13);
  *v18 = v6;
  v18[1] = v4;
  sub_23F125EFC();
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E02920);
}

void SessionClientDebuggerEvent.init(payload:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23F195980(a1, a2, type metadata accessor for SessionClientDebuggerEvent.Payload);
}

void SessionClientDebuggerEvent.PostDeferredTransaction.init(id:from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  sub_23F125F3C();
  v4 = v3;
  v6 = v5;
  v27 = v5;
  v28 = v7;
  v8 = (int *)sub_23F1A96E8();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F126058();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v12;
  v13 = sub_23F131B8C();
  sub_23F126210();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F1319B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v6, v13);
  v15 = *v4;
  v24 = v4[1];
  v16 = (int *)sub_23F1A96E0();
  sub_23F18C1CC((uint64_t)v4 + v16[6], (uint64_t)v12);
  v17 = v16[8];
  v18 = (uint64_t *)((char *)v4 + v16[7]);
  v19 = v18[1];
  v25 = *v18;
  v20 = *(uint64_t *)((char *)v4 + v17);
  v21 = v0 + v8[7];
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v21, 1, 1, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v0, v2, v13);
  *(_QWORD *)(v0 + v8[5]) = v15;
  *(_QWORD *)(v0 + v8[6]) = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23F1751F8((uint64_t)v26, v21);
  v22 = (_QWORD *)(v0 + v8[8]);
  *v22 = v25;
  v22[1] = v19;
  *(_QWORD *)(v0 + v8[9]) = v20;
  sub_23F195980(v0, v28, type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction);
  sub_23F16D354((uint64_t)v4, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v27, v13);
  sub_23F125EFC();
}

void SessionClientDebuggerEvent.payload.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F195A8C(v1, a1, type metadata accessor for SessionClientDebuggerEvent.Payload);
}

void SessionClientDebuggerEvent.payload.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F195AD0(a1, v1, type metadata accessor for SessionClientDebuggerEvent.Payload);
}

uint64_t (*SessionClientDebuggerEvent.payload.modify())()
{
  return nullsub_1;
}

void static SessionClientDebuggerEvent.Payload.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD v46[14];
  uint64_t v47;
  uint64_t v48;

  sub_23F125F3C();
  v47 = v2;
  v48 = v1;
  v46[1] = sub_23F1A9A64();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F125F70();
  v46[9] = v4;
  v5 = sub_23F1A9220();
  type metadata accessor for SessionClientDebuggerEvent.DisableInjection(v5);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  v46[8] = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F1A9220();
  type metadata accessor for SessionClientDebuggerEvent.EnableInjection(v8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F125F70();
  v46[7] = v10;
  v11 = sub_23F1A9220();
  type metadata accessor for SessionClientDebuggerEvent.Sync(v11);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  v46[6] = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F1A9220();
  v46[0] = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(v14);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  v46[10] = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F1A9220();
  type metadata accessor for SessionClientDebuggerEvent.RequestCurrentTranscript(v17);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v18);
  v46[5] = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23F1A9220();
  type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(v20);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F125F70();
  v46[4] = v22;
  v23 = sub_23F1A9220();
  type metadata accessor for SessionClientDebuggerEvent.DisableDeferredTransactions(v23);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v24);
  v46[3] = (char *)v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23F1A9220();
  type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions(v26);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v27);
  v46[2] = (char *)v46 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23F1A9220();
  type metadata accessor for SessionClientDebuggerEvent.Payload(v29);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F14EFA0();
  v46[12] = v31;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F18033C();
  v46[11] = v33;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F1A98C0();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F1A9D54();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F18033C();
  v46[13] = v37;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F1A9470();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F1A9D68();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F1217E8(&qword_256E01430);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F1319B0();
  v44 = v0 + *(int *)(v43 + 48);
  sub_23F195A8C(v48, v0, type metadata accessor for SessionClientDebuggerEvent.Payload);
  sub_23F195A8C(v47, v44, type metadata accessor for SessionClientDebuggerEvent.Payload);
  v45 = (char *)sub_23F18D468 + 4 * byte_23F2720B0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F18D468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F195A8C(v2, v0, type metadata accessor for SessionClientDebuggerEvent.Payload);
  if (sub_23F1A92CC())
  {
    sub_23F16D354(v0, type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions);
    sub_23F125E40(v2, &qword_256E01430);
  }
  else
  {
    v6 = v1;
    v7 = *(_QWORD *)(v3 - 192);
    sub_23F195980(v6, v7, type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions);
    _s16IntelligenceFlow7EventIDV2eeoiySbAC_ACtFZ_0();
    sub_23F16D354(v7, type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions);
    v8 = sub_23F1317E0();
    sub_23F16D354(v8, v4);
    sub_23F1A9D24(v5, type metadata accessor for SessionClientDebuggerEvent.Payload);
  }
  sub_23F125EFC();
}

void sub_23F18D894()
{
  char v0;

  sub_23F1A9894();
  if ((v0 & 1) != 0)
    JUMPOUT(0x23F18D89CLL);
  JUMPOUT(0x23F18D8C8);
}

uint64_t sub_23F18D8F0()
{
  return 0x64616F6C796170;
}

void sub_23F18D90C(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F18E760(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F18D934()
{
  sub_23F195A3C();
  return sub_23F2688B8();
}

uint64_t sub_23F18D95C()
{
  sub_23F195A3C();
  return sub_23F2688C4();
}

void SessionClientDebuggerEvent.encode(to:)()
{
  uint64_t v0;

  sub_23F1A9358();
  sub_23F1A92A4();
  sub_23F1217E8(&qword_256E01438);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F17F9B8();
  sub_23F195A3C();
  sub_23F18A998();
  type metadata accessor for SessionClientDebuggerEvent.Payload(0);
  sub_23F125DE4(&qword_256E01448, type metadata accessor for SessionClientDebuggerEvent.Payload, (uint64_t)&protocol conformance descriptor for SessionClientDebuggerEvent.Payload);
  sub_23F1A919C();
  sub_23F1A91E4();
  sub_23F1A93B4();
  sub_23F18AB98();
}

void SessionClientDebuggerEvent.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F131874();
  v3 = sub_23F1A9CD0(v2);
  type metadata accessor for SessionClientDebuggerEvent.Payload(v3);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F1A94B8(v5, v13);
  v14 = *(_QWORD *)(sub_23F1217E8(&qword_256E01450) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F15E9EC();
  type metadata accessor for SessionClientDebuggerEvent(v7);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F1A968C(v0);
  sub_23F195A3C();
  sub_23F1A9674();
  if (!v1)
  {
    sub_23F125DE4(&qword_256E01458, type metadata accessor for SessionClientDebuggerEvent.Payload, (uint64_t)&protocol conformance descriptor for SessionClientDebuggerEvent.Payload);
    sub_23F1A9298();
    v9 = sub_23F1A91B8(v14);
    sub_23F1A9C74(v9, v10, type metadata accessor for SessionClientDebuggerEvent.Payload);
    sub_23F1A9A8C(v11, v12, type metadata accessor for SessionClientDebuggerEvent);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  sub_23F1313FC();
}

void sub_23F18DB58()
{
  SessionClientDebuggerEvent.init(from:)();
}

void sub_23F18DB6C()
{
  SessionClientDebuggerEvent.encode(to:)();
}

void SessionServerDebuggerEvent.payload.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F195A8C(v1, a1, type metadata accessor for SessionServerDebuggerEvent.Payload);
}

void SessionServerDebuggerEvent.payload.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F195AD0(a1, v1, type metadata accessor for SessionServerDebuggerEvent.Payload);
}

uint64_t (*SessionServerDebuggerEvent.payload.modify())()
{
  return nullsub_1;
}

void SessionServerDebuggerEvent.init(payload:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23F195980(a1, a2, type metadata accessor for SessionServerDebuggerEvent.Payload);
}

void static SessionServerDebuggerEvent.Payload.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD v55[23];
  uint64_t v56;
  uint64_t v57;

  sub_23F125F3C();
  v57 = v1;
  v56 = v2;
  v55[3] = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F125F70();
  v5 = sub_23F18016C(v4);
  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(v5);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_23F18016C((uint64_t)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged(v8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  v11 = sub_23F18016C((uint64_t)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55[2] = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(v11);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  v14 = sub_23F18016C((uint64_t)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted(v14);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  v17 = sub_23F18016C((uint64_t)v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SessionServerDebuggerEvent.Synced(v17);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v18);
  v20 = sub_23F18016C((uint64_t)v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55[1] = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(v20);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F125F70();
  v23 = sub_23F18016C(v22);
  type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(v23);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F125F70();
  v26 = sub_23F18016C(v25);
  type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted(v26);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F125F70();
  v29 = sub_23F18016C(v28);
  type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(v29);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v30);
  v32 = sub_23F18016C((uint64_t)v55 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged(v32);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F125F70();
  v35 = sub_23F18016C(v34);
  type metadata accessor for SessionServerDebuggerEvent.Payload(v35);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F14EFA0();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F1A9D68();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F1A9950();
  v47 = MEMORY[0x24BDAC7A8](v46);
  MEMORY[0x24BDAC7A8](v47);
  sub_23F1A9D54();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F1A96CC();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F1217E8(&qword_256E01460);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F1316E4();
  v52 = v0 + *(int *)(v51 + 48);
  sub_23F195A8C(v56, v0, type metadata accessor for SessionServerDebuggerEvent.Payload);
  v53 = v57;
  v57 = v52;
  sub_23F195A8C(v53, v52, type metadata accessor for SessionServerDebuggerEvent.Payload);
  v54 = (char *)sub_23F18DFF8 + 4 * word_23F2720BA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F18DFF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F195A8C(v2, v1, type metadata accessor for SessionServerDebuggerEvent.Payload);
  if (sub_23F1A9308())
  {
    sub_23F16D354(v1, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged);
    sub_23F125E40(v2, &qword_256E01460);
  }
  else
  {
    v4 = v0;
    v5 = *(_QWORD *)(v3 - 448);
    sub_23F1A93E4(v4);
    sub_23F1A94F0();
    sub_23F1800B0(v5);
    sub_23F16D354(v1, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged);
    sub_23F16D354(v2, type metadata accessor for SessionServerDebuggerEvent.Payload);
  }
  sub_23F125EFC();
}

void sub_23F18E760(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F18E7D8()
{
  sub_23F1986C4();
  return sub_23F2688B8();
}

uint64_t sub_23F18E800()
{
  sub_23F1986C4();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.encode(to:)()
{
  uint64_t v0;

  sub_23F1A9358();
  sub_23F1A92A4();
  sub_23F1217E8(&qword_256E01468);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F17F9B8();
  sub_23F1986C4();
  sub_23F18A998();
  type metadata accessor for SessionServerDebuggerEvent.Payload(0);
  sub_23F125DE4(&qword_256E01478, type metadata accessor for SessionServerDebuggerEvent.Payload, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.Payload);
  sub_23F1A919C();
  sub_23F1A91E4();
  sub_23F1A93B4();
  sub_23F18AB98();
}

void SessionServerDebuggerEvent.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F131874();
  v3 = sub_23F1A9CD0(v2);
  type metadata accessor for SessionServerDebuggerEvent.Payload(v3);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F1A94B8(v5, v13);
  v14 = *(_QWORD *)(sub_23F1217E8(&qword_256E01480) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F15E9EC();
  type metadata accessor for SessionServerDebuggerEvent(v7);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F1A968C(v0);
  sub_23F1986C4();
  sub_23F1A9674();
  if (!v1)
  {
    sub_23F125DE4(&qword_256E01488, type metadata accessor for SessionServerDebuggerEvent.Payload, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.Payload);
    sub_23F1A9298();
    v9 = sub_23F1A91B8(v14);
    sub_23F1A9C74(v9, v10, type metadata accessor for SessionServerDebuggerEvent.Payload);
    sub_23F1A9A8C(v11, v12, type metadata accessor for SessionServerDebuggerEvent);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  sub_23F1313FC();
}

void sub_23F18E9FC()
{
  SessionServerDebuggerEvent.init(from:)();
}

void sub_23F18EA10()
{
  SessionServerDebuggerEvent.encode(to:)();
}

void static SessionClientDebuggerEvent.PostDeferredTransaction.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char v22;
  uint64_t v23;

  sub_23F125F3C();
  v7 = v6;
  v9 = v8;
  sub_23F131B8C();
  sub_23F1A9D40();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F126058();
  v11 = sub_23F1217E8(&qword_256E01490);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F1319C8();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F1A9470();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1A9A0C();
  if ((_s16IntelligenceFlow7EventIDV2eeoiySbAC_ACtFZ_0() & 1) == 0)
    goto LABEL_12;
  v23 = v0;
  v16 = (int *)sub_23F1A96E8();
  sub_23F128DFC(*(_QWORD *)(v9 + v16[5]), *(_QWORD *)(v7 + v16[5]));
  if ((v17 & 1) == 0 || *(_QWORD *)(v9 + v16[6]) != *(_QWORD *)(v7 + v16[6]))
    goto LABEL_12;
  sub_23F1A97C4(v16[7]);
  sub_23F1A97EC(v16[7]);
  sub_23F1A9540();
  sub_23F1A9770();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v1, 1, v23) == 1)
  {
    sub_23F1A9468(v5);
    sub_23F1A9468(v4);
    v18 = sub_23F1A92D8(v11);
    if (!v21)
      goto LABEL_11;
    sub_23F1A9640(v18, &qword_256DFEB98);
LABEL_14:
    sub_23F1A9660();
    v21 = v21 && v19 == v20;
    if (v21 || (sub_23F126148(), sub_23F15E5CC(), (v22 & 1) != 0))
      sub_23F1A9DB0();
    goto LABEL_12;
  }
  sub_23F1A9C24();
  sub_23F1A92D8(v11);
  if (v21)
  {
    sub_23F1A9648(v5);
    sub_23F1A9648(v4);
    v18 = sub_23F1A99B0();
LABEL_11:
    sub_23F1A9640(v18, &qword_256E01490);
    goto LABEL_12;
  }
  sub_23F1A9784(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
  sub_23F125DE4(&qword_256DFEAF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  sub_23F1A97B0();
  sub_23F1A979C();
  sub_23F1A9468(v5);
  sub_23F1A9468(v4);
  sub_23F1A9CF8();
  sub_23F1A9468(v1);
  if ((v11 & 1) != 0)
    goto LABEL_14;
LABEL_12:
  sub_23F125EFC();
}

void static SessionClientDebuggerEvent.ReplaceCurrentTranscript.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_23F1910BC(a1, a2, type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript);
}

uint64_t static SessionClientDebuggerEvent.TerminateSession.== infix(_:_:)()
{
  return 1;
}

uint64_t static SessionClientDebuggerEvent.InjectionResponse.== infix(_:_:)(uint64_t a1)
{
  uint64_t v2;
  char v3;
  char v4;

  if ((_s16IntelligenceFlow7EventIDV2eeoiySbAC_ACtFZ_0() & 1) != 0)
  {
    v2 = sub_23F1A9A64();
    if ((_s16IntelligenceFlow7EventIDV2eeoiySbAC_ACtFZ_0() & 1) != 0)
    {
      if (*(_QWORD *)(a1 + *(int *)(v2 + 24) + 8) >> 60 == 15)
      {
        sub_23F1A9D98();
        if (!v4 & v3)
          return 1;
      }
      else
      {
        sub_23F1A9D98();
        if (!(!v4 & v3))
          sub_23F1A950C();
      }
      sub_23F1A9424();
    }
  }
  return 0;
}

uint64_t sub_23F18ED20(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  char v7;

  if (a1 == 0xD00000000000001ALL && a2 == 0x800000023F293E20 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023F293E40 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023F293E60 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023F293E80 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023F293EA0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = a1 == 1668184435 && a2 == 0xE400000000000000;
    if (v5 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000023F293EC0 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else
    {
      v6 = a1 == 0x6E49656C62616E65 && a2 == 0xEF6E6F697463656ALL;
      if (v6 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x800000023F293EE0 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 8;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x800000023F293F00)
      {
        swift_bridgeObjectRelease();
        return 9;
      }
      else
      {
        v7 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v7 & 1) != 0)
          return 9;
        else
          return 10;
      }
    }
  }
}

uint64_t sub_23F18F0DC()
{
  return 10;
}

uint64_t sub_23F18F0E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F18F124 + 4 * byte_23F2720D6[a1]))(0xD00000000000001ALL, 0x800000023F293E20);
}

uint64_t sub_23F18F124()
{
  uint64_t v0;

  return v0 + 11;
}

uint64_t sub_23F18F1D8()
{
  unsigned __int8 *v0;

  return sub_23F18F0E4(*v0);
}

uint64_t sub_23F18F1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F18ED20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F18F204@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F18F0DC();
  *a1 = result;
  return result;
}

uint64_t sub_23F18F228()
{
  sub_23F198714();
  return sub_23F2688B8();
}

uint64_t sub_23F18F250()
{
  sub_23F198714();
  return sub_23F2688C4();
}

uint64_t sub_23F18F278()
{
  sub_23F19896C();
  return sub_23F2688B8();
}

uint64_t sub_23F18F2A0()
{
  sub_23F19896C();
  return sub_23F2688C4();
}

uint64_t sub_23F18F2C8()
{
  sub_23F19878C();
  return sub_23F2688B8();
}

uint64_t sub_23F18F2F0()
{
  sub_23F19878C();
  return sub_23F2688C4();
}

uint64_t sub_23F18F318()
{
  sub_23F1989A8();
  return sub_23F2688B8();
}

uint64_t sub_23F18F340()
{
  sub_23F1989A8();
  return sub_23F2688C4();
}

uint64_t sub_23F18F368()
{
  sub_23F1987C8();
  return sub_23F2688B8();
}

uint64_t sub_23F18F390()
{
  sub_23F1987C8();
  return sub_23F2688C4();
}

uint64_t sub_23F18F3B8()
{
  sub_23F198750();
  return sub_23F2688B8();
}

uint64_t sub_23F18F3E0()
{
  sub_23F198750();
  return sub_23F2688C4();
}

uint64_t sub_23F18F408()
{
  sub_23F198930();
  return sub_23F2688B8();
}

uint64_t sub_23F18F430()
{
  sub_23F198930();
  return sub_23F2688C4();
}

uint64_t sub_23F18F458()
{
  sub_23F1988B8();
  return sub_23F2688B8();
}

uint64_t sub_23F18F480()
{
  sub_23F1988B8();
  return sub_23F2688C4();
}

uint64_t sub_23F18F4A8()
{
  sub_23F1988F4();
  return sub_23F2688B8();
}

uint64_t sub_23F18F4D0()
{
  sub_23F1988F4();
  return sub_23F2688C4();
}

uint64_t sub_23F18F4F8()
{
  sub_23F19887C();
  return sub_23F2688B8();
}

uint64_t sub_23F18F520()
{
  sub_23F19887C();
  return sub_23F2688C4();
}

void sub_23F18F548(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F191ACC(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F18F570()
{
  sub_23F198804();
  return sub_23F2688B8();
}

uint64_t sub_23F18F598()
{
  sub_23F198804();
  return sub_23F2688C4();
}

void SessionClientDebuggerEvent.Payload.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84[11];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  _QWORD v96[2];
  uint64_t v97;
  char *v98;
  _QWORD v99[2];
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  sub_23F131874();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v25 = sub_23F1217E8(&qword_256E01498);
  v103 = *(_QWORD *)(v25 - 8);
  v104 = v25;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v26);
  v102 = (char *)v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23F1A9220();
  v99[1] = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(v28);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v29);
  v101 = (char *)v84 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_23F1217E8(&qword_256E014A0);
  v99[0] = *(_QWORD *)(v100 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v31);
  v98 = (char *)v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_23F1A9220();
  v96[1] = type metadata accessor for SessionClientDebuggerEvent.DisableInjection(v33);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F15E9D0(v35, v84[0]);
  v97 = sub_23F1217E8(&qword_256E014A8);
  v96[0] = *(_QWORD *)(v97 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v36);
  v95 = (char *)v84 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_23F1A9220();
  v94 = type metadata accessor for SessionClientDebuggerEvent.EnableInjection(v38);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F1A949C(v40, v84[0]);
  v41 = sub_23F1217E8(&qword_256E014B0);
  sub_23F17FB48(v41, (uint64_t)&a18);
  v93 = v42;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F17FBBC((uint64_t)v84 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45 = sub_23F1217E8(&qword_256E014B8);
  sub_23F17FB48(v45, (uint64_t)&a16);
  v92 = v46;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v47);
  v49 = sub_23F18016C((uint64_t)v84 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v91 = type metadata accessor for SessionClientDebuggerEvent.Sync(v49);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F17FBBC((uint64_t)v84 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = sub_23F1217E8(&qword_256E014C0);
  sub_23F17FB48(v52, (uint64_t)&a11);
  v90 = v53;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v54);
  v56 = sub_23F18016C((uint64_t)v84 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  v88 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(v56);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F17FBBC((uint64_t)v84 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  v89 = sub_23F1217E8(&qword_256E014C8);
  v87 = *(_QWORD *)(v89 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v59);
  v61 = sub_23F18016C((uint64_t)v84 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86 = type metadata accessor for SessionClientDebuggerEvent.RequestCurrentTranscript(v61);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F17FBBC((uint64_t)v84 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  v85 = sub_23F1217E8(&qword_256E014D0);
  v84[10] = *(_QWORD *)(v85 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v64);
  v66 = sub_23F18016C((uint64_t)v84 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  v84[7] = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(v66);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v67);
  sub_23F17FBBC((uint64_t)v84 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = sub_23F1217E8(&qword_256E014D8);
  sub_23F17FB48(v69, (uint64_t)v99);
  v84[5] = v70;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v71);
  v73 = sub_23F18016C((uint64_t)v84 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0));
  v84[2] = type metadata accessor for SessionClientDebuggerEvent.DisableDeferredTransactions(v73);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v74);
  sub_23F125F70();
  sub_23F17FBBC(v75);
  v76 = sub_23F1217E8(&qword_256E014E0);
  sub_23F17FB48(v76, (uint64_t)v96);
  v84[0] = v77;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F15E524();
  type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions(0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v79);
  v80 = sub_23F1A9864();
  type metadata accessor for SessionClientDebuggerEvent.Payload(v80);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v81);
  sub_23F1319B0();
  v105 = sub_23F1217E8(&qword_256E014E8);
  v106 = *(_QWORD *)(v105 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v82);
  sub_23F15E50C();
  sub_23F12545C(v24, v24[3]);
  sub_23F198714();
  sub_23F1A9CA0();
  sub_23F195A8C(v107, v20, type metadata accessor for SessionClientDebuggerEvent.Payload);
  v83 = (char *)sub_23F18FAD0 + 4 * word_23F2720E0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F18FAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F195980(v2, v1, type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions);
  *(_BYTE *)(v3 - 90) = 0;
  sub_23F1989A8();
  v5 = *(_QWORD *)(v3 - 136);
  v4 = *(_QWORD *)(v3 - 128);
  sub_23F2686E4();
  sub_23F125DE4(&qword_256E01590, type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions, (uint64_t)&protocol conformance descriptor for SessionClientDebuggerEvent.EnableDeferredTransactions);
  sub_23F1A99C0();
  sub_23F16BCF4();
  sub_23F15E44C(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 496) + 8));
  sub_23F16D354(v1, type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 112) + 8))(v5, v4);
  sub_23F1313FC();
}

void SessionClientDebuggerEvent.Payload.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t *v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v96[19];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;

  sub_23F131874();
  a19 = v27;
  a20 = v28;
  v115 = v21;
  v30 = v29;
  v107 = v31;
  v32 = sub_23F1217E8(&qword_256E01598);
  sub_23F17FB48(v32, (uint64_t)&a18);
  v109 = v33;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v34);
  v106 = (char *)v96 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23F1217E8(&qword_256E015A0);
  sub_23F17FB48(v36, (uint64_t)&a17);
  v96[6] = v37;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v38);
  v105 = (char *)v96 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_23F1217E8(&qword_256E015A8);
  v96[13] = *(_QWORD *)(v99 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F1A94D4(v41, v96[0]);
  v42 = sub_23F1217E8(&qword_256E015B0);
  sub_23F17FB48(v42, (uint64_t)&a15);
  v108 = v43;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v44);
  v104 = (char *)v96 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_23F1217E8(&qword_256E015B8);
  sub_23F17FB48(v46, (uint64_t)&a14);
  v96[12] = v47;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F15E9D0(v49, v96[0]);
  v50 = sub_23F1217E8(&qword_256E015C0);
  sub_23F17FB48(v50, (uint64_t)&a13);
  v96[11] = v51;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F125F70();
  v103 = v53;
  v54 = sub_23F1217E8(&qword_256E015C8);
  sub_23F17FB48(v54, (uint64_t)&a12);
  v96[10] = v55;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F125F70();
  v102 = v57;
  v98 = sub_23F1217E8(&qword_256E015D0);
  v96[9] = *(_QWORD *)(v98 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F17FFFC(v59, v96[0]);
  v97 = sub_23F1217E8(&qword_256E015D8);
  v96[8] = *(_QWORD *)(v97 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v60);
  v101 = (char *)v96 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_23F1217E8(&qword_256E015E0);
  sub_23F17FB48(v62, (uint64_t)&a9);
  v96[7] = v63;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F1A949C(v65, v96[0]);
  v66 = sub_23F1217E8(&qword_256E015E8);
  v111 = *(_QWORD *)(v66 - 8);
  v112 = v66;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v67);
  v68 = sub_23F1A9480();
  v110 = type metadata accessor for SessionClientDebuggerEvent.Payload(v68);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F14EFA0();
  v100 = v70;
  sub_23F18C5F4();
  MEMORY[0x24BDAC7A8](v71);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v72);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v74);
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F1A96CC();
  MEMORY[0x24BDAC7A8](v77);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F1A9470();
  MEMORY[0x24BDAC7A8](v79);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F1A9A0C();
  v114 = v30;
  sub_23F1A968C(v30);
  sub_23F198714();
  v113 = v26;
  sub_23F1A9DA4();
  v81 = v115;
  sub_23F268888();
  if (!v81)
  {
    v96[1] = v23;
    v96[2] = v25;
    v96[3] = v20;
    v96[4] = v22;
    v82 = v112;
    v115 = v24;
    v83 = sub_23F2686D8();
    v84 = *(_QWORD *)(v83 + 16);
    if (v84)
    {
      v96[0] = 0;
      v85 = *(unsigned __int8 *)(v83 + 32);
      sub_23F15E2D0(1, v84, v83, v83 + 32, 0, (2 * v84) | 1);
      v87 = v86;
      v89 = v88;
      sub_23F131790();
      if (v87 == v89 >> 1)
        __asm { BR              X9 }
    }
    v90 = v110;
    v91 = sub_23F15EDB8();
    sub_23F131B30();
    v93 = v92;
    sub_23F1217E8(&qword_256DFF4B8);
    *v93 = v90;
    sub_23F268648();
    sub_23F15E6B4();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v91 - 8) + 104))(v93, *MEMORY[0x24BEE26D0], v91);
    swift_willThrow();
    sub_23F17FAB4();
    v94 = sub_23F15EAE0();
    v95(v94, v82);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v114);
  sub_23F1313FC();
}

#error "23F190BEC: call analysis failed (funcsize=5)"

#error "23F190C00: call analysis failed (funcsize=5)"

void static SessionServerDebuggerEvent.DeferredTransactionReady.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  char v24;
  uint64_t v25;

  sub_23F125F3C();
  v6 = v5;
  v8 = v7;
  sub_23F131B8C();
  sub_23F1A9D40();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F126058();
  v10 = sub_23F1217E8(&qword_256E01490);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1319C8();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F1A9470();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F1A96B4();
  if ((v15 & 1) == 0 || *(_QWORD *)(v8 + 8) != *(_QWORD *)(v6 + 8))
    goto LABEL_12;
  v25 = v6;
  v16 = sub_23F1A96E0();
  sub_23F1A97C4(*(int *)(v16 + 24));
  sub_23F1A97EC(*(int *)(v16 + 24));
  sub_23F1A9540();
  sub_23F1A9770();
  sub_23F1A92D8(v0);
  if (!v18)
  {
    sub_23F1A9C24();
    sub_23F1A92D8(v10);
    if (!v18)
    {
      sub_23F1A9784(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
      sub_23F125DE4(&qword_256DFEAF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      sub_23F1A97B0();
      sub_23F1A979C();
      sub_23F1A9468(v4);
      sub_23F1A9468(v3);
      sub_23F1A9CF8();
      sub_23F1A9468(v0);
      if ((v10 & 1) == 0)
        goto LABEL_12;
      goto LABEL_14;
    }
    sub_23F1A9648(v4);
    sub_23F1A9648(v3);
    v17 = sub_23F1A99B0();
LABEL_11:
    sub_23F1A9640(v17, &qword_256E01490);
    goto LABEL_12;
  }
  sub_23F1A9468(v4);
  sub_23F1A9468(v3);
  v17 = sub_23F1A92D8(v10);
  if (!v18)
    goto LABEL_11;
  sub_23F1A9640(v17, &qword_256DFEB98);
LABEL_14:
  v19 = *(int *)(v16 + 28);
  v20 = *(_QWORD *)(v8 + v19);
  v21 = *(_QWORD *)(v8 + v19 + 8);
  v22 = (_QWORD *)(v25 + v19);
  v23 = v20 == *v22 && v21 == v22[1];
  if (v23 || (sub_23F126148(), sub_23F15E5CC(), (v24 & 1) != 0))
    sub_23F122130();
LABEL_12:
  sub_23F125EFC();
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV11SpanStartedV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != *a2)
    return 0;
  if (a1[1] == a2[1] && a1[2] == a2[2])
    return 1;
  else
    return sub_23F268798();
}

void static SessionServerDebuggerEvent.FinalTransactionPosted.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  char v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;

  sub_23F125F3C();
  v6 = v5;
  v8 = v7;
  v9 = sub_23F131B8C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F15E50C();
  v11 = sub_23F1217E8(&qword_256E01490);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F1319C8();
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F1A9950();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1A96B4();
  if ((v16 & 1) == 0 || *(_QWORD *)(v8 + 8) != *(_QWORD *)(v6 + 8))
    goto LABEL_14;
  v24 = v10;
  v17 = sub_23F1A988C();
  sub_23F1A97C4(*(int *)(v17 + 24));
  sub_23F1A97EC(*(int *)(v17 + 24));
  sub_23F1A9540();
  sub_23F1A9770();
  sub_23F1A92D8(v0);
  if (v19)
  {
    sub_23F1A973C(v4);
    sub_23F1A973C(v3);
    v18 = sub_23F1A92D8(v11);
    if (v19)
    {
      sub_23F1A9640(v18, &qword_256DFEB98);
LABEL_13:
      sub_23F1A9DB0();
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  sub_23F18C1CC(v0, v2);
  sub_23F1A92D8(v11);
  if (v19)
  {
    sub_23F1A9648(v4);
    sub_23F1A9648(v3);
    v20 = sub_23F1A9C80();
    v18 = v21(v20, v9);
LABEL_11:
    sub_23F1A9640(v18, &qword_256E01490);
    goto LABEL_14;
  }
  sub_23F1A9784(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 32));
  sub_23F125DE4(&qword_256DFEAF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v22 = sub_23F268138();
  v23 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v23(v1, v9);
  sub_23F1A973C(v4);
  sub_23F1A973C(v3);
  v23(v2, v9);
  sub_23F1A973C(v0);
  if ((v22 & 1) != 0)
    goto LABEL_13;
LABEL_14:
  sub_23F125EFC();
}

void static SessionServerDebuggerEvent.CurrentTranscript.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_23F1910BC(a1, a2, type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript);
}

void sub_23F1910BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if ((sub_23F1A9880() & 1) != 0)
  {
    v6 = *(int *)(a3(0) + 20);
    sub_23F128DFC(*(_QWORD *)(v4 + v6), *(_QWORD *)(v3 + v6));
  }
  else
  {
    sub_23F12612C();
  }
}

void static SessionServerDebuggerEvent.RequestFailed.== infix(_:_:)()
{
  if ((sub_23F1A9880() & 1) != 0)
    sub_23F1A96F0();
  sub_23F126078();
}

void static SessionServerDebuggerEvent.InjectionRequest.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  if (*a1 != *a2)
    goto LABEL_33;
  v4 = a1[1] == a2[1] && a1[2] == a2[2];
  if (!v4)
  {
    sub_23F126148();
    sub_23F15E5CC();
    if ((v5 & 1) == 0)
      goto LABEL_33;
  }
  if (a1[3] != a2[3] || a1[4] != a2[4])
  {
    sub_23F126148();
    sub_23F15E5CC();
    if ((v7 & 1) == 0)
      goto LABEL_33;
  }
  v8 = a1[6];
  v9 = a2[6];
  if (v8)
  {
    if (!v9)
      goto LABEL_33;
    if (a1[5] != a2[5] || v8 != v9)
    {
      sub_23F126148();
      sub_23F15E5CC();
      if ((v11 & 1) == 0)
        goto LABEL_33;
    }
  }
  else if (v9)
  {
    goto LABEL_33;
  }
  v12 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  if ((_s16IntelligenceFlow7EventIDV2eeoiySbAC_ACtFZ_0() & 1) != 0)
  {
    sub_23F1A9660();
    v15 = v4 && v13 == v14;
    if (v15 || (sub_23F126148(), sub_23F15E5CC(), (v16 & 1) != 0))
    {
      if ((MEMORY[0x2426660F8](*(_QWORD *)((char *)a1 + *(int *)(v12 + 40)), *(_QWORD *)((char *)a1 + *(int *)(v12 + 40) + 8), *(_QWORD *)((char *)a2 + *(int *)(v12 + 40)), *(_QWORD *)((char *)a2 + *(int *)(v12 + 40) + 8)) & 1) != 0)
      {
        sub_23F1A9660();
        if (!v4 || v17 != v18)
        {
          sub_23F268798();
          return;
        }
      }
    }
  }
LABEL_33:
  sub_23F12612C();
}

void static SessionServerDebuggerEvent.InjectionResponseAccepted.== infix(_:_:)()
{
  if ((sub_23F1A9880() & 1) != 0)
    sub_23F1A9708();
  sub_23F126078();
}

uint64_t static SessionServerDebuggerEvent.InjectionValueCaptured.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;

  if (*a1 == *a2)
  {
    v2 = a1[3];
    v3 = a1[4];
    v4 = a1[5];
    v5 = a1[6];
    v17 = a1[8];
    v18 = a1[7];
    v6 = a2[3];
    v7 = a2[4];
    v9 = a2[5];
    v8 = a2[6];
    v10 = a2[7];
    v11 = a2[8];
    v12 = a1[1] == a2[1] && a1[2] == a2[2];
    if (v12 || (sub_23F126148() & 1) != 0)
    {
      v13 = v2 == v6 && v3 == v7;
      if (v13 || (sub_23F126148() & 1) != 0)
      {
        if (v5)
        {
          if (!v8)
            return 0;
          v14 = v4 == v9 && v5 == v8;
          if (!v14 && (sub_23F126148() & 1) == 0)
            return 0;
        }
        else if (v8)
        {
          return 0;
        }
        v15 = v18 == v10 && v17 == v11;
        if (v15 || (sub_23F126148() & 1) != 0)
          JUMPOUT(0x2426660F8);
      }
    }
  }
  return 0;
}

uint64_t sub_23F191410(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  if (a1 == 0xD00000000000001FLL && a2 == 0x800000023F293F20 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023F293F40 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023F293F60 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = a1 == 0x726174536E617073 && a2 == 0xEB00000000646574;
    if (v5 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v6 = a1 == 0x65646E456E617073 && a2 == 0xE900000000000064;
      if (v6 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x800000023F293F80 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x800000023F293FA0 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else
      {
        v7 = a1 == 0x6465636E7973 && a2 == 0xE600000000000000;
        if (v7 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023F293FC0 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else
        {
          v8 = a1 == 0x4674736575716572 && a2 == 0xED000064656C6961;
          if (v8 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x800000023F293FE0 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else if (a1 == 0xD000000000000010 && a2 == 0x800000023F294000 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 11;
          }
          else if (a1 == 0xD000000000000019 && a2 == 0x800000023F294020 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 12;
          }
          else if (a1 == 0xD000000000000016 && a2 == 0x800000023F294040)
          {
            swift_bridgeObjectRelease();
            return 13;
          }
          else
          {
            v9 = sub_23F268798();
            swift_bridgeObjectRelease();
            if ((v9 & 1) != 0)
              return 13;
            else
              return 14;
          }
        }
      }
    }
  }
}

uint64_t sub_23F191970()
{
  return 14;
}

uint64_t sub_23F191978(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F1919B8 + 4 * byte_23F272108[a1]))(0xD00000000000001FLL, 0x800000023F293F20);
}

uint64_t sub_23F1919B8()
{
  uint64_t v0;

  return v0 + 2;
}

void sub_23F191ACC(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F191B2C()
{
  unsigned __int8 *v0;

  return sub_23F191978(*v0);
}

uint64_t sub_23F191B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F191410(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F191B58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F191970();
  *a1 = result;
  return result;
}

uint64_t sub_23F191B7C()
{
  sub_23F19BAD0();
  return sub_23F2688B8();
}

uint64_t sub_23F191BA4()
{
  sub_23F19BAD0();
  return sub_23F2688C4();
}

uint64_t sub_23F191BCC()
{
  sub_23F19BCEC();
  return sub_23F2688B8();
}

uint64_t sub_23F191BF4()
{
  sub_23F19BCEC();
  return sub_23F2688C4();
}

uint64_t sub_23F191C1C()
{
  sub_23F19BE54();
  return sub_23F2688B8();
}

uint64_t sub_23F191C44()
{
  sub_23F19BE54();
  return sub_23F2688C4();
}

uint64_t sub_23F191C6C()
{
  sub_23F19BE90();
  return sub_23F2688B8();
}

uint64_t sub_23F191C94()
{
  sub_23F19BE90();
  return sub_23F2688C4();
}

uint64_t sub_23F191CBC()
{
  sub_23F19BECC();
  return sub_23F2688B8();
}

uint64_t sub_23F191CE4()
{
  sub_23F19BECC();
  return sub_23F2688C4();
}

uint64_t sub_23F191D0C()
{
  sub_23F19BD28();
  return sub_23F2688B8();
}

uint64_t sub_23F191D34()
{
  sub_23F19BD28();
  return sub_23F2688C4();
}

uint64_t sub_23F191D5C()
{
  sub_23F19BBC0();
  return sub_23F2688B8();
}

uint64_t sub_23F191D84()
{
  sub_23F19BBC0();
  return sub_23F2688C4();
}

uint64_t sub_23F191DAC()
{
  sub_23F19BB84();
  return sub_23F2688B8();
}

uint64_t sub_23F191DD4()
{
  sub_23F19BB84();
  return sub_23F2688C4();
}

uint64_t sub_23F191DFC()
{
  sub_23F19BBFC();
  return sub_23F2688B8();
}

uint64_t sub_23F191E24()
{
  sub_23F19BBFC();
  return sub_23F2688C4();
}

uint64_t sub_23F191E4C()
{
  sub_23F19BB0C();
  return sub_23F2688B8();
}

uint64_t sub_23F191E74()
{
  sub_23F19BB0C();
  return sub_23F2688C4();
}

uint64_t sub_23F191E9C()
{
  sub_23F19BC38();
  return sub_23F2688B8();
}

uint64_t sub_23F191EC4()
{
  sub_23F19BC38();
  return sub_23F2688C4();
}

uint64_t sub_23F191EEC()
{
  sub_23F19BD64();
  return sub_23F2688B8();
}

uint64_t sub_23F191F14()
{
  sub_23F19BD64();
  return sub_23F2688C4();
}

uint64_t sub_23F191F3C()
{
  sub_23F19BDDC();
  return sub_23F2688B8();
}

uint64_t sub_23F191F64()
{
  sub_23F19BDDC();
  return sub_23F2688C4();
}

uint64_t sub_23F191F8C()
{
  sub_23F19BCB0();
  return sub_23F2688B8();
}

uint64_t sub_23F191FB4()
{
  sub_23F19BCB0();
  return sub_23F2688C4();
}

uint64_t sub_23F191FDC()
{
  sub_23F19BC74();
  return sub_23F2688B8();
}

uint64_t sub_23F192004()
{
  sub_23F19BC74();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.Payload.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107[12];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD v120[5];
  _QWORD v121[17];
  _QWORD v122[5];
  _QWORD v123[3];
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  sub_23F131874();
  a19 = v22;
  a20 = v23;
  v24 = sub_23F1217E8(&qword_256E01640);
  v122[4] = *(_QWORD *)(v24 - 8);
  v123[0] = v24;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F17FFFC(v26, v107[0]);
  v27 = sub_23F1217E8(&qword_256E01648);
  v122[1] = *(_QWORD *)(v27 - 8);
  v122[2] = v27;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v28);
  v122[0] = (char *)v107 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_23F1A9220();
  v121[14] = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(v30);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F17FBBC((uint64_t)v107 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = sub_23F1217E8(&qword_256E01650);
  sub_23F17FB48(v33, (uint64_t)&a17);
  v121[13] = v34;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v35);
  v37 = sub_23F18016C((uint64_t)v107 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v121[9] = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(v37);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F17FBBC((uint64_t)v107 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = sub_23F1217E8(&qword_256E01658);
  sub_23F17FB48(v40, (uint64_t)&a12);
  v121[8] = v41;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v42);
  v44 = sub_23F18016C((uint64_t)v107 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  v121[4] = type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged(v44);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F17FBBC((uint64_t)v107 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = sub_23F1217E8(&qword_256E01660);
  sub_23F17FB48(v47, (uint64_t)&v126);
  v121[3] = v48;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v49);
  v51 = sub_23F18016C((uint64_t)v107 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120[4] = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(v51);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F17FBBC((uint64_t)v107 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  v121[0] = sub_23F1217E8(&qword_256E01668);
  v120[3] = *(_QWORD *)(v121[0] - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v54);
  v56 = sub_23F18016C((uint64_t)v107 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  v119 = type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted(v56);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F17FBBC((uint64_t)v107 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = sub_23F1217E8(&qword_256E01670);
  sub_23F17FB48(v59, (uint64_t)&v125);
  v118 = v60;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F125F70();
  v63 = sub_23F18016C(v62);
  v117 = type metadata accessor for SessionServerDebuggerEvent.Synced(v63);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F17FBBC((uint64_t)v107 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = sub_23F1217E8(&qword_256E01678);
  sub_23F17FB48(v66, (uint64_t)v123);
  v116 = v67;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F125F70();
  v70 = sub_23F18016C(v69);
  v115 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(v70);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v71);
  sub_23F125F70();
  sub_23F17FBBC(v72);
  v73 = sub_23F1217E8(&qword_256E01680);
  sub_23F17FB48(v73, (uint64_t)v122);
  v114 = v74;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F125F70();
  v77 = sub_23F18016C(v76);
  v113 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(v77);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F125F70();
  sub_23F17FBBC(v79);
  v112 = sub_23F1217E8(&qword_256E01688);
  v111 = *(_QWORD *)(v112 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F125F70();
  sub_23F17FBBC(v81);
  v110 = sub_23F1217E8(&qword_256E01690);
  v109 = *(_QWORD *)(v110 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v82);
  sub_23F125F70();
  sub_23F17FBBC(v83);
  v108 = sub_23F1217E8(&qword_256E01698);
  v107[11] = *(_QWORD *)(v108 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v84);
  sub_23F125F70();
  v86 = sub_23F18016C(v85);
  v107[8] = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted(v86);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v87);
  sub_23F125F70();
  sub_23F17FBBC(v88);
  v89 = sub_23F1217E8(&qword_256E016A0);
  sub_23F17FB48(v89, (uint64_t)v121);
  v107[6] = v90;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v91);
  sub_23F125F70();
  v93 = sub_23F18016C(v92);
  v107[3] = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(v93);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v94);
  sub_23F125F70();
  sub_23F17FBBC(v95);
  v96 = sub_23F1217E8(&qword_256E016A8);
  sub_23F17FB48(v96, (uint64_t)v120);
  v107[1] = v97;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v98);
  v99 = sub_23F17FFA8();
  type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged(v99);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v100);
  v101 = sub_23F125FBC();
  type metadata accessor for SessionServerDebuggerEvent.Payload(v101);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v102);
  sub_23F1319C8();
  v124 = sub_23F1217E8(&qword_256E016B0);
  v123[1] = *(_QWORD *)(v124 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v103);
  v105 = (char *)v107 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F1A9934();
  sub_23F19BAD0();
  v123[2] = v105;
  sub_23F1A99CC();
  sub_23F195A8C(v20, v21, type metadata accessor for SessionServerDebuggerEvent.Payload);
  v106 = (char *)sub_23F192668 + 4 * word_23F272116[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F192668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);

  sub_23F1A92C4(v0, v1);
  *(_BYTE *)(v3 - 176) = 0;
  sub_23F19BECC();
  sub_23F15EA24();
  sub_23F1800B8(&qword_256E01798, v4, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.DeferredTransactionStateChanged);
  sub_23F1A9388();
  sub_23F15E44C(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 696) + 8));
  sub_23F16D354(v1, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged);
  v5 = sub_23F1A9C80();
  sub_23F15E588(v5, v6);
  sub_23F1313FC();
}

void sub_23F192D30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);

  *(_QWORD *)(v2 - 72) = *v0;
  v3 = v0[1];
  v4 = v0[2];
  v5 = v0[4];
  *(_QWORD *)(v2 - 248) = v0[3];
  *(_QWORD *)(v2 - 240) = v3;
  *(_QWORD *)(v2 - 256) = v0[5];
  *(_QWORD *)(v2 - 272) = v0[6];
  v6 = v0[8];
  *(_QWORD *)(v2 - 264) = v0[7];
  v7 = v0[9];
  v8 = v0[10];
  sub_23F1A9C54();
  sub_23F1A9554();
  v9 = *(_QWORD *)(v2 - 240);
  *(_QWORD *)(v2 - 176) = *(_QWORD *)(v2 - 72);
  *(_QWORD *)(v2 - 168) = v9;
  *(_QWORD *)(v2 - 72) = v4;
  v10 = *(_QWORD *)(v2 - 248);
  *(_QWORD *)(v2 - 160) = v4;
  *(_QWORD *)(v2 - 152) = v10;
  *(_QWORD *)(v2 - 240) = v5;
  *(_QWORD *)(v2 - 144) = v5;
  v11 = v6;
  v12 = *(_QWORD *)(v2 - 272);
  *(_QWORD *)(v2 - 136) = *(_QWORD *)(v2 - 256);
  *(_QWORD *)(v2 - 128) = v12;
  *(_QWORD *)(v2 - 120) = *(_QWORD *)(v2 - 264);
  *(_QWORD *)(v2 - 112) = v11;
  *(_QWORD *)(v2 - 104) = v7;
  *(_QWORD *)(v2 - 96) = v8;
  sub_23F19BB48();
  sub_23F1A9388();
  v13 = sub_23F15ECE4();
  sub_23F126038(v13, v14);
  sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 208) + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F1311B4(v7, v8);
  JUMPOUT(0x23F192D20);
}

void SessionServerDebuggerEvent.Payload.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95[29];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;

  sub_23F131874();
  v107 = v1;
  v6 = v5;
  v100 = v7;
  v8 = sub_23F1217E8(&qword_256E017A0);
  sub_23F17FB48(v8, (uint64_t)&v115);
  v101 = v9;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F1A949C(v11, v95[0]);
  v12 = sub_23F1217E8(&qword_256E017A8);
  sub_23F17FB48(v12, (uint64_t)&v114);
  v95[19] = v13;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  v99 = (char *)v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F1217E8(&qword_256E017B0);
  sub_23F17FB48(v16, (uint64_t)&v113);
  v95[18] = v17;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F17FBBC((uint64_t)v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_23F1217E8(&qword_256E017B8);
  sub_23F17FB48(v20, (uint64_t)&v112);
  v95[17] = v21;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F125F70();
  sub_23F17FBBC(v23);
  v24 = sub_23F1217E8(&qword_256E017C0);
  sub_23F17FB48(v24, (uint64_t)&v111);
  v95[16] = v25;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F125F70();
  sub_23F17FBBC(v27);
  v98 = sub_23F1217E8(&qword_256E017C8);
  v95[15] = *(_QWORD *)(v98 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F17FBBC((uint64_t)v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = sub_23F1217E8(&qword_256E017D0);
  sub_23F17FB48(v30, (uint64_t)&v110);
  v95[14] = v31;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F17FBBC((uint64_t)v95 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = sub_23F1217E8(&qword_256E017D8);
  sub_23F17FB48(v34, (uint64_t)&v109);
  v95[13] = v35;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F17FBBC((uint64_t)v95 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v97 = sub_23F1217E8(&qword_256E017E0);
  v95[12] = *(_QWORD *)(v97 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F125F70();
  sub_23F17FBBC(v39);
  v40 = sub_23F1217E8(&qword_256E017E8);
  sub_23F17FB48(v40, (uint64_t)&v108);
  v95[11] = v41;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F17FBBC((uint64_t)v95 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = sub_23F1217E8(&qword_256E017F0);
  sub_23F17FB48(v44, (uint64_t)&v107);
  v104 = v45;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F125F70();
  sub_23F17FBBC(v47);
  v48 = sub_23F1217E8(&qword_256E017F8);
  sub_23F17FB48(v48, (uint64_t)&v106);
  v95[10] = v49;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F17FBBC((uint64_t)v95 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  v96 = sub_23F1217E8(&qword_256E01800);
  v95[9] = *(_QWORD *)(v96 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F17FBBC((uint64_t)v95 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = sub_23F1217E8(&qword_256E01808);
  sub_23F17FB48(v54, (uint64_t)&v104);
  v95[8] = v55;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F17FBBC((uint64_t)v95 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  v105 = sub_23F1217E8(&qword_256E01810);
  v103 = *(_QWORD *)(v105 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v58);
  v116 = (char *)v95 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_23F1A9220();
  v102 = type metadata accessor for SessionServerDebuggerEvent.Payload(v60);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F14EFA0();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v67);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F18033C();
  sub_23F17FD00();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F1A9470();
  v72 = MEMORY[0x24BDAC7A8](v71);
  v74 = (char *)v95 - v73;
  MEMORY[0x24BDAC7A8](v72);
  sub_23F1A98C0();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F1A96CC();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F180348();
  MEMORY[0x24BDAC7A8](v77);
  v79 = (char *)v95 - v78;
  v80 = v6[3];
  v106 = v6;
  sub_23F12545C(v6, v80);
  sub_23F19BAD0();
  v81 = v107;
  sub_23F18037C();
  if (!v81)
  {
    v95[4] = v4;
    v95[5] = v0;
    v107 = v3;
    v95[2] = (uint64_t)v74;
    v95[3] = v2;
    v95[6] = (uint64_t)v79;
    v82 = sub_23F2686D8();
    v83 = *(_QWORD *)(v82 + 16);
    if (v83)
    {
      v95[1] = 0;
      v84 = *(unsigned __int8 *)(v82 + 32);
      sub_23F15E2D0(1, v83, v82, v82 + 32, 0, (2 * v83) | 1);
      v86 = v85;
      v88 = v87;
      sub_23F1318DC();
      if (v86 == v88 >> 1)
        __asm { BR              X9 }
    }
    v89 = v105;
    v91 = v102;
    v90 = v103;
    sub_23F15EDB8();
    sub_23F131B30();
    v93 = v92;
    sub_23F1217E8(&qword_256DFF4B8);
    *v93 = v91;
    sub_23F268648();
    v94 = sub_23F15E6B4();
    sub_23F1A97D0(v94, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v116, v89);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v106);
  sub_23F1313FC();
}

void sub_23F1935B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F1A9BD0();
  sub_23F1A91C8();
  sub_23F1A93D8();
  if (!v0)
  {
    v3 = sub_23F1A96E0();
    sub_23F125DE4(&qword_256E01878, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.DeferredTransactionReady);
    sub_23F1A9328();
    sub_23F1A9208();
    sub_23F17F988(v2 - 360);
    sub_23F17FAB4();
    sub_23F15E588(*(_QWORD *)(v2 - 72), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 216) + 8));
    sub_23F1A9590();
    swift_storeEnumTagMultiPayload();
    sub_23F1A9A6C(v1);
    sub_23F195980(v3, *(_QWORD *)(v2 - 240), type metadata accessor for SessionServerDebuggerEvent.Payload);
    JUMPOUT(0x23F1935A0);
  }
  sub_23F17FAB4();
  sub_23F15EAE0();
  JUMPOUT(0x23F193CE0);
}

void sub_23F193634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F1A9BA0();
  sub_23F1A91C8();
  sub_23F1A93D8();
  if (!v0)
  {
    v3 = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted(0);
    sub_23F125DE4(&qword_256E01870, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted);
    sub_23F1A9298();
    sub_23F1A9584();
    sub_23F17FF08(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 608) + 8));
    sub_23F17FAB4();
    sub_23F15E588(*(_QWORD *)(v2 - 72), *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F193E5CLL);
  }
  sub_23F17FAB4();
  sub_23F15EAE0();
  JUMPOUT(0x23F193CE0);
}

void sub_23F1936C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F1A9B68();
  v4 = *(_QWORD *)(v3 - 328);
  sub_23F1A9268();
  if (v1)
  {
    sub_23F17FAB4();
    sub_23F17FE50();
    JUMPOUT(0x23F193598);
  }
  sub_23F19BF80();
  sub_23F1A9338();
  sub_23F1A9CE4();
  sub_23F15E588(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F17FAB4();
  (*(void (**)(uint64_t, _QWORD))(v4 + 8))(v0, *(_QWORD *)(v3 - 200));
  sub_23F1A9998(*(_QWORD *)(v3 - 160), *(__n128 *)(v3 - 176));
  swift_storeEnumTagMultiPayload();
  sub_23F1A9A6C(v0, v5, type metadata accessor for SessionServerDebuggerEvent.Payload);
  JUMPOUT(0x23F193E60);
}

void sub_23F19370C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F1A9B38();
  v3 = *(_QWORD *)(v2 - 312);
  sub_23F1A9268();
  sub_23F1A93D8();
  if (!v1)
  {
    sub_23F19BF44();
    sub_23F1A9BDC();
    sub_23F1A9338();
    sub_23F1A9CE4();
    sub_23F17FF08(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 600) + 8));
    sub_23F17FAB4();
    sub_23F126038(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F1A9998(*(_QWORD *)(v2 - 160), *(__n128 *)(v2 - 176));
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23F193E5CLL);
  }
  sub_23F17FAB4();
  sub_23F15EAE0();
  JUMPOUT(0x23F193D34);
}

void sub_23F193858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F1A9B14();
  sub_23F1A91C8();
  sub_23F1A93D8();
  if (!v0)
  {
    v3 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
    sub_23F125DE4(&qword_256E01850, type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.CurrentTranscript);
    sub_23F1A9328();
    sub_23F1A9208();
    sub_23F1A9584();
    sub_23F17F988(v2 - 328);
    sub_23F17FAB4();
    sub_23F15E588(*(_QWORD *)(v2 - 72), *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F1A9590();
    swift_storeEnumTagMultiPayload();
    sub_23F1A9A6C(v1, v4, type metadata accessor for SessionServerDebuggerEvent.Payload);
    sub_23F195980(v3, *(_QWORD *)(v2 - 240), type metadata accessor for SessionServerDebuggerEvent.Payload);
    JUMPOUT(0x23F1935A0);
  }
  sub_23F17FAB4();
  sub_23F15EAE0();
  JUMPOUT(0x23F193D34);
}

void sub_23F1938E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F1A9AF0();
  sub_23F1A91C8();
  sub_23F1A93D8();
  if (!v0)
  {
    v3 = type metadata accessor for SessionServerDebuggerEvent.Synced(0);
    sub_23F125DE4(&qword_256E01848, type metadata accessor for SessionServerDebuggerEvent.Synced, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.Synced);
    sub_23F1A9328();
    sub_23F1A9208();
    sub_23F1A9584();
    sub_23F17F988(v2 - 320);
    sub_23F17FAB4();
    sub_23F15E588(*(_QWORD *)(v2 - 72), *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F1A9590();
    swift_storeEnumTagMultiPayload();
    sub_23F1A9A6C(v1, v4, type metadata accessor for SessionServerDebuggerEvent.Payload);
    sub_23F195980(v3, *(_QWORD *)(v2 - 240), type metadata accessor for SessionServerDebuggerEvent.Payload);
    JUMPOUT(0x23F1935A0);
  }
  sub_23F17FAB4();
  sub_23F15EAE0();
  JUMPOUT(0x23F193D34);
}

void sub_23F193970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F1A9AD8();
  sub_23F1A91C8();
  sub_23F1A93D8();
  if (!v0)
  {
    v3 = type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted(0);
    sub_23F125DE4(&qword_256E01840, type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.TranscriptReplacementAccepted);
    sub_23F1A9328();
    sub_23F1A9208();
    sub_23F1A9584();
    sub_23F17F988(v2 - 312);
    sub_23F17FAB4();
    sub_23F15E588(*(_QWORD *)(v2 - 72), *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F1A9590();
    swift_storeEnumTagMultiPayload();
    sub_23F1A9A6C(v1, v4, type metadata accessor for SessionServerDebuggerEvent.Payload);
    sub_23F195980(v3, *(_QWORD *)(v2 - 240), type metadata accessor for SessionServerDebuggerEvent.Payload);
    JUMPOUT(0x23F1935A0);
  }
  sub_23F17FAB4();
  sub_23F15EAE0();
  JUMPOUT(0x23F193D34);
}

void sub_23F1939FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F1A9AB4();
  sub_23F1A91C8();
  sub_23F1A93D8();
  if (!v0)
  {
    v3 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
    sub_23F125DE4(&qword_256E01838, type metadata accessor for SessionServerDebuggerEvent.RequestFailed, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.RequestFailed);
    sub_23F1A9328();
    sub_23F1A9208();
    sub_23F1A9584();
    sub_23F17F988(v2 - 304);
    sub_23F17FAB4();
    sub_23F15E588(*(_QWORD *)(v2 - 72), *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F1A9590();
    swift_storeEnumTagMultiPayload();
    sub_23F1A9A6C(v1, v4, type metadata accessor for SessionServerDebuggerEvent.Payload);
    sub_23F195980(v3, *(_QWORD *)(v2 - 240), type metadata accessor for SessionServerDebuggerEvent.Payload);
    JUMPOUT(0x23F1935A0);
  }
  sub_23F17FAB4();
  sub_23F15EAE0();
  JUMPOUT(0x23F193D34);
}

void sub_23F193A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F1A9CC4();
  sub_23F1A91C8();
  sub_23F1A93D8();
  if (!v0)
  {
    v3 = type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged(0);
    sub_23F125DE4(&qword_256E01830, type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.InjectionStateChanged);
    sub_23F1A9328();
    sub_23F1A9208();
    sub_23F1A9584();
    sub_23F17F988(v2 - 296);
    sub_23F17FAB4();
    sub_23F15E588(*(_QWORD *)(v2 - 72), *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F1A9590();
    swift_storeEnumTagMultiPayload();
    sub_23F1A9A6C(v1, v4, type metadata accessor for SessionServerDebuggerEvent.Payload);
    sub_23F195980(v3, *(_QWORD *)(v2 - 240), type metadata accessor for SessionServerDebuggerEvent.Payload);
    JUMPOUT(0x23F1935A0);
  }
  sub_23F17FAB4();
  sub_23F15EAE0();
  JUMPOUT(0x23F193D34);
}

void sub_23F193B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F1A9CB8();
  sub_23F1A91C8();
  sub_23F1A93D8();
  if (!v0)
  {
    v3 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
    sub_23F125DE4(&qword_256E01828, type metadata accessor for SessionServerDebuggerEvent.InjectionRequest, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.InjectionRequest);
    sub_23F1A9328();
    sub_23F1A9208();
    sub_23F1A9584();
    sub_23F17F988(v2 - 288);
    sub_23F17FAB4();
    sub_23F15E588(*(_QWORD *)(v2 - 72), *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F1A9590();
    swift_storeEnumTagMultiPayload();
    sub_23F1A9A6C(v1, v4, type metadata accessor for SessionServerDebuggerEvent.Payload);
    sub_23F195980(v3, *(_QWORD *)(v2 - 240), type metadata accessor for SessionServerDebuggerEvent.Payload);
    JUMPOUT(0x23F1935A0);
  }
  sub_23F17FAB4();
  sub_23F15EAE0();
  JUMPOUT(0x23F193D34);
}

void sub_23F193BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F1A9CAC();
  sub_23F1A9268();
  sub_23F1A93D8();
  if (v0)
    JUMPOUT(0x23F193BD0);
  v2 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
  sub_23F125DE4(&qword_256E01820, type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.InjectionResponseAccepted);
  sub_23F1A9328();
  sub_23F1A9208();
  sub_23F1A9584();
  sub_23F17F988(v1 - 280);
  sub_23F17FAB4();
  sub_23F15E588(*(_QWORD *)(v1 - 72), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F1A9590();
  JUMPOUT(0x23F193E4CLL);
}

void sub_23F193BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  sub_23F1A9C54();
  v4 = *(_QWORD *)(v3 - 248);
  sub_23F1A9268();
  sub_23F1A93D8();
  if (v1)
    JUMPOUT(0x23F193C10);
  sub_23F19BF08();
  sub_23F1A9BDC();
  sub_23F1A9298();
  sub_23F1A9CE4();
  sub_23F17FF08(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F17FAB4();
  sub_23F126038(v0, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  v5 = *(_QWORD *)(v3 - 144);
  v6 = *(_QWORD *)(v3 - 120);
  v7 = *(_QWORD *)(v3 - 112);
  v8 = *(_OWORD *)(v3 - 160);
  v9 = *(_QWORD *)(v3 - 632);
  *(_OWORD *)v9 = *(_OWORD *)(v3 - 176);
  *(_OWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 32) = v5;
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v3 - 136);
  *(_QWORD *)(v9 + 56) = v6;
  *(_QWORD *)(v9 + 64) = v7;
  *(_OWORD *)(v9 + 72) = *(_OWORD *)(v3 - 104);
  JUMPOUT(0x23F193ED0);
}

void sub_23F193EE4()
{
  SessionServerDebuggerEvent.Payload.init(from:)();
}

#error "23F193F00: call analysis failed (funcsize=5)"

uint64_t (*SessionClientDebuggerEvent.EnableDeferredTransactions.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F193F30()
{
  sub_23F19BFBC();
  return sub_23F2688B8();
}

uint64_t sub_23F193F58()
{
  sub_23F19BFBC();
  return sub_23F2688C4();
}

void SessionClientDebuggerEvent.EnableDeferredTransactions.encode(to:)()
{
  uint64_t v0;

  sub_23F1A9358();
  sub_23F1A92A4();
  sub_23F1217E8(&qword_256E01888);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F17F9B8();
  sub_23F19BFBC();
  sub_23F18A998();
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F1A919C();
  sub_23F1A91E4();
  sub_23F1A93B4();
  sub_23F18AB98();
}

void SessionClientDebuggerEvent.EnableDeferredTransactions.init(from:)()
{
  sub_23F199B78();
}

void sub_23F194054()
{
  SessionClientDebuggerEvent.EnableDeferredTransactions.init(from:)();
}

void sub_23F194068()
{
  SessionClientDebuggerEvent.EnableDeferredTransactions.encode(to:)();
}

uint64_t (*SessionClientDebuggerEvent.DisableDeferredTransactions.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1940A0()
{
  sub_23F19BFF8();
  return sub_23F2688B8();
}

uint64_t sub_23F1940C8()
{
  sub_23F19BFF8();
  return sub_23F2688C4();
}

void SessionClientDebuggerEvent.DisableDeferredTransactions.encode(to:)()
{
  uint64_t v0;

  sub_23F1A9358();
  sub_23F1A92A4();
  sub_23F1217E8(&qword_256E018A0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F17F9B8();
  sub_23F19BFF8();
  sub_23F18A998();
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F1A919C();
  sub_23F1A91E4();
  sub_23F1A93B4();
  sub_23F18AB98();
}

void SessionClientDebuggerEvent.DisableDeferredTransactions.init(from:)()
{
  sub_23F199B78();
}

void sub_23F1941C4()
{
  SessionClientDebuggerEvent.DisableDeferredTransactions.init(from:)();
}

void sub_23F1941D8()
{
  SessionClientDebuggerEvent.DisableDeferredTransactions.encode(to:)();
}

uint64_t (*SessionClientDebuggerEvent.PostDeferredTransaction.id.modify())()
{
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.eventsData.getter()
{
  return sub_23F195020((void (*)(_QWORD))type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction);
}

void SessionClientDebuggerEvent.PostDeferredTransaction.eventsData.setter(uint64_t a1)
{
  sub_23F195050(a1, type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction);
}

uint64_t (*SessionClientDebuggerEvent.PostDeferredTransaction.eventsData.modify())()
{
  sub_23F1A96E8();
  sub_23F180384();
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.spanId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + *(int *)(type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0) + 24));
}

void SessionClientDebuggerEvent.PostDeferredTransaction.spanId.setter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + *(int *)(sub_23F1A9790() + 24)) = v0;
  sub_23F126078();
}

uint64_t (*SessionClientDebuggerEvent.PostDeferredTransaction.spanId.modify())()
{
  type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
  sub_23F18030C();
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.queryEventId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23F1A9744();
  v3 = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(v2);
  return sub_23F1A9824(v1 + *(int *)(v3 + 28), v0);
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.queryEventId.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F1A9790();
  sub_23F1A9AFC();
  return sub_23F1A981C(v0, v1);
}

uint64_t (*SessionClientDebuggerEvent.PostDeferredTransaction.queryEventId.modify())()
{
  type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
  sub_23F1A9AFC();
  return nullsub_1;
}

void SessionClientDebuggerEvent.PostDeferredTransaction.clientRequestId.getter()
{
  type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionClientDebuggerEvent.PostDeferredTransaction.clientRequestId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_23F1A9A44();
  type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(v3);
  sub_23F1A95D8();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*SessionClientDebuggerEvent.PostDeferredTransaction.clientRequestId.modify())()
{
  type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.participantSpans.getter()
{
  type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
  return swift_bridgeObjectRetain();
}

void SessionClientDebuggerEvent.PostDeferredTransaction.participantSpans.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_23F1A96E8() + 36);
  sub_23F1A98B8();
  *(_QWORD *)(v1 + v3) = a1;
  sub_23F12612C();
}

uint64_t (*SessionClientDebuggerEvent.PostDeferredTransaction.participantSpans.modify())()
{
  type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.init(id:eventsData:spanId:queryEventId:clientRequestId:participantSpans:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;

  v15 = (int *)sub_23F1A96E8();
  v16 = a8 + v15[7];
  v17 = sub_23F131B8C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v16, 1, 1, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a8, a1, v17);
  *(_QWORD *)(a8 + v15[5]) = a2;
  *(_QWORD *)(a8 + v15[6]) = a3;
  result = sub_23F1751F8(a4, v16);
  v19 = (_QWORD *)(a8 + v15[8]);
  *v19 = a5;
  v19[1] = a6;
  *(_QWORD *)(a8 + v15[9]) = a7;
  return result;
}

uint64_t sub_23F1944DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v10;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x614473746E657665 && a2 == 0xEA00000000006174;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x64496E617073 && a2 == 0xE600000000000000;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6576457972657571 && a2 == 0xEC0000006449746ELL;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
          if (v9 || (sub_23F268798() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000010 && a2 == 0x800000023F294060)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = sub_23F268798();
            swift_bridgeObjectRelease();
            if ((v10 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_23F194770(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F194798 + 4 * byte_23F27214E[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23F194798()
{
  return 0x614473746E657665;
}

uint64_t sub_23F1947B4()
{
  return 0x64496E617073;
}

uint64_t sub_23F1947C8()
{
  return 0x6576457972657571;
}

uint64_t sub_23F1947E8()
{
  return 0x6552746E65696C63;
}

unint64_t sub_23F19480C()
{
  return 0xD000000000000010;
}

uint64_t sub_23F194828()
{
  unsigned __int8 *v0;

  return sub_23F194770(*v0);
}

uint64_t sub_23F194830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1944DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F194854()
{
  sub_23F19C034();
  return sub_23F2688B8();
}

uint64_t sub_23F19487C()
{
  sub_23F19C034();
  return sub_23F2688C4();
}

void SessionClientDebuggerEvent.PostDeferredTransaction.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_23F131874();
  sub_23F1A9A7C();
  sub_23F1217E8(&qword_256E018B8);
  sub_23F17FAC4();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F19C034();
  sub_23F18A998();
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F1315CC();
  if (!v0)
  {
    v5 = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
    v7 = 1;
    sub_23F1217E8(&qword_256E018C8);
    sub_23F19C070(&qword_256E018D0, (uint64_t (*)(void))sub_23F146B94, MEMORY[0x24BEE12A0]);
    sub_23F1315CC();
    sub_23F1A95C8();
    sub_23F268714();
    sub_23F1A9BF4(*(int *)(v5 + 32));
    sub_23F1A931C();
    v7 = 5;
    sub_23F1217E8(&qword_256E018D8);
    sub_23F19C0CC(&qword_256E018E0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4570], MEMORY[0x24BEE04C0]);
    sub_23F1315CC();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F1313FC();
}

void SessionClientDebuggerEvent.PostDeferredTransaction.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char v46;

  sub_23F131874();
  v45 = v10;
  v13 = v12;
  v38[1] = v14;
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F131B8C();
  v39 = *(_QWORD *)(v18 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F1316E4();
  v40 = sub_23F1217E8(&qword_256E018E8);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F1A9864();
  type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(v21);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F1A9A1C();
  v42 = v23;
  v43 = v24 + v23[7];
  v44 = v24;
  sub_23F1A9960(v43);
  v25 = v13[3];
  v41 = v13;
  sub_23F12545C(v13, v25);
  sub_23F19C034();
  v26 = v45;
  sub_23F268888();
  if (v26)
  {
    v27 = v43;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v41);
    sub_23F125E40(v27, &qword_256DFEB98);
  }
  else
  {
    v45 = v17;
    LOBYTE(a10) = 0;
    sub_23F125DE4(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23F1A990C();
    sub_23F1A97E4();
    v28 = v44;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v44, v11, v18);
    sub_23F1217E8(&qword_256E018C8);
    v46 = 1;
    sub_23F19C070(&qword_256E018F0, (uint64_t (*)(void))sub_23F146AE4, MEMORY[0x24BEE12D0]);
    sub_23F1A97E4();
    v29 = v42;
    *(_QWORD *)(v28 + v42[5]) = a10;
    sub_23F1A9B74(2);
    v30 = sub_23F2686CC();
    v31 = v43;
    *(_QWORD *)(v28 + v29[6]) = v30;
    LOBYTE(a10) = 3;
    v32 = (uint64_t)v45;
    sub_23F1A990C();
    sub_23F268678();
    sub_23F1751F8(v32, v31);
    sub_23F1A9B74(4);
    v33 = sub_23F268684();
    v34 = (uint64_t *)(v28 + v29[8]);
    *v34 = v33;
    v34[1] = v35;
    sub_23F1217E8(&qword_256E018D8);
    v46 = 5;
    sub_23F19C0CC(&qword_256E018F8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE4598], MEMORY[0x24BEE04E0]);
    sub_23F1A97E4();
    sub_23F1A9398();
    *(_QWORD *)(v28 + v29[9]) = a10;
    v36 = sub_23F1A945C();
    sub_23F1A9614(v36, v37);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v41);
    sub_23F1A95E4(v28);
  }
  sub_23F1313FC();
}

void sub_23F194E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  SessionClientDebuggerEvent.PostDeferredTransaction.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F194E80()
{
  SessionClientDebuggerEvent.PostDeferredTransaction.encode(to:)();
}

uint64_t (*SessionClientDebuggerEvent.RequestCurrentTranscript.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F194EB0()
{
  sub_23F19C124();
  return sub_23F2688B8();
}

uint64_t sub_23F194ED8()
{
  sub_23F19C124();
  return sub_23F2688C4();
}

void SessionClientDebuggerEvent.RequestCurrentTranscript.encode(to:)()
{
  uint64_t v0;

  sub_23F1A9358();
  sub_23F1A92A4();
  sub_23F1217E8(&qword_256E01900);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F17F9B8();
  sub_23F19C124();
  sub_23F18A998();
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F1A919C();
  sub_23F1A91E4();
  sub_23F1A93B4();
  sub_23F18AB98();
}

void SessionClientDebuggerEvent.RequestCurrentTranscript.init(from:)()
{
  sub_23F199B78();
}

void sub_23F194FD4()
{
  SessionClientDebuggerEvent.RequestCurrentTranscript.init(from:)();
}

void sub_23F194FE8()
{
  SessionClientDebuggerEvent.RequestCurrentTranscript.encode(to:)();
}

uint64_t (*SessionClientDebuggerEvent.ReplaceCurrentTranscript.id.modify())()
{
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.ReplaceCurrentTranscript.eventData.getter()
{
  return sub_23F195020((void (*)(_QWORD))type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript);
}

uint64_t sub_23F195020(void (*a1)(_QWORD))
{
  a1(0);
  return swift_bridgeObjectRetain();
}

void SessionClientDebuggerEvent.ReplaceCurrentTranscript.eventData.setter(uint64_t a1)
{
  sub_23F195050(a1, type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript);
}

void sub_23F195050(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(int *)(sub_23F17FB78(a1, a2) + 20);
  sub_23F1A98B8();
  *(_QWORD *)(v3 + v4) = v2;
  sub_23F12612C();
}

uint64_t (*SessionClientDebuggerEvent.ReplaceCurrentTranscript.eventData.modify())()
{
  type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
  sub_23F180384();
  return nullsub_1;
}

void SessionClientDebuggerEvent.ReplaceCurrentTranscript.init(id:eventData:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23F197E74(a1, a2, type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript, a3);
}

uint64_t sub_23F1950A8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746144746E657665;
  else
    return 25705;
}

uint64_t sub_23F1950D8()
{
  char *v0;

  return sub_23F1950A8(*v0);
}

void sub_23F1950E0(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F197EBC(a1, a2);
  *a3 = v4;
}

uint64_t sub_23F195104()
{
  sub_23F19C160();
  return sub_23F2688B8();
}

uint64_t sub_23F19512C()
{
  sub_23F19C160();
  return sub_23F2688C4();
}

void SessionClientDebuggerEvent.ReplaceCurrentTranscript.encode(to:)()
{
  sub_23F198010();
}

void SessionClientDebuggerEvent.ReplaceCurrentTranscript.init(from:)()
{
  sub_23F19817C();
}

void sub_23F1951BC()
{
  SessionClientDebuggerEvent.ReplaceCurrentTranscript.init(from:)();
}

void sub_23F1951D0()
{
  SessionClientDebuggerEvent.ReplaceCurrentTranscript.encode(to:)();
}

uint64_t (*SessionClientDebuggerEvent.Sync.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F195204()
{
  sub_23F19C19C();
  return sub_23F2688B8();
}

uint64_t sub_23F19522C()
{
  sub_23F19C19C();
  return sub_23F2688C4();
}

void SessionClientDebuggerEvent.Sync.encode(to:)()
{
  uint64_t v0;

  sub_23F1A9358();
  sub_23F1A92A4();
  sub_23F1217E8(&qword_256E01930);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F17F9B8();
  sub_23F19C19C();
  sub_23F18A998();
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F1A919C();
  sub_23F1A91E4();
  sub_23F1A93B4();
  sub_23F18AB98();
}

void SessionClientDebuggerEvent.Sync.init(from:)()
{
  sub_23F199B78();
}

void sub_23F195328()
{
  SessionClientDebuggerEvent.Sync.init(from:)();
}

void sub_23F19533C()
{
  SessionClientDebuggerEvent.Sync.encode(to:)();
}

uint64_t sub_23F195350()
{
  sub_23F19C1D8();
  return sub_23F2688B8();
}

uint64_t sub_23F195378()
{
  sub_23F19C1D8();
  return sub_23F2688C4();
}

void SessionClientDebuggerEvent.TerminateSession.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_23F1217E8(&qword_256E01948);
  sub_23F126210();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F15E50C();
  sub_23F1A9374(a1, a1[3]);
  sub_23F19C1D8();
  sub_23F1A99DC();
  sub_23F15E588(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F1A93B4();
}

uint64_t SessionClientDebuggerEvent.TerminateSession.init(from:)(uint64_t a1)
{
  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(a1);
}

uint64_t sub_23F195458(uint64_t a1)
{
  return SessionClientDebuggerEvent.TerminateSession.init(from:)(a1);
}

void sub_23F19546C(_QWORD *a1)
{
  SessionClientDebuggerEvent.TerminateSession.encode(to:)(a1);
}

uint64_t (*SessionClientDebuggerEvent.EnableInjection.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F19549C()
{
  return 25705;
}

void sub_23F1954A8(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F1999F4(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F1954D0()
{
  sub_23F19C214();
  return sub_23F2688B8();
}

uint64_t sub_23F1954F8()
{
  sub_23F19C214();
  return sub_23F2688C4();
}

void SessionClientDebuggerEvent.EnableInjection.encode(to:)()
{
  uint64_t v0;

  sub_23F1A9358();
  sub_23F1A92A4();
  sub_23F1217E8(&qword_256E01958);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F17F9B8();
  sub_23F19C214();
  sub_23F18A998();
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F1A919C();
  sub_23F1A91E4();
  sub_23F1A93B4();
  sub_23F18AB98();
}

void SessionClientDebuggerEvent.EnableInjection.init(from:)()
{
  sub_23F199B78();
}

void sub_23F1955F4()
{
  SessionClientDebuggerEvent.EnableInjection.init(from:)();
}

void sub_23F195608()
{
  SessionClientDebuggerEvent.EnableInjection.encode(to:)();
}

uint64_t (*SessionClientDebuggerEvent.DisableInjection.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F195638()
{
  sub_23F19C250();
  return sub_23F2688B8();
}

uint64_t sub_23F195660()
{
  sub_23F19C250();
  return sub_23F2688C4();
}

void SessionClientDebuggerEvent.DisableInjection.encode(to:)()
{
  uint64_t v0;

  sub_23F1A9358();
  sub_23F1A92A4();
  sub_23F1217E8(&qword_256E01970);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F17F9B8();
  sub_23F19C250();
  sub_23F18A998();
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F1A919C();
  sub_23F1A91E4();
  sub_23F1A93B4();
  sub_23F18AB98();
}

void SessionClientDebuggerEvent.DisableInjection.init(from:)()
{
  sub_23F199B78();
}

void sub_23F19575C()
{
  SessionClientDebuggerEvent.DisableInjection.init(from:)();
}

void sub_23F195770()
{
  SessionClientDebuggerEvent.DisableInjection.encode(to:)();
}

uint64_t (*SessionClientDebuggerEvent.InjectionResponse.id.modify())()
{
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.InjectionResponse.injectionRequestId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = sub_23F1A9744();
  type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(v0);
  sub_23F131B8C();
  v1 = sub_23F1317E0();
  return sub_23F126180(v1, v2, v3, v4);
}

uint64_t SessionClientDebuggerEvent.InjectionResponse.injectionRequestId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
  sub_23F131B8C();
  v0 = sub_23F17FB54();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t (*SessionClientDebuggerEvent.InjectionResponse.injectionRequestId.modify())()
{
  type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
  sub_23F180384();
  return nullsub_1;
}

void SessionClientDebuggerEvent.InjectionResponse.responseData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
  sub_23F159FE4(*(_QWORD *)(v0 + *(int *)(v1 + 24)), *(_QWORD *)(v0 + *(int *)(v1 + 24) + 8));
  sub_23F1317E0();
  sub_23F126078();
}

void SessionClientDebuggerEvent.InjectionResponse.responseData.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23F1A9A44();
  v4 = v1 + *(int *)(type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(v3) + 24);
  sub_23F159FD0(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = v0;
  sub_23F12612C();
}

uint64_t (*SessionClientDebuggerEvent.InjectionResponse.responseData.modify())()
{
  type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
  sub_23F18030C();
  return nullsub_1;
}

void SessionClientDebuggerEvent.InjectionResponse.init(id:injectionRequestId:responseData:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  sub_23F125F3C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_23F1A9A64();
  v11 = (_QWORD *)(v9 + *(int *)(v10 + 24));
  v12 = sub_23F131B8C();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v9, v7, v12);
  v13(v9 + *(int *)(v10 + 20), v5, v12);
  *v11 = v3;
  v11[1] = v1;
  sub_23F125EFC();
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E02360);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.Payload(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E01D98);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E01FF0);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E02488);
}

void sub_23F195980(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_23F1261F8(a1, a2, a3);
  sub_23F126138(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  sub_23F126078();
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.DisableInjection(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E022D0);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.EnableInjection(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E02240);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.Sync(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E021B0);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E02120);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.RequestCurrentTranscript(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E02090);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.DisableDeferredTransactions(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E01F60);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E01ED0);
}

unint64_t sub_23F195A3C()
{
  unint64_t result;

  result = qword_256E01440;
  if (!qword_256E01440)
  {
    result = MEMORY[0x242667160](&unk_23F277A9C, &type metadata for SessionClientDebuggerEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01440);
  }
  return result;
}

uint64_t type metadata accessor for SessionClientDebuggerEvent(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E01C60);
}

void sub_23F195A8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_23F1261F8(a1, a2, a3);
  sub_23F126138(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  sub_23F126078();
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.Payload(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E01E40);
}

void sub_23F195AD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  sub_23F1261F8(a1, a2, a3);
  sub_23F1A99FC();
  sub_23F126138(v3, v4);
  sub_23F126078();
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E029C8);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E02890);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.RequestFailed(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E02800);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E02770);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.Synced(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E026E0);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E02650);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E025B8);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E02528);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E023F8);
}

uint64_t sub_23F195BAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023F294080 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F195CF4(char a1)
{
  if (!a1)
    return 25705;
  if (a1 == 1)
    return 0xD000000000000012;
  return 0x65736E6F70736572;
}

uint64_t sub_23F195D4C()
{
  char *v0;

  return sub_23F195CF4(*v0);
}

uint64_t sub_23F195D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F195BAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F195D78()
{
  sub_23F19C28C();
  return sub_23F2688B8();
}

uint64_t sub_23F195DA0()
{
  sub_23F19C28C();
  return sub_23F2688C4();
}

void SessionClientDebuggerEvent.InjectionResponse.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v7;

  sub_23F131874();
  sub_23F1A9340();
  sub_23F1217E8(&qword_256E01988);
  sub_23F17FAC4();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F19C28C();
  sub_23F18A998();
  LOBYTE(v7) = 0;
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F17F99C();
  if (!v0)
  {
    v6 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
    LOBYTE(v7) = 1;
    sub_23F17F99C();
    v7 = *(_OWORD *)(v1 + *(int *)(v6 + 24));
    sub_23F146B94();
    sub_23F1A9624();
    sub_23F268714();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F1313FC();
}

void SessionClientDebuggerEvent.InjectionResponse.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(uint64_t, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;

  sub_23F131874();
  v33 = (_QWORD *)v0;
  v5 = v4;
  v27 = v6;
  v7 = sub_23F131B8C();
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F1A98C0();
  MEMORY[0x24BDAC7A8](v9);
  v30 = (char *)&v25 - v10;
  v11 = sub_23F1217E8(&qword_256E01998);
  v12 = sub_23F1A9D10(v11);
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F15E9EC();
  v14 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(v13);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F1316E4();
  v32 = v1 + *(int *)(v16 + 24);
  *(_OWORD *)v32 = xmmword_23F26AB50;
  sub_23F1A968C(v5);
  sub_23F19C28C();
  v31 = v3;
  v17 = (uint64_t)v33;
  sub_23F268888();
  if (v17)
  {
    sub_23F1A95EC();
    sub_23F159FD0(*(_QWORD *)v32, *(_QWORD *)(v32 + 8));
  }
  else
  {
    v18 = v2;
    v26 = v14;
    v33 = v5;
    LOBYTE(v34) = 0;
    sub_23F125DE4(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v19 = v29;
    sub_23F1A9750();
    v20 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
    v25 = v1;
    v20(v1, v30, v19);
    LOBYTE(v34) = 1;
    sub_23F1A9750();
    v20(v25 + *(int *)(v26 + 20), v18, v19);
    sub_23F1A9AA0(2);
    sub_23F268678();
    sub_23F1A9924();
    v21 = v34;
    v22 = v35;
    v23 = (_QWORD *)v32;
    sub_23F159FD0(*(_QWORD *)v32, *(_QWORD *)(v32 + 8));
    *v23 = v21;
    v23[1] = v22;
    v24 = v25;
    sub_23F1A9614(v25, v27);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v33);
    sub_23F1A95E4(v24);
  }
  sub_23F1313FC();
}

void sub_23F1961C0()
{
  SessionClientDebuggerEvent.InjectionResponse.init(from:)();
}

void sub_23F1961D4()
{
  SessionClientDebuggerEvent.InjectionResponse.encode(to:)();
}

uint64_t (*SessionServerDebuggerEvent.DeferredTransactionStateChanged.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F196208()
{
  sub_23F19C2C8();
  return sub_23F2688B8();
}

uint64_t sub_23F196230()
{
  sub_23F19C2C8();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.DeferredTransactionStateChanged.encode(to:)()
{
  uint64_t v0;

  sub_23F1A9358();
  sub_23F1A92A4();
  sub_23F1217E8(&qword_256E019A0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F17F9B8();
  sub_23F19C2C8();
  sub_23F18A998();
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F1A919C();
  sub_23F1A91E4();
  sub_23F1A93B4();
  sub_23F18AB98();
}

void SessionServerDebuggerEvent.DeferredTransactionStateChanged.init(from:)()
{
  sub_23F199B78();
}

void sub_23F19632C()
{
  SessionServerDebuggerEvent.DeferredTransactionStateChanged.init(from:)();
}

void sub_23F196340()
{
  SessionServerDebuggerEvent.DeferredTransactionStateChanged.encode(to:)();
}

uint64_t (*SessionServerDebuggerEvent.DeferredTransactionReady.eventsData.modify())()
{
  return nullsub_1;
}

uint64_t (*SessionServerDebuggerEvent.DeferredTransactionReady.spanId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.DeferredTransactionReady.queryEventId.getter()
{
  return sub_23F197528();
}

uint64_t SessionServerDebuggerEvent.DeferredTransactionReady.queryEventId.setter(uint64_t a1)
{
  return sub_23F197560(a1, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady);
}

uint64_t (*SessionServerDebuggerEvent.DeferredTransactionReady.queryEventId.modify())()
{
  sub_23F1A96E0();
  sub_23F18030C();
  return nullsub_1;
}

void SessionServerDebuggerEvent.DeferredTransactionReady.clientRequestId.getter()
{
  type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionServerDebuggerEvent.DeferredTransactionReady.clientRequestId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_23F1A9A44();
  type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(v3);
  sub_23F1A95D8();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.DeferredTransactionReady.clientRequestId.modify())()
{
  type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
  sub_23F1A9AFC();
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.DeferredTransactionReady.participantSpans.getter()
{
  type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
  return swift_bridgeObjectRetain();
}

void SessionServerDebuggerEvent.DeferredTransactionReady.participantSpans.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_23F1A96E0() + 32);
  sub_23F1A98B8();
  *(_QWORD *)(v1 + v3) = a1;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.DeferredTransactionReady.participantSpans.modify())()
{
  type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
  return nullsub_1;
}

void SessionServerDebuggerEvent.DeferredTransactionReady.init(eventsData:spanId:queryEventId:clientRequestId:participantSpans:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  sub_23F125F3C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = (int *)sub_23F1A96E0();
  v15 = (uint64_t)v13 + v14[6];
  v16 = sub_23F131B8C();
  sub_23F126158(v15, v17, v18, v16);
  *v13 = v11;
  v13[1] = v9;
  sub_23F1751F8(v7, v15);
  v19 = (_QWORD *)((char *)v13 + v14[7]);
  *v19 = v5;
  v19[1] = v3;
  *(_QWORD *)((char *)v13 + v14[8]) = v1;
  sub_23F125EFC();
}

uint64_t sub_23F19651C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 0x614473746E657665 && a2 == 0xEA00000000006174;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x64496E617073 && a2 == 0xE600000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6576457972657571 && a2 == 0xEC0000006449746ELL;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
        if (v8 || (sub_23F268798() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x800000023F294060)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = sub_23F268798();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_23F196768(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F1967A0 + 4 * byte_23F272154[a1]))(0x614473746E657665, 0xEA00000000006174);
}

uint64_t sub_23F1967A0()
{
  return 0x64496E617073;
}

uint64_t sub_23F1967B4()
{
  return 0x6576457972657571;
}

uint64_t sub_23F1967D4()
{
  return 0x6552746E65696C63;
}

unint64_t sub_23F1967F8()
{
  return 0xD000000000000010;
}

uint64_t sub_23F196814()
{
  unsigned __int8 *v0;

  return sub_23F196768(*v0);
}

uint64_t sub_23F19681C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F19651C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F196840()
{
  sub_23F19C304();
  return sub_23F2688B8();
}

uint64_t sub_23F196868()
{
  sub_23F19C304();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.DeferredTransactionReady.encode(to:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F1A9358();
  sub_23F1A9A7C();
  sub_23F1217E8(&qword_256E019B8);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F19C304();
  sub_23F18A998();
  v8 = *v1;
  HIBYTE(v7) = 0;
  sub_23F1217E8(&qword_256E018C8);
  sub_23F19C070(&qword_256E018D0, (uint64_t (*)(void))sub_23F146B94, MEMORY[0x24BEE12A0]);
  sub_23F1315CC();
  if (!v0)
  {
    LOBYTE(v8) = 1;
    sub_23F1A95C8();
    v6 = sub_23F1A96E0();
    LOBYTE(v8) = 2;
    sub_23F131B8C();
    sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23F1A97F8();
    sub_23F268714();
    sub_23F1A9BF4(*(int *)(v6 + 28));
    LOBYTE(v8) = 3;
    sub_23F1A931C();
    v8 = *(uint64_t *)((char *)v1 + *(int *)(v6 + 32));
    HIBYTE(v7) = 4;
    sub_23F1217E8(&qword_256E018D8);
    sub_23F19C0CC(&qword_256E018E0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4570], MEMORY[0x24BEE04C0]);
    sub_23F1315CC();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F18AB98();
}

void SessionServerDebuggerEvent.DeferredTransactionReady.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  sub_23F131874();
  v14 = v13;
  v26 = v15;
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F15E524();
  sub_23F1217E8(&qword_256E019C8);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F126058();
  sub_23F1A96E0();
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F1A9A1C();
  v27 = v19;
  v28 = v20;
  v21 = (uint64_t)v20 + *(int *)(v19 + 24);
  v22 = sub_23F131B8C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v21, 1, 1, v22);
  sub_23F12545C(v14, v14[3]);
  sub_23F19C304();
  sub_23F1A9814();
  if (v11)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v14);
    sub_23F125E40(v21, &qword_256DFEB98);
  }
  else
  {
    sub_23F1217E8(&qword_256E018C8);
    sub_23F19C070(&qword_256E018F0, (uint64_t (*)(void))sub_23F146AE4, MEMORY[0x24BEE12D0]);
    sub_23F131BD4();
    sub_23F17FE68();
    *v28 = a10;
    sub_23F1A98D0(1);
    v28[1] = sub_23F2686CC();
    LOBYTE(a10) = 2;
    sub_23F125DE4(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23F268678();
    sub_23F1751F8(v10, v21);
    sub_23F1A98D0(3);
    v23 = sub_23F268684();
    v24 = (_QWORD *)((char *)v28 + *(int *)(v27 + 28));
    *v24 = v23;
    v24[1] = v25;
    sub_23F1217E8(&qword_256E018D8);
    sub_23F19C0CC(&qword_256E018F8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE4598], MEMORY[0x24BEE04E0]);
    sub_23F131BD4();
    sub_23F17FE68();
    sub_23F15E3E0(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    *(_QWORD *)((char *)v28 + *(int *)(v27 + 32)) = a10;
    sub_23F1A9614((uint64_t)v28, v26);
    sub_23F1A9970();
    sub_23F1A95E4((uint64_t)v28);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F196D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  SessionServerDebuggerEvent.DeferredTransactionReady.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F196D9C()
{
  SessionServerDebuggerEvent.DeferredTransactionReady.encode(to:)();
}

uint64_t (*SessionServerDebuggerEvent.DeferredTransactionPostAccepted.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F196DD0()
{
  sub_23F19C340();
  return sub_23F2688B8();
}

uint64_t sub_23F196DF8()
{
  sub_23F19C340();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.DeferredTransactionPostAccepted.encode(to:)()
{
  uint64_t v0;

  sub_23F1A9358();
  sub_23F1A92A4();
  sub_23F1217E8(&qword_256E019D0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F17F9B8();
  sub_23F19C340();
  sub_23F18A998();
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F1A919C();
  sub_23F1A91E4();
  sub_23F1A93B4();
  sub_23F18AB98();
}

void SessionServerDebuggerEvent.DeferredTransactionPostAccepted.init(from:)()
{
  sub_23F199B78();
}

void sub_23F196EF4()
{
  SessionServerDebuggerEvent.DeferredTransactionPostAccepted.init(from:)();
}

void sub_23F196F08()
{
  SessionServerDebuggerEvent.DeferredTransactionPostAccepted.encode(to:)();
}

uint64_t (*SessionServerDebuggerEvent.SpanStarted.spanId.modify())()
{
  return nullsub_1;
}

void SessionServerDebuggerEvent.SpanStarted.participant.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionServerDebuggerEvent.SpanStarted.participant.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F1A9604();
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v0;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.SpanStarted.participant.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.SpanStarted.init(spanId:participant:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_23F196F94(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7069636974726170;
  else
    return 0x64496E617073;
}

uint64_t sub_23F196FD0()
{
  char *v0;

  return sub_23F196F94(*v0);
}

void sub_23F196FD8(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F19711C(a1, a2);
  *a3 = v4;
}

uint64_t sub_23F196FFC()
{
  sub_23F19C37C();
  return sub_23F2688B8();
}

uint64_t sub_23F197024()
{
  sub_23F19C37C();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.SpanStarted.encode(to:)()
{
  sub_23F197284();
}

void SessionServerDebuggerEvent.SpanStarted.init(from:)()
{
  sub_23F197390();
}

void sub_23F1970A4()
{
  SessionServerDebuggerEvent.SpanStarted.init(from:)();
}

void sub_23F1970B8()
{
  SessionServerDebuggerEvent.SpanStarted.encode(to:)();
}

uint64_t sub_23F1970D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SessionServerDebuggerEvent.SpanStarted.id.getter();
  *a1 = result;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.SpanEnded.spanId.modify())()
{
  return nullsub_1;
}

uint64_t (*SessionServerDebuggerEvent.SpanEnded.participant.modify())()
{
  return nullsub_1;
}

void sub_23F19711C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v5;

  v2 = a1 == 0x64496E617073 && a2 == 0xE600000000000000;
  if (v2
    || (sub_23F126148() & 1) != 0
    || (a1 == 0x7069636974726170 ? (v5 = a2 == 0xEB00000000746E61) : (v5 = 0), v5))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F197208()
{
  sub_23F19C3B8();
  return sub_23F2688B8();
}

uint64_t sub_23F197230()
{
  sub_23F19C3B8();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.SpanEnded.encode(to:)()
{
  sub_23F197284();
}

void sub_23F197284()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD *);
  void (*v3)(_QWORD *);
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  sub_23F131874();
  v3 = v2;
  v5 = (_QWORD *)v4;
  v9 = *(_QWORD *)(sub_23F1A9D7C(v4, v6) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F1319C8();
  v8 = sub_23F1A9374(v5, v5[3]);
  v3(v8);
  sub_23F1A9CA0();
  sub_23F268768();
  if (!v0)
  {
    sub_23F1A9BB8();
    sub_23F268720();
  }
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  sub_23F1A9634();
  sub_23F1313FC();
}

void SessionServerDebuggerEvent.SpanEnded.init(from:)()
{
  sub_23F197390();
}

void sub_23F197390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD *);
  void (*v4)(_QWORD *);
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;

  sub_23F131874();
  v4 = v3;
  v6 = (_QWORD *)v5;
  v15 = v7;
  sub_23F1A9D7C(v5, v8);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F126058();
  v10 = sub_23F1A9374(v6, v6[3]);
  v4(v10);
  sub_23F268888();
  if (!v0)
  {
    v11 = sub_23F2686CC();
    v12 = sub_23F268684();
    v14 = v13;
    sub_23F1A977C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *v15 = v11;
    v15[1] = v12;
    v15[2] = v14;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v6);
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F1974A0()
{
  SessionServerDebuggerEvent.SpanEnded.init(from:)();
}

void sub_23F1974B4()
{
  SessionServerDebuggerEvent.SpanEnded.encode(to:)();
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

void SessionServerDebuggerEvent.FinalTransactionPosted.eventData.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  sub_23F126078();
}

uint64_t (*SessionServerDebuggerEvent.FinalTransactionPosted.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.spanId.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.FinalTransactionPosted.spanId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.queryEventId.getter()
{
  return sub_23F197528();
}

uint64_t sub_23F197528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  v2 = sub_23F1A9744();
  v4 = v3(v2);
  return sub_23F1A9824(v1 + *(int *)(v4 + 24), v0);
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.queryEventId.setter(uint64_t a1)
{
  return sub_23F197560(a1, type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted);
}

uint64_t sub_23F197560(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;

  sub_23F17FB78(a1, a2);
  sub_23F18030C();
  return sub_23F1A981C(v2, v3);
}

uint64_t (*SessionServerDebuggerEvent.FinalTransactionPosted.queryEventId.modify())()
{
  sub_23F1A988C();
  sub_23F18030C();
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.participantSpans.getter()
{
  type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
  return swift_bridgeObjectRetain();
}

void SessionServerDebuggerEvent.FinalTransactionPosted.participantSpans.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_23F1A988C() + 28);
  sub_23F1A98B8();
  *(_QWORD *)(v1 + v3) = a1;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.FinalTransactionPosted.participantSpans.modify())()
{
  type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
  sub_23F1A9AFC();
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.init(eventData:spanId:queryEventId:participantSpans:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v10 = sub_23F1A988C();
  v11 = (uint64_t)a5 + *(int *)(v10 + 24);
  v12 = sub_23F131B8C();
  sub_23F126158(v11, v13, v14, v12);
  *a5 = a1;
  a5[1] = a2;
  result = sub_23F1751F8(a3, v11);
  *(_QWORD *)((char *)a5 + *(int *)(v10 + 28)) = a4;
  return result;
}

uint64_t sub_23F197694(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x64496E617073 && a2 == 0xE600000000000000;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6576457972657571 && a2 == 0xEC0000006449746ELL;
      if (v7 || (sub_23F268798() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x800000023F294060)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = sub_23F268798();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23F19785C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F197894 + 4 * byte_23F272159[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_23F197894()
{
  return 0x64496E617073;
}

uint64_t sub_23F1978A8()
{
  return 0x6576457972657571;
}

unint64_t sub_23F1978C8()
{
  return 0xD000000000000010;
}

uint64_t sub_23F1978E4()
{
  unsigned __int8 *v0;

  return sub_23F19785C(*v0);
}

uint64_t sub_23F1978EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F197694(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F197910()
{
  sub_23F19C3F4();
  return sub_23F2688B8();
}

uint64_t sub_23F197938()
{
  sub_23F19C3F4();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.FinalTransactionPosted.encode(to:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F1A9358();
  sub_23F1A9340();
  sub_23F1217E8(&qword_256E01A18);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F17F9B8();
  sub_23F19C3F4();
  sub_23F18A998();
  v8 = *v1;
  HIBYTE(v7) = 0;
  sub_23F1217E8(&qword_256E018C8);
  sub_23F19C070(&qword_256E018D0, (uint64_t (*)(void))sub_23F146B94, MEMORY[0x24BEE12A0]);
  sub_23F126188();
  if (!v0)
  {
    LOBYTE(v8) = 1;
    sub_23F1A9624();
    sub_23F268768();
    v6 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
    LOBYTE(v8) = 2;
    sub_23F131B8C();
    sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23F1A97F8();
    sub_23F268714();
    v8 = *(uint64_t *)((char *)v1 + *(int *)(v6 + 28));
    HIBYTE(v7) = 3;
    sub_23F1217E8(&qword_256E018D8);
    sub_23F19C0CC(&qword_256E018E0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4570], MEMORY[0x24BEE04C0]);
    sub_23F126188();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F18AB98();
}

void SessionServerDebuggerEvent.FinalTransactionPosted.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_23F131874();
  v15 = v14;
  v27 = v16;
  sub_23F1217E8(&qword_256DFEB98);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F1A94D4(v18, v26);
  v19 = sub_23F1217E8(&qword_256E01A28);
  v20 = sub_23F1A9D10(v19);
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23F17FFA8();
  v22 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(v21);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F1319B0();
  v25 = (uint64_t)v13 + *(int *)(v24 + 24);
  sub_23F131B8C();
  sub_23F1A9960(v25);
  sub_23F1A968C(v15);
  sub_23F19C3F4();
  sub_23F1A9814();
  if (v10)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v15);
    sub_23F125E40(v25, &qword_256DFEB98);
  }
  else
  {
    sub_23F1217E8(&qword_256E018C8);
    sub_23F19C070(&qword_256E018F0, (uint64_t (*)(void))sub_23F146AE4, MEMORY[0x24BEE12D0]);
    sub_23F131BD4();
    sub_23F17FE68();
    *v13 = a10;
    v13[1] = sub_23F2686CC();
    LOBYTE(a10) = 2;
    sub_23F125DE4(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23F268678();
    sub_23F1751F8(v28, v25);
    sub_23F1217E8(&qword_256E018D8);
    sub_23F19C0CC(&qword_256E018F8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE4598], MEMORY[0x24BEE04E0]);
    sub_23F131BD4();
    sub_23F17FE68();
    sub_23F1A977C(v12, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    *(_QWORD *)((char *)v13 + *(int *)(v22 + 28)) = a10;
    sub_23F1A9614((uint64_t)v13, v27);
    sub_23F1A9970();
    sub_23F1A95E4((uint64_t)v13);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F197DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  SessionServerDebuggerEvent.FinalTransactionPosted.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F197DD8()
{
  SessionServerDebuggerEvent.FinalTransactionPosted.encode(to:)();
}

uint64_t sub_23F197DF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SessionServerDebuggerEvent.FinalTransactionPosted.id.getter();
  *a1 = result;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.CurrentTranscript.id.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.CurrentTranscript.eventData.getter()
{
  return sub_23F195020((void (*)(_QWORD))type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript);
}

void SessionServerDebuggerEvent.CurrentTranscript.eventData.setter(uint64_t a1)
{
  sub_23F195050(a1, type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript);
}

uint64_t (*SessionServerDebuggerEvent.CurrentTranscript.eventData.modify())()
{
  type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
  sub_23F180384();
  return nullsub_1;
}

void SessionServerDebuggerEvent.CurrentTranscript.init(id:eventData:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23F197E74(a1, a2, type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript, a3);
}

void sub_23F197E74(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  sub_23F131B8C();
  v8 = sub_23F1A9D2C();
  v9(v8, a1);
  *(_QWORD *)(a4 + *(int *)(a3(0) + 20)) = a2;
  sub_23F12612C();
}

void sub_23F197EBC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v5;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2
    || (sub_23F126148() & 1) != 0
    || (a1 == 0x746144746E657665 ? (v5 = a2 == 0xE900000000000061) : (v5 = 0), v5))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F197F8C()
{
  sub_23F19C430();
  return sub_23F2688B8();
}

uint64_t sub_23F197FB4()
{
  sub_23F19C430();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.CurrentTranscript.encode(to:)()
{
  sub_23F198010();
}

void sub_23F198010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  void (*v3)(_QWORD *);
  void (*v4)(_QWORD *);
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;

  sub_23F131874();
  v10 = v2;
  v4 = v3;
  v6 = (_QWORD *)v5;
  v11 = *(_QWORD *)(sub_23F1A9D7C(v5, v7) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F1319C8();
  v9 = sub_23F1A9374(v6, v6[3]);
  v4(v9);
  sub_23F2688A0();
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F1A9D04();
  sub_23F1A9720();
  if (!v0)
  {
    v10(0);
    sub_23F1A9BB8();
    sub_23F1217E8(&qword_256E018C8);
    sub_23F19C070(&qword_256E018D0, (uint64_t (*)(void))sub_23F146B94, MEMORY[0x24BEE12A0]);
    sub_23F1A9720();
  }
  sub_23F126038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  sub_23F1A9634();
  sub_23F1313FC();
}

void SessionServerDebuggerEvent.CurrentTranscript.init(from:)()
{
  sub_23F19817C();
}

void sub_23F19817C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F131874();
  v29 = v1;
  v30 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v23 = v8;
  v27 = sub_23F131B8C();
  v25 = *(_QWORD *)(v27 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F17FBC8(v10, v22);
  v26 = sub_23F1217E8(v5);
  v11 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v12 = sub_23F17FFA8();
  v24 = v3;
  v13 = v3(v12);
  sub_23F1A9C60();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v22 - v15;
  v17 = sub_23F1A9374(v7, v7[3]);
  ((void (*)(_QWORD *))v29)(v17);
  v29 = v5;
  v18 = v30;
  sub_23F18037C();
  if (v18)
  {
    sub_23F1A95EC();
  }
  else
  {
    v19 = v11;
    v20 = v25;
    sub_23F125DE4(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23F1A9D04();
    v21 = v27;
    sub_23F1A97E4();
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v16, v28, v21);
    sub_23F1217E8(&qword_256E018C8);
    sub_23F1A9BB8();
    sub_23F19C070(&qword_256E018F0, (uint64_t (*)(void))sub_23F146AE4, MEMORY[0x24BEE12D0]);
    sub_23F1A97E4();
    sub_23F15E7D4((uint64_t)v29, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    *(_QWORD *)&v16[*(int *)(v13 + 20)] = v31;
    sub_23F1A9614((uint64_t)v16, v23);
    sub_23F1A95EC();
    sub_23F1A95E4((uint64_t)v16);
  }
  sub_23F1313FC();
}

void sub_23F198390()
{
  SessionServerDebuggerEvent.CurrentTranscript.init(from:)();
}

void sub_23F1983A4()
{
  SessionServerDebuggerEvent.CurrentTranscript.encode(to:)();
}

uint64_t (*SessionServerDebuggerEvent.Synced.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F1983D8()
{
  sub_23F19C46C();
  return sub_23F2688B8();
}

uint64_t sub_23F198400()
{
  sub_23F19C46C();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.Synced.encode(to:)()
{
  uint64_t v0;

  sub_23F1A9358();
  sub_23F1A92A4();
  sub_23F1217E8(&qword_256E01A48);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F17F9B8();
  sub_23F19C46C();
  sub_23F18A998();
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F1A919C();
  sub_23F1A91E4();
  sub_23F1A93B4();
  sub_23F18AB98();
}

void SessionServerDebuggerEvent.Synced.init(from:)()
{
  sub_23F199B78();
}

void sub_23F1984FC()
{
  SessionServerDebuggerEvent.Synced.init(from:)();
}

void sub_23F198510()
{
  SessionServerDebuggerEvent.Synced.encode(to:)();
}

uint64_t (*SessionServerDebuggerEvent.TranscriptReplacementAccepted.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_23F198540()
{
  sub_23F19C4A8();
  return sub_23F2688B8();
}

uint64_t sub_23F198568()
{
  sub_23F19C4A8();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.TranscriptReplacementAccepted.encode(to:)()
{
  uint64_t v0;

  sub_23F1A9358();
  sub_23F1A92A4();
  sub_23F1217E8(&qword_256E01A60);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F17F9B8();
  sub_23F19C4A8();
  sub_23F18A998();
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F1A919C();
  sub_23F1A91E4();
  sub_23F1A93B4();
  sub_23F18AB98();
}

void SessionServerDebuggerEvent.TranscriptReplacementAccepted.init(from:)()
{
  sub_23F199B78();
}

void sub_23F198664()
{
  SessionServerDebuggerEvent.TranscriptReplacementAccepted.init(from:)();
}

void sub_23F198678()
{
  SessionServerDebuggerEvent.TranscriptReplacementAccepted.encode(to:)();
}

void SessionServerDebuggerEvent.RequestFailed.Reason.hash(into:)()
{
  sub_23F268840();
  sub_23F126078();
}

BOOL static SessionServerDebuggerEvent.RequestFailed.Reason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_23F1986C4()
{
  unint64_t result;

  result = qword_256E01470;
  if (!qword_256E01470)
  {
    result = MEMORY[0x242667160](&unk_23F277A4C, &type metadata for SessionServerDebuggerEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01470);
  }
  return result;
}

uint64_t type metadata accessor for SessionServerDebuggerEvent(uint64_t a1)
{
  return sub_23F12EDBC(a1, qword_256E01CF0);
}

unint64_t sub_23F198714()
{
  unint64_t result;

  result = qword_256E014F0;
  if (!qword_256E014F0)
  {
    result = MEMORY[0x242667160](&unk_23F2779FC, &type metadata for SessionClientDebuggerEvent.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E014F0);
  }
  return result;
}

unint64_t sub_23F198750()
{
  unint64_t result;

  result = qword_256E014F8;
  if (!qword_256E014F8)
  {
    result = MEMORY[0x242667160](&unk_23F2779AC, &type metadata for SessionClientDebuggerEvent.Payload.InjectionResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E014F8);
  }
  return result;
}

unint64_t sub_23F19878C()
{
  unint64_t result;

  result = qword_256E01508;
  if (!qword_256E01508)
  {
    result = MEMORY[0x242667160](&unk_23F27795C, &type metadata for SessionClientDebuggerEvent.Payload.DisableInjectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01508);
  }
  return result;
}

unint64_t sub_23F1987C8()
{
  unint64_t result;

  result = qword_256E01518;
  if (!qword_256E01518)
  {
    result = MEMORY[0x242667160](&unk_23F27790C, &type metadata for SessionClientDebuggerEvent.Payload.EnableInjectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01518);
  }
  return result;
}

unint64_t sub_23F198804()
{
  unint64_t result;

  result = qword_256E01528;
  if (!qword_256E01528)
  {
    result = MEMORY[0x242667160](&unk_23F2778BC, &type metadata for SessionClientDebuggerEvent.Payload.TerminateSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01528);
  }
  return result;
}

unint64_t sub_23F198840()
{
  unint64_t result;

  result = qword_256E01530;
  if (!qword_256E01530)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionClientDebuggerEvent.TerminateSession, &type metadata for SessionClientDebuggerEvent.TerminateSession);
    atomic_store(result, (unint64_t *)&qword_256E01530);
  }
  return result;
}

unint64_t sub_23F19887C()
{
  unint64_t result;

  result = qword_256E01538;
  if (!qword_256E01538)
  {
    result = MEMORY[0x242667160](&unk_23F27786C, &type metadata for SessionClientDebuggerEvent.Payload.SyncCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01538);
  }
  return result;
}

unint64_t sub_23F1988B8()
{
  unint64_t result;

  result = qword_256E01548;
  if (!qword_256E01548)
  {
    result = MEMORY[0x242667160](&unk_23F27781C, &type metadata for SessionClientDebuggerEvent.Payload.ReplaceCurrentTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01548);
  }
  return result;
}

unint64_t sub_23F1988F4()
{
  unint64_t result;

  result = qword_256E01558;
  if (!qword_256E01558)
  {
    result = MEMORY[0x242667160](&unk_23F2777CC, &type metadata for SessionClientDebuggerEvent.Payload.RequestCurrentTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01558);
  }
  return result;
}

unint64_t sub_23F198930()
{
  unint64_t result;

  result = qword_256E01568;
  if (!qword_256E01568)
  {
    result = MEMORY[0x242667160](&unk_23F27777C, &type metadata for SessionClientDebuggerEvent.Payload.PostDeferredTransactionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01568);
  }
  return result;
}

unint64_t sub_23F19896C()
{
  unint64_t result;

  result = qword_256E01578;
  if (!qword_256E01578)
  {
    result = MEMORY[0x242667160](&unk_23F27772C, &type metadata for SessionClientDebuggerEvent.Payload.DisableDeferredTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01578);
  }
  return result;
}

unint64_t sub_23F1989A8()
{
  unint64_t result;

  result = qword_256E01588;
  if (!qword_256E01588)
  {
    result = MEMORY[0x242667160](&unk_23F2776DC, &type metadata for SessionClientDebuggerEvent.Payload.EnableDeferredTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01588);
  }
  return result;
}

uint64_t sub_23F1989E4(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000016 && a2 == 0x800000023F2940A0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023F2940C0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023F2940E0 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6576456F72657ALL && a2 == 0xEE00746E65537374)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23F198BA8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F198BE0 + 4 * byte_23F27215D[a1]))(0xD000000000000016, 0x800000023F2940A0);
}

uint64_t sub_23F198BE0(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_23F198C08()
{
  return 0x6E6576456F72657ALL;
}

uint64_t sub_23F198C2C()
{
  unsigned __int8 *v0;

  return sub_23F198BA8(*v0);
}

uint64_t sub_23F198C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1989E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F198C58()
{
  sub_23F19C4E4();
  return sub_23F2688B8();
}

uint64_t sub_23F198C80()
{
  sub_23F19C4E4();
  return sub_23F2688C4();
}

uint64_t sub_23F198CA8()
{
  sub_23F19C55C();
  return sub_23F2688B8();
}

uint64_t sub_23F198CD0()
{
  sub_23F19C55C();
  return sub_23F2688C4();
}

uint64_t sub_23F198CF8()
{
  sub_23F19C598();
  return sub_23F2688B8();
}

uint64_t sub_23F198D20()
{
  sub_23F19C598();
  return sub_23F2688C4();
}

uint64_t sub_23F198D48()
{
  sub_23F19C5D4();
  return sub_23F2688B8();
}

uint64_t sub_23F198D70()
{
  sub_23F19C5D4();
  return sub_23F2688C4();
}

uint64_t sub_23F198D98()
{
  sub_23F19C520();
  return sub_23F2688B8();
}

uint64_t sub_23F198DC0()
{
  sub_23F19C520();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.RequestFailed.Reason.encode(to:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12[12];

  sub_23F131874();
  v1 = sub_23F1217E8(&qword_256E01A78);
  v12[8] = *(_QWORD *)(v1 - 8);
  v12[9] = v1;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F1A982C(v3, v12[0]);
  v4 = sub_23F1217E8(&qword_256E01A80);
  v12[5] = *(_QWORD *)(v4 - 8);
  v12[6] = v4;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  v12[4] = (uint64_t)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F1217E8(&qword_256E01A88);
  v12[2] = *(_QWORD *)(v7 - 8);
  v12[3] = v7;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F15E50C();
  v12[1] = sub_23F1217E8(&qword_256E01A90);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F1316E4();
  v12[10] = *(_QWORD *)(sub_23F1217E8(&qword_256E01A98) - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F126058();
  v11 = *v0;
  sub_23F1A9934();
  sub_23F19C4E4();
  sub_23F1A99CC();
  __asm { BR              X9 }
}

void sub_23F198F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  *(_BYTE *)(v2 - 68) = 0;
  sub_23F19C5D4();
  sub_23F15EA24();
  (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 168));
  v3 = sub_23F1A9C80();
  sub_23F15E588(v3, v4);
  sub_23F1313FC();
}

void SessionServerDebuggerEvent.RequestFailed.Reason.hashValue.getter()
{
  sub_23F1317B8();
  sub_23F15EA08();
  sub_23F1318A0();
  sub_23F1318E4();
}

void SessionServerDebuggerEvent.RequestFailed.Reason.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256E01AC8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1A9848(v6, v21);
  sub_23F1217E8(&qword_256E01AD0);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F18ABFC(v8, v22);
  sub_23F1217E8(&qword_256E01AD8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F1A982C(v10, v23);
  v25 = sub_23F1217E8(&qword_256E01AE0);
  MEMORY[0x24BDAC7A8](v25);
  sub_23F15E50C();
  sub_23F1217E8(&qword_256E01AE8);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1319B0();
  sub_23F12545C(v4, v4[3]);
  sub_23F19C4E4();
  sub_23F1A9DA4();
  sub_23F1A9814();
  if (!v0)
  {
    v26 = v1;
    v12 = sub_23F2686D8();
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      v24 = *(unsigned __int8 *)(v12 + 32);
      sub_23F15E2D0(1, v13, v12, v12 + 32, 0, (2 * v13) | 1);
      v15 = v14;
      v17 = v16;
      swift_bridgeObjectRelease();
      if (v15 == v17 >> 1)
        __asm { BR              X9 }
    }
    sub_23F15EDB8();
    sub_23F131B30();
    v19 = v18;
    sub_23F1217E8(&qword_256DFF4B8);
    *v19 = &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason;
    sub_23F268648();
    v20 = sub_23F15E6B4();
    sub_23F1A97D0(v20, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23F15E96C();
    sub_23F15E44C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
  sub_23F1313FC();
}

void sub_23F1992D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F1A9BC4();
  sub_23F1A936C();
  if (!v0)
  {
    sub_23F15ECE4();
    JUMPOUT(0x23F1993B0);
  }
  sub_23F15E96C();
  sub_23F15E444(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  JUMPOUT(0x23F1992B8);
}

void sub_23F19930C()
{
  uint64_t v0;

  sub_23F1A9B94();
  sub_23F1A936C();
  if (v0)
    JUMPOUT(0x23F199340);
  JUMPOUT(0x23F1993ACLL);
}

void sub_23F19935C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  sub_23F1A9B5C();
  sub_23F1A936C();
  if (v0)
  {
    sub_23F15E96C();
    sub_23F15E444(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    JUMPOUT(0x23F1992B8);
  }
  v4 = sub_23F15ECE4();
  v5(v4, *(_QWORD *)(v3 - 128));
  sub_23F15E96C();
  sub_23F15E444(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  JUMPOUT(0x23F199400);
}

void sub_23F199414()
{
  SessionServerDebuggerEvent.RequestFailed.Reason.init(from:)();
}

void sub_23F199428()
{
  SessionServerDebuggerEvent.RequestFailed.Reason.encode(to:)();
}

uint64_t (*SessionServerDebuggerEvent.RequestFailed.id.modify())()
{
  return nullsub_1;
}

void SessionServerDebuggerEvent.RequestFailed.reason.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_23F1A96F0();
  *a1 = *(_BYTE *)(v1 + v3);
  sub_23F126078();
}

void SessionServerDebuggerEvent.RequestFailed.reason.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  v2 = *a1;
  sub_23F1A96F0();
  *(_BYTE *)(v1 + v3) = v2;
  sub_23F126078();
}

uint64_t (*SessionServerDebuggerEvent.RequestFailed.reason.modify())()
{
  sub_23F1A96F0();
  return nullsub_1;
}

void SessionServerDebuggerEvent.RequestFailed.init(id:reason:)(char *a1@<X1>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = sub_23F131B8C();
  sub_23F12619C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  sub_23F1A96F0();
  *(_BYTE *)(a2 + v5) = v3;
  sub_23F12612C();
}

uint64_t sub_23F1994FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F1995C8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F73616572;
  else
    return 25705;
}

uint64_t sub_23F1995F0()
{
  char *v0;

  return sub_23F1995C8(*v0);
}

uint64_t sub_23F1995F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F1994FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F19961C()
{
  sub_23F19C610();
  return sub_23F2688B8();
}

uint64_t sub_23F199644()
{
  sub_23F19C610();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.RequestFailed.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v6[16];

  sub_23F1A9358();
  sub_23F1A9340();
  sub_23F1217E8(&qword_256E01AF0);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v6[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F19C610();
  sub_23F18A998();
  v6[15] = 0;
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F126188();
  if (!v0)
  {
    v6[14] = *(_BYTE *)(v1 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0) + 20));
    v6[13] = 1;
    sub_23F19C64C();
    sub_23F17F99C();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F18AB98();
}

void SessionServerDebuggerEvent.RequestFailed.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_23F131874();
  v17 = v16;
  v26 = v18;
  v29 = sub_23F131B8C();
  v27 = *(_QWORD *)(v29 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F18ABFC(v20, v25);
  sub_23F1217E8(&qword_256E01B08);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_23F125FBC();
  v23 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(v22);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F126058();
  sub_23F12545C(v17, v17[3]);
  sub_23F19C610();
  sub_23F1A9814();
  if (v12)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v17);
  }
  else
  {
    sub_23F125DE4(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23F1A9D04();
    sub_23F17FE68();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v15, v28, v29);
    sub_23F19C688();
    sub_23F17FE68();
    sub_23F15E444(v14, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    *(_BYTE *)(v15 + *(int *)(v23 + 20)) = a12;
    sub_23F1A9614(v15, v26);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v17);
    sub_23F1A95E4(v15);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F19997C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  SessionServerDebuggerEvent.RequestFailed.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_23F199990()
{
  SessionServerDebuggerEvent.RequestFailed.encode(to:)();
}

uint64_t (*SessionServerDebuggerEvent.InjectionStateChanged.id.modify())()
{
  return nullsub_1;
}

uint64_t _s16IntelligenceFlow26SessionClientDebuggerEventV24RequestCurrentTranscriptV2idAE10Foundation4UUIDV_tcfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F131B8C();
  v0 = sub_23F17FE50();
  return sub_23F126180(v0, v1, v2, v3);
}

void sub_23F1999F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F126148();
    sub_23F1318B8();
  }
  sub_23F126078();
}

uint64_t sub_23F199A54()
{
  sub_23F19C6C4();
  return sub_23F2688B8();
}

uint64_t sub_23F199A7C()
{
  sub_23F19C6C4();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.InjectionStateChanged.encode(to:)()
{
  uint64_t v0;

  sub_23F1A9358();
  sub_23F1A92A4();
  sub_23F1217E8(&qword_256E01B18);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F17F9B8();
  sub_23F19C6C4();
  sub_23F18A998();
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F1A919C();
  sub_23F1A91E4();
  sub_23F1A93B4();
  sub_23F18AB98();
}

void SessionServerDebuggerEvent.InjectionStateChanged.init(from:)()
{
  sub_23F199B78();
}

void sub_23F199B78()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD *);
  void (*v3)(_QWORD *);
  uint64_t (*v4)(_QWORD);
  uint64_t (*v5)(_QWORD);
  uint64_t *v6;
  uint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_23F131874();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v21 = v10;
  v25 = sub_23F131B8C();
  v20 = *(_QWORD *)(v25 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F1A9848(v12, v20);
  v13 = sub_23F1217E8(v7);
  v23 = *(_QWORD *)(v13 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F1A9480();
  v22 = v5;
  v5(v15);
  sub_23F1A9C60();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v20 - v17;
  v19 = sub_23F1A9374(v9, v9[3]);
  v3(v19);
  sub_23F18037C();
  if (!v0)
  {
    sub_23F125DE4(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23F2686B4();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v1, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v18, v24, v25);
    sub_23F195980((uint64_t)v18, v21, v22);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v9);
  sub_23F1313FC();
}

void sub_23F199CE0()
{
  SessionServerDebuggerEvent.InjectionStateChanged.init(from:)();
}

void sub_23F199CF4()
{
  SessionServerDebuggerEvent.InjectionStateChanged.encode(to:)();
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.spanId.modify())()
{
  return nullsub_1;
}

void SessionServerDebuggerEvent.InjectionRequest.participant.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionServerDebuggerEvent.InjectionRequest.participant.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F1A9604();
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v0;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.participant.modify())()
{
  return nullsub_1;
}

void SessionServerDebuggerEvent.InjectionRequest.injectionPointId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionServerDebuggerEvent.InjectionRequest.injectionPointId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F1A9A34();
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v0;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.injectionPointId.modify())()
{
  return nullsub_1;
}

void SessionServerDebuggerEvent.InjectionRequest.injectionInstanceId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionServerDebuggerEvent.InjectionRequest.injectionInstanceId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F1A9A54();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v0;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.injectionInstanceId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.injectionRequestId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  sub_23F131B8C();
  v0 = sub_23F17FB54();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.injectionRequestId.modify())()
{
  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  return nullsub_1;
}

void SessionServerDebuggerEvent.InjectionRequest.injectionInputMangledTypeName.getter()
{
  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionServerDebuggerEvent.InjectionRequest.injectionInputMangledTypeName.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F1A95F4();
  sub_23F1A95D8();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.injectionInputMangledTypeName.modify())()
{
  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  return nullsub_1;
}

void SessionServerDebuggerEvent.InjectionRequest.injectionInputData.getter()
{
  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  sub_23F1A9C48();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionServerDebuggerEvent.InjectionRequest.injectionInputData.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v1 + *(int *)(sub_23F1A95F4() + 40);
  sub_23F1311B4(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
  *(_QWORD *)v3 = v2;
  *(_QWORD *)(v3 + 8) = v0;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.injectionInputData.modify())()
{
  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  return nullsub_1;
}

void SessionServerDebuggerEvent.InjectionRequest.injectionOutputMangledTypeName.getter()
{
  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionServerDebuggerEvent.InjectionRequest.injectionOutputMangledTypeName.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F1A95F4();
  sub_23F1A95D8();
  *v1 = v2;
  v1[1] = v0;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.injectionOutputMangledTypeName.modify())()
{
  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  return nullsub_1;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV16InjectionRequestV09injectionH2Id10Foundation4UUIDVvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = sub_23F1A9744();
  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(v0);
  sub_23F131B8C();
  v1 = sub_23F1317E0();
  return sub_23F126180(v1, v2, v3, v4);
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.inputType.getter()
{
  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  return sub_23F268534();
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.outputType.getter()
{
  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  return sub_23F268534();
}

void SessionServerDebuggerEvent.InjectionRequest.init(spanId:participant:injectionPointId:injectionInstanceId:injectionRequestId:injectionInputMangledTypeName:injectionInputData:injectionOutputMangledTypeName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;

  sub_23F125F3C();
  v27 = v26;
  v29 = v28;
  *v28 = v30;
  v28[1] = v31;
  v28[2] = v32;
  v28[3] = v33;
  v28[4] = v34;
  v28[5] = v35;
  v28[6] = v36;
  v37 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  sub_23F131B8C();
  v38 = sub_23F1A9D2C();
  v39(v38, v27);
  v40 = (_QWORD *)((char *)v29 + v37[9]);
  *v40 = a21;
  v40[1] = a22;
  v41 = (_QWORD *)((char *)v29 + v37[10]);
  *v41 = a23;
  v41[1] = a24;
  v42 = (_QWORD *)((char *)v29 + v37[11]);
  *v42 = a25;
  v42[1] = a26;
  sub_23F125EFC();
}

uint64_t sub_23F19A100(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x64496E617073 && a2 == 0xE600000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000023F294100 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x800000023F294120 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x800000023F294080 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023F294140 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x800000023F294160 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023F294180)
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else
    {
      v7 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 7;
      else
        return 8;
    }
  }
}

uint64_t sub_23F19A414(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F19A444 + 4 * byte_23F272169[a1]))(0x64496E617073, 0xE600000000000000);
}

uint64_t sub_23F19A444()
{
  return 0x7069636974726170;
}

unint64_t sub_23F19A464()
{
  return 0xD000000000000010;
}

uint64_t sub_23F19A4F4()
{
  unsigned __int8 *v0;

  return sub_23F19A414(*v0);
}

uint64_t sub_23F19A4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F19A100(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F19A520()
{
  sub_23F19C700();
  return sub_23F2688B8();
}

uint64_t sub_23F19A548()
{
  sub_23F19C700();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.InjectionRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  int *v6;
  _BYTE v7[16];
  __int128 v8;

  sub_23F1A9358();
  sub_23F1A9A7C();
  sub_23F1217E8(&qword_256E01B30);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F19C700();
  sub_23F18A998();
  LOBYTE(v8) = 0;
  sub_23F1A95C8();
  if (!v0)
  {
    LOBYTE(v8) = 1;
    sub_23F1A931C();
    LOBYTE(v8) = 2;
    sub_23F1A931C();
    LOBYTE(v8) = 3;
    sub_23F15E4D8();
    v6 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
    LOBYTE(v8) = 4;
    sub_23F131B8C();
    sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23F1315CC();
    sub_23F1A9BF4(v6[9]);
    LOBYTE(v8) = 5;
    sub_23F1A931C();
    v8 = *(_OWORD *)(v1 + v6[10]);
    v7[15] = 6;
    sub_23F146B94();
    sub_23F1315CC();
    sub_23F1A9BF4(v6[11]);
    LOBYTE(v8) = 7;
    sub_23F1A931C();
  }
  sub_23F126038((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F18AB98();
}

void SessionServerDebuggerEvent.InjectionRequest.init(from:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  __int128 v23;

  sub_23F131874();
  v19 = v3;
  v4 = sub_23F131B8C();
  v20 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1316E4();
  sub_23F1217E8(&qword_256E01B40);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F1A9480();
  v22 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(v7);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F1319C8();
  v1[5] = 0;
  v1[6] = 0;
  sub_23F1A9934();
  sub_23F19C700();
  sub_23F1A9DA4();
  sub_23F268888();
  if (v0)
  {
    sub_23F1A9CF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    *v1 = sub_23F2686CC();
    v1[1] = sub_23F1A93FC(1);
    v1[2] = v9;
    v1[3] = sub_23F1A93FC(2);
    v1[4] = v10;
    v1[5] = sub_23F268654();
    v1[6] = v11;
    LOBYTE(v23) = 4;
    sub_23F125DE4(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23F1317EC();
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))((char *)v1 + v22[8], v2, v21);
    v12 = sub_23F1A93FC(5);
    v13 = (uint64_t *)((char *)v1 + v22[9]);
    *v13 = v12;
    v13[1] = v14;
    sub_23F1A9AA0(6);
    sub_23F1317EC();
    *(_OWORD *)((char *)v1 + v22[10]) = v23;
    v15 = sub_23F268684();
    v17 = v16;
    sub_23F1A9414();
    v18 = (uint64_t *)((char *)v1 + v22[11]);
    *v18 = v15;
    v18[1] = v17;
    sub_23F195A8C((uint64_t)v1, v19, type metadata accessor for SessionServerDebuggerEvent.InjectionRequest);
    sub_23F1A9CF0();
    sub_23F16D354((uint64_t)v1, type metadata accessor for SessionServerDebuggerEvent.InjectionRequest);
  }
  sub_23F1313FC();
}

void sub_23F19AAE0()
{
  SessionServerDebuggerEvent.InjectionRequest.init(from:)();
}

void sub_23F19AAF4()
{
  SessionServerDebuggerEvent.InjectionRequest.encode(to:)();
}

uint64_t _s16IntelligenceFlow26SessionClientDebuggerEventV26EnableDeferredTransactionsV2id10Foundation4UUIDVvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F131B8C();
  v0 = sub_23F1317E0();
  return sub_23F126180(v0, v1, v2, v3);
}

uint64_t (*SessionServerDebuggerEvent.InjectionResponseAccepted.id.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionResponseAccepted.successful.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F1A9708();
  return *(unsigned __int8 *)(v0 + v1);
}

void SessionServerDebuggerEvent.InjectionResponseAccepted.successful.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_23F1A9708();
  *(_BYTE *)(v1 + v3) = a1;
  sub_23F126078();
}

uint64_t (*SessionServerDebuggerEvent.InjectionResponseAccepted.successful.modify())()
{
  sub_23F1A9708();
  return nullsub_1;
}

void SessionServerDebuggerEvent.InjectionResponseAccepted.init(id:successful:)(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23F131B8C();
  sub_23F1A93A8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  sub_23F1A9708();
  *(_BYTE *)(a2 + v5) = a1;
  sub_23F12612C();
}

uint64_t sub_23F19ABEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6673736563637573 && a2 == 0xEA00000000006C75)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F268798();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F19ACCC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6673736563637573;
  else
    return 25705;
}

uint64_t sub_23F19ACFC()
{
  char *v0;

  return sub_23F19ACCC(*v0);
}

uint64_t sub_23F19AD04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F19ABEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F19AD28()
{
  sub_23F19C73C();
  return sub_23F2688B8();
}

uint64_t sub_23F19AD50()
{
  sub_23F19C73C();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.InjectionResponseAccepted.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_23F1A9358();
  sub_23F1A9340();
  sub_23F1217E8(&qword_256E01B48);
  sub_23F126298();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F17F9B8();
  sub_23F19C73C();
  sub_23F18A998();
  v5[15] = 0;
  sub_23F131B8C();
  sub_23F125DE4(&qword_256DFEF10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23F126188();
  if (!v0)
  {
    type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
    sub_23F1A9BB8();
    sub_23F1A9624();
    sub_23F26872C();
  }
  sub_23F126038((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F18AB98();
}

void SessionServerDebuggerEvent.InjectionResponseAccepted.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F131874();
  v5 = v4;
  v15 = v6;
  v17 = sub_23F131B8C();
  v18 = *(_QWORD *)(v17 - 8);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F17FBC8(v8, v14);
  sub_23F1217E8(&qword_256E01B58);
  sub_23F1A959C();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23F15E9EC();
  v11 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(v10);
  sub_23F125F30();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F126058();
  sub_23F12545C(v5, v5[3]);
  sub_23F19C73C();
  sub_23F1A9814();
  if (v0)
  {
    sub_23F1A95EC();
  }
  else
  {
    sub_23F125DE4(&qword_256DFEF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23F1A9D04();
    sub_23F17FE68();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v2, v16, v17);
    v13 = sub_23F268690();
    sub_23F15E444(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *(_BYTE *)(v2 + *(int *)(v11 + 20)) = v13 & 1;
    sub_23F1A9614(v2, v15);
    sub_23F1A95EC();
    sub_23F1A95E4(v2);
  }
  sub_23F1A9634();
  sub_23F1313FC();
}

void sub_23F19B048()
{
  SessionServerDebuggerEvent.InjectionResponseAccepted.init(from:)();
}

void sub_23F19B05C()
{
  SessionServerDebuggerEvent.InjectionResponseAccepted.encode(to:)();
}

uint64_t (*SessionServerDebuggerEvent.InjectionValueCaptured.spanId.modify())()
{
  return nullsub_1;
}

void SessionServerDebuggerEvent.InjectionValueCaptured.participant.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionServerDebuggerEvent.InjectionValueCaptured.participant.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F1A9604();
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v0;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.InjectionValueCaptured.participant.modify())()
{
  return nullsub_1;
}

void SessionServerDebuggerEvent.InjectionValueCaptured.injectionPointId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionServerDebuggerEvent.InjectionValueCaptured.injectionPointId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F1A9A34();
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v0;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.InjectionValueCaptured.injectionPointId.modify())()
{
  return nullsub_1;
}

void SessionServerDebuggerEvent.InjectionValueCaptured.injectionInstanceId.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionServerDebuggerEvent.InjectionValueCaptured.injectionInstanceId.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F1A9A54();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v0;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.InjectionValueCaptured.injectionInstanceId.modify())()
{
  return nullsub_1;
}

void SessionServerDebuggerEvent.InjectionValueCaptured.injectionValueMangledTypeName.getter()
{
  sub_23F1315C4();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionServerDebuggerEvent.InjectionValueCaptured.injectionValueMangledTypeName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.InjectionValueCaptured.injectionValueMangledTypeName.modify())()
{
  return nullsub_1;
}

void SessionServerDebuggerEvent.InjectionValueCaptured.injectionValueData.getter()
{
  sub_23F1A9C48();
  sub_23F1317E0();
  sub_23F126078();
}

void SessionServerDebuggerEvent.InjectionValueCaptured.injectionValueData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F1311B4(*(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  sub_23F12612C();
}

uint64_t (*SessionServerDebuggerEvent.InjectionValueCaptured.injectionValueData.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionValueCaptured.valueType.getter()
{
  return sub_23F268534();
}

__n128 SessionServerDebuggerEvent.InjectionValueCaptured.init(spanId:participant:injectionPointId:injectionInstanceId:injectionValueMangledTypeName:injectionValueData:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11)
{
  __n128 result;

  result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  return result;
}

uint64_t sub_23F19B260(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x64496E617073 && a2 == 0xE600000000000000;
  if (v2 || (sub_23F268798() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61;
    if (v6 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000023F294100 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x800000023F294120 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023F2941A0 || (sub_23F268798() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x800000023F2941C0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      v7 = sub_23F268798();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 5;
      else
        return 6;
    }
  }
}

uint64_t sub_23F19B4C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F19B4F8 + 4 * byte_23F272171[a1]))(0x64496E617073, 0xE600000000000000);
}

uint64_t sub_23F19B4F8()
{
  return 0x7069636974726170;
}

unint64_t sub_23F19B518()
{
  return 0xD000000000000010;
}

unint64_t sub_23F19B534()
{
  return 0xD000000000000013;
}

uint64_t sub_23F19B588()
{
  unsigned __int8 *v0;

  return sub_23F19B4C8(*v0);
}

uint64_t sub_23F19B590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F19B260(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F19B5B4()
{
  sub_23F19C778();
  return sub_23F2688B8();
}

uint64_t sub_23F19B5DC()
{
  sub_23F19C778();
  return sub_23F2688C4();
}

void SessionServerDebuggerEvent.InjectionValueCaptured.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F131874();
  v4 = v3;
  sub_23F1217E8(&qword_256E01B60);
  sub_23F126210();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F1319C8();
  sub_23F12545C(v4, v4[3]);
  sub_23F19C778();
  sub_23F1A99DC();
  sub_23F268768();
  if (!v0)
  {
    sub_23F1A9C3C(1);
    sub_23F1A931C();
    sub_23F1A9C3C(2);
    sub_23F1A931C();
    sub_23F1A9C3C(3);
    sub_23F15E4D8();
    sub_23F1A9C3C(4);
    sub_23F1A931C();
    sub_23F146B94();
    sub_23F1315CC();
  }
  sub_23F15E44C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F1313FC();
}

void SessionServerDebuggerEvent.InjectionValueCaptured.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  sub_23F131874();
  v3 = v2;
  v5 = v4;
  sub_23F1217E8(&qword_256E01B70);
  sub_23F126210();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F1319B0();
  sub_23F12545C(v3, v3[3]);
  sub_23F19C778();
  sub_23F1A9DA4();
  sub_23F18037C();
  if (v0)
  {
    sub_23F1A9C1C();
    sub_23F131930();
  }
  else
  {
    sub_23F1A9C08();
    v7 = sub_23F2686CC();
    v8 = sub_23F1A94F8();
    v10 = v9;
    v24 = v8;
    sub_23F1A9C30(2);
    v21 = sub_23F1A94F8();
    v22 = v7;
    v23 = v5;
    LOBYTE(v26) = 3;
    v12 = v11;
    swift_bridgeObjectRetain();
    sub_23F1A9C08();
    v25 = v12;
    v13 = sub_23F268654();
    v15 = v14;
    v20 = v13;
    sub_23F1A9C30(4);
    v16 = sub_23F1A94F8();
    v18 = v17;
    v19 = v16;
    sub_23F1A9AA0(5);
    swift_bridgeObjectRetain();
    sub_23F2686B4();
    sub_23F15E3E0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23F131170(v26, v27);
    sub_23F1318DC();
    sub_23F131790();
    sub_23F131930();
    sub_23F13190C();
    *v23 = v22;
    v23[1] = v24;
    v23[2] = v10;
    v23[3] = v21;
    v23[4] = v25;
    v23[5] = v20;
    v23[6] = v15;
    v23[7] = v19;
    v23[8] = v18;
    v23[9] = v26;
    v23[10] = v27;
    sub_23F1A9C1C();
    sub_23F13190C();
    sub_23F131930();
    sub_23F131790();
    sub_23F1318DC();
    sub_23F1311B4(v26, v27);
  }
  sub_23F1313FC();
}

void sub_23F19BA68()
{
  SessionServerDebuggerEvent.InjectionValueCaptured.init(from:)();
}

void sub_23F19BA7C()
{
  SessionServerDebuggerEvent.InjectionValueCaptured.encode(to:)();
}

unint64_t sub_23F19BA94()
{
  unint64_t result;

  result = qword_256E01608;
  if (!qword_256E01608)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionClientDebuggerEvent.TerminateSession, &type metadata for SessionClientDebuggerEvent.TerminateSession);
    atomic_store(result, (unint64_t *)&qword_256E01608);
  }
  return result;
}

unint64_t sub_23F19BAD0()
{
  unint64_t result;

  result = qword_256E016B8;
  if (!qword_256E016B8)
  {
    result = MEMORY[0x242667160](&unk_23F27768C, &type metadata for SessionServerDebuggerEvent.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E016B8);
  }
  return result;
}

unint64_t sub_23F19BB0C()
{
  unint64_t result;

  result = qword_256E016C0;
  if (!qword_256E016C0)
  {
    result = MEMORY[0x242667160](&unk_23F27763C, &type metadata for SessionServerDebuggerEvent.Payload.InjectionValueCapturedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E016C0);
  }
  return result;
}

unint64_t sub_23F19BB48()
{
  unint64_t result;

  result = qword_256E016C8;
  if (!qword_256E016C8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionServerDebuggerEvent.InjectionValueCaptured, &type metadata for SessionServerDebuggerEvent.InjectionValueCaptured);
    atomic_store(result, (unint64_t *)&qword_256E016C8);
  }
  return result;
}

unint64_t sub_23F19BB84()
{
  unint64_t result;

  result = qword_256E016D0;
  if (!qword_256E016D0)
  {
    result = MEMORY[0x242667160](&unk_23F2775EC, &type metadata for SessionServerDebuggerEvent.Payload.InjectionResponseAcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E016D0);
  }
  return result;
}

unint64_t sub_23F19BBC0()
{
  unint64_t result;

  result = qword_256E016E0;
  if (!qword_256E016E0)
  {
    result = MEMORY[0x242667160](&unk_23F27759C, &type metadata for SessionServerDebuggerEvent.Payload.InjectionRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E016E0);
  }
  return result;
}

unint64_t sub_23F19BBFC()
{
  unint64_t result;

  result = qword_256E016F0;
  if (!qword_256E016F0)
  {
    result = MEMORY[0x242667160](&unk_23F27754C, &type metadata for SessionServerDebuggerEvent.Payload.InjectionStateChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E016F0);
  }
  return result;
}

unint64_t sub_23F19BC38()
{
  unint64_t result;

  result = qword_256E01700;
  if (!qword_256E01700)
  {
    result = MEMORY[0x242667160](&unk_23F2774FC, &type metadata for SessionServerDebuggerEvent.Payload.RequestFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01700);
  }
  return result;
}

unint64_t sub_23F19BC74()
{
  unint64_t result;

  result = qword_256E01710;
  if (!qword_256E01710)
  {
    result = MEMORY[0x242667160](&unk_23F2774AC, &type metadata for SessionServerDebuggerEvent.Payload.TranscriptReplacementAcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01710);
  }
  return result;
}

unint64_t sub_23F19BCB0()
{
  unint64_t result;

  result = qword_256E01720;
  if (!qword_256E01720)
  {
    result = MEMORY[0x242667160](&unk_23F27745C, &type metadata for SessionServerDebuggerEvent.Payload.SyncedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01720);
  }
  return result;
}

unint64_t sub_23F19BCEC()
{
  unint64_t result;

  result = qword_256E01730;
  if (!qword_256E01730)
  {
    result = MEMORY[0x242667160](&unk_23F27740C, &type metadata for SessionServerDebuggerEvent.Payload.CurrentTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01730);
  }
  return result;
}

unint64_t sub_23F19BD28()
{
  unint64_t result;

  result = qword_256E01740;
  if (!qword_256E01740)
  {
    result = MEMORY[0x242667160](&unk_23F2773BC, &type metadata for SessionServerDebuggerEvent.Payload.FinalTransactionPostedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01740);
  }
  return result;
}

unint64_t sub_23F19BD64()
{
  unint64_t result;

  result = qword_256E01750;
  if (!qword_256E01750)
  {
    result = MEMORY[0x242667160](&unk_23F27736C, &type metadata for SessionServerDebuggerEvent.Payload.SpanEndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01750);
  }
  return result;
}

unint64_t sub_23F19BDA0()
{
  unint64_t result;

  result = qword_256E01758;
  if (!qword_256E01758)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionServerDebuggerEvent.SpanEnded, &type metadata for SessionServerDebuggerEvent.SpanEnded);
    atomic_store(result, (unint64_t *)&qword_256E01758);
  }
  return result;
}

unint64_t sub_23F19BDDC()
{
  unint64_t result;

  result = qword_256E01760;
  if (!qword_256E01760)
  {
    result = MEMORY[0x242667160](&unk_23F27731C, &type metadata for SessionServerDebuggerEvent.Payload.SpanStartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01760);
  }
  return result;
}

unint64_t sub_23F19BE18()
{
  unint64_t result;

  result = qword_256E01768;
  if (!qword_256E01768)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionServerDebuggerEvent.SpanStarted, &type metadata for SessionServerDebuggerEvent.SpanStarted);
    atomic_store(result, (unint64_t *)&qword_256E01768);
  }
  return result;
}

unint64_t sub_23F19BE54()
{
  unint64_t result;

  result = qword_256E01770;
  if (!qword_256E01770)
  {
    result = MEMORY[0x242667160](&unk_23F2772CC, &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionPostAcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01770);
  }
  return result;
}

unint64_t sub_23F19BE90()
{
  unint64_t result;

  result = qword_256E01780;
  if (!qword_256E01780)
  {
    result = MEMORY[0x242667160](&unk_23F27727C, &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionReadyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01780);
  }
  return result;
}

unint64_t sub_23F19BECC()
{
  unint64_t result;

  result = qword_256E01790;
  if (!qword_256E01790)
  {
    result = MEMORY[0x242667160](&unk_23F27722C, &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionStateChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01790);
  }
  return result;
}

unint64_t sub_23F19BF08()
{
  unint64_t result;

  result = qword_256E01818;
  if (!qword_256E01818)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionServerDebuggerEvent.InjectionValueCaptured, &type metadata for SessionServerDebuggerEvent.InjectionValueCaptured);
    atomic_store(result, (unint64_t *)&qword_256E01818);
  }
  return result;
}

unint64_t sub_23F19BF44()
{
  unint64_t result;

  result = qword_256E01860;
  if (!qword_256E01860)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionServerDebuggerEvent.SpanEnded, &type metadata for SessionServerDebuggerEvent.SpanEnded);
    atomic_store(result, (unint64_t *)&qword_256E01860);
  }
  return result;
}

unint64_t sub_23F19BF80()
{
  unint64_t result;

  result = qword_256E01868;
  if (!qword_256E01868)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionServerDebuggerEvent.SpanStarted, &type metadata for SessionServerDebuggerEvent.SpanStarted);
    atomic_store(result, (unint64_t *)&qword_256E01868);
  }
  return result;
}

unint64_t sub_23F19BFBC()
{
  unint64_t result;

  result = qword_256E01890;
  if (!qword_256E01890)
  {
    result = MEMORY[0x242667160](&unk_23F2771DC, &type metadata for SessionClientDebuggerEvent.EnableDeferredTransactions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01890);
  }
  return result;
}

unint64_t sub_23F19BFF8()
{
  unint64_t result;

  result = qword_256E018A8;
  if (!qword_256E018A8)
  {
    result = MEMORY[0x242667160](&unk_23F27718C, &type metadata for SessionClientDebuggerEvent.DisableDeferredTransactions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E018A8);
  }
  return result;
}

unint64_t sub_23F19C034()
{
  unint64_t result;

  result = qword_256E018C0;
  if (!qword_256E018C0)
  {
    result = MEMORY[0x242667160](&unk_23F27713C, &type metadata for SessionClientDebuggerEvent.PostDeferredTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E018C0);
  }
  return result;
}

void sub_23F19C070(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = sub_23F125540(&qword_256E018C8);
    v7 = a2();
    atomic_store(MEMORY[0x242667160](a3, v6, &v7), a1);
  }
  sub_23F131634();
}

void sub_23F19C0CC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD v9[2];

  if (!*a1)
  {
    v8 = sub_23F125540(&qword_256E018D8);
    v9[0] = a2;
    v9[1] = a3;
    atomic_store(MEMORY[0x242667160](a4, v8, v9), a1);
  }
  sub_23F131634();
}

unint64_t sub_23F19C124()
{
  unint64_t result;

  result = qword_256E01908;
  if (!qword_256E01908)
  {
    result = MEMORY[0x242667160](&unk_23F2770EC, &type metadata for SessionClientDebuggerEvent.RequestCurrentTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01908);
  }
  return result;
}

unint64_t sub_23F19C160()
{
  unint64_t result;

  result = qword_256E01920;
  if (!qword_256E01920)
  {
    result = MEMORY[0x242667160](&unk_23F27709C, &type metadata for SessionClientDebuggerEvent.ReplaceCurrentTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01920);
  }
  return result;
}

unint64_t sub_23F19C19C()
{
  unint64_t result;

  result = qword_256E01938;
  if (!qword_256E01938)
  {
    result = MEMORY[0x242667160](&unk_23F27704C, &type metadata for SessionClientDebuggerEvent.Sync.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01938);
  }
  return result;
}

unint64_t sub_23F19C1D8()
{
  unint64_t result;

  result = qword_256E01950;
  if (!qword_256E01950)
  {
    result = MEMORY[0x242667160](&unk_23F276FFC, &type metadata for SessionClientDebuggerEvent.TerminateSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01950);
  }
  return result;
}

unint64_t sub_23F19C214()
{
  unint64_t result;

  result = qword_256E01960;
  if (!qword_256E01960)
  {
    result = MEMORY[0x242667160](&unk_23F276FAC, &type metadata for SessionClientDebuggerEvent.EnableInjection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01960);
  }
  return result;
}

unint64_t sub_23F19C250()
{
  unint64_t result;

  result = qword_256E01978;
  if (!qword_256E01978)
  {
    result = MEMORY[0x242667160](&unk_23F276F5C, &type metadata for SessionClientDebuggerEvent.DisableInjection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01978);
  }
  return result;
}

unint64_t sub_23F19C28C()
{
  unint64_t result;

  result = qword_256E01990;
  if (!qword_256E01990)
  {
    result = MEMORY[0x242667160](&unk_23F276F0C, &type metadata for SessionClientDebuggerEvent.InjectionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01990);
  }
  return result;
}

unint64_t sub_23F19C2C8()
{
  unint64_t result;

  result = qword_256E019A8;
  if (!qword_256E019A8)
  {
    result = MEMORY[0x242667160](&unk_23F276EBC, &type metadata for SessionServerDebuggerEvent.DeferredTransactionStateChanged.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E019A8);
  }
  return result;
}

unint64_t sub_23F19C304()
{
  unint64_t result;

  result = qword_256E019C0;
  if (!qword_256E019C0)
  {
    result = MEMORY[0x242667160](&unk_23F276E6C, &type metadata for SessionServerDebuggerEvent.DeferredTransactionReady.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E019C0);
  }
  return result;
}

unint64_t sub_23F19C340()
{
  unint64_t result;

  result = qword_256E019D8;
  if (!qword_256E019D8)
  {
    result = MEMORY[0x242667160](&unk_23F276E1C, &type metadata for SessionServerDebuggerEvent.DeferredTransactionPostAccepted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E019D8);
  }
  return result;
}

unint64_t sub_23F19C37C()
{
  unint64_t result;

  result = qword_256E019F0;
  if (!qword_256E019F0)
  {
    result = MEMORY[0x242667160](&unk_23F276DCC, &type metadata for SessionServerDebuggerEvent.SpanStarted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E019F0);
  }
  return result;
}

unint64_t sub_23F19C3B8()
{
  unint64_t result;

  result = qword_256E01A08;
  if (!qword_256E01A08)
  {
    result = MEMORY[0x242667160](&unk_23F276D7C, &type metadata for SessionServerDebuggerEvent.SpanEnded.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01A08);
  }
  return result;
}

unint64_t sub_23F19C3F4()
{
  unint64_t result;

  result = qword_256E01A20;
  if (!qword_256E01A20)
  {
    result = MEMORY[0x242667160](&unk_23F276D2C, &type metadata for SessionServerDebuggerEvent.FinalTransactionPosted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01A20);
  }
  return result;
}

unint64_t sub_23F19C430()
{
  unint64_t result;

  result = qword_256E01A38;
  if (!qword_256E01A38)
  {
    result = MEMORY[0x242667160](&unk_23F276CDC, &type metadata for SessionServerDebuggerEvent.CurrentTranscript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01A38);
  }
  return result;
}

unint64_t sub_23F19C46C()
{
  unint64_t result;

  result = qword_256E01A50;
  if (!qword_256E01A50)
  {
    result = MEMORY[0x242667160](&unk_23F276C8C, &type metadata for SessionServerDebuggerEvent.Synced.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01A50);
  }
  return result;
}

unint64_t sub_23F19C4A8()
{
  unint64_t result;

  result = qword_256E01A68;
  if (!qword_256E01A68)
  {
    result = MEMORY[0x242667160](&unk_23F276C3C, &type metadata for SessionServerDebuggerEvent.TranscriptReplacementAccepted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01A68);
  }
  return result;
}

unint64_t sub_23F19C4E4()
{
  unint64_t result;

  result = qword_256E01AA0;
  if (!qword_256E01AA0)
  {
    result = MEMORY[0x242667160](&unk_23F276BEC, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01AA0);
  }
  return result;
}

unint64_t sub_23F19C520()
{
  unint64_t result;

  result = qword_256E01AA8;
  if (!qword_256E01AA8)
  {
    result = MEMORY[0x242667160](&unk_23F276B9C, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.ZeroEventsSentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01AA8);
  }
  return result;
}

unint64_t sub_23F19C55C()
{
  unint64_t result;

  result = qword_256E01AB0;
  if (!qword_256E01AB0)
  {
    result = MEMORY[0x242667160](&unk_23F276B4C, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.ProtoDataViolatesSecurityPolicyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01AB0);
  }
  return result;
}

unint64_t sub_23F19C598()
{
  unint64_t result;

  result = qword_256E01AB8;
  if (!qword_256E01AB8)
  {
    result = MEMORY[0x242667160](&unk_23F276AFC, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.UnableToEncodeProtoDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01AB8);
  }
  return result;
}

unint64_t sub_23F19C5D4()
{
  unint64_t result;

  result = qword_256E01AC0;
  if (!qword_256E01AC0)
  {
    result = MEMORY[0x242667160](&unk_23F276AAC, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.UnableToParseProtoDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01AC0);
  }
  return result;
}

unint64_t sub_23F19C610()
{
  unint64_t result;

  result = qword_256E01AF8;
  if (!qword_256E01AF8)
  {
    result = MEMORY[0x242667160](&unk_23F276A5C, &type metadata for SessionServerDebuggerEvent.RequestFailed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01AF8);
  }
  return result;
}

unint64_t sub_23F19C64C()
{
  unint64_t result;

  result = qword_256E01B00;
  if (!qword_256E01B00)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionServerDebuggerEvent.RequestFailed.Reason, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason);
    atomic_store(result, (unint64_t *)&qword_256E01B00);
  }
  return result;
}

unint64_t sub_23F19C688()
{
  unint64_t result;

  result = qword_256E01B10;
  if (!qword_256E01B10)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionServerDebuggerEvent.RequestFailed.Reason, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason);
    atomic_store(result, (unint64_t *)&qword_256E01B10);
  }
  return result;
}

unint64_t sub_23F19C6C4()
{
  unint64_t result;

  result = qword_256E01B20;
  if (!qword_256E01B20)
  {
    result = MEMORY[0x242667160](&unk_23F276A0C, &type metadata for SessionServerDebuggerEvent.InjectionStateChanged.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01B20);
  }
  return result;
}

unint64_t sub_23F19C700()
{
  unint64_t result;

  result = qword_256E01B38;
  if (!qword_256E01B38)
  {
    result = MEMORY[0x242667160](&unk_23F2769BC, &type metadata for SessionServerDebuggerEvent.InjectionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01B38);
  }
  return result;
}

unint64_t sub_23F19C73C()
{
  unint64_t result;

  result = qword_256E01B50;
  if (!qword_256E01B50)
  {
    result = MEMORY[0x242667160](&unk_23F27696C, &type metadata for SessionServerDebuggerEvent.InjectionResponseAccepted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01B50);
  }
  return result;
}

unint64_t sub_23F19C778()
{
  unint64_t result;

  result = qword_256E01B68;
  if (!qword_256E01B68)
  {
    result = MEMORY[0x242667160](&unk_23F27691C, &type metadata for SessionServerDebuggerEvent.InjectionValueCaptured.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E01B68);
  }
  return result;
}

void sub_23F19C7B4()
{
  sub_23F125DE4(&qword_256DFEAF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

void sub_23F19C7E0(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01B78, type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions, (uint64_t)&protocol conformance descriptor for SessionClientDebuggerEvent.EnableDeferredTransactions);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F19C81C(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01B80, type metadata accessor for SessionClientDebuggerEvent.DisableDeferredTransactions, (uint64_t)&protocol conformance descriptor for SessionClientDebuggerEvent.DisableDeferredTransactions);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F19C858(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01B88, type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction, (uint64_t)&protocol conformance descriptor for SessionClientDebuggerEvent.PostDeferredTransaction);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F19C894(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01B90, type metadata accessor for SessionClientDebuggerEvent.RequestCurrentTranscript, (uint64_t)&protocol conformance descriptor for SessionClientDebuggerEvent.RequestCurrentTranscript);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F19C8D0(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01B98, type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript, (uint64_t)&protocol conformance descriptor for SessionClientDebuggerEvent.ReplaceCurrentTranscript);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F19C90C(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01BA0, type metadata accessor for SessionClientDebuggerEvent.Sync, (uint64_t)&protocol conformance descriptor for SessionClientDebuggerEvent.Sync);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F19C948(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01BA8, type metadata accessor for SessionClientDebuggerEvent.EnableInjection, (uint64_t)&protocol conformance descriptor for SessionClientDebuggerEvent.EnableInjection);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F19C984(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01BB0, type metadata accessor for SessionClientDebuggerEvent.DisableInjection, (uint64_t)&protocol conformance descriptor for SessionClientDebuggerEvent.DisableInjection);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F19C9C0(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01BB8, type metadata accessor for SessionClientDebuggerEvent.InjectionResponse, (uint64_t)&protocol conformance descriptor for SessionClientDebuggerEvent.InjectionResponse);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F19C9FC(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01BC0, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.DeferredTransactionStateChanged);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_23F19CA38()
{
  return MEMORY[0x24BEE4578];
}

void sub_23F19CA44(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01BC8, type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F19CA80(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01BD0, type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.CurrentTranscript);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F19CABC(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01BD8, type metadata accessor for SessionServerDebuggerEvent.Synced, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.Synced);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F19CAF8(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01BE0, type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.TranscriptReplacementAccepted);
  *(_QWORD *)(a1 + 8) = v2;
}

unint64_t sub_23F19CB38()
{
  unint64_t result;

  result = qword_256E01BE8;
  if (!qword_256E01BE8)
  {
    result = MEMORY[0x242667160](&protocol conformance descriptor for SessionServerDebuggerEvent.RequestFailed.Reason, &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason);
    atomic_store(result, (unint64_t *)&qword_256E01BE8);
  }
  return result;
}

void sub_23F19CB74(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01BF0, type metadata accessor for SessionServerDebuggerEvent.RequestFailed, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.RequestFailed);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F19CBB0(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01BF8, type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.InjectionStateChanged);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23F19CBEC(uint64_t a1)
{
  uint64_t v2;

  sub_23F125DE4(&qword_256E01C00, type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted, (uint64_t)&protocol conformance descriptor for SessionServerDebuggerEvent.InjectionResponseAccepted);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionClientDebuggerEvent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v4 = *(_QWORD *)(type metadata accessor for SessionClientDebuggerEvent.Payload(0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        v6 = sub_23F267D84();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_14;
      case 2u:
        v8 = sub_23F267D84();
        v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
        v9(a1, a2, v8);
        v10 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
        *(uint64_t *)((char *)a1 + v10[5]) = *(uint64_t *)((char *)a2 + v10[5]);
        *(uint64_t *)((char *)a1 + v10[6]) = *(uint64_t *)((char *)a2 + v10[6]);
        v11 = v10[7];
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v13, 1, v8))
        {
          v14 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v9((uint64_t *)v12, (uint64_t *)v13, v8);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v12, 0, 1, v8);
        }
        v25 = v10[8];
        v26 = (uint64_t *)((char *)a1 + v25);
        v27 = (uint64_t *)((char *)a2 + v25);
        v28 = v27[1];
        *v26 = *v27;
        v26[1] = v28;
        *(uint64_t *)((char *)a1 + v10[9]) = *(uint64_t *)((char *)a2 + v10[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 4u:
        v15 = sub_23F267D84();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v16 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
        *(uint64_t *)((char *)a1 + *(int *)(v16 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v16 + 20));
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 9u:
        v17 = sub_23F267D84();
        v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        v18(a1, a2, v17);
        v19 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
        v18((uint64_t *)((char *)a1 + *(int *)(v19 + 20)), (uint64_t *)((char *)a2 + *(int *)(v19 + 20)), v17);
        v20 = *(int *)(v19 + 24);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = *((_QWORD *)v22 + 1);
        if (v23 >> 60 == 15)
        {
          *(_OWORD *)v21 = *(_OWORD *)v22;
        }
        else
        {
          v24 = *(_QWORD *)v22;
          sub_23F131170(*(_QWORD *)v22, *((_QWORD *)v22 + 1));
          *(_QWORD *)v21 = v24;
          *((_QWORD *)v21 + 1) = v23;
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v4 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for SessionClientDebuggerEvent(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;

  type metadata accessor for SessionClientDebuggerEvent.Payload(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
    case 5:
    case 7:
    case 8:
      v3 = sub_23F267D84();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 2:
      v4 = sub_23F267D84();
      v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
      v5(a1, v4);
      v6 = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
      swift_bridgeObjectRelease();
      v7 = a1 + *(int *)(v6 + 28);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v4))
        v5(v7, v4);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 4:
      v8 = sub_23F267D84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
      type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
LABEL_7:
      result = swift_bridgeObjectRelease();
      break;
    case 9:
      v9 = sub_23F267D84();
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
      v10(a1, v9);
      v11 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
      result = ((uint64_t (*)(uint64_t, uint64_t))v10)(a1 + *(int *)(v11 + 20), v9);
      v12 = (uint64_t *)(a1 + *(int *)(v11 + 24));
      v13 = v12[1];
      if (v13 >> 60 != 15)
        result = sub_23F1311B4(*v12, v13);
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for SessionClientDebuggerEvent(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v4 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
    case 5u:
    case 7u:
    case 8u:
      v5 = sub_23F267D84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      goto LABEL_12;
    case 2u:
      v6 = sub_23F267D84();
      v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      v8 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
      *(_QWORD *)&a1[v8[5]] = *(_QWORD *)&a2[v8[5]];
      *(_QWORD *)&a1[v8[6]] = *(_QWORD *)&a2[v8[6]];
      v9 = v8[7];
      v10 = &a1[v9];
      v11 = &a2[v9];
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6))
      {
        v12 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v7(v10, v11, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
      }
      v23 = v8[8];
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 4u:
      v13 = sub_23F267D84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
      *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 9u:
      v15 = sub_23F267D84();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(a1, a2, v15);
      v17 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
      v16(&a1[*(int *)(v17 + 20)], &a2[*(int *)(v17 + 20)], v15);
      v18 = *(int *)(v17 + 24);
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = *((_QWORD *)v20 + 1);
      if (v21 >> 60 == 15)
      {
        *(_OWORD *)v19 = *(_OWORD *)v20;
      }
      else
      {
        v22 = *(_QWORD *)v20;
        sub_23F131170(*(_QWORD *)v20, *((_QWORD *)v20 + 1));
        *(_QWORD *)v19 = v22;
        *((_QWORD *)v19 + 1) = v21;
      }
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for SessionClientDebuggerEvent(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;

  if (a1 != a2)
  {
    sub_23F16D354((uint64_t)a1, type metadata accessor for SessionClientDebuggerEvent.Payload);
    v4 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        v5 = sub_23F267D84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
        goto LABEL_13;
      case 2u:
        v6 = sub_23F267D84();
        v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
        v7(a1, a2, v6);
        v8 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
        *(_QWORD *)&a1[v8[5]] = *(_QWORD *)&a2[v8[5]];
        *(_QWORD *)&a1[v8[6]] = *(_QWORD *)&a2[v8[6]];
        v9 = v8[7];
        v10 = &a1[v9];
        v11 = &a2[v9];
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6))
        {
          v12 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          v7(v10, v11, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
        }
        v23 = v8[8];
        v24 = &a1[v23];
        v25 = &a2[v23];
        *(_QWORD *)v24 = *(_QWORD *)v25;
        *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
        *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 4u:
        v13 = sub_23F267D84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        v14 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
        *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 9u:
        v15 = sub_23F267D84();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        v16(a1, a2, v15);
        v17 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
        v16(&a1[*(int *)(v17 + 20)], &a2[*(int *)(v17 + 20)], v15);
        v18 = *(int *)(v17 + 24);
        v19 = &a1[v18];
        v20 = &a2[v18];
        v21 = *((_QWORD *)v20 + 1);
        if (v21 >> 60 == 15)
        {
          *(_OWORD *)v19 = *(_OWORD *)v20;
        }
        else
        {
          v22 = *(_QWORD *)v20;
          sub_23F131170(*(_QWORD *)v20, *((_QWORD *)v20 + 1));
          *(_QWORD *)v19 = v22;
          *((_QWORD *)v19 + 1) = v21;
        }
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for SessionClientDebuggerEvent(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;

  v4 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
    case 5u:
    case 7u:
    case 8u:
      v5 = sub_23F267D84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      goto LABEL_10;
    case 2u:
      v6 = sub_23F267D84();
      v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
      *(_QWORD *)&a1[v8[5]] = *(_QWORD *)&a2[v8[5]];
      *(_QWORD *)&a1[v8[6]] = *(_QWORD *)&a2[v8[6]];
      v9 = v8[7];
      v10 = &a1[v9];
      v11 = &a2[v9];
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v9], 1, v6))
      {
        v12 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v7(v10, v11, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
      }
      *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
      *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
      goto LABEL_10;
    case 4u:
      v13 = sub_23F267D84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v14 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
      *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
      goto LABEL_10;
    case 9u:
      v15 = sub_23F267D84();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(a1, a2, v15);
      v17 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
      v16(&a1[*(int *)(v17 + 20)], &a2[*(int *)(v17 + 20)], v15);
      *(_OWORD *)&a1[*(int *)(v17 + 24)] = *(_OWORD *)&a2[*(int *)(v17 + 24)];
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for SessionClientDebuggerEvent(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;

  if (a1 != a2)
  {
    sub_23F16D354((uint64_t)a1, type metadata accessor for SessionClientDebuggerEvent.Payload);
    v4 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        v5 = sub_23F267D84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
        goto LABEL_11;
      case 2u:
        v6 = sub_23F267D84();
        v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
        v7(a1, a2, v6);
        v8 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
        *(_QWORD *)&a1[v8[5]] = *(_QWORD *)&a2[v8[5]];
        *(_QWORD *)&a1[v8[6]] = *(_QWORD *)&a2[v8[6]];
        v9 = v8[7];
        v10 = &a1[v9];
        v11 = &a2[v9];
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v9], 1, v6))
        {
          v12 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          v7(v10, v11, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
        }
        *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
        *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
        goto LABEL_11;
      case 4u:
        v13 = sub_23F267D84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v14 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
        *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
        goto LABEL_11;
      case 9u:
        v15 = sub_23F267D84();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
        v16(a1, a2, v15);
        v17 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
        v16(&a1[*(int *)(v17 + 20)], &a2[*(int *)(v17 + 20)], v15);
        *(_OWORD *)&a1[*(int *)(v17 + 24)] = *(_OWORD *)&a2[*(int *)(v17 + 24)];
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F19DF08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F1A9988();
  v0 = sub_23F1A99EC();
  return sub_23F1A9568(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F19DF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F1A9988();
  v0 = sub_23F1A92F4();
  return sub_23F1A9570(v0, v1, v2, v3);
}

void sub_23F19DF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F19FB28(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.Payload);
}

uint64_t initializeBufferWithCopyOfBuffer for SessionServerDebuggerEvent(uint64_t *a1, uint64_t *a2)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for SessionServerDebuggerEvent.Payload(0) - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23F19DFC0 + 4 * byte_23F2721B3[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for SessionServerDebuggerEvent(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for SessionServerDebuggerEvent.Payload(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
    case 7:
    case 8:
    case 9:
    case 10:
    case 12:
      v3 = sub_23F267D84();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    case 1:
      swift_bridgeObjectRelease();
      v4 = a1 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0) + 24);
      v5 = sub_23F267D84();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 3:
    case 4:
      goto LABEL_11;
    case 5:
      swift_bridgeObjectRelease();
      v6 = a1 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0) + 24);
      v7 = sub_23F267D84();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v6, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      goto LABEL_11;
    case 6:
      v8 = sub_23F267D84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
      type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      goto LABEL_11;
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
      v10 = a1 + *(int *)(v9 + 32);
      v11 = sub_23F267D84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      swift_bridgeObjectRelease();
      sub_23F1311B4(*(_QWORD *)(a1 + *(int *)(v9 + 40)), *(_QWORD *)(a1 + *(int *)(v9 + 40) + 8));
LABEL_11:
      result = swift_bridgeObjectRelease();
      break;
    case 13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_23F1311B4(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for SessionServerDebuggerEvent()
{
  char *v0;

  type metadata accessor for SessionServerDebuggerEvent.Payload(0);
  v0 = (char *)sub_23F19E768 + 4 * byte_23F2721CF[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F19E768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for SessionServerDebuggerEvent(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F16D354(result, type metadata accessor for SessionServerDebuggerEvent.Payload);
    type metadata accessor for SessionServerDebuggerEvent.Payload(0);
    v2 = (char *)&loc_23F19ECD4 + 4 * word_23F2721DE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for SessionServerDebuggerEvent(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = type metadata accessor for SessionServerDebuggerEvent.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 7u:
    case 8u:
    case 0xAu:
      v5 = sub_23F267D84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      goto LABEL_16;
    case 1u:
      *a1 = *a2;
      v6 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
      v7 = v6[6];
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
      {
        v11 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
      }
      *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
      *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
      goto LABEL_16;
    case 5u:
      *a1 = *a2;
      v12 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
      v13 = *(int *)(v12 + 24);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v16))
      {
        v17 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v16);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v12 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 28));
      goto LABEL_16;
    case 6u:
      v18 = sub_23F267D84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
      v19 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      *(_QWORD *)((char *)a1 + *(int *)(v19 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v19 + 20));
      goto LABEL_16;
    case 9u:
      v20 = sub_23F267D84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
      v21 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
      *((_BYTE *)a1 + *(int *)(v21 + 20)) = *((_BYTE *)a2 + *(int *)(v21 + 20));
      goto LABEL_16;
    case 0xBu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      v22 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
      v23 = v22[8];
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = sub_23F267D84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      *(_OWORD *)((char *)a1 + v22[9]) = *(_OWORD *)((char *)a2 + v22[9]);
      *(_OWORD *)((char *)a1 + v22[10]) = *(_OWORD *)((char *)a2 + v22[10]);
      *(_OWORD *)((char *)a1 + v22[11]) = *(_OWORD *)((char *)a2 + v22[11]);
      goto LABEL_16;
    case 0xCu:
      v27 = sub_23F267D84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a1, a2, v27);
      v28 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
      *((_BYTE *)a1 + *(int *)(v28 + 20)) = *((_BYTE *)a2 + *(int *)(v28 + 20));
LABEL_16:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for SessionServerDebuggerEvent(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (a1 != a2)
  {
    sub_23F16D354((uint64_t)a1, type metadata accessor for SessionServerDebuggerEvent.Payload);
    v4 = type metadata accessor for SessionServerDebuggerEvent.Payload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 7u:
      case 8u:
      case 0xAu:
        v5 = sub_23F267D84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
        goto LABEL_17;
      case 1u:
        *a1 = *a2;
        v6 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
        v7 = v6[6];
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
        {
          v11 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
        }
        *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
        *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
        goto LABEL_17;
      case 5u:
        *a1 = *a2;
        v12 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
        v13 = *(int *)(v12 + 24);
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        v16 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v16))
        {
          v17 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v16);
        }
        *(_QWORD *)((char *)a1 + *(int *)(v12 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 28));
        goto LABEL_17;
      case 6u:
        v18 = sub_23F267D84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
        v19 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
        *(_QWORD *)((char *)a1 + *(int *)(v19 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v19 + 20));
        goto LABEL_17;
      case 9u:
        v20 = sub_23F267D84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
        v21 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
        *((_BYTE *)a1 + *(int *)(v21 + 20)) = *((_BYTE *)a2 + *(int *)(v21 + 20));
        goto LABEL_17;
      case 0xBu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        v22 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
        v23 = v22[8];
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_23F267D84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        *(_OWORD *)((char *)a1 + v22[9]) = *(_OWORD *)((char *)a2 + v22[9]);
        *(_OWORD *)((char *)a1 + v22[10]) = *(_OWORD *)((char *)a2 + v22[10]);
        *(_OWORD *)((char *)a1 + v22[11]) = *(_OWORD *)((char *)a2 + v22[11]);
        goto LABEL_17;
      case 0xCu:
        v27 = sub_23F267D84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a1, a2, v27);
        v28 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
        *((_BYTE *)a1 + *(int *)(v28 + 20)) = *((_BYTE *)a2 + *(int *)(v28 + 20));
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F19FAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F1A9978();
  v0 = sub_23F1A99EC();
  return sub_23F1A9568(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F19FB00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F1A9978();
  v0 = sub_23F1A92F4();
  return sub_23F1A9570(v0, v1, v2, v3);
}

void sub_23F19FB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F19FB28(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.Payload);
}

void sub_23F19FB28(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unint64_t v4;

  a4(319);
  if (v4 <= 0x3F)
    swift_initStructMetadata();
  sub_23F1A9BE8();
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionClientDebuggerEvent.Payload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *, uint64_t *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        v7 = sub_23F267D84();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_14;
      case 2u:
        v9 = sub_23F267D84();
        v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
        v10(a1, a2, v9);
        v11 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
        *(uint64_t *)((char *)a1 + v11[5]) = *(uint64_t *)((char *)a2 + v11[5]);
        *(uint64_t *)((char *)a1 + v11[6]) = *(uint64_t *)((char *)a2 + v11[6]);
        v12 = v11[7];
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v9))
        {
          v15 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          v10((uint64_t *)v13, (uint64_t *)v14, v9);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v9);
        }
        v26 = v11[8];
        v27 = (uint64_t *)((char *)a1 + v26);
        v28 = (uint64_t *)((char *)a2 + v26);
        v29 = v28[1];
        *v27 = *v28;
        v27[1] = v29;
        *(uint64_t *)((char *)a1 + v11[9]) = *(uint64_t *)((char *)a2 + v11[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 4u:
        v16 = sub_23F267D84();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        v17 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
        *(uint64_t *)((char *)a1 + *(int *)(v17 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v17 + 20));
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 9u:
        v18 = sub_23F267D84();
        v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        v19(a1, a2, v18);
        v20 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
        v19((uint64_t *)((char *)a1 + *(int *)(v20 + 20)), (uint64_t *)((char *)a2 + *(int *)(v20 + 20)), v18);
        v21 = *(int *)(v20 + 24);
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = *((_QWORD *)v23 + 1);
        if (v24 >> 60 == 15)
        {
          *(_OWORD *)v22 = *(_OWORD *)v23;
        }
        else
        {
          v25 = *(_QWORD *)v23;
          sub_23F131170(*(_QWORD *)v23, *((_QWORD *)v23 + 1));
          *(_QWORD *)v22 = v25;
          *((_QWORD *)v22 + 1) = v24;
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for SessionClientDebuggerEvent.Payload(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
    case 5:
    case 7:
    case 8:
      v3 = sub_23F267D84();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 2:
      v4 = sub_23F267D84();
      v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
      v5(a1, v4);
      v6 = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
      swift_bridgeObjectRelease();
      v7 = a1 + *(int *)(v6 + 28);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v4))
        v5(v7, v4);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 4:
      v8 = sub_23F267D84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
      type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
LABEL_7:
      result = swift_bridgeObjectRelease();
      break;
    case 9:
      v9 = sub_23F267D84();
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
      v10(a1, v9);
      v11 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
      result = ((uint64_t (*)(uint64_t, uint64_t))v10)(a1 + *(int *)(v11 + 20), v9);
      v12 = (uint64_t *)(a1 + *(int *)(v11 + 24));
      v13 = v12[1];
      if (v13 >> 60 != 15)
        result = sub_23F1311B4(*v12, v13);
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for SessionClientDebuggerEvent.Payload(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
    case 5u:
    case 7u:
    case 8u:
      v6 = sub_23F267D84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_12;
    case 2u:
      v7 = sub_23F267D84();
      v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      v9 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
      *(_QWORD *)&a1[v9[5]] = *(_QWORD *)&a2[v9[5]];
      *(_QWORD *)&a1[v9[6]] = *(_QWORD *)&a2[v9[6]];
      v10 = v9[7];
      v11 = &a1[v10];
      v12 = &a2[v10];
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v12, 1, v7))
      {
        v13 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v8(v11, v12, v7);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v11, 0, 1, v7);
      }
      v24 = v9[8];
      v25 = &a1[v24];
      v26 = &a2[v24];
      v27 = *((_QWORD *)v26 + 1);
      *(_QWORD *)v25 = *(_QWORD *)v26;
      *((_QWORD *)v25 + 1) = v27;
      *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 4u:
      v14 = sub_23F267D84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v15 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
      *(_QWORD *)&a1[*(int *)(v15 + 20)] = *(_QWORD *)&a2[*(int *)(v15 + 20)];
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 9u:
      v16 = sub_23F267D84();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v17(a1, a2, v16);
      v18 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
      v17(&a1[*(int *)(v18 + 20)], &a2[*(int *)(v18 + 20)], v16);
      v19 = *(int *)(v18 + 24);
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = *((_QWORD *)v21 + 1);
      if (v22 >> 60 == 15)
      {
        *(_OWORD *)v20 = *(_OWORD *)v21;
      }
      else
      {
        v23 = *(_QWORD *)v21;
        sub_23F131170(*(_QWORD *)v21, *((_QWORD *)v21 + 1));
        *(_QWORD *)v20 = v23;
        *((_QWORD *)v20 + 1) = v22;
      }
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for SessionClientDebuggerEvent.Payload(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;

  if (a1 != a2)
  {
    sub_23F16D354((uint64_t)a1, type metadata accessor for SessionClientDebuggerEvent.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        v6 = sub_23F267D84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_13;
      case 2u:
        v7 = sub_23F267D84();
        v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
        v8(a1, a2, v7);
        v9 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
        *(_QWORD *)&a1[v9[5]] = *(_QWORD *)&a2[v9[5]];
        *(_QWORD *)&a1[v9[6]] = *(_QWORD *)&a2[v9[6]];
        v10 = v9[7];
        v11 = &a1[v10];
        v12 = &a2[v10];
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v12, 1, v7))
        {
          v13 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          v8(v11, v12, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v11, 0, 1, v7);
        }
        v24 = v9[8];
        v25 = &a1[v24];
        v26 = &a2[v24];
        *(_QWORD *)v25 = *(_QWORD *)v26;
        *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
        *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 4u:
        v14 = sub_23F267D84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        v15 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
        *(_QWORD *)&a1[*(int *)(v15 + 20)] = *(_QWORD *)&a2[*(int *)(v15 + 20)];
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 9u:
        v16 = sub_23F267D84();
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
        v17(a1, a2, v16);
        v18 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
        v17(&a1[*(int *)(v18 + 20)], &a2[*(int *)(v18 + 20)], v16);
        v19 = *(int *)(v18 + 24);
        v20 = &a1[v19];
        v21 = &a2[v19];
        v22 = *((_QWORD *)v21 + 1);
        if (v22 >> 60 == 15)
        {
          *(_OWORD *)v20 = *(_OWORD *)v21;
        }
        else
        {
          v23 = *(_QWORD *)v21;
          sub_23F131170(*(_QWORD *)v21, *((_QWORD *)v21 + 1));
          *(_QWORD *)v20 = v23;
          *((_QWORD *)v20 + 1) = v22;
        }
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for SessionClientDebuggerEvent.Payload(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
    case 5u:
    case 7u:
    case 8u:
      v6 = sub_23F267D84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_10;
    case 2u:
      v7 = sub_23F267D84();
      v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      v9 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
      *(_QWORD *)&a1[v9[5]] = *(_QWORD *)&a2[v9[5]];
      *(_QWORD *)&a1[v9[6]] = *(_QWORD *)&a2[v9[6]];
      v10 = v9[7];
      v11 = &a1[v10];
      v12 = &a2[v10];
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v10], 1, v7))
      {
        v13 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v8(v11, v12, v7);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v11, 0, 1, v7);
      }
      *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
      *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
      goto LABEL_10;
    case 4u:
      v14 = sub_23F267D84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      v15 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
      *(_QWORD *)&a1[*(int *)(v15 + 20)] = *(_QWORD *)&a2[*(int *)(v15 + 20)];
      goto LABEL_10;
    case 9u:
      v16 = sub_23F267D84();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
      v17(a1, a2, v16);
      v18 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
      v17(&a1[*(int *)(v18 + 20)], &a2[*(int *)(v18 + 20)], v16);
      *(_OWORD *)&a1[*(int *)(v18 + 24)] = *(_OWORD *)&a2[*(int *)(v18 + 24)];
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for SessionClientDebuggerEvent.Payload(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;

  if (a1 != a2)
  {
    sub_23F16D354((uint64_t)a1, type metadata accessor for SessionClientDebuggerEvent.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        v6 = sub_23F267D84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_11;
      case 2u:
        v7 = sub_23F267D84();
        v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
        v8(a1, a2, v7);
        v9 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
        *(_QWORD *)&a1[v9[5]] = *(_QWORD *)&a2[v9[5]];
        *(_QWORD *)&a1[v9[6]] = *(_QWORD *)&a2[v9[6]];
        v10 = v9[7];
        v11 = &a1[v10];
        v12 = &a2[v10];
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v10], 1, v7))
        {
          v13 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          v8(v11, v12, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v11, 0, 1, v7);
        }
        *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
        *(_QWORD *)&a1[v9[9]] = *(_QWORD *)&a2[v9[9]];
        goto LABEL_11;
      case 4u:
        v14 = sub_23F267D84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        v15 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
        *(_QWORD *)&a1[*(int *)(v15 + 20)] = *(_QWORD *)&a2[*(int *)(v15 + 20)];
        goto LABEL_11;
      case 9u:
        v16 = sub_23F267D84();
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
        v17(a1, a2, v16);
        v18 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
        v17(&a1[*(int *)(v18 + 20)], &a2[*(int *)(v18 + 20)], v16);
        *(_OWORD *)&a1[*(int *)(v18 + 24)] = *(_OWORD *)&a2[*(int *)(v18 + 24)];
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23F1A0E24()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = sub_23F267D84();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(319);
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SessionServerDebuggerEvent.Payload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23F1A0F50 + 4 * byte_23F272250[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for SessionServerDebuggerEvent.Payload(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
    case 7:
    case 8:
    case 9:
    case 10:
    case 12:
      v3 = sub_23F267D84();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    case 1:
      swift_bridgeObjectRelease();
      v4 = a1 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0) + 24);
      v5 = sub_23F267D84();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 3:
    case 4:
      goto LABEL_11;
    case 5:
      swift_bridgeObjectRelease();
      v6 = a1 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0) + 24);
      v7 = sub_23F267D84();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v6, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      goto LABEL_11;
    case 6:
      v8 = sub_23F267D84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
      type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      goto LABEL_11;
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
      v10 = a1 + *(int *)(v9 + 32);
      v11 = sub_23F267D84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      swift_bridgeObjectRelease();
      sub_23F1311B4(*(_QWORD *)(a1 + *(int *)(v9 + 40)), *(_QWORD *)(a1 + *(int *)(v9 + 40) + 8));
LABEL_11:
      result = swift_bridgeObjectRelease();
      break;
    case 13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_23F1311B4(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for SessionServerDebuggerEvent.Payload()
{
  char *v0;

  v0 = (char *)sub_23F1A16E0 + 4 * byte_23F27226C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F1A16E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for SessionServerDebuggerEvent.Payload(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F16D354(result, type metadata accessor for SessionServerDebuggerEvent.Payload);
    v2 = (char *)&loc_23F1A1C44 + 4 * word_23F27227A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for SessionServerDebuggerEvent.Payload(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 7u:
    case 8u:
    case 0xAu:
      v6 = sub_23F267D84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_16;
    case 1u:
      *a1 = *a2;
      v7 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
      v8 = v7[6];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
      {
        v12 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
      }
      *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
      *(_QWORD *)((char *)a1 + v7[8]) = *(_QWORD *)((char *)a2 + v7[8]);
      goto LABEL_16;
    case 5u:
      *a1 = *a2;
      v13 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
      v14 = *(int *)(v13 + 24);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_23F267D84();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v17))
      {
        v18 = sub_23F1217E8(&qword_256DFEB98);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v15, 0, 1, v17);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v13 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 28));
      goto LABEL_16;
    case 6u:
      v19 = sub_23F267D84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
      v20 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      *(_QWORD *)((char *)a1 + *(int *)(v20 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v20 + 20));
      goto LABEL_16;
    case 9u:
      v21 = sub_23F267D84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
      v22 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
      *((_BYTE *)a1 + *(int *)(v22 + 20)) = *((_BYTE *)a2 + *(int *)(v22 + 20));
      goto LABEL_16;
    case 0xBu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      v23 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
      v24 = v23[8];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = sub_23F267D84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      *(_OWORD *)((char *)a1 + v23[9]) = *(_OWORD *)((char *)a2 + v23[9]);
      *(_OWORD *)((char *)a1 + v23[10]) = *(_OWORD *)((char *)a2 + v23[10]);
      *(_OWORD *)((char *)a1 + v23[11]) = *(_OWORD *)((char *)a2 + v23[11]);
      goto LABEL_16;
    case 0xCu:
      v28 = sub_23F267D84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(a1, a2, v28);
      v29 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
      *((_BYTE *)a1 + *(int *)(v29 + 20)) = *((_BYTE *)a2 + *(int *)(v29 + 20));
LABEL_16:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for SessionServerDebuggerEvent.Payload(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (a1 != a2)
  {
    sub_23F16D354((uint64_t)a1, type metadata accessor for SessionServerDebuggerEvent.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 7u:
      case 8u:
      case 0xAu:
        v6 = sub_23F267D84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_17;
      case 1u:
        *a1 = *a2;
        v7 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
        v8 = v7[6];
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
        {
          v12 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
        }
        *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
        *(_QWORD *)((char *)a1 + v7[8]) = *(_QWORD *)((char *)a2 + v7[8]);
        goto LABEL_17;
      case 5u:
        *a1 = *a2;
        v13 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
        v14 = *(int *)(v13 + 24);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_23F267D84();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v17))
        {
          v18 = sub_23F1217E8(&qword_256DFEB98);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v15, 0, 1, v17);
        }
        *(_QWORD *)((char *)a1 + *(int *)(v13 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 28));
        goto LABEL_17;
      case 6u:
        v19 = sub_23F267D84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
        v20 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
        *(_QWORD *)((char *)a1 + *(int *)(v20 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v20 + 20));
        goto LABEL_17;
      case 9u:
        v21 = sub_23F267D84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
        v22 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
        *((_BYTE *)a1 + *(int *)(v22 + 20)) = *((_BYTE *)a2 + *(int *)(v22 + 20));
        goto LABEL_17;
      case 0xBu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        v23 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
        v24 = v23[8];
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = sub_23F267D84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        *(_OWORD *)((char *)a1 + v23[9]) = *(_OWORD *)((char *)a2 + v23[9]);
        *(_OWORD *)((char *)a1 + v23[10]) = *(_OWORD *)((char *)a2 + v23[10]);
        *(_OWORD *)((char *)a1 + v23[11]) = *(_OWORD *)((char *)a2 + v23[11]);
        goto LABEL_17;
      case 0xCu:
        v28 = sub_23F267D84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(a1, a2, v28);
        v29 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
        *((_BYTE *)a1 + *(int *)(v29 + 20)) = *((_BYTE *)a2 + *(int *)(v29 + 20));
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23F1A2A2C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  result = sub_23F267D84();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(319);
              if (v7 <= 0x3F)
              {
                swift_initEnumMetadataMultiPayload();
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.EnableDeferredTransactions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.EnableDeferredTransactions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F1A2B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F19FB28(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.DisableDeferredTransactions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.DisableDeferredTransactions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *initializeBufferWithCopyOfBuffer for SessionClientDebuggerEvent.PostDeferredTransaction(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = a3[6];
    *(_QWORD *)&a1[a3[5]] = *(uint64_t *)((char *)a2 + a3[5]);
    *(_QWORD *)&a1[v9] = *(uint64_t *)((char *)a2 + v9);
    v10 = a3[7];
    v11 = &a1[v10];
    v12 = (char *)a2 + v10;
    swift_bridgeObjectRetain();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v12, 1, v7))
    {
      v13 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v11, 0, 1, v7);
    }
    v15 = a3[8];
    v16 = a3[9];
    v17 = &a1[v15];
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *(_QWORD *)v17 = *v18;
    *((_QWORD *)v17 + 1) = v19;
    *(_QWORD *)&a1[v16] = *(uint64_t *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SessionClientDebuggerEvent.PostDeferredTransaction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v4 = sub_23F267D84();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 28);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v6, 1, v4))
    v5(v6, v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for SessionClientDebuggerEvent.PostDeferredTransaction(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = sub_23F267D84();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  v9 = a3[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  swift_bridgeObjectRetain();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6))
  {
    v12 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
  }
  v13 = a3[8];
  v14 = a3[9];
  v15 = &a1[v13];
  v16 = &a2[v13];
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v17;
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for SessionClientDebuggerEvent.PostDeferredTransaction(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = sub_23F267D84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v9 = a3[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a1[v9], 1, v6);
  v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for SessionClientDebuggerEvent.PostDeferredTransaction(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23F267D84();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  v9 = a3[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v9], 1, v6))
  {
    v12 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
  }
  v13 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  return a1;
}

char *assignWithTake for SessionClientDebuggerEvent.PostDeferredTransaction(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_23F267D84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  v9 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a1[v9], 1, v6);
  v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = (uint64_t *)&a2[v15];
  v19 = *v17;
  v18 = v17[1];
  *(_QWORD *)v16 = v19;
  *((_QWORD *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.PostDeferredTransaction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F1A3270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F131B8C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    if ((_DWORD)a2 == 0x7FFFFFFF)
    {
      sub_23F13188C(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
      sub_23F12612C();
      return;
    }
    v7 = sub_23F1217E8(&qword_256DFEB98);
    v8 = a1 + *(int *)(a3 + 28);
  }
  sub_23F1315B8(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.PostDeferredTransaction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F1A32FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F131B8C();
  sub_23F17F968();
  if (v9)
  {
    v10 = v8;
    v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      sub_23F12612C();
      return;
    }
    v10 = sub_23F1217E8(&qword_256DFEB98);
    v11 = a1 + *(int *)(a4 + 28);
  }
  sub_23F126098(v11, a2, a2, v10);
}

void sub_23F1A337C()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F267D84();
  if (v0 <= 0x3F)
  {
    sub_23F1A3428();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23F1A3428()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E005C0)
  {
    sub_23F267D84();
    v0 = sub_23F26845C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256E005C0);
  }
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.RequestCurrentTranscript()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.RequestCurrentTranscript()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F1A3494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F131B8C();
  v0 = sub_23F1A92F4();
  return sub_23F1A9570(v0, v1, v2, v3);
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.ReplaceCurrentTranscript()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.ReplaceCurrentTranscript()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F1A34F0()
{
  sub_23F1A5838();
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.Sync()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F1A350C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F131B8C();
  v0 = sub_23F1A99EC();
  return sub_23F1A9568(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.Sync()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void type metadata accessor for SessionClientDebuggerEvent.TerminateSession()
{
  sub_23F131844();
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.EnableInjection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.EnableInjection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.DisableInjection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.DisableInjection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionClientDebuggerEvent.InjectionResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F267D84();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *((_QWORD *)v11 + 1);
    if (v12 >> 60 == 15)
    {
      *(_OWORD *)v10 = *(_OWORD *)v11;
    }
    else
    {
      v14 = *(_QWORD *)v11;
      sub_23F131170(*(_QWORD *)v11, *((_QWORD *)v11 + 1));
      *(_QWORD *)v10 = v14;
      *((_QWORD *)v10 + 1) = v12;
    }
  }
  return a1;
}

uint64_t destroy for SessionClientDebuggerEvent.InjectionResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v7;
  unint64_t v8;

  v4 = sub_23F267D84();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  result = ((uint64_t (*)(uint64_t, uint64_t))v5)(a1 + *(int *)(a2 + 20), v4);
  v7 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  v8 = v7[1];
  if (v8 >> 60 != 15)
    return sub_23F1311B4(*v7, v8);
  return result;
}

uint64_t initializeWithCopy for SessionClientDebuggerEvent.InjectionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = (uint64_t *)(a2 + v8);
  v11 = v10[1];
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
  }
  else
  {
    v12 = *v10;
    sub_23F131170(*v10, v10[1]);
    *(_QWORD *)v9 = v12;
    *(_QWORD *)(v9 + 8) = v11;
  }
  return a1;
}

uint64_t assignWithCopy for SessionClientDebuggerEvent.InjectionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = *(_QWORD *)(a2 + v8 + 8);
  if (*(_QWORD *)(a1 + v8 + 8) >> 60 != 15)
  {
    if (v11 >> 60 != 15)
    {
      v13 = *v10;
      sub_23F131170(v13, v11);
      v14 = *v9;
      v15 = v9[1];
      *v9 = v13;
      v9[1] = v11;
      sub_23F1311B4(v14, v15);
      return a1;
    }
    sub_23F15B1EC((uint64_t)v9);
    goto LABEL_6;
  }
  if (v11 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v9 = *(_OWORD *)v10;
    return a1;
  }
  v12 = *v10;
  sub_23F131170(v12, v11);
  *v9 = v12;
  v9[1] = v11;
  return a1;
}

uint64_t initializeWithTake for SessionClientDebuggerEvent.InjectionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for SessionClientDebuggerEvent.InjectionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v6 = sub_23F267D84();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = *(_QWORD *)(a1 + v8 + 8);
  if (v11 >> 60 != 15)
  {
    v12 = v10[1];
    if (v12 >> 60 != 15)
    {
      v13 = *v9;
      *v9 = *v10;
      v9[1] = v12;
      sub_23F1311B4(v13, v11);
      return a1;
    }
    sub_23F15B1EC((uint64_t)v9);
  }
  *(_OWORD *)v9 = *(_OWORD *)v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.InjectionResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F1A39B8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F131B8C();
  sub_23F1A9650();
  if (v0)
  {
    v1 = sub_23F1A96A4();
    sub_23F1315B8(v1, v2, v3);
  }
  else
  {
    sub_23F12612C();
  }
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.InjectionResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F1A3A24(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  sub_23F131B8C();
  sub_23F17F968();
  if (v7)
  {
    v8 = sub_23F1A92F4();
    sub_23F126098(v8, v9, v10, v11);
  }
  else
  {
    v12 = (_QWORD *)(a1 + *(int *)(a4 + 24));
    *v12 = 0;
    v12[1] = (unint64_t)((~a2 >> 2) & 3 | (4 * ~a2)) << 60;
    sub_23F12612C();
  }
}

uint64_t sub_23F1A3A80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F267D84();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionStateChanged()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionStateChanged()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionServerDebuggerEvent.DeferredTransactionReady(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F267D84();
    swift_bridgeObjectRetain();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v13 = a3[7];
    v14 = a3[8];
    v15 = (uint64_t *)((char *)v7 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *(uint64_t *)((char *)v7 + v14) = *(uint64_t *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for SessionServerDebuggerEvent.DeferredTransactionReady(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23F267D84();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SessionServerDebuggerEvent.DeferredTransactionReady(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F267D84();
  swift_bridgeObjectRetain();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SessionServerDebuggerEvent.DeferredTransactionReady(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F267D84();
  v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = a3[7];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for SessionServerDebuggerEvent.DeferredTransactionReady(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  return a1;
}

_QWORD *assignWithTake for SessionServerDebuggerEvent.DeferredTransactionReady(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F267D84();
  v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = a3[7];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionReady()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionReady()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F1A4150()
{
  unint64_t v0;

  sub_23F1A3428();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionPostAccepted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionPostAccepted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t initializeBufferWithCopyOfBuffer for SessionServerDebuggerEvent.SpanStarted(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SessionServerDebuggerEvent.SpanStarted()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithTake for SessionServerDebuggerEvent.SpanStarted(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for SessionServerDebuggerEvent.SpanStarted()
{
  sub_23F131844();
}

void _s16IntelligenceFlow26SessionServerDebuggerEventV11SpanStartedVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  sub_23F1317F8();
  sub_23F126078();
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV11SpanStartedVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23F1A4304(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SessionServerDebuggerEvent.SpanEnded()
{
  sub_23F131844();
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionServerDebuggerEvent.FinalTransactionPosted(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F267D84();
    swift_bridgeObjectRetain();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F1217E8(&qword_256DFEB98);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
    }
    *(uint64_t *)((char *)v7 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for SessionServerDebuggerEvent.FinalTransactionPosted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23F267D84();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SessionServerDebuggerEvent.FinalTransactionPosted(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F267D84();
  swift_bridgeObjectRetain();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SessionServerDebuggerEvent.FinalTransactionPosted(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F267D84();
  v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for SessionServerDebuggerEvent.FinalTransactionPosted(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F267D84();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithTake for SessionServerDebuggerEvent.FinalTransactionPosted(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F267D84();
  v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23F1217E8(&qword_256DFEB98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.FinalTransactionPosted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F1A48F4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23F13188C(*a1);
    sub_23F12612C();
  }
  else
  {
    v6 = sub_23F1217E8(&qword_256DFEB98);
    sub_23F1315B8((uint64_t)a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.FinalTransactionPosted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F1A4960()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F131BA4();
  if (v3)
  {
    *v1 = (v0 - 1);
    sub_23F12612C();
  }
  else
  {
    v4 = v2;
    v5 = sub_23F1217E8(&qword_256DFEB98);
    sub_23F126098((uint64_t)v1 + *(int *)(v4 + 24), v0, v0, v5);
  }
}

void sub_23F1A49B4()
{
  unint64_t v0;

  sub_23F1A3428();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void _s16IntelligenceFlow26SessionServerDebuggerEventV17CurrentTranscriptVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F1A9C8C();
  if ((v3 & 0x20000) != 0)
  {
    sub_23F1A95AC();
  }
  else
  {
    v4 = v2;
    v5 = sub_23F131B8C();
    sub_23F126138(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16));
    *(_QWORD *)(v0 + *(int *)(v4 + 20)) = *(_QWORD *)(v1 + *(int *)(v4 + 20));
    swift_bridgeObjectRetain();
  }
  sub_23F12612C();
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV17CurrentTranscriptVwxx_0()
{
  uint64_t v0;
  void (*v1)(uint64_t);

  sub_23F131B8C();
  v0 = sub_23F15EAE0();
  v1(v0);
  return swift_bridgeObjectRelease();
}

void _s16IntelligenceFlow26SessionServerDebuggerEventV17CurrentTranscriptVwcp_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F131B8C();
  sub_23F1A93A8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  sub_23F12612C();
}

void _s16IntelligenceFlow26SessionServerDebuggerEventV17CurrentTranscriptVwca_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F131B8C();
  sub_23F1A93A8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  sub_23F1318B8();
  sub_23F12612C();
}

void _s16IntelligenceFlow26SessionServerDebuggerEventV17CurrentTranscriptVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F131B8C();
  sub_23F1A93A8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F12612C();
}

void _s16IntelligenceFlow26SessionServerDebuggerEventV17CurrentTranscriptVwta_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);

  sub_23F131B8C();
  sub_23F1A99FC();
  sub_23F1A93A8(v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  sub_23F12612C();
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.CurrentTranscript()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F1A4C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F131B8C();
  sub_23F1A9650();
  if (v5)
  {
    v6 = sub_23F1A96A4();
    sub_23F1315B8(v6, v7, v8);
  }
  else
  {
    sub_23F13188C(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
    sub_23F12612C();
  }
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.CurrentTranscript()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F1A4C64(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F131B8C();
  sub_23F17F968();
  if (v7)
  {
    v8 = sub_23F1A92F4();
    sub_23F126098(v8, v9, v10, v11);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    sub_23F12612C();
  }
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.Synced()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.Synced()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.TranscriptReplacementAccepted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.TranscriptReplacementAccepted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t assignWithCopy for SessionServerDebuggerEvent.RequestFailed(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SessionServerDebuggerEvent.RequestFailed(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.RequestFailed()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F1A4DB0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F131B8C();
  sub_23F1A9650();
  if (v0)
  {
    v1 = sub_23F1A96A4();
    sub_23F1315B8(v1, v2, v3);
  }
  else
  {
    sub_23F12612C();
  }
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.RequestFailed()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F1A4E0C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F131B8C();
  sub_23F17F968();
  if (v7)
  {
    v8 = sub_23F1A92F4();
    sub_23F126098(v8, v9, v10, v11);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
    sub_23F12612C();
  }
}

void sub_23F1A4E58()
{
  sub_23F1A5838();
}

void type metadata accessor for SessionServerDebuggerEvent.RequestFailed.Reason()
{
  sub_23F131844();
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV31DeferredTransactionStateChangedVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F131B8C();
  v0 = sub_23F17FE50();
  return sub_23F126180(v0, v1, v2, v3);
}

void _s16IntelligenceFlow26SessionServerDebuggerEventV31DeferredTransactionStateChangedVwcp_0()
{
  uint64_t v0;

  v0 = sub_23F131B8C();
  sub_23F12619C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16));
  sub_23F126078();
}

void _s16IntelligenceFlow26SessionServerDebuggerEventV31DeferredTransactionStateChangedVwca_0()
{
  uint64_t v0;

  v0 = sub_23F131B8C();
  sub_23F12619C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 24));
  sub_23F126078();
}

void _s16IntelligenceFlow26SessionServerDebuggerEventV31DeferredTransactionStateChangedVwtk_0()
{
  uint64_t v0;

  v0 = sub_23F131B8C();
  sub_23F12619C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32));
  sub_23F126078();
}

void _s16IntelligenceFlow26SessionServerDebuggerEventV31DeferredTransactionStateChangedVwta_0()
{
  uint64_t (*v0)(uint64_t, uint64_t);

  sub_23F131B8C();
  sub_23F1A99FC();
  sub_23F12619C(v0);
  sub_23F126078();
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionStateChanged()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionStateChanged()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionServerDebuggerEvent.InjectionRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a3[8];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    a1[6] = a2[6];
    v12 = sub_23F267D84();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[9];
    v15 = a3[10];
    v16 = (uint64_t *)((char *)v4 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (uint64_t *)((char *)v4 + v15);
    v20 = *(uint64_t *)((char *)a2 + v15);
    v21 = *(uint64_t *)((char *)a2 + v15 + 8);
    swift_bridgeObjectRetain();
    sub_23F131170(v20, v21);
    *v19 = v20;
    v19[1] = v21;
    v22 = a3[11];
    v23 = (uint64_t *)((char *)v4 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SessionServerDebuggerEvent.InjectionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  sub_23F1311B4(*(_QWORD *)(a1 + *(int *)(a2 + 40)), *(_QWORD *)(a1 + *(int *)(a2 + 40) + 8));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionServerDebuggerEvent.InjectionRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = a3[8];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v11 = sub_23F267D84();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[9];
  v14 = a3[10];
  v15 = (_QWORD *)(a1 + v13);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (uint64_t *)(a1 + v14);
  v19 = *(_QWORD *)(a2 + v14);
  v20 = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  sub_23F131170(v19, v20);
  *v18 = v19;
  v18[1] = v20;
  v21 = a3[11];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SessionServerDebuggerEvent.InjectionRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[8];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F267D84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[9];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[10];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = *v15;
  v17 = v15[1];
  sub_23F131170(*v15, v17);
  v18 = *v14;
  v19 = v14[1];
  *v14 = v16;
  v14[1] = v17;
  sub_23F1311B4(v18, v19);
  v20 = a3[11];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SessionServerDebuggerEvent.InjectionRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for SessionServerDebuggerEvent.InjectionRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[8];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23F267D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[10];
  v18 = *(_QWORD *)(a1 + v17);
  v19 = *(_QWORD *)(a1 + v17 + 8);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  sub_23F1311B4(v18, v19);
  v20 = a3[11];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F1A5524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23F13188C(*(_QWORD *)(a1 + 16));
    sub_23F12612C();
  }
  else
  {
    v6 = sub_23F131B8C();
    sub_23F1315B8(a1 + *(int *)(a3 + 32), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F1A5584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F131BA4();
  if (v3)
  {
    *(_QWORD *)(v1 + 16) = (v0 - 1);
    sub_23F12612C();
  }
  else
  {
    v4 = v2;
    v5 = sub_23F131B8C();
    sub_23F126098(v1 + *(int *)(v4 + 32), v0, v0, v5);
  }
}

uint64_t sub_23F1A55D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F267D84();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void _s16IntelligenceFlow26SessionServerDebuggerEventV13RequestFailedVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F1A9C8C();
  if ((v3 & 0x20000) != 0)
  {
    sub_23F1A95AC();
  }
  else
  {
    v4 = v2;
    v5 = sub_23F131B8C();
    sub_23F126138(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16));
    *(_BYTE *)(v0 + *(int *)(v4 + 20)) = *(_BYTE *)(v1 + *(int *)(v4 + 20));
  }
  sub_23F12612C();
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV31DeferredTransactionStateChangedVwxx_0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F131B8C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

void _s16IntelligenceFlow26SessionServerDebuggerEventV13RequestFailedVwcp_0()
{
  uint64_t v0;

  v0 = sub_23F131B8C();
  sub_23F1A93A8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16));
  sub_23F1A9D84();
  sub_23F12612C();
}

void _s16IntelligenceFlow26SessionServerDebuggerEventV13RequestFailedVwtk_0()
{
  uint64_t v0;

  v0 = sub_23F131B8C();
  sub_23F1A93A8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32));
  sub_23F1A9D84();
  sub_23F12612C();
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionResponseAccepted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F1A5770()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F131B8C();
  sub_23F1A9650();
  if (v0)
  {
    v1 = sub_23F1A96A4();
    sub_23F1315B8(v1, v2, v3);
  }
  else
  {
    sub_23F12612C();
  }
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionResponseAccepted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F1A57E0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F131B8C();
  sub_23F17F968();
  if (v7)
  {
    v8 = sub_23F1A92F4();
    sub_23F126098(v8, v9, v10, v11);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
    sub_23F12612C();
  }
}

void sub_23F1A582C()
{
  sub_23F1A5838();
}

void sub_23F1A5838()
{
  unint64_t v0;

  sub_23F267D84();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
  sub_23F1A9BE8();
}

uint64_t destroy for SessionServerDebuggerEvent.InjectionValueCaptured(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_23F1311B4(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));
}

uint64_t initializeWithCopy for SessionServerDebuggerEvent.InjectionValueCaptured(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23F131170(v6, v7);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v7;
  return a1;
}

_QWORD *assignWithCopy for SessionServerDebuggerEvent.InjectionValueCaptured(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[9];
  v4 = a2[10];
  sub_23F131170(v5, v4);
  v6 = a1[9];
  v7 = a1[10];
  a1[9] = v5;
  a1[10] = v4;
  sub_23F1311B4(v6, v7);
  return a1;
}

void *initializeWithTake for SessionServerDebuggerEvent.InjectionValueCaptured(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for SessionServerDebuggerEvent.InjectionValueCaptured(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  sub_23F1311B4(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionValueCaptured(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionValueCaptured(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SessionServerDebuggerEvent.InjectionValueCaptured()
{
  sub_23F131844();
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.InjectionValueCaptured.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.InjectionValueCaptured.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.InjectionResponseAccepted.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23F1A5BD0 + 4 * byte_23F2722B5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23F1A5C04 + 4 * byte_23F2722B0[v4]))();
}

uint64_t sub_23F1A5C04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1A5C0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F1A5C14);
  return result;
}

uint64_t sub_23F1A5C20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F1A5C28);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23F1A5C2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F1A5C34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.InjectionRequest.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.InjectionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.InjectionStateChanged.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.RequestFailed.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.RequestFailed.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.RequestFailed.Reason.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.RequestFailed.Reason.UnableToParseProtoDataCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.UnableToParseProtoDataCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.RequestFailed.Reason.UnableToEncodeProtoDataCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.UnableToEncodeProtoDataCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.RequestFailed.Reason.ProtoDataViolatesSecurityPolicyCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.ProtoDataViolatesSecurityPolicyCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.RequestFailed.Reason.ZeroEventsSentCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.ZeroEventsSentCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.TranscriptReplacementAccepted.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Synced.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Synced.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.CurrentTranscript.CodingKeys;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV13RequestFailedV6ReasonOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23F180230(-1);
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23F180230((*a1 | (v4 << 8)) - 4);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23F180230((*a1 | (v4 << 8)) - 4);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23F180230((*a1 | (v4 << 8)) - 4);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return sub_23F180230(v8);
}

